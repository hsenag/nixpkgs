/* hackage-packages.nix is an auto-generated file -- DO NOT EDIT! */

{ pkgs, stdenv, callPackage }:

self: {

  "3d-graphics-examples" = callPackage
    ({ mkDerivation, GLUT, OpenGL, random }:
     mkDerivation {
       pname = "3d-graphics-examples";
       version = "0.0.0.0";
       sha256 = "1v2zv94npviggqfqabfzp7ab54nnw9wdb60y20f1lzw13an0a14q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT OpenGL random ];
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/3d-graphics-examples";
       description = "Examples of 3D graphics programming with OpenGL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "3dmodels" = callPackage
    ({ mkDerivation, attoparsec, linear, packer }:
     mkDerivation {
       pname = "3dmodels";
       version = "0.3.0";
       sha256 = "00pp8g1b59950i5ik9ycimxd284vsv1hnfgxgg1mjvxwaj2pbyhr";
       buildDepends = [ attoparsec linear packer ];
       homepage = "https://github.com/capsjac/3dmodels";
       description = "3D model parsers";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "4Blocks" = callPackage
    ({ mkDerivation, cairo, gtk, mtl }:
     mkDerivation {
       pname = "4Blocks";
       version = "0.2";
       sha256 = "1lya7320jf2cvd69prvjfwdlci2j17m21qcqaqxaczlrv4aykg6w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo gtk mtl ];
       homepage = "http://lambdacolyte.wordpress.com/2009/08/06/tetris-in-haskell/";
       description = "A tetris-like game (works with GHC 6.8.3 and Gtk2hs 0.9.13)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ABList" = callPackage
    ({ mkDerivation, HUnit, linear, newtype, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "ABList";
       version = "0.0.3";
       sha256 = "06hj35k3lbcxh9yn70sa4bw0jafxmxyi2237d6r48dznk4a5fvq1";
       buildDepends = [ linear newtype ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "An alternating list of two types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-Angle" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-Angle";
       version = "1.0";
       sha256 = "0ra97a4im3w2cq3mf17j8skn6bajs7rw7d0mmvcwgb9jd04b0idm";
       description = "Angles in degrees and radians";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-Boolean" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-Boolean";
       version = "1.1.0";
       sha256 = "0id19wgp2jg2pf1gdhfzkyknjj19jii3pz0lva29x3lcck38rw2b";
       description = "Handle Boolean values generatically";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-BuildPlatform" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-BuildPlatform";
       version = "1.1.0";
       sha256 = "0vlhakc6mc4zzyvb54rgmskkj8hp43zy35giimk0g7i5068r2czh";
       description = "Detect which OS you're running on";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-Colour" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-Colour";
       version = "1.1.6";
       sha256 = "02v3b1pfhwnf3cl8kbxfkk0a7hdp0gqq5v4w9ka32zl1p007rz19";
       description = "Efficient RGB colour types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-EasyRaster-GTK" = callPackage
    ({ mkDerivation, gtk }:
     mkDerivation {
       pname = "AC-EasyRaster-GTK";
       version = "1.1.3";
       sha256 = "082il76032biyan170p4qp13154nmkzil4v2wv7fmjn9z7v8w49b";
       buildDepends = [ gtk ];
       description = "GTK+ pixel plotting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-HalfInteger" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-HalfInteger";
       version = "1.2.1";
       sha256 = "0wwnb7a6dmzgh122qg322mi3vpyk93xw52cql6dx18sqdbxyxdbb";
       description = "Efficient half-integer type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-MiniTest" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "AC-MiniTest";
       version = "1.1.1";
       sha256 = "0ish59q50npljgmfrcffcyx6scf99xdncmy1kpwy1i5622r1kcps";
       buildDepends = [ transformers ];
       description = "A simple test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-PPM" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-PPM";
       version = "1.1.1";
       sha256 = "0y2wzwfnlx50rzkdigmjy3dg5f91pmkf4gmnzjhs3r916d296gkq";
       description = "Trivial package for writing PPM images";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-Random" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-Random";
       version = "0.1";
       sha256 = "1c00pcz0c4l2sdaj61zcmw68ckmqb7xlfykv489xms7ak4xl8nc1";
       description = "A pure Haskell PRNG";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-Terminal" = callPackage
    ({ mkDerivation, ansi-terminal }:
     mkDerivation {
       pname = "AC-Terminal";
       version = "1.0";
       sha256 = "0d0vdqf7i49d2hsdm7x9ad88l7kfc1wvkzppzhs8k9xf4gbrvl43";
       buildDepends = [ ansi-terminal ];
       description = "Trivial wrapper over ansi-terminal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-VanillaArray" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-VanillaArray";
       version = "1.1.2";
       sha256 = "044kiwc5g2irky0k3fg9l2qqnvcnh9vdx0yz8m1awnkab6mk0i3v";
       description = "Immutable arrays with plain integer indicies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-Vector" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AC-Vector";
       version = "2.3.2";
       sha256 = "04ahf6ldfhvzbml9xd6yplygn8ih7b8zz7cw03hkr053g5kzylay";
       description = "Efficient geometric vectors and transformations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AC-Vector-Fancy" = callPackage
    ({ mkDerivation, AC-Angle, AC-Vector }:
     mkDerivation {
       pname = "AC-Vector-Fancy";
       version = "2.4.0";
       sha256 = "0wcan2s75c89s1mxhcvvjgbpn8xqrhmwnfbsrszkzydw3x46465y";
       buildDepends = [ AC-Angle AC-Vector ];
       description = "Fancy type-system stuff for AC-Vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ADPfusion" = callPackage
    ({ mkDerivation, deepseq, primitive, PrimitiveArray, QuickCheck
     , repa, strict, transformers, vector
     }:
     mkDerivation {
       pname = "ADPfusion";
       version = "0.2.1.0";
       sha256 = "0z6a6j57jn72pqzljsg1pwjm2vwzfnl6rjzz853vbi9djp28kcd9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         deepseq primitive PrimitiveArray QuickCheck repa strict
         transformers vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/adpfusion";
       description = "Efficient, high-level dynamic programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AERN-Basics" = callPackage
    ({ mkDerivation, criterion, deepseq, QuickCheck, random
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "AERN-Basics";
       version = "2011.1.0.1";
       sha256 = "1zzm6974mfwzswhx9dfh4w1qrlk44w5k8pajqmrgs8hwnx3k8awa";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         criterion deepseq QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://code.google.com/p/aern/";
       description = "foundational type classes for approximating exact real numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AERN-Net" = callPackage
    ({ mkDerivation, AERN-Real, AERN-RnToRm, binary, html, stm, time }:
     mkDerivation {
       pname = "AERN-Net";
       version = "0.2.1.1";
       sha256 = "1h7yw85zp8dlyjfi5mr3zvb8cn3xbfxw19nqkz6r7v6s5hfg50qg";
       buildDepends = [ AERN-Real AERN-RnToRm binary html stm time ];
       homepage = "http://www-users.aston.ac.uk/~konecnym/DISCERN";
       description = "Compositional lazy dataflow networks for exact real number computation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AERN-Real" = callPackage
    ({ mkDerivation, AERN-Basics, criterion, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "AERN-Real";
       version = "2011.1.0.1";
       sha256 = "1m8fc3agvm5r5vgzsxhjdmmxl679n68isa5cwbbfrv38c20s2p6v";
       buildDepends = [
         AERN-Basics criterion QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://code.google.com/p/aern/";
       description = "arbitrary precision real interval arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AERN-Real-Double" = callPackage
    ({ mkDerivation, AERN-Basics, AERN-Real, AERN-Real-Interval
     , criterion, ieee-utils, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "AERN-Real-Double";
       version = "2011.1.0.2";
       sha256 = "0hwbw2nibgfddqfhbq8fcm1anibdfa9kgbbxnsbxvkkl6l52cbg2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         AERN-Basics AERN-Real AERN-Real-Interval criterion ieee-utils
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://code.google.com/p/aern/";
       description = "arbitrary precision real interval arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AERN-Real-Interval" = callPackage
    ({ mkDerivation, AERN-Basics, AERN-Real, deepseq, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "AERN-Real-Interval";
       version = "2011.1.0.1";
       sha256 = "1myh6r2cg4sg7k21y3p415pwm2vjfggi92631wzcjxk8ygcafbwv";
       buildDepends = [
         AERN-Basics AERN-Real deepseq QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://code.google.com/p/aern/";
       description = "arbitrary precision real interval arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AERN-RnToRm" = callPackage
    ({ mkDerivation, AERN-Real, binary, filepath, html, QuickCheck
     , time
     }:
     mkDerivation {
       pname = "AERN-RnToRm";
       version = "0.5.0.1";
       sha256 = "0rx93h1h303r4gf9jq32gl08lg4jkfc12kzjnjxampwx75b4lgjv";
       buildDepends = [ AERN-Real binary filepath html QuickCheck time ];
       homepage = "http://www-users.aston.ac.uk/~konecnym/DISCERN";
       description = "polynomial function enclosures (PFEs) approximating exact real functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AERN-RnToRm-Plot" = callPackage
    ({ mkDerivation, AERN-Real, AERN-RnToRm, binary, filepath, glade
     , glib, gtk, gtkglext, mtl, OpenGL, stm, time
     }:
     mkDerivation {
       pname = "AERN-RnToRm-Plot";
       version = "0.2.0.3";
       sha256 = "0zpp0s90q2jhpagf6iswbmm6hyi0x2hns8vqd5swwa8d258avrbq";
       buildDepends = [
         AERN-Real AERN-RnToRm binary filepath glade glib gtk gtkglext mtl
         OpenGL stm time
       ];
       homepage = "http://www-users.aston.ac.uk/~konecnym/DISCERN";
       description = "GL plotting of polynomial function enclosures (PFEs)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AES" = callPackage
    ({ mkDerivation, cereal, monads-tf, random, transformers }:
     mkDerivation {
       pname = "AES";
       version = "0.2.9";
       sha256 = "12n484dpjr08910ni1vvw030g9p37lz68l5lw0212rvklkva6wzc";
       buildDepends = [ cereal monads-tf random transformers ];
       description = "Fast AES encryption/decryption for bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AGI" = callPackage
    ({ mkDerivation, mtl, network, parsec, random, syb }:
     mkDerivation {
       pname = "AGI";
       version = "1.3";
       sha256 = "1h0hcdvdjs635inq96fpyh2g3d482ilpqn474vk1xkycww0xgsnv";
       buildDepends = [ mtl network parsec random syb ];
       homepage = "http://src.seereason.com/haskell-agi";
       description = "A library for writing AGI scripts for Asterisk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ALUT" = callPackage
    ({ mkDerivation, alut, OpenAL, OpenGL }:
     mkDerivation {
       pname = "ALUT";
       version = "2.3.0.1";
       sha256 = "0riylbbcnpc2lnjfj9ky1srs0svl2bny2scg6p3v8gmp27linlgr";
       buildDepends = [ OpenAL OpenGL ];
       extraLibraries = [ alut ];
       homepage = "https://github.com/haskell-openal/ALUT";
       description = "A binding for the OpenAL Utility Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AMI" = callPackage
    ({ mkDerivation, mtl, network, pureMD5, stm }:
     mkDerivation {
       pname = "AMI";
       version = "0.1";
       sha256 = "00w6kcikc5ac26786fwshwbh8ndj9aq1w7wz263j5rnhdf12irky";
       buildDepends = [ mtl network pureMD5 stm ];
       homepage = "http://redmine.iportnov.ru/projects/ami";
       description = "Low-level bindings for Asterisk Manager Interface (AMI)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ANum" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ANum";
       version = "0.1.1.0";
       sha256 = "0ilgz1akz66cwwvxd8dkz2fq9gyplc4m206jpmp380ys5n37b4q9";
       homepage = "https://github.com/DanBurton/ANum#readme";
       description = "Num instance for Applicatives provided via the ANum newtype";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ASN1" = callPackage
    ({ mkDerivation, HUnit, mtl, NewBinary, QuickCheck }:
     mkDerivation {
       pname = "ASN1";
       version = "0.0.1.1";
       sha256 = "188mf1k8p4h8ryngpcs6ldz9n2590h9wfxzxsj396is5r8rxscmh";
       buildDepends = [ HUnit mtl NewBinary QuickCheck ];
       homepage = "http://www.haskell.org/asn1";
       description = "ASN.1 support for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AVar" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AVar";
       version = "0.0.5.1";
       sha256 = "0jggzjyms1w4p1ynv8m5yvya64kbxkjdis7wvy3lildmp0w0x0c7";
       description = "Mutable variables with Exception handling and concurrency support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AWin32Console" = callPackage
    ({ mkDerivation, regex-compat, Win32 }:
     mkDerivation {
       pname = "AWin32Console";
       version = "1.1";
       sha256 = "0il5bngj4919mmpm0rwmbx74ih3sfbqkaph6w12p49fs466sxkh1";
       buildDepends = [ regex-compat Win32 ];
       description = "A binding to a part of the ANSI escape code for the console";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AbortT-monadstf" = callPackage
    ({ mkDerivation, AbortT-transformers, monads-tf }:
     mkDerivation {
       pname = "AbortT-monadstf";
       version = "1.0";
       sha256 = "1ijv4bs299ijqbkspbg1kry627ra6p6qlkd74q4y2pvamrm4dn6f";
       buildDepends = [ AbortT-transformers monads-tf ];
       homepage = "http://github.com/gcross/AbortT-transformers";
       description = "Monads-tf instances for the AbortT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AbortT-mtl" = callPackage
    ({ mkDerivation, AbortT-transformers, mtl }:
     mkDerivation {
       pname = "AbortT-mtl";
       version = "1.0";
       sha256 = "17rp4v5ibna9fplm526x31k8df8zwkm1imv71yqzpgcqcn48pps2";
       buildDepends = [ AbortT-transformers mtl ];
       homepage = "http://github.com/gcross/AbortT-mtl";
       description = "mtl instances for the AbortT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AbortT-transformers" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "AbortT-transformers";
       version = "1.0.1";
       sha256 = "0mslnhnkc5ahwjlfhkbih3mbfzi19aaszy9hf2msbsg86mmvg3j6";
       buildDepends = [ transformers ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       homepage = "http://github.com/gcross/AbortT-transformers";
       description = "A monad and monadic transformer providing \"abort\" functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ActionKid" = callPackage
    ({ mkDerivation, gloss, gloss-juicy, hspec, lens, mtl, OpenGL
     , StateVar
     }:
     mkDerivation {
       pname = "ActionKid";
       version = "0.1.1.0";
       sha256 = "0dsfgclgx4kqjnvn54vvxcbn8l8jyy9gb06qp13hfm5l7lxfjzxq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ gloss gloss-juicy lens mtl OpenGL StateVar ];
       testDepends = [ hspec ];
       homepage = "https://github.com/egonSchiele/actionkid";
       description = "An easy-to-use video game framework for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Adaptive" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Adaptive";
       version = "0.23";
       sha256 = "0n27d8dvk0qq68zp4l5bsj5y9xqmrk9d25psrrf29mmw1f43wp8c";
       isLibrary = true;
       isExecutable = true;
       description = "Library for incremental computing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Adaptive-Blaisorblade" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Adaptive-Blaisorblade";
       version = "0.23";
       sha256 = "08iblifpyi569zh55ha5bi0nfibz0zlqiibwaimx2k1nd6n6yv5a";
       isLibrary = true;
       isExecutable = true;
       description = "Library for incremental computing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Advgame" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Advgame";
       version = "0.1.2";
       sha256 = "16grzya42pzn3zaahs77lw5n2ka138bs0g3vgi0qbxlvxwy5ikyy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       description = "Lisperati's adventure game in Lisp translated to Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AesonBson" = callPackage
    ({ mkDerivation, aeson, attoparsec, bson, hspec, HUnit, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "AesonBson";
       version = "0.2.2";
       sha256 = "1p7636bjczcwwi2c0cdzvpj95vx2fr27qnmh8pcs8hqgmisagq8s";
       buildDepends = [
         aeson attoparsec bson unordered-containers vector
       ];
       testDepends = [ aeson bson hspec HUnit text ];
       homepage = "https://github.com/nh2/AesonBson";
       description = "Mapping between Aeson's JSON and Bson objects";
       license = "unknown";
     }) {};

  "Agata" = callPackage
    ({ mkDerivation, mtl, QuickCheck, tagged }:
     mkDerivation {
       pname = "Agata";
       version = "0.2.1.1";
       sha256 = "0v8gy2gdbn9133yki7s71a7ph50xzawdvciiahr463apbn6439hm";
       buildDepends = [ mtl QuickCheck tagged ];
       description = "Generator-generator for QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Agda" = callPackage
    ({ mkDerivation, alex, binary, boxes, cpphs, data-hash, deepseq
     , emacs, equivalence, filepath, geniplate, happy, hashable
     , hashtables, haskeline, haskell-src-exts, mtl, parallel
     , QuickCheck, STMonadTrans, strict, text, time, transformers
     , unordered-containers, xhtml, zlib
     }:
     mkDerivation {
       pname = "Agda";
       version = "2.4.2.2";
       sha256 = "1hxvapnvlkx6imifswc70ng869zll0zfsygivhc2mjyhaiv10i13";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary boxes data-hash deepseq equivalence filepath geniplate
         hashable hashtables haskeline haskell-src-exts mtl parallel
         QuickCheck STMonadTrans strict text time transformers
         unordered-containers xhtml zlib
       ];
       buildTools = [ alex cpphs emacs happy ];
       postInstall = ''
         $out/bin/agda -c --no-main $(find $out/share -name Primitive.agda)
         $out/bin/agda-mode compile
       '';
       homepage = "http://wiki.portal.chalmers.se/agda/";
       description = "A dependently typed functional programming language and proof assistant";
       license = "unknown";
     }) {};

  "Agda-executable" = callPackage
    ({ mkDerivation, Agda }:
     mkDerivation {
       pname = "Agda-executable";
       version = "2.3.0.1";
       sha256 = "156nzvpmqi7yizjr4yym2ybc0iv4nqfp84qrpdxcha682k298ib1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Agda ];
       homepage = "http://wiki.portal.chalmers.se/agda/";
       description = "Command-line program for type-checking and compiling Agda programs";
       license = "unknown";
     }) {};

  "AhoCorasick" = callPackage
    ({ mkDerivation, hashable, mtl, unordered-containers }:
     mkDerivation {
       pname = "AhoCorasick";
       version = "0.0.3";
       sha256 = "171im3xhrgdzhpxmi1350323apy58pisap0dskcibd3g4jmzslza";
       buildDepends = [ hashable mtl unordered-containers ];
       homepage = "http://github.com/lymar/AhoCorasick";
       description = "Aho-Corasick string matching algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AlgorithmW" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "AlgorithmW";
       version = "0.1.0.1";
       sha256 = "0qqdd8220h6h1j7i121h84wysjrmv633md3c7sk01i1p774d67k4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://hackage.haskell.org/package/AlgorithmW";
       description = "Example implementation of Algorithm W for Hindley-Milner type inference";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Allure" = callPackage
    ({ mkDerivation, enummapset-th, filepath, LambdaHack, text }:
     mkDerivation {
       pname = "Allure";
       version = "0.4.100.0";
       sha256 = "15rkj5xab23wqr2d44xbri7hggbb3zmmka41xfiscqq4ifagfj4m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ enummapset-th filepath LambdaHack text ];
       testDepends = [ enummapset-th filepath LambdaHack text ];
       homepage = "http://allureofthestars.com";
       description = "Near-future Sci-Fi roguelike and tactical squad game";
       license = "AGPL";
     }) {};

  "AndroidViewHierarchyImporter" = callPackage
    ({ mkDerivation, cmdtheline, mtl, network, opml, QuickCheck, split
     , transformers, xml
     }:
     mkDerivation {
       pname = "AndroidViewHierarchyImporter";
       version = "0.1.0.1";
       sha256 = "1ksmxhriqy8z3fymnvhg7bwaj032nrsvq3gygfwkg3m8538v9xyc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdtheline mtl network opml QuickCheck split transformers xml
       ];
       description = "Android view hierarchy importer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Animas" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "Animas";
       version = "0.2";
       sha256 = "01vpw9s93qq8c0zymp4qzv0ljn9jrnwi3x68qx9lcjr6spa0rkvm";
       buildDepends = [ random ];
       homepage = "https://github.com/eamsden/Animas";
       description = "Updated version of Yampa: a library for programming hybrid systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Annotations" = callPackage
    ({ mkDerivation, mtl, multirec, parsec }:
     mkDerivation {
       pname = "Annotations";
       version = "0.2";
       sha256 = "0i6qicmvz1jryv4zkdcpclfwxg20yvwgx6vhf46mxjzs3kw1a6z3";
       buildDepends = [ mtl multirec parsec ];
       description = "Constructing, analyzing and destructing annotated trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ansi2Html" = callPackage
    ({ mkDerivation, mtl, parsec, xhtml }:
     mkDerivation {
       pname = "Ansi2Html";
       version = "0.9";
       sha256 = "1dqq1rnx1w0cn4w11knmxvn7qy4lg4m39dgw4rs6r2pjqzgrwarh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec xhtml ];
       homepage = "http://janzzstimmpfle.de/~jens/software/Ansi2Html/";
       description = "Convert ANSI Terminal Sequences to nice HTML markup";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ApplePush" = callPackage
    ({ mkDerivation, binary, json, mtl, network }:
     mkDerivation {
       pname = "ApplePush";
       version = "0.1";
       sha256 = "0dw52pj17fggi605zf4px852479yc6m6ksbidyw84lkys5dyll3r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary json mtl network ];
       description = "Library for Apple Push Notification Service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AppleScript" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "AppleScript";
       version = "0.2.0.1";
       sha256 = "1jmwixyv5msb3lmza7dljvm3l0x5mx8r93zr607sx9m5x9yhlsvr";
       homepage = "https://github.com/reinerp/haskell-AppleScript";
       description = "Call AppleScript from Haskell, and then call back into Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ArrayRef" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ArrayRef";
       version = "0.1.3.1";
       sha256 = "1yb209v3lab3knggplmwih1ww6qalf8v86j8ggv1gkhm5jkwz1yq";
       homepage = "http://haskell.org/haskellwiki/Library/ArrayRef";
       description = "Unboxed references, dynamic arrays and more";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AspectAG" = callPackage
    ({ mkDerivation, HList, mtl }:
     mkDerivation {
       pname = "AspectAG";
       version = "0.3.6.1";
       sha256 = "01pglvf38v5ii2w03kdlgngxbb3ih0j5bsilv5qwc9vrh2iwirhf";
       buildDepends = [ HList mtl ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/Center/AspectAG";
       description = "Attribute Grammars in the form of an EDSL";
       license = "LGPL";
     }) {};

  "AttoBencode" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, blaze-textual
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "AttoBencode";
       version = "0.3.1.0";
       sha256 = "0rzzi4asfmkg8nqlxdyq3gwg0q10hqrnvlmq4fjcxvxgvz1ys9hb";
       buildDepends = [ attoparsec blaze-builder blaze-textual ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://bitbucket.org/FlorianHartwig/attobencode";
       description = "Fast Bencode encoding and parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AttoJson" = callPackage
    ({ mkDerivation, attoparsec, bytestring-show, mtl, utf8-string }:
     mkDerivation {
       pname = "AttoJson";
       version = "0.5.10";
       sha256 = "0mavq6akhx7pjdz15ckgnmgf8z9zhi5fm97lvjpjdfiggfy191d2";
       buildDepends = [ attoparsec bytestring-show mtl utf8-string ];
       homepage = "http://github.com/konn/AttoJSON";
       description = "Simple lightweight JSON parser, generator & manipulator based on ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Attrac" = callPackage
    ({ mkDerivation, colour, GLUT, OpenGL, random }:
     mkDerivation {
       pname = "Attrac";
       version = "0.1.3";
       sha256 = "0spvvgkf33km969l524580kwn7y43rjm2k0lqp9bl60nbvlsw760";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ colour GLUT OpenGL random ];
       homepage = "http://patch-tag.com/r/rhz/StrangeAttractors";
       description = "Visualisation of Strange Attractors in 3-Dimensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Aurochs" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "Aurochs";
       version = "0.1";
       sha256 = "0n51j50qlpkgkq64n7w96qkv270lwxac1h7ariqq7w70zgdgiqf5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec ];
       description = "Yet another parser generator for C/C++";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "AutoForms" = callPackage
    ({ mkDerivation, mtl, syb-with-class, wx, wxcore }:
     mkDerivation {
       pname = "AutoForms";
       version = "0.4.2";
       sha256 = "14dd6s3j9w738dvhyhxb9q8w9m0xhd6fm0d40b3gzl5sjb6g16zf";
       buildDepends = [ mtl syb-with-class wx wxcore ];
       homepage = "http://autoforms.sourceforge.net/";
       description = "GUI library based upon generic programming (SYB3)";
       license = "LGPL";
     }) {};

  "AvlTree" = callPackage
    ({ mkDerivation, COrdering }:
     mkDerivation {
       pname = "AvlTree";
       version = "4.2";
       sha256 = "0bw6856h75wks0mfvvqqm5i31sici1hacyl5zfj225jf9gn5q7dx";
       buildDepends = [ COrdering ];
       description = "Balanced binary trees using the AVL algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BASIC" = callPackage
    ({ mkDerivation, llvm, random, timeit }:
     mkDerivation {
       pname = "BASIC";
       version = "0.1.5.0";
       sha256 = "1ypq7m09ki5wbwkvmqdl7ch40cbdfhb91kq8n17im184r5liyxlc";
       buildDepends = [ llvm random timeit ];
       description = "Embedded BASIC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BNFC" = callPackage
    ({ mkDerivation, alex, deepseq, doctest, filepath, happy, hspec
     , HUnit, mtl, QuickCheck, temporary
     }:
     mkDerivation {
       pname = "BNFC";
       version = "2.7.1";
       sha256 = "1n9l64wzga3i7ifh2k5rwhxp60gb0av5fszygw5mvr31r64cf4fp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deepseq filepath mtl ];
       testDepends = [
         deepseq doctest filepath hspec HUnit mtl QuickCheck temporary
       ];
       buildTools = [ alex happy ];
       homepage = "http://bnfc.digitalgrammars.com/";
       description = "A compiler front-end generator";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "BNFC-meta" = callPackage
    ({ mkDerivation, alex-meta, happy-meta, haskell-src-meta, syb }:
     mkDerivation {
       pname = "BNFC-meta";
       version = "0.4.0.2";
       sha256 = "0d59kmbcwsdh34hagmhhcq0d0x49wmzl6kycm9p55i7cf0zw0a5l";
       buildDepends = [ alex-meta happy-meta haskell-src-meta syb ];
       description = "Deriving Parsers and Quasi-Quoters from BNF Grammars";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "Baggins" = callPackage
    ({ mkDerivation, cairo, mtl }:
     mkDerivation {
       pname = "Baggins";
       version = "1.0";
       sha256 = "0mgxq8zqyfmwkvn91y91c2vjhrni3br0vgiih2ynlafnas1ji0bc";
       editedCabalFile = "16206xd8lm8fkvpxbm19h403264xyjki07s9lam3pgq985xbqk35";
       buildDepends = [ cairo mtl ];
       homepage = "http://pageperso.lif.univ-mrs.fr/~pierre-etienne.meunier/Baggins";
       description = "Tools for self-assembly";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Bang" = callPackage
    ({ mkDerivation, bifunctors, hmidi, mtl, stm, time, transformers }:
     mkDerivation {
       pname = "Bang";
       version = "0.1.1.0";
       sha256 = "1y68k1xsx2fksz70z5b8wdf5brk3vqsc6sih2asp4f97nwlkm5fw";
       buildDepends = [ bifunctors hmidi mtl stm time transformers ];
       homepage = "https://github.com/5outh/Bang/";
       description = "A Drum Machine DSL for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Barracuda" = callPackage
    ({ mkDerivation, adhoc-network, Crypto, dataenc, filepath, gtk
     , HaXml, heap, hsgnutls, mtl, network, parsec, pkcs1, random
     , regex-compat, stm, time, utf8-string, xml-parsec
     }:
     mkDerivation {
       pname = "Barracuda";
       version = "1.0.2";
       sha256 = "0i8b6g2jvwg5r5gi1q3fgckh675pc6viqdvncl4ycr4zf72r4jj3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         adhoc-network Crypto dataenc filepath gtk HaXml heap hsgnutls mtl
         network parsec pkcs1 random regex-compat stm time utf8-string
         xml-parsec
       ];
       homepage = "http://sep07.mroot.net/";
       description = "An ad-hoc P2P chat program";
       license = "GPL";
     }) {};

  "Befunge93" = callPackage
    ({ mkDerivation, mtl, random }:
     mkDerivation {
       pname = "Befunge93";
       version = "0.1";
       sha256 = "1hs4p5s30ml97yrr91ahy7275jh4vyvh2l5p0p3jvpfysvg9sl6l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl random ];
       homepage = "http://coder.bsimmons.name/blog/2010/05/befunge-93-interpreter-on-hackage";
       description = "An interpreter for the Befunge-93 Programming Language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BerkeleyDB" = callPackage
    ({ mkDerivation, db, extensible-exceptions }:
     mkDerivation {
       pname = "BerkeleyDB";
       version = "0.8.7";
       sha256 = "0q1qc6rds05bkxl2m3anp7x75cwinp9nhy8j0g1vaj2scasvki62";
       buildDepends = [ extensible-exceptions ];
       extraLibraries = [ db ];
       homepage = "http://www.haskell.org/haskellwiki/BerkeleyDBXML";
       description = "Berkeley DB binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BerkeleyDBXML" = callPackage
    ({ mkDerivation, BerkeleyDB, db, dbxml, xerces-c, xqilla }:
     mkDerivation {
       pname = "BerkeleyDBXML";
       version = "0.7.2";
       sha256 = "1ymdi5qi4hxaikqf8min830r1rs1z4bvy9bdybsq378v7mrgfihp";
       buildDepends = [ BerkeleyDB ];
       extraLibraries = [ db dbxml xerces-c xqilla ];
       homepage = "http://www.haskell.org/haskellwiki/BerkeleyDBXML";
       description = "Berkeley DB XML binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BerlekampAlgorithm" = callPackage
    ({ mkDerivation, besout }:
     mkDerivation {
       pname = "BerlekampAlgorithm";
       version = "0.1.0.0";
       sha256 = "14wjpfr9d8fpgl1jkpm2123lprr3hf3a6smkaflzkgxqlgcrkmyr";
       buildDepends = [ besout ];
       description = "Factorization of polynomials over finite field";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BigPixel" = callPackage
    ({ mkDerivation, bmp, gloss }:
     mkDerivation {
       pname = "BigPixel";
       version = "1.3.0";
       sha256 = "19fxxbgj67rz2fpxd6f307xd6p7blwynq6gcakjnc7kdq8ghfrgz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bmp gloss ];
       homepage = "https://github.com/mchakravarty/BigPixel";
       description = "Image editor for pixel art";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Binpack" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Binpack";
       version = "0.4.1";
       sha256 = "0am0487l7njngp2k6h3qfbhjs61d9ir9rp8iw1r5448b20n4fxas";
       description = "Common bin-packing heuristics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Biobase" = callPackage
    ({ mkDerivation, deepseq, either-unwrap, file-embed, filemanip
     , filepath, HsTools, mtl, parsec, ParsecTools, primitive
     , PrimitiveArray, split, tuple, utility-ht, vector
     , vector-read-instances, zlib
     }:
     mkDerivation {
       pname = "Biobase";
       version = "0.3.1.1";
       sha256 = "1zrslhf3aiwc3y0b628j1w93z78v9apcjm2sxyw5qcq6r48zrmcc";
       buildDepends = [
         deepseq either-unwrap file-embed filemanip filepath HsTools mtl
         parsec ParsecTools primitive PrimitiveArray split tuple utility-ht
         vector vector-read-instances zlib
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Base library for bioinformatics";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseBlast" = callPackage
    ({ mkDerivation, BiobaseXNA }:
     mkDerivation {
       pname = "BiobaseBlast";
       version = "0.0.0.1";
       sha256 = "1p7f2azq92shmxvs3n683mr5965qkmijbj4ya6333cd7nilwgl0f";
       buildDepends = [ BiobaseXNA ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "BLAST-related tools";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseDotP" = callPackage
    ({ mkDerivation, iteratee }:
     mkDerivation {
       pname = "BiobaseDotP";
       version = "0.1.0.0";
       sha256 = "0m7n3c2ly6kly146xrxzx41g3pv0cylrmzpdgv5c54x9gvb1hg7w";
       buildDepends = [ iteratee ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Vienna / DotBracket / ExtSS parsers";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseFR3D" = callPackage
    ({ mkDerivation, BiobaseXNA, filemanip, iteratee, tuple }:
     mkDerivation {
       pname = "BiobaseFR3D";
       version = "0.2.3.0";
       sha256 = "1y8aqxb8gq4k4l0i2wcrn2yi6f7lcmbhbvs4n063r4hgda6xfgch";
       buildDepends = [ BiobaseXNA filemanip iteratee tuple ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Importer for FR3D resources";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseFasta" = callPackage
    ({ mkDerivation, biocore, cmdargs, conduit, transformers }:
     mkDerivation {
       pname = "BiobaseFasta";
       version = "0.0.1.0";
       sha256 = "035pr31mrmfhmpja8llw81jyxy11aba62bfph34gf3rsi96iylnw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ biocore cmdargs conduit transformers ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "conduit-based FASTA parser";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseInfernal" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, BiobaseXNA
     , biocore, bytestring-lexing, conduit, either-unwrap, lens
     , primitive, PrimitiveArray, repa, transformers, tuple, vector
     }:
     mkDerivation {
       pname = "BiobaseInfernal";
       version = "0.7.1.0";
       sha256 = "19ga8qaqfp3jkd3mn8p1qrxv0frp4f4qkzhn0p0n8as6dlsifd2s";
       buildDepends = [
         attoparsec attoparsec-conduit BiobaseXNA biocore bytestring-lexing
         conduit either-unwrap lens primitive PrimitiveArray repa
         transformers tuple vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Infernal data structures and tools";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseMAF" = callPackage
    ({ mkDerivation, iteratee }:
     mkDerivation {
       pname = "BiobaseMAF";
       version = "0.5.0.0";
       sha256 = "0mwyyb7n232wgjipn9jsbqpcbxqms07adi5a6v14qaiynsjz4n1r";
       buildDepends = [ iteratee ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Multiple Alignment Format";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseTrainingData" = callPackage
    ({ mkDerivation, BiobaseDotP, BiobaseFR3D, BiobaseXNA, cmdargs
     , either-unwrap, iteratee, vector
     }:
     mkDerivation {
       pname = "BiobaseTrainingData";
       version = "0.1.2.3";
       sha256 = "0qqyj3y2ivxj4d1c4bl5mdi7xm649dvksl57ba0wl0awimi5xn2s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         BiobaseDotP BiobaseFR3D BiobaseXNA cmdargs either-unwrap iteratee
         vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "RNA folding training data";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseTurner" = callPackage
    ({ mkDerivation, BiobaseXNA, bytestring-lexing, conduit, filepath
     , lens, primitive, PrimitiveArray, repa, split, vector
     }:
     mkDerivation {
       pname = "BiobaseTurner";
       version = "0.3.1.1";
       sha256 = "1h6yn6nwl8ifbz8y1rq5xklhmnbbjibfi9qz4n79xmv7y9bgkbxf";
       buildDepends = [
         BiobaseXNA bytestring-lexing conduit filepath lens primitive
         PrimitiveArray repa split vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Import Turner RNA parameters";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseTypes" = callPackage
    ({ mkDerivation, primitive, vector }:
     mkDerivation {
       pname = "BiobaseTypes";
       version = "0.0.2.2";
       sha256 = "03h7a95njbsl67bbg7wfxjjlibsqhkm62f04hhv6s14cgrvh0b3g";
       buildDepends = [ primitive vector ];
       description = "(deprecated) Ring class, with several instances";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseVienna" = callPackage
    ({ mkDerivation, BiobaseTurner, BiobaseXNA, primitive
     , PrimitiveArray, vector
     }:
     mkDerivation {
       pname = "BiobaseVienna";
       version = "0.3.0.0";
       sha256 = "0bv100rmr04w8wbzabihv43lxilr0b2rm97rx54bhln1sy0ih1wj";
       buildDepends = [
         BiobaseTurner BiobaseXNA primitive PrimitiveArray vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Import Vienna energy parameters";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BiobaseXNA" = callPackage
    ({ mkDerivation, cmdargs, csv, file-embed, mtl, primitive
     , PrimitiveArray, repa, text, tuple, vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "BiobaseXNA";
       version = "0.8.3.0";
       sha256 = "0z0qm7hlacxixwnd9xdvyk05ih3wvj23zwz6mc9dgflzjq75d6n9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs csv file-embed mtl primitive PrimitiveArray repa text tuple
         vector vector-th-unbox
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Efficient RNA/DNA representations";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "BirdPP" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "BirdPP";
       version = "1.1";
       sha256 = "14wbnxjyg75vc7zwg42cpk8a1cb7gm4881c52yaq1bq053g5dsz2";
       isLibrary = false;
       isExecutable = true;
       description = "A preprocessor for Bird-style Literate Haskell comments with Haddock markup";
       license = "GPL";
     }) {};

  "BitSyntax" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "BitSyntax";
       version = "0.3.2";
       sha256 = "1kz9s9g05b5qzw9p7vvyw8zmy9sx1wzn83ay6prdyv74x0wycjbl";
       buildDepends = [ QuickCheck ];
       homepage = "http://www.imperialviolet.org/bitsyntax";
       description = "A module to aid in the (de)serialisation of binary data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Bitly" = callPackage
    ({ mkDerivation, HTTP, json2 }:
     mkDerivation {
       pname = "Bitly";
       version = "0.1.0";
       sha256 = "1pmmgg6n6pc0qvp5r4qxan32887132si0cayd0xh1g5v98fa9ari";
       buildDepends = [ HTTP json2 ];
       homepage = "http://bitbucket.org/jetxee/hs-bitly/";
       description = "A library to access bit.ly URL shortener.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BlastHTTP" = callPackage
    ({ mkDerivation, biocore, blastxml, conduit, HTTP, http-conduit
     , hxt, mtl, network, transformers
     }:
     mkDerivation {
       pname = "BlastHTTP";
       version = "1.0.1";
       sha256 = "1qxf2lqsbwmfqkzabx8qpavf3da4lq3j1v1rdsv42gl27lqhbayi";
       editedCabalFile = "025kaax8mdva3833h9rxbb2qmybiyd33xfnqbhzzzp0zig5yi0p1";
       buildDepends = [
         biocore blastxml conduit HTTP http-conduit hxt mtl network
         transformers
       ];
       homepage = "https://github.com/eggzilla/BlastHTTP";
       description = "Libary to interface with the NCBI blast REST interface";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Blobs" = callPackage
    ({ mkDerivation, HaXml, polyparse, wx, wxcore }:
     mkDerivation {
       pname = "Blobs";
       version = "0.3";
       sha256 = "09mpf3qwr38x0ljz4ziyhdcwl5j37i353wc2dkpc6hjki9p08rgl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HaXml polyparse wx wxcore ];
       homepage = "http://www.cs.york.ac.uk/fp/darcs/Blobs/";
       description = "Diagram editor";
       license = "LGPL";
     }) {};

  "BlogLiterately" = callPackage
    ({ mkDerivation, blaze-html, bool-extras, cmdargs, data-default
     , filepath, HaXml, haxr, highlighting-kate, hscolour, lens, mtl
     , pandoc, pandoc-citeproc, pandoc-types, parsec, split, strict
     , temporary, transformers, utf8-string
     }:
     mkDerivation {
       pname = "BlogLiterately";
       version = "0.7.1.7";
       sha256 = "05i0v5mrmnxbmrqrm473z6hs9j4c2jv1l81i4kdmm2wia6p93s90";
       editedCabalFile = "0k074dcfxi9pj2kxwp22byy5vjgl11yamd8djy8s23z6l7dzbvq4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-html bool-extras cmdargs data-default filepath HaXml haxr
         highlighting-kate hscolour lens mtl pandoc pandoc-citeproc
         pandoc-types parsec split strict temporary transformers utf8-string
       ];
       homepage = "http://byorgey.wordpress.com/blogliterately/";
       description = "A tool for posting Haskelly articles to blogs";
       license = "GPL";
     }) {};

  "BlogLiterately-diagrams" = callPackage
    ({ mkDerivation, BlogLiterately, diagrams-builder, diagrams-cairo
     , diagrams-lib, filepath, pandoc, safe
     }:
     mkDerivation {
       pname = "BlogLiterately-diagrams";
       version = "0.1.4.3";
       sha256 = "0p65nyslcvf4qzgrwsi59xil8i5sgh1xfyz431lf4f00nsqb0s2h";
       editedCabalFile = "0ga0zxyi5wfaqbsv7a6p5r69xr5lvxqj3hi8yqlivflvc1r6mfd9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         BlogLiterately diagrams-builder diagrams-cairo diagrams-lib
         filepath pandoc safe
       ];
       description = "Include images in blog posts with inline diagrams code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BluePrintCSS" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "BluePrintCSS";
       version = "0.1";
       sha256 = "0ryjgi70isgfv3nw3djzvb1saky40xqy536h6sr3mfpy2iqnim0c";
       buildDepends = [ mtl ];
       homepage = "http://git.ierton.ru/?p=BluePrint.git;a=summary";
       description = "Html document layout library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Blueprint" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Blueprint";
       version = "0.1";
       sha256 = "16cfmy4ndc15p6jdmyy08nqgv143dvs9xf4qg4mxa6x5r326pi94";
       homepage = "http://github.com/gcross/Blueprint";
       description = "Preview of a new build system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Bookshelf" = callPackage
    ({ mkDerivation, filepath, pandoc, pandoc-citeproc, pandoc-types
     , parseargs
     }:
     mkDerivation {
       pname = "Bookshelf";
       version = "0.4";
       sha256 = "1h23ncphq717xqvg3bhij0ypmi6whm0aibhmiwak71sjkzv604in";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath pandoc pandoc-citeproc pandoc-types parseargs
       ];
       homepage = "http://www.cse.chalmers.se/~emax/bookshelf/Manual.shelf.html";
       description = "A simple document organizer with some wiki functionality";
       license = "GPL";
     }) {};

  "Boolean" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Boolean";
       version = "0.2.3";
       sha256 = "1lsm06y7hgjp9qmlr6csf24x3wgna7sbf8dgh6sfl2rhs7fn8kgn";
       description = "Generalized booleans and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "BoundedChan" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "BoundedChan";
       version = "1.0.3.0";
       sha256 = "0vf4mlw08n056g5256cf46m5xsijng5gvjx7ccm4r132gznyl72k";
       description = "Implementation of bounded channels";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Bravo" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, mtl, parsec
     , syb
     }:
     mkDerivation {
       pname = "Bravo";
       version = "0.1.0.1";
       sha256 = "16li42rl77jvhyp14fjic66c7d6qm2fjln93gyw4bqbykai291in";
       buildDepends = [
         haskell-src-exts haskell-src-meta mtl parsec syb
       ];
       homepage = "http://www.haskell.org/haskellwiki/Bravo";
       description = "Static text template generation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Buster" = callPackage
    ({ mkDerivation, conduit, data-default, errors, hinotify, hslogger
     , hspec, hspec-expectations, http-conduit, http-types, string-qq
     , temporary, transformers, unbounded-delays, yaml
     }:
     mkDerivation {
       pname = "Buster";
       version = "0.1.1";
       sha256 = "12zchy3sqdcqdgbb7d29jrsqifz4hfdx94s514v2mmyzzr0m8xqd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         conduit data-default errors hinotify hslogger http-conduit
         http-types transformers unbounded-delays yaml
       ];
       testDepends = [
         errors hslogger hspec hspec-expectations http-conduit http-types
         string-qq temporary yaml
       ];
       homepage = "http://github.com/michaelxavier/Buster";
       description = "Hits a set of urls periodically to bust caches";
       license = stdenv.lib.licenses.mit;
     }) {};

  "CBOR" = callPackage
    ({ mkDerivation, binary, binary-bits, data-binary-ieee754, doctest
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "CBOR";
       version = "0.1.0.1";
       sha256 = "03h8lp5sm8prbphq98c7ar93rl9yfy29pvwrkrskdjhx79pd1w6q";
       buildDepends = [ binary binary-bits data-binary-ieee754 ];
       testDepends = [
         binary binary-bits data-binary-ieee754 doctest QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/orclev/CBOR";
       description = "Encode/Decode values to/from CBOR";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "CC-delcont" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "CC-delcont";
       version = "0.2";
       sha256 = "0bl71vj1ypzplx92kz27hhbpnwnxkz5g2q86m4fcmjmp4fym8kc1";
       buildDepends = [ mtl ];
       homepage = "http://code.haskell.org/~dolio/CC-delcont";
       description = "Delimited continuations and dynamically scoped variables";
       license = "unknown";
     }) {};

  "CC-delcont-alt" = callPackage
    ({ mkDerivation, CC-delcont-cxe, CC-delcont-exc, CC-delcont-ref
     , doctest, mtl
     }:
     mkDerivation {
       pname = "CC-delcont-alt";
       version = "0.1.1.1";
       sha256 = "0s6z5bcxmcx1vzgjc6r2i4898j6s3ngjjdqhggp893hmhpxlbgsv";
       buildDepends = [
         CC-delcont-cxe CC-delcont-exc CC-delcont-ref mtl
       ];
       testDepends = [ doctest mtl ];
       description = "Three new monad transformers for multi-prompt delimited control";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CC-delcont-cxe" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "CC-delcont-cxe";
       version = "0.1.0.2";
       sha256 = "1s6bql9r78yfzgarm3i4f2glhc5w8qq91adhs15cnqj6h7768a5c";
       buildDepends = [ mtl ];
       description = "A monad transformers for multi-prompt delimited control";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CC-delcont-exc" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "CC-delcont-exc";
       version = "0.1.0.0";
       sha256 = "07v388bzs8x9k1p677310rbh8baj1fdq3bhbqyvxqzx93kv8g381";
       buildDepends = [ mtl ];
       description = "A monad transformers for multi-prompt delimited control";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CC-delcont-ref" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "CC-delcont-ref";
       version = "0.1.0.0";
       sha256 = "0fzjr73id8rlrcmf0j3y1qn4jnc8incqhhkp9wl35lig20kqy82m";
       buildDepends = [ mtl ];
       description = "A monad transformers for multi-prompt delimited control using refercence cells";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CC-delcont-ref-tf" = callPackage
    ({ mkDerivation, ref-tf, transformers }:
     mkDerivation {
       pname = "CC-delcont-ref-tf";
       version = "0.1.0.2";
       sha256 = "0zavw824xcr1jhmlpz9hmabhhi459y0s7z434lxalzha01j1wfih";
       buildDepends = [ ref-tf transformers ];
       description = "A monad transformers for multi-prompt delimited control using refercence cells";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CCA" = callPackage
    ({ mkDerivation, haskell-src, syb }:
     mkDerivation {
       pname = "CCA";
       version = "0.1.5";
       sha256 = "04wiyx9z73b3m6j2mck21hngw30jvic8zg9rqpp95kjqr1bl914s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskell-src syb ];
       homepage = "not available";
       description = "preprocessor and library for Causal Commutative Arrows (CCA)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CHXHtml" = callPackage
    ({ mkDerivation, hxt-regex-xmlschema, utf8-string }:
     mkDerivation {
       pname = "CHXHtml";
       version = "0.2.0";
       sha256 = "0pr2mvcnrz3240wnpd44g3pz9x8am6vhhfvl0lyl129kvc33v99q";
       buildDepends = [ hxt-regex-xmlschema utf8-string ];
       homepage = "http://fuzzpault.com/chxhtml";
       description = "A W3C compliant (X)HTML generating library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CLASE" = callPackage
    ({ mkDerivation, filepath, mtl, parsec }:
     mkDerivation {
       pname = "CLASE";
       version = "2009.2.11";
       sha256 = "10jab7jxlhppmqqw31g653l8jmz4vz8f9h9wr2i9fjf6bipvgfi3";
       buildDepends = [ filepath mtl parsec ];
       homepage = "http://www.zonetora.co.uk/clase/";
       description = "Cursor Library for A Structured Editor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CMCompare" = callPackage
    ({ mkDerivation, BiobaseInfernal, BiobaseXNA, cmdargs, lens }:
     mkDerivation {
       pname = "CMCompare";
       version = "0.0.1.5";
       sha256 = "1ccjyn0cc8yx7fgnvsjap0swlxql3gdygb5mabzvkgk84zc3bh2b";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ BiobaseInfernal BiobaseXNA cmdargs lens ];
       homepage = "http://www.tbi.univie.ac.at/software/cmcompare/";
       description = "Infernal covariance model comparison";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "CMQ" = callPackage
    ({ mkDerivation, cereal, iproute, mtl, network, PSQueue, stm, time
     }:
     mkDerivation {
       pname = "CMQ";
       version = "0.0.12";
       sha256 = "0zskbcjdd4s8bkll7jvb8qzyq8pa52li4db9r5wg16pd2l3m0fpb";
       buildDepends = [ cereal iproute mtl network PSQueue stm time ];
       homepage = "http://github.com/viloocity/cmq/";
       description = "cwmwl udp message queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "COrdering" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "COrdering";
       version = "2.3";
       sha256 = "1lkav4wkyrraq1f6kyqfyjrxasgkayg4hmyv8a1gkr4h484b1cx8";
       description = "An algebraic data type similar to Prelude Ordering";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CPBrainfuck" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "CPBrainfuck";
       version = "1.1";
       sha256 = "041bm02xar8g6ppz6g0fdgs4ywavlcn4pqkncydx0lw5wp9ygwwn";
       isLibrary = false;
       isExecutable = true;
       description = "A simple Brainfuck interpretter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CPL" = callPackage
    ({ mkDerivation, mtl, parsec, readline }:
     mkDerivation {
       pname = "CPL";
       version = "0.0.7";
       sha256 = "1hm2slnvcp1fqdrgx505wkj3w511x9896h2hj9riyky6vg2mzgr7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec readline ];
       description = "An interpreter of Hagino's Categorical Programming Language (CPL)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CSPM-CoreLanguage" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "CSPM-CoreLanguage";
       version = "0.3.0.3";
       sha256 = "0vr6zpdz5lnpkyzwhig72pv8ncvqdjyp1nn76zpx3v6xlpzrs3q2";
       description = "Definition of a FDR-compatible CSP core-language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CSPM-FiringRules" = callPackage
    ({ mkDerivation, CSPM-CoreLanguage, mtl, parallel-tree-search
     , QuickCheck, random, tree-monad
     }:
     mkDerivation {
       pname = "CSPM-FiringRules";
       version = "0.4.3.0";
       sha256 = "0rdggf00zq51j4af6rhk4ix8rbpd82piy2al4m6ymziwflv3b70m";
       buildDepends = [
         CSPM-CoreLanguage mtl parallel-tree-search QuickCheck random
         tree-monad
       ];
       description = "Firing rules semantic of CSPM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CSPM-Frontend" = callPackage
    ({ mkDerivation, alex, dlist, either, mtl, parsec2, prettyclass
     , syb, transformers
     }:
     mkDerivation {
       pname = "CSPM-Frontend";
       version = "0.10.0.0";
       sha256 = "0wmfk9givv604ajzkg60586lz08xqcx60bnqgslpfzkh458mz9z3";
       buildDepends = [
         dlist either mtl parsec2 prettyclass syb transformers
       ];
       buildTools = [ alex ];
       description = "A CSP-M parser compatible with FDR-2.91";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CSPM-Interpreter" = callPackage
    ({ mkDerivation, CSPM-CoreLanguage, CSPM-Frontend, mtl, prettyclass
     , syb
     }:
     mkDerivation {
       pname = "CSPM-Interpreter";
       version = "0.7.0.0";
       sha256 = "0shf0bb4zqnxvclsavvxnsy697xbl5q1xjqww8makps6dirwk0qn";
       buildDepends = [
         CSPM-CoreLanguage CSPM-Frontend mtl prettyclass syb
       ];
       description = "An interpreter for CSPM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CSPM-ToProlog" = callPackage
    ({ mkDerivation, CSPM-Frontend }:
     mkDerivation {
       pname = "CSPM-ToProlog";
       version = "0.5.2.0";
       sha256 = "0qy2zdxgdm9vacm2ickf1lvyj6wrcnpifaxgh25apg9j9v6g0h12";
       buildDepends = [ CSPM-Frontend ];
       description = "some modules specific for the ProB tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CSPM-cspm" = callPackage
    ({ mkDerivation, cmdargs, CSPM-CoreLanguage, CSPM-FiringRules
     , CSPM-Frontend, CSPM-Interpreter, CSPM-ToProlog, hslua, parallel
     , prettyclass, syb, transformers, xml
     }:
     mkDerivation {
       pname = "CSPM-cspm";
       version = "0.8.0.0";
       sha256 = "1lhfq8gjls2g3xwskwa7vx1kj6n83b4msx4fc6769li4r2xn1bc9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs CSPM-CoreLanguage CSPM-FiringRules CSPM-Frontend
         CSPM-Interpreter CSPM-ToProlog hslua parallel prettyclass syb
         transformers xml
       ];
       description = "cspm command line tool for analyzing CSPM specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CTRex" = callPackage
    ({ mkDerivation, hashable, mtl, unordered-containers }:
     mkDerivation {
       pname = "CTRex";
       version = "0.6";
       sha256 = "0cjinznkvdrswbqrsha49b6hch7sjv2qq9xllx780klf01kdahi6";
       buildDepends = [ hashable mtl unordered-containers ];
       homepage = "http://www.haskell.org/haskellwiki/CTRex";
       description = "Open records using closed type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CV" = callPackage
    ({ mkDerivation, binary, bindings-DSL, c2hs, carray, deepseq
     , filepath, lazysmallcheck, mtl, mwc-random, opencv_calib3d
     , opencv_contrib, opencv_core, opencv_features2d, opencv_flann
     , opencv_gpu, opencv_highgui, opencv_imgproc, opencv_legacy
     , opencv_ml, opencv_objdetect, opencv_video, parallel, parallel-io
     , primitive, QuickCheck, storable-complex, storable-tuple, vector
     }:
     mkDerivation {
       pname = "CV";
       version = "0.3.7";
       sha256 = "0c200jn6q4y744k39jll7xw418js7y86vvihz49i8kk2316vakmr";
       buildDepends = [
         binary bindings-DSL carray deepseq filepath lazysmallcheck mtl
         mwc-random parallel parallel-io primitive QuickCheck
         storable-complex storable-tuple vector
       ];
       buildTools = [ c2hs ];
       extraLibraries = [
         opencv_calib3d opencv_contrib opencv_core opencv_features2d
         opencv_flann opencv_gpu opencv_highgui opencv_imgproc opencv_legacy
         opencv_ml opencv_objdetect opencv_video
       ];
       homepage = "http://aleator.github.com/CV/";
       description = "OpenCV based machine vision library";
       license = "GPL";
     }) {};

  "Cabal" = callPackage
    ({ mkDerivation, deepseq, extensible-exceptions, filepath, HUnit
     , QuickCheck, regex-posix, test-framework, test-framework-hunit
     , test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "Cabal";
       version = "1.20.0.2";
       sha256 = "00mz24fj3qpq6rl3n3i73x6k0jzqix24k9izrlkzg07mpjcj4k93";
       buildDepends = [ deepseq filepath time ];
       testDepends = [
         extensible-exceptions filepath HUnit QuickCheck regex-posix
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://www.haskell.org/cabal/";
       description = "A framework for packaging Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CabalSearch" = callPackage
    ({ mkDerivation, filepath, HDBC, HDBC-sqlite3 }:
     mkDerivation {
       pname = "CabalSearch";
       version = "0.0.2";
       sha256 = "181k2rybbyhjmwf1fq69hiaf14a0rzcvnv4j9w03n2v7cal4k08b";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath HDBC HDBC-sqlite3 ];
       homepage = "http://github.com/brinchj/cabalsearch";
       description = "Search cabal packages by name";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Capabilities" = callPackage
    ({ mkDerivation, compdata, free }:
     mkDerivation {
       pname = "Capabilities";
       version = "0.1.0.0";
       sha256 = "0nd5yvhbxmabs0890y9gjjiq37h8c3blpplv2m13k29zkijwad04";
       buildDepends = [ compdata free ];
       homepage = "https://github.com/Icelandjack/Capabilities";
       description = "Separate and contain effects of IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Cardinality" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Cardinality";
       version = "0.2";
       sha256 = "01bp045vl08sixvi6h0i21vvmjirnyzlmwxx8yq5njbcxrgbq6dn";
       buildDepends = [ mtl ];
       description = "Measure container capacity. Use it to safely change container.";
       license = "LGPL";
     }) {};

  "CarneadesDSL" = callPackage
    ({ mkDerivation, fgl, parsec }:
     mkDerivation {
       pname = "CarneadesDSL";
       version = "1.3";
       sha256 = "06ri47cfskvpm65zb63kjrwwhzlmcp2f0z99hqkfw216p85648a3";
       buildDepends = [ fgl parsec ];
       homepage = "http://www.cs.nott.ac.uk/~bmv/CarneadesDSL/";
       description = "An implementation and DSL for the Carneades argumentation model";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CarneadesIntoDung" = callPackage
    ({ mkDerivation, CarneadesDSL, cmdargs, Dung, fgl }:
     mkDerivation {
       pname = "CarneadesIntoDung";
       version = "1.0";
       sha256 = "0gmrc778zan5rrkb7rip61736rzx13abfzyjcj4bgdvc3fhih1rx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ CarneadesDSL cmdargs Dung fgl ];
       homepage = "http://www.cs.nott.ac.uk/~bmv/CarneadesIntoDung/";
       description = "A translation from the Carneades argumentation model into Dung's AFs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Cascade" = callPackage
    ({ mkDerivation, comonad, mtl, void }:
     mkDerivation {
       pname = "Cascade";
       version = "0.1.0.0";
       sha256 = "1ih8ydc29axckgidc5xvsdac5558gprscw667msh8qh41j9sshng";
       buildDepends = [ comonad mtl void ];
       homepage = "http://github.com/rampion/Cascade";
       description = "Playing with reified categorical composition";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "Catana" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Catana";
       version = "0.3";
       sha256 = "10m7l701p3a2w0kxi2b93g2ii6s4s71zyjypqk3mi79siv8yilif";
       buildDepends = [ mtl ];
       description = "A monad for complex manipulation of a stream";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Chart" = callPackage
    ({ mkDerivation, colour, data-default-class, lens, mtl, operational
     , time
     }:
     mkDerivation {
       pname = "Chart";
       version = "1.3.2";
       sha256 = "0y4xkqdmbyyaxf810dgz0zsfmywlx07c26s9wkk155iriz0yz4m9";
       buildDepends = [
         colour data-default-class lens mtl operational time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "A library for generating 2D Charts and Plots";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Chart-cairo" = callPackage
    ({ mkDerivation, cairo, Chart, colour, data-default-class, lens
     , mtl, operational, time
     }:
     mkDerivation {
       pname = "Chart-cairo";
       version = "1.3.2";
       sha256 = "19ghd5xav7pn3z5igbkbsa81vhlpvy55xscc42vbxx1v9f6shq7g";
       buildDepends = [
         cairo Chart colour data-default-class lens mtl operational time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "Cairo backend for Charts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Chart-diagrams" = callPackage
    ({ mkDerivation, blaze-svg, Chart, colour, data-default-class
     , diagrams-core, diagrams-lib, diagrams-postscript, diagrams-svg
     , lens, mtl, operational, SVGFonts, text, time
     }:
     mkDerivation {
       pname = "Chart-diagrams";
       version = "1.3.2";
       sha256 = "0q5qvzzl5wirlj26a6zpnyq95lpzzkwiqq0mkh25aa3qzzbg4y6g";
       buildDepends = [
         blaze-svg Chart colour data-default-class diagrams-core
         diagrams-lib diagrams-postscript diagrams-svg lens mtl operational
         SVGFonts text time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "Diagrams backend for Charts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Chart-gtk" = callPackage
    ({ mkDerivation, cairo, Chart, Chart-cairo, colour
     , data-default-class, gtk, mtl, time
     }:
     mkDerivation {
       pname = "Chart-gtk";
       version = "1.3.2";
       sha256 = "175bqh5pl4z0gx50z34afg149g94qw8sk87gbp9mavh5bnpj5a07";
       buildDepends = [
         cairo Chart Chart-cairo colour data-default-class gtk mtl time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "Utility functions for using the chart library with GTK";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Chart-simple" = callPackage
    ({ mkDerivation, cairo, Chart, Chart-cairo, Chart-gtk, colour
     , data-default-class, gtk, mtl, time
     }:
     mkDerivation {
       pname = "Chart-simple";
       version = "1.3.2";
       sha256 = "0bbf63q2zzjmz0aa1lg70jqb7rhv78d4xkqklgzci8c8w7ki1s3q";
       buildDepends = [
         cairo Chart Chart-cairo Chart-gtk colour data-default-class gtk mtl
         time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "A wrapper for the chart library to assist with basic plots (Deprecated - use the Easy module instead)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ChasingBottoms" = callPackage
    ({ mkDerivation, mtl, QuickCheck, random, syb }:
     mkDerivation {
       pname = "ChasingBottoms";
       version = "1.3.0.8";
       sha256 = "1f6jg4j17s3y7hcz9gp7cffa77p57xgzv15ng5ypcxpq603721dv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl QuickCheck random syb ];
       description = "For testing partial and infinite values";
       license = stdenv.lib.licenses.mit;
     }) {};

  "CheatSheet" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "CheatSheet";
       version = "2.9";
       sha256 = "1pw6sssdmxpsjclkhsaf1b06vlimi4w11rxy65ccyj8c9zgs2g23";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://cheatsheet.codeslower.com";
       description = "A Haskell cheat sheet in PDF and literate formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Checked" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "Checked";
       version = "0.0.0.2";
       sha256 = "1mr323rhh3lr6a5ni60n2kxz2k57763a3rrf7c6i18hxs9d4w2s4";
       buildDepends = [ text ];
       description = "Inbuilt checking for ultra reliable computing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Chitra" = callPackage
    ({ mkDerivation, binary, mtl, network }:
     mkDerivation {
       pname = "Chitra";
       version = "0.2.2";
       sha256 = "0qf6a1xmpv29hpwcrn3acfvpcx0f95dq980mv5mijzfsznz4d43k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary mtl network ];
       homepage = "https://github.com/ckkashyap/Chitra";
       description = "A platform independent mechanism to render graphics using vnc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ChristmasTree" = callPackage
    ({ mkDerivation, fgl, TTTAS, uulib }:
     mkDerivation {
       pname = "ChristmasTree";
       version = "0.2.1.1";
       sha256 = "1xng99msiyck127zv12cbksgyprwr6i6nwwjplc9c0jdfiisa9n8";
       buildDepends = [ fgl TTTAS uulib ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/Center/TTTAS";
       description = "Alternative approach of 'read' that composes grammars instead of parsers";
       license = "LGPL";
     }) {};

  "ClassLaws" = callPackage
    ({ mkDerivation, ChasingBottoms, mtl, QuickCheck }:
     mkDerivation {
       pname = "ClassLaws";
       version = "0.3.1.0";
       sha256 = "1277vn384hpxd7xnzg0gpr7ilnw5cqhsi11c24g9zsfqa36llwgk";
       buildDepends = [ ChasingBottoms mtl QuickCheck ];
       homepage = "http://wiki.portal.chalmers.se/cse/pmwiki.php/FP/ClassLaws";
       description = "Stating and checking laws for type class methods";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ClassyPrelude" = callPackage
    ({ mkDerivation, strict }:
     mkDerivation {
       pname = "ClassyPrelude";
       version = "0.1";
       sha256 = "1yvkrzd3l7ijh3fqvkbzqv5vp4nv5z26fbxy91sfwh3zqlscpim9";
       buildDepends = [ strict ];
       description = "Prelude replacement using classes instead of concrete types where reasonable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Clean" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Clean";
       version = "0.6";
       sha256 = "0kr9i13ch2wbcnxchrnx562r8ar7kb84gmk3cqxc40x5w416205f";
       description = "A light, clean and powerful utility library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Clipboard" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Clipboard";
       version = "2.2.0.3";
       sha256 = "0qpcfgpfgw426v4040ch63pc2zl7amd2ljapx4xv0j4hwc4rsqz3";
       homepage = "http://haskell.org/haskellwiki/Clipboard";
       description = "System clipboard interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ClustalParser" = callPackage
    ({ mkDerivation, cmdargs, parsec }:
     mkDerivation {
       pname = "ClustalParser";
       version = "1.0.1";
       sha256 = "0rslkg7hr6j414qpsgmjbrw474bhhrv36ns19smysx7lpkn955w4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs parsec ];
       description = "Libary for parsing Clustal tools output";
       license = "GPL";
     }) {};

  "Coadjute" = callPackage
    ({ mkDerivation, bytestring-csv, fgl, filepath, mtl, pureMD5, safe
     , utf8-string
     }:
     mkDerivation {
       pname = "Coadjute";
       version = "0.1.1";
       sha256 = "1crbs8dk93cff252c3nj2brdbjbfygpvlrm4lrp7vpnwfz2709b3";
       buildDepends = [
         bytestring-csv fgl filepath mtl pureMD5 safe utf8-string
       ];
       homepage = "http://iki.fi/matti.niemenmaa/coadjute/";
       description = "A generic build tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Codec-Compression-LZF" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Codec-Compression-LZF";
       version = "0.2";
       sha256 = "0jj2iaa632s60dckj8s46g4vrlqc8x9fndkq0kzk8rk4jzwlbwsn";
       homepage = "http://www.cs.helsinki.fi/u/ekarttun/Codec-Compression-LZF/";
       description = "LZF compression bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Codec-Image-DevIL" = callPackage
    ({ mkDerivation, libdevil }:
     mkDerivation {
       pname = "Codec-Image-DevIL";
       version = "0.2.3";
       sha256 = "1kv3hns9f0bhfb723nj9szyz3zfqpvy02azzsiymzjz4ajhqmrsz";
       extraLibraries = [ libdevil ];
       description = "An FFI interface to the DevIL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Combinatorrent" = callPackage
    ({ mkDerivation, attoparsec, cereal, deepseq, filepath, hopenssl
     , hslogger, HTTP, HUnit, mtl, network, network-bytestring, parsec
     , PSQueue, QuickCheck, random, random-shuffle, stm, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "Combinatorrent";
       version = "0.3.2";
       sha256 = "0dx5pysxyk5c0fa33khjr86zgm43jz7nwhgl0w8jngyai8b1rbra";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec cereal deepseq filepath hopenssl hslogger HTTP HUnit mtl
         network network-bytestring parsec PSQueue QuickCheck random
         random-shuffle stm test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       description = "A concurrent bittorrent client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Command" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Command";
       version = "0.0.7";
       sha256 = "043dwvjkc1m2cz0rgiib7gv19ds1vn4cmf27lyw68nmc0lcm2v3d";
       homepage = "https://github.com/tonymorris/command";
       description = "A replacement for System.Exit and System.Process";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Commando" = callPackage
    ({ mkDerivation, data-default, fsnotify, optparse-applicative
     , system-fileio, system-filepath, text
     }:
     mkDerivation {
       pname = "Commando";
       version = "1.0.0.4";
       sha256 = "1wfpxaj9j68knf1fp3zngxrc1acqvhzrzbblar4ckq9y5kxjwwsj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-default fsnotify optparse-applicative system-fileio
         system-filepath text
       ];
       homepage = "https://github.com/sordina/Commando";
       description = "Watch some files; Rerun a command";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ComonadSheet" = callPackage
    ({ mkDerivation, applicative-numbers, comonad, distributive
     , IndexedList, NestedFunctor, PeanoWitnesses, Stream, Tape
     , transformers
     }:
     mkDerivation {
       pname = "ComonadSheet";
       version = "0.3.0.0";
       sha256 = "1jpxc5ymhjdk18nggw9fjr6dmqhlz0jwwailyw9i8yzs5dzbn67z";
       buildDepends = [
         applicative-numbers comonad distributive IndexedList NestedFunctor
         PeanoWitnesses Stream Tape transformers
       ];
       homepage = "https://github.com/kwf/ComonadSheet";
       description = "A library for expressing spreadsheet-like computations as the fixed-points of comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Condor" = callPackage
    ({ mkDerivation, binary, Cabal, filepath, glider-nlp, HUnit, text
     }:
     mkDerivation {
       pname = "Condor";
       version = "0.3";
       sha256 = "0vrflmjyc1h0mfvc07p3p3wqfscyza7pyxxp7bn1glprg6c9ph5p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary filepath glider-nlp text ];
       testDepends = [ binary Cabal glider-nlp HUnit text ];
       homepage = "https://github.com/klangner/Condor";
       description = "Information retrieval library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ConfigFile" = callPackage
    ({ mkDerivation, MissingH, mtl, parsec }:
     mkDerivation {
       pname = "ConfigFile";
       version = "1.1.4";
       sha256 = "057mw146bip9wzs7j4b5xr1x24d8w0kr4i3inri5m57jkwspn25f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ MissingH mtl parsec ];
       homepage = "http://software.complete.org/configfile";
       description = "Configuration file reading & writing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ConfigFileTH" = callPackage
    ({ mkDerivation, ConfigFile, parsec }:
     mkDerivation {
       pname = "ConfigFileTH";
       version = "0.2";
       sha256 = "1349vkrnl2z0cfcvdalqf77jajhz0izmnlsbiv84vvj23n04rj9h";
       buildDepends = [ ConfigFile parsec ];
       description = "Template haskell for reading ConfigFiles";
       license = "LGPL";
     }) {};

  "Configger" = callPackage
    ({ mkDerivation, Dangerous, MissingH, mtl, parsec }:
     mkDerivation {
       pname = "Configger";
       version = "0.1";
       sha256 = "0fk7165abh4rw4jk6wy4f6y0qpakxlrs4mwrs3r2q7lz03jsyig2";
       buildDepends = [ Dangerous MissingH mtl parsec ];
       description = "Parse config files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Configurable" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Configurable";
       version = "0.1.0.0";
       sha256 = "1if0hff6fn7zjj1vh16gxf2kldibh1dkscm8n33d1admvpjpw9sb";
       homepage = "https://github.com/tel/Configurable";
       description = "Declare types as Configurable then specialize them all in one place";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ConsStream" = callPackage
    ({ mkDerivation, Stream }:
     mkDerivation {
       pname = "ConsStream";
       version = "0.1";
       sha256 = "1ywhrj2wq24my4cji5fm5cwb3j4yjwzch9hxncr7k989smjdmjpz";
       buildDepends = [ Stream ];
       homepage = "github";
       description = "Trivial re-export of Wouter Swierstra's Stream package, avoiding module name clash";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Conscript" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Conscript";
       version = "0.1.0.0";
       sha256 = "0hiz3wjnvfp9n440kmwq7a88k7m7vq5s49nq85v520j7qnf4y82n";
       isLibrary = false;
       isExecutable = true;
       homepage = "https://github.com/sordina/Conscript";
       description = "Restart a command on STDIN activity";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ConstraintKinds" = callPackage
    ({ mkDerivation, dlist, vector }:
     mkDerivation {
       pname = "ConstraintKinds";
       version = "1.3.0";
       sha256 = "0rhy5wq3v5hdryjn8pcsgqy4k772agj1rgq3021pjki7n3zm3dza";
       buildDepends = [ dlist vector ];
       description = "Repackages standard type classes with the ConstraintKinds extension";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Consumer" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Consumer";
       version = "1.2";
       sha256 = "03ham35vh49h780h7dxb6zs85rkdlry0nwi8wp6p9iamw952xi6i";
       buildDepends = [ mtl ];
       homepage = "http://src.seereason.com/ghc6103/haskell-consumer";
       description = "A monad and monad transformer for consuming streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ContArrow" = callPackage
    ({ mkDerivation, arrows }:
     mkDerivation {
       pname = "ContArrow";
       version = "0.0.5";
       sha256 = "1paj8wx2k86i5xb11scbyca4fb2fnxgln5d661mcwxvs0i91jj1b";
       buildDepends = [ arrows ];
       description = "Control.Arrow.Transformer.Cont";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Contract" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Contract";
       version = "0.1";
       sha256 = "027dv53jrfk46dmiidnnrrdvhyin60i862znp414213w72yjrbhh";
       homepage = "http://www.cs.kent.ac.uk/~oc/contracts.html";
       description = "Practical typed lazy contracts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Control-Engine" = callPackage
    ({ mkDerivation, BoundedChan, stm }:
     mkDerivation {
       pname = "Control-Engine";
       version = "1.1.0.1";
       sha256 = "1jyj42xrja8ic3lajgrfmign9n2bdfkaplnlhzcifd5wf30qj6fa";
       buildDepends = [ BoundedChan stm ];
       homepage = "http://www.haskell.org/haskellwiki/Control-Engine";
       description = "A parallel producer/consumer engine (thread pool)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Control-Monad-MultiPass" = callPackage
    ({ mkDerivation, Control-Monad-ST2, mtl, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Control-Monad-MultiPass";
       version = "0.1.0.0";
       sha256 = "0pdayn1v9dw5600fgzlag2bqy1p68i4yzpxzqna9p7jk0iyvfy0i";
       buildDepends = [ Control-Monad-ST2 mtl ];
       testDepends = [
         Control-Monad-ST2 mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/kevinbackhouse/Control-Monad-MultiPass";
       description = "A Library for Writing Multi-Pass Algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Control-Monad-ST2" = callPackage
    ({ mkDerivation, mtl, QuickCheck, SafeSemaphore, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Control-Monad-ST2";
       version = "0.1.0.1";
       sha256 = "02nl4dbh7lk2gx5vacnn9mlcbs5j4b68jj0db94j51mqwj22y0zk";
       buildDepends = [ QuickCheck SafeSemaphore ];
       testDepends = [
         mtl QuickCheck SafeSemaphore test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/kevinbackhouse/Control-Monad-ST2";
       description = "A variation on the ST monad with two type parameters";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CoreErlang" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "CoreErlang";
       version = "0.0.2";
       sha256 = "1wiwk4947h5x2swi9k6bh4zyhp849ibxhc5458kn5vipngrp4k78";
       buildDepends = [ parsec ];
       homepage = "http://github.com/amtal/CoreErlang";
       description = "Manipulating Core Erlang source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CoreFoundation" = callPackage
    ({ mkDerivation, c2hs, deepseq, filepath, network, property-list
     , tagged, text, time, transformers, vector
     }:
     mkDerivation {
       pname = "CoreFoundation";
       version = "0.1";
       sha256 = "0mra2aswl0gfic19l55i63a6il6i13caph56fdk8g7shcw3j605l";
       buildDepends = [
         deepseq filepath network property-list tagged text time
         transformers vector
       ];
       buildTools = [ c2hs ];
       homepage = "https://github.com/reinerp/CoreFoundation";
       description = "Bindings to Mac OSX's CoreFoundation framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Coroutine" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Coroutine";
       version = "0.1.0.0";
       sha256 = "1cad9j7ivd6mfcff44773v8z3z2ilparxfikbnv0gab6csc9p1nw";
       description = "Type-safe coroutines using lightweight session types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "CouchDB" = callPackage
    ({ mkDerivation, HTTP, HUnit, json, mtl, network, utf8-string }:
     mkDerivation {
       pname = "CouchDB";
       version = "1.2";
       sha256 = "0a9g0iblfyqppcy1ni3ac8f3yv5km95bfblhwqlsk6khydi5ka98";
       buildDepends = [ HTTP json mtl network utf8-string ];
       testDepends = [ HTTP HUnit json mtl network utf8-string ];
       homepage = "http://github.com/arjunguha/haskell-couchdb/";
       description = "CouchDB interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Craft3e" = callPackage
    ({ mkDerivation, HUnit, mtl, QuickCheck, time }:
     mkDerivation {
       pname = "Craft3e";
       version = "0.1.0.10";
       sha256 = "1qrsjkwr1njdsyiryskdjmy6nhbbzin4r0ja7mib26injzmrx45p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit mtl QuickCheck time ];
       homepage = "http://www.haskellcraft.com/";
       description = "Code for Haskell: the Craft of Functional Programming, 3rd ed";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Crypto" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, random }:
     mkDerivation {
       pname = "Crypto";
       version = "4.2.5.1";
       sha256 = "0rmgl0a4k6ys2lc6d607g28c2p443a46dla903rz5aha7m9y1mba";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit QuickCheck random ];
       description = "Collects together existing Haskell cryptographic functions into a package";
       license = "unknown";
     }) {};

  "CurryDB" = callPackage
    ({ mkDerivation, async, attoparsec, attoparsec-conduit, binary
     , blaze-builder, blaze-textual, conduit, data-default, doctest
     , fast-logger, filepath, hashable, hspec, lens, lifted-base
     , monad-control, monad-logger, mtl, network, network-conduit
     , optparse-applicative, stm, system-fileio, system-filepath, text
     , time, transformers, transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "CurryDB";
       version = "0.1.1.0";
       sha256 = "1mjgxbmwf37wqbdbhfbq3pj4mmgkf1w0lv49gagx1m5yny21q3l3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async attoparsec attoparsec-conduit binary blaze-builder
         blaze-textual conduit data-default fast-logger hashable lens
         lifted-base monad-control monad-logger mtl network network-conduit
         optparse-applicative stm system-fileio system-filepath text time
         transformers transformers-base unordered-containers
       ];
       testDepends = [
         conduit doctest filepath hspec lifted-base mtl stm
       ];
       description = "CurryDB: In-memory Key/Value Database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DAG-Tournament" = callPackage
    ({ mkDerivation, cairo, filepath, gtk, mtl, time }:
     mkDerivation {
       pname = "DAG-Tournament";
       version = "0.1";
       sha256 = "1yyr63r6ziljvcxacs7zn66lnkzgmlvcr36ic60c3z1r2rd2nflk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo filepath gtk mtl time ];
       description = "Real-Time Game Tournament Evaluator";
       license = "GPL";
     }) {};

  "DAV" = callPackage
    ({ mkDerivation, case-insensitive, data-default, either, errors
     , exceptions, http-client, http-client-tls, http-types, lens, mtl
     , network, network-uri, optparse-applicative, transformers
     , transformers-base, utf8-string, xml-conduit, xml-hamlet
     }:
     mkDerivation {
       pname = "DAV";
       version = "1.0.3";
       sha256 = "1wrs3rdk4sarzi4w1pma8h751mjw5x1l8c6w30wv7fg0rmk2cayd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         case-insensitive data-default either errors exceptions http-client
         http-client-tls http-types lens mtl network network-uri
         optparse-applicative transformers transformers-base utf8-string
         xml-conduit xml-hamlet
       ];
       homepage = "http://floss.scru.org/hDAV";
       description = "RFC 4918 WebDAV support";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "DBlimited" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "DBlimited";
       version = "0.1.1";
       sha256 = "1lic2ml1q16idg9rk2ky2xi030kln4m8nz1vyvy7w37qxhddvl2f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec ];
       homepage = "http://projects.haskell.org/DBlimited/";
       description = "A command-line SQL interface for flat files (tdf,csv,etc.)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DBus" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "DBus";
       version = "0.5.1";
       sha256 = "0l212yy40w8sjkv5m7rnd24fkihvnadv7szf10g9n5r34m4jb6lh";
       homepage = "https://github.com/alexkay/hdbus";
       description = "D-Bus bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DOM" = callPackage
    ({ mkDerivation, mtl, WebBits }:
     mkDerivation {
       pname = "DOM";
       version = "2.0.1";
       sha256 = "13zj4jg78y5s05gfi3j83izxw6d2csbvznd7mq900zlv4xwddw2b";
       buildDepends = [ mtl WebBits ];
       description = "DOM Level 2 bindings for the WebBits package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DP" = callPackage
    ({ mkDerivation, list-tries, mtl, QuickCheck, safe, semiring }:
     mkDerivation {
       pname = "DP";
       version = "0.1.1";
       sha256 = "03gjwkzna2mf0a103g0kiwnbd9ra6hss6vm73i7vhl87zgrwsh8z";
       buildDepends = [ list-tries mtl QuickCheck safe semiring ];
       homepage = "http://github.com/srush/SemiRings/tree/master";
       description = "Pragmatic framework for dynamic programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DPM" = callPackage
    ({ mkDerivation, alex, convertible, darcs, filepath, happy, HSH
     , HTF, HTTP, mtl, network, regex-posix, split, syb, time
     }:
     mkDerivation {
       pname = "DPM";
       version = "0.3.0.0";
       sha256 = "03rf2s9qinfahqsc870cxv5117g4hmqza2dbj7s5hi50sh32xkjc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         convertible darcs filepath HSH HTF HTTP mtl network regex-posix
         split syb time
       ];
       buildTools = [ alex happy ];
       description = "Darcs Patch Manager";
       license = "GPL";
     }) {};

  "DRBG" = callPackage
    ({ mkDerivation, cereal, cipher-aes128, crypto-api
     , cryptohash-cryptoapi, entropy, mtl, parallel, prettyclass, tagged
     }:
     mkDerivation {
       pname = "DRBG";
       version = "0.5.3";
       sha256 = "197kp2bchkj3zrl3f06glba9lbjf51mp710sx0qj8i4spvf3jfr8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal cipher-aes128 crypto-api cryptohash-cryptoapi entropy mtl
         parallel prettyclass tagged
       ];
       description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DSH" = callPackage
    ({ mkDerivation, aeson, algebra-dag, algebra-sql, ansi-wl-pprint
     , dlist, either, HDBC, HDBC-postgresql, HUnit, kure, mtl
     , QuickCheck, semigroups, set-monad, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "DSH";
       version = "0.10.0.2";
       sha256 = "02a8gfn5ji2n606ak1gs4syk0c97zvyi4146w5zy6gn21g4d3fa7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson algebra-dag algebra-sql ansi-wl-pprint dlist either HDBC
         HDBC-postgresql kure mtl semigroups set-monad text
       ];
       testDepends = [
         HDBC HDBC-postgresql HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text
       ];
       description = "Database Supported Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DSTM" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "DSTM";
       version = "0.1.2";
       sha256 = "084yscqbwypkb32avjm2b92a7s4qpvps3pjfgpy14sligww3hifb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network ];
       description = "A framework for using STM within distributed systems";
       license = "LGPL";
     }) {};

  "DTC" = callPackage
    ({ mkDerivation, haskell-src-exts }:
     mkDerivation {
       pname = "DTC";
       version = "1.1.0.1";
       sha256 = "0m3697zw0j2l9fxx8flr83n8x03pva1hn74rgilgxdrsrifhds5l";
       buildDepends = [ haskell-src-exts ];
       homepage = "https://github.com/Daniel-Diaz/DTC";
       description = "Data To Class transformation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Dangerous" = callPackage
    ({ mkDerivation, MaybeT, mtl }:
     mkDerivation {
       pname = "Dangerous";
       version = "0.3.2";
       sha256 = "0pnywhva7s5xp9xlxk6h56n3fjflna6zhk5qdb8wax7i1qbp85vs";
       buildDepends = [ MaybeT mtl ];
       description = "Monads for operations that can exit early and produce warnings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Dao" = callPackage
    ({ mkDerivation, binary, Crypto, data-binary-ieee754, deepseq
     , filepath, mtl, random, time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "Dao";
       version = "0.1.0.2";
       sha256 = "1f7svqvlywj0jgzssdgrhvbbfm0yjnq0qr2c7xqc501y6wr3msym";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary Crypto data-binary-ieee754 deepseq filepath mtl random time
         transformers utf8-string
       ];
       testDepends = [
         binary Crypto data-binary-ieee754 deepseq filepath mtl random time
         transformers utf8-string
       ];
       description = "Dao is meta programming language with its own built-in interpreted language, designed with artificial intelligence applications in mind";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "DarcsHelpers" = callPackage
    ({ mkDerivation, HaXml, mtl, parsec, safe, xml-parsec }:
     mkDerivation {
       pname = "DarcsHelpers";
       version = "0.1";
       sha256 = "02nqaphxd3xlh191wxpx3rcixms70v8d6h4a3lxg24d7lcyf82n3";
       buildDepends = [ HaXml mtl parsec safe xml-parsec ];
       description = "Code used by Patch-Shack that seemed sensible to open for reusability";
       license = "GPL";
     }) {};

  "Data-Hash-Consistent" = callPackage
    ({ mkDerivation, digest, utf8-string, vector, vector-algorithms }:
     mkDerivation {
       pname = "Data-Hash-Consistent";
       version = "0.1.1";
       sha256 = "1vblfzndfzb458j6ygfcq0mfzzc5c87gwpmcx31v10fxpqnfmm65";
       buildDepends = [ digest utf8-string vector vector-algorithms ];
       homepage = "https://github.com/bradclawsie/haskell-Data.Hash.Consistent";
       description = "Provide a simple consistent hashing mechanism";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Data-Rope" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Data-Rope";
       version = "0.2";
       sha256 = "0zvp9h06f2ylkn325d35cap3y67zpfyc70nqad3426p64p1xmnrw";
       description = "Ropes, an alternative to (Byte)Strings";
       license = "GPL";
     }) {};

  "DataTreeView" = callPackage
    ({ mkDerivation, deepseq, glib, gtk, lifted-base, ListLike
     , MissingH, monad-control, mtl, syb, transformers-base
     }:
     mkDerivation {
       pname = "DataTreeView";
       version = "0.1.1";
       sha256 = "0z54kr79bjv8w1gnsrxq9vkwdhasdwzrsi48q7ndsg8x7k30gpdj";
       buildDepends = [
         deepseq glib gtk lifted-base ListLike MissingH monad-control mtl
         syb transformers-base
       ];
       description = "A GTK widget for displaying arbitrary Data.Data.Data instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Deadpan-DDP" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, doctest, IfElse, lens
     , mtl, network, network-uri, QuickCheck, safe, scientific, stm
     , text, transformers, unordered-containers, uuid, vector
     , websockets
     }:
     mkDerivation {
       pname = "Deadpan-DDP";
       version = "0.5.0.0";
       sha256 = "1kay7wy4rda71s0kbdc81zgb1dd1g8484p1ywcjcqf2rid0dc0xx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring IfElse lens mtl network network-uri safe
         scientific stm text transformers unordered-containers uuid vector
         websockets
       ];
       testDepends = [ doctest QuickCheck ];
       homepage = "http://github.com/sordina/Deadpan-DDP";
       description = "Write clients for Meteor's DDP Protocol";
       license = stdenv.lib.licenses.mit;
     }) {};

  "DebugTraceHelpers" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "DebugTraceHelpers";
       version = "0.12";
       sha256 = "0yjv3awhp3jsfqqn36xc0jpisp4hfypx3hkibad3yqrrn61bkzy8";
       buildDepends = [ mtl ];
       description = "Convenience functions and instances for Debug.Trace";
       license = "GPL";
     }) {};

  "Decimal" = callPackage
    ({ mkDerivation, deepseq, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Decimal";
       version = "0.4.2";
       sha256 = "0qa2z2lq1hrvakhyhj624mg8sd05ikhb66zwpa6x9vcyji93dxf5";
       buildDepends = [ deepseq ];
       testDepends = [
         deepseq HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
       description = "Decimal numbers with variable precision";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DecisionTree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "DecisionTree";
       version = "0.0";
       sha256 = "14yprfh2b5x7dswp6kyaym3z2f32nqvgrfhvwsiv7brxq80cfvbd";
       homepage = "http://page.mi.fu-berlin.de/~aneumann/decisiontree.html";
       description = "A very simple implementation of decision trees for discrete attributes";
       license = "LGPL";
     }) {};

  "DeepArrow" = callPackage
    ({ mkDerivation, haskell-src, mtl, TypeCompose }:
     mkDerivation {
       pname = "DeepArrow";
       version = "0.4.0";
       sha256 = "1jbvb8yk291iimpqi8h302r8554k4j2p3k42znzppv1wqrbhvjyc";
       buildDepends = [ haskell-src mtl TypeCompose ];
       homepage = "http://haskell.org/haskellwiki/DeepArrow";
       description = "Arrows for \"deep application\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DefendTheKing" = callPackage
    ({ mkDerivation, binary, GLUT, HTTP, MaybeT, mtl, network, peakachu
     , random, time, utility-ht, zlib
     }:
     mkDerivation {
       pname = "DefendTheKing";
       version = "0.3";
       sha256 = "1qnf62c91q94galndi0f7pfyzvk0qwi3gzhwcazkwinildjy8zw6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary GLUT HTTP MaybeT mtl network peakachu random time utility-ht
         zlib
       ];
       homepage = "http://github.com/yairchu/defend/tree";
       description = "A simple RTS game";
       license = "GPL";
     }) {};

  "DescriptiveKeys" = callPackage
    ({ mkDerivation, xmonad, xmonad-contrib }:
     mkDerivation {
       pname = "DescriptiveKeys";
       version = "0.0.4";
       sha256 = "0ywipcmnr3ysmx8m61yrymyn10lnizjfkk2q2scdfkrkgh7ayj7v";
       buildDepends = [ xmonad xmonad-contrib ];
       homepage = "https://bitbucket.org/dibblego/descriptive-keys/";
       description = "A library for specifying xmonad key bindings with functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Dflow" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, stm, test-framework
     , test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "Dflow";
       version = "0.0.1";
       sha256 = "00gzs5fdybfrvqidw4qzk6i69qzq4jaljzhb49ah2hsv3gqjr1iq";
       buildDepends = [ QuickCheck stm time ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Processing Real-time event streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Diff" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Diff";
       version = "0.3.0";
       sha256 = "0k7fj4icnh25x21cmrnbqq0sjgxrr2ffhn8bz89qmy5h9dznvy98";
       description = "O(ND) diff algorithm in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DifferenceLogic" = callPackage
    ({ mkDerivation, fgl, FirstOrderTheory, HUnit }:
     mkDerivation {
       pname = "DifferenceLogic";
       version = "0.1.0.4";
       sha256 = "0ylpn6bksf6alxzk45cg88ff8xgffh88x3csvjlhb6zn8ik0w99a";
       buildDepends = [ fgl FirstOrderTheory HUnit ];
       homepage = "https://github.com/dillonhuff/DifferenceLogic";
       description = "A theory solver for conjunctions of literals in difference logic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DifferentialEvolution" = callPackage
    ({ mkDerivation, deepseq, fclabels, mtl, mwc-random, parallel
     , primitive, vector
     }:
     mkDerivation {
       pname = "DifferentialEvolution";
       version = "0.0.2";
       sha256 = "0z16g40n369d2wqljnrkmpd18149ny8nh2pd13hkkjnq5n6k209w";
       buildDepends = [
         deepseq fclabels mtl mwc-random parallel primitive vector
       ];
       homepage = "http://yousource.it.jyu.fi/optimization-with-haskell";
       description = "Global optimization using Differential Evolution";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Digit" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Digit";
       version = "0.0.3";
       sha256 = "0cdsmy9km9wpywqprdymn9bd982ba859px2giswz41xh6pbjri8w";
       buildDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/tonymorris/digit";
       description = "A data-type representing digits 0-9";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DimensionalHash" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "DimensionalHash";
       version = "0.1.5.2";
       sha256 = "0bbg9w5n3b296g884y8qvgzsndqhzwh0mkn3dlp9nx4a7i321c97";
       description = "An n-dimensional hash using Morton numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DirectSound" = callPackage
    ({ mkDerivation, dsound, Win32 }:
     mkDerivation {
       pname = "DirectSound";
       version = "0.0.0";
       sha256 = "1x78y1na375nwgk4izsjprj3yrg0xbrhqv6nrzfbvbfdyqlf5kyz";
       buildDepends = [ Win32 ];
       extraLibraries = [ dsound ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Partial binding to the Microsoft DirectSound API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DisTract" = callPackage
    ({ mkDerivation, Cabal, chunks, filepath, hinstaller, parsec, time
     , xhtml
     }:
     mkDerivation {
       pname = "DisTract";
       version = "0.2.5";
       sha256 = "0pnlk09jsallyparwdfcy7jmqjjiprp2pqlg9agp6xbw5xmnkzwb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal chunks filepath hinstaller parsec time xhtml
       ];
       homepage = "http://distract.wellquite.org/";
       description = "Distributed Bug Tracking System";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DiscussionSupportSystem" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, doctest, html, parsers
     }:
     mkDerivation {
       pname = "DiscussionSupportSystem";
       version = "0.11.0.3";
       sha256 = "0iqcv3b06r9sqj1adxfq08vq5mlq4b7z88c2cw4qa7l9xw2p2js3";
       buildDepends = [ blaze-html blaze-markup html parsers ];
       testDepends = [ doctest ];
       homepage = "https://github.com/minamiyama1994/DiscussionSupportSystem";
       description = "Discussion support system";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Dish" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Dish";
       version = "0.0.0.5";
       sha256 = "1xhz0yb8xrjdznvx5prpl7r8k73n78n6gmshqbraq5jdh3vcnisx";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/zcourts/Dish";
       description = "Hash modules (currently Murmur3)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DistanceTransform" = callPackage
    ({ mkDerivation, HUnit, primitive, test-framework
     , test-framework-hunit, vector
     }:
     mkDerivation {
       pname = "DistanceTransform";
       version = "0.1.2";
       sha256 = "0c77sbx6qls8wfhv0wbappbkgfab046ls8mqs32qj02k549s6fk5";
       buildDepends = [ primitive vector ];
       testDepends = [ HUnit test-framework test-framework-hunit vector ];
       description = "Distance transform function";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DistanceUnits" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "DistanceUnits";
       version = "0.1.0.1";
       sha256 = "0ls6rq4nqn3z9h9lagl8sff9q94zfm6gssa2jj1zfyfxl5869bas";
       homepage = "https://github.com/gambogi/DistanceUnits";
       description = "A comprehensive distance library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DnaProteinAlignment" = callPackage
    ({ mkDerivation, ADPfusion, ansi-wl-pprint, BiobaseBlast
     , BiobaseFasta, BiobaseXNA, biocore, cmdargs, conduit, dlist
     , parallel, PrimitiveArray, repa, split, vector
     }:
     mkDerivation {
       pname = "DnaProteinAlignment";
       version = "0.0.0.1";
       sha256 = "00c74anpm3varyf0man1i213dksxvh2p32xsp4rqijkbnxpkjbx3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ADPfusion ansi-wl-pprint BiobaseBlast BiobaseFasta BiobaseXNA
         biocore cmdargs conduit dlist parallel PrimitiveArray repa split
         vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Frameshift-aware alignment of protein sequences with DNA sequences";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "DocTest" = callPackage
    ({ mkDerivation, ghc-paths, haddock, HUnit }:
     mkDerivation {
       pname = "DocTest";
       version = "0.2.0";
       sha256 = "1jp68chgg0n3wy4ryc0l71ynfv4pmnazxc2a8gfbw7fbbn8898ag";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ghc-paths haddock HUnit ];
       homepage = "http://haskell.org/haskellwiki/DocTest";
       description = "Test interactive Haskell examples";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Docs" = callPackage
    ({ mkDerivation, html }:
     mkDerivation {
       pname = "Docs";
       version = "1.0.0";
       sha256 = "1hjdznp29kwj9cca0jxr3dds9cnfbss6sgn52wym2380az3jcvnz";
       buildDepends = [ html ];
       homepage = "http://ddiaz.asofilak.es/packages/Docs.html";
       description = "Documentation types library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DrHylo" = callPackage
    ({ mkDerivation, haskell-src-exts, mtl, pointless-haskell, syb }:
     mkDerivation {
       pname = "DrHylo";
       version = "0.0.2";
       sha256 = "1cs7zqz0yzdyj3vn38cfh1lj90xnxm24q8lml457f2yia4z7l6h7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskell-src-exts mtl pointless-haskell syb ];
       homepage = "http://haskell.di.uminho.pt/wiki/DrHylo";
       description = "A tool for deriving hylomorphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DrIFT" = callPackage
    ({ mkDerivation, filepath, random }:
     mkDerivation {
       pname = "DrIFT";
       version = "2.4.2";
       sha256 = "1w0wfmrjifidl2qz998ig07afd4p6yp890lwl8as57bay490nakl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath random ];
       homepage = "http://repetae.net/computer/haskell/DrIFT/";
       description = "Program to derive type class instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DrIFT-cabalized" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "DrIFT-cabalized";
       version = "2.3.0";
       sha256 = "0jk7qmlgjw69w38hm91bnyp8gyi1mjmrq4vyv7jv3y69rk0fi6wl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://repetae.net/computer/haskell/DrIFT/";
       description = "Program to derive type class instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Dung" = callPackage
    ({ mkDerivation, cmdargs, parsec }:
     mkDerivation {
       pname = "Dung";
       version = "1.0.0.1";
       sha256 = "12dlx4m3vqyc458bwjlh2i85b8k65wx5panibqc79p2ax5fvf2wz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs parsec ];
       homepage = "http://www.cs.nott.ac.uk/~bmv/Dung/";
       description = "An implementation of the Dung argumentation frameworks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Dust" = callPackage
    ({ mkDerivation, binary, cereal, crypto-api, Dust-crypto, entropy
     , HUnit, network, QuickCheck, random, random-extras, random-fu
     , random-source, split, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, threefish
     }:
     mkDerivation {
       pname = "Dust";
       version = "2.3.1";
       sha256 = "0j2pm2ram7idh46mi6jv0whk4rx0bicvsvayrn3arnq65zk2mavj";
       buildDepends = [
         binary cereal crypto-api Dust-crypto entropy network random
         random-extras random-fu random-source split threefish
       ];
       testDepends = [
         cereal Dust-crypto HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         threefish
       ];
       description = "Polymorphic protocol engine";
       license = "GPL";
     }) {};

  "Dust-crypto" = callPackage
    ({ mkDerivation, binary, cereal, crypto-api, cryptohash, Dust
     , entropy, HUnit, network, openssl, QuickCheck, random
     , random-extras, random-fu, random-source, skein, split
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , threefish
     }:
     mkDerivation {
       pname = "Dust-crypto";
       version = "0.1";
       sha256 = "112prydwsjd32aiv3kg8wsxwaj95p6x7jhxcf118fxgrrg202z9w";
       buildDepends = [
         binary cereal crypto-api cryptohash entropy network random
         random-extras random-fu random-source skein split threefish
       ];
       testDepends = [
         cereal Dust HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 threefish
       ];
       extraLibraries = [ openssl ];
       description = "Cryptographic operations";
       license = "GPL";
     }) {};

  "Dust-tools" = callPackage
    ({ mkDerivation, binary, cereal, csv, Dust, Dust-crypto, entropy
     , network, random, random-extras, random-fu, random-source, split
     }:
     mkDerivation {
       pname = "Dust-tools";
       version = "1.3.2";
       sha256 = "1g1l7h5400f9qckhj4yw2zwwjjkqz5w1fgnc9gxa7rdl37wgxwn4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cereal csv Dust Dust-crypto entropy network random
         random-extras random-fu random-source split
       ];
       description = "Network filtering exploration tools";
       license = "GPL";
     }) {};

  "Dust-tools-pcap" = callPackage
    ({ mkDerivation, binary, cereal, csv, Dust, Dust-crypto, Dust-tools
     , entropy, network, pcap, random, random-extras, random-fu
     , random-source, split
     }:
     mkDerivation {
       pname = "Dust-tools-pcap";
       version = "1.3.1";
       sha256 = "1swykscl17qy17qy38y6zc47sbiyaszh9m4qwn7d9sckfa6azsdr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary cereal csv Dust Dust-crypto Dust-tools entropy network pcap
         random random-extras random-fu random-source split
       ];
       description = "Network filtering exploration tools that rely on pcap";
       license = "GPL";
     }) {};

  "DysFRP" = callPackage
    ({ mkDerivation, contravariant, mtl, time, transformers }:
     mkDerivation {
       pname = "DysFRP";
       version = "0.1";
       sha256 = "1jw1s2imd2qhh9i0m7sm1zhy876bgp1pcrh4jcf5dilvqnhvv4j1";
       buildDepends = [ contravariant mtl time transformers ];
       homepage = "https://github.com/tilk/DysFRP";
       description = "dysFunctional Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DysFRP-Cairo" = callPackage
    ({ mkDerivation, cairo, DysFRP, gtk, mtl }:
     mkDerivation {
       pname = "DysFRP-Cairo";
       version = "0.1";
       sha256 = "1pg6gwyrlvp6z08ab1qp783z9gm0xhnh337shf443f1bwbcz9m7f";
       buildDepends = [ cairo DysFRP gtk mtl ];
       homepage = "https://github.com/tilk/DysFRP";
       description = "dysFunctional Reactive Programming on Cairo";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "DysFRP-Craftwerk" = callPackage
    ({ mkDerivation, cairo, craftwerk, craftwerk-gtk, DysFRP
     , DysFRP-Cairo, gtk
     }:
     mkDerivation {
       pname = "DysFRP-Craftwerk";
       version = "0.1";
       sha256 = "0rhm7ya1h43dwa83fcvnc8nd9da7ji6qlwzsa9ngv7pqvs7aamy1";
       buildDepends = [
         cairo craftwerk craftwerk-gtk DysFRP DysFRP-Cairo gtk
       ];
       homepage = "https://github.com/tilk/DysFRP";
       description = "dysFunctional Reactive Programming on Craftwerk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "EEConfig" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "EEConfig";
       version = "1.0";
       sha256 = "1bkkzj1d0j4nisdl9jfmadjx32w35ipdw3k12krhzzlf5aiwnrf1";
       description = "ExtremlyEasyConfig - Extremly Simple parser for config files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ebnf2ps" = callPackage
    ({ mkDerivation, happy }:
     mkDerivation {
       pname = "Ebnf2ps";
       version = "1.0.12";
       sha256 = "1rd0pxj2bfx06z1p0sy8kdhyfg1y51gn1bhr71j33czls6m9ry8c";
       isLibrary = false;
       isExecutable = true;
       buildTools = [ happy ];
       homepage = "https://github.com/FranklinChen/Ebnf2ps";
       description = "Peter's Syntax Diagram Drawing Tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "EdisonAPI" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "EdisonAPI";
       version = "1.2.2.1";
       sha256 = "1r8xfsqz58s6x7026yrjafcbjkwsjg6fpcj6gbcpidw5hymymqfp";
       buildDepends = [ mtl ];
       homepage = "http://rwd.rdockins.name/edison/home/";
       description = "A library of efficent, purely-functional data structures (API)";
       license = "unknown";
     }) {};

  "EdisonCore" = callPackage
    ({ mkDerivation, EdisonAPI, mtl, QuickCheck }:
     mkDerivation {
       pname = "EdisonCore";
       version = "1.2.2.1";
       sha256 = "0yj68glq50qkn2ckhhq7q5y5kbwb5lh08z1kgksc61wds22a87pz";
       buildDepends = [ EdisonAPI mtl QuickCheck ];
       homepage = "http://rwd.rdockins.name/edison/home/";
       description = "A library of efficent, purely-functional data structures (Core Implementations)";
       license = "unknown";
     }) {};

  "EditTimeReport" = callPackage
    ({ mkDerivation, csv, editline, filepath, html, xhtml }:
     mkDerivation {
       pname = "EditTimeReport";
       version = "1.0";
       sha256 = "11a922535h6jvg79cv03jz6sn93h7jhqfrf9wi9x8arak9l06j70";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ csv editline filepath html xhtml ];
       homepage = "http://github.com/bspaans/EditTimeReport";
       description = "Query language and report generator for edit logs";
       license = "GPL";
     }) {};

  "EitherT" = callPackage
    ({ mkDerivation, monad-control, transformers, transformers-base }:
     mkDerivation {
       pname = "EitherT";
       version = "0.2.0";
       sha256 = "1vry479zdq1fw7bd4d373c7wf2gg0aibkyb03710w7z2x86chssw";
       buildDepends = [ monad-control transformers transformers-base ];
       description = "EitherT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Elm" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, binary, blaze-html
     , blaze-markup, cheapskate, cmdargs, filemanip, filepath
     , highlighting-kate, HUnit, indents, language-ecmascript
     , language-glsl, mtl, parsec, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     , transformers, union-find, unordered-containers
     }:
     mkDerivation {
       pname = "Elm";
       version = "0.13";
       sha256 = "1l6p00h0717blwvia0gvqpsakq8jy44fxc6brr4qxs5g4yjcjnmh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty binary blaze-html blaze-markup cheapskate
         cmdargs filepath highlighting-kate indents language-ecmascript
         language-glsl mtl parsec text transformers union-find
         unordered-containers
       ];
       testDepends = [
         aeson aeson-pretty binary blaze-html blaze-markup cheapskate
         cmdargs filemanip filepath highlighting-kate HUnit indents
         language-ecmascript language-glsl mtl parsec QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         transformers union-find unordered-containers
       ];
       homepage = "http://elm-lang.org";
       description = "The Elm language module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Emping" = callPackage
    ({ mkDerivation, fgl, gtk, mtl, parsec }:
     mkDerivation {
       pname = "Emping";
       version = "0.6";
       sha256 = "131h71fgn0zbsmbqmvbfl57is0dbm37xsi5g87gpjgq0k2cq0nkr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ fgl gtk mtl parsec ];
       homepage = "http://www.muitovar.com";
       description = "derives heuristic rules from nominal data";
       license = "GPL";
     }) {};

  "Encode" = callPackage
    ({ mkDerivation, Cabal, mtl }:
     mkDerivation {
       pname = "Encode";
       version = "1.3.7";
       sha256 = "141iddlpvjp6hqjx5c5dm3ldf7yk64iqbhaiv51np27y6pazfgb5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal mtl ];
       homepage = "http://otakar-smrz.users.sf.net/";
       description = "Encoding character data";
       license = "GPL";
     }) {};

  "EnumContainers" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "EnumContainers";
       version = "0.1";
       sha256 = "14ckpgaviny3c0d1jn3blkkpri0cm8ac264y7kak965knjccq0k8";
       buildDepends = [ deepseq ];
       description = "Simple Enum-class-based int containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "EnumMap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "EnumMap";
       version = "0.0.2";
       sha256 = "1v3jp1l95kybvdlpvp6bd0ryihxrvlnpkqz7fl1n4vazhkqk6zjz";
       description = "More general IntMap replacement";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Eq" = callPackage
    ({ mkDerivation, filepath, HaXml, mtl, parsec, transformers }:
     mkDerivation {
       pname = "Eq";
       version = "1.1.3";
       sha256 = "0hcfjzlirw11jl752g2jncb71i8sk2w3nqjm4ykc64f5awj1hi23";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath HaXml mtl parsec transformers ];
       description = "Render math formula in ASCII, and perform some simplifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "EqualitySolver" = callPackage
    ({ mkDerivation, HUnit, mtl, union-find-array }:
     mkDerivation {
       pname = "EqualitySolver";
       version = "0.1.0.2";
       sha256 = "0ynzzl9mmn5hxkcndx60lnxn455nm065v7nk7rhpq1yigwz0cl1g";
       buildDepends = [ HUnit mtl union-find-array ];
       description = "A theory solver for conjunctions of literals in the theory of uninterpreted functions with equality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "EsounD" = callPackage
    ({ mkDerivation, base-unicode-symbols, bindings-EsounD
     , monad-control, network, regions, safer-file-handles
     , storablevector, transformers
     }:
     mkDerivation {
       pname = "EsounD";
       version = "0.2";
       sha256 = "1d22k3836c92xd6qg5pvjhgrhbajd438z3pfjvi0bl2wdrkzddjr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols bindings-EsounD monad-control network regions
         safer-file-handles storablevector transformers
       ];
       homepage = "http://cielonegro.org/EsounD.html";
       description = "Type-safe bindings to EsounD (ESD; Enlightened Sound Daemon)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "EtaMOO" = callPackage
    ({ mkDerivation, haskeline, mtl, network, parsec, pcre, pureMD5
     , random, stm, text, time, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "EtaMOO";
       version = "0.1.0.0";
       sha256 = "1c693ljwhhcvfdy0jrzsviv4ahl526jgc1r0hff6c9kk0k0cl2rk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         haskeline mtl network parsec pureMD5 random stm text time
         transformers unordered-containers vector
       ];
       extraLibraries = [ pcre ];
       homepage = "https://github.com/verement/etamoo";
       description = "A new implementation of the LambdaMOO server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Etage" = callPackage
    ({ mkDerivation, mtl, operational, random, SafeSemaphore, time }:
     mkDerivation {
       pname = "Etage";
       version = "0.1.12";
       sha256 = "1ik8j7s1z64dpdg251m8dr7k7llkhxydlf6l6dhyv9ra55dg4n20";
       buildDepends = [ mtl operational random SafeSemaphore time ];
       homepage = "http://mitar.tnode.com";
       description = "A general data-flow framework";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Etage-Graph" = callPackage
    ({ mkDerivation, deepseq, Etage, fgl, mtl, parallel, random, time
     }:
     mkDerivation {
       pname = "Etage-Graph";
       version = "0.1.8";
       sha256 = "0xzsvah4nhxv5hw8p0sv1pjy4p30xa3f2afs8jncx20n918mk9l2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deepseq Etage fgl mtl parallel random time ];
       homepage = "http://mitar.tnode.com";
       description = "Data-flow based graph algorithms";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Eternal10Seconds" = callPackage
    ({ mkDerivation, SDL, SDL-mixer }:
     mkDerivation {
       pname = "Eternal10Seconds";
       version = "0.2";
       sha256 = "0kh1zjqr9cmx7xyfk2y3iwr3x3zvh3pb4ghfjz3xr2wwg2rmymxp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ SDL SDL-mixer ];
       homepage = "http://www.kryozahiro.org/eternal10/";
       description = "A 2-D shooting game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Etherbunny" = callPackage
    ({ mkDerivation, binary, libpcap, network, pcap }:
     mkDerivation {
       pname = "Etherbunny";
       version = "0.3";
       sha256 = "0cm98x626cqwri9qsfhwi6s50kg433a1p78y9na70z868p6n27nj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary network pcap ];
       extraLibraries = [ libpcap ];
       homepage = "http://etherbunny.anytini.com/";
       description = "A network analysis toolkit for Haskell";
       license = "GPL";
     }) {};

  "EuroIT" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "EuroIT";
       version = "2010.2.5";
       sha256 = "1a6bvi0y1pnzpx0x3arrardgkbs0m8ssfwcyxf6fim87wcb0jcgv";
       description = "Library for using euro currency, italian language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "EventSocket" = callPackage
    ({ mkDerivation, mtl, network }:
     mkDerivation {
       pname = "EventSocket";
       version = "0.1";
       sha256 = "03wf8msjcpj8bpnjr7f1wcbag018kap544jwz9a7vnllamps92xd";
       buildDepends = [ mtl network ];
       description = "Interfaces with FreeSwitch Event Socket";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Extra" = callPackage
    ({ mkDerivation, bzlib, filepath, HUnit, mtl, network-uri, pureMD5
     , QuickCheck, random, regex-compat, time, Unixutils, zlib
     }:
     mkDerivation {
       pname = "Extra";
       version = "1.46.3";
       sha256 = "1xmwp9cp905nzx5x858wyacjpppn76mkfpkxksdhlq9zhmkp5yyh";
       buildDepends = [
         bzlib filepath HUnit mtl network-uri pureMD5 QuickCheck random
         regex-compat time Unixutils zlib
       ];
       homepage = "https://github.com/ddssff/haskell-extra";
       description = "A grab bag of modules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FComp" = callPackage
    ({ mkDerivation, binary, deepseq, HarmTrace-Base, haskore
     , instant-generics, ListLike, midi, mtl, QuickCheck, random, time
     , uu-parsinglib
     }:
     mkDerivation {
       pname = "FComp";
       version = "1.0.2";
       sha256 = "0hkmh3vjibbzkh004b4zig2rvvnh6l2cdqsmxbpyjbwqryzraxrn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary deepseq HarmTrace-Base haskore instant-generics ListLike
         midi mtl QuickCheck random time uu-parsinglib
       ];
       description = "Compose music";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "FM-SBLEX" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "FM-SBLEX";
       version = "3.0.1";
       sha256 = "1cb3qq8yqn19xpsjbczxs8rablkczaigs6hp2vypsjyw5s8sqza8";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://spraakbanken.gu.se/eng/research/swefn/fm-sblex";
       description = "A set of computational morphology tools for Swedish diachronic lexicons";
       license = "GPL";
     }) {};

  "FModExRaw" = callPackage
    ({ mkDerivation, fmodex64 }:
     mkDerivation {
       pname = "FModExRaw";
       version = "0.2.0.0";
       sha256 = "0l2zhlxh88wy9y9gk1aa03yy65iw8zigr4pgp63mn2mqcrskfszl";
       extraLibraries = [ fmodex64 ];
       homepage = "https://github.com/skypers/hsFModEx";
       description = "The Haskell FModEx raw API";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "FPretty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "FPretty";
       version = "1.0";
       sha256 = "1lc31mid1a9pqb9py9f6nvzvlixhngpficczvhpdxlws3fn9drga";
       homepage = "http://www.cs.kent.ac.uk/~oc/pretty.html";
       description = "Efficient simple pretty printing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FTGL" = callPackage
    ({ mkDerivation, ftgl }:
     mkDerivation {
       pname = "FTGL";
       version = "2.1";
       sha256 = "0b76798bxxivjrjx92qiv8ghsg3j8rhvfms8sl19ji6fip2h3fw2";
       extraLibraries = [ ftgl ];
       description = "Portable TrueType font rendering for OpenGL using the Freetype2 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FTGL-bytestring" = callPackage
    ({ mkDerivation, ftgl, StateVar-transformer, transformers }:
     mkDerivation {
       pname = "FTGL-bytestring";
       version = "2.0";
       sha256 = "11y8g2gi4g6x639c9wfj2224f9vgaf88hdd1f981al53kzf7y2y2";
       buildDepends = [ StateVar-transformer transformers ];
       extraLibraries = [ ftgl ];
       description = "Portable TrueType font rendering for OpenGL using the Freetype2 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FTPLine" = callPackage
    ({ mkDerivation, ansi-terminal, ftphs, haskeline, mtl, network
     , strict
     }:
     mkDerivation {
       pname = "FTPLine";
       version = "1.4.0.0";
       sha256 = "0nnwfn4jxnxfr8q8gq16xn0ixjmw7dnxznsh8lbk41lwfsr9j4n5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal ftphs haskeline mtl network strict
       ];
       description = "A command-line FTP client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Facts" = callPackage
    ({ mkDerivation, AC-Angle, digits, QuickCheck }:
     mkDerivation {
       pname = "Facts";
       version = "0.1.2";
       sha256 = "018g9qj6nmabjbl4rakqjp32vwfyak1wk5cx3s0amm53wnf2mz75";
       buildDepends = [ AC-Angle digits QuickCheck ];
       description = "A collection of facts about the real world";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FailureT" = callPackage
    ({ mkDerivation, base-unicode-symbols, mmtl }:
     mkDerivation {
       pname = "FailureT";
       version = "15778.1";
       sha256 = "1qhjqswx4qyfan3rpvvl1hgmf369krqprlr6x20hp34r2qw9s135";
       buildDepends = [ base-unicode-symbols mmtl ];
       description = "Failure Monad Transformer";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "FenwickTree" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "FenwickTree";
       version = "0.1.1";
       sha256 = "0rarglwvfa6jmd2cir59syh1plfxgvdin49avi43ygkb9g21icjf";
       buildDepends = [ QuickCheck ];
       testDepends = [ QuickCheck ];
       homepage = "https://github.com/mgajda/FenwickTree";
       description = "Data structure for fast query and update of cumulative sums";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FermatsLastMargin" = callPackage
    ({ mkDerivation, HAppS-Data, HAppS-IxSet, HAppS-Server, HAppS-State
     , HAppS-Util, HaXml, mtl, random, syb-with-class
     }:
     mkDerivation {
       pname = "FermatsLastMargin";
       version = "0.1";
       sha256 = "07sryfn26afisrsgnzrp0vjshspa40pvl4214mzb5mdm9h5c63f8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         HAppS-Data HAppS-IxSet HAppS-Server HAppS-State HAppS-Util HaXml
         mtl random syb-with-class
       ];
       homepage = "http://www.scannedinavian.com/";
       description = "Annotate ps and pdf documents";
       license = "GPL";
     }) {};

  "FerryCore" = callPackage
    ({ mkDerivation, HaXml, mtl, parsec, TableAlgebra }:
     mkDerivation {
       pname = "FerryCore";
       version = "0.4.6.4";
       sha256 = "1dxhbrmcl36dg14lyihpy8fd8sdsmawh70fykllcjk3fh7a11wgp";
       buildDepends = [ HaXml mtl parsec TableAlgebra ];
       description = "Ferry Core Components";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FieldTrip" = callPackage
    ({ mkDerivation, GLUT, graphicsFormats, MemoTrie, OpenGL
     , TypeCompose, vector-space
     }:
     mkDerivation {
       pname = "FieldTrip";
       version = "0.2.7";
       sha256 = "1161mz8443j1jr8pnkh6gz6w99cd16hk94ypsh8vzmpbfp40i5rb";
       buildDepends = [
         GLUT graphicsFormats MemoTrie OpenGL TypeCompose vector-space
       ];
       homepage = "http://haskell.org/haskellwiki/FieldTrip";
       description = "Functional 3D";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FileManip" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, mtl }:
     mkDerivation {
       pname = "FileManip";
       version = "0.3.3.1";
       sha256 = "0dhl7zkyy4p0pgmraci82krph6hqrq1bwmx7wgm9agrnpdyg4dxi";
       buildDepends = [ extensible-exceptions filepath mtl ];
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FileManipCompat" = callPackage
    ({ mkDerivation, filepath, mtl, unix-compat }:
     mkDerivation {
       pname = "FileManipCompat";
       version = "0.18";
       sha256 = "0c017r7bzgf1mdbk0iyr2amhm41q89mcq69fkszskjhy4z9wl6v0";
       buildDepends = [ filepath mtl unix-compat ];
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FilePather" = callPackage
    ({ mkDerivation, comonad, comonad-transformers, data-lens, filepath
     , mtl, transformers
     }:
     mkDerivation {
       pname = "FilePather";
       version = "0.2.0";
       sha256 = "1rwj8hqys01cn14d754wyl2vr19mvh4vsg2f3hrqjqiafkij90xd";
       buildDepends = [
         comonad comonad-transformers data-lens filepath mtl transformers
       ];
       homepage = "https://github.com/tonymorris/filepather";
       description = "Functions on System.FilePath";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FileSystem" = callPackage
    ({ mkDerivation, binary, filepath, mtl }:
     mkDerivation {
       pname = "FileSystem";
       version = "1.0.0";
       sha256 = "0qyzwpvajvqywbnfhj3vzb5xl4wjjywyqr4szywd8qwb7kly29w6";
       buildDepends = [ binary filepath mtl ];
       homepage = "http://ddiaz.asofilak.es/packages/FileSystem";
       description = "File system data structure and monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Finance-Quote-Yahoo" = callPackage
    ({ mkDerivation, http-conduit, network, time }:
     mkDerivation {
       pname = "Finance-Quote-Yahoo";
       version = "0.8.0";
       sha256 = "1d786xkrj0h270mfwxxkfxysmk78xkz2jdj8w1iin3hgy3ramifz";
       buildDepends = [ http-conduit network time ];
       homepage = "http://www.b7j0c.org/stuff/haskell-yquote.xhtml";
       description = "Obtain quote data from finance.yahoo.com";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Finance-Treasury" = callPackage
    ({ mkDerivation, HTTP, HTTP-Simple, hxt, hxt-filter, network, time
     }:
     mkDerivation {
       pname = "Finance-Treasury";
       version = "0.1.2";
       sha256 = "17wxdwj8162c0yawz4anjs6d3fjbhs3b05wk319acblksjx60sal";
       buildDepends = [ HTTP HTTP-Simple hxt hxt-filter network time ];
       homepage = "http://www.ecoin.net/haskell/Finance-Treasury.html";
       description = "Obtain Treasury yield curve data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FindBin" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "FindBin";
       version = "0.0.5";
       sha256 = "197xvn05yysmibm1p5wzxfa256lvpbknr5d1l2ws6g40w1kpk717";
       buildDepends = [ filepath ];
       homepage = "https://github.com/audreyt/findbin";
       description = "Locate directory of original program";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FiniteMap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "FiniteMap";
       version = "0.1";
       sha256 = "1kf638h5gsc8fklhaw2jiad1r0ssgj8zkfmzywp85lrx5z529gky";
       description = "A finite map implementation, derived from the paper: Efficient sets: a balancing act, S. Adams, Journal of functional programming 3(4) Oct 1993, pp553-562";
       license = "BSD4";
     }) {};

  "FirstOrderTheory" = callPackage
    ({ mkDerivation, Proper }:
     mkDerivation {
       pname = "FirstOrderTheory";
       version = "0.1.0.6";
       sha256 = "1941ickx8aj3qbkry4gz8ni6snh26gkdrgabpx9z588518q4x27i";
       buildDepends = [ Proper ];
       description = "Grammar and typeclass for first order theories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FixedPoint-simple" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "FixedPoint-simple";
       version = "0.6.1";
       sha256 = "0qfys17q3i56l20wzkpr8inq130j67kya022ynf0sgbc86avlrcn";
       buildDepends = [ deepseq ];
       homepage = "https://github.com/TomMD/FixedPoint";
       description = "Fixed point, large word, and large int numerical representations (types and common class instances)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Flippi" = callPackage
    ({ mkDerivation, cgi, parsec, xhtml }:
     mkDerivation {
       pname = "Flippi";
       version = "0.0.5";
       sha256 = "1w25h3n3cnsl9dvr5s94jzf5qxyx0dl0v8dmqv2rkwwm7s2hdbl9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cgi parsec xhtml ];
       homepage = "http://www.flippac.org/projects/flippi/";
       description = "Wiki";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Focus" = callPackage
    ({ mkDerivation, MissingH, split }:
     mkDerivation {
       pname = "Focus";
       version = "0.1.2";
       sha256 = "1f1ch6mxgaam1i4ryd1av879y2f8wn3wmg47h23w2l0pvgmxgrj1";
       buildDepends = [ MissingH split ];
       description = "Tools for focusing in on locations within numbers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Folly" = callPackage
    ({ mkDerivation, HUnit, parsec }:
     mkDerivation {
       pname = "Folly";
       version = "0.1.3.0";
       sha256 = "0ygxgshgaddxfibl0paqm9sm4cq47247hr43awq8gib8zyg3amgi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit parsec ];
       homepage = "https://github.com/dillonhuff/Folly";
       description = "A first order logic library in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FontyFruity" = callPackage
    ({ mkDerivation, binary, deepseq, filepath, text, vector }:
     mkDerivation {
       pname = "FontyFruity";
       version = "0.4";
       sha256 = "0nrlsiwav1mwbmp555vwnc24250yn166yr5fjazjg9g7a0ikkivf";
       buildDepends = [ binary deepseq filepath text vector ];
       description = "A true type file format loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ForSyDe" = callPackage
    ({ mkDerivation, filepath, mtl, parameterized-data, random
     , regex-posix, type-level
     }:
     mkDerivation {
       pname = "ForSyDe";
       version = "3.1.1";
       sha256 = "0ggwskyxpdrjny0rz61zdp20r5vzig8ggmqxf0qa8gljvvfp6bhp";
       buildDepends = [
         filepath mtl parameterized-data random regex-posix type-level
       ];
       homepage = "http://www.ict.kth.se/forsyde/";
       description = "ForSyDe's Haskell-embedded Domain Specific Language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ForkableT" = callPackage
    ({ mkDerivation, monad-control, mtl, resourcet }:
     mkDerivation {
       pname = "ForkableT";
       version = "0.1.0.1";
       sha256 = "1qw4qyfpax8y3pmb0sx717a294aamjb2mgvqhrkbqx2yi5d8jl66";
       buildDepends = [ monad-control mtl resourcet ];
       homepage = "https://github.com/exFalso/ForkableT/";
       description = "Forkable monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FormalGrammars" = callPackage
    ({ mkDerivation, ADPfusion, ansi-wl-pprint, cmdargs, data-default
     , HaTeX, lens, mtl, parsers, repa, text, transformers, trifecta
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "FormalGrammars";
       version = "0.0.0.2";
       sha256 = "1wdcwdr3chzmgs5y634jv0gsndm7vgfndr0sfxn0m6z56xcv65gj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ADPfusion ansi-wl-pprint cmdargs data-default HaTeX lens mtl
         parsers repa text transformers trifecta unordered-containers vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/gramprod/";
       description = "(Context-free) grammars in formal language theory";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "FpMLv53" = callPackage
    ({ mkDerivation, HaXml }:
     mkDerivation {
       pname = "FpMLv53";
       version = "0.1";
       sha256 = "0h7vi940zrl2fqv8c2g0vj0gh9qfm2jf8c2drclx37zax5kb0r6p";
       buildDepends = [ HaXml ];
       homepage = "http://www.fpml.org/";
       description = "A binding for the Financial Products Markup Language (v5.3)";
       license = "LGPL";
     }) {};

  "Frank" = callPackage
    ({ mkDerivation, mtl, newtype, she, void }:
     mkDerivation {
       pname = "Frank";
       version = "0.3";
       sha256 = "1p99ab5qgvyh13iy9wgv0a8lqx6s2mygx0s6z51m5mzi9nxf0qw1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl newtype she void ];
       homepage = "http://personal.cis.strath.ac.uk/~conor/pub/Frank/";
       description = "An experimental programming language with typed algebraic effects";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "FreeTypeGL" = callPackage
    ({ mkDerivation, freetype2, OpenGL }:
     mkDerivation {
       pname = "FreeTypeGL";
       version = "0.0.4";
       sha256 = "10sivjxppn138805iwka54cfby59nc39ja30nx2w3762fybz71af";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ freetype2 OpenGL ];
       description = "Loadable texture fonts for OpenGL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "FunGEn" = callPackage
    ({ mkDerivation, GLUT, OpenGL, random }:
     mkDerivation {
       pname = "FunGEn";
       version = "0.4.6.1";
       sha256 = "0v9y9a82d2h34ai5hhwnalgfs5m2s909blr4f30dawgryn8gnbfp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ GLUT OpenGL random ];
       homepage = "http://joyful.com/fungen";
       description = "A lightweight, cross-platform, OpenGL/GLUT-based game engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Fungi" = callPackage
    ({ mkDerivation, filepath, ListZipper, mtl, mwc-random, random
     , tuple
     }:
     mkDerivation {
       pname = "Fungi";
       version = "1.0.4";
       sha256 = "0i2llh5pg5hf8897i1drz0r6zzbbxjjcqb0ic75hn6az1lvv9jbd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ListZipper mtl mwc-random random tuple ];
       description = "An interpreter for Funge-98 programming languages, including Befunge";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GA" = callPackage
    ({ mkDerivation, random, transformers }:
     mkDerivation {
       pname = "GA";
       version = "1.0";
       sha256 = "1nsmpph27yv0anrhhfqbpdqs2rrdbhm0jxzs3kk6ab32zb3ivhp2";
       buildDepends = [ random transformers ];
       homepage = "http://boegel.kejo.be";
       description = "Genetic algorithm library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GHood" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "GHood";
       version = "0.0.4";
       sha256 = "0ab6dngl8gjkj8wvjvrjijgqb59aq88c1ra2z92iqky2d0plrfca";
       homepage = "http://www.cs.kent.ac.uk/people/staff/cr3/toolbox/haskell/GHood";
       description = "A graphical viewer for Hood";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLFW" = callPackage
    ({ mkDerivation, libX11, mesa, OpenGL }:
     mkDerivation {
       pname = "GLFW";
       version = "0.5.2.2";
       sha256 = "0yqvfkg9p5h5bv3ak6b89am9kan9lbcq26kg1wk53xl6mz1aaijf";
       buildDepends = [ OpenGL ];
       extraLibraries = [ libX11 mesa ];
       homepage = "http://haskell.org/haskellwiki/GLFW";
       description = "A Haskell binding for GLFW";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLFW-OGL" = callPackage
    ({ mkDerivation, libX11, libXrandr, mtl, OGL }:
     mkDerivation {
       pname = "GLFW-OGL";
       version = "0.0";
       sha256 = "118hpgdp8rb0jlvlibxcaia4jjjdrn8xpzyvj109piw63g44n910";
       buildDepends = [ mtl OGL ];
       extraLibraries = [ libX11 libXrandr ];
       homepage = "http://haskell.org/haskellwiki/GLFW-OGL";
       description = "A binding for GLFW (OGL)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLFW-b" = callPackage
    ({ mkDerivation, bindings-GLFW, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "GLFW-b";
       version = "1.4.6";
       sha256 = "1d9vacb9nsf5cqqwxhn49wsfbhmw1263kgimk5qxpqpg1jiy35hy";
       buildDepends = [ bindings-GLFW ];
       testDepends = [
         bindings-GLFW HUnit test-framework test-framework-hunit
       ];
       description = "Bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLFW-b-demo" = callPackage
    ({ mkDerivation, GLFW-b, mtl, OpenGL, stm, transformers }:
     mkDerivation {
       pname = "GLFW-b-demo";
       version = "1.0.6";
       sha256 = "01qf0bsv3q60m3as763q49hd3nm5lkady48nc214zjsx31x8by59";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLFW-b mtl OpenGL stm transformers ];
       description = "GLFW-b demo";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLFW-task" = callPackage
    ({ mkDerivation, GLFW, monad-task, OpenGL, transformers }:
     mkDerivation {
       pname = "GLFW-task";
       version = "0.2.0";
       sha256 = "110iwxp6xs3wj4bva8m6mgz7iq90zrcz2dnjlq3s2x3in2m4818p";
       buildDepends = [ GLFW monad-task OpenGL transformers ];
       homepage = "http://github.com/ninegua/GLFW-task";
       description = "GLFW utility functions to use together with monad-task";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLHUI" = callPackage
    ({ mkDerivation, libX11, mesa, rt }:
     mkDerivation {
       pname = "GLHUI";
       version = "1.1.0";
       sha256 = "043xw36hrwzc6xdr5vlydbsv5m8675vnk8pfxycr7qixzwljn0aa";
       extraLibraries = [ libX11 mesa rt ];
       description = "Open OpenGL context windows in X11 with libX11";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLMatrix" = callPackage
    ({ mkDerivation, OpenGLRaw }:
     mkDerivation {
       pname = "GLMatrix";
       version = "0.1.0.1";
       sha256 = "13n80rplyl73ahk8cxgvs9gf655l063sd55spx0zvhw774vvxwv4";
       buildDepends = [ OpenGLRaw ];
       homepage = "https://github.com/fiendfan1/GLMatrix";
       description = "Utilities for working with OpenGL matrices";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "GLURaw" = callPackage
    ({ mkDerivation, freeglut, mesa, OpenGLRaw }:
     mkDerivation {
       pname = "GLURaw";
       version = "1.4.0.1";
       sha256 = "1k0f1vbbrsfc7jb4qbif4w4q87lsis5gvq7jd2n8zzslxd5n8mcn";
       buildDepends = [ OpenGLRaw ];
       extraLibraries = [ freeglut mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLUT" = callPackage
    ({ mkDerivation, freeglut, libICE, libSM, libXi, libXmu, mesa
     , OpenGL, OpenGLRaw
     }:
     mkDerivation {
       pname = "GLUT";
       version = "2.5.1.1";
       sha256 = "0n9dkdjmpnbcjg0ll0ny7mw21xwwix0gxy0hq6yagmgaakhpg0aa";
       buildDepends = [ OpenGL OpenGLRaw ];
       extraLibraries = [ freeglut libICE libSM libXi libXmu mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL Utility Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GLUtil" = callPackage
    ({ mkDerivation, cpphs, filepath, JuicyPixels, linear, OpenGL
     , OpenGLRaw, transformers, vector
     }:
     mkDerivation {
       pname = "GLUtil";
       version = "0.8.2";
       sha256 = "0z8fi4fd0jrywg595cc67w8pqcn7pgy651hxb4zkqb3400n4jak3";
       buildDepends = [
         cpphs filepath JuicyPixels linear OpenGL OpenGLRaw transformers
         vector
       ];
       buildTools = [ cpphs ];
       description = "Miscellaneous OpenGL utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GPX" = callPackage
    ({ mkDerivation, comonad, comonad-transformers, data-lens, hxt
     , newtype, xsd
     }:
     mkDerivation {
       pname = "GPX";
       version = "0.8.0";
       sha256 = "08qvl4l81bgjx40nmlrmb0csxa3xjj4l0dbq9bzcq65p403xs1pk";
       buildDepends = [
         comonad comonad-transformers data-lens hxt newtype xsd
       ];
       homepage = "https://github.com/tonymorris/geo-gpx";
       description = "Parse GPX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GPipe" = callPackage
    ({ mkDerivation, Boolean, GLUT, list-tries, OpenGL, transformers
     , Vec, Vec-Boolean
     }:
     mkDerivation {
       pname = "GPipe";
       version = "1.4.1";
       sha256 = "0w1xgn7pmz9pgpimsmy3fx66dax37qkd5a5q0yk1fh396dxsybx3";
       buildDepends = [
         Boolean GLUT list-tries OpenGL transformers Vec Vec-Boolean
       ];
       homepage = "http://www.haskell.org/haskellwiki/GPipe";
       description = "A functional graphics API for programmable GPUs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GPipe-Collada" = callPackage
    ({ mkDerivation, GPipe, HaXml, mtl, Vec }:
     mkDerivation {
       pname = "GPipe-Collada";
       version = "0.1.4";
       sha256 = "0aqvyv50gx0qx7icp70pw73gr3p6y05dkn347nqx82jc9dyxjghw";
       buildDepends = [ GPipe HaXml mtl Vec ];
       homepage = "http://www.haskell.org/haskellwiki/GPipe";
       description = "Load GPipe meshes from Collada files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GPipe-Examples" = callPackage
    ({ mkDerivation, GLUT, GPipe, GPipe-TextureLoad, Vec, Vec-Transform
     }:
     mkDerivation {
       pname = "GPipe-Examples";
       version = "0.1";
       sha256 = "0ir32fx0mk5hmmqilv6z89453rqcsgbs13a6ln4cydlkw5lbgv1k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT GPipe GPipe-TextureLoad Vec Vec-Transform ];
       description = "Examples for the GPipes package";
       license = "GPL";
     }) {};

  "GPipe-TextureLoad" = callPackage
    ({ mkDerivation, bitmap, GPipe, stb-image }:
     mkDerivation {
       pname = "GPipe-TextureLoad";
       version = "1.0.4";
       sha256 = "1yf74k3yvpj42ynivlkacp5zwxwsx3yyfxb2436ljrv3339kjkb4";
       buildDepends = [ bitmap GPipe stb-image ];
       homepage = "http://www.haskell.org/haskellwiki/GPipe";
       description = "Load GPipe textures from filesystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GTALib" = callPackage
    ({ mkDerivation, deepseq, HUnit, parallel, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "GTALib";
       version = "0.0.6";
       sha256 = "10l72wn8wdgcvpbcj10hmib6z0175ihsgvmwpp9akx4d6vpf2dz8";
       buildDepends = [ deepseq parallel ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "https://bitbucket.org/emoto/gtalib";
       description = "A library for GTA programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Gamgine" = callPackage
    ({ mkDerivation, composition, cpphs, data-lens, filepath, GLFW-b
     , ListZipper, mtl, OpenGLRaw, parsec, pretty-show, StateVar, time
     , unordered-containers, utility-ht, Vec, zlib
     }:
     mkDerivation {
       pname = "Gamgine";
       version = "0.4.1";
       sha256 = "180s8ly7i9lg8fyh6p7xkinxrac876938wkyzam9h6ildvik2qdd";
       buildDepends = [
         composition cpphs data-lens filepath GLFW-b ListZipper mtl
         OpenGLRaw parsec pretty-show StateVar time unordered-containers
         utility-ht Vec zlib
       ];
       description = "Some kind of game library or set of utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ganymede" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, transformers }:
     mkDerivation {
       pname = "Ganymede";
       version = "0.0.0.5";
       sha256 = "1fmb6fpdfk21yxrvlgdg32qymzirfbygsq6p4jvm925kvpwqbcwk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec transformers ];
       homepage = "https://github.com/BMeph/Ganymede";
       description = "An Io interpreter in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GaussQuadIntegration" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "GaussQuadIntegration";
       version = "0.1";
       sha256 = "0v91q0m90338qpxg4hnvb7n6vm1jap3y1rvn9kyzmnxh03rarpx2";
       description = "Non-adaptive Gaussian quadrature for numeric integraton";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GeBoP" = callPackage
    ({ mkDerivation, random, wx, wxcore }:
     mkDerivation {
       pname = "GeBoP";
       version = "1.7.4";
       sha256 = "1nz0829jx2yf673r6haahzva3m5y80d9whxh79abxx9716874rw9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random wx wxcore ];
       homepage = "http://www.haskell.org/haskellwiki/GeBoP";
       description = "Several games";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GenI" = callPackage
    ({ mkDerivation, binary, cabal-macosx, deepseq, errors, filepath
     , hslogger, HUnit, json, mtl, ordered, parsec, QuickCheck
     , smallcheck, syb, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-smallcheck, text, time
     , transformers, yaml-light
     }:
     mkDerivation {
       pname = "GenI";
       version = "0.24.3";
       sha256 = "0gmig362ayxxqgj4m6g1r1i6q5zfg6j8bmvsd7i9kmqn12nl3l0p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cabal-macosx deepseq errors filepath hslogger json mtl
         ordered parsec syb text time transformers yaml-light
       ];
       testDepends = [
         errors filepath HUnit json mtl parsec QuickCheck smallcheck
         test-framework test-framework-hunit test-framework-quickcheck2
         test-framework-smallcheck text transformers
       ];
       homepage = "http://projects.haskell.org/GenI";
       description = "A natural language generator (specifically, an FB-LTAG surface realiser)";
       license = "GPL";
     }) {};

  "GenSmsPdu" = callPackage
    ({ mkDerivation, QuickCheck, random }:
     mkDerivation {
       pname = "GenSmsPdu";
       version = "0.1";
       sha256 = "1vs1m78lp87mccqs3i80zpl121yb063vqxx6a4sqzkfxzhvjvcbz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ QuickCheck random ];
       description = "Automatic SMS message generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Genbank" = callPackage
    ({ mkDerivation, biocore, biofasta, cmdargs, parsec, split }:
     mkDerivation {
       pname = "Genbank";
       version = "1.0.3";
       sha256 = "14rbknlc1bxrld04i7dc5dklng5sp0b1rbiilndw5cair0d67brb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ biocore biofasta cmdargs parsec split ];
       description = "Libary for processing the NCBI genbank format";
       license = "GPL";
     }) {};

  "GenericPretty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "GenericPretty";
       version = "1.2.1";
       sha256 = "0bb70mic7srr7x8k83d1i0m0a32gm72zr78ccdf3ckchj9136php";
       homepage = "https://github.com/RazvanRanca/GenericPretty";
       description = "A generic, derivable, haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GeoIp" = callPackage
    ({ mkDerivation, bytestring-mmap, syb }:
     mkDerivation {
       pname = "GeoIp";
       version = "0.3";
       sha256 = "1q3km52w7qcrawbgaxvglb3x6rgc8f22c8rw8705lgcxxn9pjxm1";
       buildDepends = [ bytestring-mmap syb ];
       description = "Pure bindings for the MaxMind IP database";
       license = "unknown";
     }) {};

  "Geodetic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Geodetic";
       version = "0.4";
       sha256 = "1nb0q5hs9qqgygw35rbvanbjf9l6vjxrl6l4jp9dqwlnl1kdd88q";
       homepage = "http://code.google.com/p/geodetic/";
       description = "Geodetic calculations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GeomPredicates" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "GeomPredicates";
       version = "0.1";
       sha256 = "19scirh2hy9y9kv16pcp44v31cs3868ig28r8blj39gdv4wqxwcy";
       description = "Geometric predicates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GeomPredicates-SSE" = callPackage
    ({ mkDerivation, GeomPredicates }:
     mkDerivation {
       pname = "GeomPredicates-SSE";
       version = "0.2";
       sha256 = "18mdaf2j1svklka5ms9ihj07d9l92ivqjk0y8jv0l9ni44hrhxcq";
       buildDepends = [ GeomPredicates ];
       description = "Geometric predicates (Intel SSE)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GiST" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "GiST";
       version = "0.0.1";
       sha256 = "0ykvsjqpi7pd81857n2gqycgpnm0j8dxnpf345h7pgzrkz10qi9f";
       buildDepends = [ text ];
       description = "A Haskell implementation of a Generalized Search Tree (GiST)";
       license = "GPL";
     }) {};

  "Glob" = callPackage
    ({ mkDerivation, dlist, filepath, transformers }:
     mkDerivation {
       pname = "Glob";
       version = "0.7.5";
       sha256 = "0hdyi49zp2yr4h4wgngl8ajrss1p309c3pn0alj543yrh33bnqq0";
       buildDepends = [ dlist filepath transformers ];
       homepage = "http://iki.fi/matti.niemenmaa/glob/";
       description = "Globbing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GlomeTrace" = callPackage
    ({ mkDerivation, GlomeVec }:
     mkDerivation {
       pname = "GlomeTrace";
       version = "0.3";
       sha256 = "0n1290ls68fsky3a80fvfdq6bycvmpn3i3kmflq6yn45qa959f0k";
       buildDepends = [ GlomeVec ];
       homepage = "http://www.haskell.org/haskellwiki/Glome";
       description = "Ray Tracing Library";
       license = "GPL";
     }) {};

  "GlomeVec" = callPackage
    ({ mkDerivation, llvm }:
     mkDerivation {
       pname = "GlomeVec";
       version = "0.2";
       sha256 = "08hyiadkbkmcsd1g51xvxqzp6l94hnqqbz4r6yk0zk29iawq8610";
       buildTools = [ llvm ];
       homepage = "http://www.haskell.org/haskellwiki/Glome";
       description = "Simple 3D vector library";
       license = "GPL";
     }) {};

  "GlomeView" = callPackage
    ({ mkDerivation, deepseq, GlomeTrace, GlomeVec, monad-par, random
     , SDL, time, vector
     }:
     mkDerivation {
       pname = "GlomeView";
       version = "0.3";
       sha256 = "0plglb289gadk8mqxgqj8n25xa6dql2jl0b8cm9v7q5rwykx0kbq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         deepseq GlomeTrace GlomeVec monad-par random SDL time vector
       ];
       homepage = "http://haskell.org/haskellwiki/Glome";
       description = "SDL Frontend for Glome ray tracer";
       license = "GPL";
     }) {};

  "GoogleChart" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "GoogleChart";
       version = "0.2";
       sha256 = "0wfabsdn4agmg459srnknkwqb7ri5knj9npzgzhilybwrrqq46v9";
       homepage = "http://neugierig.org/software/darcs/browse/?r=google-chart;a=summary";
       description = "Generate web-based charts using the Google Chart API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GoogleDirections" = callPackage
    ({ mkDerivation, AttoJson, dataenc, download-curl }:
     mkDerivation {
       pname = "GoogleDirections";
       version = "0.3.0.1";
       sha256 = "1x7k72iy8aa6r60p3hrqb8a4p5avyjh8czymrkarc3wpkc73bjb3";
       buildDepends = [ AttoJson dataenc download-curl ];
       homepage = "https://github.com/favilo/GoogleDirections.git";
       description = "Haskell Interface to Google Directions API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GoogleSB" = callPackage
    ({ mkDerivation, binary, Crypto, HTTP, mtl, network, split }:
     mkDerivation {
       pname = "GoogleSB";
       version = "0.1";
       sha256 = "1gfjpxcjr9xqinha3wzdk101avjzyvji2xs5abkj9pj8lsrbh2w8";
       buildDepends = [ binary Crypto HTTP mtl network split ];
       description = "Interface to Google Safe Browsing API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GoogleSuggest" = callPackage
    ({ mkDerivation, dataenc, download-curl, utf8-string, xml }:
     mkDerivation {
       pname = "GoogleSuggest";
       version = "0.0.4";
       sha256 = "1jqfd9zi4yp0kr506v71dlg5zgmvzqbxdsfjr2574ajx5xp2fjrb";
       buildDepends = [ dataenc download-curl utf8-string xml ];
       description = "Interface to Google Suggest API";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "GoogleTranslate" = callPackage
    ({ mkDerivation, AttoJson, dataenc, download-curl }:
     mkDerivation {
       pname = "GoogleTranslate";
       version = "0.0.5";
       sha256 = "0hr0rjz7nx5rcy4h5pcbvh8sh9v4qvl9ffrqhnrcslh7ibvwbca6";
       buildDepends = [ AttoJson dataenc download-curl ];
       description = "Interface to Google Translate API";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "GotoT-transformers" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "GotoT-transformers";
       version = "1.0.0.1";
       sha256 = "1w1w1p2cpndiilr002whm58bzqjh9cp9lw3jl7khdxh20c1dfzhy";
       buildDepends = [ transformers ];
       homepage = "http://github.com/gcross/GotoT-transformers";
       description = "A monad and monadic transformer providing \"goto\" functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GrammarProducts" = callPackage
    ({ mkDerivation, ADPfusion, ansi-wl-pprint, cmdargs, data-default
     , FormalGrammars, HaTeX, lens, newtype, parsers, PrimitiveArray
     , semigroups, transformers, trifecta
     }:
     mkDerivation {
       pname = "GrammarProducts";
       version = "0.0.0.4";
       sha256 = "0ni7rjp2cb7n47zkgl63ipr35q54m7f4lsrkcm2s6d0i5pwlv11f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ADPfusion ansi-wl-pprint cmdargs data-default FormalGrammars HaTeX
         lens newtype parsers PrimitiveArray semigroups transformers
         trifecta
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/gramprod";
       description = "Grammar products and higher-dimensional grammars";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Graph500" = callPackage
    ({ mkDerivation, mersenne-random-pure64, mtl, random }:
     mkDerivation {
       pname = "Graph500";
       version = "0.4.0";
       sha256 = "0lhn2r54488949gh5m5fgwrj2z30r9pf34860sikb6zq07gjz759";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mersenne-random-pure64 mtl random ];
       description = "Graph500 benchmark-related definitions and data set generator";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "GraphHammer" = callPackage
    ({ mkDerivation, Graph500, mtl, stm, time }:
     mkDerivation {
       pname = "GraphHammer";
       version = "0.3";
       sha256 = "0fga3g2y38ylvmkgi57h4j5brc7gjxh8d183qfa2vhx8i4sr3pzm";
       buildDepends = [ Graph500 mtl stm time ];
       description = "GraphHammer Haskell graph analyses framework inspired by STINGER";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "GraphHammer-examples" = callPackage
    ({ mkDerivation, Graph500, GraphHammer, mtl }:
     mkDerivation {
       pname = "GraphHammer-examples";
       version = "0.3";
       sha256 = "18p1dr08nq8dnvghkshihzra0p9ja0qa9bxbkm561jkrdpk3zndv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Graph500 GraphHammer mtl ];
       description = "Test harness for TriangleCount analysis";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "GraphSCC" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "GraphSCC";
       version = "1.0.4";
       sha256 = "1wbcx3wb02adb7l4nchxla3laliz0h5q074vfw4z0ic833k977bq";
       description = "Tarjan's algorithm for computing the strongly connected components of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Graphalyze" = callPackage
    ({ mkDerivation, bktrees, fgl, filepath, graphviz, pandoc, random
     , text, time
     }:
     mkDerivation {
       pname = "Graphalyze";
       version = "0.14.1.0";
       sha256 = "0pyrhpl06lsppr8ch21crinkax7fh0k18wfvgjinc8phkk6j5hz3";
       buildDepends = [
         bktrees fgl filepath graphviz pandoc random text time
       ];
       description = "Graph-Theoretic Analysis library";
       license = "unknown";
     }) {};

  "Grempa" = callPackage
    ({ mkDerivation, mtl, QuickCheck, th-lift }:
     mkDerivation {
       pname = "Grempa";
       version = "0.2.2";
       sha256 = "0w0apbk8hw555cbpprvxpnxviyzmbsxzlc6qpf6w0cfsybkkiv1f";
       buildDepends = [ mtl QuickCheck th-lift ];
       description = "Embedded grammar DSL and LALR parser generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GroteTrap" = callPackage
    ({ mkDerivation, mtl, parsec, QuickCheck }:
     mkDerivation {
       pname = "GroteTrap";
       version = "0.5";
       sha256 = "1a43iig84bvmgpjmk6lqzhm3fq5p5hac36icwj4yfyrvzyfn0x7m";
       buildDepends = [ mtl parsec QuickCheck ];
       homepage = "http://www.haskell.org/haskellwiki/GroteTrap";
       description = "Parser and selection library for expression languages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Grow" = callPackage
    ({ mkDerivation, clock, deepseq, definitive-base
     , definitive-filesystem, definitive-parser, definitive-reactive
     , filepath, primitive, time, vector
     }:
     mkDerivation {
       pname = "Grow";
       version = "1.1.0.3";
       sha256 = "1vc4ln5fzvcv68qlanyw8mc6qchnjn1kj9rpz661n8ia1x8gkb3l";
       editedCabalFile = "0spkl7nsxs7452r8d8fx14q9snih101vdq5s3nzjnqgwxswam6g5";
       buildDepends = [
         clock deepseq definitive-base definitive-filesystem
         definitive-parser definitive-reactive filepath primitive time
         vector
       ];
       homepage = "http://coiffier.net/projects/grow.html";
       description = "A declarative make-like interpreter";
       license = "unknown";
     }) {};

  "GrowlNotify" = callPackage
    ({ mkDerivation, binary, Crypto, network }:
     mkDerivation {
       pname = "GrowlNotify";
       version = "0.4";
       sha256 = "13m213d6l81k0iwjbbwg8n2xz960dhfnrs1il48xvlc8z25y6nh5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary Crypto network ];
       description = "Notification utility for Growl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Gtk2hsGenerics" = callPackage
    ({ mkDerivation, cairo, glib, gtk, mtl }:
     mkDerivation {
       pname = "Gtk2hsGenerics";
       version = "0.1";
       sha256 = "1gj775yny73qvi3inc38c6yy1av503m5ilbz7ch0xx4a3ywnw5l9";
       buildDepends = [ cairo glib gtk mtl ];
       description = "Convenience functions to extend Gtk2hs";
       license = "GPL";
     }) {};

  "GtkGLTV" = callPackage
    ({ mkDerivation, bitmap, bitmap-opengl, gtk, gtkglext, GtkTV
     , OpenGL, stb-image, time
     }:
     mkDerivation {
       pname = "GtkGLTV";
       version = "0.2.0";
       sha256 = "1xkc3ga65prffjzlymimwmfnmvf0lc42h2rm4b72rlmm8316kmp2";
       buildDepends = [
         bitmap bitmap-opengl gtk gtkglext GtkTV OpenGL stb-image time
       ];
       description = "OpenGL support for Gtk-based GUIs for Tangible Values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GtkTV" = callPackage
    ({ mkDerivation, gtk, time, TV, TypeCompose, vector-space }:
     mkDerivation {
       pname = "GtkTV";
       version = "0.2.0";
       sha256 = "0jxx8lgg533kjvq1sxr4jvqvxj9pcpabsy2mvbpsd2lwv2ffr618";
       buildDepends = [ gtk time TV TypeCompose vector-space ];
       homepage = "http://haskell.org/haskellwiki/GtkTV";
       description = "Gtk-based GUIs for Tangible Values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GuiHaskell" = callPackage
    ({ mkDerivation, filepath, glade, gtk, parsec, proplang }:
     mkDerivation {
       pname = "GuiHaskell";
       version = "0.1.1";
       sha256 = "1rgyrbnlbvsqgd8m36fccq7qzxj2n682lz2rdq04j35zsgajyk11";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath glade gtk parsec proplang ];
       homepage = "http://www-users.cs.york.ac.uk/~ndm/guihaskell/";
       description = "A graphical REPL and development environment for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "GuiTV" = callPackage
    ({ mkDerivation, DeepArrow, phooey, TV, TypeCompose }:
     mkDerivation {
       pname = "GuiTV";
       version = "0.4";
       sha256 = "15mndbxm83q0d8ci3vj51zwrmzl0f5i5yqv0caw05vlzfsr4ib5i";
       buildDepends = [ DeepArrow phooey TV TypeCompose ];
       homepage = "http://haskell.org/haskellwiki/GuiTV";
       description = "GUIs for Tangible Values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HARM" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HARM";
       version = "0.1.4";
       sha256 = "0mld40jm0qnsr9flbip3s2lxwd43nhzs11v23bm5m2s83y6j33jn";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.engr.uconn.edu/~jeffm/Classes/CSE240-Spring-2001/Lectures/index.html";
       description = "A simple ARM emulator in haskell";
       license = "unknown";
     }) {};

  "HAppS-Data" = callPackage
    ({ mkDerivation, binary, HAppS-Util, HaXml, mtl, syb
     , syb-with-class
     }:
     mkDerivation {
       pname = "HAppS-Data";
       version = "0.9.3";
       sha256 = "0df3bcvqpmjrg2c28jny20r52f3x7gf1wy7r8x71j9wrji56yg5j";
       buildDepends = [ binary HAppS-Util HaXml mtl syb syb-with-class ];
       description = "HAppS data manipulation libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HAppS-IxSet" = callPackage
    ({ mkDerivation, HAppS-Data, HAppS-State, HAppS-Util, hslogger, mtl
     , syb, syb-with-class
     }:
     mkDerivation {
       pname = "HAppS-IxSet";
       version = "0.9.3";
       sha256 = "0wm3apqsqb2p9cqxikz9j6lzi66ya1sn1yplifqszg1v2lpdgb7b";
       buildDepends = [
         HAppS-Data HAppS-State HAppS-Util hslogger mtl syb syb-with-class
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HAppS-Server" = callPackage
    ({ mkDerivation, HAppS-Data, HAppS-IxSet, HAppS-State, HAppS-Util
     , HaXml, hslogger, html, HTTP, mtl, network, parsec, random, syb
     , xhtml
     }:
     mkDerivation {
       pname = "HAppS-Server";
       version = "0.9.3.1";
       sha256 = "0f10qp2aiv036izzdpfpgmja5kqx68kccazkn1cdap636brjjcdh";
       buildDepends = [
         HAppS-Data HAppS-IxSet HAppS-State HAppS-Util HaXml hslogger html
         HTTP mtl network parsec random syb xhtml
       ];
       description = "Web related tools and services";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HAppS-State" = callPackage
    ({ mkDerivation, binary, filepath, HAppS-Data, HAppS-Util, HaXml
     , hslogger, hspread, mtl, network, random, stm, syb
     }:
     mkDerivation {
       pname = "HAppS-State";
       version = "0.9.3";
       sha256 = "1r1ing4c8s91d9p41q7yv6v6xaqs9si438j7b5vnzxgwz0syd6ah";
       buildDepends = [
         binary filepath HAppS-Data HAppS-Util HaXml hslogger hspread mtl
         network random stm syb
       ];
       description = "Event-based distributed state";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HAppS-Util" = callPackage
    ({ mkDerivation, hslogger, mtl }:
     mkDerivation {
       pname = "HAppS-Util";
       version = "0.9.3";
       sha256 = "0mg6p14xv6f9b1rb77mvadzchf6limcypi6z0di1n49pdqjhs4pr";
       buildDepends = [ hslogger mtl ];
       description = "Web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HAppSHelpers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HAppSHelpers";
       version = "0.11";
       sha256 = "1hwxh60b26chcd466vlpxc7hx3smdnfl40mfxpyh8j1597v2aqa3";
       description = "OBSOLETE. Please use happstack-helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HCL" = callPackage
    ({ mkDerivation, mtl, QuickCheck, random }:
     mkDerivation {
       pname = "HCL";
       version = "1.4";
       sha256 = "0dzfnvdc1nm4f7q759xnq1lavi90axc7b6jd39sl898jbjg8wrrl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl QuickCheck random ];
       homepage = "http://github.com/m4dc4p/hcl/tree/master";
       description = "High-level library for building command line interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HCard" = callPackage
    ({ mkDerivation, mtl, QuickCheck, random, random-shuffle }:
     mkDerivation {
       pname = "HCard";
       version = "0.0";
       sha256 = "0bvj1vc8m69bsnjz8xb4nbbpbd4xbqp4kfab0bmk6a4ixgnqk14b";
       buildDepends = [ mtl QuickCheck random random-shuffle ];
       homepage = "http://patch-tag.com/publicrepos/HCard";
       description = "A library for implementing a Deck of Cards";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HCodecs" = callPackage
    ({ mkDerivation, QuickCheck, random }:
     mkDerivation {
       pname = "HCodecs";
       version = "0.5";
       sha256 = "0mhp1alx0p9lzq3vm0k802f8ndm2386sshprn9zb8xq8bsd11gxi";
       buildDepends = [ QuickCheck random ];
       testDepends = [ QuickCheck random ];
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HDBC" = callPackage
    ({ mkDerivation, convertible, mtl, text, time, utf8-string }:
     mkDerivation {
       pname = "HDBC";
       version = "2.4.0.0";
       sha256 = "1zwkrr0pbgxi2y75n2sjr3xs8xa3pxbmnqg3phqkjqcz3j4gcq6y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ convertible mtl text time utf8-string ];
       homepage = "https://github.com/hdbc/hdbc";
       description = "Haskell Database Connectivity";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HDBC-mysql" = callPackage
    ({ mkDerivation, HDBC, time, utf8-string }:
     mkDerivation {
       pname = "HDBC-mysql";
       version = "0.6.6.1";
       sha256 = "1q50xynasb2h65g14ycz4s38fyz185yz1sp9rl02h4p940pz7w9m";
       buildDepends = [ HDBC time utf8-string ];
       homepage = "http://github.com/bos/hdbc-mysql";
       description = "MySQL driver for HDBC";
       license = "LGPL";
     }) {};

  "HDBC-odbc" = callPackage
    ({ mkDerivation, HDBC, mtl, odbc, time, utf8-string }:
     mkDerivation {
       pname = "HDBC-odbc";
       version = "2.4.0.0";
       sha256 = "0zjq5j095jyh0axmgnr59fwhh1nhipj6flz77z46kygagygrg2qz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HDBC mtl time utf8-string ];
       extraLibraries = [ odbc ];
       homepage = "https://github.com/hdbc/hdbc-odbc";
       description = "ODBC driver for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HDBC-postgresql" = callPackage
    ({ mkDerivation, convertible, HDBC, mtl, parsec, postgresql, time
     , utf8-string
     }:
     mkDerivation {
       pname = "HDBC-postgresql";
       version = "2.3.2.2";
       sha256 = "0x42lf429dxjkz22jn5fybimlixxs20zq01ap40344qlwh01hd90";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ convertible HDBC mtl parsec time utf8-string ];
       extraLibraries = [ postgresql ];
       homepage = "http://github.com/hdbc/hdbc-postgresql";
       description = "PostgreSQL driver for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HDBC-postgresql-hstore" = callPackage
    ({ mkDerivation, attoparsec, HDBC, text }:
     mkDerivation {
       pname = "HDBC-postgresql-hstore";
       version = "0.0.1.2";
       sha256 = "0657a1qy51bihh9gvpwpqpm4gch68rw32plnjcfdbc37yjq5dj1d";
       buildDepends = [ attoparsec HDBC text ];
       homepage = "https://bitbucket.org/dpwiz/hdbc-postgresql-hstore";
       description = "Manipulate data in PostgreSQL \"hstore\" columns";
       license = stdenv.lib.licenses.mit;
     }) {};

  "HDBC-session" = callPackage
    ({ mkDerivation, HDBC }:
     mkDerivation {
       pname = "HDBC-session";
       version = "0.1.0.0";
       sha256 = "1fxx0q9hnxwsivsg2qinm0n3lvf89r9b72cnhipjlpf36nin5x5w";
       buildDepends = [ HDBC ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Bracketed connection for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HDBC-sqlite3" = callPackage
    ({ mkDerivation, HDBC, mtl, sqlite, utf8-string }:
     mkDerivation {
       pname = "HDBC-sqlite3";
       version = "2.3.3.0";
       sha256 = "11765nsncgyv9j6r5wpziqyhy0lxrmqbhgricbdx0c788ky75y92";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HDBC mtl utf8-string ];
       extraLibraries = [ sqlite ];
       homepage = "http://software.complete.org/hdbc-sqlite3";
       description = "Sqlite v3 driver for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) sqlite; };

  "HDRUtils" = callPackage
    ({ mkDerivation, colour, mtl, pfstools }:
     mkDerivation {
       pname = "HDRUtils";
       version = "1.0.2";
       sha256 = "0rkykxmqpqiclvxlvfd0v9rrvkkb25shyajdmajxisfqxl684y0g";
       buildDepends = [ colour mtl ];
       extraLibraries = [ pfstools ];
       homepage = "http://vis.renci.org/jeff/pfs";
       description = "Utilities for reading, manipulating, and writing HDR images";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HERA" = callPackage
    ({ mkDerivation, mpfr }:
     mkDerivation {
       pname = "HERA";
       version = "0.2";
       sha256 = "08lry7w4zb7j81q9d7rjpz0chcbr9laxi4h9dz327pfcgmy083sy";
       extraLibraries = [ mpfr ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HFuse" = callPackage
    ({ mkDerivation, fuse }:
     mkDerivation {
       pname = "HFuse";
       version = "0.2.4.4";
       sha256 = "1wsrf9y90dk27da9pm9m11hnrxwrqwvq6c9799b91a91mc2lxslc";
       isLibrary = true;
       isExecutable = true;
       extraLibraries = [ fuse ];
       preConfigure = ''
         sed -i -e "s@  Extra-Lib-Dirs:         /usr/local/lib@  Extra-Lib-Dirs:         ${fuse}/lib@" HFuse.cabal
       '';
       homepage = "https://github.com/m15k/hfuse";
       description = "HFuse is a binding for the Linux FUSE library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HGL" = callPackage
    ({ mkDerivation, X11 }:
     mkDerivation {
       pname = "HGL";
       version = "3.2.0.5";
       sha256 = "0z8dfxg2x530lawx7gyv9d25wcfpwvbfmknq17d5wgkxz47j95wb";
       buildDepends = [ X11 ];
       description = "A simple graphics library based on X11 or Win32";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HGamer3D" = callPackage
    ({ mkDerivation, clock, hashable, hashtables, HGamer3D-Audio
     , HGamer3D-Data, HGamer3D-Graphics3D, HGamer3D-GUI
     , HGamer3D-InputSystem, HGamer3D-Network, HGamer3D-WinEvent, split
     }:
     mkDerivation {
       pname = "HGamer3D";
       version = "0.4.0";
       sha256 = "0gqb4qx1m3sjvp5q9jciidyx12n36li0lypzcbsrzvg473rlngj7";
       buildDepends = [
         clock hashable hashtables HGamer3D-Audio HGamer3D-Data
         HGamer3D-Graphics3D HGamer3D-GUI HGamer3D-InputSystem
         HGamer3D-Network HGamer3D-WinEvent split
       ];
       homepage = "http://www.hgamer3d.org";
       description = "A Game Engine for the Haskell Programmer";
       license = "unknown";
     }) {};

  "HGamer3D-API" = callPackage
    ({ mkDerivation, HGamer3D-Data, HGamer3D-Ogre-Binding
     , HGamer3D-SFML-Binding
     }:
     mkDerivation {
       pname = "HGamer3D-API";
       version = "0.1.6";
       sha256 = "14wji303z3frjr4rc675pcispbpbpm1ilj6g3cb1fxm5wmi30q5l";
       buildDepends = [
         HGamer3D-Data HGamer3D-Ogre-Binding HGamer3D-SFML-Binding
       ];
       homepage = "http://www.althainz.de/HGamer3D.html";
       description = "Library to enable 3D game development for Haskell - API";
       license = "unknown";
     }) {};

  "HGamer3D-Audio" = callPackage
    ({ mkDerivation, HGamer3D-Data, HGamer3D-SFML-Binding }:
     mkDerivation {
       pname = "HGamer3D-Audio";
       version = "0.4.0";
       sha256 = "0kanmnb85igid40k8dmszfj43jzmp9m7vk8diwcc63k1p92z0z5b";
       buildDepends = [ HGamer3D-Data HGamer3D-SFML-Binding ];
       homepage = "http://www.hgamer3d.org";
       description = "Audio Functionality for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-Bullet-Binding" = callPackage
    ({ mkDerivation, HGamer3D-Data }:
     mkDerivation {
       pname = "HGamer3D-Bullet-Binding";
       version = "0.2.1";
       sha256 = "1ilj8p1gm56dffics90qj6gspnam56s84wvaig9s0cwjbwxqi4hy";
       buildDepends = [ HGamer3D-Data ];
       homepage = "http://www.hgamer3d.org";
       description = "Windows Game Engine for the Haskell Programmer - Bullet Bindings";
       license = "unknown";
     }) {};

  "HGamer3D-CAudio-Binding" = callPackage
    ({ mkDerivation, HGamer3D-Data, HGamer3DCAudio015 }:
     mkDerivation {
       pname = "HGamer3D-CAudio-Binding";
       version = "0.1.5";
       sha256 = "1q69ffhnnh4iaghb1g8s6bqlsry7jy5sbp5vpg4lprnr4wna5ya1";
       buildDepends = [ HGamer3D-Data ];
       extraLibraries = [ HGamer3DCAudio015 ];
       homepage = "http://www.althainz.de/HGamer3D.html";
       description = "Library to enable 3D game development for Haskell - cAudio Bindings";
       license = "unknown";
     }) {};

  "HGamer3D-CEGUI-Binding" = callPackage
    ({ mkDerivation, CEGUIBase, CEGUIOgreRenderer, hg3dcegui040
     , HGamer3D-Data
     }:
     mkDerivation {
       pname = "HGamer3D-CEGUI-Binding";
       version = "0.4.0";
       sha256 = "1000h60ffghkgy5vg30sq732h3g980rqqyqjf86kpf3l99884b62";
       buildDepends = [ HGamer3D-Data ];
       extraLibraries = [ CEGUIBase CEGUIOgreRenderer hg3dcegui040 ];
       homepage = "http://www.hgamer3d.org";
       description = "A Game Engine for the Haskell Programmer - CEGUI Bindings";
       license = "unknown";
     }) {};

  "HGamer3D-Data" = callPackage
    ({ mkDerivation, clock, filepath, FindBin, vect }:
     mkDerivation {
       pname = "HGamer3D-Data";
       version = "0.4.0";
       sha256 = "1cn24najcg3yg7b2dzd6hkhwi9h8c0hl6qsi3524wapc2j50rm8q";
       buildDepends = [ clock filepath FindBin vect ];
       homepage = "http://www.hgamer3d.org";
       description = "Game Engine for the Haskell Programmer - Data Definitions and Utilities";
       license = "unknown";
     }) {};

  "HGamer3D-Enet-Binding" = callPackage
    ({ mkDerivation, enet, hg3denet040, HGamer3D-Data }:
     mkDerivation {
       pname = "HGamer3D-Enet-Binding";
       version = "0.4.0";
       sha256 = "0fsrq22b89rh2im86q39zs1z2dxajk82qgvldxvdq8lmvai47ifz";
       buildDepends = [ HGamer3D-Data ];
       extraLibraries = [ enet hg3denet040 ];
       homepage = "http://www.hgamer3d.org";
       description = "Enet Binding for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-GUI" = callPackage
    ({ mkDerivation, HGamer3D-CEGUI-Binding, HGamer3D-Data
     , HGamer3D-WinEvent, split
     }:
     mkDerivation {
       pname = "HGamer3D-GUI";
       version = "0.4.0";
       sha256 = "006j6g6w990il30kgpwvls77hsmlbg2haiwckrpq3mcywxrhrbsd";
       buildDepends = [
         HGamer3D-CEGUI-Binding HGamer3D-Data HGamer3D-WinEvent split
       ];
       homepage = "http://www.hgamer3d.org";
       description = "GUI Functionality for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-Graphics3D" = callPackage
    ({ mkDerivation, filepath, HGamer3D-Data, HGamer3D-Ogre-Binding
     , mtl, transformers
     }:
     mkDerivation {
       pname = "HGamer3D-Graphics3D";
       version = "0.4.0";
       sha256 = "1yq9cqvd2rvq49lrqmq54k9adwy9rhi8nfp8n41anp51iac9kxaq";
       buildDepends = [
         filepath HGamer3D-Data HGamer3D-Ogre-Binding mtl transformers
       ];
       homepage = "http://www.hgamer3d.org";
       description = "3D Graphics Functionality for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-InputSystem" = callPackage
    ({ mkDerivation, HGamer3D-Data, HGamer3D-SDL2-Binding
     , HGamer3D-SFML-Binding
     }:
     mkDerivation {
       pname = "HGamer3D-InputSystem";
       version = "0.4.0";
       sha256 = "1pxcv0vxnxqrh54iv9qcih76d7yzy4bwr59mf79rcs059909v8za";
       buildDepends = [
         HGamer3D-Data HGamer3D-SDL2-Binding HGamer3D-SFML-Binding
       ];
       homepage = "http://www.hgamer3d.org";
       description = "Joystick, Mouse and Keyboard Functionality for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-Network" = callPackage
    ({ mkDerivation, HGamer3D-Data, HGamer3D-Enet-Binding }:
     mkDerivation {
       pname = "HGamer3D-Network";
       version = "0.4.0";
       sha256 = "0fx14cqq0i2cmfjpir3igh5j40gfl2kg19l1w67iqqw2pg8pn25r";
       buildDepends = [ HGamer3D-Data HGamer3D-Enet-Binding ];
       homepage = "http://www.hgamer3d.org";
       description = "Networking Functionality for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-OIS-Binding" = callPackage
    ({ mkDerivation, HGamer3D-Data, HGamer3D-Ogre-Binding
     , HGamer3DOIS015
     }:
     mkDerivation {
       pname = "HGamer3D-OIS-Binding";
       version = "0.1.5";
       sha256 = "1n00s6vpwyw8zcasqzg6ycgc98w6hh3sylxjh05w1pya9v853syf";
       buildDepends = [ HGamer3D-Data HGamer3D-Ogre-Binding ];
       extraLibraries = [ HGamer3DOIS015 ];
       homepage = "http://www.althainz.de/HGamer3D.html";
       description = "Library to enable 3D game development for Haskell - OIS Bindings";
       license = "unknown";
     }) {};

  "HGamer3D-Ogre-Binding" = callPackage
    ({ mkDerivation, hg3dogre040, HGamer3D-Data, mtl, OgreMain
     , OgrePaging, OgreProperty, OgreRTShaderSystem, OgreTerrain
     , transformers
     }:
     mkDerivation {
       pname = "HGamer3D-Ogre-Binding";
       version = "0.4.0";
       sha256 = "15gfjirldmn066wn9cmxnvdcljiz6vd2lghmccz530h5qnc042zh";
       buildDepends = [ HGamer3D-Data mtl transformers ];
       extraLibraries = [
         hg3dogre040 OgreMain OgrePaging OgreProperty OgreRTShaderSystem
         OgreTerrain
       ];
       homepage = "http://www.hgamer3d.org";
       description = "Ogre Binding for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-SDL2-Binding" = callPackage
    ({ mkDerivation, hg3dsdl2040, HGamer3D-Data, libX11, SDL2
     , utf8-string
     }:
     mkDerivation {
       pname = "HGamer3D-SDL2-Binding";
       version = "0.4.0";
       sha256 = "0yw8666iiazmdppqq229z29fnh572cdjl7ss9xx130ahf6jfvaxs";
       buildDepends = [ HGamer3D-Data utf8-string ];
       extraLibraries = [ hg3dsdl2040 libX11 SDL2 ];
       homepage = "http://www.hgamer3d.org";
       description = "SDL2 Binding for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-SFML-Binding" = callPackage
    ({ mkDerivation, hg3dsfml040, HGamer3D-Data, sfml-audio
     , sfml-network, sfml-system, sfml-window
     }:
     mkDerivation {
       pname = "HGamer3D-SFML-Binding";
       version = "0.4.0";
       sha256 = "132pnlbksyci9wb76sdyq38w0qw83sscw2kw99kgaphb1bhxl22d";
       buildDepends = [ HGamer3D-Data ];
       extraLibraries = [
         hg3dsfml040 sfml-audio sfml-network sfml-system sfml-window
       ];
       homepage = "http://www.hgamer3d.org";
       description = "SFML Binding for HGamer3D";
       license = "unknown";
     }) { inherit (pkgs) sfml-audio; };

  "HGamer3D-WinEvent" = callPackage
    ({ mkDerivation, HGamer3D-Data, HGamer3D-SDL2-Binding, text }:
     mkDerivation {
       pname = "HGamer3D-WinEvent";
       version = "0.4.0";
       sha256 = "0d3vjlgpzzb473dmhllxvi05lnh010vgfdbizlj4yxywrp6aas9a";
       buildDepends = [ HGamer3D-Data HGamer3D-SDL2-Binding text ];
       homepage = "http://www.hgamer3d.org";
       description = "Windowing and Event Functionality for HGamer3D";
       license = "unknown";
     }) {};

  "HGamer3D-Wire" = callPackage
    ({ mkDerivation, HGamer3D, HGamer3D-Audio, HGamer3D-Data
     , HGamer3D-GUI, HGamer3D-InputSystem, HGamer3D-WinEvent, mtl
     , netwire, transformers
     }:
     mkDerivation {
       pname = "HGamer3D-Wire";
       version = "0.3.3";
       sha256 = "0w5iafs9ldafc3kzq13alnk1ng766p9w97nak3aijpxfrc4m6z77";
       buildDepends = [
         HGamer3D HGamer3D-Audio HGamer3D-Data HGamer3D-GUI
         HGamer3D-InputSystem HGamer3D-WinEvent mtl netwire transformers
       ];
       homepage = "http://www.hgamer3d.org";
       description = "Wire Functionality for HGamer3D";
       license = "unknown";
     }) {};

  "HHDL" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "HHDL";
       version = "0.1.0.0";
       sha256 = "1215nz6l3bbkld2fqqsc494xw4qw4vqavznaqxgja2p60w9mwg0q";
       buildDepends = [ mtl ];
       homepage = "http://thesz.mskhug.ru/svn/hhdl/hackage/hhdl/";
       description = "Hardware Description Language embedded in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HJScript" = callPackage
    ({ mkDerivation, HJavaScript, hsp, mtl, text }:
     mkDerivation {
       pname = "HJScript";
       version = "0.7.0";
       sha256 = "0xvhzmsl1z6im36svjhcl4zlbnmpknlfn0m426cj5l06a3c5mfa8";
       buildDepends = [ HJavaScript hsp mtl text ];
       homepage = "http://patch-tag.com/r/nibro/hjscript";
       description = "HJScript is a Haskell EDSL for writing JavaScript programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HJVM" = callPackage
    ({ mkDerivation, Cabal, filepath, haskell-src-exts, HUnit, jvm, mtl
     , parsec, test-framework, test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "HJVM";
       version = "0.1";
       sha256 = "0ixzhgrb2jj7np8gmfwca724w5n26i5xalppm5idnhxw6k4jbklr";
       buildDepends = [
         filepath haskell-src-exts mtl parsec transformers
       ];
       testDepends = [
         Cabal haskell-src-exts HUnit mtl parsec test-framework
         test-framework-hunit transformers
       ];
       extraLibraries = [ jvm ];
       homepage = "https://github.com/JPMoresmau/HJVM";
       description = "A library to create a Java Virtual Machine and manipulate Java objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HJavaScript" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HJavaScript";
       version = "0.4.7";
       sha256 = "0sb2wqbf6kml5d414xi6jk0gr31673djqxa5wg1mxl40vwn14pvh";
       description = "HJavaScript is an abstract syntax for a typed subset of JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HLearn-algebra" = callPackage
    ({ mkDerivation, ConstraintKinds, deepseq, hashable, MonadRandom
     , parallel, random, vector, vector-heterogenous
     }:
     mkDerivation {
       pname = "HLearn-algebra";
       version = "1.1.0.1";
       sha256 = "1k0a01cqaay4wp6i603yvcjpmap7inyjxiblqkbpifk9mwjxf15a";
       buildDepends = [
         ConstraintKinds deepseq hashable MonadRandom parallel random vector
         vector-heterogenous
       ];
       homepage = "http://github.com/mikeizbicki/HLearn/";
       description = "Algebraic foundation for homomorphic learning";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HLearn-approximation" = callPackage
    ({ mkDerivation, ConstraintKinds, heap, HLearn-algebra
     , HLearn-datastructures, HLearn-distributions, list-extras, vector
     }:
     mkDerivation {
       pname = "HLearn-approximation";
       version = "1.1.0";
       sha256 = "1gqrpnliy4jqjlhdhi7vygvq2lnfgwl2hr5hlkzgqmz2gjyib8vn";
       buildDepends = [
         ConstraintKinds heap HLearn-algebra HLearn-datastructures
         HLearn-distributions list-extras vector
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HLearn-classification" = callPackage
    ({ mkDerivation, binary, ConstraintKinds, deepseq, dlist, hashable
     , HLearn-algebra, HLearn-distributions, list-extras, logfloat
     , math-functions, MonadRandom, normaldistribution, parsec
     , primitive, QuickCheck, statistics, vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "HLearn-classification";
       version = "1.0.1.3";
       sha256 = "11c1016nhhckmdrzlazz5b7iabl0iz0g2245bwws3alnnn74svhd";
       buildDepends = [
         binary ConstraintKinds deepseq dlist hashable HLearn-algebra
         HLearn-distributions list-extras logfloat math-functions
         MonadRandom normaldistribution parsec primitive QuickCheck
         statistics vector vector-th-unbox
       ];
       homepage = "http://github.com/mikeizbicki/HLearn/";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HLearn-datastructures" = callPackage
    ({ mkDerivation, ConstraintKinds, deepseq, HLearn-algebra
     , list-extras, MonadRandom, QuickCheck, vector
     }:
     mkDerivation {
       pname = "HLearn-datastructures";
       version = "1.1.0";
       sha256 = "06kbscd7nbbb6dlsgyigyag851bbvhiz6p05gdawpb7y0fh8f3wb";
       buildDepends = [
         ConstraintKinds deepseq HLearn-algebra list-extras MonadRandom
         QuickCheck vector
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HLearn-distributions" = callPackage
    ({ mkDerivation, ConstraintKinds, deepseq, erf, gamma, graphviz
     , HLearn-algebra, HLearn-datastructures, hmatrix, list-extras
     , math-functions, MonadRandom, normaldistribution, QuickCheck
     , statistics, vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "HLearn-distributions";
       version = "1.1.0.2";
       sha256 = "19v9askkccbv405bchq5h72jahsbivj2s31ajwi316kksan2iwzf";
       buildDepends = [
         ConstraintKinds deepseq erf gamma graphviz HLearn-algebra
         HLearn-datastructures hmatrix list-extras math-functions
         MonadRandom normaldistribution QuickCheck statistics vector
         vector-th-unbox
       ];
       homepage = "http://github.com/mikeizbicki/HLearn/";
       description = "Distributions for use with the HLearn library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HList" = callPackage
    ({ mkDerivation, cmdargs, diffutils, doctest, filepath, hspec, lens
     , mtl, syb, tagged
     }:
     mkDerivation {
       pname = "HList";
       version = "0.3.4.1";
       sha256 = "02hw496qv2p0nnbz7lq7jfqnis19qqjsylyvdksqbwmjprk32rh2";
       buildDepends = [ mtl tagged ];
       testDepends = [ cmdargs doctest filepath hspec lens mtl syb ];
       buildTools = [ diffutils ];
       description = "Heterogeneous lists";
       license = stdenv.lib.licenses.mit;
     }) {};

  "HListPP" = callPackage
    ({ mkDerivation, applicative-quoters, regex-applicative }:
     mkDerivation {
       pname = "HListPP";
       version = "0.2";
       sha256 = "0jq2sdfg47dqf8gmmzm0049x4hsfh9prgfvxzplhrxsisknyhfr8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ applicative-quoters regex-applicative ];
       homepage = "http://code.haskell.org/~aavogt/HListPP";
       description = "A preprocessor for HList labelable labels";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HLogger" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "HLogger";
       version = "0.0.1.0";
       sha256 = "0amxyg9j6fh58g2wh9k0231mxmvi6j96z7ykd3rm3jzs96fhlncp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ time ];
       homepage = "http://www.pontarius.org/sub-projects/hlogger/";
       description = "Simple, concurrent and easy-to-use logging library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HMM" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HMM";
       version = "0.2.1";
       sha256 = "01y8l76c56gysynbilp32yq0wfc129hl24siw8s9fmpn98qa71s6";
       homepage = "https://github.com/mikeizbicki/hmm";
       description = "A hidden markov model library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HMap" = callPackage
    ({ mkDerivation, hashable, mtl, unordered-containers }:
     mkDerivation {
       pname = "HMap";
       version = "1.2.1";
       sha256 = "12dbjjvq7qlr2clbzbhwcbvmwd9amlkwmf55cn46qvvakinv6x2i";
       buildDepends = [ hashable mtl unordered-containers ];
       homepage = "https://github.com/atzeus/HMap";
       description = "Fast heterogeneous maps and unconstrained typeable like functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HNM" = callPackage
    ({ mkDerivation, glib, gtk, mtl, regex-posix }:
     mkDerivation {
       pname = "HNM";
       version = "0.1.2";
       sha256 = "04325gwmlrx4iy9609vzaw2dhs4kg3ydr4r6af6rllrf500f6w9j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ glib gtk mtl regex-posix ];
       homepage = "http://sert.homedns.org/hs/hnm/";
       description = "Happy Network Manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HODE" = callPackage
    ({ mkDerivation, ode }:
     mkDerivation {
       pname = "HODE";
       version = "2008.10.27";
       sha256 = "0fr3bivmlciicba1brhm86l8diadb765ff1s8g6ylygs8l7lingv";
       extraLibraries = [ ode ];
       description = "Binding to libODE";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HOpenCV" = callPackage
    ({ mkDerivation, allocated-processor, opencv, vector-space }:
     mkDerivation {
       pname = "HOpenCV";
       version = "0.1.2.4";
       sha256 = "1q32rcrzv79z125sbjlzhd4sl1pl8if01vrwd7y18s3acs3aqr4b";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ allocated-processor vector-space ];
       pkgconfigDepends = [ opencv ];
       description = "A binding for the OpenCV computer vision library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HPDF" = callPackage
    ({ mkDerivation, binary, mtl, random, vector, zlib }:
     mkDerivation {
       pname = "HPDF";
       version = "1.4.6";
       sha256 = "15v1mf58fqa25higf52jqlf3fw2fbggfm5v8a8v00zz6q0f3lzn9";
       buildDepends = [ binary mtl random vector zlib ];
       homepage = "http://www.alpheccar.org";
       description = "Generation of PDF documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HPath" = callPackage
    ({ mkDerivation, Cabal, filepath, haskell-src-exts, mtl, parsec
     , utf8-string
     }:
     mkDerivation {
       pname = "HPath";
       version = "0.0.2";
       sha256 = "10hlqyhcpgnkiqwjwb3d10wrhzc82jcbz1qvxa0mzzif36rys1wk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath haskell-src-exts mtl parsec utf8-string
       ];
       homepage = "http://github.com/solidsnack/HPath";
       description = "Extract Haskell declarations by name";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HPi" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HPi";
       version = "0.4.0";
       sha256 = "0d0r89a92lavbaf6svkqwd7fvc1q4kwbdvr0jvxarx2xgrhl342a";
       homepage = "https://github.com/WJWH/HPi";
       description = "GPIO and I2C functions for the Raspberry Pi";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HPlot" = callPackage
    ({ mkDerivation, c2hs, glade, glib, gtk, plplotd-gnome2 }:
     mkDerivation {
       pname = "HPlot";
       version = "0.3";
       sha256 = "022642xp13fl34y854n4j7kxn0nyxhrz4gxgn3nfqs67m13bcsqy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ glade glib gtk ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ plplotd-gnome2 ];
       homepage = "http://yakov.cc/HPlot.html";
       description = "A minimal monadic PLplot interface for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HPong" = callPackage
    ({ mkDerivation, data-accessor, data-accessor-template, GLFW
     , OpenGL
     }:
     mkDerivation {
       pname = "HPong";
       version = "0.1.2";
       sha256 = "0dzzq4ksny537b151g6c1jgj2ns143klhdjfbq84srs026pvpvzi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-accessor data-accessor-template GLFW OpenGL
       ];
       homepage = "http://bonsaicode.wordpress.com/2009/04/23/hpong-012/";
       description = "A simple OpenGL Pong game based on GLFW";
       license = "GPL";
     }) {};

  "HROOT" = callPackage
    ({ mkDerivation, fficxx-runtime, HROOT-core, HROOT-graf, HROOT-hist
     , HROOT-io, HROOT-math
     }:
     mkDerivation {
       pname = "HROOT";
       version = "0.8";
       sha256 = "0q6n5j1hzl8fk6a0ziqjzfi1515shqzqxx0argbvnhw85vjajvqf";
       editedCabalFile = "05q9v8plyp9ra1450065lg0i4jgqwhwpl25i8l6785q5ksiqn1a3";
       buildDepends = [
         fficxx-runtime HROOT-core HROOT-graf HROOT-hist HROOT-io HROOT-math
       ];
       homepage = "http://ianwookim.org/HROOT";
       description = "Haskell binding to ROOT RooFit modules";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "HROOT-core" = callPackage
    ({ mkDerivation, fficxx-runtime }:
     mkDerivation {
       pname = "HROOT-core";
       version = "0.8";
       sha256 = "1f40n224r640dp3g4x9kwnpcjpll3axs3pc71nqcch748bh0f60n";
       buildDepends = [ fficxx-runtime ];
       homepage = "http://ianwookim.org/HROOT";
       description = "Haskell binding to ROOT Core modules";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "HROOT-graf" = callPackage
    ({ mkDerivation, fficxx-runtime, HROOT-core, HROOT-hist }:
     mkDerivation {
       pname = "HROOT-graf";
       version = "0.8";
       sha256 = "1jh2c6wrzajrzbkw77fsvjnj7nhrfx192hs9vlkd0aja2xy7z0bw";
       buildDepends = [ fficxx-runtime HROOT-core HROOT-hist ];
       homepage = "http://ianwookim.org/HROOT";
       description = "Haskell binding to ROOT Graf modules";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "HROOT-hist" = callPackage
    ({ mkDerivation, fficxx-runtime, HROOT-core }:
     mkDerivation {
       pname = "HROOT-hist";
       version = "0.8";
       sha256 = "0yzlqg2nzw26j1a2i8zaihwd22bl7y9cbxxps99vy7fxph81ikh1";
       buildDepends = [ fficxx-runtime HROOT-core ];
       homepage = "http://ianwookim.org/HROOT";
       description = "Haskell binding to ROOT Hist modules";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "HROOT-io" = callPackage
    ({ mkDerivation, fficxx-runtime, HROOT-core }:
     mkDerivation {
       pname = "HROOT-io";
       version = "0.8";
       sha256 = "0sbh6jz24xv2pvh0m2f26aqj3fzkmyiqp8p4g1vcnh8jlisdn6k2";
       buildDepends = [ fficxx-runtime HROOT-core ];
       homepage = "http://ianwookim.org/HROOT";
       description = "Haskell binding to ROOT IO modules";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "HROOT-math" = callPackage
    ({ mkDerivation, fficxx-runtime, HROOT-core }:
     mkDerivation {
       pname = "HROOT-math";
       version = "0.8";
       sha256 = "0qmsvrhxzdw2n0lw8x06l2sbx36xm77nv55kpps1h60l4l0nmzwm";
       buildDepends = [ fficxx-runtime HROOT-core ];
       homepage = "http://ianwookim.org/HROOT";
       description = "Haskell binding to ROOT Math modules";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "HRay" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HRay";
       version = "1.2.3";
       sha256 = "0bg0b8260cd2l8q7ccijwqg1yz49mkifv1r0a5q1hrbsagvac4nf";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://boegel.kejo.be/ELIS/Haskell/HRay/";
       description = "Haskell raytracer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HSFFIG" = callPackage
    ({ mkDerivation, Cabal, filepath, parsec }:
     mkDerivation {
       pname = "HSFFIG";
       version = "1.1.3";
       sha256 = "10zkg2lhvzxi6csyrah8kw3xd1da60im0whpg884hpnf5h220086";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath parsec ];
       homepage = "http://www.haskell.org/haskellwiki/HSFFIG";
       description = "Generate FFI import declarations from C include files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HSGEP" = callPackage
    ({ mkDerivation, csv, mersenne-random-pure64, monad-mersenne-random
     , mtl, split, vector
     }:
     mkDerivation {
       pname = "HSGEP";
       version = "0.1.5";
       sha256 = "16k853180smf2smw8ch3mzjv14imj9w2ssh61hcc23carhrsbg9p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         csv mersenne-random-pure64 monad-mersenne-random mtl split vector
       ];
       homepage = "http://github.com/mjsottile/hsgep/";
       description = "Gene Expression Programming evolutionary algorithm in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HSH" = callPackage
    ({ mkDerivation, filepath, hslogger, MissingH, mtl, regex-base
     , regex-compat, regex-posix
     }:
     mkDerivation {
       pname = "HSH";
       version = "2.1.2";
       sha256 = "17ysn131xskx4s1g5kg08zy141q3q16bns4bsg3yjzvf6cjpz2kq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath hslogger MissingH mtl regex-base regex-compat regex-posix
       ];
       homepage = "http://software.complete.org/hsh";
       description = "Library to mix shell scripting with Haskell programs";
       license = "LGPL";
     }) {};

  "HSHHelpers" = callPackage
    ({ mkDerivation, DebugTraceHelpers, filepath, HSH
     , HStringTemplateHelpers, MissingH, mtl, regex-pcre
     }:
     mkDerivation {
       pname = "HSHHelpers";
       version = "0.24";
       sha256 = "0mz25xak9fkircdxcpzrf3rym9l5ivhifk7dqm2xki3mv6fw214d";
       buildDepends = [
         DebugTraceHelpers filepath HSH HStringTemplateHelpers MissingH mtl
         regex-pcre
       ];
       description = "Convenience functions that use HSH, instances for HSH";
       license = "GPL";
     }) {};

  "HSlippyMap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HSlippyMap";
       version = "2.2";
       sha256 = "17n1kpva97lwhwg2vs7875bfqlwcq6xpl2agqc53qb7j4153p559";
       homepage = "https://github.com/j4/HSlippyMap";
       description = "OpenStreetMap Slippy Map";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HSmarty" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-expr, HTF, HTTP, mtl
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "HSmarty";
       version = "0.2.0.2";
       sha256 = "1b3mg99yhbv8drnqizndyvpy760na58fwzsnfhgbi0a77126wdlr";
       buildDepends = [
         aeson attoparsec attoparsec-expr HTF HTTP mtl text
         unordered-containers vector
       ];
       testDepends = [
         aeson attoparsec attoparsec-expr HTF HTTP mtl text
         unordered-containers vector
       ];
       homepage = "https://github.com/agrafix/HSmarty";
       description = "Haskell implementation of a subset of the PHP-Smarty template language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HSoundFile" = callPackage
    ({ mkDerivation, binary, filepath, mtl, parallel }:
     mkDerivation {
       pname = "HSoundFile";
       version = "0.2.2";
       sha256 = "0qlz17dzlysj36zz3s8dzwvfdr9rdfp6gnabc262iraidqapshzb";
       buildDepends = [ binary filepath mtl parallel ];
       homepage = "http://mml.music.utexas.edu/jwlato/HSoundFile";
       description = "Audio file reading/writing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HStringTemplate" = callPackage
    ({ mkDerivation, blaze-builder, deepseq, filepath, mtl, parsec, syb
     , text, time, utf8-string, void
     }:
     mkDerivation {
       pname = "HStringTemplate";
       version = "0.7.3";
       sha256 = "1gw4v16nk0878qplcx6by2bl4280lwyn9a252p6ldaqlbk9vygw8";
       editedCabalFile = "09xhmy4pzm3hb0nhgk8z0ing8rrf6b9i1dqx7iagxcv73fdx3r7c";
       buildDepends = [
         blaze-builder deepseq filepath mtl parsec syb text time utf8-string
         void
       ];
       description = "StringTemplate implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HStringTemplateHelpers" = callPackage
    ({ mkDerivation, FileManipCompat, filepath, HSH, HStringTemplate
     , mtl, safe, strict
     }:
     mkDerivation {
       pname = "HStringTemplateHelpers";
       version = "0.0.14";
       sha256 = "1dgr28hxm9zlxl13ms9mn63rbm5ya6bkyys6q0kbns2y2zwmkswh";
       buildDepends = [
         FileManipCompat filepath HSH HStringTemplate mtl safe strict
       ];
       homepage = "http://patch-tag.com/tphyahoo/r/tphyahoo/HStringTemplateHelpers";
       description = "Convenience functions and instances for HStringTemplate";
       license = "GPL";
     }) {};

  "HSvm" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HSvm";
       version = "0.1.0.2.89";
       sha256 = "1mb8kclb7631ihj356g5ddf758cnwz9y6r5ck72daa7vndz01aa9";
       description = "Haskell Bindings for libsvm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HTF" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base64-bytestring, cpphs
     , Diff, filepath, haskell-lexer, haskell-src, HUnit, lifted-base
     , monad-control, mtl, QuickCheck, random, regex-compat, temporary
     , text, time, unordered-containers, vector, xmlgen
     }:
     mkDerivation {
       pname = "HTF";
       version = "0.12.2.3";
       sha256 = "0g5z2ypn6i7wpz1439c6qjmi8lw2b86zaljkgwchjn8r8gvw4mbm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring cpphs Diff haskell-lexer haskell-src HUnit
         lifted-base monad-control mtl QuickCheck random regex-compat text
         time vector xmlgen
       ];
       testDepends = [
         aeson aeson-pretty filepath HUnit mtl random regex-compat temporary
         text unordered-containers
       ];
       homepage = "https://github.com/skogsbaer/HTF/";
       description = "The Haskell Test Framework";
       license = "LGPL";
     }) {};

  "HTTP" = callPackage
    ({ mkDerivation, case-insensitive, conduit, conduit-extra, deepseq
     , http-types, httpd-shed, HUnit, mtl, network, network-uri, parsec
     , pureMD5, split, test-framework, test-framework-hunit, wai, warp
     }:
     mkDerivation {
       pname = "HTTP";
       version = "4000.2.18";
       sha256 = "1jn0ikbdwhd32qjwpnsmpnmy0dxhmwfhf8851ifxik91fn7j5j4k";
       buildDepends = [ mtl network network-uri parsec ];
       testDepends = [
         case-insensitive conduit conduit-extra deepseq http-types
         httpd-shed HUnit mtl network network-uri pureMD5 split
         test-framework test-framework-hunit wai warp
       ];
       homepage = "https://github.com/haskell/HTTP";
       description = "A library for client-side HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HTTP-Simple" = callPackage
    ({ mkDerivation, HTTP, network }:
     mkDerivation {
       pname = "HTTP-Simple";
       version = "0.2";
       sha256 = "1294pn82fbskgfw2mh3ri31wab5l9y3j0g50dcx5sqbhz79pnj9w";
       buildDepends = [ HTTP network ];
       homepage = "http://www.b7j0c.org/content/haskell-http.html";
       description = "DEPRECATED Enable simple wrappers to Network.HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HTab" = callPackage
    ({ mkDerivation, cmdargs, deepseq, hylolib, mtl, strict }:
     mkDerivation {
       pname = "HTab";
       version = "1.6.3";
       sha256 = "0c0igscng6gqhabmvvgappsbzbhkpybcx7vr8yd72pqh988ml4zv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs deepseq hylolib mtl strict ];
       homepage = "http://www.glyc.dc.uba.ar/intohylo/htab.php";
       description = "Tableau based theorem prover for hybrid logics";
       license = "GPL";
     }) {};

  "HTicTacToe" = callPackage
    ({ mkDerivation, mtl, random, SDL, SDL-image, SDL-ttf }:
     mkDerivation {
       pname = "HTicTacToe";
       version = "0.2";
       sha256 = "0h3pr4lyx14zndwbas5ba8sg3s84sq19qhh6pcqpy4v2ajfyyfqc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl random SDL SDL-image SDL-ttf ];
       homepage = "http://github.com/snkkid/HTicTacToe";
       description = "An SDL tic-tac-toe game";
       license = stdenv.lib.licenses.mit;
     }) {};

  "HUnit" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "HUnit";
       version = "1.2.5.2";
       sha256 = "0hcs6qh8bqhip1kkjjnw7ccgcsmawdz5yvffjj5y8zd2vcsavx8a";
       buildDepends = [ deepseq ];
       homepage = "http://hunit.sourceforge.net/";
       description = "A unit testing framework for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HUnit-Diff" = callPackage
    ({ mkDerivation, ansi-terminal, Diff, groom, HUnit }:
     mkDerivation {
       pname = "HUnit-Diff";
       version = "0.1";
       sha256 = "0dlsx6qicnrqkhb52jbgh31f0y6lxh32yl5gr6bg3fnqr36vc6x6";
       buildDepends = [ ansi-terminal Diff groom HUnit ];
       homepage = "https://github.com/dag/HUnit-Diff";
       description = "Assertions for HUnit with difference reporting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HUnit-Plus" = callPackage
    ({ mkDerivation, Cabal, cmdargs, hashable, hexpat, hostname, parsec
     , time, timeit
     }:
     mkDerivation {
       pname = "HUnit-Plus";
       version = "1.0.1";
       sha256 = "0ph4560i8nb4ggbfc2yfam0mgfl21pnpgj0x0v9dh86lbfj9p4ki";
       buildDepends = [
         Cabal cmdargs hashable hexpat hostname parsec time timeit
       ];
       testDepends = [
         Cabal cmdargs hashable hexpat hostname parsec time timeit
       ];
       homepage = "https://github.com/emc2/HUnit-Plus";
       description = "A test framework building on HUnit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HUnit-approx" = callPackage
    ({ mkDerivation, HUnit }:
     mkDerivation {
       pname = "HUnit-approx";
       version = "1.0";
       sha256 = "0svkjvcanjsi5bhn9b91jhig36np5imr3qyj6b1s5msm7wmlk3v1";
       buildDepends = [ HUnit ];
       testDepends = [ HUnit ];
       homepage = "https://github.com/goldfirere/HUnit-approx";
       description = "Approximate equality for floating point numbers with HUnit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HXMPP" = callPackage
    ({ mkDerivation, base64-string, binary, crypto-api, enumerator
     , HLogger, network, pureMD5, random, regex-posix, text
     , transformers, utf8-string, xml-enumerator, xml-types
     }:
     mkDerivation {
       pname = "HXMPP";
       version = "0.0.1.0";
       sha256 = "094j5bafrwr0d5sz3fidz7k328w6f4nqhja2c9gf89759nc470ss";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base64-string binary crypto-api enumerator HLogger network pureMD5
         random regex-posix text transformers utf8-string xml-enumerator
         xml-types
       ];
       homepage = "http://www.pontarius.org/sub-projects/hxmpp/";
       description = "A (prototyped) easy to use XMPP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HXQ" = callPackage
    ({ mkDerivation, haskeline, HTTP, mtl, regex-base, regex-compat }:
     mkDerivation {
       pname = "HXQ";
       version = "0.19.0";
       sha256 = "1k2lway8nfy6vwsxq7kmjh25q5diw8sy4hrqzn3irk6rlg7zh77l";
       buildDepends = [ haskeline HTTP mtl regex-base regex-compat ];
       homepage = "http://lambda.uta.edu/HXQ/";
       description = "A Compiler from XQuery to Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaLeX" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "HaLeX";
       version = "1.2.1";
       sha256 = "029khjgyay3pzydq7bj6rvlglmm66wj728y4fadqvh6yxr7ddc0s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://www.di.uminho.pt/~jas/Research/HaLeX/HaLeX.html";
       description = "HaLeX enables modelling, manipulation and animation of regular languages";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "HaMinitel" = callPackage
    ({ mkDerivation, serialport, stm }:
     mkDerivation {
       pname = "HaMinitel";
       version = "0.1.0.0";
       sha256 = "0q7fq5z0wrk2qg9n715033yp25dpl73g6iqkbvxbg2ahp9caq458";
       buildDepends = [ serialport stm ];
       homepage = "https://github.com/Zigazou/HaMinitel";
       description = "An Haskell library to drive the french Minitel through a serial port";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "HaPy" = callPackage
    ({ mkDerivation, th-lift }:
     mkDerivation {
       pname = "HaPy";
       version = "0.1.1.0";
       sha256 = "1gxxhyidcn3lcvmbjby364cypk6xmmsv5qdd0m16d06688cl9mq7";
       buildDepends = [ th-lift ];
       homepage = "https://github.com/sakana/HaPy";
       description = "Haskell bindings for Python";
       license = stdenv.lib.licenses.mit;
     }) {};

  "HaRe" = callPackage
    ({ mkDerivation, deepseq, Diff, dual-tree, filepath, ghc-mod
     , ghc-paths, ghc-syb-utils, haskell-token-utils, hslogger, hspec
     , HUnit, monoid-extras, mtl, parsec, QuickCheck, rosezipper
     , semigroups, silently, Strafunski-StrategyLib, stringbuilder, syb
     , syz, time, transformers
     }:
     mkDerivation {
       pname = "HaRe";
       version = "0.7.2.8";
       sha256 = "19vldhyl1636g05yc1kg9ih3z9rlcvcl596slc1hqwkd564nld36";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         dual-tree filepath ghc-mod ghc-paths ghc-syb-utils
         haskell-token-utils hslogger monoid-extras mtl parsec rosezipper
         semigroups Strafunski-StrategyLib syb syz time transformers
       ];
       testDepends = [
         deepseq Diff dual-tree filepath ghc-mod ghc-paths ghc-syb-utils
         haskell-token-utils hslogger hspec HUnit monoid-extras mtl
         QuickCheck rosezipper semigroups silently Strafunski-StrategyLib
         stringbuilder syb syz time transformers
       ];
       homepage = "https://github.com/RefactoringTools/HaRe/wiki";
       description = "the Haskell Refactorer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaTeX" = callPackage
    ({ mkDerivation, matrix, parsec, QuickCheck, tasty
     , tasty-quickcheck, text, transformers, wl-pprint-extras
     }:
     mkDerivation {
       pname = "HaTeX";
       version = "3.15.0.0";
       sha256 = "1rhxml458d8y0vxns2rp76yvfk66496mvab81i71km653n6g5kky";
       buildDepends = [
         matrix parsec QuickCheck text transformers wl-pprint-extras
       ];
       testDepends = [ QuickCheck tasty tasty-quickcheck text ];
       homepage = "http://wrongurl.net/haskell/HaTeX";
       description = "The Haskell LaTeX library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaTeX-meta" = callPackage
    ({ mkDerivation, Cabal, filepath, haddock, haskell-src-exts, mtl
     , parsec
     }:
     mkDerivation {
       pname = "HaTeX-meta";
       version = "1.2.1";
       sha256 = "1cfn823xfp4962x4ww3dawm017nkg00wxa20b8nbq3pmjjnpb2xl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal filepath haddock haskell-src-exts mtl parsec
       ];
       description = "This package is deprecated. From version 3, HaTeX does not need this anymore.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaVSA" = callPackage
    ({ mkDerivation, HUnit, logict, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck
     }:
     mkDerivation {
       pname = "HaVSA";
       version = "0.1.0.2";
       sha256 = "1hh324i7gvazlkm3vfmzah41h2hlxwb2k8g1z8dmfbif6pmp0apk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         HUnit logict QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck
       ];
       description = "An implementation of the Version Space Algebra learning framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaXml" = callPackage
    ({ mkDerivation, filepath, polyparse, random }:
     mkDerivation {
       pname = "HaXml";
       version = "1.25";
       sha256 = "02l53v9c8qzkp5zzs31973pp27q4k2h04h9x3852gah78qjvnslk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath polyparse random ];
       homepage = "http://projects.haskell.org/HaXml/";
       description = "Utilities for manipulating XML documents";
       license = "LGPL";
     }) {};

  "Hach" = callPackage
    ({ mkDerivation, network, text, time, vty, vty-ui }:
     mkDerivation {
       pname = "Hach";
       version = "0.1.2";
       sha256 = "1bp7ngsh655x0iamb8bhn2sqkpg3p6mhg0n0fgqz5k4pjskjyavy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network text time vty vty-ui ];
       homepage = "http://github.com/dmalikov/HaCh";
       description = "Simple chat";
       license = stdenv.lib.licenses.mit;
     }) {};

  "HackMail" = callPackage
    ({ mkDerivation, Crypto, hdaemonize, hint, mtl, parsec }:
     mkDerivation {
       pname = "HackMail";
       version = "0.0.1";
       sha256 = "1j8lw1c5asx40fag9gd6ni19c0z0q46f55yry5cj94v4s5m2gzbw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Crypto hdaemonize hint mtl parsec ];
       homepage = "http://patch-tag.com/publicrepos/Hackmail";
       description = "A Procmail Replacement as Haskell EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Haggressive" = callPackage
    ({ mkDerivation, Cabal, cassava, HUnit, PSQueue, text, tokenize
     , tuple, vector
     }:
     mkDerivation {
       pname = "Haggressive";
       version = "0.1.0.4";
       sha256 = "08f8i8bmnjv255xzpasa7drd83fh82qjm49mscn6dmiw6yp47vz1";
       buildDepends = [
         Cabal cassava HUnit PSQueue text tokenize tuple vector
       ];
       testDepends = [ Cabal HUnit tuple vector ];
       homepage = "https://github.com/Pold87/Haggressive";
       description = "Aggression analysis for Tweets on Twitter";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "HandlerSocketClient" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "HandlerSocketClient";
       version = "0.0.5";
       sha256 = "1jp8cwlp6h1wvvkh71813i3lzxc7ckxzc7nvvcsjvcz0apxcl7vv";
       buildDepends = [ network ];
       homepage = "https://github.com/wuxb45/HandlerSocket-Haskell-Client";
       description = "Haskell implementation of a HandlerSocket client (API)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HandsomeSoup" = callPackage
    ({ mkDerivation, hspec, HTTP, hxt, hxt-http, MaybeT, mtl, network
     , network-uri, parsec, transformers
     }:
     mkDerivation {
       pname = "HandsomeSoup";
       version = "0.3.5";
       sha256 = "1d1zanlr1mdxjc69xvbxg5kn5bc08gd960j6lb1x3grhcgmj9krm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         HTTP hxt hxt-http MaybeT mtl network network-uri parsec
         transformers
       ];
       testDepends = [ hspec hxt ];
       homepage = "https://github.com/egonSchiele/HandsomeSoup";
       description = "Work with HTML more easily in HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HarmTrace" = callPackage
    ({ mkDerivation, binary, cmdargs, deepseq, Diff, filepath
     , HarmTrace-Base, HCodecs, hmatrix, hmatrix-gsl-stats
     , instant-generics, ListLike, mtl, parallel, parseargs, sox
     , uu-parsinglib, vector
     }:
     mkDerivation {
       pname = "HarmTrace";
       version = "2.2.0";
       sha256 = "1l2w53ispw7sg1daxnynfc94njzm6w838a8ij7rpzd3nxa2b596v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cmdargs deepseq Diff filepath HarmTrace-Base HCodecs hmatrix
         hmatrix-gsl-stats instant-generics ListLike mtl parallel parseargs
         sox uu-parsinglib vector
       ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/HarmTrace";
       description = "Harmony Analysis and Retrieval of Music";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "HarmTrace-Base" = callPackage
    ({ mkDerivation, binary, ListLike, QuickCheck, uu-parsinglib }:
     mkDerivation {
       pname = "HarmTrace-Base";
       version = "1.4.0.1";
       sha256 = "174a05473577vyyf6rz5bq3b9wrgmsbz23xdg945pfc78lb6n70j";
       buildDepends = [ binary ListLike uu-parsinglib ];
       testDepends = [ binary ListLike QuickCheck uu-parsinglib ];
       homepage = "https://bitbucket.org/bash/harmtrace-base";
       description = "Parsing and unambiguously representing musical chords";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "HasGP" = callPackage
    ({ mkDerivation, hmatrix, hmatrix-special, mtl, parsec, random }:
     mkDerivation {
       pname = "HasGP";
       version = "0.1";
       sha256 = "1sw5l74p2md4whq0c1xifcnwbb525i84n1razjxs7cpf8gicgggx";
       buildDepends = [ hmatrix hmatrix-special mtl parsec random ];
       homepage = "http://www.cl.cam.ac.uk/~sbh11/HasGP";
       description = "A Haskell library for inference using Gaussian processes";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Haschoo" = callPackage
    ({ mkDerivation, list-tries, monad-loops, mtl, numbers, parsec }:
     mkDerivation {
       pname = "Haschoo";
       version = "0.1.2";
       sha256 = "0jh506p0clwyb5wwrhlgbc5xp7w6smz5vky3lc8vhnwvwk324qcj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ list-tries monad-loops mtl numbers parsec ];
       homepage = "http://iki.fi/matti.niemenmaa/misc-projects.html#haschoo";
       description = "Minimalist R5RS Scheme interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hashell" = callPackage
    ({ mkDerivation, parsec, readline, regex-compat }:
     mkDerivation {
       pname = "Hashell";
       version = "1.0";
       sha256 = "0yn525sr7i2nwf4y44va00aswnphn89072zaqjr2i0f1n1jjaxpl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec readline regex-compat ];
       description = "Simple shell written in Haskell";
       license = "GPL";
     }) {};

  "HaskellForMaths" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "HaskellForMaths";
       version = "0.4.5";
       sha256 = "03j83gvxjjqjwl047j0acsf9j5vs3zpzbap036sw4slq31nza2p9";
       buildDepends = [ random ];
       homepage = "http://haskellformaths.blogspot.com/";
       description = "Combinatorics, group theory, commutative algebra, non-commutative algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaskellLM" = callPackage
    ({ mkDerivation, hmatrix }:
     mkDerivation {
       pname = "HaskellLM";
       version = "0.1.2";
       sha256 = "0baqn15zdhlinf4v3c244005nb3wm63gpr0w6fy7g9gmn8a00scq";
       buildDepends = [ hmatrix ];
       description = "Pure Haskell implementation of the Levenberg-Marquardt algorithm";
       license = "GPL";
     }) {};

  "HaskellNN" = callPackage
    ({ mkDerivation, hmatrix, random }:
     mkDerivation {
       pname = "HaskellNN";
       version = "0.1.3";
       sha256 = "0i5jqhkxna1kq361hh66830x4z5m782pp898g9ggfvdiwpp8phmr";
       buildDepends = [ hmatrix random ];
       description = "High Performance Neural Network in Haskell";
       license = "GPL";
     }) {};

  "HaskellNet" = callPackage
    ({ mkDerivation, base64-string, cryptohash, mime-mail, mtl, network
     , text
     }:
     mkDerivation {
       pname = "HaskellNet";
       version = "0.4";
       sha256 = "152ayk35czl8fi2mar1g6c5mi3pikvnpcy967prg97a9vy0ld1yp";
       buildDepends = [
         base64-string cryptohash mime-mail mtl network text
       ];
       homepage = "https://github.com/jtdaugherty/HaskellNet";
       description = "Client support for POP3, SMTP, and IMAP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaskellNet-SSL" = callPackage
    ({ mkDerivation, connection, data-default, HaskellNet, network, tls
     }:
     mkDerivation {
       pname = "HaskellNet-SSL";
       version = "0.2.5.2";
       sha256 = "0jhm43zd6jvhbahk4ki29ydg02qnjj4mw823rckqxk6f91q00qlp";
       buildDepends = [ connection data-default HaskellNet network tls ];
       homepage = "https://github.com/dpwright/HaskellNet-SSL";
       description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaskellTorrent" = callPackage
    ({ mkDerivation, cereal, cml, hopenssl, hslogger, HTTP, HUnit, mtl
     , network, parsec, QuickCheck, random, random-shuffle
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time
     }:
     mkDerivation {
       pname = "HaskellTorrent";
       version = "0.1.1";
       sha256 = "0dy9irl085jw7wz6y50566rwsj05ymp8g2xp2444vg12ryd5dra1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cereal cml hopenssl hslogger HTTP HUnit mtl network parsec
         QuickCheck random random-shuffle test-framework
         test-framework-hunit test-framework-quickcheck2 time
       ];
       description = "A concurrent bittorrent client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HaskellTutorials" = callPackage
    ({ mkDerivation, cmdargs, text }:
     mkDerivation {
       pname = "HaskellTutorials";
       version = "0.0.0.1";
       sha256 = "0gnf8x4dqz3bwyhrcn17qci2rzmms3r0cyr7cgf593jlkxiq287q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs text ];
       homepage = "https://github.com/mrLSD/HaskellTutorials";
       description = "Haskell Tutorials by Evgeny Ukhanov";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Haskelloids" = callPackage
    ({ mkDerivation, HGL, hmatrix, MonadRandom, random, Yampa }:
     mkDerivation {
       pname = "Haskelloids";
       version = "0.1.1";
       sha256 = "0v171rzpbh4w5kxzbc9h2x4kha1ykw4vk69scfpmdz5iqih2bqz8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HGL hmatrix MonadRandom random Yampa ];
       homepage = "http://www.matthewhayden.co.uk";
       description = "A reproduction of the Atari 1979 classic \"Asteroids\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hawk" = callPackage
    ({ mkDerivation, bytestring-trie, cgi, convertible, data-default
     , dataenc, filepath, hack, HDBC, HDBC-sqlite3, hslogger
     , hslogger-template, HTTP, hxt, json-b, MonadCatchIO-mtl, mtl
     , network, regex-posix, SHA, time, utf8-string
     }:
     mkDerivation {
       pname = "Hawk";
       version = "0.0.2";
       sha256 = "0g7dgj3asxwcjg43nzhjp7agvnzv882xhgbrr7jnpdckywkgacgq";
       buildDepends = [
         bytestring-trie cgi convertible data-default dataenc filepath hack
         HDBC HDBC-sqlite3 hslogger hslogger-template HTTP hxt json-b
         MonadCatchIO-mtl mtl network regex-posix SHA time utf8-string
       ];
       description = "Haskell Web Application Kit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hayoo" = callPackage
    ({ mkDerivation, binary, bzlib, deepseq, enummapset, filepath
     , Holumbus-Searchengine, hxt, hxt-cache, hxt-charproperties
     , hxt-curl, hxt-http, hxt-regex-xmlschema, hxt-unicode, hxt-xpath
     , json, MonadCatchIO-transformers, mtl, network, parsec, snap
     , snap-core, snap-server, tar, text, transformers
     , xhtml-combinators, zlib
     }:
     mkDerivation {
       pname = "Hayoo";
       version = "1.2.3";
       sha256 = "0bpkkdwgwf7xagp4rda1g07mdglzvl4hzq2jif7c3s8j7f6zq48c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary bzlib deepseq enummapset filepath Holumbus-Searchengine hxt
         hxt-cache hxt-charproperties hxt-curl hxt-http hxt-regex-xmlschema
         hxt-unicode hxt-xpath json MonadCatchIO-transformers mtl network
         parsec snap snap-core snap-server tar text transformers
         xhtml-combinators zlib
       ];
       homepage = "http://holumbus.fh-wedel.de";
       description = "The Hayoo! search engine for Haskell API search on hackage";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Hclip" = callPackage
    ({ mkDerivation, mtl, strict, tasty, tasty-hunit }:
     mkDerivation {
       pname = "Hclip";
       version = "3.0.0.3";
       sha256 = "0h6q44yv4m325gdwpvkxz31syy6qwdsixfanzr3fx1v5nbhm22af";
       buildDepends = [ mtl strict ];
       testDepends = [ tasty tasty-hunit ];
       homepage = "https://github.com/jetho/Hclip";
       description = "A small cross-platform library for reading and modifying the system clipboard";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hedi" = callPackage
    ({ mkDerivation, editline, mtl, parsec, QuickCheck, regex-posix }:
     mkDerivation {
       pname = "Hedi";
       version = "0.1.1";
       sha256 = "0z0sa658fngv68611k76ncf5j59v517xchhw2y84blj97fl6jkn9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ editline mtl parsec QuickCheck regex-posix ];
       description = "Line oriented editor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hermes" = callPackage
    ({ mkDerivation, AES, cereal, hslogger, monads-tf, network, random
     , random-shuffle, RSA, SHA2, stm, syb, time, transformers, unamb
     , yjtools
     }:
     mkDerivation {
       pname = "Hermes";
       version = "0.0.4";
       sha256 = "0j5vg3rvf4hbvg6jan4im7ijqffy6k9dvijfwxjcn164qjzh6xb3";
       buildDepends = [
         AES cereal hslogger monads-tf network random random-shuffle RSA
         SHA2 stm syb time transformers unamb yjtools
       ];
       description = "Message-based middleware layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hieroglyph" = callPackage
    ({ mkDerivation, buster, cairo, colour, glib, GLUT, gtk, gtkglext
     , IfElse, mtl, OpenGL, parallel, random
     }:
     mkDerivation {
       pname = "Hieroglyph";
       version = "3.89";
       sha256 = "0dkvvk3qwn72vn4kc0q2iv6raxslrxf0ypr0sn7i0fjds3cjxs6s";
       buildDepends = [
         buster cairo colour glib GLUT gtk gtkglext IfElse mtl OpenGL
         parallel random
       ];
       homepage = "http://vis.renci.org/jeff/hieroglyph";
       description = "Purely functional 2D graphics for visualization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HiggsSet" = callPackage
    ({ mkDerivation, deepseq, mtl, text, th-expand-syns, TrieMap
     , vector
     }:
     mkDerivation {
       pname = "HiggsSet";
       version = "0.1.1";
       sha256 = "1k0qlpm4akzx820b0j3g3f562ailxa56sa41268xyq3046xdpyl1";
       buildDepends = [ deepseq mtl text th-expand-syns TrieMap vector ];
       homepage = "http://github.com/lpeterse/HiggsSet";
       description = "A multi-index set with advanced query capabilites";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hipmunk" = callPackage
    ({ mkDerivation, StateVar, transformers }:
     mkDerivation {
       pname = "Hipmunk";
       version = "5.2.0.16";
       sha256 = "0jnidzky0004xh1yzkcg41df21vbvqhk075d183jv6iwjiljsh3s";
       buildDepends = [ StateVar transformers ];
       homepage = "https://github.com/meteficha/Hipmunk";
       description = "A Haskell binding for Chipmunk";
       license = "unknown";
     }) {};

  "HipmunkPlayground" = callPackage
    ({ mkDerivation, GLFW, Hipmunk, OpenGL, StateVar, transformers }:
     mkDerivation {
       pname = "HipmunkPlayground";
       version = "5.2.1.1";
       sha256 = "075am1d0hjbhnibk2x56fbh4ybw5pavfmqk2dz4yjw7yh264vcs7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLFW Hipmunk OpenGL StateVar transformers ];
       homepage = "https://github.com/meteficha/HipmunkPlayground";
       description = "A playground for testing Hipmunk";
       license = "unknown";
     }) {};

  "Histogram" = callPackage
    ({ mkDerivation, gnuplot }:
     mkDerivation {
       pname = "Histogram";
       version = "0.1.0.2";
       sha256 = "00f0a3lbpc7s70lzmnf9a7hjzc3yv8nfxcvz5nparr34x585zbxl";
       buildDepends = [ gnuplot ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hmpf" = callPackage
    ({ mkDerivation, ConfigFile, Crypto, HTTP, mtl, network, time
     , utf8-string
     }:
     mkDerivation {
       pname = "Hmpf";
       version = "0.1";
       sha256 = "0lw2d9yv3zxqv20v96czx0msahbyk0rc5d68gj567dxnyb377yx7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile Crypto HTTP mtl network time utf8-string
       ];
       description = "An MPD client designed for a Home Theatre PC";
       license = "GPL";
     }) {};

  "Hoed" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Hoed";
       version = "0.1.0.1";
       sha256 = "1121m0ksh9ydn9vvvlz6jh0i9yx8jyxv4qwsnkmcnzajhh3b9w81";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://maartenfaddegon.nl/pub";
       description = "Debug anything without recompiling everything!";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HoleyMonoid" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HoleyMonoid";
       version = "0.1";
       sha256 = "01gyw3imcn18g005rradgxbsh6b7niqi46914pcvz5cbkhf7whsd";
       homepage = "http://code.google.com/p/monoid-cont/";
       description = "Monoids with holes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Holumbus-Distribution" = callPackage
    ({ mkDerivation, binary, deepseq, hslogger, hxt, network, random
     , readline, stm, time
     }:
     mkDerivation {
       pname = "Holumbus-Distribution";
       version = "0.1.1";
       sha256 = "1mhljxyfv02pfy2lyh10nlv5x05qvv37ij9i6c8c17f5b5qcgc78";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary deepseq hslogger hxt network random readline stm time
       ];
       homepage = "http://holumbus.fh-wedel.de";
       description = "intra- and inter-program communication";
       license = "unknown";
     }) {};

  "Holumbus-MapReduce" = callPackage
    ({ mkDerivation, binary, deepseq, extensible-exceptions
     , Holumbus-Distribution, Holumbus-Storage, hslogger, hxt, network
     , readline, time
     }:
     mkDerivation {
       pname = "Holumbus-MapReduce";
       version = "0.1.1";
       sha256 = "0dqwj7xpw1lidv7ixfm1wzfx6psrzl2q08x3scyiskpm3a2l67q8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary deepseq extensible-exceptions Holumbus-Distribution
         Holumbus-Storage hslogger hxt network readline time
       ];
       homepage = "http://holumbus.fh-wedel.de";
       description = "a distributed MapReduce framework";
       license = "unknown";
     }) {};

  "Holumbus-Searchengine" = callPackage
    ({ mkDerivation, binary, bzlib, deepseq, enummapset, filepath
     , hslogger, hxt, hxt-cache, hxt-curl, hxt-regex-xmlschema
     , hxt-unicode, mtl, network, parallel, parsec, SHA
     }:
     mkDerivation {
       pname = "Holumbus-Searchengine";
       version = "1.2.3";
       sha256 = "1kx0j4f13fj6k3xlhh5cmlb7lz35vyqd0sp913yy8yc2h56ybbqq";
       buildDepends = [
         binary bzlib deepseq enummapset filepath hslogger hxt hxt-cache
         hxt-curl hxt-regex-xmlschema hxt-unicode mtl network parallel
         parsec SHA
       ];
       homepage = "http://holumbus.fh-wedel.de";
       description = "A search and indexing engine";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Holumbus-Storage" = callPackage
    ({ mkDerivation, binary, Holumbus-Distribution, hslogger, hxt
     , network, random, time
     }:
     mkDerivation {
       pname = "Holumbus-Storage";
       version = "0.1.0";
       sha256 = "1zs6m3rsxh3886idcn0qm056bzv9yllgf3n2qsfa97cpbzhah54q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary Holumbus-Distribution hslogger hxt network random time
       ];
       homepage = "http://holumbus.fh-wedel.de";
       description = "a distributed storage system";
       license = "unknown";
     }) {};

  "Homology" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "Homology";
       version = "0.1.1";
       sha256 = "12cqfy2vpshly1rgjclzpnhb094s5wr038ahh5agsx03x6mnsr9n";
       buildDepends = [ vector ];
       homepage = "http://www.math.ucla.edu/~damek";
       description = "Compute the homology of a chain complex";
       license = "GPL";
     }) {};

  "HongoDB" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-binary, blaze-builder
     , enumerator, hashable, monad-control, mtl, random, unix-bytestring
     , unordered-containers
     }:
     mkDerivation {
       pname = "HongoDB";
       version = "0.0.1";
       sha256 = "19dwxv7fjk2k55mxgsc2gjx5jp9vr77yg01292gdj1piwmxx459v";
       buildDepends = [
         attoparsec attoparsec-binary blaze-builder enumerator hashable
         monad-control mtl unix-bytestring unordered-containers
       ];
       testDepends = [ random ];
       description = "A Simple Key Value Store";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hricket" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Hricket";
       version = "0.1";
       sha256 = "0cmmhljlgb23kr6v8as2cma3cpgr6zpkb11qg6hmq1ilbi363282";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://github.com/Raynes/Hricket";
       description = "A Cricket scoring application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hs2lib" = callPackage
    ({ mkDerivation, cereal, cpphs, filepath, ghc-paths, haddock
     , haskell-src-exts, mtl, QuickCheck, random, syb, time
     }:
     mkDerivation {
       pname = "Hs2lib";
       version = "0.6.1";
       sha256 = "1wy3jjxgzgqnf64dh6zg1z7qszy91v07381by3d2wmrn2sc6fj39";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal filepath ghc-paths haddock haskell-src-exts mtl QuickCheck
         random syb time
       ];
       testDepends = [ filepath ];
       buildTools = [ cpphs ];
       homepage = "http://blog.zhox.com/category/hs2lib/";
       description = "A Library and Preprocessor that makes it easier to create shared libs from Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HsASA" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "HsASA";
       version = "0.2";
       sha256 = "1kdf2yq3v8lr84h2pf1ydi6vrqfr685vbkxjz4ai5wd2mij8i361";
       buildDepends = [ random ];
       homepage = "http://repetae.net/recent/out/HsASA.html";
       description = "A haskell interface to Lester Ingber's adaptive simulating annealing code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HsHaruPDF" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HsHaruPDF";
       version = "0.0.0";
       sha256 = "1yifhxk1m3z2i7gaxgwlmk6cv2spbpx8fny4sn59ybca8wd9z7ps";
       description = "Haskell binding to libharu (http://libharu.sourceforge.net/)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HsHyperEstraier" = callPackage
    ({ mkDerivation, base-unicode-symbols, hyperestraier, network, qdbm
     , text
     }:
     mkDerivation {
       pname = "HsHyperEstraier";
       version = "0.4";
       sha256 = "0q7nngghplw97q5cmayqkkixa5lbprilvkcv0260yaz7wg5xpqk8";
       buildDepends = [ base-unicode-symbols network text ];
       pkgconfigDepends = [ hyperestraier qdbm ];
       homepage = "http://cielonegro.org/HsHyperEstraier.html";
       description = "HyperEstraier binding for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "HsJudy" = callPackage
    ({ mkDerivation, Judy }:
     mkDerivation {
       pname = "HsJudy";
       version = "0.2";
       sha256 = "1ypdsjy7gn6b3ynn17fcpirgwq3017jahm3pj5fh4qr6zr1cljkh";
       extraLibraries = [ Judy ];
       homepage = "http://www.pugscode.org/";
       description = "Judy bindings, and some nice APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HsOpenSSL" = callPackage
    ({ mkDerivation, network, openssl, time }:
     mkDerivation {
       pname = "HsOpenSSL";
       version = "0.11";
       sha256 = "000c1589yf1lzvw32hh2jacq1da6k2vynh5rymw3rlapxq7skyyr";
       buildDepends = [ network time ];
       extraLibraries = [ openssl ];
       homepage = "https://github.com/phonohawk/HsOpenSSL";
       description = "Partial OpenSSL binding for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "HsParrot" = callPackage
    ({ mkDerivation, HsSyck, pugs-DrIFT }:
     mkDerivation {
       pname = "HsParrot";
       version = "0.0.2.20120717";
       sha256 = "19f95cyxcyhsk2x13l7csahgnn8rs029s3hdlxp5z0d3a9vb41gd";
       buildDepends = [ HsSyck pugs-DrIFT ];
       description = "Haskell integration with Parrot virtual machine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HsPerl5" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HsPerl5";
       version = "0.0.6";
       sha256 = "0czhibr8lw4mjinwszjp4nh1ifi1xgkynwbjs6l3k97dqfd8bw4v";
       description = "Haskell interface to embedded Perl 5 interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HsSVN" = callPackage
    ({ mkDerivation, mtl, stm }:
     mkDerivation {
       pname = "HsSVN";
       version = "0.4.3.3";
       sha256 = "1yx4dzcjmykk4nzrh888jhikb8x635dpx7g27rgnlaiy5nid3pc7";
       buildDepends = [ mtl stm ];
       homepage = "https://github.com/phonohawk/HsSVN";
       description = "Partial Subversion (SVN) binding for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "HsSyck" = callPackage
    ({ mkDerivation, hashtables, syb, utf8-string }:
     mkDerivation {
       pname = "HsSyck";
       version = "0.52";
       sha256 = "1hdckbm60pzmydaz4rsw3kz9byd205987jcddakyhmgfinzvqwvc";
       buildDepends = [ hashtables syb utf8-string ];
       description = "Fast, lightweight YAML loader and dumper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HsTools" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "HsTools";
       version = "0.0.1.1";
       sha256 = "0banfivx4xc0j3c1qmda31gvvrqqsg12fzizcpman2fvdlk7kn5l";
       description = "Haskell helper functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hsed" = callPackage
    ({ mkDerivation, cmdargs, data-accessor, data-accessor-template
     , data-accessor-transformers, filepath, Glob, GotoT-transformers
     , mtl, parsec, regex-base, regex-compat, regex-posix
     }:
     mkDerivation {
       pname = "Hsed";
       version = "0.2.2";
       sha256 = "09v2gcazqlmw7j7sqzzzmsz1jr3mrnfy3p30w9hnp2g430w10r2a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs data-accessor data-accessor-template
         data-accessor-transformers filepath Glob GotoT-transformers mtl
         parsec regex-base regex-compat regex-posix
       ];
       homepage = "http://github.com/rukav/Hsed";
       description = "Stream Editor in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hsmtlib" = callPackage
    ({ mkDerivation, parsec, smtLib, transformers }:
     mkDerivation {
       pname = "Hsmtlib";
       version = "2.8.8.8";
       sha256 = "1zb5s5rwcqc90c3zv332k44p7l13ngp9nqci8qalnlbxbypx3hab";
       editedCabalFile = "12ca7x8xr0cqjjkpfqqcy7kl8cf2z3hs2nq7dxjqlr78rihhbwq1";
       buildDepends = [ parsec smtLib transformers ];
       homepage = "https://github.com/MfesGA/Hsmtlib";
       description = "Haskell library for easy interaction with SMT-LIB 2 compliant solvers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "HueAPI" = callPackage
    ({ mkDerivation, aeson, lens, lens-aeson, mtl, transformers, wreq
     }:
     mkDerivation {
       pname = "HueAPI";
       version = "0.2.3";
       sha256 = "1c30i551f0lmcpima48dlpmbr4z7dly4d9s4iqn97qq3l9snb1k9";
       buildDepends = [ aeson lens lens-aeson mtl transformers wreq ];
       homepage = "https://github.com/sjoerdvisscher/HueAPI";
       description = "API for controlling Philips Hue lights";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Hungarian-Munkres" = callPackage
    ({ mkDerivation, Munkres, random, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "Hungarian-Munkres";
       version = "0.1.5";
       sha256 = "0g2hgcrsfwqp4w3mzg6vwi7lypgqd0b6axaff81wbi27h9n8q4qd";
       testDepends = [ Munkres random tasty tasty-quickcheck ];
       description = "A Linear Sum Assignment Problem (LSAP) solver";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "IDynamic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "IDynamic";
       version = "0.1";
       sha256 = "1p4h2hxwzp0bxkzh864vkqbwychi0j2c3rqck9vk5kfax5i1jfz8";
       description = "Indexable, serializable form of Data.Dynamic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "IFS" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "IFS";
       version = "0.1.1";
       sha256 = "1r2dbpsmmsgxb43ycsz54zxcyfwanp72r9ry645mjlshg4q360xr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://www.alpheccar.org";
       description = "Iterated Function System generation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "INblobs" = callPackage
    ({ mkDerivation, HaXml, polyparse, wx, wxcore }:
     mkDerivation {
       pname = "INblobs";
       version = "0.1.1";
       sha256 = "04il63xafq20jn3m4hahn93xxfrp6whrjvsz974zczxqm41ygb10";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HaXml polyparse wx wxcore ];
       homepage = "http://haskell.di.uminho.pt/jmvilaca/INblobs/";
       description = "Editor and interpreter for Interaction Nets";
       license = "LGPL";
     }) {};

  "IOR" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "IOR";
       version = "0.1";
       sha256 = "0iinsva0pwparpg4lkgx8mw8l49rnl1h3zzblp89nkqk5i7qhq8a";
       buildDepends = [ mtl ];
       description = "Region based resource management for the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "IORefCAS" = callPackage
    ({ mkDerivation, bits-atomic, HUnit, QuickCheck, time }:
     mkDerivation {
       pname = "IORefCAS";
       version = "0.2.0.1";
       sha256 = "06vfck59x30mqa9h2ljd4r2cx1ks91b9gwcr928brp7filsq9fdb";
       buildDepends = [ bits-atomic ];
       testDepends = [ bits-atomic HUnit QuickCheck time ];
       homepage = "https://github.com/rrnewton/haskell-lockfree-queue/wiki";
       description = "Atomic compare and swap for IORefs and STRefs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "IOSpec" = callPackage
    ({ mkDerivation, mtl, QuickCheck, Stream }:
     mkDerivation {
       pname = "IOSpec";
       version = "0.2.5";
       sha256 = "0r6vqg39h6vzwlb33cvk72k4mh6jd8rpdcnkqsfxdqmsk7h8x84j";
       buildDepends = [ mtl QuickCheck Stream ];
       description = "A pure specification of the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "IPv6Addr" = callPackage
    ({ mkDerivation, attoparsec, HUnit, iproute, network, network-info
     , random, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "IPv6Addr";
       version = "0.5";
       sha256 = "1ns3a7i46mp73liz57d439mrh3qk3lapjcxrw6z7km2y3g1a9kmi";
       buildDepends = [
         attoparsec iproute network network-info random text
       ];
       testDepends = [ HUnit test-framework test-framework-hunit text ];
       description = "Library to deal with IPv6 address text representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "IcoGrid" = callPackage
    ({ mkDerivation, GlomeVec }:
     mkDerivation {
       pname = "IcoGrid";
       version = "0.1.2";
       sha256 = "0ryb2q5xfddcx2qg019jajac7xvaw2ci5wi094gbrqhhflj7wc8n";
       buildDepends = [ GlomeVec ];
       homepage = "http://www.haskell.org/haskellwiki/IcoGrid";
       description = "Library for generating grids of hexagons and pentagons mapped to a sphere";
       license = "GPL";
     }) {};

  "IfElse" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "IfElse";
       version = "0.85";
       sha256 = "1kfx1bwfjczj93a8yqz1n8snqiq5655qgzwv1lrycry8wb1vzlwa";
       buildDepends = [ mtl ];
       description = "Anaphoric and miscellaneous useful control-flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Imlib" = callPackage
    ({ mkDerivation, Imlib2, X11 }:
     mkDerivation {
       pname = "Imlib";
       version = "0.1.2";
       sha256 = "075x1vcrxdwknzbad05l08i5c79svf714yvv6990ffvsfykiilry";
       buildDepends = [ X11 ];
       extraLibraries = [ Imlib2 ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ImperativeHaskell" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "ImperativeHaskell";
       version = "2.0.0.1";
       sha256 = "06px87hc6gz7n372lvpbq0g2v2s0aghd3k5a1ajgn5hbxirhnpwb";
       buildDepends = [ mtl ];
       homepage = "https://github.com/mmirman/ImperativeHaskell";
       description = "A library for writing Imperative style haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "IndentParser" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "IndentParser";
       version = "0.2.1";
       sha256 = "0l9k8md2n0vhjqlvxcaf43i4cv09lnbbbw8vfz7bkbzhbwirs32j";
       buildDepends = [ parsec ];
       homepage = "http://www.cse.iitk.ac.in/~ppk";
       description = "Combinators for parsing indentation based syntatic structures";
       license = "GPL";
     }) {};

  "IndexedList" = callPackage
    ({ mkDerivation, PeanoWitnesses }:
     mkDerivation {
       pname = "IndexedList";
       version = "0.1.0.1";
       sha256 = "1i7gv3iqjj4j026k0ywmksbpjyqxlgb0f6bq2v0p9pkrj5q3jxfm";
       buildDepends = [ PeanoWitnesses ];
       homepage = "https://github.com/kwf/IndexedList";
       description = "Length- and element-indexed lists sitting somewhere between homogeneous and fully heterogeneous";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "InfixApplicative" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "InfixApplicative";
       version = "1.1";
       sha256 = "03c0jlnlnqm6faiandfg0kzajffk03aazkrqwav3g4vc3cdqwfgp";
       description = "liftA2 for infix operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Interpolation" = callPackage
    ({ mkDerivation, haskell-src-meta, syb }:
     mkDerivation {
       pname = "Interpolation";
       version = "0.3.0";
       sha256 = "046bx18mlgicp26391gvgzbi0wfwl9rddam3jdfz4lpxva4q9xhv";
       buildDepends = [ haskell-src-meta syb ];
       description = "Multiline strings, interpolation and templating";
       license = "unknown";
     }) {};

  "Interpolation-maxs" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "Interpolation-maxs";
       version = "0.3.0";
       sha256 = "0dh8d681h47jngan89vxnf8yhm31vjv8ysf21w6gclzfcl521vgn";
       buildDepends = [ syb ];
       description = "Multiline strings, interpolation and templating";
       license = "unknown";
     }) {};

  "IntervalMap" = callPackage
    ({ mkDerivation, Cabal, deepseq, QuickCheck }:
     mkDerivation {
       pname = "IntervalMap";
       version = "0.4.0.1";
       sha256 = "0cq0dmmawrss4jjkz3br0lhp37d4k7rd3cinbcyf0bf39dfk6mrf";
       buildDepends = [ deepseq ];
       testDepends = [ Cabal deepseq QuickCheck ];
       homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
       description = "Maps from Intervals to values, with efficient search";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "IrrHaskell" = callPackage
    ({ mkDerivation, random, time }:
     mkDerivation {
       pname = "IrrHaskell";
       version = "0.2";
       sha256 = "1j0m4ib2r84kb7c0s3qpmv3cziq3a2mql4ga9rnqi5pqkqpz2xcc";
       buildDepends = [ random time ];
       description = "Haskell FRP binding to the Irrlicht game engine";
       license = "LGPL";
     }) {};

  "IsNull" = callPackage
    ({ mkDerivation, hspec, HUnit, QuickCheck, quickcheck-instances
     , system-filepath, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "IsNull";
       version = "0.4.0.0";
       sha256 = "06f03b9my7hix5fvcv9cc0saf9zfwgkvn3210vymlyc1rj450ykm";
       buildDepends = [ text ];
       testDepends = [
         hspec HUnit QuickCheck quickcheck-instances system-filepath text
         unordered-containers vector
       ];
       homepage = "https://github.com/jcristovao/IsNull";
       description = "A typeclass to determine if a given value is null";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JSON-Combinator" = callPackage
    ({ mkDerivation, aeson, attoparsec, bytestring-trie, failure, hjson
     , json, JSONb, parsec, text, vector
     }:
     mkDerivation {
       pname = "JSON-Combinator";
       version = "0.2.8";
       sha256 = "0rdiva15wspaz33dh1g7x6llswsx1l4j51wqyvszzcjzifx2ly6q";
       buildDepends = [
         aeson attoparsec bytestring-trie failure hjson json JSONb parsec
         text vector
       ];
       description = "A combinator library on top of a generalised JSON type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JSON-Combinator-Examples" = callPackage
    ({ mkDerivation, json, JSON-Combinator, JSONb }:
     mkDerivation {
       pname = "JSON-Combinator-Examples";
       version = "0.0.1";
       sha256 = "1s5grfgnklnwh55yn5mlg2ibdm7mx2i7hwqs7649gkapda054ywg";
       buildDepends = [ json JSON-Combinator JSONb ];
       description = "Example uses of the JSON-Combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JSONb" = callPackage
    ({ mkDerivation, attoparsec, bytestring-nums, bytestring-trie
     , utf8-string
     }:
     mkDerivation {
       pname = "JSONb";
       version = "1.0.8";
       sha256 = "16gjdlajqvwvq1znyq3vqxfa9vq4xs0ywxpm93v0y1rgmzcfqzj7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec bytestring-nums bytestring-trie utf8-string
       ];
       homepage = "http://github.com/solidsnack/JSONb/";
       description = "JSON parser that uses byte strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JYU-Utils" = callPackage
    ({ mkDerivation, binary, deepseq, filepath, lazysmallcheck, mtl
     , mwc-random, parallel, QuickCheck, random, stm, zlib
     }:
     mkDerivation {
       pname = "JYU-Utils";
       version = "0.1.1.2";
       sha256 = "1c3cxdzbdvmvy1qvy4xvg10zijm8vw48pgh9c8a6mykgncwq6pw9";
       buildDepends = [
         binary deepseq filepath lazysmallcheck mtl mwc-random parallel
         QuickCheck random stm zlib
       ];
       description = "Some utility functions for JYU projects";
       license = stdenv.lib.licenses.mit;
     }) {};

  "JackMiniMix" = callPackage
    ({ mkDerivation, hosc }:
     mkDerivation {
       pname = "JackMiniMix";
       version = "0.1";
       sha256 = "0ivqfk1rac1hv5j6nlsbpcm5yjqwpic34mdq9gf2m63lygqkbwqp";
       buildDepends = [ hosc ];
       homepage = "http://www.renickbell.net/doku.php?id=jackminimix";
       description = "control JackMiniMix";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Javasf" = callPackage
    ({ mkDerivation, binary, language-java-classfile }:
     mkDerivation {
       pname = "Javasf";
       version = "0.0.1";
       sha256 = "14v0skqf1s54jkscgdcxjh1yv5lcrc5ni44bizx0kw35vf07faah";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary language-java-classfile ];
       description = "A utility to print the SourceFile attribute of one or more Java class files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Javav" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Javav";
       version = "0.0.4";
       sha256 = "06aiiq1bhl8gvhk2agk2rsmqrqf6ac5ym194bm5aq47hmdwi33h9";
       isLibrary = false;
       isExecutable = true;
       description = "A utility to print the target version of Java class files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JsContracts" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, syb, WebBits, WebBits-Html
     }:
     mkDerivation {
       pname = "JsContracts";
       version = "0.5.3";
       sha256 = "17l6kdpdc7lrpd9j4d2b6vklkpclshcjy6hzpi442b7pj96sn589";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec syb WebBits WebBits-Html ];
       homepage = "http://www.cs.brown.edu/research/plt/";
       description = "Design-by-contract for JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JsonGrammar" = callPackage
    ({ mkDerivation, aeson, attoparsec, hashable, HUnit
     , language-typescript, mtl, semigroups, stack-prism, test-framework
     , test-framework-hunit, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "JsonGrammar";
       version = "1.0";
       sha256 = "0pw2syqzv0z4l7rvghidp4l7zi006pm49rd9b0pk6hih7jbmar7c";
       buildDepends = [
         aeson attoparsec hashable language-typescript mtl semigroups
         stack-prism text time unordered-containers vector
       ];
       testDepends = [
         aeson HUnit language-typescript stack-prism test-framework
         test-framework-hunit text
       ];
       homepage = "https://github.com/MedeaMelana/JsonGrammar2";
       description = "Combinators for bidirectional JSON parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JuicyPixels" = callPackage
    ({ mkDerivation, binary, deepseq, mtl, primitive, transformers
     , vector, zlib
     }:
     mkDerivation {
       pname = "JuicyPixels";
       version = "3.2";
       sha256 = "1z4i0464zdijv54b7wzc55zrp8h67ahm6mrdk7a6gi2qm0nihmy5";
       buildDepends = [
         binary deepseq mtl primitive transformers vector zlib
       ];
       homepage = "https://github.com/Twinside/Juicy.Pixels";
       description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JuicyPixels-canvas" = callPackage
    ({ mkDerivation, JuicyPixels }:
     mkDerivation {
       pname = "JuicyPixels-canvas";
       version = "0.1.0.0";
       sha256 = "0y791kwg9gc3nlz5sbpszd7wiqr5b5bwmgvafyjzk9xnlxlc7xcm";
       buildDepends = [ JuicyPixels ];
       homepage = "http://eax.me/";
       description = "Functions for drawing lines, squares and so on pixel by pixel";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JuicyPixels-repa" = callPackage
    ({ mkDerivation, JuicyPixels, repa, vector }:
     mkDerivation {
       pname = "JuicyPixels-repa";
       version = "0.7";
       sha256 = "0fn9i3w8s2ifyg0zsdryyw1nm0c5ybaq0c6jxcggs79x0ngi0mm5";
       buildDepends = [ JuicyPixels repa vector ];
       description = "Convenience functions to obtain array representations of images";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JuicyPixels-util" = callPackage
    ({ mkDerivation, JuicyPixels, vector }:
     mkDerivation {
       pname = "JuicyPixels-util";
       version = "0.2";
       sha256 = "1b2rx5g8kd83hl50carr02mz21gvkasnsddw1f3pfvfsyfv3yyrc";
       buildDepends = [ JuicyPixels vector ];
       homepage = "https://github.com/fumieval/JuicyPixels-util";
       description = "Convert JuicyPixel images into RGBA format, flip, trim and so on";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JunkDB" = callPackage
    ({ mkDerivation, aeson, binary, conduit, data-default, filepath
     , mtl, network, resourcet
     }:
     mkDerivation {
       pname = "JunkDB";
       version = "0.1.1.0";
       sha256 = "0g68khpfiwknqwwa7hv7db0563hsnd3hczfd0p4nx777xqrkh2dx";
       buildDepends = [
         aeson binary conduit data-default filepath mtl network resourcet
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JunkDB-driver-gdbm" = callPackage
    ({ mkDerivation, conduit, filepath, JunkDB, mtl, resourcet }:
     mkDerivation {
       pname = "JunkDB-driver-gdbm";
       version = "0.1.1.0";
       sha256 = "1q8sa4w60pv7mgf17zg8yjpjvbzrg2xlpn30myp66vq2kdv293jj";
       buildDepends = [ conduit filepath JunkDB mtl resourcet ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JunkDB-driver-hashtables" = callPackage
    ({ mkDerivation, conduit, hashable, hashtables, JunkDB, mtl
     , resourcet
     }:
     mkDerivation {
       pname = "JunkDB-driver-hashtables";
       version = "0.1.1.0";
       sha256 = "0385f0vpp4dy9r9cqh2rr7gpx07fazzqjk9bwrbs4nka4wfnqbv0";
       buildDepends = [
         conduit hashable hashtables JunkDB mtl resourcet
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "JustParse" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "JustParse";
       version = "2.1";
       sha256 = "16il25s1fb4b6ih6njsqxx7p7x0fc0kcwa5vqn7n7knqph6vvjaa";
       homepage = "https://github.com/grantslatton/JustParse";
       description = "A simple and comprehensive Haskell parsing library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "KMP" = callPackage
    ({ mkDerivation, Cabal }:
     mkDerivation {
       pname = "KMP";
       version = "0.1.0.2";
       sha256 = "14dpqfji00jq2rc09l8d1ivphpiwkryjk5sn6lrwxv8mcly3pvhn";
       testDepends = [ Cabal ];
       homepage = "https://github.com/CindyLinz/Haskell-KMP";
       description = "Knuth–Morris–Pratt string searching algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "KdTree" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "KdTree";
       version = "0.2.1";
       sha256 = "1vj1kbhyqh0xzwyr9v6fdyakx508vbf6n494z81yndisp115qi61";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck ];
       homepage = "https://github.com/ijt/kdtree";
       description = "KdTree, for efficient search in K-dimensional point clouds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ketchup" = callPackage
    ({ mkDerivation, base64-bytestring, mime-types, network, text }:
     mkDerivation {
       pname = "Ketchup";
       version = "0.4.1";
       sha256 = "0dm3dppiljy09dpifi10x7my1s2jag85qhgfwpbmqsjhlf9aldqs";
       buildDepends = [ base64-bytestring mime-types network text ];
       homepage = "https://github.com/Hamcha/Ketchup";
       description = "A super small web framework for those who don't like big and fancy codebases";
       license = stdenv.lib.licenses.mit;
     }) {};

  "KiCS" = callPackage
    ({ mkDerivation, curry-base, curry-frontend, filepath, ghc-paths
     , kics, network, random, readline, syb
     }:
     mkDerivation {
       pname = "KiCS";
       version = "0.9.3";
       sha256 = "0z5ps5apr436dbm5wkfnpqksnqi3jsqmp2zkmy37crzzinlilzvn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         curry-base curry-frontend filepath ghc-paths network random
         readline syb
       ];
       buildTools = [ kics ];
       homepage = "http://www.curry-language.org";
       description = "A compiler from Curry to Haskell";
       license = "unknown";
     }) {};

  "KiCS-debugger" = callPackage
    ({ mkDerivation, curry-base, filepath, haskell-src, KiCS
     , KiCS-prophecy, mtl, readline, syb
     }:
     mkDerivation {
       pname = "KiCS-debugger";
       version = "0.1.1";
       sha256 = "1hvdqil8lfybcp2j04ig03270q5fy29cbmg8jmv38dpcgjsx6mk1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         curry-base filepath haskell-src KiCS KiCS-prophecy mtl readline syb
       ];
       homepage = "http://curry-language.org";
       description = "debug features for kics";
       license = "unknown";
     }) {};

  "KiCS-prophecy" = callPackage
    ({ mkDerivation, filepath, KiCS }:
     mkDerivation {
       pname = "KiCS-prophecy";
       version = "0.1.1";
       sha256 = "0l278x2gavm0ndbm4k0197cwyvamz37vzy7nz35lb7n5sc5b2gsr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath KiCS ];
       homepage = "http://curry-language.org";
       description = "a transformation used by the kics debugger";
       license = "unknown";
     }) {};

  "Kleislify" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Kleislify";
       version = "0.0.4";
       sha256 = "0f7f6sxb774h9dx6xy6wbcrc5b2i27k9m5ay3hq9hqsjg86qmxyl";
       description = "Variants of Control.Arrow functions, specialised to kleislis.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Konf" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "Konf";
       version = "0.1.0.0";
       sha256 = "113jxbaw8b17j91aakxli3r3zdvnx3gvf2m57sx5d7mfk2qx28r6";
       buildDepends = [ parsec ];
       homepage = "http://www.gkayaalp.com/p/konf.html";
       description = "A configuration language and a parser";
       license = "unknown";
     }) {};

  "KyotoCabinet" = callPackage
    ({ mkDerivation, extensible-exceptions, kyotocabinet }:
     mkDerivation {
       pname = "KyotoCabinet";
       version = "0.1";
       sha256 = "1l7cpppjfz5nd8k67ss959g8sg5kbsfl4zy80a3yrlwbivyrg58n";
       buildDepends = [ extensible-exceptions ];
       extraLibraries = [ kyotocabinet ];
       homepage = "https://code.google.com/p/kyotocabinet-hs/";
       description = "Kyoto Cabinet DB bindings";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) kyotocabinet; };

  "L-seed" = callPackage
    ({ mkDerivation, cairo, gtk, mtl, parsec, random }:
     mkDerivation {
       pname = "L-seed";
       version = "0.2";
       sha256 = "1dj4320fpwmlqv5jzzi7x218mrsacdmmk3czb1szzq44pmfmpy32";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo gtk mtl parsec random ];
       homepage = "http://www.entropia.de/wiki/L-seed";
       description = "Plant growing programming game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LDAP" = callPackage
    ({ mkDerivation, lber, ldap }:
     mkDerivation {
       pname = "LDAP";
       version = "0.6.10";
       sha256 = "10lzag91slnkd1nnh0vs9nxwrsd1k5a05c2bw4fdfzqmyrfqfl20";
       isLibrary = true;
       isExecutable = true;
       extraLibraries = [ lber ldap ];
       homepage = "https://github.com/ezyang/ldap-haskell";
       description = "Haskell binding for C LDAP API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LRU" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "LRU";
       version = "0.1.1";
       sha256 = "0yppxz78y5myh9f53yqz6naqj15vk2h7fl3h8h8dps72zw9c5aqn";
       buildDepends = [ QuickCheck ];
       homepage = "http://www.imperialviolet.org/lru";
       description = "Implements an LRU data structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LTree" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "LTree";
       version = "0.1";
       sha256 = "0liqz3n2ycidwmg8iz7mbm0d087fcfgphvbip8bsn0hpwlf10dvw";
       buildDepends = [ transformers ];
       description = "Tree with only leaves carrying the data";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "LambdaCalculator" = callPackage
    ({ mkDerivation, binary, haskeline, mtl, parsec }:
     mkDerivation {
       pname = "LambdaCalculator";
       version = "0.1";
       sha256 = "0b4na8jsiwjnvyg1pl356ryffk2sj0l5f2dsivn71ii1qqblagcz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary haskeline mtl parsec ];
       description = "A basic lambda calculator with beta reduction and a REPL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LambdaHack" = callPackage
    ({ mkDerivation, assert-failure, async, binary, data-default
     , deepseq, enummapset-th, filepath, gtk, hashable, hsini, keys
     , miniutter, mtl, pretty-show, random, stm, text, transformers
     , unordered-containers, vector, vector-binary-instances, zlib
     }:
     mkDerivation {
       pname = "LambdaHack";
       version = "0.4.100.0";
       sha256 = "15v3aagwsh180603an3wd7rfgbjzgamdw270ciw2m03v8pkg9d28";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         assert-failure async binary data-default deepseq enummapset-th
         filepath gtk hashable hsini keys miniutter mtl pretty-show random
         stm text transformers unordered-containers vector
         vector-binary-instances zlib
       ];
       testDepends = [
         assert-failure async binary data-default deepseq enummapset-th
         filepath hashable hsini keys miniutter mtl pretty-show random stm
         text transformers unordered-containers vector
         vector-binary-instances zlib
       ];
       pkgconfigDepends = [ gtk ];
       homepage = "http://github.com/LambdaHack/LambdaHack";
       description = "A game engine library for roguelike dungeon crawlers";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) gtk; };

  "LambdaINet" = callPackage
    ({ mkDerivation, GLFW, GLFW-task, monad-task, mtl, OpenGL
     , transformers, vector
     }:
     mkDerivation {
       pname = "LambdaINet";
       version = "0.2.0.0";
       sha256 = "1hdl25dzv19gjr8dzpq1r267v3jj2c2yiskbg0kzdcrh4cj7jcwk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         GLFW GLFW-task monad-task mtl OpenGL transformers vector
       ];
       homepage = "not available";
       description = "Graphical Interaction Net Evaluator for Optimal Evaluation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LambdaPrettyQuote" = callPackage
    ({ mkDerivation, checkers, DebugTraceHelpers, derive, HUnit
     , lambda-ast, mtl, parsec, QuickCheck, syb, test-framework
     , test-framework-hunit, test-framework-quickcheck2, th-instances
     , transformers, tuple, uniplate
     }:
     mkDerivation {
       pname = "LambdaPrettyQuote";
       version = "0.0.0.8";
       sha256 = "0rxh9gxsd0qh76nzib9pqgzh10gdc629ypnhbg8fjgdiaza7hyal";
       buildDepends = [
         DebugTraceHelpers HUnit lambda-ast mtl parsec QuickCheck syb
         test-framework test-framework-hunit test-framework-quickcheck2
         transformers tuple uniplate
       ];
       testDepends = [
         checkers DebugTraceHelpers derive HUnit lambda-ast mtl parsec
         QuickCheck syb test-framework test-framework-hunit
         test-framework-quickcheck2 th-instances transformers tuple uniplate
       ];
       homepage = "http://github.com/jfischoff/LambdaPrettyQuote";
       description = "Quasiquoter, and Arbitrary helpers for the lambda calculus";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LambdaShell" = callPackage
    ({ mkDerivation, mtl, parsec, Shellac, Shellac-compatline }:
     mkDerivation {
       pname = "LambdaShell";
       version = "0.9.3";
       sha256 = "1nqzlnw3fchgqn9bvlvbjma1m0wwssrip2mwb2kiv4rbhqdbfijv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec Shellac Shellac-compatline ];
       homepage = "http://rwd.rdockins.name/lambda/home/";
       description = "Simple shell for evaluating lambda expressions";
       license = "GPL";
     }) {};

  "LargeCardinalHierarchy" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "LargeCardinalHierarchy";
       version = "0.0.1";
       sha256 = "0agq2593h5yb9r3jqnycis9fdizwij3and61ljc4prnhhyxv48g2";
       description = "A transfinite cardinal arithmetic library including all known large cardinals";
       license = "unknown";
     }) {};

  "Lastik" = callPackage
    ({ mkDerivation, filemanip, filepath, pureMD5, SHA, zip-archive }:
     mkDerivation {
       pname = "Lastik";
       version = "0.7.0";
       sha256 = "1bq8az2lrdqszn1aicvxj0spmwpxphvcvgkl6p0mnz8878hyxsdm";
       buildDepends = [ filemanip filepath pureMD5 SHA zip-archive ];
       homepage = "http://code.google.com/p/lastik";
       description = "A library for compiling programs in a variety of languages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Lattices" = callPackage
    ({ mkDerivation, HaskellForMaths, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "Lattices";
       version = "0.0.1";
       sha256 = "1x1rxl1pc64ifjrlmqqgs0p71bqymc17ls7wlj6skk1sy7kys2f5";
       buildDepends = [ HaskellForMaths ];
       testDepends = [
         HaskellForMaths HUnit test-framework test-framework-hunit
       ];
       description = "A library for lattices";
       license = "GPL";
     }) {};

  "LazyVault" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "LazyVault";
       version = "0.0.1";
       sha256 = "1y80bzcjyk5gkzkgyn8h7sf0bg11qn4qr0qgvi640spppxqfqkjq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       homepage = "https://github.com/AtticHacker/lazyvault";
       description = "A simple sandboxing tool for Haskell packages";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Level0" = callPackage
    ({ mkDerivation, random, SDL, SDL-ttf }:
     mkDerivation {
       pname = "Level0";
       version = "1.0";
       sha256 = "1kpz8qpm2xj5nm0sav5439flyj3zdx6ha9lgg3c7ky4sjqvwwzxv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random SDL SDL-ttf ];
       homepage = "http://quasimal.com/projects/level_0.html";
       description = "A Snake II clone written using SDL";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "LibClang" = callPackage
    ({ mkDerivation, greencard, time }:
     mkDerivation {
       pname = "LibClang";
       version = "0.1.0";
       sha256 = "12bbmgd9xh6l9c9z3r82j2csksbplha1zzzzzb8338kj81wp1pjb";
       buildDepends = [ greencard time ];
       homepage = "https://github.com/chetant/LibClang/issues";
       description = "Haskell bindings for libclang (a C++ parsing library)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LibZip" = callPackage
    ({ mkDerivation, bindings-libzip, filepath, HUnit, mtl, time
     , utf8-string
     }:
     mkDerivation {
       pname = "LibZip";
       version = "0.11.1";
       sha256 = "04nzh9gqji20qhiiyy8i23cb4gy9qbdza5pkwicgghiqbyfrpk6f";
       buildDepends = [ bindings-libzip filepath mtl time utf8-string ];
       testDepends = [
         bindings-libzip filepath HUnit mtl time utf8-string
       ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Bindings to libzip, a library for manipulating zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Limit" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Limit";
       version = "1.0";
       sha256 = "1yd8c443ql17daicn3r9jiwxxjlpqnpnvkbxcszjha4i4ar94zq1";
       description = "Wrapper for data that can be unbounded";
       license = stdenv.lib.licenses.mit;
     }) {};

  "LinearSplit" = callPackage
    ({ mkDerivation, cmdargs, QuickCheck }:
     mkDerivation {
       pname = "LinearSplit";
       version = "0.2.1";
       sha256 = "05rdlxsl5zpnczahaw2fdycqyryd3y7bccizjbn5sap23spwd7di";
       buildDepends = [ cmdargs QuickCheck ];
       homepage = "http://github.com/rukav/LinearSplit";
       description = "Partition the sequence of items to the subsequences in the order given";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LinkChecker" = callPackage
    ({ mkDerivation, HTTP, mtl, network, tagsoup }:
     mkDerivation {
       pname = "LinkChecker";
       version = "0.1";
       sha256 = "00wlyqclmzn03y86ba64pkc85kndnakgj8spv4vm7z0k8dsphnfq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP mtl network tagsoup ];
       homepage = "http://janzzstimmpfle.de/~jens/software/LinkChecker/";
       description = "Check a bunch of local html files for broken links";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "List" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "List";
       version = "0.5.1";
       sha256 = "1hgkal8jh035bs0z6z8i899dc0888fhdx8940y27aaxxbmlzfy1p";
       buildDepends = [ transformers ];
       homepage = "http://github.com/yairchu/generator/tree";
       description = "List monad transformer and class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ListLike" = callPackage
    ({ mkDerivation, dlist, fmlist, HUnit, QuickCheck, random, text
     , vector
     }:
     mkDerivation {
       pname = "ListLike";
       version = "4.1.0";
       sha256 = "0j78mm9vsl3scwgqp4h2bhq54hf22bxj9cg9pl26d12zw7038kwj";
       buildDepends = [ dlist fmlist text vector ];
       testDepends = [ dlist fmlist HUnit QuickCheck random text vector ];
       homepage = "http://software.complete.org/listlike";
       description = "Generic support for list-like structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ListTree" = callPackage
    ({ mkDerivation, filepath, List, transformers }:
     mkDerivation {
       pname = "ListTree";
       version = "0.2.1";
       sha256 = "1ril13w2n1sgl44qwm1ydg94cvkm2qk55hsfv5bxbb6r99xc645m";
       buildDepends = [ filepath List transformers ];
       homepage = "http://github.com/yairchu/generator/tree";
       description = "Trees and monadic trees expressed as monadic lists where the underlying monad is a list";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ListZipper" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "ListZipper";
       version = "1.2.0.2";
       sha256 = "0z3izxpl21fxz43jpx7zqs965anb3gp5vidv3pwwznr88ss2j6a9";
       buildDepends = [ QuickCheck ];
       description = "Simple zipper for lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LogicGrowsOnTrees" = callPackage
    ({ mkDerivation, AbortT-mtl, AbortT-transformers, cereal
     , cmdtheline, composition, data-ivar, derive, hslogger
     , hslogger-template, HUnit, lens, MonadCatchIO-transformers
     , monoid-statistics, mtl, multiset, operational, prefix-units
     , PSQueue, QuickCheck, quickcheck-instances, random
     , sequential-index, smallcheck, split, stm, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-smallcheck, time, transformers, uuid, void
     , yjtools
     }:
     mkDerivation {
       pname = "LogicGrowsOnTrees";
       version = "1.1.0.2";
       sha256 = "1yqnrzcmx8ch9xcpg07if9cs4z1sdpyjfpgzkqkhv9i263pfgxpk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         AbortT-mtl AbortT-transformers cereal cmdtheline composition
         data-ivar derive hslogger hslogger-template lens
         MonadCatchIO-transformers monoid-statistics mtl multiset
         operational prefix-units PSQueue sequential-index split stm time
         transformers void yjtools
       ];
       testDepends = [
         cereal composition data-ivar hslogger hslogger-template HUnit lens
         MonadCatchIO-transformers operational QuickCheck
         quickcheck-instances random smallcheck stm test-framework
         test-framework-hunit test-framework-quickcheck2
         test-framework-smallcheck time transformers uuid void
       ];
       description = "a parallel implementation of logic programming using distributed tree exploration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LogicGrowsOnTrees-MPI" = callPackage
    ({ mkDerivation, cereal, cmdtheline, data-ivar, derive, hslogger
     , hslogger-template, LogicGrowsOnTrees, MonadCatchIO-transformers
     , mpi, stm, transformers
     }:
     mkDerivation {
       pname = "LogicGrowsOnTrees-MPI";
       version = "1.0.0.1.1";
       sha256 = "0sqlx06i9f3wxzpk7mivbnn2k4z5n141vbkn1bj886bk5srbrx92";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal cmdtheline data-ivar derive hslogger hslogger-template
         LogicGrowsOnTrees MonadCatchIO-transformers stm transformers
       ];
       extraLibraries = [ mpi ];
       description = "an adapter for LogicGrowsOnTrees that uses MPI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LogicGrowsOnTrees-network" = callPackage
    ({ mkDerivation, cereal, cmdtheline, composition, hslogger
     , hslogger-template, HUnit, lens, LogicGrowsOnTrees
     , MonadCatchIO-transformers, mtl, network, random, stm
     , test-framework, test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "LogicGrowsOnTrees-network";
       version = "1.0.0.3";
       sha256 = "0r66pb35fpmgvkf41kxz289c9ylwv7jdf9bxbsrv7p4ylg83x2dn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal cmdtheline composition hslogger hslogger-template lens
         LogicGrowsOnTrees MonadCatchIO-transformers mtl network
         transformers
       ];
       testDepends = [
         hslogger hslogger-template HUnit LogicGrowsOnTrees network random
         stm test-framework test-framework-hunit transformers
       ];
       description = "an adapter for LogicGrowsOnTrees that uses multiple processes running in a network";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LogicGrowsOnTrees-processes" = callPackage
    ({ mkDerivation, cereal, cmdtheline, filepath, FindBin, hslogger
     , hslogger-template, HUnit, LogicGrowsOnTrees
     , MonadCatchIO-transformers, random, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "LogicGrowsOnTrees-processes";
       version = "1.0.0.2";
       sha256 = "0d1kz5d83frn1591vgk33d0rw2s4z98lp993rnvhl3k5zqpr2svn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal cmdtheline filepath FindBin hslogger hslogger-template
         LogicGrowsOnTrees MonadCatchIO-transformers transformers
       ];
       testDepends = [
         cereal hslogger hslogger-template HUnit LogicGrowsOnTrees random
         test-framework test-framework-hunit transformers
       ];
       description = "an adapter for LogicGrowsOnTrees that uses multiple processes for parallelism";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "LslPlus" = callPackage
    ({ mkDerivation, filepath, HaXml, mtl, network, parsec, pureMD5
     , random, syb, utf8-string
     }:
     mkDerivation {
       pname = "LslPlus";
       version = "0.4.3";
       sha256 = "0dwsx23fibgj36181rfwfj1kl6sgdkf8bk4dd9cwia0rbjrl4qyk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath HaXml mtl network parsec pureMD5 random syb utf8-string
       ];
       homepage = "http:/lslplus.sourceforge.net/";
       description = "An execution and testing framework for the Linden Scripting Language (LSL)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Lucu" = callPackage
    ({ mkDerivation, base-unicode-symbols, base64-bytestring, filepath
     , haskell-src, HsOpenSSL, hxt, mtl, network, stm, time, time-http
     , zlib
     }:
     mkDerivation {
       pname = "Lucu";
       version = "0.7.0.3";
       sha256 = "09vhz5gc9nmlwlxn6vk5whq6lpqbidqifx4i4lvp4n21gib64v9b";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols base64-bytestring filepath haskell-src
         HsOpenSSL hxt mtl network stm time time-http zlib
       ];
       homepage = "http://cielonegro.org/Lucu.html";
       description = "HTTP Daemonic Library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "MC-Fold-DP" = callPackage
    ({ mkDerivation, Biobase, cmdargs, PrimitiveArray, split, tuple
     , vector
     }:
     mkDerivation {
       pname = "MC-Fold-DP";
       version = "0.1.1.0";
       sha256 = "0h76xsh4p4zbxnbk7hszwm1gj44p6349d4bkbixn7fyiyp4f0pvh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Biobase cmdargs PrimitiveArray split tuple vector
       ];
       homepage = "http://www.tbi.univie.ac.at/software/mcfolddp/";
       description = "Folding algorithm based on nucleotide cyclic motifs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "MFlow" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, case-insensitive
     , clientsession, conduit, conduit-extra, cpphs
     , extensible-exceptions, http-types, monadloc, mtl, parsec
     , pwstore-fast, random, RefSerialize, resourcet, stm, TCache, text
     , time, transformers, utf8-string, vector, wai, wai-extra, warp
     , warp-tls, Workflow
     }:
     mkDerivation {
       pname = "MFlow";
       version = "0.4.5.9";
       sha256 = "0mqsyx7wkfgvpppqgpjpvzwx79vj7lh4c8afzzj1hgh8z0ilb4ik";
       buildDepends = [
         blaze-html blaze-markup case-insensitive clientsession conduit
         conduit-extra extensible-exceptions http-types monadloc mtl parsec
         pwstore-fast random RefSerialize resourcet stm TCache text time
         transformers utf8-string vector wai wai-extra warp warp-tls
         Workflow
       ];
       buildTools = [ cpphs ];
       description = "stateful, RESTful web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MHask" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "MHask";
       version = "0.3.0.0";
       sha256 = "0nlj914ahipyfqv1l7qr66pa0a8g4g6ks6mipc38z5f1jy0kjrva";
       buildDepends = [ transformers ];
       homepage = "https://github.com/DanBurton/MHask#readme";
       description = "The category of monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MagicHaskeller" = callPackage
    ({ mkDerivation, ghc-paths, haskell-src, html, mtl, network, random
     , syb
     }:
     mkDerivation {
       pname = "MagicHaskeller";
       version = "0.9.1";
       sha256 = "1rr1gp808qwi0i84l6hmm03b8khnawz8qq606p5a351pd0mbxkak";
       buildDepends = [
         ghc-paths haskell-src html mtl network random syb
       ];
       homepage = "http://nautilus.cs.miyazaki-u.ac.jp/~skata/MagicHaskeller.html";
       description = "Automatic inductive functional programmer by systematic search";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MaybeT" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "MaybeT";
       version = "0.1.2";
       sha256 = "0cmnfs22ldai0z172rdsvryzsh33a70yax21v03nhr92a4b62plr";
       buildDepends = [ mtl ];
       description = "MaybeT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MaybeT-monads-tf" = callPackage
    ({ mkDerivation, monads-tf, transformers }:
     mkDerivation {
       pname = "MaybeT-monads-tf";
       version = "0.2.0.1";
       sha256 = "034v9n6ldjn1hsv4rphvysbykm8x0jqa2prbw7k28fkp6m30j74x";
       buildDepends = [ monads-tf transformers ];
       description = "MaybeT monad transformer compatible with monads-tf (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MaybeT-transformers" = callPackage
    ({ mkDerivation, monads-fd, transformers }:
     mkDerivation {
       pname = "MaybeT-transformers";
       version = "0.2";
       sha256 = "189w8dpxyq7gksca6k08hb4vpanpz06c99akgzpcpjy0i7k22ily";
       buildDepends = [ monads-fd transformers ];
       description = "MaybeT monad transformer using transformers instead of mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MazesOfMonad" = callPackage
    ({ mkDerivation, filepath, HUnit, mtl, random, regex-posix, time }:
     mkDerivation {
       pname = "MazesOfMonad";
       version = "1.0.9";
       sha256 = "041kqz5j8xaa2ciyrfnwz6p9gcx4il5s6f34kzv9kp0s07hmn1q2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath HUnit mtl random regex-posix time ];
       description = "Console-based Role Playing Game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MeanShift" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "MeanShift";
       version = "0.1";
       sha256 = "0rnbg7w3qc3xsbzpw5is7w7qdjl2kqbr1acc744aggwlibazl59w";
       buildDepends = [ vector ];
       description = "Mean shift algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Measure" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Measure";
       version = "0.0.2";
       sha256 = "1vy8ykjy9cpv661byqv21775zbyciqx2hf77c1nl58nn34x0s2ds";
       description = "A library for units of measurement";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MemoTrie" = callPackage
    ({ mkDerivation, void }:
     mkDerivation {
       pname = "MemoTrie";
       version = "0.6.2";
       sha256 = "1g4b82s30bqkfids3iywf873nyn8h7l8rp8l3xl58smj5lbi3p4x";
       buildDepends = [ void ];
       homepage = "http://haskell.org/haskellwiki/MemoTrie";
       description = "Trie-based memo functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MetaHDBC" = callPackage
    ({ mkDerivation, convertible, HDBC, HDBC-odbc, mtl }:
     mkDerivation {
       pname = "MetaHDBC";
       version = "0.1.2";
       sha256 = "165laig6qifki46aqpfhp7g86w70ivz2l636m9gg622hix8l3c1m";
       buildDepends = [ convertible HDBC HDBC-odbc mtl ];
       description = "Statically checked database access";
       license = "LGPL";
     }) {};

  "MetaObject" = callPackage
    ({ mkDerivation, stringtable-atom }:
     mkDerivation {
       pname = "MetaObject";
       version = "0.0.6.20110925";
       sha256 = "0cgn13rpbqkywpiki6fcl76iwmc74d0f9ixki6dg7lrg49lhb67r";
       buildDepends = [ stringtable-atom ];
       description = "A meta-object system for Haskell based on Perl 6";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Metrics" = callPackage
    ({ mkDerivation, hstats }:
     mkDerivation {
       pname = "Metrics";
       version = "0.1.2";
       sha256 = "1ks5h3vlla2d86wvf2a4z1qifsinya2skq8ygdk45ynnwk735y4x";
       buildDepends = [ hstats ];
       homepage = "http://github.com/benhamner/Metrics/";
       description = "Evaluation metrics commonly used in supervised machine learning";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Mhailist" = callPackage
    ({ mkDerivation, binary, filepath, mtl, time }:
     mkDerivation {
       pname = "Mhailist";
       version = "0.0";
       sha256 = "1vxsaw2kfrx6g5y57lchcs1xwj0jnanw9svg59mjnasw53z674ck";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary filepath mtl time ];
       description = "Haskell mailing list manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MiniAgda" = callPackage
    ({ mkDerivation, alex, happy, haskell-src-exts, mtl }:
     mkDerivation {
       pname = "MiniAgda";
       version = "0.2014.9.12";
       sha256 = "14h7ksd95wiixfmvrkxw3l13qdxhrhgkhmz00mcw04bdyzfmgr0n";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src-exts mtl ];
       buildTools = [ alex happy ];
       homepage = "http://www.tcs.ifi.lmu.de/~abel/miniagda/";
       description = "A toy dependently typed programming language with type-based termination";
       license = "unknown";
     }) {};

  "MissingH" = callPackage
    ({ mkDerivation, errorcall-eq-instance, filepath, hslogger, HUnit
     , mtl, network, parsec, QuickCheck, random, regex-compat, testpack
     , time
     }:
     mkDerivation {
       pname = "MissingH";
       version = "1.3.0.1";
       sha256 = "1cwdhgqqv2riqwhsgyrpmqyzvg19lx6zp1g7xdp4rikh7rkn03ds";
       buildDepends = [
         filepath hslogger HUnit mtl network parsec random regex-compat time
       ];
       testDepends = [
         errorcall-eq-instance filepath hslogger HUnit mtl network parsec
         QuickCheck random regex-compat testpack time
       ];
       homepage = "http://software.complete.org/missingh";
       description = "Large utility library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MissingM" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "MissingM";
       version = "0.0.4";
       sha256 = "19kijf02jq8w3n2fvisb8xrws524sa690lbp9di6499xakkzyqxs";
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       description = "findM and other missing 'M's";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MissingPy" = callPackage
    ({ mkDerivation, anydbm, MissingH }:
     mkDerivation {
       pname = "MissingPy";
       version = "0.10.6";
       sha256 = "0390ap25qj6a37jllsih39q5apgvwdjdw5m7jgfrllkp5bng6yj6";
       buildDepends = [ anydbm MissingH ];
       homepage = "http://github.com/softmechanics/missingpy";
       description = "Haskell interface to Python";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Modulo" = callPackage
    ({ mkDerivation, numeric-prelude }:
     mkDerivation {
       pname = "Modulo";
       version = "0.2.0.1";
       sha256 = "1n90lfrvfr1ni7ninlxbs4wk0m7mibdpi9sy26ifih51nmk8nziq";
       buildDepends = [ numeric-prelude ];
       description = "Modular arithmetic via Numeric-Prelude";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "Moe" = callPackage
    ({ mkDerivation, GLUT, random }:
     mkDerivation {
       pname = "Moe";
       version = "0.1";
       sha256 = "1nk767nywssg5p50wd6czcbhi61v5gcncyy3d59a90slzic8n5b3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ GLUT random ];
       description = "A FRP library based on signal functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MonadCatchIO-mtl" = callPackage
    ({ mkDerivation, extensible-exceptions, MonadCatchIO-transformers
     }:
     mkDerivation {
       pname = "MonadCatchIO-mtl";
       version = "0.3.1.0";
       sha256 = "0qarf73c8zq8dgvxdiwqybpjfy8gba9vf4k0skiwyk5iphilxhhq";
       buildDepends = [ extensible-exceptions MonadCatchIO-transformers ];
       homepage = "http://darcsden.com/jcpetruzza/MonadCatchIO-mtl";
       description = "Monad-transformer version of the Control.Exception module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MonadCatchIO-mtl-foreign" = callPackage
    ({ mkDerivation, MonadCatchIO-mtl, mtl, primitive }:
     mkDerivation {
       pname = "MonadCatchIO-mtl-foreign";
       version = "0.1";
       sha256 = "0jfq5v1jigxl9mnnvpqph9ayq840s9nyb5srym04mbicri4gbjan";
       buildDepends = [ MonadCatchIO-mtl mtl primitive ];
       description = "Polymorphic combinators for working with foreign functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MonadCatchIO-transformers" = callPackage
    ({ mkDerivation, extensible-exceptions, monads-tf, transformers }:
     mkDerivation {
       pname = "MonadCatchIO-transformers";
       version = "0.3.1.2";
       sha256 = "1r5c4qz6yp1qrsmk9di35d5kk2dcnaxh2mg3n5kdim991ydzsi1d";
       editedCabalFile = "0783d24gx2fnlapxlipgf2vg5kwlsfmcqvy3llw14vy1yz6xz9i0";
       buildDepends = [ extensible-exceptions monads-tf transformers ];
       description = "Monad-transformer compatible version of the Control.Exception module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MonadCatchIO-transformers-foreign" = callPackage
    ({ mkDerivation, MonadCatchIO-transformers, primitive, transformers
     }:
     mkDerivation {
       pname = "MonadCatchIO-transformers-foreign";
       version = "0.1";
       sha256 = "070ifw78z2si3l1hqqvx236spdf61p3bf1qspd54fzq2dm89i1yw";
       buildDepends = [
         MonadCatchIO-transformers primitive transformers
       ];
       description = "Polymorphic combinators for working with foreign functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MonadLab" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "MonadLab";
       version = "0.0.2";
       sha256 = "1p8xhxxjhwr93as98pvp1z25ypgj7arka8bw75r0q46948h7nxf7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec ];
       homepage = "http://monadgarden.cs.missouri.edu/MonadLab";
       description = "Automatically generate layered monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MonadPrompt" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "MonadPrompt";
       version = "1.0.0.5";
       sha256 = "1nmy7dfzrkd8yfv5i9vlmjq9khnyi76ayvkzgcf783v5hfzcn4mh";
       buildDepends = [ mtl ];
       description = "MonadPrompt, implementation & examples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MonadRandom" = callPackage
    ({ mkDerivation, mtl, random, transformers }:
     mkDerivation {
       pname = "MonadRandom";
       version = "0.3.0.1";
       sha256 = "0bbj6rkxskrvl14lngpggql4q41pw21cj4z8h592mizrxjfa3rj0";
       buildDepends = [ mtl random transformers ];
       description = "Random-number generation monad";
       license = "unknown";
     }) {};

  "MonadRandomLazy" = callPackage
    ({ mkDerivation, MonadRandom, mtl, random }:
     mkDerivation {
       pname = "MonadRandomLazy";
       version = "0.1";
       sha256 = "1nsnv47mwka4bsmv7hvsx96s6w6qrzvfsn47fvcfy4fi88b56p2j";
       buildDepends = [ MonadRandom mtl random ];
       description = "Lazy monad for psuedo random-number generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Monadius" = callPackage
    ({ mkDerivation, GLUT, OpenGL }:
     mkDerivation {
       pname = "Monadius";
       version = "0.99";
       sha256 = "0jq59nnnydllqpvg3h2d1ylz3g58hwi0m08lmw2bv0ajzgn5mc8x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT OpenGL ];
       homepage = "http://www.geocities.jp/takascience/haskell/monadius_en.html";
       description = "2-D arcade scroller";
       license = "GPL";
     }) {};

  "Monaris" = callPackage
    ({ mkDerivation, free, free-game, mtl }:
     mkDerivation {
       pname = "Monaris";
       version = "0.1.8";
       sha256 = "0myghw0w122n1czpaaqmpiyv0nragjkwnja8kb4agrwhcjfk3icb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ free free-game mtl ];
       homepage = "https://github.com/fumieval/Monaris/";
       description = "A simple tetris clone";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Monatron" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Monatron";
       version = "0.3.1";
       sha256 = "0250xqc5fgl8mg9yb0ykbfmxnyxacqbvi692irgfw89gf9vkh886";
       description = "Monad transformer library with uniform liftings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Monatron-IO" = callPackage
    ({ mkDerivation, Monatron, transformers }:
     mkDerivation {
       pname = "Monatron-IO";
       version = "1.0";
       sha256 = "0svdyfzv4xlwjnc61wwik8a60a5667lhsys49sgry65a1v2csnv0";
       buildDepends = [ Monatron transformers ];
       homepage = "https://github.com/kreuzschlitzschraubenzieher/Monatron-IO";
       description = "MonadIO instances for the Monatron transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Monocle" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Monocle";
       version = "0.0.4";
       sha256 = "1p8s2agsni56h7vlydbhy7qhi0qkwafpcrsfafrlg44gvpwff15y";
       buildDepends = [ mtl ];
       description = "Symbolic computations in strict monoidal categories with LaTeX output";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MorseCode" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "MorseCode";
       version = "0.0.5";
       sha256 = "1dglyak17db7q9nd6s255w2zh8lh192vidyjvgvh53vbybymb20z";
       buildDepends = [ split ];
       description = "Morse code";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Munkres" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Munkres";
       version = "0.1";
       sha256 = "169mgcyls0dsifnbp615r4i3g64ga2vbczsiv4aq17d1nma8sw19";
       description = "Munkres' assignment algorithm (hungarian method)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Munkres-simple" = callPackage
    ({ mkDerivation, bimap, Munkres }:
     mkDerivation {
       pname = "Munkres-simple";
       version = "0.1.0.1";
       sha256 = "0k5v37qrhb8i5hfx9jvkggjmry2jrzw967s17l2x561qmm59c2rb";
       buildDepends = [ bimap Munkres ];
       description = "Simple and typesafe layer over the Munkres package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "MusicBrainz" = callPackage
    ({ mkDerivation, aeson, conduit, conduit-extra, HTTP, http-conduit
     , http-types, monad-control, resourcet, text, time, transformers
     , vector, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "MusicBrainz";
       version = "0.2.2";
       sha256 = "1byliyx6ykhd62n0zsvhaa94s77qj8lya5m7cq031zh5zkx6j7l3";
       buildDepends = [
         aeson conduit conduit-extra HTTP http-conduit http-types
         monad-control resourcet text time transformers vector xml-conduit
         xml-types
       ];
       homepage = "http://floss.scru.org/hMusicBrainz";
       description = "interface to MusicBrainz XML2 web service";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "MusicBrainz-libdiscid" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "MusicBrainz-libdiscid";
       version = "0.5.0.0";
       sha256 = "15fwpbh8yxv41k73j9q4v5d5c5rh3q2xfp7pc7b5mc3rxipw4pa5";
       buildDepends = [ vector ];
       homepage = "https://github.com/atwupack/MusicBrainz-libdiscid";
       description = "Binding to libdiscid by MusicBrainz";
       license = "LGPL";
     }) {};

  "NGrams" = callPackage
    ({ mkDerivation, HCL, HTTP, network, regex-compat }:
     mkDerivation {
       pname = "NGrams";
       version = "1.1";
       sha256 = "1niwh0ndkzgd38phx5527i14nb9swvybdjwjwbndkpb21x5j82nc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HCL HTTP network regex-compat ];
       description = "Simple application for calculating n-grams using Google";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NTRU" = callPackage
    ({ mkDerivation, arithmoi, crypto-api, polynomial, random, SHA
     , split
     }:
     mkDerivation {
       pname = "NTRU";
       version = "1.0.0.0";
       sha256 = "0n96hxzv5b1zs0xkq5ksh0hp075ca46l8xd7cs2hdnmkmi6rwvha";
       buildDepends = [ arithmoi crypto-api polynomial random SHA split ];
       description = "NTRU Cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NXT" = callPackage
    ({ mkDerivation, bluetooth, filepath, HUnit, mtl, QuickCheck
     , serialport, test-framework, test-framework-hunit
     , test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "NXT";
       version = "0.2.3";
       sha256 = "1ka1k9dww84rxx8c45dab6f92cb8mx3fy3sskw07p3f4ahv9whi3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl serialport time ];
       testDepends = [
         filepath HUnit mtl QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       extraLibraries = [ bluetooth ];
       homepage = "http://mitar.tnode.com";
       description = "A Haskell interface to Lego Mindstorms NXT";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "NXTDSL" = callPackage
    ({ mkDerivation, attoparsec, hashable, mtl, resourcet, stm, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "NXTDSL";
       version = "0.4";
       sha256 = "117ngz15j5chnyrhj1da3r4z11vqx5g70wan7zblwr3s6n006485";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec hashable mtl resourcet stm text unordered-containers
       ];
       homepage = "https://github.com/agrafix/legoDSL";
       description = "Generate NXC Code from DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NanoProlog" = callPackage
    ({ mkDerivation, ListLike, uu-parsinglib }:
     mkDerivation {
       pname = "NanoProlog";
       version = "0.3";
       sha256 = "0wjjwzzc78sj7nsaq1hgxiwv0pc069mxns425lhmrlxcm0vf8fmn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ListLike uu-parsinglib ];
       description = "Very small interpreter for a Prolog-like language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NaturalLanguageAlphabets" = callPackage
    ({ mkDerivation, hashable, intern, unordered-containers }:
     mkDerivation {
       pname = "NaturalLanguageAlphabets";
       version = "0.0.0.1";
       sha256 = "0zwp7hqgvkrz1d3wcsp79v29b1c6cyby8jzvndnsb3gxp7x7gpws";
       buildDepends = [ hashable intern unordered-containers ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Alphabet and word representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NaturalSort" = callPackage
    ({ mkDerivation, QuickCheck, strict }:
     mkDerivation {
       pname = "NaturalSort";
       version = "0.2.1";
       sha256 = "1xjhmjxp7w0nxvphnfh2phfpg4aqhjyg2f8q99qqavf8cq2k3za9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck strict ];
       homepage = "http://github.com/joachifm/natsort";
       description = "Natural sorting for strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NestedFunctor" = callPackage
    ({ mkDerivation, comonad, distributive }:
     mkDerivation {
       pname = "NestedFunctor";
       version = "0.2.0.2";
       sha256 = "1kmv20haxkqn1cwy9g59nmjpn5x1rng2rrd8y3gwxfdwn8blc735";
       buildDepends = [ comonad distributive ];
       homepage = "https://github.com/kwf/NestedFunctor";
       description = "Nested composition of functors with a type index tracking nesting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NestedSampling" = callPackage
    ({ mkDerivation, random, vector }:
     mkDerivation {
       pname = "NestedSampling";
       version = "0.1.4";
       sha256 = "1sdlnjnlbk5b04zyhr7574g2ghcivzvkxnm2aak4h9bik00gb1lv";
       buildDepends = [ random vector ];
       homepage = "https://github.com/ijt/haskell_nested_sampling";
       description = "A port of John Skilling's nested sampling C code to Haskell";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "NetSNMP" = callPackage
    ({ mkDerivation, HUnit, netsnmp, utf8-string }:
     mkDerivation {
       pname = "NetSNMP";
       version = "0.3.1.0";
       sha256 = "17lmxwcc3z69dgxipi776m2wpwa1lz84w9v2wirw08wb9fba2gdr";
       buildDepends = [ utf8-string ];
       testDepends = [ HUnit utf8-string ];
       extraLibraries = [ netsnmp ];
       homepage = "https://github.com/ptek/netsnmp";
       description = "Bindings for net-snmp's C API for clients";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Network-NineP" = callPackage
    ({ mkDerivation, binary, convertible, monad-loops, mstate, mtl
     , network, NineP, regex-posix, stateref, transformers
     }:
     mkDerivation {
       pname = "Network-NineP";
       version = "0.2.0";
       sha256 = "0pa0j9ljq32dikffwi3n1cifilb2586z3q004rqa0sq82zyah949";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary convertible monad-loops mstate mtl network NineP regex-posix
         stateref transformers
       ];
       description = "High-level abstraction over 9P protocol";
       license = "unknown";
     }) {};

  "NewBinary" = callPackage
    ({ mkDerivation, integer }:
     mkDerivation {
       pname = "NewBinary";
       version = "0.2.1";
       sha256 = "0cp71hkx8cccx7jxf5qw1bxdylcc56v68mvjp0dn9hkh1idxplzq";
       buildDepends = [ integer ];
       description = "A binary I/O library";
       license = "unknown";
     }) {};

  "NineP" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "NineP";
       version = "0.0.2.1";
       sha256 = "1k6qdp4zmqjl2f6cqy1zzzl6ncb2m9r0qgh4c24i2h5kkxmm3cab";
       buildDepends = [ binary ];
       homepage = "http://9ph.googlecode.com";
       description = "9P2000 in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ninjas" = callPackage
    ({ mkDerivation, binary, filepath, gloss, network, networked-game
     , random
     }:
     mkDerivation {
       pname = "Ninjas";
       version = "0.1.0.0";
       sha256 = "0wz80cv7m7m4q6y6rd07y422b97hyhnb9yl6bj68pi1nxmjzcjhm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary filepath gloss network networked-game random
       ];
       homepage = "http://github.com/glguy/ninjas";
       description = "Ninja game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NoSlow" = callPackage
    ({ mkDerivation, criterion, dph-base, dph-prim-seq, statistics
     , storablevector, uvector, vector
     }:
     mkDerivation {
       pname = "NoSlow";
       version = "0.2";
       sha256 = "1pr1v8xxnhd7yxbhjqhlkwlsfzbk425bmxn99d80w8p4biag104x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         criterion dph-base dph-prim-seq statistics storablevector uvector
         vector
       ];
       homepage = "http://code.haskell.org/NoSlow";
       description = "Microbenchmarks for various array libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NoTrace" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "NoTrace";
       version = "0.2.0.1";
       sha256 = "053w0j90sf16by9pqllgjxy6r57vzlq33fgwz4ywjn6bypw6009d";
       homepage = "https://github.com/CindyLinz/Haskell-NoTrace";
       description = "Remove all the functions come from Debug.Trace after debugging";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Noise" = callPackage
    ({ mkDerivation, data-default, vector }:
     mkDerivation {
       pname = "Noise";
       version = "1.0.6";
       sha256 = "0sjyq8nilqhmlhbagi1ms2zh7fyhzci9w5hj3dyxpd2ccq1bbvyq";
       buildDepends = [ data-default vector ];
       description = "A Haskell coherent noise generator based on libnoise";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Nomyx" = callPackage
    ({ mkDerivation, exceptions, filepath, hint-server, mtl, network
     , Nomyx-Core, Nomyx-Language, Nomyx-Web, safe, stm, time
     }:
     mkDerivation {
       pname = "Nomyx";
       version = "0.7.5";
       sha256 = "1vnq19yh1sr39zch76fxangslx12zsv5w7p6nq48cbz8jix0ypxp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         exceptions filepath hint-server mtl network Nomyx-Core
         Nomyx-Language Nomyx-Web safe stm time
       ];
       homepage = "http://www.nomyx.net";
       description = "A Nomic game in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Nomyx-Core" = callPackage
    ({ mkDerivation, acid-state, aeson, blaze-html, blaze-markup
     , data-lens, data-lens-fd, data-lens-template, DebugTraceHelpers
     , deepseq, either-unwrap, exceptions, filepath
     , happstack-authenticate, hint, hint-server, hscolour, ixset
     , mime-mail, MissingH, mtl, network, Nomyx-Language, random, safe
     , safecopy, stm, tar, temporary, text, time
     }:
     mkDerivation {
       pname = "Nomyx-Core";
       version = "0.7.5";
       sha256 = "0kd8rl0i7d4kbhnsakiqk0zmz956f12hccmql8fgnnww4fmf36zs";
       buildDepends = [
         acid-state aeson blaze-html blaze-markup data-lens data-lens-fd
         data-lens-template DebugTraceHelpers deepseq either-unwrap
         exceptions filepath happstack-authenticate hint hint-server
         hscolour ixset mime-mail MissingH mtl network Nomyx-Language random
         safe safecopy stm tar temporary text time
       ];
       homepage = "http://www.nomyx.net";
       description = "A Nomic game in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Nomyx-Language" = callPackage
    ({ mkDerivation, Boolean, data-lens, data-lens-fd
     , data-lens-template, DebugTraceHelpers, mtl, random, safe, time
     , time-recurrence
     }:
     mkDerivation {
       pname = "Nomyx-Language";
       version = "0.7.5";
       sha256 = "11480ggfphwdyakhch1i8fr3cqhdmx32jg5nj5pc43sk3bpq2dwk";
       buildDepends = [
         Boolean data-lens data-lens-fd data-lens-template DebugTraceHelpers
         mtl random safe time time-recurrence
       ];
       homepage = "http://www.nomyx.net";
       description = "Language to express rules for Nomic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Nomyx-Rules" = callPackage
    ({ mkDerivation, hint-server, hslogger, mtl, safe, stm, time
     , time-recurrence
     }:
     mkDerivation {
       pname = "Nomyx-Rules";
       version = "0.1.0";
       sha256 = "16kzpdvn57sdmpqkwswgixm6pnyi01vj44yvzczn9sy4azwd10q5";
       buildDepends = [
         hint-server hslogger mtl safe stm time time-recurrence
       ];
       description = "Language to express rules for Nomic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Nomyx-Web" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, data-lens, data-lens-fd
     , fb, filepath, happstack-authenticate, happstack-server, hscolour
     , mtl, Nomyx-Core, Nomyx-Language, reform, reform-blaze
     , reform-happstack, safe, split, stm, text, time, web-routes
     , web-routes-happstack, web-routes-regular, web-routes-th
     }:
     mkDerivation {
       pname = "Nomyx-Web";
       version = "0.7.5";
       sha256 = "161b87ysa9fh40r1z9cp1mzyrs5ws3d97bsrnqwgcaz4rhnjzyvb";
       buildDepends = [
         blaze-html blaze-markup data-lens data-lens-fd fb filepath
         happstack-authenticate happstack-server hscolour mtl Nomyx-Core
         Nomyx-Language reform reform-blaze reform-happstack safe split stm
         text time web-routes web-routes-happstack web-routes-regular
         web-routes-th
       ];
       homepage = "http://www.nomyx.net";
       description = "Web gui for Nomyx";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NonEmpty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "NonEmpty";
       version = "0.1";
       sha256 = "0nycv791c6b5bcaz5y9wm3wxn1p930p163qs1rpdiix04fnaxgxl";
       description = "Library providing a non-empty list datatype, and total functions operating on it";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NonEmptyList" = callPackage
    ({ mkDerivation, category-extras, QuickCheck, Semigroup
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "NonEmptyList";
       version = "0.0.9";
       sha256 = "09515y7ax4vndsj1828b6xxnnkml4vg9x29rn3lrw3rc65fi11x2";
       buildDepends = [
         category-extras QuickCheck Semigroup test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://code.google.com/p/nonempty/";
       description = "A list with a length of at least one";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NumInstances" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "NumInstances";
       version = "1.4";
       sha256 = "0ycnwn09izajv330l7a31mc0alifqmxjsn9qmfswwnbg6i4jmnyb";
       homepage = "https://github.com/conal/NumInstances";
       description = "Instances of numeric classes for functions and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NumLazyByteString" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "NumLazyByteString";
       version = "0.0.0.1";
       sha256 = "17ca34hxaz9xk3ykkzp14n7wb31aiza12859k3rmvwhnq4j89jqs";
       buildDepends = [ binary ];
       description = "Num, Enum, Eq, Integral, Ord, Real, and Show instances for Lazy ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "NumberSieves" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "NumberSieves";
       version = "0.1.2";
       sha256 = "1w8y46ivli37rlhkdrnw13qv6f0m13a88w0qkfw949b09vdp2nw2";
       homepage = "http://patch-tag.com/r/lpsmith/NumberSieves";
       description = "Number Theoretic Sieves: primes, factorization, and Euler's Totient";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Numbers" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "Numbers";
       version = "0.2.1";
       sha256 = "1z1v396lar6b0lyis3k5gn5kn17ndggm8j7qxnhirlpgm831fgg7";
       buildDepends = [ random ];
       homepage = "http://page.mi.fu-berlin.de/aneumann/numbers/index.html";
       description = "An assortment of number theoretic functions";
       license = "LGPL";
     }) {};

  "Nussinov78" = callPackage
    ({ mkDerivation, ADPfusion, mtl, primitive, PrimitiveArray, vector
     }:
     mkDerivation {
       pname = "Nussinov78";
       version = "0.1.0.0";
       sha256 = "1j9qmin7fqwfy69f7wi1is1nawhh46phda6na20am7r8cjzdnjsh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ADPfusion mtl primitive PrimitiveArray vector ];
       homepage = "http://www.tbi.univie.ac.at/~choener/adpfusion";
       description = "Nussinov78 using the ADPfusion library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Nutri" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Nutri";
       version = "0.1";
       sha256 = "1m7qx5zydz5jpk6a55k7rzchlwmkd91gsiqmn26qqn50ab3di35j";
       homepage = "https://github.com/frosch03/Nutri";
       description = "A little library to calculate nutrition values of food items";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "OGL" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "OGL";
       version = "0.0.3";
       sha256 = "1w8lpi2r315b4ry234gi4rq09j92zvhr9ibxwsig6544cbb5g8qm";
       buildDepends = [ mtl ];
       homepage = "http://haskell.org/haskellwiki/OGL";
       description = "A context aware binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OSM" = callPackage
    ({ mkDerivation, comonad-transformers, data-lens, hxt, newtype }:
     mkDerivation {
       pname = "OSM";
       version = "0.6.4";
       sha256 = "1m606r0lc0hsniqn7krm2hpvhj7y6sq4qbjjj4g8n4hap6v4syr9";
       buildDepends = [ comonad-transformers data-lens hxt newtype ];
       homepage = "https://github.com/tonymorris/geo-osm";
       description = "Parse OpenStreetMap files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OTP" = callPackage
    ({ mkDerivation, Crypto, time }:
     mkDerivation {
       pname = "OTP";
       version = "0.0.0.1";
       sha256 = "0vcxyfk1vx30cfngq5cv3lc34x0sxsirykhbi4ygw5pvd9ylzadb";
       buildDepends = [ Crypto time ];
       testDepends = [ Crypto time ];
       homepage = "https://github.com/matshch/OTP";
       description = "HMAC-Based and Time-Based One-Time Passwords";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Object" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Object";
       version = "1.0";
       sha256 = "05lrqq4008vnfs2x8kxlyrgdvxmzk04rqvn0w65b691bp3vwnbf9";
       homepage = "https://github.com/yokto/object";
       description = "Object oriented programming for haskell using multiparameter typeclasses";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "ObjectIO" = callPackage
    ({ mkDerivation, comctl32, comdlg32, gdi32, kernel32, ole32
     , shell32, user32, winmm, winspool
     }:
     mkDerivation {
       pname = "ObjectIO";
       version = "1.0.1.1";
       sha256 = "1f8ac7dk1ls6xla3w0wy2qr164kv67k5ilj7niakfr9x74mpp6jy";
       extraLibraries = [
         comctl32 comdlg32 gdi32 kernel32 ole32 shell32 user32 winmm
         winspool
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ObjectName" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ObjectName";
       version = "1.0.1.0";
       sha256 = "1aw221i1cisk7jpgchs16f3br0ddllh0n0idhw5v6n6ysv4vv155";
       homepage = "https://github.com/haskell-opengl/ObjectName";
       description = "Explicitly handled object names";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Obsidian" = callPackage
    ({ mkDerivation, cuda, language-c-quote, mainland-pretty, mtl
     , mwc-random, rdtsc, text, value-supply, vector
     }:
     mkDerivation {
       pname = "Obsidian";
       version = "0.1.0.0";
       sha256 = "14dbaj54i4li4hbc2bhl19ma9vgs97mfz8xfwvlndldb2kac4x01";
       buildDepends = [
         cuda language-c-quote mainland-pretty mtl mwc-random rdtsc text
         value-supply vector
       ];
       homepage = "https://github.com/svenssonjoel/Obsidian";
       description = "Embedded language for GPU Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Octree" = callPackage
    ({ mkDerivation, AC-Vector, markdown-unlit, QuickCheck }:
     mkDerivation {
       pname = "Octree";
       version = "0.5.3";
       sha256 = "0wfzvy5r0m0v5f366q7rn9sdxl0r0xpqy6d2ig7si75wm2qaimx6";
       buildDepends = [ AC-Vector QuickCheck ];
       testDepends = [ AC-Vector markdown-unlit QuickCheck ];
       homepage = "https://github.com/mgajda/octree";
       description = "Simple unbalanced Octree for storing data about 3D points";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OddWord" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "OddWord";
       version = "1.0.0.2";
       sha256 = "1c4xbfkikyn1jh3qz0ycxzmx0zqfg5gliafb764942dvd851hljv";
       testDepends = [ QuickCheck ];
       homepage = "http://www.gekkou.co.uk/";
       description = "Provides a wrapper for deriving word types with fewer bits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Omega" = callPackage
    ({ mkDerivation, hsc2hs, HUnit }:
     mkDerivation {
       pname = "Omega";
       version = "1.0.3";
       sha256 = "05dax2r7rrdbsvxszxn13xcf24zq87xq8scxzvl2ccr2y29n0f5j";
       testDepends = [ hsc2hs HUnit ];
       description = "Integer sets and relations using Presburger arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OneTuple" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "OneTuple";
       version = "0.2.1";
       sha256 = "1x52b68zh3k9lnps5s87kzan7dzvqp6mrwgayjq15w9dv6v78vsb";
       description = "Singleton Tuple";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenAFP" = callPackage
    ({ mkDerivation, binary, hashable, hashtables, mtl, regex-compat }:
     mkDerivation {
       pname = "OpenAFP";
       version = "1.4.2";
       sha256 = "0x8yrxyfwgzgp7158nrk4y3wzpfm9bnww0nfbbi9hajiqfd8ymc0";
       buildDepends = [ binary hashable hashtables mtl regex-compat ];
       homepage = "https://github.com/audreyt/openafp/";
       description = "IBM AFP document format parser and generator";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "OpenAFP-Utils" = callPackage
    ({ mkDerivation, binary, filepath, hashable, line2pdf, OpenAFP
     , regex-base, regex-posix, text, text-locale-encoding, xhtml
     }:
     mkDerivation {
       pname = "OpenAFP-Utils";
       version = "1.4.1.3";
       sha256 = "160qlcjh0pgslql9f4zv2asw8kb9kl7wd6dk5958dv0n9p96pay0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary filepath hashable line2pdf OpenAFP regex-base regex-posix
         text text-locale-encoding xhtml
       ];
       description = "Assorted utilities to work with AFP data streams";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "OpenAL" = callPackage
    ({ mkDerivation, openal, OpenGL }:
     mkDerivation {
       pname = "OpenAL";
       version = "1.6.0.0";
       sha256 = "0bw20ykn8vi3g4im4nsrfz7p1qq9qwnx8da83zwdbr3wjm9934gd";
       buildDepends = [ OpenGL ];
       extraLibraries = [ openal ];
       homepage = "https://github.com/haskell-openal/ALUT";
       description = "A binding to the OpenAL cross-platform 3D audio API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenCL" = callPackage
    ({ mkDerivation, c2hs, mtl, OpenCL, QuickCheck }:
     mkDerivation {
       pname = "OpenCL";
       version = "1.0.3.4";
       sha256 = "04cqddhn4b5m0rj2f6i3gr62yhlfgffmkplb4599sd3qbgx0g27x";
       buildDepends = [ mtl ];
       testDepends = [ QuickCheck ];
       buildTools = [ c2hs ];
       extraLibraries = [ OpenCL ];
       homepage = "https://github.com/IFCA/opencl";
       description = "Haskell high-level wrapper for OpenCL";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) OpenCL; };

  "OpenCLRaw" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "OpenCLRaw";
       version = "1.0.1001";
       sha256 = "1a9nlrmxp3jwc3hbj79xm35aypfby04qy01fk4vyrp19diiinl07";
       buildDepends = [ mtl ];
       homepage = "http://vis.renci.org/jeff/opencl";
       description = "The OpenCL Standard for heterogenous data-parallel computing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenCLWrappers" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "OpenCLWrappers";
       version = "0.1.0.3";
       sha256 = "0xlm26jksp4jf1dhkpg4708r1ak5mjdc5x5fjp4fhizmzlk3348s";
       buildDepends = [ mtl ];
       homepage = "https://github.com/jkarlson/OpenCLWrappers";
       description = "The OpenCL Standard for heterogenous data-parallel computing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenGL" = callPackage
    ({ mkDerivation, GLURaw, libX11, mesa, OpenGLRaw, text }:
     mkDerivation {
       pname = "OpenGL";
       version = "2.9.2.0";
       sha256 = "1sa5jmhj0az6sik6swv2vgzhv9gj34dbq2px23ag1a4yrk5gcn0p";
       buildDepends = [ GLURaw OpenGLRaw text ];
       extraLibraries = [ libX11 mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenGLCheck" = callPackage
    ({ mkDerivation, checkers, OpenGL, QuickCheck }:
     mkDerivation {
       pname = "OpenGLCheck";
       version = "1.0";
       sha256 = "0zjgwd9h6jncvp7x4nn049878jagcajsc63ch5i1ynndnrr1cfar";
       buildDepends = [ checkers OpenGL QuickCheck ];
       description = "Quickcheck instances for various data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenGLRaw" = callPackage
    ({ mkDerivation, mesa }:
     mkDerivation {
       pname = "OpenGLRaw";
       version = "1.5.0.0";
       sha256 = "04lsidv82fl7yb2fnqpx7q0vgiwxbswh8g7dv9q9s9i2jwiaaal5";
       extraLibraries = [ mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenGLRaw21" = callPackage
    ({ mkDerivation, OpenGLRaw }:
     mkDerivation {
       pname = "OpenGLRaw21";
       version = "1.2.0.1";
       sha256 = "1v848qhjksiwc8617fif4dbvw40xfnz39fpkcsv52mkh66flnv9j";
       buildDepends = [ OpenGLRaw ];
       description = "The intersection of OpenGL 2.1 and OpenGL 3.1 Core";
       license = "unknown";
     }) {};

  "OpenSCAD" = callPackage
    ({ mkDerivation, Cabal, colour, filepath, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "OpenSCAD";
       version = "0.2.0.0";
       sha256 = "1gg5x50631piay35jifh70nq88av71ar896q9vci65isz9a51yvb";
       buildDepends = [ colour filepath ];
       testDepends = [
         Cabal colour filepath HUnit test-framework test-framework-hunit
       ];
       homepage = "https://graphics-openscad.googlecode.com/";
       description = "ADT wrapper and renderer for OpenSCAD models";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenVG" = callPackage
    ({ mkDerivation, GLUT, OpenGL, OpenGLRaw, OpenVGRaw }:
     mkDerivation {
       pname = "OpenVG";
       version = "0.7.0";
       sha256 = "0ad96lbwcwl7vvk5vx1mmb0wj28c541jwd9nsm7l5na9qdxfhzvj";
       buildDepends = [ GLUT OpenGL OpenGLRaw OpenVGRaw ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "OpenVG (ShivaVG-0.2.1) binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OpenVGRaw" = callPackage
    ({ mkDerivation, OpenGLRaw }:
     mkDerivation {
       pname = "OpenVGRaw";
       version = "0.4.0";
       sha256 = "1fdg5b8f2x36x6gmdkazkmhqgknagd0kzr70hydygsmqbf2im5x2";
       buildDepends = [ OpenGLRaw ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Raw binding to OpenVG (ShivaVG-0.2.1 implementation).";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Operads" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Operads";
       version = "1.0";
       sha256 = "1b880lrzdxww3j19zspnj49ifsn89n0ac1h5xf7nn83847k8q2qk";
       buildDepends = [ mtl ];
       homepage = "http://math.stanford.edu/~mik/operads";
       description = "Groebner basis computation for Operads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OptDir" = callPackage
    ({ mkDerivation, hashable, syb }:
     mkDerivation {
       pname = "OptDir";
       version = "0.0.3";
       sha256 = "1bb5s57d3wyr9rd275jl0sk85yisl1dpbz042yg7pksv5l0xal0q";
       buildDepends = [ hashable syb ];
       description = "The OptDir type for representing optimization directions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "OrPatterns" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, mtl, split
     , syb
     }:
     mkDerivation {
       pname = "OrPatterns";
       version = "0.1";
       sha256 = "0fkg2bnk7gh8lzf8i0bffj6qbbpq15sf8yw88rqpzghsz7xrr111";
       buildDepends = [ haskell-src-exts haskell-src-meta mtl split syb ];
       description = "A quasiquoter for or-patterns";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ordinals" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Ordinals";
       version = "0.0.0.2";
       sha256 = "04xk74rl2d6vp1kn197hsbkkwdvwvqpjqg3kgkpkl2i0r90y8lsi";
       homepage = "http://patch-tag.com/r/kyagrd/Ordinals/";
       description = "Ordinal arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PArrows" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "PArrows";
       version = "0.1.1";
       sha256 = "08mkq72zv9ywp002vwjk7gl6pq6915zdd06sp4ap935aqdjrhn0p";
       buildDepends = [ mtl ];
       homepage = "http://www.cs.helsinki.fi/u/ekarttun/PArrows/";
       description = "Arrow parser combinators similar to Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PBKDF2" = callPackage
    ({ mkDerivation, binary, Crypto, random }:
     mkDerivation {
       pname = "PBKDF2";
       version = "0.3.1.5";
       sha256 = "0ljacj31pmcwk4lk24p37761sb60ncwjnjbqhnfrgdjqnyj2bd62";
       buildDepends = [ binary Crypto random ];
       description = "Make password-based security schemes more secure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PCLT" = callPackage
    ({ mkDerivation, mtl, utf8-string }:
     mkDerivation {
       pname = "PCLT";
       version = "0.1";
       sha256 = "0k5abpdz066dsszkj39fd03slb279ddj4i8clnq4gafpa90xbg9q";
       buildDepends = [ mtl utf8-string ];
       homepage = "http://github.com/Andrey-Sisoyev/PCLT";
       description = "Extension to Show: templating, catalogizing, languages, parameters, etc";
       license = "LGPL";
     }) {};

  "PCLT-DB" = callPackage
    ({ mkDerivation, convertible, HDBC, HDBC-postgresql, mtl, PCLT }:
     mkDerivation {
       pname = "PCLT-DB";
       version = "0.1.1";
       sha256 = "0nb5mijpkbllrs9034d3a24drd95lvrhlx60ahcd73kmagh9rfqf";
       buildDepends = [ convertible HDBC HDBC-postgresql mtl PCLT ];
       homepage = "http://github.com/Andrey-Sisoyev/PCLT-DB";
       description = "An addon to PCLT package: enchance PCLT catalog with PostgreSQL powers";
       license = "LGPL";
     }) {};

  "PDBtools" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "PDBtools";
       version = "0.0.3";
       sha256 = "1i5hixmywy63pnh15zl7npfiwc7dvlnz6izjxg08cnvn8jyi026q";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.github.com/rotskoff";
       description = "A library for analysis of 3-D protein coordinates";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "PSQueue" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "PSQueue";
       version = "1.1";
       sha256 = "1k291bh8j5vpcrn6vycww2blwg7jxx9yrfmrqdanz48gs4d8gq58";
       description = "Priority Search Queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PTQ" = callPackage
    ({ mkDerivation, mtl, network, xml }:
     mkDerivation {
       pname = "PTQ";
       version = "0.0.6";
       sha256 = "0vqvlk3qznhlk1ib04rnshrqd26r11jqv1dn0m6jzf04sjxqzrji";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl network xml ];
       homepage = "http://www.tom.sfc.keio.ac.jp/~sakai/hiki/?hsPTQ";
       description = "An implementation of Montague's PTQ";
       license = "LGPL";
     }) {};

  "PageIO" = callPackage
    ({ mkDerivation, attoparsec, base64-string, iconv, network
     , regex-base, regex-compat, regex-tdfa, sqlite, stringtable-atom
     , utf8-string, uuid
     }:
     mkDerivation {
       pname = "PageIO";
       version = "0.0.3";
       sha256 = "0pnnhwmlhjvpb3g94p2asbhy9arvlvcbch11m0hmy7w9m3zj9wjk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec base64-string iconv network regex-base regex-compat
         regex-tdfa sqlite stringtable-atom utf8-string uuid
       ];
       description = "Page-oriented extraction and composition library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Paillier" = callPackage
    ({ mkDerivation, crypto-numbers, crypto-random, HUnit, QuickCheck
     , test-framework, test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "Paillier";
       version = "0.1.0.3";
       sha256 = "0jcb72shia5p0lpnr3qz57jlzjvnwh4642zwys5d3rg0rwnxigz2";
       buildDepends = [ crypto-numbers crypto-random ];
       testDepends = [
         crypto-numbers crypto-random HUnit QuickCheck test-framework
         test-framework-quickcheck2 test-framework-th
       ];
       description = "a simple Paillier cryptosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PandocAgda" = callPackage
    ({ mkDerivation, Agda, filepath, mtl, pandoc, pandoc-types
     , QuickCheck, text, time, xhtml
     }:
     mkDerivation {
       pname = "PandocAgda";
       version = "2.3.3.0.2";
       sha256 = "1g39mxrfii8vm40cbb7vdfrx2rx9gm4s1xhp3zjkiyi7f979cbk0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Agda filepath mtl pandoc pandoc-types QuickCheck text time xhtml
       ];
       description = "Pandoc support for literate Agda";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Paraiso" = callPackage
    ({ mkDerivation, control-monad-failure, fgl, filepath, HUnit
     , ListLike, listlike-instances, mtl, numeric-prelude, QuickCheck
     , random, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, typelevel-tensor, vector
     }:
     mkDerivation {
       pname = "Paraiso";
       version = "0.3.1.3";
       sha256 = "177sinj5il7azsajf9fl65lml7pq792lnvwb07vln5my250ibwi9";
       buildDepends = [
         control-monad-failure fgl filepath mtl numeric-prelude random text
         typelevel-tensor vector
       ];
       testDepends = [
         control-monad-failure fgl filepath HUnit ListLike
         listlike-instances mtl numeric-prelude QuickCheck random
         test-framework test-framework-hunit test-framework-quickcheck2 text
         typelevel-tensor vector
       ];
       homepage = "http://www.paraiso-lang.org/wiki/index.php/Main_Page";
       description = "a code generator for partial differential equations solvers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Parry" = callPackage
    ({ mkDerivation, binary, network, random, RSA, SafeSemaphore, time
     }:
     mkDerivation {
       pname = "Parry";
       version = "0.1.0.0";
       sha256 = "0jy0pya7ahy0nzw1yizi1ll7q5kv4jxgn3n56qgcwv25rh374n4s";
       buildDepends = [ binary network random RSA SafeSemaphore time ];
       homepage = "http://parry.lif.univ-mrs.fr";
       description = "A proven synchronization server for high performance computing";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "ParsecTools" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "ParsecTools";
       version = "0.0.2.0";
       sha256 = "11vshnbxfl8p38aix4h2b0vms8j58agwxbmhd9pkxai764sl6j7g";
       buildDepends = [ parsec ];
       description = "Parsec combinators for more complex objects";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "ParserFunction" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "ParserFunction";
       version = "0.1.0";
       sha256 = "0l0j1mdycqsb5d32l7h0giwrj5yj54523gdn0bvim2vz67qrbxrq";
       buildDepends = [ parsec ];
       description = "Parse and evaluate mathematical expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PartialTypeSignatures" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "PartialTypeSignatures";
       version = "0.1.0.1";
       sha256 = "04c01bcfrb79av2j9bivlwanmycasn7gjnc9gb5jm6gkwyvgv0h3";
       buildDepends = [ syb ];
       homepage = "http://code.haskell.org/~aavogt/PartialTypeSignatures";
       description = "emulate partial type signatures with template haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PasswordGenerator" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "PasswordGenerator";
       version = "0.1.0.0";
       sha256 = "12lxylmpi2f1ahy6w1n7jmwn9kay4hajgr95xbnqqdzv4dw6whzw";
       buildDepends = [ QuickCheck ];
       homepage = "https://github.com/VictorDenisov/PasswordGenerator";
       description = "Simple library for generating passwords";
       license = stdenv.lib.licenses.mit;
     }) {};

  "PastePipe" = callPackage
    ({ mkDerivation, cmdargs, HTTP, network, network-uri }:
     mkDerivation {
       pname = "PastePipe";
       version = "1.7";
       sha256 = "0had11n44y7zjhhymdbvahwmxcxxrbxy7c9jxijhw3n7xqhdmva0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs HTTP network network-uri ];
       homepage = "http://github.com/Fuuzetsu/pastepipe";
       description = "CLI for pasting to lpaste.net";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Pathfinder" = callPackage
    ({ mkDerivation, libxml2, text }:
     mkDerivation {
       pname = "Pathfinder";
       version = "0.5.10";
       sha256 = "1k38p73jnkfcmmz94iqpzg2g6apsxflidvy8p9lwqyzfmg70brqf";
       buildDepends = [ text ];
       extraLibraries = [ libxml2 ];
       description = "Relational optimiser and code generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Peano" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Peano";
       version = "0.0.4";
       sha256 = "0ss4p40gkqcw9bdh5iy0yar56gpsanrxld74q5dxvakrf8m6cqmz";
       description = "simple Peano numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PeanoWitnesses" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "PeanoWitnesses";
       version = "0.1.0.0";
       sha256 = "1g83jws23grl84gnq89rnppw6q7vsbhi9hk6lp5dq2n4818kamgg";
       description = "GADT type witnesses for Peano-style natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PerfectHash" = callPackage
    ({ mkDerivation, binary, cmph, digest, time }:
     mkDerivation {
       pname = "PerfectHash";
       version = "0.1.3";
       sha256 = "11bs99iprcikcjz7psirmvlhlvhkwghfrb1yz662gk9kq6mhdyq6";
       buildDepends = [ binary digest time ];
       extraLibraries = [ cmph ];
       description = "A perfect hashing library for mapping bytestrings to values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PermuteEffects" = callPackage
    ({ mkDerivation, ReplicateEffects }:
     mkDerivation {
       pname = "PermuteEffects";
       version = "0.2";
       sha256 = "0lmmsvqbnw0k321254xfqlzmddvymy0mj50ax7caqj2fnarfgy4l";
       buildDepends = [ ReplicateEffects ];
       homepage = "https://github.com/MedeaMelana/PermuteEffects";
       description = "Permutations of effectful computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Pipe" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "Pipe";
       version = "2.1.2";
       sha256 = "1453rjp5whl9vywiq8i86vjfa8ys1ppwabhvlibqwsbx804q9yhr";
       buildDepends = [ filepath ];
       homepage = "http://iki.fi/matti.niemenmaa/pipe/";
       description = "Process piping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Piso" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Piso";
       version = "0.1";
       sha256 = "123hwav5bsadd2lmzgys4dwja1xrbn1c5w19063ak21y5415ci83";
       homepage = "https://github.com/MedeaMelana/Piso";
       description = "Partial isomorphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PlayHangmanGame" = callPackage
    ({ mkDerivation, mtl, random, regex-compat }:
     mkDerivation {
       pname = "PlayHangmanGame";
       version = "0.2";
       sha256 = "17avnaz6da80v5kgz0b3v0zq3y9p2d3mxxv5a09ggcmilbz4xwlg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl random regex-compat ];
       homepage = "freizl.github.com";
       description = "Play Hangman Game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PlayingCards" = callPackage
    ({ mkDerivation, HUnit, MonadRandom, QuickCheck, random-shuffle }:
     mkDerivation {
       pname = "PlayingCards";
       version = "0.3.0.0";
       sha256 = "1wq4y6dfn93c8pyxbz5dwbd1c2lq78fbw6s2pdk6nvi0zgf5hp6k";
       buildDepends = [ HUnit MonadRandom QuickCheck random-shuffle ];
       description = "Playing cards api";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Plot-ho-matic" = callPackage
    ({ mkDerivation, Chart, Chart-cairo, data-default-class, glib, gtk
     , lens, linear, stm, text, time
     }:
     mkDerivation {
       pname = "Plot-ho-matic";
       version = "0.4.0.4";
       sha256 = "1d6nrhk2wyyii6wwwk1mlxa46sdd6xjghyp3cn6qh1i6dwq7i604";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Chart Chart-cairo data-default-class glib gtk lens linear stm text
         time
       ];
       description = "Real-time line plotter for protobuf-like data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PlslTools" = callPackage
    ({ mkDerivation, filepath, parsec, random }:
     mkDerivation {
       pname = "PlslTools";
       version = "0.0.2";
       sha256 = "1kly1jfki4n9fhgkh2m9j9xj8182s92i7rsq81vcm6i3hd4fac94";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath parsec random ];
       homepage = "LLayland.wordpress.com";
       description = "So far just a lint like program for PL/SQL. Diff and refactoring tools are planned";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Plural" = callPackage
    ({ mkDerivation, regex-tdfa }:
     mkDerivation {
       pname = "Plural";
       version = "0.0.2";
       sha256 = "047aw1pka7xsqnshbmirkxd80m92w96xfb0kpi1a22bx0kpgg58w";
       buildDepends = [ regex-tdfa ];
       description = "Pluralize English words";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Pollutocracy" = callPackage
    ({ mkDerivation, clock, GLUT, random }:
     mkDerivation {
       pname = "Pollutocracy";
       version = "1.0";
       sha256 = "036b114f6fas2w3kmbcb1ria2ymdgi1sc5iqkskfgbc1iizhm2wh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ clock GLUT random ];
       description = "An imaginary world";
       license = "GPL";
     }) {};

  "PortFusion" = callPackage
    ({ mkDerivation, network, splice }:
     mkDerivation {
       pname = "PortFusion";
       version = "1.2.1";
       sha256 = "1n095a7ggkgvxdagn7wi1rnb3h766lah5avyrdxnv4g0kl143vvy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network splice ];
       homepage = "http://fusion.corsis.eu";
       description = "high-performance distributed reverse / forward proxy & tunneling for TCP";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "PortMidi" = callPackage
    ({ mkDerivation, alsaLib }:
     mkDerivation {
       pname = "PortMidi";
       version = "0.1.3";
       sha256 = "1sjs73jpdsb610l6b8i7pr019ijddz7zqv56f4yy843ix848yqzp";
       extraLibraries = [ alsaLib ];
       homepage = "http://haskell.org/haskellwiki/PortMidi";
       description = "A binding for PortMedia/PortMidi";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PostgreSQL" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "PostgreSQL";
       version = "0.2";
       sha256 = "0p5q3yc8ymgzzlc600h4mb9w86ncrgjdbpqfi49b2jqvkcx5bwrr";
       buildDepends = [ mtl ];
       description = "Thin wrapper over the C postgresql library";
       license = "unknown";
     }) {};

  "PrimitiveArray" = callPackage
    ({ mkDerivation, deepseq, primitive, QuickCheck, repa, vector
     , vector-th-unbox
     }:
     mkDerivation {
       pname = "PrimitiveArray";
       version = "0.5.4.0";
       sha256 = "1m97c7zc8x6ml9ng120r4kzl7g73cz4c3qk41j1zihlrrfrcxrvq";
       buildDepends = [
         deepseq primitive QuickCheck repa vector vector-th-unbox
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Efficient multidimensional arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Printf-TH" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Printf-TH";
       version = "0.1.1";
       sha256 = "0n1gva510p69vy25zvjkzwqqz2gilbns1wnrzz2p22rjkkbrinvx";
       license = "LGPL";
     }) {};

  "PriorityChansConverger" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "PriorityChansConverger";
       version = "0.1";
       sha256 = "0258ysarn6k5kxxwy4lz9ww2rdhg5mg7h6idfbfrszcgwkcp22a1";
       buildDepends = [ stm ];
       description = "Read single output from an array of inputs - channels with priorities";
       license = "LGPL";
     }) {};

  "ProbabilityMonads" = callPackage
    ({ mkDerivation, MaybeT, MonadRandom, mtl }:
     mkDerivation {
       pname = "ProbabilityMonads";
       version = "0.1.0";
       sha256 = "0vmjg91yq4p0121ypjx4l1hh77j8xj6ha7awdvrjk5fjmz9xryh3";
       buildDepends = [ MaybeT MonadRandom mtl ];
       description = "Probability distribution monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "PropLogic" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "PropLogic";
       version = "0.9.0.4";
       sha256 = "1gr3xiwj5ggqlrvi2xi612sba0v7lwc3bz0w18knhh0gz60vslqy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://www.bucephalus.org/PropLogic";
       description = "Propositional Logic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Proper" = callPackage
    ({ mkDerivation, HUnit, parsec, syb }:
     mkDerivation {
       pname = "Proper";
       version = "0.5.2.0";
       sha256 = "0y8jrvhnvb3nr8zi4hw8cm90nnz4lmcp3npvzsbz2wlkif5qf7k6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit parsec syb ];
       homepage = "https://github.com/dillonhuff/Proper";
       description = "An implementation of propositional logic in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ProxN" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "ProxN";
       version = "0.0.1";
       sha256 = "0mx3kgkcbhppz2p6g8vb9yx27219ca2w7k36j60vfhszni1c4gid";
       buildDepends = [ mtl ];
       homepage = "https://github.com/exFalso/ProxN";
       description = "Proximity sets in N dimensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Pugs" = callPackage
    ({ mkDerivation, binary, control-timeout, filepath, FindBin
     , haskeline, HsParrot, HsSyck, MetaObject, mtl, network, parsec
     , pugs-compat, pugs-DrIFT, random, stm, stringtable-atom, time
     , utf8-string
     }:
     mkDerivation {
       pname = "Pugs";
       version = "6.2.13.20130611";
       sha256 = "13advi8qykjslpg6kqilzdabz5076z6d69b66sf1ikyhjpc1j55i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary control-timeout filepath FindBin haskeline HsParrot HsSyck
         MetaObject mtl network parsec pugs-compat pugs-DrIFT random stm
         stringtable-atom time utf8-string
       ];
       homepage = "http://pugscode.org/";
       description = "A Perl 6 Implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Pup-Events" = callPackage
    ({ mkDerivation, Pup-Events-Client, Pup-Events-PQueue
     , Pup-Events-Server
     }:
     mkDerivation {
       pname = "Pup-Events";
       version = "1.0";
       sha256 = "13zjhxq8q1qd7sbc17d73g6mfsfls6rl3ndawbcfjgj73b7xajyj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Pup-Events-Client Pup-Events-PQueue Pup-Events-Server
       ];
       description = "A networked event handling framework for hooking into other programs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Pup-Events-Client" = callPackage
    ({ mkDerivation, network, parsec, Pup-Events-PQueue, stm
     , transformers
     }:
     mkDerivation {
       pname = "Pup-Events-Client";
       version = "1.1.4";
       sha256 = "1b6vkjnk1yk7ra221njh1mm92jgzqh2hjbh67p2h4fz2jf202xvm";
       buildDepends = [
         network parsec Pup-Events-PQueue stm transformers
       ];
       description = "A networked event handling framework for hooking into other programs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Pup-Events-Demo" = callPackage
    ({ mkDerivation, GLUT, OpenGL, parsec, Pup-Events-Client
     , Pup-Events-PQueue, Pup-Events-Server, stm
     }:
     mkDerivation {
       pname = "Pup-Events-Demo";
       version = "1.3";
       sha256 = "06cf18ccamaknkm2fcmj17ymdb2i3130q5bakbji4m8349bzhxxb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         GLUT OpenGL parsec Pup-Events-Client Pup-Events-PQueue
         Pup-Events-Server stm
       ];
       description = "A networked event handling framework for hooking into other programs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Pup-Events-PQueue" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "Pup-Events-PQueue";
       version = "1.0";
       sha256 = "0sngiqxzj5kif452s2hn3x1kv257815c5v19dp4wqazbyc373iwx";
       buildDepends = [ stm ];
       description = "A networked event handling framework for hooking into other programs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Pup-Events-Server" = callPackage
    ({ mkDerivation, network, parsec, Pup-Events-PQueue, stm
     , transformers
     }:
     mkDerivation {
       pname = "Pup-Events-Server";
       version = "1.2";
       sha256 = "18n4bzhwvx336dv4yb5pbicaxbzzhhd36951diwhgw4gf5ji80dn";
       buildDepends = [
         network parsec Pup-Events-PQueue stm transformers
       ];
       description = "A networked event handling framework for hooking into other programs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "QIO" = callPackage
    ({ mkDerivation, mtl, random }:
     mkDerivation {
       pname = "QIO";
       version = "1.2";
       sha256 = "1wm0n5r5nfgbd35ry4fn25bzfj83gn3xbrd14clpw4wqqq45rhx6";
       buildDepends = [ mtl random ];
       homepage = "http://www.cs.nott.ac.uk/~asg/QIO/";
       description = "The Quantum IO Monad is a library for defining quantum computations in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "QuadEdge" = callPackage
    ({ mkDerivation, random, vector }:
     mkDerivation {
       pname = "QuadEdge";
       version = "0.2";
       sha256 = "1f3wxc8ipb8ka02xq2snjs5wgl10mk528zjkpwdw5wf3fldhz037";
       buildDepends = [ random vector ];
       description = "QuadEdge structure for representing triangulations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "QuadTree" = callPackage
    ({ mkDerivation, composition, lens }:
     mkDerivation {
       pname = "QuadTree";
       version = "0.10.1";
       sha256 = "0r4qv6xw03g79sn1889vv1rzpkcpjm9lmipvxdl0l1d8r8kvxdxw";
       buildDepends = [ composition lens ];
       description = "QuadTree library for Haskell, with lens support";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "QuasiText" = callPackage
    ({ mkDerivation, attoparsec, haskell-src-meta, text }:
     mkDerivation {
       pname = "QuasiText";
       version = "0.1.2.5";
       sha256 = "10y2lirprxyh9m47qxq0plihc22xvmkhq6lfbx3i19vfvkbhnbwx";
       buildDepends = [ attoparsec haskell-src-meta text ];
       homepage = "https://github.com/mikeplus64/QuasiText";
       description = "A QuasiQuoter for Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "QuickAnnotate" = callPackage
    ({ mkDerivation, haskell-src-exts }:
     mkDerivation {
       pname = "QuickAnnotate";
       version = "0.6";
       sha256 = "0xphlira6gxfs7md1b55vf9biqzw9v1kzmcs17x07xnzcy1y3dvb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskell-src-exts ];
       homepage = "http://code.haskell.org/QuickAnnotate/";
       description = "Annotation Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "QuickCheck" = callPackage
    ({ mkDerivation, random, test-framework, tf-random, transformers }:
     mkDerivation {
       pname = "QuickCheck";
       version = "2.7.6";
       sha256 = "09y5l0062l9i5jp9v6811kvkk4zpy0mizwaw44abgz0x1h59gn40";
       buildDepends = [ random tf-random transformers ];
       testDepends = [ test-framework ];
       homepage = "https://github.com/nick8325/quickcheck";
       description = "Automatic testing of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "QuickCheck-GenT" = callPackage
    ({ mkDerivation, mtl, QuickCheck, random }:
     mkDerivation {
       pname = "QuickCheck-GenT";
       version = "0.1.3";
       sha256 = "16zxmq0y8ayq9dgmgyfdm3fnjjhv452cymfam1zjmaabrayllkpp";
       buildDepends = [ mtl QuickCheck random ];
       homepage = "https://github.com/nikita-volkov/QuickCheck-GenT";
       description = "A GenT monad transformer for QuickCheck library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Quickson" = callPackage
    ({ mkDerivation, aeson, attoparsec, either, text }:
     mkDerivation {
       pname = "Quickson";
       version = "0.1.1";
       sha256 = "0v2h8446gb86z2yvhqrhbkyj8yj0s9d33gbig6752lfjn31zxrcy";
       buildDepends = [ aeson attoparsec either text ];
       homepage = "https://github.com/ssadler/quickson";
       description = "Quick JSON extractions with Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "RANSAC" = callPackage
    ({ mkDerivation, HUnit, lens, linear, random, test-framework
     , test-framework-hunit, vector
     }:
     mkDerivation {
       pname = "RANSAC";
       version = "0.1.0.1";
       sha256 = "1frn3y0j4w337mfaakqw58d7p9pqhbi2fzk8blv6zilzvqmhbqqv";
       buildDepends = [ random vector ];
       testDepends = [
         HUnit lens linear test-framework test-framework-hunit vector
       ];
       description = "The RANSAC algorithm for parameter estimation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "RBTree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "RBTree";
       version = "0.0.5";
       sha256 = "0p46b105lixbxqjz8pwxf4asl4s7zdh2ss3nvgmp1rclqfg6cwrq";
       homepage = "git://github.com/wuxb45/Haskell-RBTree.git";
       description = "Pure haskell Red-Black-Tree implemetation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "RESTng" = callPackage
    ({ mkDerivation, HDBC, HDBC-postgresql, mtl, parsec, redHandlers
     , xhtml, yuiGrid
     }:
     mkDerivation {
       pname = "RESTng";
       version = "0.1";
       sha256 = "1fans0znb3i33n9cxd8w140n1sl8bdyl874cdrgc5wvlg6y3y4aj";
       buildDepends = [
         HDBC HDBC-postgresql mtl parsec redHandlers xhtml yuiGrid
       ];
       description = "A framework for writing RESTful applications";
       license = "unknown";
     }) {};

  "RFC1751" = callPackage
    ({ mkDerivation, binary, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "RFC1751";
       version = "0.3.0.0";
       sha256 = "1gd2ksna9gdq71a0sqlxvy5mmz1n7gk7nxfhh87plx51a4q97c6b";
       buildDepends = [ binary ];
       testDepends = [
         binary HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/xenog/RFC1751";
       description = "RFC-1751 library for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "RJson" = callPackage
    ({ mkDerivation, iconv, mtl, parsec, syb-with-class }:
     mkDerivation {
       pname = "RJson";
       version = "0.3.7";
       sha256 = "04vlhcyikd4liy65xiy3xn4slkm5w4q3r8ir54s095zs9bq8jx1n";
       buildDepends = [ iconv mtl parsec syb-with-class ];
       description = "A reflective JSON serializer/parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "RMP" = callPackage
    ({ mkDerivation, allocated-processor, canlib, cv-combinators
     , ftd2xx, HOpenCV, vector-space
     }:
     mkDerivation {
       pname = "RMP";
       version = "0.0.2";
       sha256 = "0bcilw8z764p6idjj19kxk9if5l4pxyn7zszxjv0q3bfky1rd8ay";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         allocated-processor cv-combinators HOpenCV vector-space
       ];
       extraLibraries = [ canlib ftd2xx ];
       description = "Binding to code that controls a Segway RMP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "RNAFold" = callPackage
    ({ mkDerivation, ADPfusion, BiobaseTurner, BiobaseVienna
     , BiobaseXNA, cmdargs, deepseq, lens, primitive, PrimitiveArray
     , repa, strict, vector
     }:
     mkDerivation {
       pname = "RNAFold";
       version = "1.99.3.4";
       sha256 = "0r4y4rinrdr2xwfpnys5agm1awr3qr9im4cqczz1fzjz7r425m96";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ADPfusion BiobaseTurner BiobaseVienna BiobaseXNA cmdargs deepseq
         lens primitive PrimitiveArray repa strict vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/adpfusion";
       description = "RNA secondary structure prediction";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "RNAFoldProgs" = callPackage
    ({ mkDerivation, Biobase, BiobaseTurner, BiobaseTypes
     , BiobaseVienna, cmdargs, HsTools, primitive, PrimitiveArray
     , RNAFold, split, vector
     }:
     mkDerivation {
       pname = "RNAFoldProgs";
       version = "0.0.0.3";
       sha256 = "1bmybm80fhw7xqjzny2iricicbzqsl33snpsjamfcr16a939wlwp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Biobase BiobaseTurner BiobaseTypes BiobaseVienna cmdargs HsTools
         primitive PrimitiveArray RNAFold split vector
       ];
       description = "RNA secondary structure folding";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "RNAdesign" = callPackage
    ({ mkDerivation, BiobaseTurner, BiobaseVienna, BiobaseXNA, cmdargs
     , fgl, fgl-extras-decompositions, file-embed, lens, monad-primitive
     , mwc-random-monad, parallel, parsec, ParsecTools, primitive
     , PrimitiveArray, random, RNAFold, transformers, tuple, vector
     , ViennaRNA-bindings
     }:
     mkDerivation {
       pname = "RNAdesign";
       version = "0.1.2.2";
       sha256 = "1qdfbwiydkh0974m7r4ashxhsbkss8k9d6kpc07vj4hspjf5v5ag";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         BiobaseTurner BiobaseVienna BiobaseXNA cmdargs fgl
         fgl-extras-decompositions file-embed lens monad-primitive
         mwc-random-monad parallel parsec ParsecTools primitive
         PrimitiveArray random RNAFold transformers tuple vector
         ViennaRNA-bindings
       ];
       description = "Multi-target RNA sequence design";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "RNAdraw" = callPackage
    ({ mkDerivation, BiobaseXNA, cmdargs, PrimitiveArray, QuasiText
     , repa, split, text, vector
     }:
     mkDerivation {
       pname = "RNAdraw";
       version = "0.2.0.1";
       sha256 = "1d85lps04b2sn23fzyn5hd8lj2lf7byqk7flj8p2b905hl3062dx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         BiobaseXNA cmdargs PrimitiveArray QuasiText repa split text vector
       ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Draw RNA secondary structures";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "RNAwolf" = callPackage
    ({ mkDerivation, BiobaseTrainingData, BiobaseXNA, cmdargs, deepseq
     , parallel, PrimitiveArray, random, split, StatisticalMethods
     , vector
     }:
     mkDerivation {
       pname = "RNAwolf";
       version = "0.4.0.0";
       sha256 = "1s7ilg8814gglg4n64nk94b51fdzh2fm1y4k1mw8d81qd66y60vn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         BiobaseTrainingData BiobaseXNA cmdargs deepseq parallel
         PrimitiveArray random split StatisticalMethods vector
       ];
       homepage = "http://www.tbi.univie.ac.at/software/rnawolf/";
       description = "RNA folding with non-canonical basepairs and base-triplets";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "RSA" = callPackage
    ({ mkDerivation, binary, crypto-api, crypto-pubkey-types, DRBG
     , pureMD5, QuickCheck, SHA, tagged, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "RSA";
       version = "2.1.0";
       sha256 = "0bhnnz7vp1942ac2vg0y6vsag9bm0pslnm4ix6lmw28hy6d1jk2a";
       buildDepends = [
         binary crypto-api crypto-pubkey-types pureMD5 SHA
       ];
       testDepends = [
         binary crypto-api crypto-pubkey-types DRBG pureMD5 QuickCheck SHA
         tagged test-framework test-framework-quickcheck2
       ];
       description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Raincat" = callPackage
    ({ mkDerivation, extensible-exceptions, GLUT, mtl, OpenGL, random
     , SDL, SDL-image, SDL-mixer, time
     }:
     mkDerivation {
       pname = "Raincat";
       version = "1.1.1.3";
       sha256 = "1aalh68h6799mv4vyg30zpskl5jkn6x2j1jza7p4lrflyifxzar8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions GLUT mtl OpenGL random SDL SDL-image
         SDL-mixer time
       ];
       homepage = "http://raincat.bysusanlin.com/";
       description = "A puzzle game written in Haskell with a cat in lead role";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Random123" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Random123";
       version = "0.1.2";
       sha256 = "1y58rj2c80fv1qv9v0dcrfp8n6n03njr5fkkm4wdb18rp92dydxi";
       buildDepends = [ random ];
       testDepends = [
         HUnit QuickCheck random test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/Manticore/haskell-random123";
       description = "Haskell port of Random123 library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "RandomDotOrg" = callPackage
    ({ mkDerivation, HTTP-Simple, network }:
     mkDerivation {
       pname = "RandomDotOrg";
       version = "0.2.1";
       sha256 = "0rfarn424wsvvwvi7b1qzvzc63dxfqmlyrfd0hdcvmgkq5h2iy4c";
       buildDepends = [ HTTP-Simple network ];
       description = "Interface to random.org";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "Randometer" = callPackage
    ({ mkDerivation, random-fu }:
     mkDerivation {
       pname = "Randometer";
       version = "0.1.0.1";
       sha256 = "1anj962cpgl06hipjfdygxlvq6adkdg3r0ghkwkzzf3dklmwzng6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random-fu ];
       homepage = "http://github.com/Soares/Randometer.hs";
       description = "Randomness intuition trainer";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Range" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Range";
       version = "0.1.0.0";
       sha256 = "0759508s75zba89jjr56sqpm7idgwsxynmf9zl9hwrz9q11fxrqh";
       description = "Data structure for managing ranges";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ranged-sets" = callPackage
    ({ mkDerivation, HUnit, QuickCheck }:
     mkDerivation {
       pname = "Ranged-sets";
       version = "0.3.0";
       sha256 = "1am0lsd3yiyn7ayk9k4ff7zdj67m0pxjl10cxi5f9hgjj4y9380l";
       buildDepends = [ HUnit QuickCheck ];
       homepage = "http://code.haskell.org/ranged-sets";
       description = "Ranged sets for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Ranka" = callPackage
    ({ mkDerivation, HTTP, json, network, utf8-string, XMPP }:
     mkDerivation {
       pname = "Ranka";
       version = "0.1";
       sha256 = "1df010121jdjbagc3gg906kydmwwpa7np1c0mx7w2v64mr7i2q1r";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP json network utf8-string XMPP ];
       homepage = "http://kagami.touhou.ru/projects/show/ranka";
       description = "HTTP to XMPP omegle chats gate";
       license = "GPL";
     }) {};

  "Rasenschach" = callPackage
    ({ mkDerivation, convertible, filepath, monad-loops, SDL, SDL-gfx
     , SDL-image, SDL-mixer, SDL-ttf, time, Yampa
     }:
     mkDerivation {
       pname = "Rasenschach";
       version = "0.1.2";
       sha256 = "1axjmid2kdyg9jzc9k8x1jyzlkxa1iws8608pyrgix8vswxxxr0w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         convertible filepath monad-loops SDL SDL-gfx SDL-image SDL-mixer
         SDL-ttf time Yampa
       ];
       homepage = "http://hub.darcs.net/martingw/Rasenschach";
       description = "Soccer simulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Rasterific" = callPackage
    ({ mkDerivation, binary, criterion, deepseq, dlist, filepath
     , FontyFruity, free, JuicyPixels, mtl, primitive, QuickCheck
     , statistics, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "Rasterific";
       version = "0.4";
       sha256 = "1cw8lalxp9cs3w3kfr4ayp5h0kd71fdnyih99xpljy8zxw28hv3z";
       buildDepends = [
         dlist FontyFruity free JuicyPixels mtl primitive vector
         vector-algorithms
       ];
       testDepends = [
         binary criterion deepseq filepath FontyFruity JuicyPixels
         QuickCheck statistics vector
       ];
       description = "A pure haskell drawing engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ReadArgs" = callPackage
    ({ mkDerivation, hspec, system-filepath, text }:
     mkDerivation {
       pname = "ReadArgs";
       version = "1.2.2";
       sha256 = "1v6yr5zzrrj31prfzxxh1n27sfnkqpkw34v3a47rcnm444ba58a7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ system-filepath text ];
       testDepends = [ hspec system-filepath text ];
       homepage = "http://github.com/rampion/ReadArgs";
       description = "Simple command line argument parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Redmine" = callPackage
    ({ mkDerivation, aeson, connection, HTTP, http-client-tls
     , http-conduit, HUnit, MissingH, network, resourcet, text, time
     , transformers
     }:
     mkDerivation {
       pname = "Redmine";
       version = "0.0.1";
       sha256 = "0ifs2gca5sgmaqrby3fc410n5k357102c8jh3fh77rhdc3m8l8bd";
       buildDepends = [
         aeson connection HTTP http-client-tls http-conduit MissingH network
         resourcet text time transformers
       ];
       testDepends = [
         aeson connection http-client-tls http-conduit HUnit MissingH
         network resourcet text time transformers
       ];
       homepage = "https://github.com/lookunder/RedmineHs";
       description = "Library to access Redmine's REST services";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Ref" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Ref";
       version = "0.1.1.0";
       sha256 = "15qikbjbydbabc26skhavshzrsaz17a71q8hfxqvi5ix2bhhz4hm";
       homepage = "https://bitbucket.org/carter/ref";
       description = "Generic Mutable Ref Abstraction Layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "RefSerialize" = callPackage
    ({ mkDerivation, binary, hashtables, stringsearch }:
     mkDerivation {
       pname = "RefSerialize";
       version = "0.3.1.3";
       sha256 = "0qrca0jismpvjy7i4xx19ljrj72gqcmwqg47a51ykncsvci0fjrm";
       buildDepends = [ binary hashtables stringsearch ];
       description = "Write to and read from ByteStrings maintaining internal memory references";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Referees" = callPackage
    ({ mkDerivation, cassava, cmdargs, cond, glpk-hs, matrix, MissingH
     , vector
     }:
     mkDerivation {
       pname = "Referees";
       version = "0.0.0";
       sha256 = "076pa25455jd4b0dbs9gfksaa1ww66yvnknki4yivc0pm60pnh7r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cassava cmdargs cond glpk-hs matrix MissingH vector
       ];
       homepage = "https://github.com/pablocouto/Referees";
       description = "A utility for computing distributions of material to review among reviewers";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "RepLib" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "RepLib";
       version = "0.5.3.3";
       sha256 = "1772r6rfajcn622dxwy9z1bvv53l5xj6acbcv8n9p7h01fs52mpr";
       buildDepends = [ mtl ];
       homepage = "http://code.google.com/p/replib/";
       description = "Generic programming library with representation types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ReplicateEffects" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ReplicateEffects";
       version = "0.3";
       sha256 = "194nbnbrf5g3d2pch6z9zapzhi0i2z30vpgjj0h5x8bfwzpf1527";
       homepage = "https://github.com/MedeaMelana/ReplicateEffects";
       description = "Composable replication schemes of applicative functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ReviewBoard" = callPackage
    ({ mkDerivation, HTTP, json, mtl, network, random }:
     mkDerivation {
       pname = "ReviewBoard";
       version = "0.2.2";
       sha256 = "1grcs7mily2gpxdzq1pcz1f71z2d8pz6paqrb8yv38nkckvm4j75";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HTTP json mtl network random ];
       description = "Haskell bindings to ReviewBoard";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Rlang-QQ" = callPackage
    ({ mkDerivation, binary, Cabal, doctest, filepath, haskell-src-meta
     , HList, mtl, repa, split, syb, temporary, text, transformers
     , trifecta, utf8-string, vector, zlib
     }:
     mkDerivation {
       pname = "Rlang-QQ";
       version = "0.2.1.0";
       sha256 = "1r46prwscjfgvvky08rd632pmwlmihgr3rx41xz0h00vv5dygyxn";
       buildDepends = [
         binary Cabal filepath haskell-src-meta HList mtl repa split syb
         temporary text transformers trifecta utf8-string vector zlib
       ];
       testDepends = [ doctest ];
       homepage = "http://code.haskell.org/~aavogt/Rlang-QQ";
       description = "quasiquoter for inline-R code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "RollingDirectory" = callPackage
    ({ mkDerivation, filepath, hdaemonize-buildfix, hinotify, hsyslog
     , HUnit, monad-parallel, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "RollingDirectory";
       version = "0.1";
       sha256 = "0mw4hd99v8pp75ng75cv3vym5ld93f07mpkcbi2b6v12k68bxx4v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath hdaemonize-buildfix hinotify hsyslog monad-parallel
       ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Limits the size of a directory's contents";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "RxHaskell" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "RxHaskell";
       version = "0.2";
       sha256 = "0pwxsvkpdr4vzr6cpgjmkr55ip6ns3gcv8pma7dwzg21myx9c3vl";
       buildDepends = [ stm transformers ];
       homepage = "https://github.com/jspahrsummers/RxHaskell";
       description = "Reactive Extensions for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "SBench" = callPackage
    ({ mkDerivation, cassava, criterion, deepseq, filepath, gnuplot
     , hp2any-core, parsec, utf8-string, vector
     }:
     mkDerivation {
       pname = "SBench";
       version = "0.2.0";
       sha256 = "0ym9qdwwn180365hgvwi6djzbqvfiyqrd2fhywpvxihwxnlnhiam";
       buildDepends = [
         cassava criterion deepseq filepath gnuplot hp2any-core parsec
         utf8-string vector
       ];
       description = "A benchmark suite for runtime and heap measurements over a series of inputs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SConfig" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "SConfig";
       version = "0.2.0.0";
       sha256 = "032s6szll58zavdnf6fsj2rhpdlizv3l46lh819bqjy1kbffv0yz";
       homepage = "https://github.com/fgaz/SConfig";
       description = "A simple config library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "SDL" = callPackage
    ({ mkDerivation, SDL }:
     mkDerivation {
       pname = "SDL";
       version = "0.6.5";
       sha256 = "1vlf1bvp4cbgr31qk6aqikhgn9jbgj7lrvnjzv3ibykm1hhd6vdb";
       extraLibraries = [ SDL ];
       description = "Binding to libSDL";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) SDL; };

  "SDL-gfx" = callPackage
    ({ mkDerivation, SDL }:
     mkDerivation {
       pname = "SDL-gfx";
       version = "0.6.0";
       sha256 = "14d8fz576rwi6x0dxgc29cdmwn48afja3v5qx3x8q5y61fv8w9v1";
       buildDepends = [ SDL ];
       description = "Binding to libSDL_gfx";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SDL-image" = callPackage
    ({ mkDerivation, SDL, SDL_image }:
     mkDerivation {
       pname = "SDL-image";
       version = "0.6.1";
       sha256 = "18n6al40db7xalqqr4hp0l26qxxv1kmd8mva0n7vmhg05zypf6ni";
       buildDepends = [ SDL ];
       extraLibraries = [ SDL_image ];
       description = "Binding to libSDL_image";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SDL-mixer" = callPackage
    ({ mkDerivation, SDL, SDL_mixer }:
     mkDerivation {
       pname = "SDL-mixer";
       version = "0.6.1";
       sha256 = "1fxp5sz0w6pr5047jjvh81wkljxsl7fca239364i50m44mpcsyn1";
       buildDepends = [ SDL ];
       extraLibraries = [ SDL_mixer ];
       description = "Binding to libSDL_mixer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SDL-mpeg" = callPackage
    ({ mkDerivation, SDL, smpeg }:
     mkDerivation {
       pname = "SDL-mpeg";
       version = "0.0.1";
       sha256 = "0hx4977iynchnyd4b9ycbiw5qq07wk1a7dkisqx0a3x0ca4qirwj";
       buildDepends = [ SDL ];
       extraLibraries = [ smpeg ];
       description = "Binding to the SMPEG library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SDL-ttf" = callPackage
    ({ mkDerivation, SDL, SDL_ttf }:
     mkDerivation {
       pname = "SDL-ttf";
       version = "0.6.2";
       sha256 = "0jajnbqnhdd4i8pj8j27m53zwgfs1v06kiwy0s0zml02fdkq8j4a";
       buildDepends = [ SDL ];
       extraLibraries = [ SDL_ttf ];
       description = "Binding to libSDL_ttf";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SDL2-ttf" = callPackage
    ({ mkDerivation, SDL2, SDL2_ttf }:
     mkDerivation {
       pname = "SDL2-ttf";
       version = "0.1.0";
       sha256 = "03ng8kih285pvwj06jdwk4hkyyyb8j666pnvagnw5hsjhq60r8h6";
       buildDepends = [ SDL2 ];
       extraLibraries = [ SDL2 SDL2_ttf ];
       description = "Binding to libSDL-ttf";
       license = stdenv.lib.licenses.mit;
     }) {};

  "SFML" = callPackage
    ({ mkDerivation, csfml-audio, csfml-graphics, csfml-network
     , csfml-system, csfml-window
     }:
     mkDerivation {
       pname = "SFML";
       version = "0.2.0.0";
       sha256 = "1jz7wgrjc169slq7akf9sdgpfnl1cbiahig8hqck9p40ixn456k6";
       extraLibraries = [
         csfml-audio csfml-graphics csfml-network csfml-system csfml-window
       ];
       homepage = "https://github.com/jeannekamikaze/SFML";
       description = "SFML bindings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "SFML-control" = callPackage
    ({ mkDerivation, mtl, SFML }:
     mkDerivation {
       pname = "SFML-control";
       version = "0.2.0.2";
       sha256 = "001h9y9395mz6fr58s1i8svn4pyy5iqbkzzsp19xdphh4w69za9g";
       buildDepends = [ mtl SFML ];
       homepage = "https://github.com/SFML-haskell/SFML-control";
       description = "Higher level library on top of SFML";
       license = stdenv.lib.licenses.mit;
     }) {};

  "SFont" = callPackage
    ({ mkDerivation, SDL, Sprig }:
     mkDerivation {
       pname = "SFont";
       version = "0.1.1";
       sha256 = "077yvys00kp8lmkvc4mbynmkk9nn2ib5rh38bqcw0wnwsvl7140i";
       buildDepends = [ SDL Sprig ];
       homepage = "http://liamoc.net/static/SFont";
       description = "SFont SDL Bitmap Fonts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SG" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "SG";
       version = "1.0";
       sha256 = "0aj15lp5wbldaa9ndfvni1iq7kcrjv1syln9yz77jg6p8ndk61jv";
       buildDepends = [ mtl ];
       description = "Small geometry library for dealing with vectors and collision detection";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SGdemo" = callPackage
    ({ mkDerivation, GLUT, OpenGL, SG }:
     mkDerivation {
       pname = "SGdemo";
       version = "1.1";
       sha256 = "0f7s8y5wq479i2yix2ik5ffsqkrb65pi31n6a03453kvk5jc7wv6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT OpenGL SG ];
       description = "An example of using the SG and OpenGL libraries";
       license = "GPL";
     }) {};

  "SHA" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "SHA";
       version = "1.6.4.1";
       sha256 = "03fwpl8hrl9q197w8v1glqi5g1d51c7hz4m8zi5s8x1yvpbwcfvl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary ];
       description = "Implementations of the SHA suite of message digest functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SHA2" = callPackage
    ({ mkDerivation, AES, monads-tf, transformers }:
     mkDerivation {
       pname = "SHA2";
       version = "0.2.5";
       sha256 = "1zs79a327x6myfam3p2vr8lmszcaqnkll2qz8n4sy835vz328j40";
       buildDepends = [ AES monads-tf transformers ];
       description = "Fast, incremental SHA hashing for bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SMTPClient" = callPackage
    ({ mkDerivation, extensible-exceptions, hsemail, network }:
     mkDerivation {
       pname = "SMTPClient";
       version = "1.1.0";
       sha256 = "07njj24c43iz33c641d5ish62h13lhpvn2mx5pv5i6s3fm3bxsfk";
       buildDepends = [ extensible-exceptions hsemail network ];
       description = "A simple SMTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SNet" = callPackage
    ({ mkDerivation, bindings-DSL, c2hsc, data-default, lens, mtl
     , transformers
     }:
     mkDerivation {
       pname = "SNet";
       version = "0.1.0";
       sha256 = "19ls2icg5vflznf9wn5b429x6blismcdxinh66vd8cr8hwgc8m99";
       buildDepends = [ bindings-DSL data-default lens mtl transformers ];
       buildTools = [ c2hsc ];
       homepage = "http://www.snet-home.org/";
       description = "Declarative coördination language for streaming networks";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "SQLDeps" = callPackage
    ({ mkDerivation, hashable, HDBC, HDBC-sqlite3, mtl
     , unordered-containers
     }:
     mkDerivation {
       pname = "SQLDeps";
       version = "0.1";
       sha256 = "1dx4vxrc7hjms3bx80bngwr5jxkb1v9hps09ayi0mqwhnfzq5vgp";
       buildDepends = [
         hashable HDBC HDBC-sqlite3 mtl unordered-containers
       ];
       description = "Calculate db-data dependencies of functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "STL" = callPackage
    ({ mkDerivation, attoparsec, cereal, text }:
     mkDerivation {
       pname = "STL";
       version = "0.3";
       sha256 = "07zf0j9bly6b0q081jgxcpl0b5bl4kckharwwrdwng477gimqmwx";
       buildDepends = [ attoparsec cereal text ];
       homepage = "http://github.com/bergey/STL";
       description = "STL 3D geometry format parsing and pretty-printing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "STMonadTrans" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "STMonadTrans";
       version = "0.3.2";
       sha256 = "1cl5bsc5mr3silcmbjylgw5qa04pf2np9mippxnsa4p3dk089gkh";
       buildDepends = [ mtl ];
       description = "A monad transformer version of the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SVG2Q" = callPackage
    ({ mkDerivation, language-c, svgutils, syb, xml }:
     mkDerivation {
       pname = "SVG2Q";
       version = "0.3";
       sha256 = "07cr20cdz4dk8c9j84j1wlzhg4qb4hmgyvh2nnlh4vc52bvvizmq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ language-c svgutils syb xml ];
       homepage = "http://www.informatik.uni-kiel.de/~jgr/svg2q";
       description = "Code generation tool for Quartz code from a SVG";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SVGFonts" = callPackage
    ({ mkDerivation, attoparsec, blaze-markup, blaze-svg
     , data-default-class, diagrams-lib, parsec, split, text, tuple
     , vector, vector-space, xml
     }:
     mkDerivation {
       pname = "SVGFonts";
       version = "1.4.0.3";
       sha256 = "0jkjcf27xqjzv9lny7j181kcma26wngrq3vzw2sp2hwkdcjryyin";
       buildDepends = [
         attoparsec blaze-markup blaze-svg data-default-class diagrams-lib
         parsec split text tuple vector vector-space xml
       ];
       description = "Fonts from the SVG-Font format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SVGPath" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "SVGPath";
       version = "1.1.2";
       sha256 = "1a4rmp1rn6jv8nkab688i146ywiv4w6fp5bpm0slwgda2x0h6lp4";
       buildDepends = [ parsec ];
       description = "Parsing the path command of SVG";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SableCC2Hs" = callPackage
    ({ mkDerivation, filepath, loch-th, text, transformers
     , wl-pprint-text, xml
     }:
     mkDerivation {
       pname = "SableCC2Hs";
       version = "0.0.1.0";
       sha256 = "1sngk170p5wyi3sgjkl74fr3k570fbfabhbg0dnp8z4iw53d8jfl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath loch-th text transformers wl-pprint-text xml
       ];
       description = "Generate a parser (in Haskell) with the SableCC parser generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Safe" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Safe";
       version = "0.1";
       sha256 = "0ybi5r4635yjx41ig54bm426fbdzrivc5kn8fwqxmzm62ai0v623";
       homepage = "http://www-users.cs.york.ac.uk/~ndm/projects/libraries.php";
       description = "Library for safe (pattern match free) functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SafeSemaphore" = callPackage
    ({ mkDerivation, HUnit, stm }:
     mkDerivation {
       pname = "SafeSemaphore";
       version = "0.10.1";
       sha256 = "0rpg9j6fy70i0b9dkrip9d6wim0nac0snp7qzbhykjkqlcvvgr91";
       buildDepends = [ stm ];
       testDepends = [ HUnit ];
       homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
       description = "Much safer replacement for QSemN, QSem, and SampleVar";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Salsa" = callPackage
    ({ mkDerivation, file-embed, glib, mono }:
     mkDerivation {
       pname = "Salsa";
       version = "0.2.0.2";
       sha256 = "0915mwi1ksa85in03vzm5hqbvk6ih7l0zslg5cmy7j9fc0jhgwgd";
       buildDepends = [ file-embed ];
       extraLibraries = [ glib mono ];
       homepage = "http://haskell.org/haskellwiki/Salsa";
       description = "A .NET Bridge for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) glib; };

  "ScratchFs" = callPackage
    ({ mkDerivation, filepath, HFuse, hsyslog, regex-compat
     , sqlite-simple
     }:
     mkDerivation {
       pname = "ScratchFs";
       version = "0.1.0.2";
       sha256 = "0c410hnby7g5qdx1kj3shwxl0m910vl3rj3ayx6f5qsz5by5rczh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath HFuse hsyslog regex-compat sqlite-simple
       ];
       homepage = "http://github.com/hirschenberger/ScratchFS";
       description = "Size limited temp filesystem based on fuse";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Scurry" = callPackage
    ({ mkDerivation, binary, network, network-bytestring, parsec
     , random, stm, time
     }:
     mkDerivation {
       pname = "Scurry";
       version = "0.0.3";
       sha256 = "0iwlai8zspz08l3v7qf505mgfxn5v177kqa1x4xfssq7wzxawq8j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary network network-bytestring parsec random stm time
       ];
       homepage = "http://code.google.com/p/scurry/";
       description = "A cross platform P2P VPN application built using Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SegmentTree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "SegmentTree";
       version = "0.3";
       sha256 = "1hagm0y9x2j1wcgk5ibxnlh2slnxfggn79cq20ws0zvd4yqw3231";
       isLibrary = true;
       isExecutable = true;
       description = "Data structure for querying the set (or count) of intervals covering given point";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Semantique" = callPackage
    ({ mkDerivation, classify, mongoDB, mtl, network, split, tagsoup
     , text
     }:
     mkDerivation {
       pname = "Semantique";
       version = "0.3.0";
       sha256 = "1l334lvm56xr7rw135l6nj7iz4h1yskl1fcrr5rdimlw7dyw2cr8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ classify mongoDB mtl network split tagsoup text ];
       description = "Command-line tool for maintaining the Semantique database";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "Semigroup" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Semigroup";
       version = "0.0.7";
       sha256 = "1mdw1z50gr02j5hycki5rl95b1yk7xfrdk056ajw9ghw48s0jpx6";
       buildDepends = [ mtl ];
       homepage = "https://bitbucket.org/dibblego/semigroup/";
       description = "A semigroup";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SessionLogger" = callPackage
    ({ mkDerivation, filepath, hslogger, mtl, random, time }:
     mkDerivation {
       pname = "SessionLogger";
       version = "0.3.0.0";
       sha256 = "1zgjslf9p64aa7dwww44jq2f6iic1192ic98gmjsjj5ww8anl8c3";
       buildDepends = [ filepath hslogger mtl random time ];
       description = "Easy Loggingframework";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "ShellCheck" = callPackage
    ({ mkDerivation, json, mtl, parsec, QuickCheck, regex-compat
     , transformers
     }:
     mkDerivation {
       pname = "ShellCheck";
       version = "0.3.5";
       sha256 = "0x4rvhpzrjkn9a9fsmp9iwv9g21hkrd8fgq05iy4wgv8nfhgv2cj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         json mtl parsec QuickCheck regex-compat transformers
       ];
       testDepends = [
         json mtl parsec QuickCheck regex-compat transformers
       ];
       homepage = "http://www.shellcheck.net/";
       description = "Shell script analysis tool";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "Shellac" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "Shellac";
       version = "0.9.5.2";
       sha256 = "1js9la0hziqsmb56q9kzfycda2sw3xm4kv2y5q2h3zlw5gzc5xli";
       buildDepends = [ mtl ];
       homepage = "http://rwd.rdockins.name/shellac/home/";
       description = "A framework for creating shell envinronments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Shellac-compatline" = callPackage
    ({ mkDerivation, Shellac, Shellac-editline }:
     mkDerivation {
       pname = "Shellac-compatline";
       version = "0.9.5.2";
       sha256 = "134m0krbd3vlswjxdfvv9xy9x962g7ksg1mqmmgczss9ph2dx08i";
       buildDepends = [ Shellac Shellac-editline ];
       homepage = "http://rwd.rdockins.name/shellac/home/";
       description = "\"compatline\" backend module for Shellac";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Shellac-editline" = callPackage
    ({ mkDerivation, editline, Shellac }:
     mkDerivation {
       pname = "Shellac-editline";
       version = "0.9.5.2";
       sha256 = "14x4w4msh99c8vzhlv88ixb8yx43k178qz7504na68820389l9ah";
       buildDepends = [ editline Shellac ];
       homepage = "http://rwd.rdockins.name/shellac/home/";
       description = "Editline backend module for Shellac";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Shellac-haskeline" = callPackage
    ({ mkDerivation, haskeline, mtl, Shellac }:
     mkDerivation {
       pname = "Shellac-haskeline";
       version = "0.2.0.2";
       sha256 = "0q70d5arw1yg0f8b6p3k0g3i4jbh2d8rp1cchswd3ynhinzhrnqg";
       buildDepends = [ haskeline mtl Shellac ];
       description = "Haskeline backend module for Shellac";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Shellac-readline" = callPackage
    ({ mkDerivation, readline, Shellac }:
     mkDerivation {
       pname = "Shellac-readline";
       version = "0.9.5.2";
       sha256 = "0248zzp40gadcc4xkr5dmjc4phq0xz9j4sirdncnr62y3pi4zi0n";
       buildDepends = [ readline Shellac ];
       homepage = "http://rwd.rdockins.name/shellac/home/";
       description = "Readline backend module for Shellac";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ShowF" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ShowF";
       version = "0.1.1";
       sha256 = "1nq4i4h43nfh86f6wgwng1ps6mcdl1ba96x9wsjl3qzn3blavyfh";
       homepage = "https://github.com/conal/ShowF/";
       description = "Show for * -> *";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Shu-thing" = callPackage
    ({ mkDerivation, GLUT }:
     mkDerivation {
       pname = "Shu-thing";
       version = "1.1.3";
       sha256 = "185vcxd3qvii9k0134j634x6znvk7v83sj24a4dnw7jjsax0kqiv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT ];
       homepage = "http://www.geocities.jp/takascience/index_en.html";
       description = "A vector shooter game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SimpleAES" = callPackage
    ({ mkDerivation, binary, mwc-random }:
     mkDerivation {
       pname = "SimpleAES";
       version = "0.4.2";
       sha256 = "0s85xgwrhldyr2w3kcn9f72yjajmpz3d4dizq9p9z97rx4qva4vj";
       buildDepends = [ binary mwc-random ];
       description = "Fast AES encryption/decryption for bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SimpleEA" = callPackage
    ({ mkDerivation, mersenne-random-pure64, MonadRandom }:
     mkDerivation {
       pname = "SimpleEA";
       version = "0.2.1";
       sha256 = "0qimm9y138jjnzy5i6s5b7899rkxahk7p2kcwfry0gdq2pcb68vr";
       buildDepends = [ mersenne-random-pure64 MonadRandom ];
       homepage = "http://www.github.com/ehamberg/simpleea/";
       description = "Simple evolutionary algorithm framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SimpleGL" = callPackage
    ({ mkDerivation, GLFW, JuicyPixels, OpenGL, SimpleH, vector }:
     mkDerivation {
       pname = "SimpleGL";
       version = "0.9.3";
       sha256 = "0c674q5jiqvscc53m0z5vkmljla29pcll15gbvxr86pqxwmqm5hr";
       buildDepends = [ GLFW JuicyPixels OpenGL SimpleH vector ];
       description = "A Simple Graphics Library from the SimpleH framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SimpleH" = callPackage
    ({ mkDerivation, clock, cpu, filepath, network, time }:
     mkDerivation {
       pname = "SimpleH";
       version = "1.2";
       sha256 = "0g05yplsm65xmx7brdcqy5kc8qcmzj96vywicwqpmigcv8pi9zmc";
       buildDepends = [ clock cpu filepath network time ];
       description = "A light, clean and powerful Haskell utility library";
       license = "unknown";
     }) {};

  "SimpleLog" = callPackage
    ({ mkDerivation, ansi-terminal, attoparsec, ForkableT
     , monad-control, mtl, resourcet, semigroups, stm, text, th-lift
     , time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "SimpleLog";
       version = "0.1.0.2";
       sha256 = "1ladrn5xrbysj36dz93yrnd182qyac0dcwhh71lc6205ys89j88a";
       buildDepends = [
         ansi-terminal attoparsec ForkableT monad-control mtl resourcet
         semigroups stm text th-lift time transformers transformers-base
       ];
       homepage = "https://github.com/exFalso/SimpleLog/";
       description = "Simple, configurable logging";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SizeCompare" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "SizeCompare";
       version = "0.1";
       sha256 = "0f53vggmc1ysi1rn8zd2kafi45w20d6j7iv1jgnrqy7izpah91a7";
       description = "Fast size comparison for standard containers";
       license = "GPL";
     }) {};

  "Smooth" = callPackage
    ({ mkDerivation, DifferenceLogic, FirstOrderTheory, HUnit, Proper
     }:
     mkDerivation {
       pname = "Smooth";
       version = "0.1.0.1";
       sha256 = "0rwl5dw1vpgszhs7pjk146kp8h8n3ggvpby9y18fr7zsqgsckzcd";
       buildDepends = [ DifferenceLogic FirstOrderTheory HUnit Proper ];
       description = "A tiny, lazy SMT solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Snusmumrik" = callPackage
    ({ mkDerivation, convertible, cpphs, filepath, HDBC, HDBC-sqlite3
     , HFuse, hslogger, iconv, LibZip, regex-tdfa, stm, utf8-string, xml
     , zip
     }:
     mkDerivation {
       pname = "Snusmumrik";
       version = "0.0.1";
       sha256 = "1f4d493hnv7fag9c2p2hnm0kc6b705z7mgdk4z6s4g24536j4ksk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         convertible filepath HDBC HDBC-sqlite3 HFuse hslogger iconv LibZip
         regex-tdfa stm utf8-string xml
       ];
       buildTools = [ cpphs ];
       extraLibraries = [ zip ];
       homepage = "http://bitbucket.org/jetxee/snusmumrik/";
       description = "E-library directory based on FUSE virtual file system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SoOSiM" = callPackage
    ({ mkDerivation, concurrent-supply, monad-coroutine, mtl, stm
     , transformers
     }:
     mkDerivation {
       pname = "SoOSiM";
       version = "0.2.1.0";
       sha256 = "0ghblkhf942gcidsvah8z6wigymzfng1010mp17pvacizamakcmp";
       buildDepends = [
         concurrent-supply monad-coroutine mtl stm transformers
       ];
       homepage = "http://www.soos-project.eu/";
       description = "Abstract full system simulator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SoccerFun" = callPackage
    ({ mkDerivation, base-unicode-symbols, binary, derive, mtl, random
     , zlib
     }:
     mkDerivation {
       pname = "SoccerFun";
       version = "0.5.2";
       sha256 = "0xwgj4k1gn84sb8jc2nyxnvfp8sdmy4x5428fpvmn6n6ca8h6f17";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols binary derive mtl random zlib
       ];
       homepage = "http://www.cs.ru.nl/~peter88/SoccerFun/SoccerFun.html";
       description = "Football simulation framework for teaching functional programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SoccerFunGL" = callPackage
    ({ mkDerivation, base-unicode-symbols, binary, GLUT, OpenGL, random
     , SoccerFun
     }:
     mkDerivation {
       pname = "SoccerFunGL";
       version = "0.5.1";
       sha256 = "1rzqibia10pl4yy64g5pqiqidhn109z0hlf38z3s57hx2zqqi9if";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols binary GLUT OpenGL random SoccerFun
       ];
       homepage = "http://www.cs.ru.nl/~peter88/SoccerFun/SoccerFun.html";
       description = "OpenGL UI for the SoccerFun framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Sonnex" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "Sonnex";
       version = "0.1.0.3";
       sha256 = "0fqaw4wh7ml35kl75qsvqsq17g5pndf7x6clcmqxpwayjn2syzda";
       testDepends = [ QuickCheck ];
       homepage = "https://github.com/Zigazou/Sonnex";
       description = "Sonnex is an alternative to Soundex for french language";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "SourceGraph" = callPackage
    ({ mkDerivation, Cabal, fgl, filepath, Graphalyze, graphviz
     , haskell-src-exts, mtl, multiset, random
     }:
     mkDerivation {
       pname = "SourceGraph";
       version = "0.7.0.6";
       sha256 = "03psglm6xyqvcgnbimidafy51kwpipk5q6s8ip5vhjm2d5makkhm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal fgl filepath Graphalyze graphviz haskell-src-exts mtl
         multiset random
       ];
       description = "Static code analysis using graph-theoretic techniques";
       license = "GPL";
     }) {};

  "SpaceInvaders" = callPackage
    ({ mkDerivation, HGL, random, Yampa }:
     mkDerivation {
       pname = "SpaceInvaders";
       version = "0.4.2";
       sha256 = "1idy95ym336c19rcvvrm8j9lgf77bs10hhmrnw2jc55m1z93m683";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HGL random Yampa ];
       homepage = "http://www.haskell.org/yampa/";
       description = "Video game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "SpacePrivateers" = callPackage
    ({ mkDerivation, enummapset-th, filepath, LambdaHack, text }:
     mkDerivation {
       pname = "SpacePrivateers";
       version = "0.1.0.0";
       sha256 = "0gj709knv4lvz34900jigb1hiq35acbbl86iwa5yszibm8f0drkh";
       editedCabalFile = "1gv48zss4rw4z2n9grga090j1223ylzwi5pirqb0d1mdj9w617dm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ enummapset-th filepath LambdaHack text ];
       homepage = "https://github.com/tuturto/space-privateers";
       description = "Simple space pirate roguelike";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Spock" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, blaze-html
     , case-insensitive, digestive-functors, hashable, hspec, hspec-wai
     , http-types, monad-control, mtl, path-pieces, random, reroute
     , resource-pool, resourcet, stm, text, time, transformers
     , transformers-base, unordered-containers, vault, wai, wai-extra
     , warp
     }:
     mkDerivation {
       pname = "Spock";
       version = "0.7.5.1";
       sha256 = "05vw1dnpzf1khczspv8b5g3z3dqw26klv4c5201jz8sjq6nap2ki";
       buildDepends = [
         aeson base64-bytestring blaze-html case-insensitive
         digestive-functors hashable http-types monad-control mtl
         path-pieces random reroute resource-pool resourcet stm text time
         transformers transformers-base unordered-containers vault wai
         wai-extra warp
       ];
       testDepends = [ hspec hspec-wai http-types text wai ];
       homepage = "https://github.com/agrafix/Spock";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Spock-auth" = callPackage
    ({ mkDerivation, http-types, Spock, text, time }:
     mkDerivation {
       pname = "Spock-auth";
       version = "0.2.0.1";
       sha256 = "1vcrl5dqjn0ri9ybza2yv80xvbv2iwrz5hj5rbhgy6i803ixlpx0";
       buildDepends = [ http-types Spock text time ];
       homepage = "https://github.com/agrafix/Spock-auth";
       description = "Provides authentification helpers for Spock";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Spock-worker" = callPackage
    ({ mkDerivation, HTF, lifted-base, mtl, Spock, stm, text, time
     , transformers, vector
     }:
     mkDerivation {
       pname = "Spock-worker";
       version = "0.2.1.2";
       sha256 = "02ilpzvxms5qkld0v8vf5gvpssg45dhgw494hg0ngn5z2aml8r0s";
       buildDepends = [
         lifted-base mtl Spock stm text time transformers vector
       ];
       testDepends = [ HTF stm vector ];
       homepage = "http://github.com/agrafix/Spock-worker";
       description = "Background workers for Spock";
       license = stdenv.lib.licenses.mit;
     }) {};

  "SpreadsheetML" = callPackage
    ({ mkDerivation, xml }:
     mkDerivation {
       pname = "SpreadsheetML";
       version = "0.1";
       sha256 = "14d3fk0cal0svb2clbhbbk48fygwvb0k01aawfm72576mrz9mb18";
       buildDepends = [ xml ];
       description = "Write support for Excel's SpreadsheetML format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Sprig" = callPackage
    ({ mkDerivation, SDL }:
     mkDerivation {
       pname = "Sprig";
       version = "0.1.1";
       sha256 = "06jxs1hc69viv38nvafhn8ilj3xn2j9k543abgd8p69gc95w1lbn";
       buildDepends = [ SDL ];
       homepage = "http://liamoc.net/static/Sprig";
       description = "Binding to Sprig";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Stasis" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Stasis";
       version = "0.0.1";
       sha256 = "1pycmc30hg7vzf3addl0kdd74hpamzg3c1z4fj6fzr4542afhcq8";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/zcourts/Stasis";
       description = "A simple MVCC like library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "StateVar" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "StateVar";
       version = "1.0.1.0";
       sha256 = "02n2sxxkr0ydc77dc3amwp5jrw289d2s2z55rhrmhxxg1c7lp5js";
       editedCabalFile = "0vvn1nz744g3xl4p41dk73shbyp29ck8f4xdqcs8c08bfcag2wv2";
       homepage = "https://github.com/haskell-opengl/StateVar";
       description = "State variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "StateVar-transformer" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "StateVar-transformer";
       version = "1.0.0.0";
       sha256 = "1dbpxwjz6yf4ap20wm5ngvd0i0knkjsdahmd90ymddqj82v8w3d0";
       buildDepends = [ mtl transformers ];
       homepage = "http://github.com/seagull-kamome/StateVar-transformer";
       description = "State variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "StatisticalMethods" = callPackage
    ({ mkDerivation, statistics, tuple, vector }:
     mkDerivation {
       pname = "StatisticalMethods";
       version = "0.0.0.1";
       sha256 = "1h90i6crknxv23zryqi7mfzg65g1ydv62mza1hiri66jlmdahir6";
       buildDepends = [ statistics tuple vector ];
       homepage = "http://www.tbi.univie.ac.at/~choener/Haskell/";
       description = "Collection of useful statistical methods";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Stomp" = callPackage
    ({ mkDerivation, binary, network, time, utf8-string }:
     mkDerivation {
       pname = "Stomp";
       version = "0.1.1";
       sha256 = "0fdibnhab5j03df70pfg9psk6ah80a91ds4nmlb0rdlldddbi3wn";
       buildDepends = [ binary network time utf8-string ];
       homepage = "http://github.com/rukav/Stomp";
       description = "Client library for Stomp brokers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Strafunski-ATermLib" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Strafunski-ATermLib";
       version = "1.6.0.3";
       sha256 = "1cicz4d5kyl9j4y3p79m3fk56vcqk3220a6y536dw525x6180dzw";
       description = "An abstract data type designed for the exchange of tree-like data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Strafunski-Sdf2Haskell" = callPackage
    ({ mkDerivation, haskell-src, mtl, Strafunski-ATermLib
     , Strafunski-StrategyLib
     }:
     mkDerivation {
       pname = "Strafunski-Sdf2Haskell";
       version = "1.0.0.2";
       sha256 = "0h73yj74pl0k3p7vamqhw1jz36pvh8kfpw58gkmskdmkh7j6wb30";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         haskell-src mtl Strafunski-ATermLib Strafunski-StrategyLib
       ];
       description = "Converts SDF to Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Strafunski-StrategyLib" = callPackage
    ({ mkDerivation, mtl, syb }:
     mkDerivation {
       pname = "Strafunski-StrategyLib";
       version = "5.0.0.4";
       sha256 = "0miffjc8li5l1jarmz8l34z5mx3q68pyxghsi1lbda51bzz3wy1g";
       buildDepends = [ mtl syb ];
       description = "Library for strategic programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "StrappedTemplates" = callPackage
    ({ mkDerivation, blaze-builder, filemanip, filepath, hspec, mtl
     , parsec, text, transformers
     }:
     mkDerivation {
       pname = "StrappedTemplates";
       version = "0.2.0.0";
       sha256 = "0l2zdn3brrlsii9j14gfg7nfjvwswqgsnm7l4hcy51a6k0s3pnn7";
       buildDepends = [
         blaze-builder filemanip filepath mtl parsec text transformers
       ];
       testDepends = [ blaze-builder hspec text ];
       homepage = "https://github.com/hansonkd/StrappedTemplates";
       description = "General purpose templates in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "StrategyLib" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "StrategyLib";
       version = "4.0.0.0";
       sha256 = "1sskndywpm1gi4bs4i1gah73jk49inlscg4jzcqhq0phb8f886xk";
       buildDepends = [ mtl ];
       homepage = "http://naesten.dyndns.org:8080/repos/StrategyLib";
       license = stdenv.lib.licenses.unfree;
     }) {};

  "Stream" = callPackage
    ({ mkDerivation, lazysmallcheck, QuickCheck }:
     mkDerivation {
       pname = "Stream";
       version = "0.4.7.1";
       sha256 = "08h0h6pwvfcj92n7mk5za36x9agpqnax12cjlvd68zwghjf9qxy3";
       buildDepends = [ lazysmallcheck QuickCheck ];
       description = "A library for manipulating infinite lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "StrictBench" = callPackage
    ({ mkDerivation, benchpress, parallel }:
     mkDerivation {
       pname = "StrictBench";
       version = "0.1.1";
       sha256 = "1l4l77rjhl5g9089kjyarsrvbvm43bk370ld50qp17dqhvisl73m";
       buildDepends = [ benchpress parallel ];
       homepage = "http://bonsaicode.wordpress.com/2009/06/07/strictbench-0-1/";
       description = "Benchmarking code through strict evaluation";
       license = "GPL";
     }) {};

  "SybWidget" = callPackage
    ({ mkDerivation, mtl, syb-with-class, TypeCompose }:
     mkDerivation {
       pname = "SybWidget";
       version = "0.5.6";
       sha256 = "0m3papl90fs3zmlqxsjn0cymk049352cl42bif2x7gij75cv2b68";
       buildDepends = [ mtl syb-with-class TypeCompose ];
       description = "Library which aids constructing generic (SYB3-based) widgets";
       license = "LGPL";
     }) {};

  "SyntaxMacros" = callPackage
    ({ mkDerivation, AspectAG, HList, ListLike, TTTAS, uu-parsinglib
     , uulib
     }:
     mkDerivation {
       pname = "SyntaxMacros";
       version = "1.0.3";
       sha256 = "155vkv7kg026zc2crywdyna1df98mw41qm0sadqihaj49xk59vyc";
       buildDepends = [
         AspectAG HList ListLike TTTAS uu-parsinglib uulib
       ];
       homepage = "http://www.cs.uu.nl/wiki/Center/SyntaxMacrosForFree";
       description = "Syntax Macros in the form of an EDSL";
       license = "LGPL";
     }) {};

  "Sysmon" = callPackage
    ({ mkDerivation, ConfigFile, filepath, fingertree, Glob, MissingH
     , mtl, statistics, time, vector
     }:
     mkDerivation {
       pname = "Sysmon";
       version = "0.1.2";
       sha256 = "1zyp333vicjarcmip2q52nzfv948yl2q6qr3k3glp4v4m8f75ap3";
       buildDepends = [
         ConfigFile filepath fingertree Glob MissingH mtl statistics time
         vector
       ];
       homepage = "http://github.com/rukav/Sysmon";
       description = "Sybase 15 sysmon reports processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TBC" = callPackage
    ({ mkDerivation, Cabal, deepseq, filepath }:
     mkDerivation {
       pname = "TBC";
       version = "0.0.3";
       sha256 = "1063ckv034mb6s41xy8pr387y1hnknkyk4r29vmzdrm3pdcyzdn3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal deepseq filepath ];
       description = "Testing By Convention";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TBit" = callPackage
    ({ mkDerivation, deepseq, fgl, free, haskeline, hmatrix
     , integration, list-extras, mtl, numeric-tools, parallel
     , stream-fusion
     }:
     mkDerivation {
       pname = "TBit";
       version = "0.4.2.0";
       sha256 = "0qccd23x1qcng207dl82h7wifh2cc7aaapf9qrg0m5jz3fa5cvkm";
       buildDepends = [
         deepseq fgl free haskeline hmatrix integration list-extras mtl
         numeric-tools parallel stream-fusion
       ];
       description = "Utilities for condensed matter physics tight binding calculations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TCache" = callPackage
    ({ mkDerivation, hashtables, mtl, RefSerialize, stm, text }:
     mkDerivation {
       pname = "TCache";
       version = "0.12.0";
       sha256 = "0marslz5jg66r3i2d0yjjrj11bpywpadcxs5k4j6782iczxybd7s";
       buildDepends = [ hashtables mtl RefSerialize stm text ];
       description = "A Transactional cache with user-defined persistence";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TTTAS" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "TTTAS";
       version = "0.4.2";
       sha256 = "0wag5mnhn6h3gp92w0amngqfdwwbsmvdwmcpymxq6zjj6zmdzs7k";
       homepage = "http://www.cs.uu.nl/wiki/bin/view/Center/TTTAS";
       description = "Typed Transformations of Typed Abstract Syntax";
       license = "LGPL";
     }) {};

  "TV" = callPackage
    ({ mkDerivation, DeepArrow, TypeCompose }:
     mkDerivation {
       pname = "TV";
       version = "0.5.0";
       sha256 = "0vz9j5vjypnkbzld18f6kczfj54disf43x5052s4n7gqzsjxpxvb";
       buildDepends = [ DeepArrow TypeCompose ];
       homepage = "http://haskell.org/haskellwiki/TV";
       description = "Tangible Values -- composable interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TYB" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "TYB";
       version = "0.2.3";
       sha256 = "1rdwj6dg156i60i7s8xr310j0yza41jjqk6pmgx2giqjs122dz5n";
       buildDepends = [ mtl transformers ];
       description = "Template Your Boilerplate - a Template Haskell version of SYB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TableAlgebra" = callPackage
    ({ mkDerivation, HaXml, mtl }:
     mkDerivation {
       pname = "TableAlgebra";
       version = "0.7.1";
       sha256 = "1jqkjnyznklyiy2shm4c9gix267war1hmsjncdmailhca41fs4bz";
       buildDepends = [ HaXml mtl ];
       description = "Ferry Table Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Tables" = callPackage
    ({ mkDerivation, cookbook }:
     mkDerivation {
       pname = "Tables";
       version = "0.1.0.2";
       sha256 = "02a6awbqwhmv7c74lgbp35ykqn31mgwp7ffd0j4rs42vv1a4ffkr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cookbook ];
       description = "A client for Quill databases";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Tablify" = callPackage
    ({ mkDerivation, parsec, xhtml }:
     mkDerivation {
       pname = "Tablify";
       version = "0.8.2";
       sha256 = "10w3idjhrgmkrkjblrmb2wb2s2fg657nw5rmg5k147wrgrkzbsz3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec xhtml ];
       homepage = "http://www.storytotell.org/code/tablify";
       description = "Tool to render CSV into tables of various formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Takusen" = callPackage
    ({ mkDerivation, mtl, time }:
     mkDerivation {
       pname = "Takusen";
       version = "0.8.7";
       sha256 = "0mxck66rz6lplgcl3a3i0gaybc2ki0q7wfilhkp2f3h3m50fg7wy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl time ];
       description = "Database library with left-fold interface, for PostgreSQL, Oracle, SQLite, ODBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Tape" = callPackage
    ({ mkDerivation, comonad, distributive, Stream }:
     mkDerivation {
       pname = "Tape";
       version = "0.4.0.0";
       sha256 = "1d66l67cicn3q4a6glfxfkhc9cjm7vqi0bnyjad0bzyyv409j6bp";
       buildDepends = [ comonad distributive Stream ];
       homepage = "https://github.com/kwf/Tape";
       description = "Bidirectionally infinite streams, akin to the tape of a Turing machine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TeaHS" = callPackage
    ({ mkDerivation, mtl, SDL, SDL-image, SDL-mixer, SFont, Sprig }:
     mkDerivation {
       pname = "TeaHS";
       version = "0.3.1";
       sha256 = "1326lrpkw2gyn7y9px38gyzi2cnx87ki65r6mwds746d1s1zmmcn";
       buildDepends = [ mtl SDL SDL-image SDL-mixer SFont Sprig ];
       homepage = "http://liamoc.net/tea";
       description = "TeaHS Game Creation Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Tensor" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Tensor";
       version = "1.1.0.0";
       sha256 = "1vn409805p5b47v5mf7rk0gypqag5bn1pzlsmsp9blr3jyj6dgph";
       homepage = "https://github.com/haskell-opengl/Tensor";
       description = "Tensor data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TernaryTrees" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "TernaryTrees";
       version = "0.2.0.2";
       sha256 = "06m4mi9cl16sfyn9wibb0ph32vhgf501adjq059s3hdlxr4acdwr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary ];
       description = "Efficient pure ternary tree Sets and Maps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Theora" = callPackage
    ({ mkDerivation, ogg, theora }:
     mkDerivation {
       pname = "Theora";
       version = "1.0";
       sha256 = "1gw97mxwb6ywc4qvfggjzsryl0m4g6g30ljx4xcvy6snfmgv00ig";
       extraLibraries = [ ogg theora ];
       license = "GPL";
     }) {};

  "Thingie" = callPackage
    ({ mkDerivation, cairo, gtk, mtl }:
     mkDerivation {
       pname = "Thingie";
       version = "0.80";
       sha256 = "0fl6pk2vp765gyzc4afjdg0lgbnh5v08gfbp0kzny4ng25bmxqwa";
       buildDepends = [ cairo gtk mtl ];
       description = "Purely functional 2D drawing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ThreadObjects" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ThreadObjects";
       version = "0.0";
       sha256 = "0rpcv6kw351ykj36f83qdqygrhk4ylqlcgcswxl8gg1v33jaaqmz";
       description = "Mutable objects that reside in their own threads";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "Thrift" = callPackage
    ({ mkDerivation, binary, HTTP, network }:
     mkDerivation {
       pname = "Thrift";
       version = "0.6.0.1";
       sha256 = "0yk496zql0jpyj83ybdzffc03sylf5pwn093k831m99j54l2r5yv";
       editedCabalFile = "1ncrb6m5a7qywbi3vmavfqv2nim3qbjpa51gf28p6xw52q2apa2n";
       buildDepends = [ binary HTTP network ];
       homepage = "http://thrift.apache.org";
       description = "Haskell bindings for the Apache Thrift RPC system";
       license = "unknown";
     }) {};

  "TicTacToe" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "TicTacToe";
       version = "0.0.1";
       sha256 = "0542hripn5nlwdvnhkd9xzzh2b1x6alwnqxq877r92c7kqnlffw4";
       buildDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "A sub-project (exercise) for a functional programming course";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TigerHash" = callPackage
    ({ mkDerivation, binary, dataenc }:
     mkDerivation {
       pname = "TigerHash";
       version = "0.2";
       sha256 = "02plz1y7lmvp3jpl5srsnx2nkl6yhhfn6pqj00szs688cahk2dik";
       buildDepends = [ binary dataenc ];
       description = "TigerHash with C implementation";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "TimePiece" = callPackage
    ({ mkDerivation, random, SDL, SDL-gfx, SDL-image, SDL-ttf }:
     mkDerivation {
       pname = "TimePiece";
       version = "0.0.5";
       sha256 = "1ylf4kzyf947szgib0ivkvygbinmy97nvy77d0crryzxdmccrzbj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ random SDL SDL-gfx SDL-image SDL-ttf ];
       description = "A simple tile-based digital clock screen saver";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "TinyLaunchbury" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "TinyLaunchbury";
       version = "1.0.1";
       sha256 = "1xxadd8pqbgl0z8vrqn8fm6x0c9l2y3a7irjmjkh9750x6hdb4b9";
       buildDepends = [ mtl ];
       description = "Simple implementation of call-by-need using Launchbury's semantics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TinyURL" = callPackage
    ({ mkDerivation, HTTP, network }:
     mkDerivation {
       pname = "TinyURL";
       version = "0.1.0";
       sha256 = "0y8bl6w3ix2zjhm10wazgi70sr02ydc3hrwjbr6whk341n140wsh";
       buildDepends = [ HTTP network ];
       description = "Use TinyURL to compress URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Top" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "Top";
       version = "1.7";
       sha256 = "0ykicqwayja14z30hn5cy3c96sikqhbyrh0bcqykk9izwhxs339x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/Helium/WebHome";
       description = "Constraint solving framework employed by the Helium Compiler";
       license = "GPL";
     }) {};

  "Tournament" = callPackage
    ({ mkDerivation, mtl, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Tournament";
       version = "0.0.1";
       sha256 = "1yzgcsp3g5sfyxavq1firna5z5m9bnk9ddrbxxmpy1yydmj1n5jk";
       buildDepends = [ mtl ];
       testDepends = [
         mtl QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/clux/tournament.hs";
       description = "Tournament related algorithms";
       license = stdenv.lib.licenses.mit;
     }) {};

  "TraceUtils" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "TraceUtils";
       version = "0.1.0.2";
       sha256 = "0la19yynd7bpswi9012hf0vl9c4fdnn8p6y0287xanmdcs9zqz16";
       homepage = "https://github.com/Peaker/TraceUtils";
       description = "Functions that should have been in Debug.Trace";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TransformersStepByStep" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "TransformersStepByStep";
       version = "0.1.0.1";
       sha256 = "0dxxgwcn4in3rpfn77c4g8h6l7326m8ikcsrl7pm6gifw667qpmv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://hackage.haskell.org/package/TransformersStepByStep";
       description = "Tutorial to monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Transhare" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Transhare";
       version = "0.9";
       sha256 = "04n1ld6h3q71iqnvwyabzj69vdy2x98w0drriyx13ykywbd31036";
       description = "A library to apply transformation to containers so as to maximize sharing of unchanged subcomponents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TreeStructures" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "TreeStructures";
       version = "0.0.2";
       sha256 = "1lcj166i8f7850fqjv7xqxdn6zwpdynzxn3bf243wdnwmnn5pysx";
       homepage = "http://www.github.com/bhickey/TreeStructures";
       description = "A collection of heaps and search trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TreeT" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "TreeT";
       version = "0.0";
       sha256 = "0d1k4nblcnksh2j6b4v14r2xd2kn6cmqmyqhmy6wyz3kr0lyzxqd";
       buildDepends = [ transformers ];
       description = "Transformer for Data.Tree";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "TrendGraph" = callPackage
    ({ mkDerivation, diagrams-cairo, diagrams-lib, mtl
     , optparse-applicative, time
     }:
     mkDerivation {
       pname = "TrendGraph";
       version = "0.1.0.1";
       sha256 = "1rdlimlbdpa089knhnqzgxc8ngqag4m4w3r92jd95kwnmr8nizkp";
       buildDepends = [
         diagrams-cairo diagrams-lib mtl optparse-applicative time
       ];
       description = "A simple trend Graph script";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "TrieMap" = callPackage
    ({ mkDerivation, primitive, th-expand-syns, transformers
     , unpack-funcs, vector
     }:
     mkDerivation {
       pname = "TrieMap";
       version = "4.1.0";
       sha256 = "14wril1sa35cja66y7ah9qwr3bmsi985y7rlxyj12x2fv6dclpc4";
       buildDepends = [
         primitive th-expand-syns transformers unpack-funcs vector
       ];
       description = "Automatic type inference of generalized tries with Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Twofish" = callPackage
    ({ mkDerivation, binary, cereal, crypto-api, HUnit, largeword, mtl
     , tagged
     }:
     mkDerivation {
       pname = "Twofish";
       version = "0.3.2";
       sha256 = "1bv79582fxwgk255fhss6k8irb7mlbdvlvvx8jyzs16g3fyw1y5a";
       buildDepends = [ binary cereal crypto-api largeword mtl tagged ];
       testDepends = [ binary cereal crypto-api HUnit largeword tagged ];
       homepage = "http://github.com/rleisti/twofish";
       description = "An implementation of the Twofish Symmetric-key cipher";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TypeClass" = callPackage
    ({ mkDerivation, filepath, random, reactive-banana
     , reactive-banana-sdl, SDL, SDL-ttf, transformers
     }:
     mkDerivation {
       pname = "TypeClass";
       version = "0.2.1";
       sha256 = "0crymgw91xx0hblbmz488x39i2qzf9c15kv5x950ljmpyrhy5jhv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath random reactive-banana reactive-banana-sdl SDL SDL-ttf
         transformers
       ];
       description = "Typing speed game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TypeCompose" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "TypeCompose";
       version = "0.9.10";
       sha256 = "1wpldqdf6czl36fs4pvvj2z3kg1487sanqncp4rbmgrrhbfmqxxq";
       homepage = "https://github.com/conal/TypeCompose";
       description = "Type composition classes & instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TypeIlluminator" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "TypeIlluminator";
       version = "0.0";
       sha256 = "02ck7sik5wvh989k9ban1m2dlpfld0d0zs7sqb12m1f6wls7fghc";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://www.cs.kent.ac.uk/people/staff/oc/TypeIlluminator/";
       description = "TypeIlluminator is a prototype tool exploring debugging of type errors/";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "TypingTester" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "TypingTester";
       version = "0.2.0.0";
       sha256 = "07qwvmdh5164v552qkk4fm66nlvb4dcv0wh5jircfgh7gsd60l6n";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ time ];
       homepage = "https://github.com/xpika/typingtester";
       description = "Command Line Typing speed tester";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "UISF" = callPackage
    ({ mkDerivation, arrows, deepseq, GLFW, monadIO, OpenGL, stm
     , transformers
     }:
     mkDerivation {
       pname = "UISF";
       version = "0.2.0.0";
       sha256 = "0m8i09f7b066x0nzsgqq8wgnhbrwml913gagfmbk4sny1ysmjb3f";
       buildDepends = [
         arrows deepseq GLFW monadIO OpenGL stm transformers
       ];
       homepage = "http://haskell.cs.yale.edu/";
       description = "Library for Arrowized Graphical User Interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "UMM" = callPackage
    ({ mkDerivation, parsec, utf8-string }:
     mkDerivation {
       pname = "UMM";
       version = "0.3.1";
       sha256 = "0k9kvlkcznk6ydfcymzzh0a4j4zkl5iblvnx6fkmk8xah1qnkq5h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec utf8-string ];
       homepage = "http://www.korgwal.com/umm/";
       description = "A small command-line accounting tool";
       license = "GPL";
     }) {};

  "URLT" = callPackage
    ({ mkDerivation, applicative-extras, Consumer, happstack-server
     , hsp, hsx, mtl, QuickCheck, regular
     }:
     mkDerivation {
       pname = "URLT";
       version = "0.14";
       sha256 = "14qlyrc3ins3lwhd2c8lyhm1j3v6nj4qgs5g9xys4w6hnndz2g3s";
       buildDepends = [
         applicative-extras Consumer happstack-server hsp hsx mtl QuickCheck
         regular
       ];
       description = "Library for maintaining correctness of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "URLb" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "URLb";
       version = "0.0.1";
       sha256 = "1l62z7798bby4fbrz62ic802g8zah3flb2pmsd3ky7y5903s3nxr";
       buildDepends = [ attoparsec ];
       homepage = "http://github.com/solidsnack/URLb";
       description = "DEPRECATED A simple, liberal URL parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Unique" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Unique";
       version = "0.2";
       sha256 = "0qylqb71gkvfwnnz4ij22x79y583y409fszqnyqd6dc90gycfm98";
       description = "It provides the functionality like unix \"uniq\" utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Unixutils" = callPackage
    ({ mkDerivation, filepath, pureMD5, regex-tdfa, zlib }:
     mkDerivation {
       pname = "Unixutils";
       version = "1.52";
       sha256 = "1gp04mc6irycwazykl9kpyhkkryn3hbnpn08ih6cjbsm3p8yi8b4";
       editedCabalFile = "0cbx658ljjdvpbfc3cmll4xlw0vzsij0v4g0xs89fraawmvpi2mi";
       buildDepends = [ filepath pureMD5 regex-tdfa zlib ];
       homepage = "https://github.com/seereason/haskell-unixutils";
       description = "A crude interface between Haskell and Unix-like operating systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Unixutils-shadow" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Unixutils-shadow";
       version = "1.0.0";
       sha256 = "11m8lgq2rjvh7j8si7sqixf4k4ns65jy0zp6apqp0xc23c1znyr7";
       homepage = "http://src.seereason.com/haskell-unixutils-shadow";
       description = "A simple interface to shadow passwords (aka, shadow.h)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "UrlDisp" = callPackage
    ({ mkDerivation, cgi, MaybeT, mtl }:
     mkDerivation {
       pname = "UrlDisp";
       version = "0.1.7";
       sha256 = "1y21v5k7s9sj8z5r3czp5i80x40zvyqxzr1xl28ardwj5q5rrvzp";
       buildDepends = [ cgi MaybeT mtl ];
       homepage = "http://www.haskell.org/haskellwiki/UrlDisp";
       description = "Url dispatcher. Helps to retain friendly URLs in web applications.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Useful" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "Useful";
       version = "0.0.6";
       sha256 = "01xb68qh29q6b0pdxvadqw7q1p855k14jdz1qjlhg6785n0qp954";
       buildDepends = [ random ];
       description = "Some useful functions and shorthands";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "UtilityTM" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "UtilityTM";
       version = "0.0.4";
       sha256 = "1mjy3w4sw32rbmm13yhmpidfsj91v3p58jvki16z0kzk3fswpa85";
       homepage = "https://github.com/tonymorris/utility-tm";
       description = "Utility functions that are missing from the standard library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "VKHS" = callPackage
    ({ mkDerivation, aeson, bimap, curl, failure, filepath, mtl
     , optparse-applicative, parsec, pretty-show, regexpr, safe, split
     , tagsoup, tagsoup-parsec, text, time, transformers, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "VKHS";
       version = "0.5.1";
       sha256 = "118af4y7vgwxnblgrqza869f1xcqq1nh6006w9vs2mys4vddchcy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson bimap failure filepath mtl optparse-applicative parsec
         pretty-show regexpr safe split tagsoup tagsoup-parsec text time
         transformers utf8-string vector
       ];
       extraLibraries = [ curl ];
       homepage = "http://github.com/ierton/vkhs";
       description = "Provides access to Vkontakte social network via public API";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) curl; };

  "Validation" = callPackage
    ({ mkDerivation, bifunctors, semigroupoids, semigroups }:
     mkDerivation {
       pname = "Validation";
       version = "0.2.0";
       sha256 = "10smif8y5bgjiarag3ws131kwji32mlh6mqfnmmp20xf41fsm0z3";
       buildDepends = [ bifunctors semigroupoids semigroups ];
       homepage = "https://github.com/tonymorris/validation";
       description = "A data-type like Either but with an accumulating Applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Vec" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Vec";
       version = "1.0.5";
       sha256 = "0hyk553pdn72zc1i82njz3md8ycmzfiwi799y08qr3fg0i8r88zm";
       homepage = "http://github.net/sedillard/Vec";
       description = "Fixed-length lists and low-dimensional linear algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Vec-Boolean" = callPackage
    ({ mkDerivation, Boolean, Vec }:
     mkDerivation {
       pname = "Vec-Boolean";
       version = "1.0.6";
       sha256 = "0zxxpychddmlrv7r190gn4dl282ak4qfk2d92l24qxi9fds1rshk";
       buildDepends = [ Boolean Vec ];
       description = "Provides Boolean instances for the Vec package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Vec-OpenGLRaw" = callPackage
    ({ mkDerivation, OpenGLRaw, Vec }:
     mkDerivation {
       pname = "Vec-OpenGLRaw";
       version = "0.2.0.1";
       sha256 = "0qsi1s8qp3fkr5alh2m7y1a1lm5xypjvmk174ywf0aga2y20bblm";
       buildDepends = [ OpenGLRaw Vec ];
       homepage = "http://www.downstairspeople.org/darcs/Vec-opengl";
       description = "Instances and functions to interoperate Vec and OpenGL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Vec-Transform" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Vec-Transform";
       version = "1.1";
       sha256 = "0jwi9kgij8xd0419nkksgffwcn94fz6ijdq8s29b771409a1pkfc";
       homepage = "https://github.com/tobbebex/Vec-Transform";
       description = "This package is obsolete";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "VecN" = callPackage
    ({ mkDerivation, Peano }:
     mkDerivation {
       pname = "VecN";
       version = "0.0.2";
       sha256 = "1hv8idxv9gniwwjs67q75bbcc5ry9r05cxjmsxk0q54l8zscdss2";
       buildDepends = [ Peano ];
       description = "a simple peano-indexed vector type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ViennaRNA-bindings" = callPackage
    ({ mkDerivation, c2hs }:
     mkDerivation {
       pname = "ViennaRNA-bindings";
       version = "0.1.2.2";
       sha256 = "06zz3svdsy6qzbj7s02sbifkprmm58r14ss46r6680c9ybw9w5l3";
       buildTools = [ c2hs ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "ViennaRNA v2 bindings";
       license = "unknown";
     }) {};

  "WAVE" = callPackage
    ({ mkDerivation, parseargs }:
     mkDerivation {
       pname = "WAVE";
       version = "0.1.3";
       sha256 = "1cgla9y1lwcsdad5qdspymd7s6skdw961fgzh02kvi7gjbrrcyi7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parseargs ];
       homepage = "http://github.com/BartMassey/WAVE";
       description = "WAVE audio file IO library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WL500gPControl" = callPackage
    ({ mkDerivation, filepath, mtl, WL500gPLib }:
     mkDerivation {
       pname = "WL500gPControl";
       version = "0.3.4";
       sha256 = "0gbjb432758wvd3p5brb4kjn037x6h30bzvn9f681pg0m1w52hgv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl WL500gPLib ];
       description = "A simple command line tools to control the Asus WL500gP router";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WL500gPLib" = callPackage
    ({ mkDerivation, curl, mtl, tagsoup }:
     mkDerivation {
       pname = "WL500gPLib";
       version = "0.3.1";
       sha256 = "15w065yg8hjhljgnmx88fnryhbh7dysmsqmpr9qnj96as7vrkwgs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ curl mtl tagsoup ];
       description = "A simple library to access to the WL 500gP router from the Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WMSigner" = callPackage
    ({ mkDerivation, base64-bytestring, binary, cryptohash, hspec, lens
     , mtl, random, split, vector
     }:
     mkDerivation {
       pname = "WMSigner";
       version = "0.1.0.0";
       sha256 = "0im8rfyfnhq2s445cjm4xvnqqs8pgpavhmyk98jqshpfm9d1cd6q";
       buildDepends = [
         base64-bytestring binary cryptohash lens mtl random split vector
       ];
       testDepends = [ cryptohash hspec lens random split vector ];
       description = "WebMoney authentication module";
       license = stdenv.lib.licenses.mit;
     }) {};

  "WURFL" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "WURFL";
       version = "0.1";
       sha256 = "13vfszyfyxwz4zi8zilifd0jad1gwlr75x931q8qbpi1kwr7mivk";
       buildDepends = [ parsec ];
       description = "Convert the WURFL file into a Parsec parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WXDiffCtrl" = callPackage
    ({ mkDerivation, wx, wxcore }:
     mkDerivation {
       pname = "WXDiffCtrl";
       version = "0.0.1";
       sha256 = "0vv8s483g3dkxyk833cjczj0a5zxiy9xh56kij6n0jjyzxb9bz0k";
       buildDepends = [ wx wxcore ];
       homepage = "http://wewantarock.wordpress.com";
       description = "WXDiffCtrl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WashNGo" = callPackage
    ({ mkDerivation, ghc-paths, parsec, regex-compat }:
     mkDerivation {
       pname = "WashNGo";
       version = "2.12.0.1";
       sha256 = "11d9cwqfpvf999a5fi3a3v5b4gdrszzgf4gbdhx63afy42ylbnfj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ghc-paths parsec regex-compat ];
       homepage = "http://www.informatik.uni-freiburg.de/~thiemann/haskell/WASH/";
       description = "WASH is a family of EDSLs for programming Web applications in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WebBits" = callPackage
    ({ mkDerivation, mtl, parsec, syb }:
     mkDerivation {
       pname = "WebBits";
       version = "2.2";
       sha256 = "1frmnjbpgm76dzs1p4766fb6isqc3pxv4dnj8sdhnfliv5j0xv2z";
       buildDepends = [ mtl parsec syb ];
       homepage = "http://github.com/brownplt/webbits";
       description = "JavaScript analysis tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WebBits-Html" = callPackage
    ({ mkDerivation, mtl, parsec, syb, WebBits }:
     mkDerivation {
       pname = "WebBits-Html";
       version = "1.0.2";
       sha256 = "18dd52970cd27kra4l89vvrx2mrdbqd4w4f76xrq3142daxsagal";
       buildDepends = [ mtl parsec syb WebBits ];
       homepage = "http://www.cs.brown.edu/research/plt/";
       description = "JavaScript analysis tools";
       license = "LGPL";
     }) {};

  "WebBits-multiplate" = callPackage
    ({ mkDerivation, multiplate, multiplate-simplified, transformers
     , WebBits
     }:
     mkDerivation {
       pname = "WebBits-multiplate";
       version = "0.0.0.1";
       sha256 = "1j3difi3f1w6bgbnsvqw9cv88aikin22myli0lx29pqn7xhqsbv3";
       buildDepends = [
         multiplate multiplate-simplified transformers WebBits
       ];
       description = "A Multiplate instance for JavaScript";
       license = stdenv.lib.licenses.mit;
     }) {};

  "WebCont" = callPackage
    ({ mkDerivation, applicative-extras, concatenative, formlets
     , happstack-server, happstack-state, happstack-util, mtl
     , utf8-string, xhtml
     }:
     mkDerivation {
       pname = "WebCont";
       version = "0.0.1";
       sha256 = "1lr5iz0kqhr8w0c7038mlbysw1c3lbzfjis085n68ib104ykyyi6";
       buildDepends = [
         applicative-extras concatenative formlets happstack-server
         happstack-state happstack-util mtl utf8-string xhtml
       ];
       homepage = "http://patch-tag.com/r/salazar/webconts/snapshot/current/content/pretty";
       description = "Continuation based web programming for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WeberLogic" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "WeberLogic";
       version = "0.1.2";
       sha256 = "0nl79q3y2qi0xnkppxj8d9h96hfwrgb3gksm2x1zp9lq7836562z";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec ];
       homepage = "https://github.com/cameronbwhite/WeberLogic";
       description = "Logic interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Webrexp" = callPackage
    ({ mkDerivation, aeson, filepath, HaXml, HTTP, hxt, mtl, network
     , parsec, regex-pcre-builtin, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "Webrexp";
       version = "1.1.2";
       sha256 = "1iv969gd4xmagw74i6fmw4d864zxlzi4yf0y9ns1nvijn7w7s5jb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson filepath HaXml HTTP hxt mtl network parsec regex-pcre-builtin
         text transformers unordered-containers vector
       ];
       description = "Regexp-like engine to scrap web data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Wheb" = callPackage
    ({ mkDerivation, blaze-builder, case-insensitive, cookie
     , http-types, HUnit, mtl, pwstore-fast, QuickCheck, stm
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, time, transformers, uuid, wai, wai-extra, wai-websockets
     , warp, web-routes, websockets
     }:
     mkDerivation {
       pname = "Wheb";
       version = "0.3.1.0";
       sha256 = "13x204lz2azfrry38w791rni2d0g9xsg5lhajrkrgfhdn56yrzqs";
       buildDepends = [
         blaze-builder case-insensitive cookie http-types mtl pwstore-fast
         stm text time transformers uuid wai wai-extra wai-websockets warp
         web-routes websockets
       ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/hansonkd/Wheb-Framework";
       description = "The frictionless WAI Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WikimediaParser" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "WikimediaParser";
       version = "0.1";
       sha256 = "0rzpf8z414qvkbks16zizsxsinvbdxbm1n0dbav11p286791xx1j";
       buildDepends = [ parsec ];
       description = "A parser for wikimedia style article markup";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32" = callPackage
    ({ mkDerivation, advapi32, gdi32, shell32, shfolder, user32, winmm
     }:
     mkDerivation {
       pname = "Win32";
       version = "2.3.0.2";
       sha256 = "0s2hp50yb91cmj78shpp7s7v096y6lnipk4j7h3lxph3zgj06zsi";
       extraLibraries = [ advapi32 gdi32 shell32 shfolder user32 winmm ];
       homepage = "https://github.com/haskell/win32";
       description = "A binding to part of the Win32 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32-dhcp-server" = callPackage
    ({ mkDerivation, text, Win32, Win32-errors }:
     mkDerivation {
       pname = "Win32-dhcp-server";
       version = "0.2.1";
       sha256 = "1y2war9adqkwc3zy2g45nvg7ccp4axdbjkn54mnhf34q6n4dwwg8";
       buildDepends = [ text Win32 Win32-errors ];
       homepage = "http://github.com/mikesteele81/win32-dhcp-server";
       description = "Win32 DHCP Server Management API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32-errors" = callPackage
    ({ mkDerivation, text, Win32 }:
     mkDerivation {
       pname = "Win32-errors";
       version = "0.2.1";
       sha256 = "13rqqk06r3rc9j6j72qcna26lj0r2fbrzys9zgr91knik9msl5di";
       buildDepends = [ text Win32 ];
       homepage = "http://github.com/mikesteele81/win32-errors";
       description = "Alternative error handling for Win32 foreign calls";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32-extras" = callPackage
    ({ mkDerivation, imm32, msimg32, Win32 }:
     mkDerivation {
       pname = "Win32-extras";
       version = "0.2.0.1";
       sha256 = "00lrqvsa74mqv0k4yz00j2jdpmchkyhcicqv24z9a53iv1i0xp7h";
       buildDepends = [ Win32 ];
       extraLibraries = [ imm32 msimg32 ];
       homepage = "http://hub.darcs.net/shelarcy/Win32-extras/";
       description = "Provides missing Win32 API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32-junction-point" = callPackage
    ({ mkDerivation, text, Win32, Win32-errors }:
     mkDerivation {
       pname = "Win32-junction-point";
       version = "0.2";
       sha256 = "1cbk6d47h83pp77522j55yy90vhi0d1jjb7rd1s98k6422fb316s";
       buildDepends = [ text Win32 Win32-errors ];
       homepage = "http://github.com/mikesteele81/Win32-junction-point";
       description = "Support for manipulating NTFS junction points";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32-notify" = callPackage
    ({ mkDerivation, Win32 }:
     mkDerivation {
       pname = "Win32-notify";
       version = "0.3";
       sha256 = "0mykxfasrl44fg7d7dzi0kabcsxhq3pa86pcy53ppgskn42g8x80";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Win32 ];
       description = "A binding to part of the Win32 library for file notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32-services" = callPackage
    ({ mkDerivation, Advapi32, errors, Win32 }:
     mkDerivation {
       pname = "Win32-services";
       version = "0.2.4";
       sha256 = "006aiikccdgbv6m84z3wkkd3g5yn6zy85lb25b6c7r3rwxqm34d1";
       buildDepends = [ errors Win32 ];
       extraLibraries = [ Advapi32 ];
       homepage = "http://github.com/mikesteele81/win32-services";
       description = "Windows service applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Win32-services-wrapper" = callPackage
    ({ mkDerivation, filepath, Win32, Win32-services }:
     mkDerivation {
       pname = "Win32-services-wrapper";
       version = "0.1.2.0";
       sha256 = "01fvb9sraqw1ar5pvs8s23y8syix50wh6yifsm65fs4vy1nk3xfb";
       buildDepends = [ filepath Win32 Win32-services ];
       description = "Wrapper code for making a Win32 service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Wired" = callPackage
    ({ mkDerivation, chalmers-lava2000, mtl, QuickCheck }:
     mkDerivation {
       pname = "Wired";
       version = "0.3";
       sha256 = "14zxf849r4k3mk5i5rakfjp2f216sz84ww4hfggq9cnr9w8j406j";
       buildDepends = [ chalmers-lava2000 mtl QuickCheck ];
       homepage = "http://www.cse.chalmers.se/~emax/wired/";
       description = "Wire-aware hardware description";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WordNet" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "WordNet";
       version = "1.1.0";
       sha256 = "0b44xxkihafzsw25xx484xxw17zlzzqbj0bx8cs2nvf3p7jxd02k";
       buildDepends = [ filepath ];
       description = "Haskell interface to the WordNet database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WordNet-ghc74" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "WordNet-ghc74";
       version = "0.1.3";
       sha256 = "1ab5wybawa3dfq89dn0g3zdhsqd03bcm3qky2d4z6irw7afdqrr8";
       buildDepends = [ filepath ];
       description = "Haskell interface to the WordNet database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Wordlint" = callPackage
    ({ mkDerivation, boxes, cmdargs }:
     mkDerivation {
       pname = "Wordlint";
       version = "0.1.0.2";
       sha256 = "0v3kl5cfwjigrhxw534h628qlzw52w6gd4n6ri8cqjmvkgklr5vp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ boxes cmdargs ];
       homepage = "https://github.com/gbgar/Wordlint";
       description = "Plaintext prose redundancy linter";
       license = "unknown";
     }) {};

  "Workflow" = callPackage
    ({ mkDerivation, binary, exceptions, extensible-exceptions, mtl
     , RefSerialize, stm, TCache, vector
     }:
     mkDerivation {
       pname = "Workflow";
       version = "0.8.1";
       sha256 = "0z23g68gcbbn43i78cql4is9js3m4z16rm2x8s57f73n0hx7f00l";
       buildDepends = [
         binary exceptions extensible-exceptions mtl RefSerialize stm TCache
         vector
       ];
       description = "Workflow patterns over a monad for thread state logging & recovery";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "WxGeneric" = callPackage
    ({ mkDerivation, mtl, SybWidget, wx, wxcore, xtc }:
     mkDerivation {
       pname = "WxGeneric";
       version = "0.8.1";
       sha256 = "0lvbdmb1qwsz8bz0z715nzgbpshfckm4syk1ny52akkb4ddkrd60";
       buildDepends = [ mtl SybWidget wx wxcore xtc ];
       homepage = "http://www.haskell.org/haskellwiki/WxGeneric";
       description = "Generic (SYB3) construction of wxHaskell widgets";
       license = "LGPL";
     }) {};

  "X11" = callPackage
    ({ mkDerivation, data-default, libX11, libXext, libXinerama
     , libXrandr, libXrender
     }:
     mkDerivation {
       pname = "X11";
       version = "1.6.1.2";
       sha256 = "1kzjcynm3rr83ihqx2y2d852jc49da4p18gv6jzm7g87z22x85jj";
       buildDepends = [ data-default ];
       extraLibraries = [
         libX11 libXext libXinerama libXrandr libXrender
       ];
       homepage = "https://github.com/haskell-pkg-janitors/X11";
       description = "A binding to the X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "X11-extras" = callPackage
    ({ mkDerivation, libX11, X11 }:
     mkDerivation {
       pname = "X11-extras";
       version = "0.4";
       sha256 = "1cpjr09gddcjd0wqwvaankv1zj7fyc6hbfdvar63f51g3vvw627a";
       buildDepends = [ X11 ];
       extraLibraries = [ libX11 ];
       description = "Missing bindings to the X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "X11-rm" = callPackage
    ({ mkDerivation, X11 }:
     mkDerivation {
       pname = "X11-rm";
       version = "0.2";
       sha256 = "11jxlaad9jgjddd5v8ygy2rdrajrbm9dlp6f0mslvxa2wzn4v4r3";
       buildDepends = [ X11 ];
       description = "A binding to the resource management functions missing from X11";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "X11-xdamage" = callPackage
    ({ mkDerivation, X11, Xdamage }:
     mkDerivation {
       pname = "X11-xdamage";
       version = "0.1.2";
       sha256 = "0r6dq9xx0v100162y7bvkj1l0lv5m697y35c659kgjj0mg8p9bjv";
       buildDepends = [ X11 ];
       extraLibraries = [ Xdamage ];
       homepage = "http://darcs.haskell.org/X11-xdamage";
       description = "A binding to the Xdamage X11 extension library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "X11-xfixes" = callPackage
    ({ mkDerivation, X11, Xfixes }:
     mkDerivation {
       pname = "X11-xfixes";
       version = "0.1.1";
       sha256 = "0wwhyqqybrjvy8mi5d5429wraky93xq348gr9ldhg2qj95hj13yk";
       buildDepends = [ X11 ];
       extraLibraries = [ Xfixes ];
       homepage = "https://github.com/reacocard/x11-xfixes";
       description = "A binding to the Xfixes X11 extension library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "X11-xft" = callPackage
    ({ mkDerivation, fontconfig, freetype, libXft, pkgconfig
     , utf8-string, X11
     }:
     mkDerivation {
       pname = "X11-xft";
       version = "0.3.1";
       sha256 = "1lgqb0s2qfwwgbvwxhjbi23rbwamzdi0l0slfr20c3jpcbp3zfjf";
       buildDepends = [ utf8-string X11 ];
       extraLibraries = [ fontconfig freetype pkgconfig ];
       pkgconfigDepends = [ libXft ];
       configureFlags = "--extra-include-dirs=${freetype}/include/freetype2";
       description = "Bindings to the Xft, X Free Type interface library, and some Xrender parts";
       license = "LGPL";
     }) {};

  "X11-xshape" = callPackage
    ({ mkDerivation, X11 }:
     mkDerivation {
       pname = "X11-xshape";
       version = "0.1.1";
       sha256 = "19p71lc0hihfn0xzl29j01kd0zf9yalspwj7dava0ybc1rm3g62h";
       buildDepends = [ X11 ];
       homepage = "http://darcs.haskell.org/X11-xshape";
       description = "A binding to the Xshape X11 extension library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "XAttr" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "XAttr";
       version = "0.1.1";
       sha256 = "16vap0rw026lgxfcqpdfsx7l26ik97rhkkv1mg2j61akydhijs67";
       description = "Read, set, and list extended attributes";
       license = "GPL";
     }) {};

  "XInput" = callPackage
    ({ mkDerivation, Win32, xinput }:
     mkDerivation {
       pname = "XInput";
       version = "0.1";
       sha256 = "1kk0gccv83mw8463x29c7rpl5davmhk9vyf82i4rbksgrdzkhjh9";
       buildDepends = [ Win32 ];
       extraLibraries = [ xinput ];
       homepage = "http://code.fac9.com/xinput/";
       description = "Bindings for the DirectX XInput library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "XMMS" = callPackage
    ({ mkDerivation, xmmsclient, xmmsclient-glib }:
     mkDerivation {
       pname = "XMMS";
       version = "0.1.1";
       sha256 = "08l53b0wp6v9wjfn53xfa1vlh64bnqidajc4lzlk8p31km1c09qx";
       extraLibraries = [ xmmsclient xmmsclient-glib ];
       homepage = "http://kawais.org.ua/XMMS/";
       description = "XMMS2 client library";
       license = "LGPL";
     }) {};

  "XMPP" = callPackage
    ({ mkDerivation, hsdns, mtl, network, parsec, random, utf8-string
     }:
     mkDerivation {
       pname = "XMPP";
       version = "0.1.2";
       sha256 = "03gypa9kln2v3zqyxszn4k2x364g8wj0hppsy10ywmandghsvn7b";
       buildDepends = [ hsdns mtl network parsec random utf8-string ];
       homepage = "http://kagami.touhou.ru/projects/show/matsuri";
       description = "XMPP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "XSaiga" = callPackage
    ({ mkDerivation, cgi, hsparql, rdf4h, text }:
     mkDerivation {
       pname = "XSaiga";
       version = "1.0.0.0";
       sha256 = "0smf0ym26kv0fa34plnsndxp5hflc7w6g0wbkg6n4cy9bz4sgd4z";
       editedCabalFile = "13s84vvs59zzhr5mlpvh7w7haalirs6p9hfjj80ivm8ha1xhjlm1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cgi hsparql rdf4h text ];
       homepage = "http://hafiz.myweb.cs.uwindsor.ca/proHome.html";
       description = "An implementation of a polynomial-time top-down parser suitable for NLP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Xauth" = callPackage
    ({ mkDerivation, xau }:
     mkDerivation {
       pname = "Xauth";
       version = "0.1";
       sha256 = "1mvflp6y1nz9961gngbwk0b7wr8sx3p6296jfvvb6ln1kvm2scxs";
       pkgconfigDepends = [ xau ];
       description = "A binding to the X11 authentication library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Xec" = callPackage
    ({ mkDerivation, binary, cairo, filepath, gtk, mtl, SHA }:
     mkDerivation {
       pname = "Xec";
       version = "0.1.6";
       sha256 = "1n3y232v9i5jzbshk2zw675g09snc45ni60acmi6kvfsk7nkmfw8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary cairo filepath gtk mtl SHA ];
       description = "Gtk command launcher with identicon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "XmlHtmlWriter" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "XmlHtmlWriter";
       version = "0.0.0.1";
       sha256 = "0dv5nvvqy6w0ndjyab4bwhjpw1hlx8xi4bv2jw4rl8v6y68bilk1";
       buildDepends = [ mtl transformers ];
       homepage = "http://github.com/mmirman/haskogeneous/tree/XmlHtmlWriter";
       description = "A library for writing XML and HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "YACPong" = callPackage
    ({ mkDerivation, data-accessor-transformers, fclabels, monads-fd
     , random, SDL, SDL-image, SDL-mixer, SDL-ttf, transformers
     }:
     mkDerivation {
       pname = "YACPong";
       version = "0.1";
       sha256 = "1r2n1vbzq755p68fzb5f6fm1yjfq2c5jgx52ri9p5rlrwmfk3hw5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-accessor-transformers fclabels monads-fd random SDL SDL-image
         SDL-mixer SDL-ttf transformers
       ];
       homepage = "http://github.com/snkkid/YACPong";
       description = "Yet Another Pong Clone using SDL";
       license = stdenv.lib.licenses.mit;
     }) {};

  "YFrob" = callPackage
    ({ mkDerivation, HGL, Yampa }:
     mkDerivation {
       pname = "YFrob";
       version = "0.4";
       sha256 = "17pp79yr8jfmhx85vlr5kx7q5wha48p3ra7l4ligd583yxzvlnif";
       buildDepends = [ HGL Yampa ];
       homepage = "http://www.haskell.org/yampa/";
       description = "Yampa-based library for programming robots";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Yablog" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, case-insensitive
     , clientsession, conduit, data-default, filepath, hamlet, hjsmin
     , http-conduit, http-types, mime-mail, monad-control, mtl, network
     , pandoc, pandoc-types, persistent, persistent-mongoDB, resourcet
     , shakespeare-css, shakespeare-js, shakespeare-text, temporary
     , text, time, wai, wai-extra, xml-conduit, xml-hamlet, yaml, yesod
     , yesod-auth, yesod-core, yesod-default, yesod-form, yesod-newsfeed
     , yesod-platform, yesod-recaptcha, yesod-static
     }:
     mkDerivation {
       pname = "Yablog";
       version = "0.2.0";
       sha256 = "0qa7m9y3dclr2r2vpd2cmpc58nib158hnr49hrdjvk00ncd4lyvk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-html case-insensitive clientsession conduit
         data-default filepath hamlet hjsmin http-conduit http-types
         mime-mail monad-control mtl network pandoc pandoc-types persistent
         persistent-mongoDB resourcet shakespeare-css shakespeare-js
         shakespeare-text temporary text time wai wai-extra xml-conduit
         xml-hamlet yaml yesod yesod-auth yesod-core yesod-default
         yesod-form yesod-newsfeed yesod-platform yesod-recaptcha
         yesod-static
       ];
       homepage = "http://gitweb.konn-san.com/repo/Yablog/tree/master";
       description = "A simple blog engine powered by Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "YamlReference" = callPackage
    ({ mkDerivation, dlist, HUnit, regex-compat }:
     mkDerivation {
       pname = "YamlReference";
       version = "0.9.3";
       sha256 = "0nk7zw3ikv459hzrs0si06j4qf2yrgggsiv8vpm0r1lg5v5l3vng";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ dlist HUnit regex-compat ];
       homepage = "http://www.ben-kiki.org/oren/YamlReference";
       description = "YAML reference implementation";
       license = "LGPL";
     }) {};

  "Yampa" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "Yampa";
       version = "0.9.6";
       sha256 = "0a1m0sb0i3kkxbp10vpqd6iw83ksm4alavrg04arzrv71p3skyg0";
       buildDepends = [ random ];
       homepage = "http://www.haskell.org/haskellwiki/Yampa";
       description = "Library for programming hybrid systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "YampaSynth" = callPackage
    ({ mkDerivation, HCodecs, Yampa }:
     mkDerivation {
       pname = "YampaSynth";
       version = "0.2";
       sha256 = "028a7lrfyikvky52s19kffssnry1grnip3sm7z55bs5fazma1im1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HCodecs Yampa ];
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "Software synthesizer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Yocto" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "Yocto";
       version = "0.1.0";
       sha256 = "1krp17rw25b7a280rf3idpfzkx39kpfcjqwznz96y0d2sdqbhg6p";
       buildDepends = [ parsec ];
       homepage = "https://github.com/ajg/yocto";
       description = "A Minimal JSON Parser & Printer for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "Yogurt" = callPackage
    ({ mkDerivation, mtl, network, readline, regex-posix, syb, time }:
     mkDerivation {
       pname = "Yogurt";
       version = "0.4.1";
       sha256 = "04fzixjgsn0azx2dp352kipxdijfafsm5dnrcvxpxdxms35npffq";
       buildDepends = [ mtl network readline regex-posix syb time ];
       homepage = "http://code.google.com/p/yogurt-mud/";
       description = "A MUD client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Yogurt-Standalone" = callPackage
    ({ mkDerivation, hint, mtl, network, readline, regex-posix, syb
     , time, Yogurt
     }:
     mkDerivation {
       pname = "Yogurt-Standalone";
       version = "0.4";
       sha256 = "151kamqwdwnhinvsmzdq9ckryyvnrf9ihzw6qm4j851y375452hl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hint mtl network regex-posix syb time Yogurt ];
       extraLibraries = [ readline ];
       homepage = "http://code.google.com/p/yogurt-mud/";
       description = "A functional MUD client";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) readline; };

  "ZFS" = callPackage
    ({ mkDerivation, CC-delcont, mtl, network }:
     mkDerivation {
       pname = "ZFS";
       version = "0.0.2";
       sha256 = "1mwpcgkw1cci2grhb8vl081wykkgsmfbanwapp10mrzzp0df1yzr";
       buildDepends = [ CC-delcont mtl network ];
       homepage = "https://github.com/jkarni/ZipperFS";
       description = "Oleg's Zipper FS";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "ZMachine" = callPackage
    ({ mkDerivation, gtk, mtl, random }:
     mkDerivation {
       pname = "ZMachine";
       version = "0.0";
       sha256 = "1s005k892z9651mr2jj0jdwpm8aa0y72vi405xi4h6czg52i4rb3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk mtl random ];
       description = "A Z-machine interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ZipFold" = callPackage
    ({ mkDerivation, TypeCompose }:
     mkDerivation {
       pname = "ZipFold";
       version = "0.1.4";
       sha256 = "05cnpl9c6i0j8jqr4j43b32jgryv34gahimhp9g1m45idgnl2sn0";
       buildDepends = [ TypeCompose ];
       homepage = "http://haskell.org/haskellwiki/ZipFold";
       description = "Zipping folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ZipperAG" = callPackage
    ({ mkDerivation, syz }:
     mkDerivation {
       pname = "ZipperAG";
       version = "0.9";
       sha256 = "0nl08r7s3r5hr5jag499fillca16wsb8yqz1dlzydvacqcklcxr9";
       buildDepends = [ syz ];
       homepage = "www.di.uminho.pt/~prmartins";
       description = "An implementationg of Attribute Grammars using Functional Zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Zora" = callPackage
    ({ mkDerivation, fgl, graphviz, random, shelly, text }:
     mkDerivation {
       pname = "Zora";
       version = "1.1.19";
       sha256 = "0sqnb3jkf584v4cf61i2qivk6786b2hkjglj62gyll3069yxnzzk";
       buildDepends = [ fgl graphviz random shelly text ];
       homepage = "http://github.com/bgwines/zora";
       description = "Graphing library wrapper + assorted useful functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "Zwaluw" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "Zwaluw";
       version = "0.1";
       sha256 = "1crvcvni5gzpc1c6cnaqqp0gng1l9gk9d8ac23967nvp82xav7s1";
       homepage = "https://github.com/MedeaMelana/Zwaluw";
       description = "Combinators for bidirectional URL routing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "a50" = callPackage
    ({ mkDerivation, biofasta, biopsl, cmdargs }:
     mkDerivation {
       pname = "a50";
       version = "0.5";
       sha256 = "0jfnf0rq3rfic196zjwbaiamyis98zrr8d4zn2myjlgqlzhljzs0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ biofasta biopsl cmdargs ];
       homepage = "http://blog.malde.org/index.php/a50-a-graphical-comparison-of-genome-assemblies";
       description = "Compare genome assemblies";
       license = "GPL";
     }) {};

  "abacate" = callPackage
    ({ mkDerivation, HUnit, parsec, text }:
     mkDerivation {
       pname = "abacate";
       version = "0.0.0.0";
       sha256 = "1lxsn3n77fk7jl8i76nffj1zngvi2s38y17s54ha29h8hrp3s3dg";
       buildDepends = [ parsec text ];
       testDepends = [ HUnit text ];
       homepage = "http://github.com/marcotmarcot/abacate";
       description = "Parser for a language similar to Cucumber's Gherkin";
       license = "unknown";
     }) {};

  "abc-puzzle" = callPackage
    ({ mkDerivation, minisat, random, random-shuffle, Safe }:
     mkDerivation {
       pname = "abc-puzzle";
       version = "0.2.1";
       sha256 = "0i162j9wlpcisqzf9klqvag9hrs9v7araw4l16cvw0yrifvqzswd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ minisat random random-shuffle Safe ];
       homepage = "https://github.com/pa-ba/abc-puzzle";
       description = "Generate instances of the ABC Logic Puzzle";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "abcBridge" = callPackage
    ({ mkDerivation, abc, aig, c2hs, QuickCheck, tasty, tasty-ant-xml
     , tasty-hunit, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "abcBridge";
       version = "0.11";
       sha256 = "1wilwysn0rxlg5q971pa3njqmbmn8sdi4zsiqr8mc6aqlckws9b4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aig vector ];
       testDepends = [
         aig QuickCheck tasty tasty-ant-xml tasty-hunit tasty-quickcheck
         vector
       ];
       buildTools = [ c2hs ];
       extraLibraries = [ abc ];
       description = "Bindings for ABC, A System for Sequential Synthesis and Verification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "abcnotation" = callPackage
    ({ mkDerivation, parsec, prettify, semigroups }:
     mkDerivation {
       pname = "abcnotation";
       version = "1.8";
       sha256 = "1j0j2wzn7fr0n3gbcdf531wr5sg7xmrmbm221j5pni9nlqm2hr7x";
       buildDepends = [ parsec prettify semigroups ];
       description = "Haskell representation and parser for ABC notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "abeson" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, bson, data-default-class
     , scientific, text, time, unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "abeson";
       version = "0.1.0.1";
       sha256 = "1g258gfk7sk8hsd4nixah0vj69rwphvv6aywsvdldm8pbw51sy1c";
       buildDepends = [
         aeson base64-bytestring bson data-default-class scientific text
         time unordered-containers uuid vector
       ];
       homepage = "https://github.com/philopon/abeson";
       description = "interconversion between aeson and bson";
       license = stdenv.lib.licenses.mit;
     }) {};

  "abstract-deque" = callPackage
    ({ mkDerivation, random, time }:
     mkDerivation {
       pname = "abstract-deque";
       version = "0.3";
       sha256 = "18jwswjxwzc9bjiy4ds6hw2a74ki797jmfcifxd2ga4kh7ri1ah9";
       buildDepends = [ random time ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Abstract, parameterized interface to mutable Deques";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "abstract-deque-tests" = callPackage
    ({ mkDerivation, abstract-deque, HUnit, random, test-framework
     , test-framework-hunit, time
     }:
     mkDerivation {
       pname = "abstract-deque-tests";
       version = "0.3";
       sha256 = "19gb5x5z3nvazdra3skm24c2g2byj0i4cjbzfwfghnb5q96gn5sz";
       buildDepends = [
         abstract-deque HUnit random test-framework test-framework-hunit
         time
       ];
       testDepends = [
         abstract-deque HUnit random test-framework test-framework-hunit
         time
       ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "A test-suite for any queue or double-ended queue satisfying an interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "abstract-par" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "abstract-par";
       version = "0.3.3";
       sha256 = "0q6qsniw4wks2pw6wzncb1p1j3k6al5njnvm2v5n494hplwqg2i4";
       buildDepends = [ deepseq ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Type classes generalizing the functionality of the 'monad-par' library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "abstract-par-accelerate" = callPackage
    ({ mkDerivation, abstract-par, accelerate, vector }:
     mkDerivation {
       pname = "abstract-par-accelerate";
       version = "0.3.3";
       sha256 = "0k1730mg2vyf21837fc459m8si1ffnbj78cdkbgglp2vn51f3nz4";
       buildDepends = [ abstract-par accelerate vector ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Provides the class ParAccelerate, nothing more";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ac-machine" = callPackage
    ({ mkDerivation, hashable, unordered-containers, vector }:
     mkDerivation {
       pname = "ac-machine";
       version = "0.2.0.5";
       sha256 = "00s2nvd85l00kpl45ipaq4ypa1ymaxmvnaf5mdvdladg4icl50i4";
       buildDepends = [ hashable unordered-containers vector ];
       description = "Aho-Corasick string matching algorithm in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ac-machine-conduit" = callPackage
    ({ mkDerivation, ac-machine, conduit, text }:
     mkDerivation {
       pname = "ac-machine-conduit";
       version = "0.1.0.0";
       sha256 = "1nsnbvllwznbqycw33f09vfgqvqmqfkcbi367clm6k4v6rfswzl3";
       buildDepends = [ ac-machine conduit text ];
       description = "Drive Aho-Corasick machines in Conduit pipelines";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate" = callPackage
    ({ mkDerivation, fclabels, hashable, hashtables
     , unordered-containers
     }:
     mkDerivation {
       pname = "accelerate";
       version = "0.15.0.0";
       sha256 = "1hi3zm1swm9fank9w98009pwcgccw6w2j2ilb970sbxyb0xf8nps";
       editedCabalFile = "0k6damdq8kjxlscrc7rbbag0a05q9vjiyx86rda5lnfvgxya9klq";
       buildDepends = [
         fclabels hashable hashtables unordered-containers
       ];
       homepage = "https://github.com/AccelerateHS/accelerate/";
       description = "An embedded language for accelerated array processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-arithmetic" = callPackage
    ({ mkDerivation, accelerate, accelerate-utility, QuickCheck
     , utility-ht
     }:
     mkDerivation {
       pname = "accelerate-arithmetic";
       version = "0.0.1";
       sha256 = "093j1wdabhws695hfb4cmj05ys6i4hkh0yppkszmhn5z4imlv741";
       buildDepends = [
         accelerate accelerate-utility QuickCheck utility-ht
       ];
       testDepends = [ accelerate QuickCheck ];
       homepage = "http://code.haskell.org/~thielema/accelerate-arithmetic/";
       description = "Linear algebra and interpolation using the Accelerate framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-cublas" = callPackage
    ({ mkDerivation, accelerate, accelerate-arithmetic, accelerate-cuda
     , accelerate-io, accelerate-utility, cublas, cuda, random
     , utility-ht, vector
     }:
     mkDerivation {
       pname = "accelerate-cublas";
       version = "0.0";
       sha256 = "1dcra6qpva8sg5bdh6ilrfdg44h7p6dfh7vkrhifiim4vkvgh9sc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         accelerate accelerate-arithmetic accelerate-cuda accelerate-io
         accelerate-utility cublas cuda random utility-ht vector
       ];
       homepage = "http://code.haskell.org/~thielema/accelerate-cublas/";
       description = "Basic Linear Algebra using native CUBLAS library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-cuda" = callPackage
    ({ mkDerivation, accelerate, binary, cryptohash, cuda, fclabels
     , filepath, hashable, hashtables, language-c-quote, mainland-pretty
     , mtl, SafeSemaphore, srcloc, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "accelerate-cuda";
       version = "0.15.0.0";
       sha256 = "1z8nfciwxm2f2vaddnhan5gi9i1l7qa9h9fsngmdh8d6wabxxidy";
       editedCabalFile = "1z08hzn6wm5y51l7vx1z66qizvb2ch0zfkg2mqzfsq6kq729klay";
       buildDepends = [
         accelerate binary cryptohash cuda fclabels filepath hashable
         hashtables language-c-quote mainland-pretty mtl SafeSemaphore
         srcloc text transformers unordered-containers
       ];
       homepage = "https://github.com/AccelerateHS/accelerate-cuda/";
       description = "Accelerate backend for NVIDIA GPUs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-cufft" = callPackage
    ({ mkDerivation, accelerate, accelerate-cuda, accelerate-fourier
     , accelerate-utility, cuda, cufft
     }:
     mkDerivation {
       pname = "accelerate-cufft";
       version = "0.0";
       sha256 = "12faz5z0k682381fgwav91wx5wny0n5jdzgnrajx3sxc8gpg5xd7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         accelerate accelerate-cuda accelerate-fourier accelerate-utility
         cuda cufft
       ];
       homepage = "http://code.haskell.org/~thielema/accelerate-cufft/";
       description = "Accelerate frontend to the CUFFT library (Fourier transform)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-examples" = callPackage
    ({ mkDerivation, accelerate, accelerate-cuda, accelerate-fft
     , accelerate-io, accelerate-llvm, accelerate-llvm-multidev
     , accelerate-llvm-native, accelerate-llvm-ptx, attoparsec, binary
     , bmp, bytestring-lexing, cereal, criterion, ekg, fclabels
     , filepath, gloss, gloss-accelerate, gloss-raster-accelerate, HUnit
     , mwc-random, normaldistribution, primitive, QuickCheck, random
     , repa, repa-io, test-framework, test-framework-hunit
     , test-framework-quickcheck2, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "accelerate-examples";
       version = "0.15.0.0";
       sha256 = "1jfwb0ryb8idfjc1gccb1h67hl730qn455k5z5wna8aikfscy7rq";
       editedCabalFile = "1k4msxbk7igghm2wpl410francrjbdkd1sbc6fwh56dfjqha1y1c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         accelerate accelerate-cuda accelerate-fft accelerate-io
         accelerate-llvm accelerate-llvm-multidev accelerate-llvm-native
         accelerate-llvm-ptx attoparsec binary bmp bytestring-lexing cereal
         criterion ekg fclabels filepath gloss gloss-accelerate
         gloss-raster-accelerate HUnit mwc-random normaldistribution
         primitive QuickCheck random repa repa-io test-framework
         test-framework-hunit test-framework-quickcheck2 vector
         vector-algorithms
       ];
       configureFlags = "-f-opencl";
       homepage = "https://github.com/AccelerateHS/accelerate-examples";
       description = "Examples using the Accelerate library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-fft" = callPackage
    ({ mkDerivation, accelerate, accelerate-cuda, cuda, cufft }:
     mkDerivation {
       pname = "accelerate-fft";
       version = "0.15.0.0";
       sha256 = "0nxlw8z7bnr29vp24qbbwwmq9rj2q6jqqkmm46pp8dp582y4yk6v";
       editedCabalFile = "1jjkbzqdf05hyd3bb7daq7jwqivq5bx2id8hxcm7ha7m42p96fy2";
       buildDepends = [ accelerate accelerate-cuda cuda cufft ];
       homepage = "https://github.com/AccelerateHS/accelerate-fft";
       description = "FFT using the Accelerate library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-fftw" = callPackage
    ({ mkDerivation, accelerate, accelerate-io, carray, fft
     , storable-complex
     }:
     mkDerivation {
       pname = "accelerate-fftw";
       version = "0.0";
       sha256 = "03ffsa6xshhrx8a4grld128g46x2nkkydwql8h7jw7b2igr7i1ks";
       buildDepends = [
         accelerate accelerate-io carray fft storable-complex
       ];
       homepage = "http://code.haskell.org/~thielema/accelerate-fftw/";
       description = "Accelerate frontend to the FFTW library (Fourier transform)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-fourier" = callPackage
    ({ mkDerivation, accelerate, accelerate-arithmetic
     , accelerate-utility, QuickCheck, transformers, utility-ht
     }:
     mkDerivation {
       pname = "accelerate-fourier";
       version = "0.0";
       sha256 = "0b7cm540im3z9ja7a68sbs5y0ayzbx5h4sbwr437f05qdwkg7b2q";
       buildDepends = [
         accelerate accelerate-arithmetic accelerate-utility QuickCheck
         transformers utility-ht
       ];
       testDepends = [
         accelerate accelerate-arithmetic accelerate-utility QuickCheck
         utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/accelerate-fourier/";
       description = "Fast Fourier transform and convolution using the Accelerate framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-fourier-benchmark" = callPackage
    ({ mkDerivation, accelerate, accelerate-cuda, accelerate-cufft
     , accelerate-fftw, accelerate-fourier, criterion
     }:
     mkDerivation {
       pname = "accelerate-fourier-benchmark";
       version = "0.0";
       sha256 = "1679sn9ajn6fmj9pdgjdr434vcgj05chvn2fld3sri16q3jbqrga";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         accelerate accelerate-cuda accelerate-cufft accelerate-fftw
         accelerate-fourier criterion
       ];
       homepage = "http://code.haskell.org/~thielema/accelerate-fourier-benchmark/";
       description = "Compare different implementations of the Fast Fourier Transform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-io" = callPackage
    ({ mkDerivation, accelerate, bmp, repa, vector }:
     mkDerivation {
       pname = "accelerate-io";
       version = "0.15.0.0";
       sha256 = "00p8jmxsgywhx30nd44pl6hdcr076y2s6z2fsam6sgrmgr0qx936";
       editedCabalFile = "1k0fiizfh9wcadalwic15pvq3ljil8z78ab3ci97c483piz8ygsw";
       buildDepends = [ accelerate bmp repa vector ];
       homepage = "https://github.com/AccelerateHS/accelerate-io";
       description = "Read and write Accelerate arrays in various formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accelerate-utility" = callPackage
    ({ mkDerivation, accelerate, utility-ht }:
     mkDerivation {
       pname = "accelerate-utility";
       version = "0.1";
       sha256 = "1n5hyklil2x2x5bc5z7iq0yz4p8lab8xxdnlwzgjpn3lliq0vgpv";
       buildDepends = [ accelerate utility-ht ];
       homepage = "http://code.haskell.org/~thielema/accelerate-utility/";
       description = "Utility functions for the Accelerate framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "accentuateus" = callPackage
    ({ mkDerivation, HTTP, json, network, text }:
     mkDerivation {
       pname = "accentuateus";
       version = "0.9.4";
       sha256 = "16hgs81cs3zgbvsprh9lzvyxbh58g7rijf1d4j0dkrpnqnrvg0hy";
       buildDepends = [ HTTP json network text ];
       homepage = "http://accentuate.us/";
       description = "A Haskell implementation of the Accentuate.us API.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "access-time" = callPackage
    ({ mkDerivation, filepath, time }:
     mkDerivation {
       pname = "access-time";
       version = "0.1.0.4";
       sha256 = "13kg8mjrnif88r0w7b041x4vmzdm9aqrx4fskc3qv3smpq2q2ngs";
       buildDepends = [ filepath time ];
       homepage = "http://www.github.com/batterseapower/access-time";
       description = "Cross-platform support for retrieving file access times";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ace" = callPackage
    ({ mkDerivation, attoparsec, bifunctors, blaze-html, blaze-markup
     , data-default, hspec, HUnit, mtl, parsec, text
     }:
     mkDerivation {
       pname = "ace";
       version = "0.6";
       sha256 = "0f07j2rj9ylvdrijwwlpx66mj503mhjfq1x2mylpxkr6kmjjniyk";
       buildDepends = [
         attoparsec blaze-html blaze-markup data-default parsec text
       ];
       testDepends = [ bifunctors hspec HUnit mtl parsec text ];
       description = "Attempto Controlled English parser and printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acid-state" = callPackage
    ({ mkDerivation, cereal, extensible-exceptions, filepath, mtl
     , network, safecopy, stm
     }:
     mkDerivation {
       pname = "acid-state";
       version = "0.12.3";
       sha256 = "099n8a5qxrjzhw0jgmshcpkvynkj2v4a8a6lwy9fvg586nhcy9j1";
       buildDepends = [
         cereal extensible-exceptions filepath mtl network safecopy stm
       ];
       homepage = "http://acid-state.seize.it/";
       description = "Add ACID guarantees to any serializable Haskell data structure";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acid-state-tls" = callPackage
    ({ mkDerivation, acid-state, HsOpenSSL, network, safecopy }:
     mkDerivation {
       pname = "acid-state-tls";
       version = "0.9.2";
       sha256 = "04w3r1x3msvsixmdlif99ly4k0py9bzb8pgi06j780zz5lpm1zpi";
       buildDepends = [ acid-state HsOpenSSL network safecopy ];
       homepage = "http://acid-state.seize.it/";
       description = "Add TLS support for Data.Acid.Remote";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acl2" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acl2";
       version = "0.0.1";
       sha256 = "0bwlsdxk3lbir90xhar7xd83cwarqcm0a86gvwaghknpil2ay4cg";
       description = "Writing and calling ACL2 from Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-cadre" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-cadre";
       version = "0.1";
       sha256 = "1nclcq48r547rgmd4h0hf498z27d15lp4da9yb3a3sy7qk6m92bi";
       description = "car, cdr and more";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acme-cofunctor" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-cofunctor";
       version = "0.1.0.0";
       sha256 = "06ii13zfr5iqf0cxaw35mxjxx16q0n7mvbgnqv0gwyfmgm3vxv6m";
       homepage = "https://github.com/jaspervdj/acme-cofunctor";
       description = "A Cofunctor is a structure from category theory dual to Functor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-colosson" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "acme-colosson";
       version = "0.1";
       sha256 = "0mfnav0wb0ks365n3kghaic6nasp3qaznhmsdccx35h164ixj9vc";
       buildDepends = [ random ];
       description = "Determines whether it is numberwang";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-comonad" = callPackage
    ({ mkDerivation, comonad }:
     mkDerivation {
       pname = "acme-comonad";
       version = "0.1.0.0";
       sha256 = "1sc0alwdgfls18y4q4y0qkbzqm4fgzd9yv6dwwnzw3472vsz2x8s";
       buildDepends = [ comonad ];
       description = "A more efficient dualization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-cutegirl" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-cutegirl";
       version = "0.2.0.0";
       sha256 = "1vvhfncnrq4pbzrgq45kannqv1c029b96lvi1qzwvzf513rqfb3z";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/Fuuzetsu/acme-cutegirl";
       description = "Maybe gives you a cute girl";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "acme-dont" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-dont";
       version = "1.1";
       sha256 = "1kj3qjgn1rz093050z49w3js4is9p0g9pk5g7d7wvg28hpzk28n3";
       description = "A don't construct";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-hq9plus" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-hq9plus";
       version = "0.1";
       sha256 = "0da4ysj74fmhcbbvxxfb6w97pr870518k90vwnc3z8kglj1ni187";
       homepage = "http://github.com/joeyadams/haskell-acme-hq9plus";
       description = "An embedded DSL for the HQ9+ programming language";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acme-http" = callPackage
    ({ mkDerivation, extensible-exceptions, mtl, network }:
     mkDerivation {
       pname = "acme-http";
       version = "0.2.2";
       sha256 = "1nmv8ilh783jrp6mxl308ybv032xi833awhsys7svma3l9v5i4gi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ extensible-exceptions mtl network ];
       homepage = "http://www.happstack.com";
       description = "fastest Haskell PONG server in the world";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-inator" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-inator";
       version = "0.1.0.0";
       sha256 = "1h1vdzqarrmb8sl6y6250h6fia4rxi9vz4i4sj7km7nyk3778zyk";
       isLibrary = true;
       isExecutable = true;
       description = "Evil inventions in the Tri-State area";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acme-io" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-io";
       version = "0.1.0.1";
       sha256 = "091czdcbydc75ndaw2ns8cncxa6ihlvclhrbcz9vp29kvhf483cb";
       homepage = "N/A";
       description = "The only true way to do IO in Haskell!";
       license = "unknown";
     }) {};

  "acme-lolcat" = callPackage
    ({ mkDerivation, parsec, random, random-shuffle, text }:
     mkDerivation {
       pname = "acme-lolcat";
       version = "0.1";
       sha256 = "1v071plkm1drjcpg9qpvavpkc4mb2d6sc60jw9dr3qjdyyp3gl18";
       buildDepends = [ parsec random random-shuffle text ];
       homepage = "https://github.com/llelf/acme-lolcat";
       description = "LOLSPEAK translator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-lookofdisapproval" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-lookofdisapproval";
       version = "0.1";
       sha256 = "194xvcab14bs3b3nrayxp4z3da60afxa9cmip58mkms5016kwhis";
       homepage = "https://github.com/llelf/acme-lookofdisapproval";
       description = "Express your disapproval";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-microwave" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-microwave";
       version = "0.1.0.1";
       sha256 = "1kd8qd9pcqk4zsdpkxak02js6wx3spk1k6jbd6zxv42n7szv74ph";
       description = "The eighth wonder of the world, kitchen math!";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-missiles" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "acme-missiles";
       version = "0.3";
       sha256 = "0nvkgdj04i21gq5k541an8zjz0hzzy7dpi384yrhcyh14jsxhqz5";
       buildDepends = [ stm ];
       description = "Cause serious international side effects";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acme-now" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "acme-now";
       version = "1.0.0.1";
       sha256 = "0lnrsndx7r00b7vgh9jmp5j635m4pb2bzx0lfhqidkzfc2llzwsm";
       buildDepends = [ time ];
       description = "An interface to the philosophical and metaphysical \"now\"";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acme-numbersystem" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-numbersystem";
       version = "0.3.0.0";
       sha256 = "1p5rdssdmds6yqgv3yvlh835h180h9q9430j8i6qrhygqn8lmv87";
       description = "Define the less than and add and subtract for nats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-omitted" = callPackage
    ({ mkDerivation, hspec }:
     mkDerivation {
       pname = "acme-omitted";
       version = "2.0.0.0";
       sha256 = "0pj6jlm4i05m0nys8d66d0xfkhfz6gfa9122bsk64xcms5n0hxad";
       testDepends = [ hspec ];
       homepage = "https://github.com/joachifm/acme-omitted#readme";
       description = "A name for omitted definitions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-php" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-php";
       version = "0.0.3";
       sha256 = "091ddg3441ac6hbzd84jzakll7nvz2r6mcfdwxy8d7rd8wx9jdyz";
       description = "The flexibility of Haskell and the safety of PHP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-pointful-numbers" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "acme-pointful-numbers";
       version = "0.1.2.4";
       sha256 = "02gml2db5vigkwkx99lqzjkpfaqdc74x16bgdx62kf7r3nn37my9";
       buildDepends = [ split ];
       description = "Make more than one point in numeric literals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-realworld" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-realworld";
       version = "0.1.1";
       sha256 = "0ffhichjhhic7d5cjypmd2zmcq0dpqiz5ygsw0y67v83hry0vf8r";
       description = "Primitives for manipulating the state of the universe";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-schoenfinkel" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "acme-schoenfinkel";
       version = "0.1.1";
       sha256 = "0jvbrivxpq8jb5rhz6j3pxx2g3d0ckviprp4iza31d6ik7cpk8ad";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
         test-framework-th
       ];
       description = "Proper names for curry and uncurry";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-strfry" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-strfry";
       version = "0.1";
       sha256 = "1r6xnkyx22khzq6hlb8bk0fnbb6hlwbf12wajhx8vcxa7bkhh8lb";
       homepage = "https://github.com/ehird/acme-strfry";
       description = "A binding to the glibc strfry function";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-stringly-typed" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "acme-stringly-typed";
       version = "1.0.0.0";
       sha256 = "18wvsvdmbwh9dcawiy4f9pn4vg98kdq9zxc37sz7dpmaigimw16f";
       description = "Stringly Typed Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "acme-strtok" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "acme-strtok";
       version = "0.1.0.3";
       sha256 = "1anj8yygzcqkl4nwqwbrmwsqda84qcl8yzq7pgx2b7p895xcfa68";
       buildDepends = [ mtl ];
       description = "A Haskell port of the C/PHP strtok function";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "acme-year" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "acme-year";
       version = "2014";
       sha256 = "0zml370s8zv9y60hggv0hlwb3rhmixhdp37cz496dbpffdkw70my";
       testDepends = [ time ];
       homepage = "http://github.com/joeyadams/hs-acme-year";
       description = "Get the current year";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "action-permutations" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "action-permutations";
       version = "0.0.0.1";
       sha256 = "0rhlzpwshixpnqma7sk28f22dkwz39b6lcwnzmd31rcnz5cyw6d4";
       description = "Execute a set of actions (e.g. parsers) in each possible order";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "active" = callPackage
    ({ mkDerivation, newtype, QuickCheck, semigroupoids, semigroups
     , vector-space
     }:
     mkDerivation {
       pname = "active";
       version = "0.1.0.17";
       sha256 = "1asp0han2737vfk92gasij804z4jsw8v2bc0m4nrmn3v80vmh7qb";
       buildDepends = [ newtype semigroupoids semigroups vector-space ];
       testDepends = [
         newtype QuickCheck semigroupoids semigroups vector-space
       ];
       description = "Abstractions for animation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "activehs" = callPackage
    ({ mkDerivation, activehs-base, blaze-html, cmdargs, data-pprint
     , deepseq, dia-base, dia-functions, filepath, haskell-src-exts
     , highlighting-kate, hint, hoogle, mtl, pandoc, pureMD5, QuickCheck
     , simple-reflect, snap-core, snap-server, split, syb, text, time
     , utf8-string, xhtml
     }:
     mkDerivation {
       pname = "activehs";
       version = "0.3.1";
       sha256 = "03za0c24a22fy28mcm173r0cca6fk60jikp0pp817mrq6gpv62hc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         activehs-base blaze-html cmdargs data-pprint deepseq dia-base
         dia-functions filepath haskell-src-exts highlighting-kate hint
         hoogle mtl pandoc pureMD5 QuickCheck simple-reflect snap-core
         snap-server split syb text time utf8-string xhtml
       ];
       description = "Haskell code presentation tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "activehs-base" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "activehs-base";
       version = "0.3.0.2";
       sha256 = "0wsrsxfaspv4xvw4wq3sllicc5v08rgpp1g76p24b9r9ghn7hrdv";
       buildDepends = [ QuickCheck ];
       description = "Basic definitions for activehs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "activitystreams-aeson" = callPackage
    ({ mkDerivation, aeson, text, time, unordered-containers }:
     mkDerivation {
       pname = "activitystreams-aeson";
       version = "0.2.0.1";
       sha256 = "1bprj41552zr1aj0k73c3skdhg8jb60rhcm9p9hjcmy2al9izsag";
       buildDepends = [ aeson text time unordered-containers ];
       description = "An interface to the ActivityStreams specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "actor" = callPackage
    ({ mkDerivation, stm, time }:
     mkDerivation {
       pname = "actor";
       version = "0.1.1";
       sha256 = "1ic74yrfy6hk7217vh2ff6yacvf3dc5m1hjkcpfvxzdk5xhdv2b5";
       buildDepends = [ stm time ];
       homepage = "http://sulzmann.blogspot.com/2008/10/actors-with-multi-headed-receive.html";
       description = "Actors with multi-headed receive clauses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ad" = callPackage
    ({ mkDerivation, comonad, data-reify, doctest, erf, filepath, free
     , nats, reflection, transformers
     }:
     mkDerivation {
       pname = "ad";
       version = "4.2.1.1";
       sha256 = "1zdpfh4k93ygrm91m7lw1la6n4yvaq3k2sqswgia04naf2wcmjka";
       buildDepends = [
         comonad data-reify erf free nats reflection transformers
       ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/ad";
       description = "Automatic Differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adaptive-containers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "adaptive-containers";
       version = "0.3";
       sha256 = "16h0zi55hf9g07xisbcmgkx72m9laiqykh2r9nh2siczx3sxi1qk";
       homepage = "http://code.haskell.org/~dons/code/adaptive-containers";
       description = "Self optimizing container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adaptive-tuple" = callPackage
    ({ mkDerivation, type-level }:
     mkDerivation {
       pname = "adaptive-tuple";
       version = "0.2.0";
       sha256 = "1kf4d3qf8nv61c7pajv234b2vil84c2cq40csnm456lg55qh53r1";
       buildDepends = [ type-level ];
       homepage = "http://inmachina.net/~jwlato/haskell/";
       description = "Self-optimizing tuple types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adb" = callPackage
    ({ mkDerivation, cereal, mtl, network }:
     mkDerivation {
       pname = "adb";
       version = "0.1.0.0";
       sha256 = "17dxvdzmg3i8n0gbgbj0jyhm90w0dq7j27id8n24frild2w4c0d0";
       buildDepends = [ cereal mtl network ];
       description = "Android Debug Bridge (ADB) protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adblock2privoxy" = callPackage
    ({ mkDerivation, Cabal, filepath, http-conduit, MissingH, mtl
     , network, pandoc, pandoc-types, parsec, parsec-permutation, strict
     , text, time
     }:
     mkDerivation {
       pname = "adblock2privoxy";
       version = "1.2.5";
       sha256 = "1rihcx9myh9vihgjivarsdr469j44zslqxix1ggcl9ayj6girnh9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal filepath http-conduit MissingH mtl network pandoc
         pandoc-types parsec parsec-permutation strict text time
       ];
       homepage = "https://projects.zubr.me/wiki/adblock2privoxy";
       description = "Convert adblock config files to privoxy format";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "addLicenseInfo" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "addLicenseInfo";
       version = "0.1";
       sha256 = "054kcm0ibh1qdkyci36w3yxwxln56hz1yvi7gskp636nzhw5sjrw";
       isLibrary = false;
       isExecutable = true;
       description = "Adds license info to the top of a file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adhoc-network" = callPackage
    ({ mkDerivation, Crypto, dataenc, HaXml, hsgnutls, network, parsec
     , pkcs1, random, time, utf8-string, xml-parsec
     }:
     mkDerivation {
       pname = "adhoc-network";
       version = "1.0.3";
       sha256 = "1whdrmxw13nr7bb95rhqaz3klgmcwx4ai51bz5yb38nldf4ac377";
       buildDepends = [
         Crypto dataenc HaXml hsgnutls network parsec pkcs1 random time
         utf8-string xml-parsec
       ];
       homepage = "http://sep07.mroot.net/";
       description = "Ad-hoc P2P network protocol";
       license = "GPL";
     }) {};

  "adict" = callPackage
    ({ mkDerivation, binary, dawg, PSQueue, QuickCheck, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "adict";
       version = "0.4.1";
       sha256 = "07w3595cwlicvwg04w9i5sg1x9d3r8c64pq0yi5pmnza7jpd5vgq";
       buildDepends = [ binary dawg PSQueue vector ];
       testDepends = [
         dawg QuickCheck test-framework test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/kawu/adict";
       description = "Approximate dictionary searching";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adjunctions" = callPackage
    ({ mkDerivation, comonad, contravariant, distributive, free, mtl
     , profunctors, semigroupoids, semigroups, tagged, transformers
     , void
     }:
     mkDerivation {
       pname = "adjunctions";
       version = "4.2";
       sha256 = "07r56r6kyd6wlcxxnsnnyv59pyc8s1gsy54kzwmk9yknks5rij9i";
       buildDepends = [
         comonad contravariant distributive free mtl profunctors
         semigroupoids semigroups tagged transformers void
       ];
       homepage = "http://github.com/ekmett/adjunctions/";
       description = "Adjunctions and representable functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adobe-swatch-exchange" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, language-css, mtl }:
     mkDerivation {
       pname = "adobe-swatch-exchange";
       version = "0.2.0";
       sha256 = "0jc6xwh1m2hmpfclsi27233775kp4yk0wrkr498qx7fs6p7xflpv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary data-binary-ieee754 language-css mtl ];
       homepage = "https://github.com/stepcut/ase2css";
       description = "parse Adobe Swatch Exchange files and (optionally) output .css files with the colors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adp-multi" = callPackage
    ({ mkDerivation, htrace, HUnit, mtl, QuickCheck, random-shuffle
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "adp-multi";
       version = "0.2.3";
       sha256 = "1lmmyxa22lm9a86w0gap8g676mnh5l1kxczbsv8ymb98fzcg6a27";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ htrace ];
       testDepends = [
         htrace HUnit mtl QuickCheck random-shuffle test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://adp-multi.ruhoh.com";
       description = "ADP for multiple context-free languages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "adp-multi-monadiccp" = callPackage
    ({ mkDerivation, adp-multi, monadiccp, mtl, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "adp-multi-monadiccp";
       version = "0.2.1";
       sha256 = "13zlmhgyf46pcnrjwcrk7l6nmrkgqvycrajq3v7z72kjixakis6s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ adp-multi monadiccp ];
       testDepends = [
         adp-multi monadiccp mtl QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://adp-multi.ruhoh.com";
       description = "Subword construction in adp-multi using monadiccp";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aeson" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, deepseq, dlist
     , hashable, HUnit, mtl, QuickCheck, scientific, syb, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson";
       version = "0.8.0.2";
       sha256 = "1mc8cwmswx69r77wv7dfim525jqajnlxbcx5xf3ygpszzf6mh1q7";
       buildDepends = [
         attoparsec blaze-builder deepseq dlist hashable mtl scientific syb
         text time unordered-containers vector
       ];
       testDepends = [
         attoparsec HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text time unordered-containers vector
       ];
       homepage = "https://github.com/bos/aeson";
       description = "Fast JSON parsing and encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aeson-bson" = callPackage
    ({ mkDerivation, aeson, attoparsec, bson, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-bson";
       version = "0.3.0";
       sha256 = "0a4hrx56q1kfvf2ff9flsmrpgpvz3rshri9dpj4a9bf76ah04jn9";
       buildDepends = [
         aeson attoparsec bson text unordered-containers vector
       ];
       description = "Mapping between Aeson's JSON and Bson objects";
       license = "unknown";
     }) {};

  "aeson-lens" = callPackage
    ({ mkDerivation, aeson, doctest, lens, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "aeson-lens";
       version = "0.5.0.0";
       sha256 = "1pr8cxkx41wi7095cp1gpqrwadwx6azcrdi1kr1ik0fs6606dkks";
       buildDepends = [ aeson lens text unordered-containers vector ];
       testDepends = [ doctest ];
       description = "Lens of Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aeson-native" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, blaze-textual-native
     , deepseq, hashable, mtl, syb, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "aeson-native";
       version = "0.3.3.2";
       sha256 = "1s5i88r8sdd7ayrpjw6f18273k6r0igk0sswb503hzvjagzmzffh";
       buildDepends = [
         attoparsec blaze-builder blaze-textual-native deepseq hashable mtl
         syb text time unordered-containers vector
       ];
       homepage = "http://github.com/mailrank/aeson";
       description = "Fast JSON parsing and encoding (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aeson-pretty" = callPackage
    ({ mkDerivation, aeson, attoparsec, cmdargs, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-pretty";
       version = "0.7.2";
       sha256 = "03ap81853qi8yd9kdgczllrrni23a6glsfxrwj8zab6ipjrbh234";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec cmdargs text unordered-containers vector
       ];
       homepage = "http://github.com/informatikr/aeson-pretty";
       description = "JSON pretty-printing library and command-line tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aeson-qq" = callPackage
    ({ mkDerivation, aeson, haskell-src-meta, hspec, parsec, text
     , vector
     }:
     mkDerivation {
       pname = "aeson-qq";
       version = "0.7.4";
       sha256 = "0wnc9pdjvd15gfkdxzf084393vwmxv2xaxdchzgal1qhwa1mak4v";
       buildDepends = [ aeson haskell-src-meta parsec text vector ];
       testDepends = [ aeson haskell-src-meta hspec parsec text vector ];
       homepage = "http://github.com/zalora/aeson-qq";
       description = "JSON quasiquoter for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aeson-schema" = callPackage
    ({ mkDerivation, aeson, attoparsec, filepath, hashable, hint, HUnit
     , mtl, QuickCheck, regex-pcre, syb, temporary, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, th-lift
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-schema";
       version = "0.2.0.1";
       sha256 = "12xlrkb06as9s8ns64fqkh8b24r13fywzk0nxm3128ak0b4db4z0";
       buildDepends = [
         aeson attoparsec mtl QuickCheck regex-pcre syb text th-lift
         transformers unordered-containers vector
       ];
       testDepends = [
         aeson attoparsec filepath hashable hint HUnit mtl QuickCheck
         temporary test-framework test-framework-hunit
         test-framework-quickcheck2 text unordered-containers vector
       ];
       homepage = "https://github.com/timjb/aeson-schema";
       description = "Haskell JSON schema validator and parser generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aeson-serialize" = callPackage
    ({ mkDerivation, aeson, cereal, hspec, HUnit }:
     mkDerivation {
       pname = "aeson-serialize";
       version = "0.0.0";
       sha256 = "010lbzm5ik2gdiqm8slnf9kwgbnz8ib03c901schrw5kildfxq51";
       buildDepends = [ aeson cereal ];
       testDepends = [ aeson cereal hspec HUnit ];
       description = "Simple serialization functions for aeson types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aeson-smart" = callPackage
    ({ mkDerivation, aeson, data-default, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "aeson-smart";
       version = "0.2.0.0";
       sha256 = "1r3262k6d7nskbnnam5rw5vq7i84347amz8lk6hrjn3c4bwacf35";
       buildDepends = [
         aeson data-default text unordered-containers vector
       ];
       homepage = "https://github.com/lassoinc/aeson-smart";
       description = "Smart derivation of Aeson instances";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aeson-streams" = callPackage
    ({ mkDerivation, aeson, attoparsec, HsOpenSSL, http-streams
     , io-streams
     }:
     mkDerivation {
       pname = "aeson-streams";
       version = "0.1.0";
       sha256 = "1mmkilvjrffzbf7d024kpc4i6b72f7dbq5hrkvrzr0q7dg1mg825";
       buildDepends = [
         aeson attoparsec HsOpenSSL http-streams io-streams
       ];
       homepage = "https://github.com/noteed/aeson-streams";
       description = "An HTTP client library for JSON-based APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aeson-t" = callPackage
    ({ mkDerivation, aeson, aeson-qq, hspec2, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-t";
       version = "0.0.4";
       sha256 = "0y4mbn1xb288amgy8j6p5x9ih873qwiwrialfchc8ryg0n8syp8r";
       buildDepends = [ aeson text unordered-containers vector ];
       testDepends = [
         aeson aeson-qq hspec2 text unordered-containers vector
       ];
       homepage = "https://github.com/begriffs/aeson-t";
       description = "Transform JSON";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aeson-toolkit" = callPackage
    ({ mkDerivation, aeson, failure, hspec, text }:
     mkDerivation {
       pname = "aeson-toolkit";
       version = "0.0.1";
       sha256 = "07cb4f4zwm64x0q5z63gsskl80s6qbwnk4nl6x2jiardcl3k8cl3";
       buildDepends = [ aeson failure text ];
       testDepends = [ hspec ];
       description = "A generalization of Aeson over Failure";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aeson-utils" = callPackage
    ({ mkDerivation, aeson, attoparsec, scientific, text }:
     mkDerivation {
       pname = "aeson-utils";
       version = "0.2.2.1";
       sha256 = "0sj4kdcxcj2wnf3s109yxq8gghz976hkiqs19bjcp6qkzdf5w6sd";
       editedCabalFile = "0b9ks5b6y5xajb499903sc684wknrzfx2pygrn3s0s4drwxa01pk";
       buildDepends = [ aeson attoparsec scientific text ];
       description = "Utilities for working with Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "affine-invariant-ensemble-mcmc" = callPackage
    ({ mkDerivation, mwc-random, primitive, split, vector }:
     mkDerivation {
       pname = "affine-invariant-ensemble-mcmc";
       version = "0.2.0.0";
       sha256 = "116ln9zf4n0xy95nyyb3kwhg7ds36m793ys5yd5ha74vqf48gvk5";
       buildDepends = [ mwc-random primitive split vector ];
       homepage = "http://github.com/jtobin/affine-invariant-ensemble-mcmc";
       description = "General-purpose sampling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "afis" = callPackage
    ({ mkDerivation, byteable, crypto-random, cryptohash, HUnit, mtl
     , packer, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "afis";
       version = "0.1.2";
       sha256 = "0ppq3rbwszz3wczg0zgk8hjqplv2ck11bbq5xr8306s5n02ybcf9";
       buildDepends = [ byteable crypto-random cryptohash packer ];
       testDepends = [
         byteable crypto-random cryptohash HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-afis";
       description = "Anti-forensic Information Splitter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "afv" = callPackage
    ({ mkDerivation, language-c, mtl, yices }:
     mkDerivation {
       pname = "afv";
       version = "0.1.1";
       sha256 = "06p2xp5myipjhyzqak4zwr755kc1l4qljdf2bxn8rg0m7rhy01vk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ language-c mtl yices ];
       homepage = "http://tomahawkins.org";
       description = "Infinite state model checking of iterative C programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "agda-server" = callPackage
    ({ mkDerivation, Agda, cmdargs, filepath, HJavaScript, mtl, pandoc
     , snap-core, snap-server, transformers, utf8-string, xhtml
     }:
     mkDerivation {
       pname = "agda-server";
       version = "0.1.1";
       sha256 = "070xszykrazkisp1lsh2q1ri1i64lhd8psz8g4blv37zm899fpga";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Agda cmdargs filepath HJavaScript mtl pandoc snap-core snap-server
         transformers utf8-string xhtml
       ];
       description = "Http server for Agda (prototype)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "agum" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "agum";
       version = "2.5";
       sha256 = "0acirnqsm7mrz6pgy9nabn23bmljdcz08b3ahak4ma5lcm5bql9q";
       isLibrary = true;
       isExecutable = true;
       description = "Unification and Matching in an Abelian Group";
       license = "GPL";
     }) {};

  "aig" = callPackage
    ({ mkDerivation, mtl, QuickCheck, vector }:
     mkDerivation {
       pname = "aig";
       version = "0.2";
       sha256 = "0gv9s6x3jgkwmmq77risxfkk6nx2474zrwszk7gd3ygp6n01s3ry";
       buildDepends = [ mtl QuickCheck vector ];
       description = "And-inverter graphs in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "air" = callPackage
    ({ mkDerivation, dlist, filepath, mtl, text, time }:
     mkDerivation {
       pname = "air";
       version = "2014.11.17";
       sha256 = "1npn2pqc1ndk603as2nhvgq4bclzdfslk7w5y85kpsq77s5mahdh";
       buildDepends = [ dlist filepath mtl text time ];
       homepage = "https://github.com/nfjinjing/air";
       description = "air";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "air-extra" = callPackage
    ({ mkDerivation, air, filepath, parallel, parsec, regexpr, text
     , time
     }:
     mkDerivation {
       pname = "air-extra";
       version = "2013.9.15";
       sha256 = "0mf3wpb7d46b58fb4n6hbqix5wxhh55k7g6z22q28ygrmk77himg";
       buildDepends = [ air filepath parallel parsec regexpr text time ];
       homepage = "https://github.com/nfjinjing/air-extra";
       description = "air-extra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "air-spec" = callPackage
    ({ mkDerivation, hspec, text }:
     mkDerivation {
       pname = "air-spec";
       version = "2013.7.1";
       sha256 = "0s4y2805nmfydzxgr5lnhmyzkb6rh9mx2kpvzqqgyh4jvccdnwfx";
       buildDepends = [ hspec text ];
       homepage = "https://github.com/nfjinjing/air-spec";
       description = "air spec helper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "air-th" = callPackage
    ({ mkDerivation, air }:
     mkDerivation {
       pname = "air-th";
       version = "2014.11.17";
       sha256 = "0rhp56qvwiwlrs7pvpbslybvlp4xnllfjab6pap2chxgywas34pq";
       buildDepends = [ air ];
       homepage = "https://github.com/nfjinjing/air-th";
       description = "air";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "airbrake" = callPackage
    ({ mkDerivation, blaze-markup, exceptions, filepath, http-conduit
     , monad-control, network, semigroups, text, transformers
     , utf8-string, wai
     }:
     mkDerivation {
       pname = "airbrake";
       version = "0.2.0.0";
       sha256 = "03z5hjrdwv8kjsj1vhipqhfmc19mi5cnjkcvcm71b0gmnpd71shq";
       buildDepends = [
         blaze-markup exceptions filepath http-conduit monad-control network
         semigroups text transformers utf8-string wai
       ];
       homepage = "https://github.com/joelteon/airbrake";
       description = "An Airbrake notifier for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aivika" = callPackage
    ({ mkDerivation, mtl, random, vector }:
     mkDerivation {
       pname = "aivika";
       version = "3.0";
       sha256 = "1qyya6bx0xhw09mshz6gysizdbbmpzcgx4b494lnmr9x6sb5fvz7";
       buildDepends = [ mtl random vector ];
       homepage = "http://github.com/dsorokin/aivika";
       description = "A multi-paradigm simulation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aivika-experiment" = callPackage
    ({ mkDerivation, aivika, filepath, mtl, network-uri, parallel-io
     , split, utf8-string
     }:
     mkDerivation {
       pname = "aivika-experiment";
       version = "3.0";
       sha256 = "0xay16jjcdf2hg3qbmhmx915b2psxg2vrir0dmzr98hv4p4fbc3v";
       buildDepends = [
         aivika filepath mtl network-uri parallel-io split utf8-string
       ];
       homepage = "http://github.com/dsorokin/aivika-experiment";
       description = "Simulation experiments for the Aivika library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aivika-experiment-cairo" = callPackage
    ({ mkDerivation, aivika-experiment, aivika-experiment-chart, Chart
     , Chart-cairo
     }:
     mkDerivation {
       pname = "aivika-experiment-cairo";
       version = "3.0";
       sha256 = "0cjlvm2bbm9sjixsknw88ki2fwrfjgx126jd6qxgrrkjrflqk11z";
       buildDepends = [
         aivika-experiment aivika-experiment-chart Chart Chart-cairo
       ];
       homepage = "http://github.com/dsorokin/aivika-experiment-cairo";
       description = "Cairo backend for the Aivika simulation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aivika-experiment-chart" = callPackage
    ({ mkDerivation, aivika, aivika-experiment, Chart, colour
     , data-default-class, filepath, lens, mtl, split
     }:
     mkDerivation {
       pname = "aivika-experiment-chart";
       version = "3.0";
       sha256 = "0mn9raj0wxmm4f5n99nr3i1dmdfmi90y4fb9fywh76dwg00kjh7d";
       buildDepends = [
         aivika aivika-experiment Chart colour data-default-class filepath
         lens mtl split
       ];
       homepage = "http://github.com/dsorokin/aivika-experiment-chart";
       description = "Simulation experiments with charting for the Aivika library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aivika-experiment-diagrams" = callPackage
    ({ mkDerivation, aivika-experiment, aivika-experiment-chart, Chart
     , Chart-diagrams, filepath
     }:
     mkDerivation {
       pname = "aivika-experiment-diagrams";
       version = "3.0";
       sha256 = "1d56w3mpx8wm4fji72hbxzv3zb6h21ipw56y8ylbs8qr2l46f0cd";
       buildDepends = [
         aivika-experiment aivika-experiment-chart Chart Chart-diagrams
         filepath
       ];
       homepage = "http://github.com/dsorokin/aivika-experiment-diagrams";
       description = "Diagrams backend for the Aivika simulation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aivika-transformers" = callPackage
    ({ mkDerivation, aivika, mtl, random, vector }:
     mkDerivation {
       pname = "aivika-transformers";
       version = "3.0";
       sha256 = "1b9hkza735g1gxr3l73fz48y29fyph89j8114wzld3ydma2f6d1z";
       buildDepends = [ aivika mtl random vector ];
       homepage = "http://github.com/dsorokin/aivika-transformers";
       description = "Transformers for the Aivika simulation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ajhc" = callPackage
    ({ mkDerivation, binary, cpphs, fgl, filepath, haskeline, HsSyck
     , HTTP, mtl, network, random, regex-compat, syb, temporary
     , utf8-string, zlib
     }:
     mkDerivation {
       pname = "ajhc";
       version = "0.8.0.10";
       sha256 = "1x2rc0gyyg7idc07hi64fvkv5h5a652kmcrczfxqyzbiyx2fjphs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cpphs fgl filepath haskeline HsSyck HTTP mtl network random
         regex-compat syb temporary utf8-string zlib
       ];
       homepage = "http://ajhc.metasepi.org/";
       description = "Haskell compiler that produce binary through C language";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "alarmclock" = callPackage
    ({ mkDerivation, stm, time, unbounded-delays }:
     mkDerivation {
       pname = "alarmclock";
       version = "0.2.0.5";
       sha256 = "1j0g4xff6i69wx5m45xmx6dsdb5sdl85id967mflnrczgj36d1fd";
       buildDepends = [ stm time unbounded-delays ];
       testDepends = [ time ];
       homepage = "https://bitbucket.org/davecturner/alarmclock";
       description = "Wake up and perform an action at a certain time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alea" = callPackage
    ({ mkDerivation, argparser, threefish }:
     mkDerivation {
       pname = "alea";
       version = "0.3.1.0";
       sha256 = "0fag57z6j1n86wxj2f38qdhklpff8iwx7pr7s30zv267w3hsp9as";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ argparser threefish ];
       homepage = "https://github.com/Rnhmjoj/alea";
       description = "a diceware passphrase generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "alex" = callPackage
    ({ mkDerivation, happy, perl, QuickCheck }:
     mkDerivation {
       pname = "alex";
       version = "3.1.3";
       sha256 = "14hajxpqb6va5mclp2k682bgw9sbmd372vw41kq5aq815bkschcd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ QuickCheck ];
       buildTools = [ happy perl ];
       homepage = "http://www.haskell.org/alex/";
       description = "Alex is a tool for generating lexical analysers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alex-meta" = callPackage
    ({ mkDerivation, alex, happy, haskell-src-meta, QuickCheck }:
     mkDerivation {
       pname = "alex-meta";
       version = "0.3.0.7";
       sha256 = "05a290b997kxm2rl0w98c3fzq33866pi69pmmahqvw631cp2c6ni";
       buildDepends = [ haskell-src-meta QuickCheck ];
       buildTools = [ alex happy ];
       description = "Quasi-quoter for Alex lexers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alfred" = callPackage
    ({ mkDerivation, aeson, hexpat, HTTP, network-uri, text, xmlgen }:
     mkDerivation {
       pname = "alfred";
       version = "0.3.1";
       sha256 = "1nsa3d9mza81rqdg2vbvf4x2318j96l5px6zx7hhc28ril62971a";
       buildDepends = [ aeson hexpat HTTP network-uri text xmlgen ];
       description = "utility library for Alfred version 2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "algebra" = callPackage
    ({ mkDerivation, adjunctions, distributive, mtl, nats
     , semigroupoids, semigroups, tagged, transformers, void
     }:
     mkDerivation {
       pname = "algebra";
       version = "4.2";
       sha256 = "1b74c55326qsnpyqzyhyq87j61wp3zrpsqhipgw8db8nm2lq9nhs";
       buildDepends = [
         adjunctions distributive mtl nats semigroupoids semigroups tagged
         transformers void
       ];
       homepage = "http://github.com/ekmett/algebra/";
       description = "Constructive abstract algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "algebra-dag" = callPackage
    ({ mkDerivation, aeson, fgl, mtl, parsec, transformers }:
     mkDerivation {
       pname = "algebra-dag";
       version = "0.1.0.0";
       sha256 = "0sl3lsbjhnmnq49zf1irnijp7wfxixsv21vfknshi5hkl9757i89";
       buildDepends = [ aeson fgl mtl parsec transformers ];
       description = "Infrastructure for DAG-shaped relational algebra plans";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "algebra-sql" = callPackage
    ({ mkDerivation, aeson, algebra-dag, ansi-wl-pprint, dlist, errors
     , fgl, filepath, mtl, multiset, parsec, transformers
     }:
     mkDerivation {
       pname = "algebra-sql";
       version = "0.1.0.1";
       sha256 = "0das62ykwgyvj8qhk44i93b0w66wshdrdaylhvks03232pgpf8yp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson algebra-dag ansi-wl-pprint dlist errors fgl filepath mtl
         multiset parsec transformers
       ];
       description = "Relational Algebra and SQL Code Generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "algebraic" = callPackage
    ({ mkDerivation, accelerate }:
     mkDerivation {
       pname = "algebraic";
       version = "0.1.0.2";
       sha256 = "15gv6w9vz02960r6bd0k979vi6kj7pfxg705ajbrsd1pnwklfnwh";
       buildDepends = [ accelerate ];
       homepage = "https://github.com/wdanilo/algebraic";
       description = "General linear algebra structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "algebraic-classes" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "algebraic-classes";
       version = "0.5.2";
       sha256 = "0kk0wafqwqr466qiz3dwagpf03vln922dnrrj90ay7kqp3623jnd";
       buildDepends = [ syb ];
       homepage = "https://github.com/sjoerdvisscher/algebraic-classes";
       description = "Conversions between algebraic classes and F-algebras";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "align" = callPackage
    ({ mkDerivation, uglymemo, vector }:
     mkDerivation {
       pname = "align";
       version = "0.1.0.0";
       sha256 = "038zc4c9s0fpga1rpacmv5qvarn43lkhmkpcx6waxxa6gqnpv8i5";
       buildDepends = [ uglymemo vector ];
       description = "Sequence alignment algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aligned-foreignptr" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "aligned-foreignptr";
       version = "0.1";
       sha256 = "0hmnp08k04c0ag9fyp5sajg54r4gi57vrd9krk4g8y8fri0fgc00";
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "An aligned ForeignPtr type";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "allocated-processor" = callPackage
    ({ mkDerivation, vector-space }:
     mkDerivation {
       pname = "allocated-processor";
       version = "0.0.2";
       sha256 = "0jhz3q0972snrgd9c7lr934ddkwllwgw6anj7ax8hj4zi0zc615m";
       buildDepends = [ vector-space ];
       description = "Functional combinators for monadic actions that require allocation and de-allocation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alloy" = callPackage
    ({ mkDerivation, mtl, syb, vector }:
     mkDerivation {
       pname = "alloy";
       version = "1.2.1";
       sha256 = "00bndi30yhd92vwij3dwhbj79dhv9n3l45bw01mfqak45gqbfwyv";
       buildDepends = [ mtl syb vector ];
       description = "Generic programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alloy-proxy-fd" = callPackage
    ({ mkDerivation, alloy, mtl }:
     mkDerivation {
       pname = "alloy-proxy-fd";
       version = "1.0.0";
       sha256 = "1fhk5ydnf0l0n579gqg5lfg2cc9z8xbgqsqzgkpcw0046kp53rjw";
       buildDepends = [ alloy mtl ];
       description = "Some add-on instances for the Alloy library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alms" = callPackage
    ({ mkDerivation, editline, fgl, filepath, HUnit
     , incremental-sat-solver, mtl, network, parsec, QuickCheck, random
     , stm, syb, transformers, tuple
     }:
     mkDerivation {
       pname = "alms";
       version = "0.6.5";
       sha256 = "12hnhz1lz9wb4s95b9via1nkfgmgmr7p1wc9k4bcvsm778j920s8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         editline fgl filepath HUnit incremental-sat-solver mtl network
         parsec QuickCheck random stm syb transformers tuple
       ];
       homepage = "http://www.ccs.neu.edu/~tov/pubs/alms";
       description = "a practical affine language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alpha" = callPackage
    ({ mkDerivation, AvlTree, bimap, bindings-posix, cereal, COrdering
     , cpphs, filepath, mtl, parsec, transformers
     }:
     mkDerivation {
       pname = "alpha";
       version = "1.0.15";
       sha256 = "1gc2kjyk75cxggy52w49j97q4gcn74q7f582q6kjb3gsp2pdrn09";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         AvlTree bimap bindings-posix cereal COrdering cpphs filepath mtl
         parsec transformers
       ];
       homepage = "http://www.alpha-lang.net/";
       description = "A compiler for the Alpha language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alpino-tools" = callPackage
    ({ mkDerivation, bytestring-lexing, conduit, hexpat-pickle
     , MonadRandom, mtl, random-shuffle, resourcet, rosezipper
     , utf8-string
     }:
     mkDerivation {
       pname = "alpino-tools";
       version = "0.2.0";
       sha256 = "1sh0mrlpfak5i20wqmz23ihphim4di802h02kyxj795gq8q6v61r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bytestring-lexing conduit hexpat-pickle MonadRandom mtl
         random-shuffle resourcet rosezipper utf8-string
       ];
       homepage = "http://github.com/danieldk/alpino-tools";
       description = "Alpino data manipulation tools";
       license = "unknown";
     }) {};

  "alsa" = callPackage
    ({ mkDerivation, alsaLib, extensible-exceptions, sample-frame }:
     mkDerivation {
       pname = "alsa";
       version = "0.4";
       sha256 = "0zdnhi2wm7w6182k6mccm16x453g7kvbsqx2afnhfjpr3iaj69mg";
       buildDepends = [ extensible-exceptions sample-frame ];
       extraLibraries = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Binding to the ALSA Library API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alsa-core" = callPackage
    ({ mkDerivation, alsaLib, extensible-exceptions }:
     mkDerivation {
       pname = "alsa-core";
       version = "0.5.0.1";
       sha256 = "1avh4a419h9d2zsslg6j8hm87ppgsgqafz8ll037rk2yy1g4jl7b";
       buildDepends = [ extensible-exceptions ];
       pkgconfigDepends = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Binding to the ALSA Library API (Exceptions)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alsa-gui" = callPackage
    ({ mkDerivation, alsa-core, alsa-seq, midi, midi-alsa, wx, wxcore
     }:
     mkDerivation {
       pname = "alsa-gui";
       version = "0.1";
       sha256 = "0zcyjckdjhsj614iib3dzj9dfp8xj847jfqf4q1sk9311gscbzns";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ alsa-core alsa-seq midi midi-alsa wx wxcore ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Some simple interactive programs for sending MIDI control messages via ALSA";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alsa-midi" = callPackage
    ({ mkDerivation, alsaLib, event-list, midi, non-negative }:
     mkDerivation {
       pname = "alsa-midi";
       version = "0.4.0.1";
       sha256 = "1dmc336irhw6wdny6f2za9n3gnd83i3pcfr7qfkm8fzq6kzkkjy3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ event-list midi non-negative ];
       extraLibraries = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Bindings for the ALSA sequencer API (MIDI stuff)";
       license = "GPL";
     }) {};

  "alsa-mixer" = callPackage
    ({ mkDerivation, alsa-core, alsaLib, c2hs }:
     mkDerivation {
       pname = "alsa-mixer";
       version = "0.2.0.2";
       sha256 = "11sc2n879a8rb9yz54cb8vg8rplgapbymzy785p7n7638xx877hk";
       buildDepends = [ alsa-core ];
       buildTools = [ c2hs ];
       extraLibraries = [ alsaLib ];
       homepage = "https://github.com/ttuegel/alsa-mixer";
       description = "Bindings to the ALSA simple mixer API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alsa-pcm" = callPackage
    ({ mkDerivation, alsa-core, alsaLib, extensible-exceptions
     , sample-frame, storable-record
     }:
     mkDerivation {
       pname = "alsa-pcm";
       version = "0.6.0.3";
       sha256 = "0rq0i17xhd0x7dnlhdf3i1fdvmyxrsbm0w0k9lrx20xpy4gw2zfs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         alsa-core extensible-exceptions sample-frame storable-record
       ];
       pkgconfigDepends = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Binding to the ALSA Library API (PCM audio)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alsa-pcm-tests" = callPackage
    ({ mkDerivation, alsa }:
     mkDerivation {
       pname = "alsa-pcm-tests";
       version = "0.1";
       sha256 = "1bhrjf731jqs5297zcid5b6mmdh2njqx2hxssd077a4iqvm0c21k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ alsa ];
       description = "Tests for the ALSA audio signal library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alsa-seq" = callPackage
    ({ mkDerivation, alsa-core, alsaLib, data-accessor, enumset
     , extensible-exceptions, poll, transformers, utility-ht
     }:
     mkDerivation {
       pname = "alsa-seq";
       version = "0.6.0.5";
       sha256 = "1ll42nlhjwgzan9h1vzyyyhilj9d41l3gavnbahhgbr8h9wb2f0j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         alsa-core data-accessor enumset extensible-exceptions poll
         transformers utility-ht
       ];
       pkgconfigDepends = [ alsaLib ];
       homepage = "http://www.haskell.org/haskellwiki/ALSA";
       description = "Binding to the ALSA Library API (MIDI sequencer)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alsa-seq-tests" = callPackage
    ({ mkDerivation, alsa }:
     mkDerivation {
       pname = "alsa-seq-tests";
       version = "0.1";
       sha256 = "0is11wdymarzm5zlilh572j1nw3akxma0czbswvgy391pj1a007s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ alsa ];
       description = "Tests for the ALSA sequencer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "altcomposition" = callPackage
    ({ mkDerivation, composition }:
     mkDerivation {
       pname = "altcomposition";
       version = "0.2.1.0";
       sha256 = "1j1kh4wylndyz0zs70v63x5gdhbwa9gpkn1vm108bhhjy79rgmnh";
       buildDepends = [ composition ];
       homepage = "https://github.com/jcristovao/altcomposition";
       description = "Alternative combinators for unorthodox function composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "alternative-io" = callPackage
    ({ mkDerivation, lifted-base, monad-control, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "alternative-io";
       version = "0.0.1";
       sha256 = "01hypbci3hw2czkmx78ls51ycx518ich4k753jgv0z8ilrq8isch";
       buildDepends = [
         lifted-base monad-control transformers transformers-base
       ];
       description = "IO as Alternative instance (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "altfloat" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "altfloat";
       version = "0.3.1";
       sha256 = "1n0mxgl1jzap74sglw85l0595lhaj493bz46b90cnsqr5as9mal8";
       homepage = "http://repo.or.cz/w/altfloat.git";
       description = "Alternative floating point support for GHC";
       license = "unknown";
     }) {};

  "alure" = callPackage
    ({ mkDerivation, alure, OpenAL }:
     mkDerivation {
       pname = "alure";
       version = "0.1";
       sha256 = "1nrlw8qdbgv3l99mlcql35zknyj767fgh3f53y2mjksrh0p61v8n";
       buildDepends = [ OpenAL ];
       extraLibraries = [ alure ];
       description = "A Haskell binding for ALURE";
       license = "LGPL";
     }) { inherit (pkgs) alure; };

  "amazon-emailer" = callPackage
    ({ mkDerivation, configurator, http-conduit, lifted-base, mime-mail
     , mime-mail-ses, postgresql-simple, resourcet, text, time
     }:
     mkDerivation {
       pname = "amazon-emailer";
       version = "0.4.0.0";
       sha256 = "0s8m16qbcz6jgxx83sx1swg2217bvv3q3pm8b7f2jsn33nihrzxx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         configurator http-conduit lifted-base mime-mail mime-mail-ses
         postgresql-simple resourcet text time
       ];
       homepage = "https://github.com/dbp/amazon-emailer";
       description = "A queue daemon for Amazon's SES with a PostgreSQL table as a queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "amazon-emailer-client-snap" = callPackage
    ({ mkDerivation, mtl, snap, snaplet-postgresql-simple, text }:
     mkDerivation {
       pname = "amazon-emailer-client-snap";
       version = "0.1.1.1";
       sha256 = "03am5nzacq2wd9jf46fnwmwq2ghfsh3yd9s0mzrrkskd26q1askb";
       buildDepends = [ mtl snap snaplet-postgresql-simple text ];
       homepage = "https://github.com/dbp/amazon-emailer-client-snap";
       description = "Client library for amazon-emailer daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "amazon-products" = callPackage
    ({ mkDerivation, base64-bytestring, byteable, conduit, cryptohash
     , http-conduit, http-types, mtl, resourcet, text, time
     , transformers, transformers-base, xml-conduit, xml-picklers
     , xml-types
     }:
     mkDerivation {
       pname = "amazon-products";
       version = "0.1.0.1";
       sha256 = "10y86b3bzx6yk0478pixh3hh4nkkh0qlwwr0ac2fn6sh1hd6c7sl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base64-bytestring byteable conduit cryptohash http-conduit
         http-types mtl resourcet text time transformers transformers-base
         xml-conduit xml-picklers xml-types
       ];
       homepage = "https://github.com/AndrewRademacher/hs-amazon-products";
       description = "Connector for Amazon Products API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "amazonka" = callPackage
    ({ mkDerivation, amazonka-core, conduit, exceptions, http-conduit
     , lens, mmorph, monad-control, mtl, resourcet, retry, text, time
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "amazonka";
       version = "0.0.8";
       sha256 = "0xa0ssphn5skqfg59azna02jw2rzgvzzhnffk1xacp0yxs6nw539";
       buildDepends = [
         amazonka-core conduit exceptions http-conduit lens mmorph
         monad-control mtl resourcet retry text time transformers
         transformers-base
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Comprehensive Amazon Web Services SDK";
       license = "unknown";
     }) {};

  "amazonka-autoscaling" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-autoscaling";
       version = "0.0.8";
       sha256 = "0i90mc7bxqiyqbcfb26s8k8hfdhcs8vn0id3x9a11klza7xppdcd";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Auto Scaling SDK";
       license = "unknown";
     }) {};

  "amazonka-cloudformation" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cloudformation";
       version = "0.0.8";
       sha256 = "184rk96jalzwn3nlbavl6nfiki46g27nx9pijm8vnvaqirp20mkr";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFormation SDK";
       license = "unknown";
     }) {};

  "amazonka-cloudfront" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cloudfront";
       version = "0.0.8";
       sha256 = "1qcghr0va93zl21g18spyhw6m6v8nmln3y19hxf4pfvlpp93pnr4";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFront SDK";
       license = "unknown";
     }) {};

  "amazonka-cloudsearch" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cloudsearch";
       version = "0.0.8";
       sha256 = "10w152ylfmr975zd89czxzryax3m0fyvgf3a8ih6xwixfpmwb1ih";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch SDK";
       license = "unknown";
     }) {};

  "amazonka-cloudsearch-domains" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cloudsearch-domains";
       version = "0.0.8";
       sha256 = "0lx5j6imzsp57kkzz7sd53nvb9pmpxf5l3f0hl6slbz29k44qndw";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch Domain SDK";
       license = "unknown";
     }) {};

  "amazonka-cloudtrail" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cloudtrail";
       version = "0.0.8";
       sha256 = "0vxwbhxw1mynrjdvcdbimsji1xwrckdiq4272h7pmpkahnbxjw80";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudTrail SDK";
       license = "unknown";
     }) {};

  "amazonka-cloudwatch" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cloudwatch";
       version = "0.0.8";
       sha256 = "0wlg8im97lyqljhxy5s3nd1mnnrqvcqi6qbr82j6r086kqi92lps";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch SDK";
       license = "unknown";
     }) {};

  "amazonka-cloudwatch-logs" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cloudwatch-logs";
       version = "0.0.8";
       sha256 = "0b1g3n7h4s6qdr033i88v01wxa2drvh7bf1x8ciim95wpa2vxqzd";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch Logs SDK";
       license = "unknown";
     }) {};

  "amazonka-codedeploy" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-codedeploy";
       version = "0.0.8";
       sha256 = "1zzsfl8q56ahxzdilwa2pqwc3d5g5rcsldwy2mb971mk3y8adjw3";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeDeploy SDK";
       license = "unknown";
     }) {};

  "amazonka-cognito-identity" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cognito-identity";
       version = "0.0.8";
       sha256 = "1masj2xz2vsia1jzrg20ldiycixpnz2rvhgf7s2hqh5bxpb159zh";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Identity SDK";
       license = "unknown";
     }) {};

  "amazonka-cognito-sync" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-cognito-sync";
       version = "0.0.8";
       sha256 = "1q5x3i164npbdjymmavln07jjldyfm8fx08b82fp1w55b7gvanv3";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Sync SDK";
       license = "unknown";
     }) {};

  "amazonka-config" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-config";
       version = "0.0.8";
       sha256 = "1wzg9mcz1b01m5wi01r5q3a8mp6b3mxhb1fmv9vqh74q8073yaj1";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Config SDK";
       license = "unknown";
     }) {};

  "amazonka-core" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring
     , base64-bytestring, bifunctors, case-insensitive, conduit
     , conduit-extra, cryptohash, cryptohash-conduit, data-default-class
     , hashable, http-client, http-types, lens, mmorph, mtl, nats
     , resourcet, semigroups, tagged, tasty, tasty-hunit, text, time
     , transformers, unordered-containers, vector, xml-conduit
     }:
     mkDerivation {
       pname = "amazonka-core";
       version = "0.0.8";
       sha256 = "1r07m0q8ggp59hrv9jsl77mqrw6yrnl8fpvx2wvk0cyxpydhwgb5";
       buildDepends = [
         aeson attoparsec base16-bytestring base64-bytestring bifunctors
         case-insensitive conduit conduit-extra cryptohash
         cryptohash-conduit data-default-class hashable http-client
         http-types lens mmorph mtl nats resourcet semigroups tagged text
         time transformers unordered-containers vector xml-conduit
       ];
       testDepends = [ tasty tasty-hunit text time ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Core functionality and data types for Amazonka libraries";
       license = "unknown";
     }) {};

  "amazonka-datapipeline" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-datapipeline";
       version = "0.0.8";
       sha256 = "15lbava9i8dj07g184nd7ljzlxffdqdpj6jpv01xprc0ism2xa9j";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Data Pipeline SDK";
       license = "unknown";
     }) {};

  "amazonka-directconnect" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-directconnect";
       version = "0.0.8";
       sha256 = "1gm6k65sddkq8bv16i4b5aj5qlsl9rhxml6945k1hqcsics3b6q0";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Direct Connect SDK";
       license = "unknown";
     }) {};

  "amazonka-dynamodb" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-dynamodb";
       version = "0.0.8";
       sha256 = "1bxcwrc283xg2kcv9z2001ir928mrlk8h2jvmdw76fxfr14dh59g";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB SDK";
       license = "unknown";
     }) {};

  "amazonka-ec2" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-ec2";
       version = "0.0.8";
       sha256 = "14xrdrk240m9b8k97dwi9ifxc1yhfff5simrgdv7sgihx82w1idz";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Compute Cloud SDK";
       license = "unknown";
     }) {};

  "amazonka-elasticache" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-elasticache";
       version = "0.0.8";
       sha256 = "1lrh9i4jlq0frdisxmllw8825knj1nh0f7sb6hcf9c7n912s39dw";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon ElastiCache SDK";
       license = "unknown";
     }) {};

  "amazonka-elasticbeanstalk" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-elasticbeanstalk";
       version = "0.0.8";
       sha256 = "1mrvij1i88rkly72m6j78y8lbz2y88spwzk70nd4sqs6gnafypj1";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Beanstalk SDK";
       license = "unknown";
     }) {};

  "amazonka-elastictranscoder" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-elastictranscoder";
       version = "0.0.8";
       sha256 = "0zgsckxcqli1777zca4z3bw0dly3gbayrkfs6nla7h7dpiyj9p43";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Transcoder SDK";
       license = "unknown";
     }) {};

  "amazonka-elb" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-elb";
       version = "0.0.8";
       sha256 = "0639bnrpxdy42b7dzysmxn636lv0bni1ydjya96az1f4mc602y7w";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Load Balancing SDK";
       license = "unknown";
     }) {};

  "amazonka-emr" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-emr";
       version = "0.0.8";
       sha256 = "1ba4s4rn5ys96rfqwhibxwyl2chwmnvp3y2xh2y9r9rg0yy5bh9r";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic MapReduce SDK";
       license = "unknown";
     }) {};

  "amazonka-iam" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-iam";
       version = "0.0.8";
       sha256 = "0897lwmd4mhwmq56zhsb72vn2905cx5bdkqxwrxkwalchppampam";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Identity and Access Management SDK";
       license = "unknown";
     }) {};

  "amazonka-importexport" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-importexport";
       version = "0.0.8";
       sha256 = "04pkg2c3ivcaw4mv2lf2cpjixdvnd3bsdcpxfbvj057k8caj3859";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Import/Export SDK";
       license = "unknown";
     }) {};

  "amazonka-kinesis" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-kinesis";
       version = "0.0.8";
       sha256 = "00wzrqw7q0xqb6sn4dwybibf928cadscg4i86dgwdxi4p22qm62y";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis SDK";
       license = "unknown";
     }) {};

  "amazonka-kms" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-kms";
       version = "0.0.8";
       sha256 = "0sk377g97fijysk7qm7k7r239xrvamdrjhlzg7aswcc66cr6bary";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Key Management Service SDK";
       license = "unknown";
     }) {};

  "amazonka-lambda" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-lambda";
       version = "0.0.8";
       sha256 = "1pmg9z66jb3gpbnrf92hr3i70mda03vpgal11ibrq001mps3pfs4";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Lambda SDK";
       license = "unknown";
     }) {};

  "amazonka-opsworks" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-opsworks";
       version = "0.0.8";
       sha256 = "0i64msqj914bxyadlvaxk502r83w1lkr9lvz3k50q3hlf4yqcggm";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon OpsWorks SDK";
       license = "unknown";
     }) {};

  "amazonka-rds" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-rds";
       version = "0.0.8";
       sha256 = "1dihpadf1xnr03a15g08ssxm0nkixx3hj5jhb36whigb48rsg4p8";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Relational Database Service SDK";
       license = "unknown";
     }) {};

  "amazonka-redshift" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-redshift";
       version = "0.0.8";
       sha256 = "0bm8rwzb7cis73yvvkr69rnazdmbp69m1brlfqpjsq1w9y12b90i";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Redshift SDK";
       license = "unknown";
     }) {};

  "amazonka-route53" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-route53";
       version = "0.0.8";
       sha256 = "0xd22qicbsgb456i2zan09pj27h7spjcqb3mz7dv938jgp5p3mim";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 SDK";
       license = "unknown";
     }) {};

  "amazonka-route53-domains" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-route53-domains";
       version = "0.0.8";
       sha256 = "1zvf984ayr11vmi1ag0zd2ampfnv6pf526j1cj2rymz551d59h74";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 Domains SDK";
       license = "unknown";
     }) {};

  "amazonka-s3" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-s3";
       version = "0.0.8";
       sha256 = "0hmlcanfhh8c3hdwaxhvjfmmx9lk9y3ildqj46al8p1wqghxisjp";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Storage Service SDK";
       license = "unknown";
     }) {};

  "amazonka-sdb" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-sdb";
       version = "0.0.8";
       sha256 = "1vdbpzg6jjz62y8a1alv5p97k27gfyqff4avp6jgvv2c7n17lx31";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon SimpleDB SDK";
       license = "unknown";
     }) {};

  "amazonka-ses" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-ses";
       version = "0.0.8";
       sha256 = "0cf0ki6k1x19p46z6skq77h094k12fhrkcwr3sxngjzin95mfxvd";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Email Service SDK";
       license = "unknown";
     }) {};

  "amazonka-sns" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-sns";
       version = "0.0.8";
       sha256 = "0rk5r163cs91sw43azbhk4fwp19i56lgpr1w0gis73snrlxi78fn";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Notification Service SDK";
       license = "unknown";
     }) {};

  "amazonka-sqs" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-sqs";
       version = "0.0.8";
       sha256 = "1ryb8g4dcm0qfw2d9spdhv4n7zn5afzraa378bcyl0dkkkz3swq8";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Queue Service SDK";
       license = "unknown";
     }) {};

  "amazonka-storagegateway" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-storagegateway";
       version = "0.0.8";
       sha256 = "1k8qibg85ybq33yh1229mc0hsj97wzas0i75adkzy790lgd1mci6";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Storage Gateway SDK";
       license = "unknown";
     }) {};

  "amazonka-sts" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-sts";
       version = "0.0.8";
       sha256 = "0bz2js48pfjk5pb6rjg4nd49vij9xvlmcbyiz9dr4mwc9x69qa2a";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Security Token Service SDK";
       license = "unknown";
     }) {};

  "amazonka-support" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-support";
       version = "0.0.8";
       sha256 = "0hfx7v12mch5s0nmp7qqj7lgkf2dnmdncn4gh4w3np99ikwm8sra";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Support SDK";
       license = "unknown";
     }) {};

  "amazonka-swf" = callPackage
    ({ mkDerivation, amazonka-core }:
     mkDerivation {
       pname = "amazonka-swf";
       version = "0.0.8";
       sha256 = "1cpqfjpjgsq37kbsl07slcyvl29yz4n8jw4hdbr1yvgmgapaq8ac";
       buildDepends = [ amazonka-core ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Workflow Service SDK";
       license = "unknown";
     }) {};

  "ampersand" = callPackage
    ({ mkDerivation, ConfigFile, filepath, graphviz, hashable, mtl
     , pandoc, pandoc-types, split, SpreadsheetML, time, utf8-string
     }:
     mkDerivation {
       pname = "ampersand";
       version = "3.0.2";
       sha256 = "1ipsh4nvyvdjgblzq6rpq44m1wsps0jvka7m762nh9418w697myc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ConfigFile filepath graphviz hashable mtl pandoc pandoc-types split
         SpreadsheetML time utf8-string
       ];
       homepage = "ampersand.sourceforge.net";
       description = "Toolsuite for automated design of business processes";
       license = "GPL";
     }) {};

  "amqp" = callPackage
    ({ mkDerivation, binary, clock, connection, data-binary-ieee754
     , hspec, hspec-expectations, monad-control, network, network-uri
     , split, text, vector, xml
     }:
     mkDerivation {
       pname = "amqp";
       version = "0.10.1";
       sha256 = "1a2d17h1zhd2yv1zhd0vvr4g1v6nr188gwv12qwljs1v9y4jkbmc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary clock connection data-binary-ieee754 monad-control network
         network-uri split text vector xml
       ];
       testDepends = [
         binary clock connection data-binary-ieee754 hspec
         hspec-expectations network split text vector
       ];
       homepage = "https://github.com/hreinhardt/amqp";
       description = "Client library for AMQP servers (currently only RabbitMQ)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "amrun" = callPackage
    ({ mkDerivation, deepseq, parsec }:
     mkDerivation {
       pname = "amrun";
       version = "0.0.0.5";
       sha256 = "1y0azhsjarv26lkny1wckdz45bs87wbga29hbg6w59wc2gjkbxqz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ deepseq parsec ];
       description = "Interpreter for AM";
       license = "GPL";
     }) {};

  "analyze-client" = callPackage
    ({ mkDerivation, http-conduit, MonadCatchIO-transformers, mtl, snap
     , snap-core, time
     }:
     mkDerivation {
       pname = "analyze-client";
       version = "0.1.0.1";
       sha256 = "1k2x6srrf2cwiihhi2aacjy3bxyz59nczr49rnsxa0kk7gnkjngm";
       buildDepends = [
         http-conduit MonadCatchIO-transformers mtl snap snap-core time
       ];
       homepage = "https://github.com/dbp/analyze-client";
       description = "Client for analyze service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "anansi" = callPackage
    ({ mkDerivation, monads-tf, options, parsec, system-argv0
     , system-fileio, system-filepath, text
     }:
     mkDerivation {
       pname = "anansi";
       version = "0.4.7";
       sha256 = "0am6c4chbysgs63n3wbd4lfxdzkg6fzj4xgp6i26z4vhj49qk890";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         monads-tf options parsec system-argv0 system-fileio system-filepath
         text
       ];
       homepage = "https://john-millikin.com/software/anansi/";
       description = "Simple literate programming preprocessor";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "anansi-hscolour" = callPackage
    ({ mkDerivation, anansi, hscolour, monads-tf, text }:
     mkDerivation {
       pname = "anansi-hscolour";
       version = "0.1.2";
       sha256 = "0ffk44lacm3al96cmnacyi6pnhlzhw34jgn87fsfjcl516ffmfxw";
       buildDepends = [ anansi hscolour monads-tf text ];
       homepage = "https://john-millikin.com/software/anansi/";
       description = "Colorized looms for Anansi";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "anansi-pandoc" = callPackage
    ({ mkDerivation, anansi, monads-tf, pandoc, text }:
     mkDerivation {
       pname = "anansi-pandoc";
       version = "0.1.3";
       sha256 = "13s370b35wmwvbp6a9afsbl62hswj4mdhnvcgigwjz6bcwxxxpxi";
       buildDepends = [ anansi monads-tf pandoc text ];
       homepage = "https://john-millikin.com/software/anansi/";
       description = "Looms which use Pandoc to parse and produce a variety of formats";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "anatomy" = callPackage
    ({ mkDerivation, atomo, blaze-html, filepath, hashable, haskeline
     , highlighter, mtl, parsec, pretty-show, tagsoup, text, time
     , vector
     }:
     mkDerivation {
       pname = "anatomy";
       version = "0.4";
       sha256 = "0xza3xfzzbix9xf0vwwk4qz02h4iil3hglqspgdymhjbxfl68714";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         atomo blaze-html filepath hashable haskeline highlighter mtl parsec
         pretty-show tagsoup text time vector
       ];
       homepage = "http://atomo-lang.org/";
       description = "Anatomy: Atomo documentation system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "angel" = callPackage
    ({ mkDerivation, configurator, hspec, mtl, stm, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "angel";
       version = "0.5.0";
       sha256 = "15871cxzi6m453fndv49zljansfpaggzriq32c1kdby72ivcf968";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         configurator mtl stm text time unordered-containers
       ];
       testDepends = [
         configurator hspec mtl stm text time unordered-containers
       ];
       homepage = "http://github.com/MichaelXavier/Angel";
       description = "Process management and supervision daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "animalcase" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "animalcase";
       version = "0.1.0.2";
       sha256 = "0csbs9yrl8vhlgs7zax06shqlhcjs38q91wnkz5d3f6a4588lyqi";
       buildDepends = [ text ];
       homepage = "https://github.com/ibotty/animalcase";
       description = "Convert camelCase to snake_case and vice versa";
       license = stdenv.lib.licenses.mit;
     }) {};

  "annotated-wl-pprint" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "annotated-wl-pprint";
       version = "0.5.3";
       sha256 = "0g8b4hmgh7jhiknfrlaqr9sxr7a6sikkpaws15dy8mg4r792bbis";
       homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer, with annotation support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "anonymous-sums" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "anonymous-sums";
       version = "0.4.0.0";
       sha256 = "0jb7s6m7dblnydrzh5nsczr0kpqwy9gr346pcrxsaywz2gfjcrhi";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.github.com/massysett/anonymous-sums";
       description = "Anonymous sum types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "anonymous-sums-tests" = callPackage
    ({ mkDerivation, anonymous-sums, QuickCheck }:
     mkDerivation {
       pname = "anonymous-sums-tests";
       version = "0.4.0.0";
       sha256 = "0a7f7d3xzn8nl9gyzr4wl7m83aszmw42nd0dj8b875khh7i01h0b";
       buildDepends = [ anonymous-sums QuickCheck ];
       homepage = "http://www.github.com/massysett/anonymous-sums";
       description = "QuickCheck functions to accompany the anonymous-sums package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ansi-terminal" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ansi-terminal";
       version = "0.6.2.1";
       sha256 = "1xmp8wpcyvqys777qpyfx99bhlnvmr7jil7r78j5n6fx3mkkhnln";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/feuerbach/ansi-terminal";
       description = "Simple ANSI terminal support, with Windows compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ansi-wl-pprint" = callPackage
    ({ mkDerivation, ansi-terminal }:
     mkDerivation {
       pname = "ansi-wl-pprint";
       version = "0.6.7.1";
       sha256 = "1by11bg1bd7z18hqgayk0w76hy5n63kmdl14gainlvfgr9jw506r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ansi-terminal ];
       homepage = "http://github.com/batterseapower/ansi-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "antagonist" = callPackage
    ({ mkDerivation, antisplice, chatty, chatty-utils, ironforge, mtl
     , shakespeare, text, time, yesod, yesod-auth
     }:
     mkDerivation {
       pname = "antagonist";
       version = "0.1.0.25";
       sha256 = "1dw9sp5aan1i8hpzdflms8w2n113jbcrg6hn3qfhnih9bb45v7jy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         antisplice chatty chatty-utils ironforge mtl shakespeare text time
         yesod yesod-auth
       ];
       homepage = "http://doomanddarkness.eu/pub/antisplice";
       description = "A web interface to Antisplice dungeons";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "antfarm" = callPackage
    ({ mkDerivation, HUnit, minimorph, mtl, parsec, test-framework
     , test-framework-hunit, text, transformers
     }:
     mkDerivation {
       pname = "antfarm";
       version = "0.1.0.0";
       sha256 = "1s2lfd7va0nq5z0q4f37ig2spjpxigfhkhi067fz4y0n1zjc1isd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ minimorph mtl parsec text transformers ];
       testDepends = [
         HUnit minimorph test-framework test-framework-hunit text
         transformers
       ];
       homepage = "http://hub.darcs.net/kowey/antfarm";
       description = "Referring expressions for definitions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "anticiv" = callPackage
    ({ mkDerivation, antisplice, chatty, chatty-text, chatty-utils
     , ctpl, ironforge, mtl, network, plugins, time, transformers
     }:
     mkDerivation {
       pname = "anticiv";
       version = "0.1.0.5";
       sha256 = "0sxxa2kylgagbnlf7msrgfq98jaf26lvlas6afypnr15aavvlfzh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         antisplice chatty chatty-text chatty-utils ctpl ironforge mtl
         network plugins time transformers
       ];
       description = "This is an IRC bot for Mafia and Resistance";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "antigate" = callPackage
    ({ mkDerivation, data-default, deepseq, exceptions, failure
     , http-client, http-conduit, resourcet, safe, text, transformers
     }:
     mkDerivation {
       pname = "antigate";
       version = "2.0.1";
       sha256 = "0vd2f4kq2zkngyqpnw3lcvjkn8335gs9rdfr7kb8442p8dhps139";
       buildDepends = [
         data-default deepseq exceptions failure http-client http-conduit
         resourcet safe text transformers
       ];
       homepage = "https://github.com/exbb2/antigate";
       description = "Interface for antigate.com captcha recognition API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "antimirov" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "antimirov";
       version = "0.1.0";
       sha256 = "0aay5fhw2r502hvdlh6svj6k88zh5wjinn8mk2a3md7zdaiji9iq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck ];
       description = "Define the language containment (=subtyping) relation on regulare expressions";
       license = "GPL";
     }) {};

  "antiquoter" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "antiquoter";
       version = "0.1.1.0";
       sha256 = "1qv5iid7az7bn1jf6r7ffg5qqbcs8ypf78j4vrs5ajwp39jnbiiy";
       buildDepends = [ syb ];
       description = "Combinator library for quasi- and anti-quoting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "antisplice" = callPackage
    ({ mkDerivation, chatty, chatty-utils, haskeline, mtl, text, time
     , transformers
     }:
     mkDerivation {
       pname = "antisplice";
       version = "0.17.0.3";
       sha256 = "0i7zm0s8vfkc4gwrw9aphj8xgppja50m71wkbkcibnrwvbyxdcqm";
       buildDepends = [
         chatty chatty-utils haskeline mtl text time transformers
       ];
       description = "An engine for text-based dungeons";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "antlrc" = callPackage
    ({ mkDerivation, antlr3c, c2hs, enumerator, regex-posix }:
     mkDerivation {
       pname = "antlrc";
       version = "0.0.2";
       sha256 = "1hjk2cvn6j1ijvg3gnml46ysri672jnxmfyh09y1aqsrbimkw8gd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ enumerator regex-posix ];
       buildTools = [ c2hs ];
       extraLibraries = [ antlr3c ];
       homepage = "https://github.com/markwright/antlrc";
       description = "Haskell binding to the ANTLR parser generator C runtime library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "anydbm" = callPackage
    ({ mkDerivation, MissingH, mtl }:
     mkDerivation {
       pname = "anydbm";
       version = "1.0.7";
       sha256 = "1rxk36r6i065m0qiq4g5xlrk2yjsds7j896cbddbsyddbzy10d6k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ MissingH mtl ];
       homepage = "http://software.complete.org/anydbm";
       description = "Interface for DBM-like database systems";
       license = "GPL";
     }) {};

  "aosd" = callPackage
    ({ mkDerivation, bindings-DSL, cairo, colour
     , language-haskell-extract, libaosd, monad-control, pango
     , transformers, X11
     }:
     mkDerivation {
       pname = "aosd";
       version = "0.2.1";
       sha256 = "0zma3ypjnqn8c9pk4zfyzzwn27l3wb6l6xnjjydn90fxsmpa1vh6";
       buildDepends = [
         bindings-DSL cairo colour monad-control pango transformers X11
       ];
       testDepends = [ colour language-haskell-extract pango ];
       pkgconfigDepends = [ libaosd ];
       description = "Bindings to libaosd, a library for Cairo-based on-screen displays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ap-reflect" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ap-reflect";
       version = "0.1.0.0";
       sha256 = "0r7mfdi7vr2vh84xhhsd7si3mpfkppdpzh13rnnfww1cs0dpfdhz";
       homepage = "https://github.com/cmc-msu-ai/ap-reflect";
       description = "Partial evaluation reflection a la simple-reflect";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "apache-md5" = callPackage
    ({ mkDerivation, crypto, HUnit, MonadRandom, openssl, random
     , test-framework, test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "apache-md5";
       version = "0.6.1.0";
       sha256 = "01gmv3m8zl195n4vb5m35j4sfn5b35zcd3q4ywdrvacvv8w2ra49";
       testDepends = [
         crypto HUnit MonadRandom random test-framework test-framework-hunit
         transformers
       ];
       extraLibraries = [ openssl ];
       homepage = "https://github.com/trskop/apache-md5";
       description = "Apache specific MD5 digest algorighm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "apelsin" = callPackage
    ({ mkDerivation, deepseq, filepath, glib, gtk, HTTP, mtl, network
     , transformers, tremulous-query, xdg-basedir
     }:
     mkDerivation {
       pname = "apelsin";
       version = "1.2.3";
       sha256 = "08a747p0dyjvgn5pjfvrb1hnh7vk2km8hbbyvjmnsxl89r5m992l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         deepseq filepath glib gtk HTTP mtl network transformers
         tremulous-query xdg-basedir
       ];
       homepage = "http://ojeling.net/apelsin";
       description = "Server and community browser for the game Tremulous";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "api-builder" = callPackage
    ({ mkDerivation, aeson, attoparsec, either, HTTP, http-conduit
     , http-types, text, transformers
     }:
     mkDerivation {
       pname = "api-builder";
       version = "0.2.0.1";
       sha256 = "1iq4amj33rrp1vywrxjdh2yg3ry2q038n3z0pkisdjl9ga4bvv0f";
       buildDepends = [
         aeson attoparsec either HTTP http-conduit http-types text
         transformers
       ];
       description = "Library for easily building REST API wrappers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "api-tools" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, alex, attoparsec
     , base64-bytestring, Cabal, case-insensitive, deepseq, happy, lens
     , QuickCheck, regex-compat-tdfa, safe, safecopy, tasty, tasty-hunit
     , tasty-quickcheck, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "api-tools";
       version = "0.5.2";
       sha256 = "0pd2kaii40isbnc1rgh0zkm2abrljipmq27nlgz3zbldbm1l5xw6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty attoparsec base64-bytestring Cabal
         case-insensitive deepseq lens QuickCheck regex-compat-tdfa safe
         safecopy text time unordered-containers vector
       ];
       testDepends = [
         aeson aeson-pretty attoparsec base64-bytestring Cabal
         case-insensitive lens QuickCheck regex-compat-tdfa safe safecopy
         tasty tasty-hunit tasty-quickcheck text time unordered-containers
         vector
       ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/iconnect/api-tools";
       description = "DSL for generating API boilerplate and docs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "apiary" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, blaze-markup
     , bytestring-lexing, case-insensitive, data-default-class
     , exceptions, hashable, http-date, http-types, HUnit, mime-types
     , monad-control, mtl, test-framework, test-framework-hunit, text
     , time, transformers, transformers-base, unix-compat
     , unordered-containers, vault, wai, wai-extra
     }:
     mkDerivation {
       pname = "apiary";
       version = "1.2.0";
       sha256 = "1315m35j3pjl4awzfc0y6avawc605v4q74jhxkf0jwwnwp2d74a2";
       editedCabalFile = "1bl23h7c6kikzag8phhwb76m6p4pqhp7mis5am456lhnigl9dc5g";
       buildDepends = [
         blaze-builder blaze-html blaze-markup bytestring-lexing
         case-insensitive data-default-class exceptions hashable http-date
         http-types mime-types monad-control mtl text time transformers
         transformers-base unix-compat unordered-containers vault wai
         wai-extra
       ];
       testDepends = [
         http-types HUnit mtl test-framework test-framework-hunit wai
         wai-extra
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "Simple and type safe web framework that can be automatically generate API documentation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-authenticate" = callPackage
    ({ mkDerivation, apiary, apiary-session, authenticate
     , blaze-builder, cereal, data-default-class, http-client
     , http-client-tls, http-types, monad-control, resourcet, text, wai
     }:
     mkDerivation {
       pname = "apiary-authenticate";
       version = "1.2.0";
       sha256 = "0j9kr4jv1ssyivwjs7mr995k2rslwnmzhz98cnnn78k1ygjz3lym";
       buildDepends = [
         apiary apiary-session authenticate blaze-builder cereal
         data-default-class http-client http-client-tls http-types
         monad-control resourcet text wai
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "authenticate support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-clientsession" = callPackage
    ({ mkDerivation, apiary, apiary-cookie, apiary-session, cereal
     , clientsession, data-default-class, time, unix-compat, vault
     }:
     mkDerivation {
       pname = "apiary-clientsession";
       version = "1.2.0";
       sha256 = "0wzia2i15hc7v467mhj9aamvy44fc70axmsj7j54j84v03zl5m62";
       buildDepends = [
         apiary apiary-cookie apiary-session cereal clientsession
         data-default-class time unix-compat vault
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "clientsession support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-cookie" = callPackage
    ({ mkDerivation, apiary, blaze-builder, blaze-html, cookie, time
     , wai
     }:
     mkDerivation {
       pname = "apiary-cookie";
       version = "1.2.0";
       sha256 = "03684bijn6xmpyg3afd5a9jr5kp80brk5kvdrckn3bkdrwpvz40n";
       buildDepends = [ apiary blaze-builder blaze-html cookie time wai ];
       homepage = "https://github.com/philopon/apiary";
       description = "Cookie support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-eventsource" = callPackage
    ({ mkDerivation, apiary, blaze-builder, wai-extra }:
     mkDerivation {
       pname = "apiary-eventsource";
       version = "1.2.0";
       sha256 = "1ng36kj802rvmwmwz9pahg18ry60zga7lp36bnf1n7gh7ypxp7j0";
       buildDepends = [ apiary blaze-builder wai-extra ];
       homepage = "https://github.com/philopon/apiary";
       description = "eventsource support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-helics" = callPackage
    ({ mkDerivation, apiary, data-default-class, helics, helics-wai
     , monad-control, text, transformers, vault, wai
     }:
     mkDerivation {
       pname = "apiary-helics";
       version = "1.2.0";
       sha256 = "0w4f9k6d0cbp9k0fzh3l9v3njq9fxpxccpwq9fnyah8l5d8k2wh3";
       buildDepends = [
         apiary data-default-class helics helics-wai monad-control text
         transformers vault wai
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "helics support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-logger" = callPackage
    ({ mkDerivation, apiary, data-default-class, fast-logger
     , lifted-base, monad-control, monad-logger, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "apiary-logger";
       version = "1.2.0";
       sha256 = "12c02jnbidf8x8hkl6l371q2fjvcy3f10zrmlxsfk9k88zp2bsi7";
       buildDepends = [
         apiary data-default-class fast-logger lifted-base monad-control
         monad-logger transformers transformers-base
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "fast-logger support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-memcached" = callPackage
    ({ mkDerivation, apiary, data-default-class, memcached-binary
     , monad-control, text, transformers
     }:
     mkDerivation {
       pname = "apiary-memcached";
       version = "1.2.1";
       sha256 = "1wqcnp59savay6yybl3plsz193hlzib6lk78v65bxsaxirddl4c3";
       buildDepends = [
         apiary data-default-class memcached-binary monad-control text
         transformers
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "memcached client for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-mongoDB" = callPackage
    ({ mkDerivation, apiary, bson, data-default-class, lifted-base
     , monad-control, mongoDB, resource-pool, text, time, transformers
     }:
     mkDerivation {
       pname = "apiary-mongoDB";
       version = "1.2.0";
       sha256 = "0d76sz2x5fnyzl8zclbsh0wbdagx7avdadrd7ckk84sxhcxdl0il";
       buildDepends = [
         apiary bson data-default-class lifted-base monad-control mongoDB
         resource-pool text time transformers
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "mongoDB support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-persistent" = callPackage
    ({ mkDerivation, apiary, apiary-logger, monad-control, monad-logger
     , persistent, persistent-sqlite, resource-pool, resourcet
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "apiary-persistent";
       version = "1.2.0";
       sha256 = "1bajdiv49wcf4ar7wbc5gsxd3hibbq515m3b90ajsnh6h69hld8j";
       buildDepends = [
         apiary apiary-logger monad-control monad-logger persistent
         persistent-sqlite resource-pool resourcet transformers
         transformers-base
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "persistent support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-purescript" = callPackage
    ({ mkDerivation, apiary, data-default-class, filepath, Glob, parsec
     , purescript, text, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "apiary-purescript";
       version = "1.2.0";
       sha256 = "1584xnqf9w2n9r7vmcr6j03g7z80zyndv57wh9z0x0bm72shw74z";
       buildDepends = [
         apiary data-default-class filepath Glob parsec purescript text
         unordered-containers utf8-string
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "purescript compiler for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-session" = callPackage
    ({ mkDerivation, apiary, wai }:
     mkDerivation {
       pname = "apiary-session";
       version = "1.2.0";
       sha256 = "0x02cvdsrjm70aivi8ya291s29s9h059xff01nq66dj1dd272a3h";
       buildDepends = [ apiary wai ];
       homepage = "https://github.com/philopon/apiary";
       description = "session support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apiary-websockets" = callPackage
    ({ mkDerivation, apiary, wai-websockets, websockets }:
     mkDerivation {
       pname = "apiary-websockets";
       version = "1.2.0";
       sha256 = "1f76zb835aqvmqv1mxh06nfg4vidxnivp036l2gk8xzl4cq61s1c";
       buildDepends = [ apiary wai-websockets websockets ];
       homepage = "https://github.com/philopon/apiary";
       description = "websockets support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "apis" = callPackage
    ({ mkDerivation, aeson, deepseq, ecma262, exceptions, filemanip
     , filepath, hslogger, http-conduit, hxt, mtl, opendatatable, split
     , text, th-lift, time, transformers, unordered-containers
     , utf8-string, yql
     }:
     mkDerivation {
       pname = "apis";
       version = "0.0.0";
       sha256 = "05wi30j19ggq51fx6681rqmlhz282v1wnnkgy287z051s1459kaq";
       editedCabalFile = "0jj26dysi6cclxbhw5mrg237idkamjmhh9y01c2zdjgg4331avcl";
       buildDepends = [
         aeson deepseq ecma262 exceptions filemanip filepath hslogger
         http-conduit hxt mtl opendatatable split text th-lift time
         transformers unordered-containers utf8-string yql
       ];
       homepage = "https://github.com/fabianbergmark/APIs";
       description = "A Template Haskell library for generating type safe web REST API calls";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "apotiki" = callPackage
    ({ mkDerivation, aeson, attoparsec, binary, crypto-api, cryptohash
     , http-types, openpgp, openpgp-asciiarmor, openpgp-crypto-api
     , scotty, strict, tar, text, transformers, wai-extra
     , wai-middleware-static, zlib
     }:
     mkDerivation {
       pname = "apotiki";
       version = "0.5.2";
       sha256 = "1rih1lasky5sjdf3lz2qi2qya3iwbbxs658p77h1amqpsa7lsfp7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec binary crypto-api cryptohash http-types openpgp
         openpgp-asciiarmor openpgp-crypto-api scotty strict tar text
         transformers wai-extra wai-middleware-static zlib
       ];
       homepage = "https://github.com/pyr/apotiki";
       description = "a faster debian repository";
       license = stdenv.lib.licenses.mit;
     }) {};

  "app-settings" = callPackage
    ({ mkDerivation, hspec, HUnit, mtl, parsec, text }:
     mkDerivation {
       pname = "app-settings";
       version = "0.2.0.5";
       sha256 = "17918i7k1wagmqxvkhww69w8ffybshfm6y1dd9iyg9x45qdrvr6k";
       buildDepends = [ mtl parsec text ];
       testDepends = [ hspec HUnit mtl parsec text ];
       homepage = "https://github.com/emmanueltouzery/app-settings";
       description = "A library to manage application settings (INI file-like)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "appar" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "appar";
       version = "0.1.4";
       sha256 = "09jb9ij78fdkz2qk66rw99q19qnm504dpv0yq0pjsl6xwjmndsjq";
       description = "A simple applicative parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "applicative-extras" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "applicative-extras";
       version = "0.1.8";
       sha256 = "1svsf8mvb816nksg1dh4dz3cms2zx2hjprz2z7h3zidpxmzs0pr8";
       homepage = "http://github.com/chriseidhof/applicative-extras/";
       description = "Instances for Applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "applicative-numbers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "applicative-numbers";
       version = "0.1.3";
       sha256 = "0rnjl7yz6nga4qi0jdvhf911yf1qk6gy2fm5236bsgc50d5wbaw0";
       homepage = "http://haskell.org/haskellwiki/applicative-numbers";
       description = "Applicative-based numeric instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "applicative-quoters" = callPackage
    ({ mkDerivation, haskell-src-meta }:
     mkDerivation {
       pname = "applicative-quoters";
       version = "0.1.0.8";
       sha256 = "10m29d0938khjdazsmsvvncr5xndnpzpm1b7ymzb3b4b81xmcpgl";
       buildDepends = [ haskell-src-meta ];
       description = "Quasiquoters for idiom brackets and an applicative do-notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "approx-rand-test" = callPackage
    ({ mkDerivation, Chart, Chart-diagrams, colour, conduit
     , data-default, data-default-class, filepath, HUnit, ieee754, lens
     , mersenne-random-pure64, monad-mersenne-random, mtl, statistics
     , test-framework, test-framework-hunit, text, transformers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "approx-rand-test";
       version = "0.2.1";
       sha256 = "17aww5sffw07wk8hlyf0qv26v0jkr5qzv45wxk4zhhyb453b9m41";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Chart Chart-diagrams colour conduit data-default data-default-class
         filepath lens mersenne-random-pure64 monad-mersenne-random mtl
         statistics text transformers vector vector-algorithms
       ];
       testDepends = [
         HUnit ieee754 mersenne-random-pure64 monad-mersenne-random mtl
         test-framework test-framework-hunit vector
       ];
       homepage = "http://github.com/danieldk/approx-rand-test";
       description = "Approximate randomization test";
       license = "unknown";
     }) {};

  "approximate" = callPackage
    ({ mkDerivation, binary, bytes, cereal, comonad, deepseq
     , distributive, doctest, filepath, generic-deriving, hashable
     , hashable-extras, lens, log-domain, pointed, safecopy
     , semigroupoids, semigroups, simple-reflect, vector
     }:
     mkDerivation {
       pname = "approximate";
       version = "0.2.1.1";
       sha256 = "18ac2z1yqqksqmq9ch36ja3qjn9v6cgyzxs64lnnp98mgcwsmhwr";
       buildDepends = [
         binary bytes cereal comonad deepseq distributive generic-deriving
         hashable hashable-extras lens log-domain pointed safecopy
         semigroupoids semigroups vector
       ];
       testDepends = [
         doctest filepath generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/analytics/approximate/";
       description = "Approximate discrete values and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "approximate-equality" = callPackage
    ({ mkDerivation, type-level-natural-number }:
     mkDerivation {
       pname = "approximate-equality";
       version = "1.1.0.2";
       sha256 = "0pxvyb5a6vh0isba81flv7wjlwfn091xrma7g6wzr08bvqmix883";
       buildDepends = [ type-level-natural-number ];
       homepage = "http://github.com/gcross/approximate-equality";
       description = "Newtype wrappers for approximate equality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ar-timestamp-wiper" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ar-timestamp-wiper";
       version = "0.1.0";
       sha256 = "1gk1z0dw7i0c3wql1zh8iri6573falmiz31s0widfz7dav45vkrz";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/nh2/ar-timestamp-wiper";
       description = "Wipes time stamps from .a files (like ar -D)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "arb-fft" = callPackage
    ({ mkDerivation, criterion, filepath, primitive, QuickCheck, tasty
     , tasty-quickcheck, transformers, vector
     }:
     mkDerivation {
       pname = "arb-fft";
       version = "0.2.0.2";
       sha256 = "1yxhafzv71xx2gva4b9slr26iqs6p1lh578x1774bv07ifqys6dp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         criterion filepath primitive transformers vector
       ];
       testDepends = [ QuickCheck tasty tasty-quickcheck vector ];
       homepage = "https://github.com/ian-ross/arb-fft";
       description = "Pure Haskell arbitrary length FFT library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arbb-vm" = callPackage
    ({ mkDerivation, arbb_dev, cereal, mtl }:
     mkDerivation {
       pname = "arbb-vm";
       version = "0.1.1.20";
       sha256 = "0k31ardnlg925vcrrl4n9w09867dbr68sdnc3bhs9xz1r9cdlkv8";
       buildDepends = [ cereal mtl ];
       extraLibraries = [ arbb_dev ];
       homepage = "https://github.com/svenssonjoel/arbb-vm/wiki";
       description = "FFI binding to the Intel Array Building Blocks (ArBB) virtual machine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arbtt" = callPackage
    ({ mkDerivation, aeson, binary, bytestring-progress, deepseq
     , filepath, HUnit, libXScrnSaver, parsec, pcre-light
     , process-extras, strict, tasty, tasty-golden, tasty-hunit
     , terminal-progress-bar, time, transformers, utf8-string, X11
     }:
     mkDerivation {
       pname = "arbtt";
       version = "0.8.1.4";
       sha256 = "15ydb425nvqfzajx09q713wy5xa7awbzfjlsidk17vf7qbhfjn7z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson binary bytestring-progress deepseq filepath parsec pcre-light
         strict terminal-progress-bar time transformers utf8-string X11
       ];
       testDepends = [
         binary deepseq HUnit parsec pcre-light process-extras tasty
         tasty-golden tasty-hunit time transformers utf8-string
       ];
       extraLibraries = [ libXScrnSaver ];
       homepage = "http://arbtt.nomeata.de/";
       description = "Automatic Rule-Based Time Tracker";
       license = "GPL";
     }) {};

  "archive" = callPackage
    ({ mkDerivation, debian, debian-mirror, Extra, filepath, help
     , HUnit, mtl, network, progress, regex-compat, regex-posix, time
     , Unixutils, xhtml
     }:
     mkDerivation {
       pname = "archive";
       version = "1.2.12";
       sha256 = "0rdgrdmmsn4qijbbprw4dbppb5klgn9lw3fyizzcd79gsgz4s61r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         debian debian-mirror Extra filepath help HUnit mtl network progress
         regex-compat regex-posix time Unixutils xhtml
       ];
       description = "A library and programs for creating hardlinked incremental archives or backups";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "archiver" = callPackage
    ({ mkDerivation, curl, HTTP, network, random }:
     mkDerivation {
       pname = "archiver";
       version = "0.6.2.1";
       sha256 = "19gvja890lhn9zr2aqjshwq5qqb95nynxrsw5wk4z2a417xj70j2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ curl HTTP network random ];
       description = "Archive supplied URLs in WebCite & Internet Archive";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "archlinux" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "archlinux";
       version = "1.3";
       sha256 = "051pgn39f8xq80qf8g04j162n6zysvcdbj8a8m05x6vi6mbr9jx2";
       buildDepends = [ Cabal filepath ];
       homepage = "http://github.com/archhaskell/";
       description = "Support for working with Arch Linux packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "archlinux-web" = callPackage
    ({ mkDerivation, archlinux, Cabal, csv, deepseq, filepath, HTTP
     , json, parallel, prettyclass, strict-concurrency, xhtml
     }:
     mkDerivation {
       pname = "archlinux-web";
       version = "0.1";
       sha256 = "1rzjkxxmf24hrmlc70s416akn6rbcly7152ly618dxgigvqnir48";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         archlinux Cabal csv deepseq filepath HTTP json parallel prettyclass
         strict-concurrency xhtml
       ];
       homepage = "http://code.haskell.org/~dons/code/archlinux";
       description = "Website maintenance for Arch Linux packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "archnews" = callPackage
    ({ mkDerivation, download-curl, feed, tagsoup }:
     mkDerivation {
       pname = "archnews";
       version = "0.2";
       sha256 = "1v7b6w2cqfy69kvsr09a1qv4zyz78khygmd9l9hqjlmj7w3x8gys";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ download-curl feed tagsoup ];
       homepage = "http://archhaskell.wordpress.com/";
       description = "Convert Arch Linux package updates in RSS to pretty markdown";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arff" = callPackage
    ({ mkDerivation, binary, bytestring-lexing, bytestring-show, time
     }:
     mkDerivation {
       pname = "arff";
       version = "0.1.0";
       sha256 = "1mwak4kl4ksg5vqya9abz02v0zgj6lbi6bzq2bd8jpnncazsxha5";
       buildDepends = [ binary bytestring-lexing bytestring-show time ];
       homepage = "http://code.haskell.org/~StefanKersten/code/arff";
       description = "Generate Attribute-Relation File Format (ARFF) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "argparser" = callPackage
    ({ mkDerivation, HTF, HUnit }:
     mkDerivation {
       pname = "argparser";
       version = "0.3.4";
       sha256 = "0ypdj4mcm4yk5pswzwi9jk2w25f6qhiari8gam72za6ihyjwfig6";
       testDepends = [ HTF HUnit ];
       description = "Command line parsing framework for console applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arguedit" = callPackage
    ({ mkDerivation, bimap, glib, gtk, HDBC, indents, mtl, parsec }:
     mkDerivation {
       pname = "arguedit";
       version = "0.1.0.1";
       sha256 = "17s6m9mjai439j8g0cd5pr2zb0224h1ckik9fg0rbd06zgxvfmq6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bimap glib gtk HDBC indents mtl parsec ];
       description = "A computer assisted argumentation transcription and editing software";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "ariadne" = callPackage
    ({ mkDerivation, async, bert, Cabal, data-lens, data-lens-fd
     , data-lens-template, filepath, haskell-names, haskell-packages
     , haskell-src-exts, hse-cpp, hslogger, mtl, stm, tagged, tasty
     , tasty-hunit, transformers, utf8-string
     }:
     mkDerivation {
       pname = "ariadne";
       version = "0.1.2.3";
       sha256 = "02hyn3y4h7w4l5k48kp73al67lp8vzlymblb7al72w14r01ww8p3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         async bert Cabal data-lens data-lens-fd data-lens-template filepath
         haskell-names haskell-packages haskell-src-exts hse-cpp hslogger
         mtl stm tagged transformers utf8-string
       ];
       testDepends = [
         bert filepath haskell-src-exts tasty tasty-hunit utf8-string
       ];
       homepage = "https://github.com/feuerbach/ariadne";
       description = "Go-to-definition for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "arith-encode" = callPackage
    ({ mkDerivation, arithmoi, binary, Cabal, fgl, hashable, HUnit-Plus
     , unordered-containers
     }:
     mkDerivation {
       pname = "arith-encode";
       version = "1.0.0";
       sha256 = "1wqm2jcc2dac31gvad6pmnq0wbajpj488h93xl93vfipsbak0cm8";
       buildDepends = [
         arithmoi binary Cabal fgl hashable unordered-containers
       ];
       testDepends = [
         arithmoi binary Cabal fgl hashable HUnit-Plus unordered-containers
       ];
       homepage = "https://github.com/emc2/arith-encode";
       description = "A practical arithmetic encoding (aka Godel numbering) library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arithmatic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "arithmatic";
       version = "0.1.0.1";
       sha256 = "1qa1yqi67l1cd3ggb67h9iji9ps3ma43fcddv0vmc1hin61xnzj8";
       description = "Basic arithmatic in haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "arithmoi" = callPackage
    ({ mkDerivation, mtl, random }:
     mkDerivation {
       pname = "arithmoi";
       version = "0.4.1.1";
       sha256 = "02wrm24dpcsdsjaic30416axad5s4y822si1am4smb2qvrhps9ix";
       buildDepends = [ mtl random ];
       configureFlags = "-f-llvm";
       homepage = "https://bitbucket.org/dafis/arithmoi";
       description = "Efficient basic number-theoretic functions. Primes, powers, integer logarithms.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "armada" = callPackage
    ({ mkDerivation, GLUT, mtl, OpenGL, stm }:
     mkDerivation {
       pname = "armada";
       version = "0.1";
       sha256 = "18ym9cs0mr4pr6pdgyk14rrwsxh1fa0xvqz3jg60lnxbgjlynvc1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT mtl OpenGL stm ];
       description = "Space-based real time strategy game";
       license = "GPL";
     }) {};

  "array" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "array";
       version = "0.5.0.0";
       sha256 = "0rknkp9c6cxf63adx7xam655d509aja9wim1r37j4905ywan0y8a";
       description = "Mutable and immutable arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "array-forth" = callPackage
    ({ mkDerivation, Chart, HUnit, mcmc-synthesis, MonadRandom, OddWord
     , optparse-applicative, QuickCheck, split, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, vector
     }:
     mkDerivation {
       pname = "array-forth";
       version = "0.2.0.6";
       sha256 = "1234szy0ibbyyzglpz0rv5w4wk44rkq8wdl5s3kmnvlvjyxn95nf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Chart mcmc-synthesis MonadRandom OddWord optparse-applicative split
         vector
       ];
       testDepends = [
         HUnit QuickCheck test-framework-hunit test-framework-quickcheck2
         test-framework-th
       ];
       description = "A simple interpreter for arrayForth, the language used on GreenArrays chips";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "array-memoize" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "array-memoize";
       version = "0.6.0";
       sha256 = "1p05vg8mdyad03aa7s1nrgw5xqgl80f6l7v0llhmi1q4xnrqrj3n";
       description = "Memoization combinators using arrays for finite sub-domains of functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "array-utils" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "array-utils";
       version = "0.3";
       sha256 = "1gh7gmbm0djr78dqkf8q3ap9yk4gm3dq48k8jad9ssp3w19wpkan";
       description = "Primitive functions for updating many elements in mutable arrays at once";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arrow-improve" = callPackage
    ({ mkDerivation, arrows, pointed, profunctors, semigroupoids }:
     mkDerivation {
       pname = "arrow-improve";
       version = "0.1.0.0";
       sha256 = "0ppl8v746lj41aqb0k2724vm4n32jxmz723qa0j860jvhkh2nww7";
       buildDepends = [ arrows pointed profunctors semigroupoids ];
       homepage = "https://github.com/prophile/arrow-improve/";
       description = "Improved arrows";
       license = stdenv.lib.licenses.mit;
     }) {};

  "arrow-list" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "arrow-list";
       version = "0.6.1.5";
       sha256 = "0i0rwjrrvbi9fmwdzmz6vzkkr63pl2df653anjwcw3xr7ccb16xm";
       buildDepends = [ mtl ];
       homepage = "https://github.com/silkapp/arrow-list";
       description = "List arrows for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arrowapply-utils" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "arrowapply-utils";
       version = "0.2";
       sha256 = "02zampc6cc5a9fvdvxkz2r6i5sxf5w0qilsvsx8jxiw4kprbghii";
       description = "Utilities for working with ArrowApply instances more naturally";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arrowp" = callPackage
    ({ mkDerivation, haskell-src }:
     mkDerivation {
       pname = "arrowp";
       version = "0.5.0.2";
       sha256 = "0a0ss5q8ximbd6hr0agy1106jfvdm8cx50q7a9yaiqfxs20fy6lx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src ];
       homepage = "http://www.haskell.org/arrows/";
       description = "preprocessor translating arrow notation into Haskell 98";
       license = "GPL";
     }) {};

  "arrows" = callPackage
    ({ mkDerivation, Stream }:
     mkDerivation {
       pname = "arrows";
       version = "0.4.4.1";
       sha256 = "1qpbpwsc3frjdngwjv3r58nfa0ik88cqh24ls47svigsz3c4n42v";
       buildDepends = [ Stream ];
       homepage = "http://www.haskell.org/arrows/";
       description = "Arrow classes and transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "artery" = callPackage
    ({ mkDerivation, profunctors, transformers }:
     mkDerivation {
       pname = "artery";
       version = "0.1.1";
       sha256 = "1fs8jap2ndcj21qgpkzy9nbnabvp4ac0xm0vdwkjjdf7i4j5kaqr";
       buildDepends = [ profunctors transformers ];
       homepage = "https://github.com/fumieval/artery";
       description = "A simple, arrow-based reactive programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arx" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, bytestring-nums
     , file-embed, parsec, shell-escape
     }:
     mkDerivation {
       pname = "arx";
       version = "0.2.0";
       sha256 = "04af1a8b3njhv4gbn799p1dwryjdq3z54cws796iskm9628ds3yq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec blaze-builder bytestring-nums file-embed parsec
         shell-escape
       ];
       homepage = "http://github.com/solidsnack/arx/";
       description = "Archive execution tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "arxiv" = callPackage
    ({ mkDerivation, parsec, split, tagsoup }:
     mkDerivation {
       pname = "arxiv";
       version = "0.0.1";
       sha256 = "1has8v40h8w4v393pgd4qk4fzgdw02y12zk2hspkic1q5bx33dxh";
       editedCabalFile = "19xdrsrcg29c7ncy0gnxbk4zbnyb53j1kk9sys6j8h1l03k12qvl";
       buildDepends = [ parsec split tagsoup ];
       homepage = "http://github.com/toschoo/Haskell-Libs";
       description = "A client for the Arxiv API";
       license = "LGPL";
     }) {};

  "ascetic" = callPackage
    ({ mkDerivation, MissingH }:
     mkDerivation {
       pname = "ascetic";
       version = "0.0.0.4";
       sha256 = "1c5ip8q9b6xnvh3li03iilmqz33rrlis78zs0lh4jva67b37akqk";
       buildDepends = [ MissingH ];
       description = "Generic markup builder";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ascii" = callPackage
    ({ mkDerivation, blaze-builder, case-insensitive, hashable, text }:
     mkDerivation {
       pname = "ascii";
       version = "0.0.4.1";
       sha256 = "1xpw2n3gskndg74ilrq8zngawlvc3mbsji3nx2aprar96hdlpvpv";
       buildDepends = [ blaze-builder case-insensitive hashable text ];
       homepage = "https://github.com/snoyberg/ascii";
       description = "Type-safe, bytestring-based ASCII values. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ascii-vector-avc" = callPackage
    ({ mkDerivation, attoparsec, binary, deepseq, deepseq-generics
     , HUnit, split, zlib
     }:
     mkDerivation {
       pname = "ascii-vector-avc";
       version = "0.1.0.0";
       sha256 = "09m7wcq207glaz3s824vakj42vdaxc334y5k9lsh095v2xp7pwz4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec binary deepseq deepseq-generics HUnit split zlib
       ];
       description = "Process Ascii Vectors for Advantest 93k";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "ascii85-conduit" = callPackage
    ({ mkDerivation, conduit, hspec }:
     mkDerivation {
       pname = "ascii85-conduit";
       version = "0.1.0.0";
       sha256 = "191qw61y3jrbwzv7nabvxr6dxxigyxflbw49f0q637psqzdblsl5";
       buildDepends = [ conduit ];
       testDepends = [ conduit hspec ];
       description = "Conduit for encoding ByteString into Ascii85";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "asic" = callPackage
    ({ mkDerivation, asil, utf8-string }:
     mkDerivation {
       pname = "asic";
       version = "1.2";
       sha256 = "0w7pkfd0i46a6x2ivk659rx56v9nkjvlvnmiafy96y1cbfzkyffg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ asil utf8-string ];
       homepage = "http://www.pros.upv.es/fittest/";
       description = "Action Script Instrumentation Compiler";
       license = "LGPL";
     }) {};

  "asil" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, filepath
     , haskell-src-exts, mtl, utf8-string, uuagc, zip-archive, zlib
     }:
     mkDerivation {
       pname = "asil";
       version = "1.2";
       sha256 = "1zprddksk91wfyl1597cdgdy2r46d7vxjfxxi80rhxbfkshs4qwx";
       buildDepends = [
         binary data-binary-ieee754 filepath haskell-src-exts mtl
         utf8-string uuagc zip-archive zlib
       ];
       homepage = "http://www.pros.upv.es/fittest/";
       description = "Action Script Instrumentation Library";
       license = "LGPL";
     }) {};

  "asn1-data" = callPackage
    ({ mkDerivation, cereal, mtl, text }:
     mkDerivation {
       pname = "asn1-data";
       version = "0.7.1";
       sha256 = "10s7mxygw6w8a8mx090msvbl8pji8m68lsxxyr5bp7p887naia7r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cereal mtl text ];
       homepage = "http://github.com/vincenthz/hs-asn1-data";
       description = "ASN1 data reader and writer in RAW, BER and DER forms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "asn1-encoding" = callPackage
    ({ mkDerivation, asn1-types, hourglass, mtl, tasty
     , tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "asn1-encoding";
       version = "0.9.0";
       sha256 = "02x3lzyl4gavl3lc2lrg8rknyvs6r2hf8kmm7xrmma5m857iks8p";
       buildDepends = [ asn1-types hourglass mtl ];
       testDepends = [
         asn1-types hourglass mtl tasty tasty-quickcheck text
       ];
       homepage = "http://github.com/vincenthz/hs-asn1";
       description = "ASN1 data reader and writer in RAW, BER and DER forms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "asn1-parse" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, mtl, text }:
     mkDerivation {
       pname = "asn1-parse";
       version = "0.9.0";
       sha256 = "0m093wwndyxvy72qlnb70bp8w5ahimrlv1dp972l9s9l5jc4pjg3";
       buildDepends = [ asn1-encoding asn1-types mtl text ];
       homepage = "http://github.com/vincenthz/hs-asn1";
       description = "Simple monadic parser for ASN1 stream types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "asn1-types" = callPackage
    ({ mkDerivation, hourglass }:
     mkDerivation {
       pname = "asn1-types";
       version = "0.3.0";
       sha256 = "1am8nmfarv7ymy3rqm0js2i82v6n6qwz0lnzb1qdmy4ligcdm65r";
       buildDepends = [ hourglass ];
       homepage = "http://github.com/vincenthz/hs-asn1-types";
       description = "ASN.1 types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "asn1dump" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, pem }:
     mkDerivation {
       pname = "asn1dump";
       version = "0.1.0";
       sha256 = "05kdx00bkpp3f4x1i9j8kfbdnhsivx1njcfpcxxgw93jm5ng3lj7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ asn1-encoding asn1-types pem ];
       homepage = "http://github.com/vincenthz/hs-asn1dump";
       description = "Dump ASN1 structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "assembler" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "assembler";
       version = "0.0.1";
       sha256 = "1crwfndk7qci5id132s9f57i3kslxcdcqpymsykm1460x5nd42qs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec ];
       description = "Haskell Assembler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "assert" = callPackage
    ({ mkDerivation, Cabal, filepath, system-posix-redirect }:
     mkDerivation {
       pname = "assert";
       version = "0.0.1.2";
       sha256 = "0pycrpa9m8kif31jsbmb2cb4rbvm6qinmzhkdam1b5mbmmmg5q96";
       testDepends = [ Cabal filepath system-posix-redirect ];
       homepage = "https://github.com/liyang/assert";
       description = "Helpers for Control.Exception.assert";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "assert-failure" = callPackage
    ({ mkDerivation, pretty-show, text }:
     mkDerivation {
       pname = "assert-failure";
       version = "0.1.1.0";
       sha256 = "09djlhhyn9w822a5r41y7gk4cqk74a2fy7skzml2bah2an166gm1";
       buildDepends = [ pretty-show text ];
       homepage = "https://github.com/Mikolaj/assert-failure";
       description = "Syntactic sugar improving 'assert' and 'error'";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "assertions" = callPackage
    ({ mkDerivation, ansi-terminal, interpolate }:
     mkDerivation {
       pname = "assertions";
       version = "0.1.0.4";
       sha256 = "1b2p6b6brk0b1hq264i20bpdhdaq4xdzcqp7gzvfy1s5q3zwjzj8";
       buildDepends = [ ansi-terminal ];
       testDepends = [ interpolate ];
       description = "A simple testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "assimp" = callPackage
    ({ mkDerivation, assimp, c2hs, vect }:
     mkDerivation {
       pname = "assimp";
       version = "0.1";
       sha256 = "0jhf76v08dh1bf65ln0az1b8bc8zi9gxb0bx273mi3jvprhns4zh";
       buildDepends = [ vect ];
       buildTools = [ c2hs ];
       extraLibraries = [ assimp ];
       description = "The Assimp asset import library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) assimp; };

  "astar" = callPackage
    ({ mkDerivation, PSQueue }:
     mkDerivation {
       pname = "astar";
       version = "0.2.1";
       sha256 = "0qgymyaawk0ml929d5lgfikmqbxyz4shs66wq9ch9d6r175cs5b8";
       buildDepends = [ PSQueue ];
       description = "General A* search algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "astrds" = callPackage
    ({ mkDerivation, MonadRandom, mtl, OpenGL, random, SDL, SDL-image
     , SDL-mixer, SDL-ttf
     }:
     mkDerivation {
       pname = "astrds";
       version = "0.1.1";
       sha256 = "1zb265z6m1py2jxhxzrq2kb3arw2riagajhh3vs0m54rkrak6szs";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         MonadRandom mtl OpenGL random SDL SDL-image SDL-mixer SDL-ttf
       ];
       description = "an incomplete 2d space game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "astview" = callPackage
    ({ mkDerivation, astview-utils, filepath, glade, glib, Glob, gtk
     , gtksourceview2, hint, mtl, syb
     }:
     mkDerivation {
       pname = "astview";
       version = "0.1.4";
       sha256 = "0lv4wbblv4r0vwfynswsxzyrl6qp45byjdmg4cs760qq3jj749zl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         astview-utils filepath glade glib Glob gtk gtksourceview2 hint mtl
         syb
       ];
       description = "A GTK-based abstract syntax tree viewer for custom languages and parsers";
       license = "BSD4";
     }) {};

  "astview-utils" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "astview-utils";
       version = "0.1";
       sha256 = "1rqqlngmcdd7i1gww95lyim971w8xv0hjg20h0j8av4y29pjxfyn";
       buildDepends = [ syb ];
       description = "Interfacing between hint and astview";
       license = "BSD4";
     }) {};

  "async" = callPackage
    ({ mkDerivation, HUnit, stm, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "async";
       version = "2.0.1.6";
       sha256 = "06fzkqjliccxqiygms7v1xff3wlkg54n9xwzv7m1yxylkzlikjkz";
       buildDepends = [ stm ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "https://github.com/simonmar/async";
       description = "Run IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "async-extras" = callPackage
    ({ mkDerivation, async, lifted-async, lifted-base, monad-control
     , SafeSemaphore, stm, transformers-base
     }:
     mkDerivation {
       pname = "async-extras";
       version = "0.1.2.0";
       sha256 = "137vpkc4xlbmghbjmgdjxaqcji19cj1vxm64df9gxb7356d0rzyh";
       buildDepends = [
         async lifted-async lifted-base monad-control SafeSemaphore stm
         transformers-base
       ];
       homepage = "http://github.com/jfischoff/async-extras";
       description = "Extra Utilities for the Async Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "async-manager" = callPackage
    ({ mkDerivation, async, stm, unordered-containers }:
     mkDerivation {
       pname = "async-manager";
       version = "0.1.1.0";
       sha256 = "002w3n0ykn5ga7mwz9kjvr77izqnhklq5r3aczwjikvgkik9q6ck";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ async stm unordered-containers ];
       homepage = "http://github.com/jfischoff/async-manager";
       description = "A thread manager for async";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "async-pool" = callPackage
    ({ mkDerivation, async, fgl, hspec, monad-control, stm, time
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "async-pool";
       version = "0.8.0";
       sha256 = "13c3b8ggry476hp83bq0450j5y9990flq62jj6mjpjapyn1w283z";
       buildDepends = [
         async fgl monad-control stm transformers transformers-base
       ];
       testDepends = [
         async fgl hspec monad-control stm time transformers
         transformers-base
       ];
       description = "A modified version of async that supports worker groups and many-to-many task dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};

  "asynchronous-exceptions" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "asynchronous-exceptions";
       version = "1.1.0.1";
       sha256 = "0vfx2ikw61sic35n4ayy7rng6izpafksz7lh4xgkcmbg627vkm8s";
       homepage = "https://github.com/feuerbach/asynchronous-exceptions";
       description = "Distinguish between synchronous and asynchronous exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aterm" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "aterm";
       version = "0.1.0.1";
       sha256 = "02aajiirz68wqyrcigfb4cym7j43cf3p0dn4awcw8simnqhfaskh";
       homepage = "https://svn-agbkb.informatik.uni-bremen.de/Hets/trunk/atermlib";
       description = "serialisation for Haskell values with sharing support";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "aterm-utils" = callPackage
    ({ mkDerivation, aterm, mtl, transformers, wl-pprint }:
     mkDerivation {
       pname = "aterm-utils";
       version = "0.2.0.2";
       sha256 = "0yyk2mdxrla0hwh1mn50x5mgqskkaw6i086gqqmprljr2668kkj0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aterm mtl transformers wl-pprint ];
       homepage = "https://github.com/GaloisInc/aterm-utils";
       description = "Utility functions for working with aterms as generated by Minitermite";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atl" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "atl";
       version = "15409.2";
       sha256 = "1by20xr3s3f0rh1h9zfpcp1i8sn1qv6292mjvav108iws0dh4wq2";
       description = "Arrow Transformer Library";
       license = "LGPL";
     }) {};

  "atlassian-connect-core" = callPackage
    ({ mkDerivation, aeson, atlassian-connect-descriptor
     , base64-bytestring, case-insensitive, cipher-aes, configurator
     , cryptohash, hostname, http-client, http-media, http-types, jwt
     , mtl, network, network-api-support, network-uri, snap, snap-core
     , split, text, time, time-units, transformers
     }:
     mkDerivation {
       pname = "atlassian-connect-core";
       version = "0.4.0.0";
       sha256 = "1g802w7b31isjix2xypia26vqhy73cxrjk8izhxcnqyl4f6g5ym2";
       buildDepends = [
         aeson atlassian-connect-descriptor base64-bytestring
         case-insensitive cipher-aes configurator cryptohash hostname
         http-client http-media http-types jwt mtl network
         network-api-support network-uri snap snap-core split text time
         time-units transformers
       ];
       homepage = "https://bitbucket.org/ajknoll/atlassian-connect-core";
       description = "Atlassian Connect snaplet for the Snap Framework and helper code";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "atlassian-connect-descriptor" = callPackage
    ({ mkDerivation, aeson, Cabal, cases, HUnit, network, network-uri
     , scientific, text, time-units, unordered-containers, vector
     }:
     mkDerivation {
       pname = "atlassian-connect-descriptor";
       version = "0.2.0.1";
       sha256 = "1fk2kwf6yzy5r167rxy94lajwhglng0jsxccfkpdflmzbgdbr1q9";
       buildDepends = [
         aeson cases network network-uri text time-units
         unordered-containers
       ];
       testDepends = [
         aeson Cabal cases HUnit network network-uri scientific text
         time-units unordered-containers vector
       ];
       description = "Code that helps you create a valid Atlassian Connect Descriptor";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "atmos" = callPackage
    ({ mkDerivation, HUnit, test-framework, test-framework-hunit }:
     mkDerivation {
       pname = "atmos";
       version = "0.2.0.0";
       sha256 = "0qx5a6dzaxjw1flybpmbf3hf7xycg4x69283njszwijw23ak6sv6";
       testDepends = [ HUnit test-framework test-framework-hunit ];
       description = "1976 US Standard Atmosphere";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "atmos-dimensional" = callPackage
    ({ mkDerivation, atmos, dimensional }:
     mkDerivation {
       pname = "atmos-dimensional";
       version = "0.1.2";
       sha256 = "19rlcp1zn3k838c5ixsn6i09nclfwvd9prbirxy5fmch0yjlp39d";
       buildDepends = [ atmos dimensional ];
       description = "dimensional wrapper on atmos package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atmos-dimensional-tf" = callPackage
    ({ mkDerivation, atmos, dimensional-tf }:
     mkDerivation {
       pname = "atmos-dimensional-tf";
       version = "0.1.2";
       sha256 = "05g2v7ppbcvaw0dk9f0z0gb7k33c4lk2cm2ziyqahxmwsz928khm";
       buildDepends = [ atmos dimensional-tf ];
       description = "dimensional-tf wrapper on atmos package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atom" = callPackage
    ({ mkDerivation, bimap, mtl, syb }:
     mkDerivation {
       pname = "atom";
       version = "1.0.12";
       sha256 = "0mavmgaw9wb7sjrmr49h2xw4xvzywgbflvvxym0l9wc91dd3zhrp";
       buildDepends = [ bimap mtl syb ];
       homepage = "http://tomahawkins.org";
       description = "A DSL for embedded hard realtime applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atom-msp430" = callPackage
    ({ mkDerivation, atom, mtl }:
     mkDerivation {
       pname = "atom-msp430";
       version = "0.5.3";
       sha256 = "02h1g35f3bd3cjjhr28g63vk1mnghshq9586wa922rfl79jp6jcs";
       buildDepends = [ atom mtl ];
       homepage = "https://github.com/eightyeight/atom-msp430";
       description = "Convenience functions for using Atom with the MSP430 microcontroller family";
       license = stdenv.lib.licenses.mit;
     }) {};

  "atomic-primops" = callPackage
    ({ mkDerivation, primitive }:
     mkDerivation {
       pname = "atomic-primops";
       version = "0.6.1";
       sha256 = "1j8slmqsyhvx7xns1qpvbmcjsfqfkphycv32hgcmk17wl1fzbyi7";
       buildDepends = [ primitive ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "A safe approach to CAS and other atomic ops in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atomic-primops-foreign" = callPackage
    ({ mkDerivation, bits-atomic, HUnit, test-framework
     , test-framework-hunit, time
     }:
     mkDerivation {
       pname = "atomic-primops-foreign";
       version = "0.6.2";
       sha256 = "1pfdbrxx4s6n53lfhxghcalm8dif2r9zj45bipibvyiczz5xkkpm";
       buildDepends = [ bits-atomic ];
       testDepends = [
         bits-atomic HUnit test-framework test-framework-hunit time
       ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "An atomic counter implemented using the FFI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atomo" = callPackage
    ({ mkDerivation, filepath, hashable, haskeline, hint, mtl, parsec
     , regex-pcre, text, time, vector
     }:
     mkDerivation {
       pname = "atomo";
       version = "0.4.0.2";
       sha256 = "0hby64jd9zi518rnfk46ilipnp3x0ynkgqk2n0brf1873y88mwx8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath hashable haskeline hint mtl parsec regex-pcre text time
         vector
       ];
       homepage = "http://atomo-lang.org/";
       description = "A highly dynamic, extremely simple, very fun programming language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "attempt" = callPackage
    ({ mkDerivation, failure }:
     mkDerivation {
       pname = "attempt";
       version = "0.4.0.1";
       sha256 = "1gvq04ds62kk88r2210mxd1fggp6vf5p8j5hci9vqkkss1hy9rxh";
       buildDepends = [ failure ];
       homepage = "http://github.com/snoyberg/attempt/tree/master";
       description = "Concrete data type for handling extensible exceptions as failures. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atto-lisp" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, blaze-textual, deepseq
     , HUnit, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "atto-lisp";
       version = "0.2.2";
       sha256 = "13lhdalam4gn9faa58c3c7nssdwp2y0jsfl1lnnvr3dx6wzp0jhc";
       buildDepends = [
         attoparsec blaze-builder blaze-textual deepseq text
       ];
       testDepends = [
         attoparsec HUnit test-framework test-framework-hunit text
       ];
       homepage = "http://github.com/nominolo/atto-lisp";
       description = "Efficient parsing and serialisation of S-Expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "attoparsec" = callPackage
    ({ mkDerivation, deepseq, QuickCheck, scientific, test-framework
     , test-framework-quickcheck2, text, vector
     }:
     mkDerivation {
       pname = "attoparsec";
       version = "0.12.1.2";
       sha256 = "1vazyr3fdahdg1q503sbj0zv4xj7sm7j32mjm856bm51j2s0rhlc";
       buildDepends = [ deepseq scientific text ];
       testDepends = [
         deepseq QuickCheck scientific test-framework
         test-framework-quickcheck2 text vector
       ];
       homepage = "https://github.com/bos/attoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "attoparsec-arff" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "attoparsec-arff";
       version = "0.0";
       sha256 = "1jf9065pqmdfshkd0cqiamhivs9an4slqx82n7yj0kkhdxw5lyq4";
       buildDepends = [ attoparsec ];
       description = "An ARFF file parser using Attoparsec";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "attoparsec-binary" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "attoparsec-binary";
       version = "0.2";
       sha256 = "02vswxsgayw50xli7mbacsjmk1diifzkfgnyfn9ck5mk41dl9rh5";
       buildDepends = [ attoparsec ];
       description = "Binary processing extensions to Attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "attoparsec-conduit" = callPackage
    ({ mkDerivation, conduit }:
     mkDerivation {
       pname = "attoparsec-conduit";
       version = "1.1.0";
       sha256 = "18xn3nzxfghcd88cana1jw85ijv0ysw3bp36fb6r5wsf6m79z01y";
       buildDepends = [ conduit ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Consume attoparsec parsers via conduit. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "attoparsec-csv" = callPackage
    ({ mkDerivation, attoparsec, text }:
     mkDerivation {
       pname = "attoparsec-csv";
       version = "0.1.0.1";
       sha256 = "0zh1g9687nrdxksniq348jc04hbgf5kxbzqs0kggmz7qqw03iq0v";
       buildDepends = [ attoparsec text ];
       homepage = "https://github.com/robinbb/attoparsec-csv";
       description = "A parser for CSV files that uses Attoparsec";
       license = "unknown";
     }) {};

  "attoparsec-enumerator" = callPackage
    ({ mkDerivation, attoparsec, enumerator, text }:
     mkDerivation {
       pname = "attoparsec-enumerator";
       version = "0.3.3";
       sha256 = "0z57bbw97v92dkjp57zj9nfzsdas2n1qfw472k1aa84iqb6hbw9w";
       buildDepends = [ attoparsec enumerator text ];
       homepage = "https://john-millikin.com/software/attoparsec-enumerator/";
       description = "Pass input from an enumerator to an Attoparsec parser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "attoparsec-expr" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "attoparsec-expr";
       version = "0.1.1.1";
       sha256 = "09305lp9q3cgvpv4d878c34dk07g7p13hc07hrp2xlwl7rc3nac3";
       buildDepends = [ attoparsec ];
       description = "Port of parsec's expression parser to attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "attoparsec-iteratee" = callPackage
    ({ mkDerivation, attoparsec, iteratee, transformers }:
     mkDerivation {
       pname = "attoparsec-iteratee";
       version = "0.4.0";
       sha256 = "1j57xhk34ghi1b2gnzrfbswv2nab5h0z52h3wvx9w8d97bbvqp2s";
       buildDepends = [ attoparsec iteratee transformers ];
       homepage = "http://github.com/gregorycollins";
       description = "An adapter to convert attoparsec Parsers into blazing-fast Iteratees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "attoparsec-parsec" = callPackage
    ({ mkDerivation, attoparsec, hspec, markdown-unlit, parsec
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "attoparsec-parsec";
       version = "0.1.3";
       sha256 = "0mi3f1kwcss8m1679ymiydp1sb1xdyv1f6a0qx9d683p86qxrwzq";
       buildDepends = [ attoparsec parsec text ];
       testDepends = [ attoparsec hspec markdown-unlit QuickCheck text ];
       description = "An Attoparsec compatibility layer for Parsec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "attoparsec-text" = callPackage
    ({ mkDerivation, attoparsec, text }:
     mkDerivation {
       pname = "attoparsec-text";
       version = "0.8.5.3";
       sha256 = "1qq42lp1sah80a6lnnafi6pwl61b4w4q4jk1pbb7pg5p06mmk315";
       buildDepends = [ attoparsec text ];
       homepage = "http://patch-tag.com/r/felipe/attoparsec-text/home";
       description = "(deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "attoparsec-text-enumerator" = callPackage
    ({ mkDerivation, attoparsec-text, enumerator, text }:
     mkDerivation {
       pname = "attoparsec-text-enumerator";
       version = "0.2.0.1";
       sha256 = "0cffcwji141js09r7avb15b08xl4s8cgk5vxyrqaq7zw40hhb1gz";
       buildDepends = [ attoparsec-text enumerator text ];
       description = "(deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "attosplit" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "attosplit";
       version = "0.1.0.0";
       sha256 = "01sh8k9n9040xqx1lbn74rcf59j54n5861d9db1y5cdy7qssxyg4";
       buildDepends = [ attoparsec ];
       homepage = "http://projects.haskell.org/attosplit";
       description = "Split a lazy bytestring at boundaries defined by an attoparsec parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "atuin" = callPackage
    ({ mkDerivation, Cabal, epic }:
     mkDerivation {
       pname = "atuin";
       version = "0.1.1";
       sha256 = "1wmfnvl39amyfzkvpd3gysshyf10fjjb91zibalkqbq9pbsnfzjk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal epic ];
       homepage = "http://www.dcs.st-and.ac.uk/~eb/epic.php";
       description = "Embedded Turtle language compiler in Haskell, with Epic output";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "augeas" = callPackage
    ({ mkDerivation, augeas, HUnit }:
     mkDerivation {
       pname = "augeas";
       version = "0.6.1";
       sha256 = "08z6l97hi6clv3b34mz9zjc5rns02jx1zx9iqdsmjl2p7hcn7rs5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit ];
       extraLibraries = [ augeas ];
       pkgconfigDepends = [ augeas ];
       homepage = "http://trac.haskell.org/augeas";
       description = "A Haskell FFI wrapper for the Augeas API";
       license = "LGPL";
     }) { inherit (pkgs) augeas; };

  "augur" = callPackage
    ({ mkDerivation, classify, filepath, HaXml, mtl }:
     mkDerivation {
       pname = "augur";
       version = "2008.11.17";
       sha256 = "1jvbf3z9z6m40hprykxcc5xwbmwm6p5hwlyab0dimd8h2ar50xfr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ classify filepath HaXml mtl ];
       description = "Renaming media collections in a breeze";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aur" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, filepath, lens, lens-aeson
     , mtl, text, vector, wreq
     }:
     mkDerivation {
       pname = "aur";
       version = "2.0.3";
       sha256 = "0gnvnqxkgyq9ydrx5divqd9g9ja6znj2zqn0ra8q3i3701cczzw2";
       buildDepends = [
         aeson aeson-pretty filepath lens lens-aeson mtl text vector wreq
       ];
       homepage = "https://github.com/fosskers/haskell-aur";
       description = "Access metadata from the Arch Linux User Repository";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "authenticate" = callPackage
    ({ mkDerivation, aeson, attoparsec, blaze-builder, case-insensitive
     , conduit, http-conduit, http-types, monad-control, network-uri
     , resourcet, tagstream-conduit, text, transformers
     , unordered-containers, xml-conduit
     }:
     mkDerivation {
       pname = "authenticate";
       version = "1.3.2.10";
       sha256 = "1dy38k5jpms3xrkw1zh7vjmx06yr5iibgh50m5i2wky2wmryqkf4";
       buildDepends = [
         aeson attoparsec blaze-builder case-insensitive conduit
         http-conduit http-types monad-control network-uri resourcet
         tagstream-conduit text transformers unordered-containers
         xml-conduit
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Authentication methods for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "authenticate-kerberos" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "authenticate-kerberos";
       version = "1.0.0";
       sha256 = "06k8xi9n44xq63dpmcv4l0vg35y19dk5x1ibyay05w58k4kv4fdq";
       buildDepends = [ text ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Authentication methods for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "authenticate-ldap" = callPackage
    ({ mkDerivation, LDAP, text, transformers }:
     mkDerivation {
       pname = "authenticate-ldap";
       version = "0.0.3";
       sha256 = "1wsx43l7jl40jpzhiv2fjc1mnpsaaryrjpqaiyqsn3ahacsy4ly5";
       buildDepends = [ LDAP text transformers ];
       homepage = "http://github.com:mlitchard/authenticate-ldap";
       description = "LDAP authentication for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "authenticate-oauth" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder
     , blaze-builder-conduit, crypto-pubkey-types, data-default
     , http-client, http-types, random, RSA, SHA, time, transformers
     }:
     mkDerivation {
       pname = "authenticate-oauth";
       version = "1.5";
       sha256 = "07y9zh4v9by588k86wlyj3czivj5jlb9jk6g4j9p8j1qgbv4hpk9";
       buildDepends = [
         base64-bytestring blaze-builder blaze-builder-conduit
         crypto-pubkey-types data-default http-client http-types random RSA
         SHA time transformers
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Library to authenticate with OAuth for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "authinfo-hs" = callPackage
    ({ mkDerivation, attoparsec, network, text }:
     mkDerivation {
       pname = "authinfo-hs";
       version = "0.1.0.0";
       sha256 = "1jv0y4y2ig8dx95xw3zbxc1h9mv3wi3r8xqx00llmf2qs6wgdlp5";
       buildDepends = [ attoparsec network text ];
       homepage = "http://github.com/robgssp/authinfo-hs";
       description = "Password querying for .authinfo";
       license = stdenv.lib.licenses.mit;
     }) {};

  "authoring" = callPackage
    ({ mkDerivation, ansi-wl-pprint, citation-resolve, data-default
     , haskell-src-meta, HaTeX, lens, mtl, parsers, safe, text
     , transformers, trifecta
     }:
     mkDerivation {
       pname = "authoring";
       version = "0.3.4";
       sha256 = "0jfxgrbkcqpfcvg1jk7ysd74bq7xjlvzqamnr3qg4ib9zg6yw0k4";
       buildDepends = [
         ansi-wl-pprint citation-resolve data-default haskell-src-meta HaTeX
         lens mtl parsers safe text transformers trifecta
       ];
       homepage = "http://github.com/nushio3/authoring";
       description = "A library for writing papers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "auto-update" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "auto-update";
       version = "0.1.2";
       sha256 = "0ccix41jjpqkzvnfr5md1cbhsa9fkv6dy7yw73j8dnvqbqnz1z0l";
       homepage = "https://github.com/yesodweb/wai";
       description = "Efficiently run periodic, on-demand actions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "autonix-deps" = callPackage
    ({ mkDerivation, conduit, errors, filepath, lens
     , libarchive-conduit, mtl, optparse-applicative, regex-tdfa
     , resourcet, transformers, xml
     }:
     mkDerivation {
       pname = "autonix-deps";
       version = "0.1.0.0";
       sha256 = "0kmyl117wjyrgxzng3avxq3rjqq6ifxd0b14x8nazpl4566qccfw";
       buildDepends = [
         conduit errors filepath lens libarchive-conduit mtl
         optparse-applicative regex-tdfa resourcet transformers xml
       ];
       description = "Library for Nix expression dependency generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "autonix-deps-kf5" = callPackage
    ({ mkDerivation, autonix-deps, conduit, filepath, lens, mtl
     , transformers
     }:
     mkDerivation {
       pname = "autonix-deps-kf5";
       version = "0.1.0.0";
       sha256 = "04lhp4gnzpa5r2wlbvm29ig87335b5ahnw19wkaychv54n0505xj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         autonix-deps conduit filepath lens mtl transformers
       ];
       description = "Generate dependencies for KDE 5 Nix expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "autoproc" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "autoproc";
       version = "0.1.2";
       sha256 = "0yrlaq2jr89ncla3cpj6ir8bamwdchxnr39vsvkm7qpan61f2x65";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://code.haskell.org/autoproc";
       description = "EDSL for Procmail scripts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "avahi" = callPackage
    ({ mkDerivation, dbus-core, text }:
     mkDerivation {
       pname = "avahi";
       version = "0.1.1";
       sha256 = "0b2bw0rp33g8s1y6hyqji3ycv26a4ixgjmkph93isnjxglfl6ah0";
       buildDepends = [ dbus-core text ];
       description = "Minimal DBus bindings for Avahi daemon (http://avahi.org)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "average" = callPackage
    ({ mkDerivation, semigroups, vector-space }:
     mkDerivation {
       pname = "average";
       version = "0.6";
       sha256 = "0ag2jxhxap8wzdlb23zvly5y09k6kh134rwdxq6dqxlqwfwhsyc9";
       buildDepends = [ semigroups vector-space ];
       description = "An average (arithmetic mean) monoid";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "avl-static" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "avl-static";
       version = "0.1.0.0";
       sha256 = "13rl5wrpmbb4c0zsaymivi4d9qg2wl4lfw4nvkd81naqm3vskc10";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "A compile-time balanced AVL tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "avr-shake" = callPackage
    ({ mkDerivation, dependent-sum, mtl, shake }:
     mkDerivation {
       pname = "avr-shake";
       version = "0.0.1.0";
       sha256 = "08n9yk1dc0sisinapys4dvkyg4n96j9nmszrj7m9jrgjzks238fj";
       buildDepends = [ dependent-sum mtl shake ];
       homepage = "https://github.com/mokus0/avr-shake";
       description = "AVR Crosspack actions for shake build systems";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "awesomium" = callPackage
    ({ mkDerivation, aeson, attoparsec, awesomium-raw, text, vector }:
     mkDerivation {
       pname = "awesomium";
       version = "0.1.0.0";
       sha256 = "0qd89nlw4rqdl8iya49rldyn5a36d64slcnw5pfh5c5aajh27aq2";
       buildDepends = [ aeson attoparsec awesomium-raw text vector ];
       description = "High-level Awesomium bindings";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "awesomium-glut" = callPackage
    ({ mkDerivation, awesomium, awesomium-raw, GLUT }:
     mkDerivation {
       pname = "awesomium-glut";
       version = "0.1.0.0";
       sha256 = "175hgqix2j26579g0rrryl86w7qvla95nvf4lwfxsxxwqgcq3zpd";
       buildDepends = [ awesomium awesomium-raw GLUT ];
       description = "Utilities for using Awesomium with GLUT";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "awesomium-raw" = callPackage
    ({ mkDerivation, awesomium, c2hs }:
     mkDerivation {
       pname = "awesomium-raw";
       version = "0.1.0.0";
       sha256 = "0djilsrgb8y84ssslwawhw6lky7bqspz31qwjy9lkxywi5hwxnyb";
       buildTools = [ c2hs ];
       extraLibraries = [ awesomium ];
       description = "Low-level Awesomium bindings";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) awesomium; };

  "aws" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring
     , base64-bytestring, blaze-builder, byteable, case-insensitive
     , cereal, conduit, conduit-extra, cryptohash, data-default, errors
     , filepath, http-client, http-conduit, http-types, lifted-base
     , monad-control, mtl, network, QuickCheck, quickcheck-instances
     , resourcet, safe, scientific, tagged, tasty, tasty-quickcheck
     , text, time, transformers, transformers-base, unordered-containers
     , utf8-string, vector, xml-conduit
     }:
     mkDerivation {
       pname = "aws";
       version = "0.11";
       sha256 = "19q7r74c5xw04vpwl2fwm675bvkp3vhlak63iqfl1927z2jsyva9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base16-bytestring base64-bytestring blaze-builder
         byteable case-insensitive cereal conduit conduit-extra cryptohash
         data-default filepath http-conduit http-types lifted-base
         monad-control mtl network resourcet safe scientific tagged text
         time transformers unordered-containers utf8-string vector
         xml-conduit
       ];
       testDepends = [
         aeson errors http-client lifted-base monad-control mtl QuickCheck
         quickcheck-instances resourcet tagged tasty tasty-quickcheck text
         time transformers transformers-base
       ];
       homepage = "http://github.com/aristidb/aws";
       description = "Amazon Web Services (AWS) for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-cloudfront-signer" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base64-bytestring
     , crypto-pubkey-types, RSA, time
     }:
     mkDerivation {
       pname = "aws-cloudfront-signer";
       version = "1.1.0.2";
       sha256 = "0cxh0b0g4lms2zpgw6q4k7bk2a7px8kafdr6qrbrcf7p3dkmzwd9";
       buildDepends = [
         asn1-encoding asn1-types base64-bytestring crypto-pubkey-types RSA
         time
       ];
       homepage = "http://github.com/iconnect/aws-cloudfront-signer";
       description = "For signing AWS CloudFront HTTP URL requests";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-dynamodb-streams" = callPackage
    ({ mkDerivation, aeson, attoparsec, aws, aws-general
     , base-unicode-symbols, base16-bytestring, base64-bytestring
     , byteable, case-insensitive, conduit, conduit-extra, cryptohash
     , http-conduit, http-types, mtl, parsers, profunctors, resourcet
     , scientific, text, time
     }:
     mkDerivation {
       pname = "aws-dynamodb-streams";
       version = "0.1.0.0";
       sha256 = "0yqmijls71jyvic2saabj3kwnpaxmlj6mf4krcdli3626ra7w4r2";
       buildDepends = [
         aeson attoparsec aws aws-general base-unicode-symbols
         base16-bytestring base64-bytestring byteable case-insensitive
         conduit conduit-extra cryptohash http-conduit http-types mtl
         parsers profunctors resourcet scientific text time
       ];
       description = "Haskell bindings for Amazon DynamoDB Streams";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "aws-ec2" = callPackage
    ({ mkDerivation, aeson, aws, base16-bytestring, base64-bytestring
     , blaze-builder, byteable, conduit-extra, cryptohash, http-conduit
     , http-types, mtl, optparse-applicative, resourcet, scientific
     , text, time, unordered-containers, vector, xml-conduit
     }:
     mkDerivation {
       pname = "aws-ec2";
       version = "0.2.2";
       sha256 = "1jlm6a4mb3mzzvql8llnvci4qd8imf58m681iqhcw1qq6hy56srl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aws base16-bytestring base64-bytestring blaze-builder
         byteable conduit-extra cryptohash http-conduit http-types mtl
         optparse-applicative resourcet scientific text time
         unordered-containers vector xml-conduit
       ];
       homepage = "https://github.com/zalora/aws-ec2";
       description = "AWS EC2/VPC, ELB and CloudWatch client library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-elastic-transcoder" = callPackage
    ({ mkDerivation, aeson, aws, aws-sign4, Cabal, conduit
     , http-conduit, http-types, QuickCheck, regex-compat, safe, text
     , time, transformers
     }:
     mkDerivation {
       pname = "aws-elastic-transcoder";
       version = "0.2.0.2";
       sha256 = "02dygqqyal6s3ibjvgxng4vspld3c6mrgrwdhig8lfri2zdpqsw9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aws aws-sign4 conduit http-conduit http-types QuickCheck
         regex-compat safe text time transformers
       ];
       testDepends = [ aeson Cabal QuickCheck regex-compat safe text ];
       homepage = "http://github.com/iconnect/aws-elastic-transcoder";
       description = "Haskell suite for the Elastic Transcoder service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-general" = callPackage
    ({ mkDerivation, aeson, attoparsec, aws, base16-bytestring
     , blaze-builder, byteable, case-insensitive, charset, cryptohash
     , either, errors, hashable, http-types, parsers, QuickCheck
     , quickcheck-instances, tagged, tasty, tasty-quickcheck, text, time
     , transformers
     }:
     mkDerivation {
       pname = "aws-general";
       version = "0.1.1";
       sha256 = "002ly4n3qlffhhplvhqqa4cwdi2qgnl0vdm9mr2y2pzi9rdd4ijp";
       buildDepends = [
         aeson attoparsec base16-bytestring blaze-builder byteable
         case-insensitive cryptohash hashable http-types parsers QuickCheck
         quickcheck-instances text time transformers
       ];
       testDepends = [
         attoparsec aws case-insensitive charset either errors http-types
         parsers QuickCheck quickcheck-instances tagged tasty
         tasty-quickcheck text time transformers
       ];
       homepage = "https://github.com/alephcloud/hs-aws-general";
       description = "Bindings for AWS General API Version 0.1";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aws-kinesis" = callPackage
    ({ mkDerivation, aeson, aws, aws-general, base64-bytestring
     , blaze-builder, conduit, conduit-extra, errors, http-conduit
     , http-types, mtl, parsers, QuickCheck, quickcheck-instances
     , resourcet, tagged, tasty, tasty-quickcheck, text, time
     , transformers
     }:
     mkDerivation {
       pname = "aws-kinesis";
       version = "0.1.1";
       sha256 = "1xqvqbii9cgldwnfhbpsnc9qc8ss654wy7a5s30zsy38ssvmihpk";
       buildDepends = [
         aeson aws aws-general base64-bytestring blaze-builder conduit
         conduit-extra http-conduit http-types parsers QuickCheck
         quickcheck-instances resourcet text time transformers
       ];
       testDepends = [
         aeson aws aws-general errors mtl QuickCheck tagged tasty
         tasty-quickcheck text transformers
       ];
       homepage = "https://github.com/alephcloud/hs-aws-kinesis";
       description = "Bindings for AWS Kinesis Version 2013-12-02";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aws-kinesis-reshard" = callPackage
    ({ mkDerivation, aws, aws-general, aws-kinesis, aws-sdk
     , base-unicode-symbols, conduit, either, hoist-error, lens
     , lifted-async, lifted-base, monad-control, mtl
     , optparse-applicative, resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "aws-kinesis-reshard";
       version = "0.1.0.0";
       sha256 = "0g8zbga3v6h8b6dk3hqvhmlmn6kq0cqxbvxhj94qgqzy7qja1pj9";
       editedCabalFile = "14pcl8ghcgg8fqz7qzjb58x20xq55yvz2xlx9han769nw107wjn6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aws aws-general aws-kinesis aws-sdk base-unicode-symbols conduit
         either hoist-error lens lifted-async lifted-base monad-control mtl
         optparse-applicative resourcet text time transformers
       ];
       homepage = "https://github.com/alephcloud/hs-aws-kinesis-reshard";
       description = "Reshard AWS Kinesis streams in response to Cloud Watch metrics";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "aws-performance-tests" = callPackage
    ({ mkDerivation, aeson, async, aws, configuration-tools, dlist
     , errors, http-client, lens, lifted-base, monad-control, mtl
     , optparse-applicative, resourcet, statistics, text, time
     , transformers, vector
     }:
     mkDerivation {
       pname = "aws-performance-tests";
       version = "0.1.1";
       sha256 = "1m9najkh21ww4xmddad8ksnfa3if8q955q1vf3m48f52r2dl81hw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson async aws configuration-tools dlist errors http-client lens
         lifted-base monad-control mtl optparse-applicative resourcet
         statistics text time transformers vector
       ];
       homepage = "http://github.com/alephcloud/hs-aws-performance-tests";
       description = "Performance Tests for the Haskell bindings for Amazon Web Services (AWS)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "aws-route53" = callPackage
    ({ mkDerivation, aws, http-conduit, http-types, resourcet, text
     , time, xml-conduit, xml-hamlet
     }:
     mkDerivation {
       pname = "aws-route53";
       version = "0.1.1";
       sha256 = "1nzxs6ff0nh6ncswfnx2gxxmx2by0xxzfpmlkk1cnd9xkz7c8n0k";
       buildDepends = [
         aws http-conduit http-types resourcet text time xml-conduit
         xml-hamlet
       ];
       description = "Amazon Route53 DNS service plugin for the aws package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-sdk" = callPackage
    ({ mkDerivation, base64-bytestring, conduit, conduit-extra
     , data-default, hspec, http-conduit, http-types, HUnit, iproute
     , lifted-base, monad-control, mtl, parallel, parsec, QuickCheck
     , random, resourcet, safe, SHA, simple-config, strptime, text, time
     , tls, transformers, transformers-base, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "aws-sdk";
       version = "0.12.4";
       sha256 = "0zmwfkfddiyyn264kay6m295fh23gii8axln1fjykbsdgd6yy5rb";
       buildDepends = [
         base64-bytestring conduit conduit-extra data-default http-conduit
         http-types iproute lifted-base monad-control mtl parallel parsec
         resourcet safe SHA simple-config strptime text time tls
         transformers transformers-base xml-conduit xml-types
       ];
       testDepends = [
         conduit hspec http-conduit HUnit iproute lifted-base monad-control
         QuickCheck random resourcet text time tls transformers
       ];
       homepage = "http://worksap-ate.github.com/aws-sdk";
       description = "AWS SDK for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-sdk-text-converter" = callPackage
    ({ mkDerivation, hspec, HUnit, iproute, QuickCheck, safe, strptime
     , text, time
     }:
     mkDerivation {
       pname = "aws-sdk-text-converter";
       version = "0.3";
       sha256 = "06a9sj9k1zpnzjcz8bd952fljwdn5r3vn5cg0vvc50bnidf99nfk";
       buildDepends = [ iproute safe strptime text time ];
       testDepends = [
         hspec HUnit iproute QuickCheck safe strptime text time
       ];
       homepage = "https://github.com/worksap-ate/aws-sdk-text-converter";
       description = "The text converter for aws-sdk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-sdk-xml-unordered" = callPackage
    ({ mkDerivation, aws-sdk-text-converter, conduit, hspec
     , lifted-base, mtl, resourcet, text, unordered-containers
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "aws-sdk-xml-unordered";
       version = "0.3.1";
       sha256 = "0f90l61npi6x59i81k2cjfklpjl5m52zj7ww04k3y5x5c7nj26nd";
       buildDepends = [
         aws-sdk-text-converter conduit lifted-base mtl resourcet text
         unordered-containers xml-conduit xml-types
       ];
       testDepends = [ conduit hspec mtl resourcet text xml-conduit ];
       homepage = "https://github.com/worksap-ate/aws-sdk-xml-unordered";
       description = "The xml parser for aws-sdk package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-sign4" = callPackage
    ({ mkDerivation, attempt, aws, blaze-builder, byteable
     , bytestring-lexing, Cabal, case-insensitive, cryptohash, filepath
     , http-types, safe, text, time
     }:
     mkDerivation {
       pname = "aws-sign4";
       version = "1.1.0.1";
       sha256 = "1jw4dp8gg4lzski55iw5m5xihyx1cp33c334nlkd2xydrkk8rjhh";
       buildDepends = [
         aws blaze-builder byteable case-insensitive cryptohash http-types
         safe time
       ];
       testDepends = [
         attempt aws blaze-builder byteable bytestring-lexing Cabal
         case-insensitive cryptohash filepath http-types safe text time
       ];
       homepage = "http://github.com/iconnect/aws-sign4";
       description = "Amazon Web Services (AWS) Signature v4 HTTP request signer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "aws-sns" = callPackage
    ({ mkDerivation, aeson, aws, aws-general, blaze-builder, conduit
     , errors, http-conduit, http-types, mtl, parsers, QuickCheck
     , resourcet, tagged, tasty, tasty-quickcheck, text, time
     , transformers, xml-conduit
     }:
     mkDerivation {
       pname = "aws-sns";
       version = "0.1";
       sha256 = "1v1fjldn1bx65vv84zgx7np84pl4cr1wddngchkjxzci07ydrjpm";
       buildDepends = [
         aeson aws aws-general blaze-builder conduit http-conduit http-types
         parsers QuickCheck resourcet text time transformers xml-conduit
       ];
       testDepends = [
         aeson aws aws-general errors mtl QuickCheck tagged tasty
         tasty-quickcheck text transformers
       ];
       homepage = "https://github.com/alephcloud/hs-aws-sns";
       description = "Bindings for AWS SNS Version 2013-03-31";
       license = stdenv.lib.licenses.mit;
     }) {};

  "azure-acs" = callPackage
    ({ mkDerivation, attoparsec, conduit, conduit-extra, connection
     , http-conduit, http-types, network, time
     }:
     mkDerivation {
       pname = "azure-acs";
       version = "0.0.1.1";
       sha256 = "09gv4ym6nxx5854m40p06pxvxrqfhmadxlb0d72pji6hk180yg5l";
       buildDepends = [
         attoparsec conduit conduit-extra connection http-conduit http-types
         network time
       ];
       homepage = "https://github.com/kapilash/hs-azure";
       description = "Windows Azure ACS";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "azure-service-api" = callPackage
    ({ mkDerivation, binary, case-insensitive, certificate
     , crypto-pubkey-types, http-conduit, hxt, hxt-xpath, resourcet, tls
     , tls-extra, transformers
     }:
     mkDerivation {
       pname = "azure-service-api";
       version = "0.1.0.0";
       sha256 = "09wb94k8f8wgcdx036x2fzixck7cbv739rrh299m7awbl4i3mfhg";
       buildDepends = [
         binary case-insensitive certificate crypto-pubkey-types
         http-conduit hxt hxt-xpath resourcet tls tls-extra transformers
       ];
       homepage = "github.com/haskell-distributed/azure-service-api";
       description = "Haskell bindings for the Microsoft Azure Service Management API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "azure-servicebus" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, azure-acs
     , case-insensitive, conduit, connection, http-client, http-conduit
     , http-types, network, text
     }:
     mkDerivation {
       pname = "azure-servicebus";
       version = "0.1.6.0";
       sha256 = "1ig8af14m11di9fis6s5hxmfqh7hc40c3bqyighnpi25xnv7mm13";
       buildDepends = [
         aeson async attoparsec azure-acs case-insensitive conduit
         connection http-client http-conduit http-types network text
       ];
       homepage = "https://github.com/kapilash/hs-azure";
       description = "Haskell wrapper over Microsoft Azure ServiceBus REST API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "azurify" = callPackage
    ({ mkDerivation, base64-bytestring, case-insensitive, cmdargs
     , conduit, data-default, http-conduit, http-date, http-types, hxt
     , hxt-unicode, network, SHA, text, time, transformers, unix-compat
     , utf8-string
     }:
     mkDerivation {
       pname = "azurify";
       version = "0.4.0.5";
       sha256 = "0nqkpizqiwv7wfs1bgl8q13aaqnc9wjh8gs6fyiklplnjdcpqf9g";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base64-bytestring case-insensitive cmdargs conduit data-default
         http-conduit http-date http-types hxt hxt-unicode network SHA text
         time transformers unix-compat utf8-string
       ];
       homepage = "http://arnovanlumig.com/azure";
       description = "A simple library for accessing Azure blob storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "b-tree" = callPackage
    ({ mkDerivation, binary, errors, filepath, lens, mmap, mtl, pipes
     , pipes-interleave, transformers, vector
     }:
     mkDerivation {
       pname = "b-tree";
       version = "0.1.0.0";
       sha256 = "0ckj5gh3p6rycqwydlapw5gl4sx00g4idjnqnh1m7piszhhr3bw0";
       buildDepends = [
         binary errors filepath lens mmap mtl pipes pipes-interleave
         transformers vector
       ];
       homepage = "http://github.com/bgamari/b-tree";
       description = "Immutable disk-based B* trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "babylon" = callPackage
    ({ mkDerivation, random, wx, wxcore }:
     mkDerivation {
       pname = "babylon";
       version = "0.3";
       sha256 = "12cyn149dgd9wvnc7smqsfy15mzgyfg8l17y6qz0k4dyapp8fvhf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random wx wxcore ];
       description = "An implementation of a simple 2-player board game";
       license = "GPL";
     }) {};

  "backdropper" = callPackage
    ({ mkDerivation, hslogger, random }:
     mkDerivation {
       pname = "backdropper";
       version = "1.2";
       sha256 = "1z5v0p2yfgln9sv41myr10cjq60xcaav0hfzc18bmmssl8x2yljy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hslogger random ];
       description = "Rotates backdrops for X11 displays using Imagemagic";
       license = "GPL";
     }) {};

  "backtracking-exceptions" = callPackage
    ({ mkDerivation, either, free, kan-extensions, mtl, semigroupoids
     , semigroups, transformers
     }:
     mkDerivation {
       pname = "backtracking-exceptions";
       version = "0.1.0.0";
       sha256 = "1m4z4m4ncyswvbr12dsvl0gz5398jxy99zkh22xjrdmfgl8rx6p2";
       buildDepends = [
         either free kan-extensions mtl semigroupoids semigroups
         transformers
       ];
       homepage = "https://github.com/tapuu/backtracking-exceptions";
       description = "A monad transformer for backtracking exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "backward-state" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "backward-state";
       version = "0.1.0.2";
       sha256 = "1akxm0v23gnph5jxwi20wq4lk07vd2kpiqns550k499yw95vqyam";
       buildDepends = [ transformers ];
       homepage = "https://github.com/luqui/backward-state";
       description = "A state monad that runs the state in reverse through the computation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bacteria" = callPackage
    ({ mkDerivation, gd, X11 }:
     mkDerivation {
       pname = "bacteria";
       version = "1.1";
       sha256 = "19y7p53b80lqfrs1b945l4pc73c54zivk8l6lffzznd7gmbc0mv5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gd X11 ];
       homepage = "http://www.dmwit.com/bacteria";
       description = "braindead utility to compose Xinerama backgrounds";
       license = "unknown";
     }) {};

  "bag" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bag";
       version = "0.1";
       sha256 = "18n7ggrfm39mn4rva661hkxj75gjx2p3jcm0hlzpcshxyk93iblr";
       description = "A simple stable bag";
       license = stdenv.lib.licenses.mit;
     }) {};

  "bake" = callPackage
    ({ mkDerivation, aeson, cmdargs, deepseq, extra, filepath, hashable
     , HTTP, http-types, random, shake, text, time, wai, warp
     }:
     mkDerivation {
       pname = "bake";
       version = "0.2";
       sha256 = "1j7m9q5vk35sqs6if9rzb72avi7xbjhbcv0hpg9qvn9nvs38dgiw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson cmdargs deepseq extra filepath hashable HTTP http-types
         random shake text time wai warp
       ];
       homepage = "https://github.com/ndmitchell/bake#readme";
       description = "Continuous integration system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bamboo" = callPackage
    ({ mkDerivation, data-default, filepath, gravatar, hack
     , hack-contrib, mps, mtl, network, pandoc, parsec, parsedate, time
     , utf8-string, xhtml, zlib
     }:
     mkDerivation {
       pname = "bamboo";
       version = "2010.2.25";
       sha256 = "0v96ync9vkq7xyc5jmm7k7vfxpy4m1l2370m99wa8qlrpcffhrmi";
       buildDepends = [
         data-default filepath gravatar hack hack-contrib mps mtl network
         pandoc parsec parsedate time utf8-string xhtml zlib
       ];
       homepage = "http://github.com/nfjinjing/bamboo/tree/master";
       description = "A blog engine on Hack";
       license = "GPL";
     }) {};

  "bamboo-launcher" = callPackage
    ({ mkDerivation, bamboo, bamboo-theme-blueprint, data-default, hack
     , hack-contrib, hack-handler-hyena, mps
     }:
     mkDerivation {
       pname = "bamboo-launcher";
       version = "2010.2.25";
       sha256 = "1xp2k33jxbkf0maj3p3grv93c9vnjg6fzy6l8gg5dhil18834vdd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bamboo bamboo-theme-blueprint data-default hack hack-contrib
         hack-handler-hyena mps
       ];
       homepage = "http://github.com/nfjinjing/bamboo-launcher";
       description = "bamboo-launcher";
       license = "GPL";
     }) {};

  "bamboo-plugin-highlight" = callPackage
    ({ mkDerivation, bamboo, hack, hack-contrib, highlighting-kate, hxt
     , mps, xhtml
     }:
     mkDerivation {
       pname = "bamboo-plugin-highlight";
       version = "2009.7.5";
       sha256 = "0f8hpampawv0csqsb504hg97r7mimkcs9irm9i2m2b13w5fciaqc";
       buildDepends = [
         bamboo hack hack-contrib highlighting-kate hxt mps xhtml
       ];
       homepage = "http://github.com/nfjinjing/bamboo-plugin-highlight/";
       description = "A highlight middleware";
       license = "GPL";
     }) {};

  "bamboo-plugin-photo" = callPackage
    ({ mkDerivation, data-default, filepath, hack, hack-contrib, hxt
     , mps, utf8-string, xhtml
     }:
     mkDerivation {
       pname = "bamboo-plugin-photo";
       version = "2009.7.5";
       sha256 = "19ik80hcshmw8gpsb9gwngnwvriri10xx2v6xvrz0q25cxgwdjah";
       buildDepends = [
         data-default filepath hack hack-contrib hxt mps utf8-string xhtml
       ];
       homepage = "http://github.com/nfjinjing/hack/tree/master";
       description = "A photo album middleware";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bamboo-theme-blueprint" = callPackage
    ({ mkDerivation, bamboo, data-default, gravatar, hack, hack-contrib
     , hcheat, mps, network, rss, utf8-string, xhtml
     }:
     mkDerivation {
       pname = "bamboo-theme-blueprint";
       version = "2010.2.25.1";
       sha256 = "1wchvz2nm4klg11wjk3yb5yvqpa26c9lg6xc65k0dwxhy0cyd2zx";
       buildDepends = [
         bamboo data-default gravatar hack hack-contrib hcheat mps network
         rss utf8-string xhtml
       ];
       homepage = "http://github.com/nfjinjing/bamboo-theme-blueprint";
       description = "bamboo blueprint theme";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bamboo-theme-mini-html5" = callPackage
    ({ mkDerivation, bamboo, base64-string, cgi, data-default, filepath
     , gravatar, hack, hack-contrib, hcheat, moe, mps, mtl, network
     , parsec, parsedate, rss, time, utf8-string, xhtml, yuuko, zlib
     }:
     mkDerivation {
       pname = "bamboo-theme-mini-html5";
       version = "2009.11.27";
       sha256 = "02zh9jqq46gg3hrsfjfq2skajr4jni3cisak4nd3shl6aqapw9d6";
       buildDepends = [
         bamboo base64-string cgi data-default filepath gravatar hack
         hack-contrib hcheat moe mps mtl network parsec parsedate rss time
         utf8-string xhtml yuuko zlib
       ];
       homepage = "http://github.com/nfjinjing/bamboo-theme-mini-html5";
       description = "bamboo mini html5 theme";
       license = "GPL";
     }) {};

  "bamse" = callPackage
    ({ mkDerivation, com, filepath, HUnit, QuickCheck, regex-compat }:
     mkDerivation {
       pname = "bamse";
       version = "0.9.5";
       sha256 = "1nykyywrqmf5nyszfg3acm0ydr9z8q78wc7bgabfmjwrnpq1dw68";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ com filepath HUnit QuickCheck regex-compat ];
       description = "A Windows Installer (MSI) generator framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bamstats" = callPackage
    ({ mkDerivation, cmdargs, samtools }:
     mkDerivation {
       pname = "bamstats";
       version = "0.4";
       sha256 = "0z8k47h492818yvgxggqw4gcb6m91pw70kpibf9s384vxcbj6r24";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs samtools ];
       homepage = "http://blog.malde.org/posts/bamstats.html";
       description = "A program to extract various information from BAM alignmnet files";
       license = "GPL";
     }) {};

  "barchart" = callPackage
    ({ mkDerivation, cmdargs, csv, diagrams, filepath }:
     mkDerivation {
       pname = "barchart";
       version = "0.1.1.1";
       sha256 = "160ja5sdk0zdqc0ncsyldp4rmhc2g4zfa6xc7vbzf8gpqrcmzvgy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs csv diagrams filepath ];
       homepage = "http://sebfisch.github.com/haskell-barchart";
       description = "Creating Bar Charts in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "barcodes-code128" = callPackage
    ({ mkDerivation, HPDF }:
     mkDerivation {
       pname = "barcodes-code128";
       version = "0.1.0";
       sha256 = "14blxjhapn9g7cp7374f5s2nln7wgyb7a6z50gp04lnqf1aw6kmg";
       buildDepends = [ HPDF ];
       description = "Generate Code 128 barcodes as PDFs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "barecheck" = callPackage
    ({ mkDerivation, QuickCheck, text, time }:
     mkDerivation {
       pname = "barecheck";
       version = "0.2.0.6";
       sha256 = "0avz5pdnvd3kjgp9swpdfxddp60gqpamwd7j4xl8xdj3b2di5zk0";
       buildDepends = [ QuickCheck text time ];
       homepage = "http://github.com/massysett/barecheck";
       description = "QuickCheck implementations for common types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "barley" = callPackage
    ({ mkDerivation, filepath, html, plugins, snap-core, snap-server
     , text, transformers, unix-compat
     }:
     mkDerivation {
       pname = "barley";
       version = "0.3.0.2";
       sha256 = "0igz39bxlw4p0fna1wf6g791pk7r1m7hfyib5rgmsdahzkkp7v2h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath html plugins snap-core snap-server text transformers
         unix-compat
       ];
       description = "A web based environment for learning and tinkering with Haskell";
       license = "unknown";
     }) {};

  "barrie" = callPackage
    ({ mkDerivation, filepath, glib, gtk }:
     mkDerivation {
       pname = "barrie";
       version = "0.4.1";
       sha256 = "10iraid6v333374mx9vinvaw6r1903ipa92xjxhl8qh4w7xmr9yv";
       buildDepends = [ filepath glib gtk ];
       homepage = "http://thewhitelion.org/haskell/barrie";
       description = "Declarative Gtk GUI library";
       license = "GPL";
     }) {};

  "barrier-monad" = callPackage
    ({ mkDerivation, comonad, mtl, transformers }:
     mkDerivation {
       pname = "barrier-monad";
       version = "0.1.0.1";
       sha256 = "014nc21wnrklsvy5z7w4v9p9psn6bl210l7v97gj42cv6a8jk5nm";
       buildDepends = [ comonad mtl transformers ];
       description = "Implementation of barrier monad, can use custom front/back type";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "base" = callPackage
    ({ mkDerivation, integer-simple, rts }:
     mkDerivation {
       pname = "base";
       version = "4.7.0.1";
       sha256 = "021dbnj8q6ws0y5sw6q0dbix9i116bldix3aqc8fg36s95v3lcbi";
       buildDepends = [ integer-simple rts ];
       description = "Basic libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "base-compat" = callPackage
    ({ mkDerivation, errorcall-eq-instance, hspec, QuickCheck, setenv
     }:
     mkDerivation {
       pname = "base-compat";
       version = "0.5.0";
       sha256 = "1zlpfpfnaqf8rrha19arh882bc560dcw2zwi4j3qrn3lzyh8s1d1";
       buildDepends = [ errorcall-eq-instance setenv ];
       testDepends = [ hspec QuickCheck ];
       description = "A compatibility layer for base";
       license = stdenv.lib.licenses.mit;
     }) {};

  "base-io-access" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "base-io-access";
       version = "0.3.0.1";
       sha256 = "0hgrxr5331lqk7n6vqpi8a05xwwdm3mbd0p52js0rjg9lqcy0akr";
       homepage = "https://github.com/bheklilr/base-io-access";
       description = "The IO functions included in base delimited into small, composable classes";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "base-prelude" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "base-prelude";
       version = "0.1.8";
       sha256 = "11dz1n0203x1h7621ljxl5kf0ihs54mh3rbdh2k0zpz3rg9lhfpl";
       homepage = "https://github.com/nikita-volkov/base-prelude";
       description = "The most complete prelude formed from only the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "base-unicode-symbols" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "base-unicode-symbols";
       version = "0.2.2.4";
       sha256 = "1afc5pchd3vw33bmjbjygkd0l5zh7glbsx4bfyxfscpc1x1l3y52";
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "base16-bytestring" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "base16-bytestring";
       version = "0.1.1.6";
       sha256 = "0jf40m3yijqw6wd1rwwvviww46fasphaay9m9rgqyhf5aahnbzjs";
       homepage = "http://github.com/bos/base16-bytestring";
       description = "Fast base16 (hex) encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "base32-bytestring" = callPackage
    ({ mkDerivation, bits-extras, cpu, hspec, QuickCheck }:
     mkDerivation {
       pname = "base32-bytestring";
       version = "0.2.1.0";
       sha256 = "0z0q3fw3jzprgxmq9b2iz98kf4hwl3nydrzlaiwk81aplisfdgkl";
       buildDepends = [ bits-extras cpu ];
       testDepends = [ hspec QuickCheck ];
       homepage = "https://github.com/pxqr/base32-bytestring";
       description = "Fast base32 and base32hex codec for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "base58address" = callPackage
    ({ mkDerivation, binary, cryptohash, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "base58address";
       version = "0.4";
       sha256 = "0z15x9wx962ywkmh5lzfg4kq2jjmyzncbpayx2lkjnpdra4xgz7a";
       buildDepends = [ binary cryptohash ];
       testDepends = [
         binary cryptohash QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/singpolyma/base58address";
       description = "Parsing and serialization for Base58 addresses (Bitcoin and Ripple)";
       license = "unknown";
     }) {};

  "base64-bytestring" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "base64-bytestring";
       version = "1.0.0.1";
       sha256 = "0l1v4ddjdsgi9nqzyzcxxj76rwar3lzx8gmwf2r54bqan3san9db";
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/base64-bytestring";
       description = "Fast base64 encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "base64-conduit" = callPackage
    ({ mkDerivation, base64-bytestring, conduit, hspec, QuickCheck
     , transformers
     }:
     mkDerivation {
       pname = "base64-conduit";
       version = "1.0.0.1";
       sha256 = "07zhvn3fy60q04a5g5mzhkl17rap9jlh00vb4f6565bjha2k16g9";
       buildDepends = [ base64-bytestring conduit ];
       testDepends = [
         base64-bytestring conduit hspec QuickCheck transformers
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Base64-encode and decode streams of bytes. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "base64-string" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "base64-string";
       version = "0.2";
       sha256 = "0pkhrimabacsjalzq0y3a197fqfbspsbv8xszzg4vbb1fb59dj1y";
       homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
       description = "Base64 implementation for String's";
       license = "unknown";
     }) {};

  "bash" = callPackage
    ({ mkDerivation, binary, hxt-regex-xmlschema, mtl, SHA
     , shell-escape
     }:
     mkDerivation {
       pname = "bash";
       version = "0.1.8";
       sha256 = "1wv7haxb4vvnh9i7y17m1d7qbpl92qjrnn022g6hyxbxzmpgsw60";
       buildDepends = [ binary hxt-regex-xmlschema mtl SHA shell-escape ];
       homepage = "http://github.com/solidsnack/bash";
       description = "Bash generation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "basic-prelude" = callPackage
    ({ mkDerivation, hashable, lifted-base, ReadArgs, safe
     , system-filepath, text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "basic-prelude";
       version = "0.3.10";
       sha256 = "10013ni7kpqlc6s3ryfvmklw3ic5h48rm4wsrb31pcp5xja0qk59";
       buildDepends = [
         hashable lifted-base ReadArgs safe system-filepath text
         transformers unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/basic-prelude";
       description = "An enhanced core prelude; a common foundation for alternate preludes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "basic-sop" = callPackage
    ({ mkDerivation, deepseq, generics-sop, QuickCheck, text }:
     mkDerivation {
       pname = "basic-sop";
       version = "0.1.0.3";
       sha256 = "1nigmdnfxbzfi2qyih6rz3q8xymk5rglm4772xrsphv6cszifcbd";
       buildDepends = [ deepseq generics-sop QuickCheck text ];
       description = "Basic examples and functions for generics-sop";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "baskell" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "baskell";
       version = "0.1.1";
       sha256 = "1vb74crz57i4qmjl8k3gxr2abz9rmpw7yl5sm1pggnlfy9wcm15l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://www.cs.mu.oz.au/~bjpop/code.html";
       description = "An interpreter for a small functional language";
       license = "GPL";
     }) {};

  "battlenet" = callPackage
    ({ mkDerivation, aeson, http-conduit, text }:
     mkDerivation {
       pname = "battlenet";
       version = "0.1.0.1";
       sha256 = "16wqz62lzzl6a8nb33z677dj21l64mwliwvsy14pnwz2086hbig8";
       buildDepends = [ aeson http-conduit text ];
       homepage = "https://github.com/teozkr/hs-battlenet/";
       description = "API client for Battle.Net";
       license = stdenv.lib.licenses.mit;
     }) {};

  "battlenet-yesod" = callPackage
    ({ mkDerivation, battlenet, http-conduit, yesod-core }:
     mkDerivation {
       pname = "battlenet-yesod";
       version = "0.1.0.1";
       sha256 = "14r7jjgn3migy2kg4jxs56nlw4dawm42dbx94f7xhq4pg8q27c3x";
       buildDepends = [ battlenet http-conduit yesod-core ];
       homepage = "https://github.com/teozkr/hs-battlenet/";
       description = "Yesod integration for the battlenet package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "battleships" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, blaze-svg
     , cereal, colour, cookie, crypto-random, data-default, diagrams-lib
     , diagrams-svg, fast-logger, filepath, hamlet, hjsmin, MonadRandom
     , mtl, shakespeare-js, shakespeare-text, SimpleAES, text
     , transformers, wai-extra, wai-handler-fastcgi, wai-logger, word8
     , yaml, yesod, yesod-core, yesod-routes, yesod-static
     }:
     mkDerivation {
       pname = "battleships";
       version = "1.0.0";
       sha256 = "1rg96qikd687wndwj0pgvzg2ln4vh7x304cnyiisci2ka9763cld";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base64-bytestring blaze-svg cereal colour cookie
         crypto-random data-default diagrams-lib diagrams-svg fast-logger
         filepath hamlet hjsmin MonadRandom mtl shakespeare-js
         shakespeare-text SimpleAES text transformers wai-extra
         wai-handler-fastcgi wai-logger word8 yaml yesod yesod-core
         yesod-routes yesod-static
       ];
       homepage = "https://github.com/zrho/afp";
       description = "A web-based implementation of battleships including an AI opponent";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bayes-stack" = callPackage
    ({ mkDerivation, cereal, deepseq, digamma, enummapset, gamma
     , logfloat, mtl, mwc-random, random-fu, random-source, rvar
     , statistics, stm, transformers, vector
     }:
     mkDerivation {
       pname = "bayes-stack";
       version = "0.2.0.1";
       sha256 = "1nz4lnnxdfgacnv6mjxsgq543zxmim4rxvxbpsfx8yypjp6lsx5l";
       buildDepends = [
         cereal deepseq digamma enummapset gamma logfloat mtl mwc-random
         random-fu random-source rvar statistics stm transformers vector
       ];
       homepage = "https://github.com/bgamari/bayes-stack";
       description = "Framework for inferring generative probabilistic models with Gibbs sampling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bbdb" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "bbdb";
       version = "0.4";
       sha256 = "18f07dg0f7z7b8qwmyrcl1c48mgmprnj97va33dahvm0p0iw2039";
       buildDepends = [ mtl parsec ];
       homepage = "http://www.nadineloveshenry.com/haskell/database-bbdb.html";
       description = "Ability to read, write, and examine BBDB files";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "bcrypt" = callPackage
    ({ mkDerivation, entropy }:
     mkDerivation {
       pname = "bcrypt";
       version = "0.0.5";
       sha256 = "1dcaq81anjj91jwl90dap6sy8b88igy8iyfd6226mdqlh5zyvafg";
       buildDepends = [ entropy ];
       description = "Haskell bindings to the bcrypt password hash";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bdelta" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bdelta";
       version = "0.1.1.1";
       sha256 = "17zapldywid4xq0a6qdxh6hnk5igjjgplfydnr800xdpicicbrww";
       homepage = "http://github.com/joeyadams/haskell-bytestring-delta";
       description = "Simple, fast binary diff/patch";
       license = stdenv.lib.licenses.mit;
     }) {};

  "bdo" = callPackage
    ({ mkDerivation, aeson, network, text, url }:
     mkDerivation {
       pname = "bdo";
       version = "1.0.1";
       sha256 = "1mwc7l1n2gnw8yx5zphxlkgi6bkcw56qwifpy34wpa55x2lf6n82";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson network text url ];
       description = "Update CSS in the browser without reloading the page";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "beamable" = callPackage
    ({ mkDerivation, blaze-builder, murmur-hash, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "beamable";
       version = "0.1.1.1";
       sha256 = "068d70ylk5b6jlg6j1c1nayb4a3mmf7r92blcgmdbjrz3ipqwg27";
       buildDepends = [ blaze-builder murmur-hash ];
       testDepends = [
         blaze-builder murmur-hash QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Generic serializer/deserializer with compact representation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "beautifHOL" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "beautifHOL";
       version = "0.11";
       sha256 = "15k41z1p8h0b677wba4mqkfszwggkrfcp3n5hbdvdjfiqyx2hbzi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://www.cs.indiana.edu/~lepike/pub_pages/holpp.html";
       description = "A pretty-printer for higher-order logic";
       license = "GPL";
     }) {};

  "bed-and-breakfast" = callPackage
    ({ mkDerivation, binary, deepseq, QuickCheck }:
     mkDerivation {
       pname = "bed-and-breakfast";
       version = "0.4.3";
       sha256 = "0183770vkb5r9srxqr3fa4s601g10bx07b05hjr3b3nvc0ab9f6z";
       buildDepends = [ binary deepseq ];
       testDepends = [ QuickCheck ];
       homepage = "https://hackage.haskell.org/package/bed-and-breakfast";
       description = "Efficient Matrix operations in 100% Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "bein" = callPackage
    ({ mkDerivation, convertible, Crypto, filepath, happstack-server
     , happstack-util, hdaemonize, HDBC, HDBC-postgresql, hsyslog, mtl
     , network, parsec, random, stm, time, utf8-string, xhtml
     }:
     mkDerivation {
       pname = "bein";
       version = "0.3.3";
       sha256 = "1sq6z2a9bddqh0kys10g495bfj7pcyibsvhfxfl279z53va7d6ch";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         convertible Crypto filepath happstack-server happstack-util
         hdaemonize HDBC HDBC-postgresql hsyslog mtl network parsec random
         stm time utf8-string xhtml
       ];
       description = "Bein is a provenance and workflow management system for bioinformatics";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "benchmark-function" = callPackage
    ({ mkDerivation, random, time }:
     mkDerivation {
       pname = "benchmark-function";
       version = "0.1.0.0";
       sha256 = "1cdbaf001m79xbpfdf3gg2z8jgyf25xqwrkg6y7da2mvk3127c5b";
       buildDepends = [ random time ];
       homepage = "xy30.com";
       description = "Test the time it takes to run a haskell function";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "benchpress" = callPackage
    ({ mkDerivation, mtl, time }:
     mkDerivation {
       pname = "benchpress";
       version = "0.2.2.6";
       sha256 = "19ygaf2g4yqkfbc6bw6fmf9jsymbj1iallzvl0zw3vjx860rchfg";
       buildDepends = [ mtl time ];
       homepage = "http://github.com/tibbe/benchpress";
       description = "Micro-benchmarking with detailed statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bencode" = callPackage
    ({ mkDerivation, binary, parsec }:
     mkDerivation {
       pname = "bencode";
       version = "0.5";
       sha256 = "018cj7h5llvnqyr1jd9nif2ig9hz8d8vmi9iax07all567yhy378";
       buildDepends = [ binary parsec ];
       description = "Parser and printer for bencoded data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bencoding" = callPackage
    ({ mkDerivation, attoparsec, deepseq, hspec, mtl, QuickCheck, text
     }:
     mkDerivation {
       pname = "bencoding";
       version = "0.4.3.0";
       sha256 = "0f6d3g88y7i4s5wa53771n0fbkbs4na8vpy51wk21b563smdcpcc";
       buildDepends = [ attoparsec deepseq mtl text ];
       testDepends = [ attoparsec hspec QuickCheck ];
       homepage = "https://github.com/cobit/bencoding";
       description = "A library for encoding and decoding of BEncode data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "berkeleydb" = callPackage
    ({ mkDerivation, binary, db }:
     mkDerivation {
       pname = "berkeleydb";
       version = "2008.10.31";
       sha256 = "1qqzxi011xmb4b09r1j5x1b7slgrazh19csfilk4a9f91zvq6l3p";
       buildDepends = [ binary ];
       extraLibraries = [ db ];
       description = "Pretty BerkeleyDB v4 binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "berp" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, ghc-paths
     , haskeline, haskell-src-exts, language-python, monads-tf
     , parseargs, transformers
     }:
     mkDerivation {
       pname = "berp";
       version = "0.0.2";
       sha256 = "066m1nyfwi1nivjmcnykjdypqzkm2zqfzb07zf6f9hiz9m4g6x09";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions filepath ghc-paths haskeline haskell-src-exts
         language-python monads-tf parseargs transformers
       ];
       homepage = "http://wiki.github.com/bjpop/berp/";
       description = "An implementation of Python 3";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bert" = callPackage
    ({ mkDerivation, async, binary, binary-conduit, conduit
     , conduit-extra, mtl, network, parsec, smallcheck, tasty
     , tasty-hunit, tasty-smallcheck, time, void
     }:
     mkDerivation {
       pname = "bert";
       version = "1.2.2.3";
       sha256 = "1waq40hd9wqavzhnvfk1i6wjqkmfb4pl17h4acfzzyz8bj76alkq";
       buildDepends = [
         binary binary-conduit conduit conduit-extra mtl network parsec time
         void
       ];
       testDepends = [
         async binary network smallcheck tasty tasty-hunit tasty-smallcheck
       ];
       homepage = "https://github.com/feuerbach/bert";
       description = "BERT implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "besout" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "besout";
       version = "0.2.0.1";
       sha256 = "0bv68nn6ijf1wv57kwp4yj6s75g960pds0n9wihxwkr4hh5azls1";
       description = "Extended GCD of polynomials over F_p[x]";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bet" = callPackage
    ({ mkDerivation, aeson, bifunctors, exceptions, HsOpenSSL
     , http-client-openssl, lens, mtl, pipes, pipes-http, QuickCheck
     , semigroupoids, semigroups, test-framework
     , test-framework-quickcheck2, test-framework-th, text, time
     }:
     mkDerivation {
       pname = "bet";
       version = "0.1.2.0";
       sha256 = "1jpdy8p27nfwpinlbzbfy77nyf867qcjl96dzdw9q67b76v4gxc0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson bifunctors exceptions HsOpenSSL http-client-openssl lens mtl
         pipes pipes-http semigroupoids semigroups text time
       ];
       testDepends = [
         lens QuickCheck semigroups test-framework
         test-framework-quickcheck2 test-framework-th
       ];
       homepage = "https://github.com/Noeda/bet/";
       description = "Betfair API bindings. Bet on sports on betting exchanges.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "betacode" = callPackage
    ({ mkDerivation, attoparsec, errors, hashable, hspec, QuickCheck
     , smallcheck, text, text-icu
     }:
     mkDerivation {
       pname = "betacode";
       version = "0.1.0.0";
       sha256 = "0ry42sp40234c83iw7di37j3jfjfbszxcv4mzgqc54b1693mjq7b";
       buildDepends = [ attoparsec errors hashable text text-icu ];
       testDepends = [ hspec QuickCheck smallcheck ];
       description = "A codec for beta code (http://en.wikipedia.org/wiki/Beta_Code).";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "between" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "between";
       version = "0.9.0.2";
       sha256 = "0n3nx077hv10rwv2kl3n1a3v40sr1qzfj9jwb6cvd1l0zx42igw8";
       homepage = "https://github.com/trskop/between";
       description = "Function combinator \"between\" and derived combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bf-cata" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bf-cata";
       version = "1.1";
       sha256 = "0f8pyd2j24x574xs73zhadsd058ib217vd12snkqzg6vg9l7vgzw";
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       license = "LGPL";
     }) {};

  "bff" = callPackage
    ({ mkDerivation, bimap, category-extras, derive, mtl }:
     mkDerivation {
       pname = "bff";
       version = "0.3.1.2";
       sha256 = "1i5y7pki3hyhq2vyshzi40n7yx354p7wiflfig8qxc4h31nbwi2x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bimap category-extras derive mtl ];
       description = "Bidirectionalization for Free! (POPL'09)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bff-mono" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "bff-mono";
       version = "0.2.3";
       sha256 = "1qswfjrij01g7g85iiyxpvk1k5hgnf6ll7jcf6b33k6dawi3a4qr";
       buildDepends = [ mtl ];
       homepage = "https://bitbucket.org/kztk/bff-mono/";
       description = "\"Bidirectionalization for Free\" for Monomorphic Transformations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bgmax" = callPackage
    ({ mkDerivation, attoparsec, time }:
     mkDerivation {
       pname = "bgmax";
       version = "0.1.0.1";
       sha256 = "0wg2dh3i50c4f1bc0csi3ppbz28scjfhcr0hqfd0cpfiaf79fs5s";
       buildDepends = [ attoparsec time ];
       homepage = "http://github.com/jonpetterbergman/bgmax";
       description = "Parse BgMax-files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bibtex" = callPackage
    ({ mkDerivation, latex, parsec, utility-ht }:
     mkDerivation {
       pname = "bibtex";
       version = "0.1.0.4";
       sha256 = "0y6jf52361d225a1jynq7ysnwihid3qivsjqv2hbf0f8sayi8ic0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ latex parsec utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/BibTeX";
       description = "Parse, format and processing BibTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bidirectionalization-combined" = callPackage
    ({ mkDerivation, cgi, hint, mtl, parsec, utf8-string, xhtml }:
     mkDerivation {
       pname = "bidirectionalization-combined";
       version = "0.1.0.1";
       sha256 = "0bclazwhg3ra7zv19xfx5rw2z3p8h8scw5r4m281524qzrkm9j6m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cgi hint mtl parsec utf8-string xhtml ];
       homepage = "http://www.kb.ecei.tohoku.ac.jp/~kztk/b18n-combined/desc.html";
       description = "Prototype Implementation of Combining Syntactic and Semantic Bidirectionalization (ICFP'10)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bidispec" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "bidispec";
       version = "0.1.3";
       sha256 = "0y9hskhp1vcl92wrh3l7b1g6i7y9v4b06pl2qa9hhp9ladnvw7g4";
       buildDepends = [ mtl ];
       description = "Specification of generators and parsers";
       license = "LGPL";
     }) {};

  "bidispec-extras" = callPackage
    ({ mkDerivation, dataenc, mtl }:
     mkDerivation {
       pname = "bidispec-extras";
       version = "0.1";
       sha256 = "0insqi63q6gvz39l0k584w583cw9m85vdx5dhpyx9qbb5zxyb0rm";
       buildDepends = [ dataenc mtl ];
       description = "Extra helper functions for bidirectional specifications";
       license = "LGPL";
     }) {};

  "bifunctors" = callPackage
    ({ mkDerivation, semigroupoids, semigroups, tagged }:
     mkDerivation {
       pname = "bifunctors";
       version = "4.2";
       sha256 = "0gxj22qv0avg2rhmfbbjrx35yr83r311vm8asc4q71lzkbyg8qf6";
       buildDepends = [ semigroupoids semigroups tagged ];
       homepage = "http://github.com/ekmett/bifunctors/";
       description = "Bifunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "billboard-parser" = callPackage
    ({ mkDerivation, filepath, HarmTrace-Base, HUnit, ListLike, mtl
     , parseargs, uu-parsinglib
     }:
     mkDerivation {
       pname = "billboard-parser";
       version = "1.0.0.1";
       sha256 = "1jhiq5w4z7axlqqm6pyl1d3g1vh7ykyy2z69d9ma8qzgm6v72l05";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath HarmTrace-Base HUnit ListLike mtl parseargs uu-parsinglib
       ];
       homepage = "http://ddmal.music.mcgill.ca/billboard";
       description = "A parser for the Billboard chord dataset";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "billeksah-forms" = callPackage
    ({ mkDerivation, billeksah-pane, billeksah-services, Cabal
     , filepath, glib, gtk, mtl, parsec, transformers
     }:
     mkDerivation {
       pname = "billeksah-forms";
       version = "1.0.0";
       sha256 = "094sq2kn0xfvy146i7r89vf1by90nqaj4ki1fk3i2rw9glrv25ms";
       buildDepends = [
         billeksah-pane billeksah-services Cabal filepath glib gtk mtl
         parsec transformers
       ];
       homepage = "http://www.leksah.org";
       description = "Leksah library";
       license = "LGPL";
     }) {};

  "billeksah-main" = callPackage
    ({ mkDerivation, billeksah-services, filepath, mtl, parsec, plugins
     , transformers
     }:
     mkDerivation {
       pname = "billeksah-main";
       version = "1.0.0";
       sha256 = "1dyg6qfvhzxh2d90gvb8j7djqa04c3aci7rfk3s1wdqz5rkxmnlx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         billeksah-services filepath mtl parsec plugins transformers
       ];
       homepage = "http://www.leksah.org";
       description = "Leksah plugin base";
       license = "LGPL";
     }) {};

  "billeksah-main-static" = callPackage
    ({ mkDerivation, billeksah-forms, billeksah-pane
     , billeksah-services, filepath, leksah-dummy, leksah-main
     , leksah-plugin-pane, mtl, parsec, transformers
     }:
     mkDerivation {
       pname = "billeksah-main-static";
       version = "1.0.0";
       sha256 = "1g4zldnza6s2xvkqar4rgqirs4p8j2j4ssacg9x0zzc4njzklj7y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         billeksah-forms billeksah-pane billeksah-services filepath
         leksah-dummy leksah-main leksah-plugin-pane mtl parsec transformers
       ];
       homepage = "http://www.leksah.org";
       description = "Leksah plugin base";
       license = "LGPL";
     }) {};

  "billeksah-pane" = callPackage
    ({ mkDerivation, billeksah-services, filepath, glib, gtk, mtl
     , parsec, time, transformers
     }:
     mkDerivation {
       pname = "billeksah-pane";
       version = "1.0.0";
       sha256 = "1ckzjbdfi3y09qvq951xki3h7q3sah41j29mgpqk45rayzqmiavg";
       buildDepends = [
         billeksah-services filepath glib gtk mtl parsec time transformers
       ];
       homepage = "http://www.leksah.org";
       description = "Leksah library";
       license = "LGPL";
     }) {};

  "billeksah-services" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, transformers }:
     mkDerivation {
       pname = "billeksah-services";
       version = "1.0.0";
       sha256 = "00bsbrsnclwnayqzs24c5fdz9r6ankbhnnkbkzyd1fxsl7lrziwn";
       buildDepends = [ filepath mtl parsec transformers ];
       homepage = "http://www.leksah.org";
       description = "Leksah library";
       license = "LGPL";
     }) {};

  "bimap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bimap";
       version = "0.2.4";
       sha256 = "1ib54plfsxzmf9wbbdayfdsrcx4s5ffna3ca5ps928fy78wsx4fr";
       homepage = "http://code.haskell.org/bimap";
       description = "Bidirectional mapping between two key types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary" = callPackage
    ({ mkDerivation, Cabal, filepath, HUnit, QuickCheck, random
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "binary";
       version = "0.7.2.3";
       sha256 = "16f4lnl0kyx17z1iwr3p030lbyh3qkifdvr8vrl704xv5hq5jzzx";
       testDepends = [
         Cabal filepath HUnit QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/kolmodin/binary";
       description = "Binary serialisation for Haskell values using lazy ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-bits" = callPackage
    ({ mkDerivation, binary, QuickCheck, random, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "binary-bits";
       version = "0.3";
       sha256 = "0hddr2v2x8ha540vqi21k0vrvfa69qvlvgjs9rrl98qygzrqc7nc";
       buildDepends = [ binary ];
       testDepends = [
         binary QuickCheck random test-framework test-framework-quickcheck2
       ];
       description = "Bit parsing/writing on top of binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-communicator" = callPackage
    ({ mkDerivation, binary, mtl }:
     mkDerivation {
       pname = "binary-communicator";
       version = "1.0.2.1";
       sha256 = "02w5ybp5fdqwz1ffvfs3pfrpx67bzh75njgzr6iai1vrdyjisfkl";
       buildDepends = [ binary mtl ];
       description = "Flexible way to ease transmission of binary data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-conduit" = callPackage
    ({ mkDerivation, binary, conduit, hspec, QuickCheck
     , quickcheck-assertions, resourcet, vector
     }:
     mkDerivation {
       pname = "binary-conduit";
       version = "1.2.3";
       sha256 = "0ymhxyf754j1pki7ap2vay8f9j49rzsjzp5yr253sn5wpw3qg8fr";
       buildDepends = [ binary conduit resourcet vector ];
       testDepends = [
         binary conduit hspec QuickCheck quickcheck-assertions resourcet
       ];
       homepage = "http://github.com/qnikst/binary-conduit/";
       description = "data serialization/deserialization conduit library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "binary-derive" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "binary-derive";
       version = "0.1.0";
       sha256 = "1rb4fpx5hlq661md7nrpgpmi7jjdq3r1ky6q9vxl6f72h085acvl";
       buildDepends = [ binary ];
       description = "Automatic deriving of Binary using GHC.Generics";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "binary-file" = callPackage
    ({ mkDerivation, monads-tf, peggy }:
     mkDerivation {
       pname = "binary-file";
       version = "0.15.24";
       sha256 = "134iigqjwlkj85pdp95xl6ia6fxr9l516j9b0dpg3r0zqi1kzp7i";
       buildDepends = [ monads-tf peggy ];
       homepage = "https://skami.iocikun.jp/haskell/packages/binary-file";
       description = "read/write binary file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-generic" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, syb, text }:
     mkDerivation {
       pname = "binary-generic";
       version = "0.2.1";
       sha256 = "0c6gfa1wvrcw4frrqzrfnc5ydqlbs56jq7hnxgzg89mr510mfsgz";
       buildDepends = [ binary data-binary-ieee754 syb text ];
       homepage = "http://github.com/lpeterse/binary-generic";
       description = "Generic binary serialisation using binary and syb";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-indexed-tree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "binary-indexed-tree";
       version = "0.1";
       sha256 = "1csbmkwrcfcfydyl2ab6s5bz1fy4fgl14m63zdyi0vy3d17zbl4d";
       description = "Binary Indexed Trees (a.k.a. Fenwick Trees).";
       license = "LGPL";
     }) {};

  "binary-list" = callPackage
    ({ mkDerivation, binary, deepseq, phantom-state, transformers }:
     mkDerivation {
       pname = "binary-list";
       version = "1.0.1.0";
       sha256 = "1d83ka79nnq5pw4djs6x3ccgygkq89q9wakgykx4wvyf7l0xj7d9";
       buildDepends = [ binary deepseq phantom-state transformers ];
       description = "Lists of length a power of two";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-literal-qq" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "binary-literal-qq";
       version = "1.0";
       sha256 = "0kbxd2ryls1zhmfg831ls219fn58xa7dq1bca48v7n7075nmh1jm";
       description = "Extends Haskell with binary literals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-protocol" = callPackage
    ({ mkDerivation, binary, mtl }:
     mkDerivation {
       pname = "binary-protocol";
       version = "1.0";
       sha256 = "1hn6jc4j20z8ni7rpcyamam898yl6jy7zinrhy2rdjvx0p5br13h";
       buildDepends = [ binary mtl ];
       homepage = "http://github.com/gcross/binary-protocol";
       description = "Monad to ease implementing a binary network protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-protocol-zmq" = callPackage
    ({ mkDerivation, binary, mtl, zeromq-haskell }:
     mkDerivation {
       pname = "binary-protocol-zmq";
       version = "0.2";
       sha256 = "14jap6kc1jbr3i010qg2z8d0li09d3a88fwzwrlb750pn67x7amy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary mtl zeromq-haskell ];
       homepage = "http://github.com/NicolasT/binary-protocol-zmq";
       description = "Monad to ease implementing a binary network protocol over ZeroMQ";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-search" = callPackage
    ({ mkDerivation, doctest, filepath, hspec, QuickCheck }:
     mkDerivation {
       pname = "binary-search";
       version = "0.1";
       sha256 = "02s81jpysgqnnk8c45y9xc2fhy59mm1k2wskrl4hzhdjlp4c65f3";
       testDepends = [ doctest filepath hspec QuickCheck ];
       description = "Binary and exponential searches";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-shared" = callPackage
    ({ mkDerivation, binary, mtl }:
     mkDerivation {
       pname = "binary-shared";
       version = "0.8.3";
       sha256 = "1clqq0rqjw1v7y6glkjnfyga5gxh768flyw617g47z0qa181c0c3";
       buildDepends = [ binary mtl ];
       homepage = "http://www.leksah.org";
       description = "Sharing for the binary package";
       license = "GPL";
     }) {};

  "binary-state" = callPackage
    ({ mkDerivation, binary, mtl }:
     mkDerivation {
       pname = "binary-state";
       version = "0.1.1";
       sha256 = "06v3qxyl2mvwi3y29rxxf91b2vxvlh5gfznwlnzb4mxzd00aakgl";
       buildDepends = [ binary mtl ];
       description = "Simple wrapper around Data.Binary, which adds StateT to Get/Put monads.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-streams" = callPackage
    ({ mkDerivation, binary, Cabal, cabal-test-quickcheck, io-streams
     , QuickCheck
     }:
     mkDerivation {
       pname = "binary-streams";
       version = "0.1.0.0";
       sha256 = "1xaqjcyrimggq7al6wr304gw61dacr7ch29dkm9b3sp2lmwvf74i";
       buildDepends = [ binary io-streams ];
       testDepends = [
         binary Cabal cabal-test-quickcheck io-streams QuickCheck
       ];
       homepage = "http://github.com/jonpetterbergman/binary-streams";
       description = "data serialization/deserialization io-streams library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-strict" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "binary-strict";
       version = "0.4.8.1";
       sha256 = "07mmh4x8qjpw7w35nxcq8wayy4bagjblbwkpvh3xd38rxpdnl6pi";
       buildDepends = [ mtl ];
       homepage = "http://code.haskell.org/binary-low-level";
       description = "Binary deserialisation using strict ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binary-typed" = callPackage
    ({ mkDerivation, binary, murmur-hash, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "binary-typed";
       version = "0.2.3";
       sha256 = "1w5clk2wnldn4rsq9cmjs9v7gyl81wy0ib453l2df5yiw2k0ahy7";
       buildDepends = [ binary murmur-hash ];
       testDepends = [ binary tasty tasty-hunit tasty-quickcheck ];
       homepage = "https://github.com/quchen/binary-typed";
       description = "Type-safe binary serialization";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "binarydefer" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "binarydefer";
       version = "1.2.2";
       sha256 = "06q255kip3j31bmj01fqkikvjxbklvcaa1kv3al8v04nkqx6rg3p";
       description = "Binary serialization with deferred loading";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bind-marshal" = callPackage
    ({ mkDerivation, deepseq, monads-tf, mtl, numeric-prelude, random
     , stm, strict, transformers, type-level-tf
     }:
     mkDerivation {
       pname = "bind-marshal";
       version = "0.1";
       sha256 = "13riawcdzwr97vmixvg2wf8aysxblzik2mvkrp2gqf9ywda9ksr6";
       buildDepends = [
         deepseq monads-tf mtl numeric-prelude random stm strict
         transformers type-level-tf
       ];
       homepage = "https://github.com/coreyoconnor/bind-marshal";
       description = "Data marshaling library that uses type level equations to optimize buffering";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binding-core" = callPackage
    ({ mkDerivation, HTF, HUnit, QuickCheck, random, stm }:
     mkDerivation {
       pname = "binding-core";
       version = "0.2.2";
       sha256 = "0qr7nr9cksy2cx2h8g2d485797hvv67197c654va0xwadkj5iviz";
       buildDepends = [ stm ];
       testDepends = [ HTF HUnit QuickCheck random ];
       homepage = "http://code.accursoft.com/binding";
       description = "Data Binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binding-gtk" = callPackage
    ({ mkDerivation, binding-core, gtk, mtl }:
     mkDerivation {
       pname = "binding-gtk";
       version = "0.2.1";
       sha256 = "0l68n13w1khfqkc791l9mcnk3cb0565a9ysfn7b3hh5cjx8zi7vr";
       buildDepends = [ binding-core gtk mtl ];
       testDepends = [ binding-core gtk ];
       homepage = "http://code.accursoft.com/binding";
       description = "Data Binding in Gtk2Hs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binding-wx" = callPackage
    ({ mkDerivation, binding-core, stm, wx, wxcore }:
     mkDerivation {
       pname = "binding-wx";
       version = "0.2.1";
       sha256 = "07nbb6a0fmyhmx2dakkw4msxnv273hfcw3swdk3aczpfqlxd1r4i";
       buildDepends = [ binding-core stm wx wxcore ];
       testDepends = [ binding-core wx ];
       homepage = "http://code.accursoft.com/binding";
       description = "Data Binding in WxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bindings";
       version = "0.1.2";
       sha256 = "0zczf1yfjnfzdzv33j33vcc71zsf88a5qxsdmswxrpzika3rs6i0";
       description = "Deprecated package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-DSL" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bindings-DSL";
       version = "1.0.21";
       sha256 = "0fbrl9jfkwlv66v3cv6cj51kk7jjdry0jz8k83bf4mav26123mk9";
       homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
       description = "FFI domain specific language, on top of hsc2hs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-EsounD" = callPackage
    ({ mkDerivation, bindings-audiofile, bindings-DSL, esound }:
     mkDerivation {
       pname = "bindings-EsounD";
       version = "0.1.0.1";
       sha256 = "0fl7gdh60k7wj3bnn5hpgsi0kkji857xb47spii7mrip5p4m8pff";
       buildDepends = [ bindings-audiofile bindings-DSL ];
       pkgconfigDepends = [ esound ];
       homepage = "http://cielonegro.org/Bindings-EsounD.html";
       description = "Low level bindings to EsounD (ESD; Enlightened Sound Daemon)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bindings-GLFW" = callPackage
    ({ mkDerivation, bindings-DSL, HUnit, libX11, libXext, libXfixes
     , libXi, libXrandr, libXxf86vm, mesa, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "bindings-GLFW";
       version = "3.0.3.3";
       sha256 = "0w6vqshlk0c4k4q81xw7kg4j62h3wpccpy8qbiq5ks69w7z13fy4";
       buildDepends = [ bindings-DSL ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       extraLibraries = [
         libX11 libXext libXfixes libXi libXrandr libXxf86vm mesa
       ];
       description = "Low-level bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-K8055" = callPackage
    ({ mkDerivation, K8055D }:
     mkDerivation {
       pname = "bindings-K8055";
       version = "0.1.2";
       sha256 = "0daga3vh9x9gih25qgcsl0hafi4hw8h5x64ba6wbmywa9z3hrr20";
       extraLibraries = [ K8055D ];
       homepage = "https://github.com/jputcu/bindings-K8055";
       description = "Bindings to Velleman K8055 dll";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-apr" = callPackage
    ({ mkDerivation, apr-1, bindings-DSL }:
     mkDerivation {
       pname = "bindings-apr";
       version = "0.1";
       sha256 = "0fw71z74pv8dxw301iss66kmarhlgwj2lpsy0skmlqfkg98zc96k";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ apr-1 ];
       homepage = "http://cielonegro.org/Bindings-APR.html";
       description = "Low level bindings to Apache Portable Runtime (APR)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bindings-apr-util" = callPackage
    ({ mkDerivation, apr-util-1, bindings-apr, bindings-DSL }:
     mkDerivation {
       pname = "bindings-apr-util";
       version = "0.1";
       sha256 = "0sr041vpakklpf2mmy78wl5wl8yzfbwvsy07wlplmlh5rgjdm4wx";
       buildDepends = [ bindings-apr bindings-DSL ];
       pkgconfigDepends = [ apr-util-1 ];
       homepage = "http://cielonegro.org/Bindings-APR.html";
       description = "Low level bindings to Apache Portable Runtime Utility (APR Utility)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bindings-audiofile" = callPackage
    ({ mkDerivation, audiofile, bindings-DSL }:
     mkDerivation {
       pname = "bindings-audiofile";
       version = "0.1.0.2";
       sha256 = "0ls0iy33i0b86fg7hx23s1d8ypa16bdiw3l8nmsni3zgnn67w6mj";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ audiofile ];
       homepage = "http://cielonegro.org/Bindings-AudioFile.html";
       description = "Low level bindings to audiofile";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bindings-bfd" = callPackage
    ({ mkDerivation, alex, bfd, happy, opcodes }:
     mkDerivation {
       pname = "bindings-bfd";
       version = "1.2.0.0";
       sha256 = "0c05zr3k0az2hfyfync8z2sgdxx6gskqdb1n548fjc986cx298q4";
       buildTools = [ alex happy ];
       extraLibraries = [ bfd opcodes ];
       homepage = "http://projects.haskell.org/bindings-bfd/";
       description = "Bindings for libbfd, a library of the GNU `binutils'";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "bindings-cctools" = callPackage
    ({ mkDerivation, bindings-DSL, dttools }:
     mkDerivation {
       pname = "bindings-cctools";
       version = "3.6.1.0.1.0.0.1";
       sha256 = "1k0p0m09ndk6c42h3yy230q86fnm0hzr1zjr3871f9hapvnvzqr8";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ dttools ];
       homepage = "http://bitbucket.org/badi/bindings-cctools";
       description = "Bindings to the CCTools WorkQueue C library";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "bindings-codec2" = callPackage
    ({ mkDerivation, binary, bindings-DSL, codec2, split }:
     mkDerivation {
       pname = "bindings-codec2";
       version = "0.1.1.0";
       sha256 = "0mpb79djfqi0had6rx20jsgahdfv23bnp0i25lbxv8vg72m3wdnn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary bindings-DSL split ];
       extraLibraries = [ codec2 ];
       homepage = "https://github.com/relrod/Codec2-hs";
       description = "Very low-level FFI bindings for Codec2";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "bindings-common" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bindings-common";
       version = "1.3.4";
       sha256 = "1zbm8v5xp4pay6h0y24ngf8nw96ab0zr754b9n2zczadiarccmcb";
       description = "This package is obsolete. Look for bindings-DSL instead.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-dc1394" = callPackage
    ({ mkDerivation, bindings-DSL, c2hs, dc1394 }:
     mkDerivation {
       pname = "bindings-dc1394";
       version = "0.2.1";
       sha256 = "06xg2amlcqldb7h0xaw8dvzq65npirsibbgmbr5n8s59rwa6hfwq";
       buildDepends = [ bindings-DSL ];
       buildTools = [ c2hs ];
       extraLibraries = [ dc1394 ];
       homepage = "http://github.com/aleator/bindings-dc1394";
       description = "Library for using firewire (iidc-1394) cameras";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-directfb" = callPackage
    ({ mkDerivation, bindings-DSL, bindings-posix, directfb }:
     mkDerivation {
       pname = "bindings-directfb";
       version = "0.1";
       sha256 = "0mmba1h9in9xh590nmr1vb5ccqng3nwdc4q0b9d67v22cmc7fhpp";
       buildDepends = [ bindings-DSL bindings-posix ];
       pkgconfigDepends = [ directfb ];
       description = "Low level bindings to DirectFB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-eskit" = callPackage
    ({ mkDerivation, bindings-DSL, eskit }:
     mkDerivation {
       pname = "bindings-eskit";
       version = "0.0.1";
       sha256 = "0j0fi74ky1qdvkgbapyq8fag2linawz3ndgzgi8lcci8lsby0n72";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ eskit ];
       pkgconfigDepends = [ eskit ];
       homepage = "http://github.com/a1kmm/bindings-eskit";
       description = "Bindings to ESKit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-fann" = callPackage
    ({ mkDerivation, bindings-DSL, fann }:
     mkDerivation {
       pname = "bindings-fann";
       version = "0.0.2";
       sha256 = "1hryjj9aabaxrcgmr3i6sklbyb58djzsrlssidgll3vb0wwcgbq7";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ fann ];
       description = "Low level bindings to FANN neural network library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-friso" = callPackage
    ({ mkDerivation, bindings-DSL, friso }:
     mkDerivation {
       pname = "bindings-friso";
       version = "0.1.0.0";
       sha256 = "0wg120qrqqf2g38ifjkwj5cc42sdcdn2lrs93wrdq9dd7kldn79c";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ friso ];
       description = "Low level bindings for friso";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "bindings-glib" = callPackage
    ({ mkDerivation, bindings-DSL, glib }:
     mkDerivation {
       pname = "bindings-glib";
       version = "0.1.5";
       sha256 = "0jhifzbwbphlzz9ffv3pyjv27phvcvky1gczmi9kvfz761b9qgyx";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ glib ];
       description = "Low level bindings to GLib";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) glib; };

  "bindings-gobject" = callPackage
    ({ mkDerivation, bindings-DSL, bindings-glib, glib }:
     mkDerivation {
       pname = "bindings-gobject";
       version = "0.4";
       sha256 = "1r2cg06r068nfyppjs2kwfmam7vk5x0l4f865arrrgrqam3bs1av";
       buildDepends = [ bindings-DSL bindings-glib ];
       pkgconfigDepends = [ glib ];
       description = "Low level bindings supporting GObject and derived libraries";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) glib; };

  "bindings-gpgme" = callPackage
    ({ mkDerivation, bindings-DSL, gpgme }:
     mkDerivation {
       pname = "bindings-gpgme";
       version = "0.1.4";
       sha256 = "0lj84j47y3j4v7zd7z99lb0bq68w12dir9fnbf9fg3si8hvkaj5s";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ gpgme ];
       homepage = "http://bitbucket.org/mauricio/bindings-gpgme";
       description = "Low level bindings to gpgme";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-gsl" = callPackage
    ({ mkDerivation, bindings-DSL, gsl }:
     mkDerivation {
       pname = "bindings-gsl";
       version = "0.2.1";
       sha256 = "0yv0k6r2pd4bbq0qsf6wfx752qn0d2d0s3jfa633gy6sg97j2n3y";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ gsl ];
       description = "Low level bindings to GNU GSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-gts" = callPackage
    ({ mkDerivation, bindings-DSL, bindings-glib, gts }:
     mkDerivation {
       pname = "bindings-gts";
       version = "0.1.1";
       sha256 = "1niqkxw7wxircwgvd9z4q9j3jxswifhl0h88v3j35lbxhiz6v7kh";
       buildDepends = [ bindings-DSL bindings-glib ];
       pkgconfigDepends = [ gts ];
       description = "Low level bindings supporting GTS, the GNU Triangulated Surface Library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "bindings-hamlib" = callPackage
    ({ mkDerivation, bindings-DSL, hamlib }:
     mkDerivation {
       pname = "bindings-hamlib";
       version = "0.1.0.0";
       sha256 = "1na9v5s5lqdnnj031zmqg3xfpsvy80gzr7qg0f3gsyyniww72xlz";
       editedCabalFile = "1jcpr5c0dbsczkjabbb06y5ddf21v9bbyvs0j56zbn8xpqsrgshy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ hamlib ];
       homepage = "https://github.com/relrod/hamlib-haskell";
       description = "Hamlib bindings for Haskell";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "bindings-hdf5" = callPackage
    ({ mkDerivation, bindings-DSL }:
     mkDerivation {
       pname = "bindings-hdf5";
       version = "0.1";
       sha256 = "0x6p1mwwnpcd5bd6iy4di11n7b45c4zp9d6l957mmhsyg24h2n79";
       buildDepends = [ bindings-DSL ];
       description = "Project bindings-* raw interface to HDF5 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-levmar" = callPackage
    ({ mkDerivation, bindings-DSL, blas, lapack }:
     mkDerivation {
       pname = "bindings-levmar";
       version = "1.1.0.2";
       sha256 = "0cn24sjncwnmaiziib72mfchnzv713kv5p9v16bkg7hj9rmd91f8";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ blas lapack ];
       homepage = "https://github.com/basvandijk/bindings-levmar";
       description = "Low level bindings to the C levmar (Levenberg-Marquardt) library";
       license = "unknown";
     }) { inherit (pkgs) blas; };

  "bindings-libcddb" = callPackage
    ({ mkDerivation, bindings-DSL, libcddb }:
     mkDerivation {
       pname = "bindings-libcddb";
       version = "0.3";
       sha256 = "1hygdr4w27igwc513vs7rc9i2xcmr1ndvbiwhkrdw2x0wsmz6yyy";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ libcddb ];
       homepage = "http://bitbucket.org/mauricio/bindings-libcddb";
       description = "Low level binding to libcddb";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-libffi" = callPackage
    ({ mkDerivation, bindings-DSL, libffi }:
     mkDerivation {
       pname = "bindings-libffi";
       version = "0.3";
       sha256 = "1321hr92nsa7fljxxir8waj7i42m8dvz76h693vp4n3lqll9hcf9";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ libffi ];
       description = "Low level bindings to libffi";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) libffi; };

  "bindings-libftdi" = callPackage
    ({ mkDerivation, bindings-DSL, libftdi, libusb }:
     mkDerivation {
       pname = "bindings-libftdi";
       version = "0.1";
       sha256 = "07kabkvdjiskika9vddrf9vhknld1x9s4m3b89d9m6l4gb2ln76i";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ libftdi libusb ];
       description = "Low level bindings to libftdi";
       license = "GPL";
     }) {};

  "bindings-librrd" = callPackage
    ({ mkDerivation, bindings-DSL, librrd }:
     mkDerivation {
       pname = "bindings-librrd";
       version = "0.2.0.1";
       sha256 = "1dyhq06rs91g77c67lfnscn7l9fgbzikiqnv2d494jd60y1q8n8y";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ librrd ];
       homepage = "http://cielonegro.org/Bindings-librrd.html";
       description = "Low level bindings to RRDtool";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bindings-libstemmer" = callPackage
    ({ mkDerivation, bindings-DSL, resourcet, stemmer, transformers }:
     mkDerivation {
       pname = "bindings-libstemmer";
       version = "0.1.0.0";
       sha256 = "03plarpy0fpv9anqnaqwcji3vij2qrxd4qmli77jb5npmax20r92";
       buildDepends = [ bindings-DSL resourcet transformers ];
       extraLibraries = [ stemmer ];
       description = "Binding for libstemmer with low level binding";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) stemmer; };

  "bindings-libusb" = callPackage
    ({ mkDerivation, bindings-DSL, libusb }:
     mkDerivation {
       pname = "bindings-libusb";
       version = "1.4.5.0";
       sha256 = "0xnx9p6wqbwiaqigdnf7x6vd0qq7w9wm0vxsh93adpb5wdpjza66";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ libusb ];
       homepage = "https://github.com/basvandijk/bindings-libusb";
       description = "Low level bindings to libusb";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-libv4l2" = callPackage
    ({ mkDerivation, bindings-DSL, v4l2 }:
     mkDerivation {
       pname = "bindings-libv4l2";
       version = "0.1";
       sha256 = "0s31dh5g26nldb6aq6q4i6ypgajincw7n3d3vm838x3w320qvg2g";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ v4l2 ];
       homepage = "https://gitorious.org/hsv4l2";
       description = "bindings to libv4l2 for Linux";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) v4l2; };

  "bindings-libzip" = callPackage
    ({ mkDerivation, bindings-DSL, libzip }:
     mkDerivation {
       pname = "bindings-libzip";
       version = "0.11";
       sha256 = "0hqkp4hvav67xqjfwbik3i06vq8f78jjzf37ncl6wwcw5w65hhrj";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ libzip ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Low level bindings to libzip";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-linux-videodev2" = callPackage
    ({ mkDerivation, bindings-DSL, ioctl }:
     mkDerivation {
       pname = "bindings-linux-videodev2";
       version = "0.1";
       sha256 = "1pqi8ks441m1s1md6nhjr7zhal5fv6s71xq4881zijd539qhq9dq";
       buildDepends = [ bindings-DSL ioctl ];
       homepage = "https://gitorious.org/hsv4l2";
       description = "bindings to Video For Linux Two (v4l2) kernel interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-lxc" = callPackage
    ({ mkDerivation, bindings-DSL, lxc }:
     mkDerivation {
       pname = "bindings-lxc";
       version = "0.2.0.1";
       sha256 = "0w61xzx8krr1pfa9ys7akpra2r0njziysm3ri08fb98g75hp9942";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ lxc ];
       homepage = "https://github.com/fizruk/bindings-lxc";
       description = "Direct Haskell bindings to LXC (Linux containers) C API";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) lxc; };

  "bindings-mmap" = callPackage
    ({ mkDerivation, bindings-posix }:
     mkDerivation {
       pname = "bindings-mmap";
       version = "1.0";
       sha256 = "19qdf5z6mf8j8inlnax0nv1wiv4va27z4a303hpkbgda459093nd";
       buildDepends = [ bindings-posix ];
       description = "(deprecated) see bindings-posix instead";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-mpdecimal" = callPackage
    ({ mkDerivation, bindings-DSL }:
     mkDerivation {
       pname = "bindings-mpdecimal";
       version = "0.8.0.0";
       sha256 = "18i68ivsrdndjpfnyq6dlmmkkx22v3rp619nm26af8ka3qai12j5";
       buildDepends = [ bindings-DSL ];
       homepage = "http://www.github.com/massysett/bindings-mpdecimal";
       description = "bindings to mpdecimal library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-nettle" = callPackage
    ({ mkDerivation, bindings-DSL, hspec, HUnit, nettle, QuickCheck
     , quickcheck-io
     }:
     mkDerivation {
       pname = "bindings-nettle";
       version = "0.1.1";
       sha256 = "1cd2yya6qhcx6vxsjdrlzkrj4k5nd15bz8fnkhhl2vm6r1w9jzq4";
       buildDepends = [ bindings-DSL ];
       testDepends = [ hspec HUnit QuickCheck quickcheck-io ];
       pkgconfigDepends = [ nettle ];
       homepage = "http://floss.scru.org/bindings-nettle";
       description = "bindings to nettle crypto library";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) nettle; };

  "bindings-parport" = callPackage
    ({ mkDerivation, bindings-DSL }:
     mkDerivation {
       pname = "bindings-parport";
       version = "0.0.4";
       sha256 = "1q404clpqzv0gik80ycipl94hvj27397z5cw1cs7b0yxlypllg3j";
       buildDepends = [ bindings-DSL ];
       description = "parport bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-portaudio" = callPackage
    ({ mkDerivation, bindings-DSL, portaudio }:
     mkDerivation {
       pname = "bindings-portaudio";
       version = "0.1";
       sha256 = "0wcxq300ijfkf4zc7p4xwsd9wzhnlss0kxjf04fka01mf9bh3ai2";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ portaudio ];
       description = "Low-level bindings to portaudio library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) portaudio; };

  "bindings-posix" = callPackage
    ({ mkDerivation, bindings-DSL }:
     mkDerivation {
       pname = "bindings-posix";
       version = "1.2.6";
       sha256 = "1yza3qbf0f5gfpg79pb6xfpw37zg191nmxa4r6h9x4xb5na0rzff";
       buildDepends = [ bindings-DSL ];
       description = "Low level bindings to posix";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-ppdev" = callPackage
    ({ mkDerivation, bindings-DSL, ioctl }:
     mkDerivation {
       pname = "bindings-ppdev";
       version = "0.0.3";
       sha256 = "18px429hplpabfhapwasbdgw8ynfm3vr5rf81pp173j1z0bv4ygq";
       buildDepends = [ bindings-DSL ioctl ];
       description = "PPDev bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-saga-cmd" = callPackage
    ({ mkDerivation, cmdargs, filepath, text }:
     mkDerivation {
       pname = "bindings-saga-cmd";
       version = "0.1.0.0";
       sha256 = "14wcw62j6lmlx3dy3k0ssy7mc2q8y8p7r1gr6m9rszxb9r5h1b9r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs filepath text ];
       homepage = "https://github.com/michelk/bindings-saga-cmd.hs";
       description = "Wrapping saga_cmd";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "bindings-sane" = callPackage
    ({ mkDerivation, bindings-DSL, saneBackends }:
     mkDerivation {
       pname = "bindings-sane";
       version = "0.0.1";
       sha256 = "0jxhc0x5hq6y7iznqlxbgnl37a7k8yki2ri475gyc158d47b0zm2";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ saneBackends ];
       homepage = "http://floss.scru.org/bindings-sane";
       description = "FFI bindings to libsane";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "bindings-sc3" = callPackage
    ({ mkDerivation, bindings-DSL, scsynth }:
     mkDerivation {
       pname = "bindings-sc3";
       version = "0.4.1";
       sha256 = "07vp6hzjjrbh3j152mq8f1i6xh9m2r20a555y03p9fzdfrb5kixd";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ scsynth ];
       homepage = "https://github.com/kaoskorobase/bindings-sc3/";
       description = "Low-level bindings to the SuperCollider synthesis engine library";
       license = "GPL";
     }) {};

  "bindings-sipc" = callPackage
    ({ mkDerivation, sipc }:
     mkDerivation {
       pname = "bindings-sipc";
       version = "1.1";
       sha256 = "1r2akdkhw054k6vg9a7jpm9ck280lsfkizz7y6cqbn1hy463grkd";
       isLibrary = true;
       isExecutable = true;
       extraLibraries = [ sipc ];
       homepage = "https://github.com/justinethier/hs-bindings-sipc";
       description = "Low level bindings to SIPC";
       license = "LGPL";
     }) {};

  "bindings-sophia" = callPackage
    ({ mkDerivation, bindings-DSL }:
     mkDerivation {
       pname = "bindings-sophia";
       version = "0.2.0.2";
       sha256 = "0fiibm7nrsx9pzi2lvhhbw71bah6s22h3jvn417ng3lj6ghhzii6";
       buildDepends = [ bindings-DSL ];
       description = "Low-level bindings to sophia library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-sqlite3" = callPackage
    ({ mkDerivation, bindings-DSL, sqlite }:
     mkDerivation {
       pname = "bindings-sqlite3";
       version = "1.0.3";
       sha256 = "0f30a7xdx50gs7hdv16b3m2055f0ar5c2cani318iwympnrpgww1";
       buildDepends = [ bindings-DSL ];
       pkgconfigDepends = [ sqlite ];
       description = "Low level bindings to sqlite3";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) sqlite; };

  "bindings-svm" = callPackage
    ({ mkDerivation, bindings-DSL }:
     mkDerivation {
       pname = "bindings-svm";
       version = "0.2.1";
       sha256 = "1nnmyxn28qdfy2sclnxv2mf2d426vrzgs7f0vvqri6fkjnvmk11b";
       buildDepends = [ bindings-DSL ];
       homepage = "http://github.com/tanimoto/bindings-svm";
       description = "Low level bindings to libsvm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bindings-uname" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bindings-uname";
       version = "0.1";
       sha256 = "1lsw4dh5vgmfvrx62ns5kmngzlmjzbxkx43x5i2k5qlmzp1pa3hk";
       description = "Low-level binding to POSIX uname(3)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bindings-yices" = callPackage
    ({ mkDerivation, gmp, yices }:
     mkDerivation {
       pname = "bindings-yices";
       version = "0.2";
       sha256 = "13yfhx6krj59qij9yvcl4fr6znd28nbldbv0qfhf83h3h18araf9";
       extraLibraries = [ gmp yices ];
       description = "Bindings to the Yices theorem prover";
       license = stdenv.lib.licenses.publicDomain;
     }) { inherit (pkgs) yices; };

  "binembed" = callPackage
    ({ mkDerivation, Cabal, dlist, filepath }:
     mkDerivation {
       pname = "binembed";
       version = "0.1.0.2";
       sha256 = "0cabiww0iczgpk7rrf4iqy3vamq65w5m1r5y90117llr6w610rks";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal dlist filepath ];
       homepage = "http://gitorious.org/binembed";
       description = "Embed data into object files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "binembed-example" = callPackage
    ({ mkDerivation, binembed, filepath }:
     mkDerivation {
       pname = "binembed-example";
       version = "0.1";
       sha256 = "069caz3gzpnc9fm553yxj3jwn07svb0i34kfqw4vzlkkpzs5r5g4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binembed filepath ];
       homepage = "http://gitorious.org/binembed";
       description = "Example project using binembed to embed data in object files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bio" = callPackage
    ({ mkDerivation, binary, mtl, parallel, parsec, QuickCheck, random
     , tagsoup
     }:
     mkDerivation {
       pname = "bio";
       version = "0.5.3";
       sha256 = "1vby3nbqbwza65jg5d0bmzh22i5s20cjbqdgaq9zasza7ywgkj22";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary mtl parallel parsec QuickCheck random tagsoup
       ];
       homepage = "http://biohaskell.org/Libraries/Bio";
       description = "A bioinformatics library";
       license = "LGPL";
     }) {};

  "bioace" = callPackage
    ({ mkDerivation, bioalign, biocore, parsec }:
     mkDerivation {
       pname = "bioace";
       version = "0.0.1";
       sha256 = "08k2w66gpysjk038pi50lc21gbn2dyp5z8ls0qhcmjqc59dn8hvg";
       buildDepends = [ bioalign biocore parsec ];
       homepage = "https://patch-tag.com/r/dfornika/bioace/home";
       description = "Library for reading ace assembly files";
       license = "GPL";
     }) {};

  "bioalign" = callPackage
    ({ mkDerivation, biocore }:
     mkDerivation {
       pname = "bioalign";
       version = "0.0.5";
       sha256 = "006gg8ds6klrl9rc1csi247rf8gzlgn9mdi0jl4pjz5xmf0jw5dr";
       buildDepends = [ biocore ];
       homepage = "https://patch-tag.com/r/dfornika/biophd/home";
       description = "Data structures and helper functions for calculating alignments";
       license = "GPL";
     }) {};

  "biocore" = callPackage
    ({ mkDerivation, stringable }:
     mkDerivation {
       pname = "biocore";
       version = "0.3.1";
       sha256 = "06ml9p144bv0c9hv6pkcvhdgc0vw0jxzbqb834ilr38kjmrpsar1";
       buildDepends = [ stringable ];
       description = "A bioinformatics library";
       license = "LGPL";
     }) {};

  "biofasta" = callPackage
    ({ mkDerivation, biocore }:
     mkDerivation {
       pname = "biofasta";
       version = "0.0.3";
       sha256 = "1l770sg2gcg7wl5yfrrk9nr7hgd5m0q158ad5nd8z7i5vsfah8b2";
       buildDepends = [ biocore ];
       homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
       description = "Library for reading fasta sequence files";
       license = "GPL";
     }) {};

  "biofastq" = callPackage
    ({ mkDerivation, biocore }:
     mkDerivation {
       pname = "biofastq";
       version = "0.1";
       sha256 = "0453cb2sw6x9hx3z7w3fvymwi0l0s86wlvi6vvsh0jcwas3iirbl";
       buildDepends = [ biocore ];
       homepage = "http://biohaskell.org/";
       description = "A library for reading FASTQ files";
       license = "LGPL";
     }) {};

  "biophd" = callPackage
    ({ mkDerivation, binary, biocore, parsec, text, time }:
     mkDerivation {
       pname = "biophd";
       version = "0.0.6";
       sha256 = "1206pa9ah473rvpj6yr769fwmjc3axl036ny3yzf52lhy6bcggbb";
       buildDepends = [ binary biocore parsec text time ];
       homepage = "https://github.com/dfornika/biophd/wiki";
       description = "Library for reading phd sequence files";
       license = "GPL";
     }) {};

  "biopsl" = callPackage
    ({ mkDerivation, biocore, cmdargs, unordered-containers }:
     mkDerivation {
       pname = "biopsl";
       version = "0.4";
       sha256 = "1v9vg9gnrf606raqlzcd15irg60v3cf5m0yy5qsdyxm24102bgmj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ biocore cmdargs unordered-containers ];
       homepage = "http://biohaskell.org/";
       description = "Library and executables for working with PSL files";
       license = "LGPL";
     }) {};

  "biosff" = callPackage
    ({ mkDerivation, binary, biocore, cmdargs, mtl }:
     mkDerivation {
       pname = "biosff";
       version = "0.3.7.1";
       sha256 = "1mxsqxcf5sh37gpfqil499i9n8wi3sk5sl2cx6x6agbc0n726bwq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary biocore cmdargs mtl ];
       homepage = "http://biohaskell.org/";
       description = "Library and executables for working with SFF files";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "biostockholm" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, biocore
     , blaze-builder, blaze-builder-conduit, conduit, deepseq, hspec
     , HUnit, QuickCheck, transformers, zlib-conduit
     }:
     mkDerivation {
       pname = "biostockholm";
       version = "0.3.2";
       sha256 = "13rzlb2s3y8vp969s8z1gxmiccvpgrv4yxpim4bjbyc2yblbbnk7";
       buildDepends = [
         attoparsec attoparsec-conduit biocore blaze-builder
         blaze-builder-conduit conduit deepseq
       ];
       testDepends = [
         biocore conduit hspec HUnit QuickCheck transformers zlib-conduit
       ];
       description = "Parsing and rendering of Stockholm files (used by Pfam, Rfam and Infernal)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bird" = callPackage
    ({ mkDerivation, data-default, hack, hack-handler-happstack
     , MissingH, mtl, parsec, rallod
     }:
     mkDerivation {
       pname = "bird";
       version = "0.0.19";
       sha256 = "0w380dcpk8gp5cx24nh6xlnibd6pw93wmxcajl26p4kd5cxbgfqz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-default hack hack-handler-happstack MissingH mtl parsec rallod
       ];
       homepage = "http://github.com/moonmaster9000/bird";
       description = "A simple, sinatra-inspired web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bit-array" = callPackage
    ({ mkDerivation, doctest, filepath, loch-th, numeric-qq
     , placeholders
     }:
     mkDerivation {
       pname = "bit-array";
       version = "0.1.0";
       sha256 = "0v04drr3m3096shp70l4iwqzva45szjhfl1yzaqblvn49hky8kns";
       buildDepends = [ loch-th numeric-qq placeholders ];
       testDepends = [ doctest filepath ];
       homepage = "https://github.com/nikita-volkov/bit-array";
       description = "A bit array (aka bitset, bitmap, bit vector) API for numeric types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "bit-vector" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "bit-vector";
       version = "0.1.0";
       sha256 = "1z2gk5wbl865p893hz77jkg7lyl6698va5r33fi7w1vv8656s14n";
       buildDepends = [ vector ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/acfoltzer/bit-vector";
       description = "Simple bit vectors for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitarray" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bitarray";
       version = "0.0.1.1";
       sha256 = "00nqd62cbh42qqqvcl6iv1i9kbv0f0mkiygv4j70wfh5cl86yzxj";
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Mutable and immutable bit arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitcoin-rpc" = callPackage
    ({ mkDerivation, aeson, attoparsec, cereal, HTTP, HUnit, mtl
     , network, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, unordered-containers, watchdog
     }:
     mkDerivation {
       pname = "bitcoin-rpc";
       version = "0.5.0.1";
       sha256 = "0bx54033w0yjb2isd7cvnd46qz3nqs7z6flw0mb1nkd81sdxbhp2";
       buildDepends = [
         aeson attoparsec cereal HTTP mtl network text unordered-containers
         watchdog
       ];
       testDepends = [
         aeson attoparsec cereal HTTP HUnit mtl network QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         unordered-containers watchdog
       ];
       description = "Library to communicate with the Satoshi Bitcoin daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitly-cli" = callPackage
    ({ mkDerivation, Bitly, filepath, regexpr }:
     mkDerivation {
       pname = "bitly-cli";
       version = "0.1.2";
       sha256 = "0g63lg3599clbn4xcg9kcak6hs4877dwj00607c5gyh5x4d2c21d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Bitly filepath regexpr ];
       homepage = "http://bitbucket.org/jetxee/hs-bitly/";
       description = "A command line tool to access bit.ly URL shortener.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitmap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bitmap";
       version = "0.0.2";
       sha256 = "1flrfbrsnlcal7qyvl1wb0p8c14w0mvvkmgs7d943jqnlh4gay5m";
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "A library for handling and manipulating bitmaps (rectangular pixel arrays)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitmap-opengl" = callPackage
    ({ mkDerivation, bitmap, OpenGL }:
     mkDerivation {
       pname = "bitmap-opengl";
       version = "0.0.1.5";
       sha256 = "1wq1p0vvif750gpyh2kq3agzwga3hx0fq28irbw5dgrz462dd9pv";
       buildDepends = [ bitmap OpenGL ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "OpenGL support for Data.Bitmap.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitmaps" = callPackage
    ({ mkDerivation, binary, bitmap, cereal, monad-state, stb-image
     , string-class, tagged, zlib
     }:
     mkDerivation {
       pname = "bitmaps";
       version = "0.2.6.3";
       sha256 = "1cbfbbyvmdlfwn6pjhxkd8f4ajkp9cm18apzmrqffrj58gmzr1p0";
       buildDepends = [
         binary bitmap cereal monad-state stb-image string-class tagged zlib
       ];
       homepage = "https://github.com/bairyn/bitmaps";
       description = "Bitmap library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bits" = callPackage
    ({ mkDerivation, bytes, doctest, filepath, mtl, transformers }:
     mkDerivation {
       pname = "bits";
       version = "0.4";
       sha256 = "12s5yk47y0zqzqiyaw9jchyl3crf1id9dk67m638b070d46k29p6";
       buildDepends = [ bytes mtl transformers ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/analytics/bits";
       description = "Various bit twiddling and bitwise serialization primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bits-atomic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bits-atomic";
       version = "0.1.3";
       sha256 = "13fbakkwcdk63dm7r0mcsanm5mijp73c7x1kxpay2f03rxb39b70";
       isLibrary = true;
       isExecutable = true;
       description = "Atomic bit operations on memory locations for low-level synchronization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bits-conduit" = callPackage
    ({ mkDerivation, conduit, hspec, HUnit, mtl }:
     mkDerivation {
       pname = "bits-conduit";
       version = "0.2.0.0";
       sha256 = "08hgl1pvwadnrgqcs1yl7lvqgh955swbscpay4chb097pqqggdrj";
       buildDepends = [ conduit mtl ];
       testDepends = [ conduit hspec HUnit mtl ];
       description = "Bitstream support for Conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bits-extras" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bits-extras";
       version = "0.1.3";
       sha256 = "0sy9dksmdx0773bsn8yi5hw4qpgn16g8aqqj888w1x75cbsxr997";
       isLibrary = true;
       isExecutable = true;
       configureFlags = "--ghc-option=-lgcc_s";
       description = "Efficient high-level bit operations not found in Data.Bits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitset" = callPackage
    ({ mkDerivation, deepseq, gmp, QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "bitset";
       version = "1.4.8";
       sha256 = "0h912i3wb6v8sx0c4mlp0j65l3yhpdsk3my8zhif2jls2sxns988";
       buildDepends = [ deepseq ];
       testDepends = [ QuickCheck tasty tasty-quickcheck ];
       extraLibraries = [ gmp ];
       description = "A space-efficient set data structure";
       license = stdenv.lib.licenses.mit;
     }) {};

  "bitspeak" = callPackage
    ({ mkDerivation, bindings-DSL, bindings-glib, bindings-gobject, gtk
     , pango
     }:
     mkDerivation {
       pname = "bitspeak";
       version = "0.0.3";
       sha256 = "02dyi59lp6blrvsc10ahjnra1vaz3kzb8h0jpk74k7n6flia8z1k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bindings-DSL bindings-glib bindings-gobject ];
       pkgconfigDepends = [ gtk pango ];
       description = "Proof-of-concept tool for writing using binary choices";
       license = "GPL";
     }) { inherit (pkgs) gtk pango; };

  "bitstream" = callPackage
    ({ mkDerivation, base-unicode-symbols, QuickCheck, vector }:
     mkDerivation {
       pname = "bitstream";
       version = "0.2.0.3";
       sha256 = "0vskdlaczkv4szrnhhllfvmhvil58ra1qwjzhjkchgmvhx4b6jzq";
       buildDepends = [ base-unicode-symbols vector ];
       testDepends = [ base-unicode-symbols QuickCheck vector ];
       homepage = "https://github.com/phonohawk/bitstream";
       description = "Fast, packed, strict and lazy bit streams with stream fusion";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bitstring" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bitstring";
       version = "0.0.0";
       sha256 = "1ix2x4v76wq5148k1aax69cf8sk14cd0z362dz1d2qmj9qxsnsw8";
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Lazy bit strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bittorrent" = callPackage
    ({ mkDerivation, aeson, base16-bytestring, base32-bytestring
     , base64-bytestring, bencoding, binary, binary-conduit, bits-extras
     , BoundedChan, cereal, cereal-conduit, conduit, cryptohash
     , data-default, deepseq, entropy, filepath, hashable, hspec, HTTP
     , IntervalMap, intset, krpc, lens, mmap, mtl, network
     , network-conduit, pretty-class, QuickCheck, quickcheck-instances
     , resourcet, SafeSemaphore, split, stm, text, time, transformers
     , unordered-containers, urlencoded, vector
     }:
     mkDerivation {
       pname = "bittorrent";
       version = "0.0.0.3";
       sha256 = "155bbqqn33mlavvcm6xfxs4dqij66jfhqxjmrjkyxvzd36yz0ann";
       buildDepends = [
         aeson base16-bytestring base32-bytestring base64-bytestring
         bencoding binary binary-conduit bits-extras BoundedChan cereal
         cereal-conduit conduit cryptohash data-default deepseq entropy
         filepath hashable HTTP IntervalMap intset krpc lens mmap mtl
         network network-conduit pretty-class resourcet SafeSemaphore split
         stm text time transformers unordered-containers urlencoded vector
       ];
       testDepends = [
         aeson bencoding cereal filepath hspec network QuickCheck
         quickcheck-instances text time
       ];
       homepage = "https://github.com/cobit/bittorrent";
       description = "Bittorrent protocol implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bitvec" = callPackage
    ({ mkDerivation, HUnit, primitive, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "bitvec";
       version = "0.1.0.1";
       sha256 = "0zgg72qpxgcgjrr2lr702abibnm79h6knb3jcwdjcxssgb6l70q4";
       buildDepends = [ primitive vector ];
       testDepends = [
         HUnit primitive QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/mokus0/bitvec";
       description = "Unboxed vectors of bits / dense IntSets";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bitwise" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "bitwise";
       version = "0.1.0.1";
       sha256 = "0k3xzw6lcrffbv8hqgg4kaanizql8r888ap4bw22sh3l3rq7zasn";
       testDepends = [ QuickCheck ];
       homepage = "https://gitorious.org/bitwise";
       description = "fast multi-dimensional unboxed bit packed Bool arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bk-tree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bk-tree";
       version = "0.1.1";
       sha256 = "0av4gkh2vr9righ26hbagh8j30i8k4sp3af98lmwm5gf81vs5az4";
       homepage = "https://github.com/bitonic/language-spelling";
       description = "BK-tree implementation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bkr" = callPackage
    ({ mkDerivation, aws, filepath, HDBC, HDBC-sqlite3, hslogger
     , http-conduit, MissingH, pureMD5, random, strict, text
     , utf8-string
     }:
     mkDerivation {
       pname = "bkr";
       version = "0.1.2";
       sha256 = "1zi429ny66qp3ywlqfg7y0xk472vxh4z572a4c8rbzpx5lgiypxs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aws filepath HDBC HDBC-sqlite3 hslogger http-conduit MissingH
         pureMD5 random strict text utf8-string
       ];
       homepage = "https://github.com/ingesson/bkr";
       description = "Backup utility for backing up to cloud storage services (S3 only right now)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bktrees" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bktrees";
       version = "0.3.1";
       sha256 = "1d2iz48n0ayn0hi9xa110pxy1mv5a4m21rmbpvs6ki1a7cv4ghn9";
       description = "A set data structure with approximate searching";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bla" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bla";
       version = "2009.10.20";
       sha256 = "1zb076m4673jmvzazwjjmlw3nrnw0j22hiim6r90014sqcpb6xhp";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://github.com/nfjinjing/bla";
       description = "a stupid cron";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "black-jewel" = callPackage
    ({ mkDerivation, ansi-terminal, download, haskeline, HTTP, hxt
     , network, QuickCheck, safe, tagsoup, transformers, zlib
     }:
     mkDerivation {
       pname = "black-jewel";
       version = "0.0.0.1";
       sha256 = "1ki6kdmc5ss0dp7jrhv9zx9a93f2p38q7i57n0y94awyv5772yla";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal download haskeline HTTP hxt network safe tagsoup
         transformers zlib
       ];
       testDepends = [ QuickCheck ];
       homepage = "http://git.kaction.name/black-jewel";
       description = "The pirate bay client";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "blacktip" = callPackage
    ({ mkDerivation, bitwise, deepseq, deepseq-generics, hspec
     , locators, network-info, safe, split, system-fileio
     , system-filepath, time
     }:
     mkDerivation {
       pname = "blacktip";
       version = "0.1.0.1";
       sha256 = "12s05l348q6xlhrwhh2i5v04i9bglvb00vpy25j5axdv5k8nwn62";
       buildDepends = [
         bitwise deepseq deepseq-generics locators network-info safe split
         system-fileio system-filepath time
       ];
       testDepends = [ hspec ];
       homepage = "https://github.com/bitemyapp/blacktip";
       description = "Decentralized, k-ordered unique ID generator";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "blakesum" = callPackage
    ({ mkDerivation, text, vector }:
     mkDerivation {
       pname = "blakesum";
       version = "0.5";
       sha256 = "15k3vf9jqcw1a9gyppkhn5ibj7ld8mb2irfhbwd3plj86xyxxa0g";
       buildDepends = [ text vector ];
       homepage = "https://github.com/killerswan/Haskell-BLAKE";
       description = "The BLAKE SHA-3 candidate hashes, in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blakesum-demo" = callPackage
    ({ mkDerivation, blakesum, text, vector }:
     mkDerivation {
       pname = "blakesum-demo";
       version = "0.5";
       sha256 = "1d07005fd670p74vkyi9gg3wawyi21s37ww69fsrrgarf3i5p4m9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ blakesum text vector ];
       homepage = "https://github.com/killerswan/Haskell-BLAKE";
       description = "The BLAKE SHA-3 candidate hashes, in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blank-canvas" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, colour
     , data-default-class, http-types, kansas-comet, scotty, stm, text
     , transformers, vector, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "blank-canvas";
       version = "0.5";
       sha256 = "05kfyjp9vncyzsvq018ilb8vh7fyzbc06nlx35jk3dzj6i6x5bgs";
       buildDepends = [
         aeson base64-bytestring colour data-default-class http-types
         kansas-comet scotty stm text transformers vector wai wai-extra warp
       ];
       homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
       description = "HTML5 Canvas Graphics Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blas" = callPackage
    ({ mkDerivation, ieee, QuickCheck, storable-complex }:
     mkDerivation {
       pname = "blas";
       version = "0.7.6";
       sha256 = "1q6fkw2bsppymy5wi7mgkl09caij52xplw64786548z9i95r0bli";
       buildDepends = [ ieee QuickCheck storable-complex ];
       homepage = "http://github.com/patperry/blas";
       description = "Bindings to the BLAS library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blas-hs" = callPackage
    ({ mkDerivation, blas, Cabal, storable-complex, vector }:
     mkDerivation {
       pname = "blas-hs";
       version = "0.1.0.2";
       sha256 = "1jkri6cj2dwm5qf89xyiimwxxq4sr9294mj98f8w7v75hgp4cjc2";
       buildDepends = [ storable-complex ];
       testDepends = [ blas Cabal vector ];
       homepage = "https://github.com/Rufflewind/blas-hs";
       description = "Low-level Haskell bindings to Blas";
       license = stdenv.lib.licenses.mit;
     }) {};

  "blastxml" = callPackage
    ({ mkDerivation, biocore, parallel, tagsoup }:
     mkDerivation {
       pname = "blastxml";
       version = "0.3.2";
       sha256 = "0slqvv8729vlniwswwipw3yss9id6xvmd416kad1ij064g28j00c";
       buildDepends = [ biocore parallel tagsoup ];
       homepage = "http://biohaskell.org/";
       description = "Library for reading Blast XML output";
       license = "LGPL";
     }) {};

  "blaze" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "blaze";
       version = "0.0.2";
       sha256 = "01n6cw3fjmlj5pmdy122ch4kbf6srvwlz356rr6nxfrm0ndcxp38";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-bootstrap" = callPackage
    ({ mkDerivation, blaze-html, text }:
     mkDerivation {
       pname = "blaze-bootstrap";
       version = "0.1.0.0";
       sha256 = "1q1gwjg8xfp20lrlrlkdprny7j437fsnm5c9p5rv4549nyam7prw";
       buildDepends = [ blaze-html text ];
       homepage = "http://github.com/agrafix/blaze-bootstrap";
       description = "Blaze helper functions for bootstrap pages";
       license = stdenv.lib.licenses.mit;
     }) {};

  "blaze-builder" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "blaze-builder";
       version = "0.3.3.4";
       sha256 = "12xgmi8bc3h3cfk31rrfaklmwvyxgdwzwmxzw22yxd0dd8g11hg5";
       buildDepends = [ text ];
       homepage = "http://github.com/meiersi/blaze-builder";
       description = "Efficient buffered output";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-builder-conduit" = callPackage
    ({ mkDerivation, conduit }:
     mkDerivation {
       pname = "blaze-builder-conduit";
       version = "1.1.0";
       sha256 = "0xxyn3lhcn1bkybhrl5dx68d0adf26ilf34gv0mxkwpfj7m7d3k3";
       buildDepends = [ conduit ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Convert streams of builders to streams of bytestrings. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-builder-enumerator" = callPackage
    ({ mkDerivation, blaze-builder, enumerator, transformers }:
     mkDerivation {
       pname = "blaze-builder-enumerator";
       version = "0.2.0.6";
       sha256 = "0pdw18drvikb465qh43b8wjyvpqj3wcilyczc21fri5ma4mxdkyp";
       buildDepends = [ blaze-builder enumerator transformers ];
       homepage = "https://github.com/meiersi/blaze-builder-enumerator";
       description = "Enumeratees for the incremental conversion of builders to bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-from-html" = callPackage
    ({ mkDerivation, filepath, tagsoup }:
     mkDerivation {
       pname = "blaze-from-html";
       version = "0.3.2.1";
       sha256 = "1li3zxrgwj5rgk894d9zwfxnx5dfjzkvjlcyck2g7s0awfp2kq4s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath tagsoup ];
       homepage = "http://jaspervdj.be/blaze";
       description = "Tool to convert HTML to BlazeHtml code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-html" = callPackage
    ({ mkDerivation, blaze-builder, blaze-markup, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text
     }:
     mkDerivation {
       pname = "blaze-html";
       version = "0.7.0.3";
       sha256 = "1jn3vvrxb3ifxb5yzs76pjlk8c366xg1sab7qlw9a4kwmigvl6vx";
       buildDepends = [ blaze-builder blaze-markup text ];
       testDepends = [
         blaze-builder blaze-markup HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast HTML combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-html-contrib" = callPackage
    ({ mkDerivation, blaze-html, cgi, data-default, network, safe, text
     }:
     mkDerivation {
       pname = "blaze-html-contrib";
       version = "0.2.2";
       sha256 = "0a10vzbd5l32y716nmgc49rj2gpyavl8fl1z4qs5drx9adwj50cf";
       buildDepends = [ blaze-html cgi data-default network safe text ];
       homepage = "https://github.com/egonSchiele/blaze-html-contrib";
       description = "Some contributions to add handy things to blaze html";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-html-hexpat" = callPackage
    ({ mkDerivation, blaze-html, hexpat, text }:
     mkDerivation {
       pname = "blaze-html-hexpat";
       version = "0.1.0.0";
       sha256 = "11bw5ywvi7dlz5inch3z0vlg936ch1rnp99bh4nmwskvszidd7kg";
       buildDepends = [ blaze-html hexpat text ];
       homepage = "https://github.com/jaspervdj/blaze-html-hexpat";
       description = "A hexpat backend for blaze-html";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-html-truncate" = callPackage
    ({ mkDerivation, blaze-markup, html-truncate, tagsoup, text }:
     mkDerivation {
       pname = "blaze-html-truncate";
       version = "0.3.0.0";
       sha256 = "1czjqxaik1c9ialdwh8inh5iajl87lrnfa9rxnidzvfhc7ks9zbl";
       buildDepends = [ blaze-markup html-truncate tagsoup text ];
       homepage = "http://github.com/mruegenberg/blaze-html-truncate";
       description = "A truncator for blaze-html";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-markup" = callPackage
    ({ mkDerivation, blaze-builder, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "blaze-markup";
       version = "0.6.1.1";
       sha256 = "1ah6fgfqsmarq8g4gw81yhckz4pclb2ifxv237cqz5zhy9il4j5d";
       buildDepends = [ blaze-builder text ];
       testDepends = [
         blaze-builder HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast markup combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-svg" = callPackage
    ({ mkDerivation, blaze-markup, mtl }:
     mkDerivation {
       pname = "blaze-svg";
       version = "0.3.4";
       sha256 = "061011qrpqiyag9549hn0hfikvkrin5wb3cf0zfm9n80cgvzmqd3";
       buildDepends = [ blaze-markup mtl ];
       homepage = "https://github.com/deepakjois/blaze-svg";
       description = "SVG combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-textual" = callPackage
    ({ mkDerivation, blaze-builder, double-conversion, QuickCheck
     , test-framework, test-framework-quickcheck2, text, time, vector
     }:
     mkDerivation {
       pname = "blaze-textual";
       version = "0.2.0.9";
       sha256 = "1gwy1pjnc2ikxfxn9c751rnydry1hmlfk13k29xnns9vwglf81f0";
       buildDepends = [ blaze-builder text time vector ];
       testDepends = [
         blaze-builder double-conversion QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/bos/blaze-textual";
       description = "Fast rendering of common datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blaze-textual-native" = callPackage
    ({ mkDerivation, blaze-builder, text, time, vector }:
     mkDerivation {
       pname = "blaze-textual-native";
       version = "0.2.1.1";
       sha256 = "1q3gdf4ljc5xhw8f72qkvi6insk2nwdfk28a00y1b58jmk8003sd";
       buildDepends = [ blaze-builder text time vector ];
       homepage = "http://github.com/mailrank/blaze-textual";
       description = "Fast rendering of common datatypes (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blink1" = callPackage
    ({ mkDerivation, text, usb, vector }:
     mkDerivation {
       pname = "blink1";
       version = "0.4";
       sha256 = "0547wg4qk2xv5gzj1alaxk06j65dhmzhn6y48rjllyr4lc5bm2qj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ text usb vector ];
       description = "Control library for blink(1) LED from ThingM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blip" = callPackage
    ({ mkDerivation, bliplib, filepath, language-python, mtl, parseargs
     }:
     mkDerivation {
       pname = "blip";
       version = "0.2.1";
       sha256 = "0ilzdjfaq8dzfla0kxgkqbjsba0kbgkz8w5bzlhl0fw6rnaa0hn7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bliplib filepath language-python mtl parseargs ];
       homepage = "https://github.com/bjpop/blip";
       description = "Python to bytecode compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bliplib" = callPackage
    ({ mkDerivation, binary, mtl, utf8-string }:
     mkDerivation {
       pname = "bliplib";
       version = "0.2.1";
       sha256 = "0i5lh78yyj82g08ypyfp01kgc56p6c3nrl9fk49bp2yqpghv65qz";
       buildDepends = [ binary mtl utf8-string ];
       homepage = "https://github.com/bjpop/blip";
       description = "Support code for Blip";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blocking-transactions" = callPackage
    ({ mkDerivation, parallel }:
     mkDerivation {
       pname = "blocking-transactions";
       version = "0.1.0.5";
       sha256 = "00xlj503h6073f9sk7a1p2b66nw2lryyvxxbawwz030mjdb6hgps";
       buildDepends = [ parallel ];
       homepage = "http://www.downstairspeople.org/git/blocking-transactions.git";
       description = "Composable, blocking transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "blogination" = callPackage
    ({ mkDerivation, ConfigFile, feed, filepath, higherorder
     , highlighting-kate, mtl, pandoc, regex-compat, time, utf8-string
     , xhtml, xml
     }:
     mkDerivation {
       pname = "blogination";
       version = "0.5";
       sha256 = "0bdhcjiz2b4zavmixvrl5la91s9z5pra05xk52118cjk4dcfdzfg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ConfigFile feed filepath higherorder highlighting-kate mtl pandoc
         regex-compat time utf8-string xhtml xml
       ];
       description = "Very simple static blog software";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bloodhound" = callPackage
    ({ mkDerivation, aeson, conduit, doctest, doctest-prop, filepath
     , hspec, http-client, http-types, QuickCheck, semigroups, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "bloodhound";
       version = "0.5.0.1";
       sha256 = "1wvqj8fz3b6jvhmmi3calx6fsqjyvcpznks67bd0iiz9z0igh0ha";
       buildDepends = [
         aeson conduit http-client http-types semigroups text time vector
       ];
       testDepends = [
         aeson doctest doctest-prop filepath hspec http-client http-types
         QuickCheck semigroups text time unordered-containers vector
       ];
       homepage = "https://github.com/bitemyapp/bloodhound";
       description = "ElasticSearch client library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bloomfilter" = callPackage
    ({ mkDerivation, deepseq, QuickCheck, random, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "bloomfilter";
       version = "2.0.0.0";
       sha256 = "07fif8i5rinysli1mpi92k405kvw8va7w9v9w4wd5bylb87zy77f";
       buildDepends = [ deepseq ];
       testDepends = [
         QuickCheck random test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/bloomfilter";
       description = "Pure and impure Bloom Filter implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bloxorz" = callPackage
    ({ mkDerivation, GLFW, OpenGL }:
     mkDerivation {
       pname = "bloxorz";
       version = "0.1.2";
       sha256 = "0cryvs5ia52dkc232cl2crhf0qq7ncir5c3zvrgsbzcc2hnmyrww";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLFW OpenGL ];
       description = "OpenGL Logic Game";
       license = "GPL";
     }) {};

  "bluetile" = callPackage
    ({ mkDerivation, ConfigFile, filepath, glade, gtk, mtl, random
     , regex-compat, utf8-string, X11, X11-xft, xmonad, xmonad-contrib
     }:
     mkDerivation {
       pname = "bluetile";
       version = "0.6";
       sha256 = "13xfnx08xgbfppr4cqmrqj82w192ll4m1x4kmv5jdpk02yb4zqa2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile filepath glade gtk mtl random regex-compat utf8-string
         X11 X11-xft xmonad xmonad-contrib
       ];
       pkgconfigDepends = [ gtk ];
       homepage = "http://www.bluetile.org/";
       description = "full-featured tiling for the GNOME desktop environment";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) gtk; };

  "bluetileutils" = callPackage
    ({ mkDerivation, gtk }:
     mkDerivation {
       pname = "bluetileutils";
       version = "0.2";
       sha256 = "1qna8rr50mmd90xp7pwhcknx12dv2n7w5pdsw28kpbxykljrszgm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk ];
       description = "Utilities for Bluetile";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bmp" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "bmp";
       version = "1.2.5.2";
       sha256 = "0f88f2ynm1fpzbjijy5fa8blfrdv42h5h28hfjlpd4fp0h96in5x";
       buildDepends = [ binary ];
       homepage = "http://code.ouroborus.net/bmp";
       description = "Read and write uncompressed BMP image files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "board-games" = callPackage
    ({ mkDerivation, cgi, html, httpd-shed, network, QuickCheck, random
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "board-games";
       version = "0.1.0.1";
       sha256 = "12b5hzazqilwwj0535wrh6i9r6lxi7lbzl727470mvzlr8p8lkyz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cgi html httpd-shed network random transformers utility-ht
       ];
       testDepends = [ QuickCheck random transformers utility-ht ];
       homepage = "http://code.haskell.org/~thielema/games/";
       description = "Three games for inclusion in a web server";
       license = "GPL";
     }) {};

  "bogre-banana" = callPackage
    ({ mkDerivation, hogre, hois, monad-control, random
     , reactive-banana
     }:
     mkDerivation {
       pname = "bogre-banana";
       version = "0.0.1";
       sha256 = "0zlrm911sbszxyffz18yf64935iv8s2yk3v8v6cwjij69haryvwi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hogre hois monad-control random reactive-banana ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bool-extras" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bool-extras";
       version = "0.4.0";
       sha256 = "008m43f04ncx2c24c241gzwjyyglw8rwpq2gsakqkw0nwz3czs61";
       homepage = "http://tom.lokhorst.eu/bool-extras";
       description = "A fold function for Bool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "boolean-list" = callPackage
    ({ mkDerivation, HUnit }:
     mkDerivation {
       pname = "boolean-list";
       version = "0.1.0.0";
       sha256 = "0yr1szkaaz90nmawzrgfljv7hcd59xs7nr2fhc2rb4582crkykvp";
       buildDepends = [ HUnit ];
       homepage = "http://xy30.com";
       description = "convert numbers to binary coded lists";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "boolean-normal-forms" = callPackage
    ({ mkDerivation, cond, QuickCheck, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "boolean-normal-forms";
       version = "0.0.0.1";
       sha256 = "11y26whzibxkcfck83lcrmxl34j7qp374wj6nzx2k3l65sdqm2ic";
       buildDepends = [ cond ];
       testDepends = [ cond QuickCheck tasty tasty-quickcheck ];
       description = "Boolean normal form: NNF, DNF & CNF";
       license = stdenv.lib.licenses.mit;
     }) {};

  "boolexpr" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "boolexpr";
       version = "0.1";
       sha256 = "14v894clplpcc1visqn337p7vmacj5hgx41vr60pwvflmv98d8xn";
       buildDepends = [ parsec ];
       description = "Boolean expressions with various representations and search queries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bools" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bools";
       version = "0.1.1";
       sha256 = "0057303m23p81v60jcsc3p7n2rs2rzrvbg5m18pc0fk95q2q2rim";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "boolsimplifier" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "boolsimplifier";
       version = "0.1.8";
       sha256 = "13w2i7b2g9w5kzqnbjjdzf3r2dm7a4xxags02khhwlj1f8vsjvq9";
       description = "Simplification tools for simple propositional formulas";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "boomange" = callPackage
    ({ mkDerivation, descrilo, filepath, simtreelo }:
     mkDerivation {
       pname = "boomange";
       version = "0.1.2.1";
       sha256 = "1yjmnbldla5iha6vzslnd1sdaaknsgk4afrj5yjrib3w2v1rp2vx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ descrilo filepath simtreelo ];
       description = "A Bookmarks manager with a HTML generator";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "boomerang" = callPackage
    ({ mkDerivation, mtl, text }:
     mkDerivation {
       pname = "boomerang";
       version = "1.4.5";
       sha256 = "03iaasyg2idvq25wzzjk2yr9lyql7bcgmfkycy1cy4ms5dg91k6q";
       buildDepends = [ mtl text ];
       description = "Library for invertible parsing and printing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "boomslang" = callPackage
    ({ mkDerivation, data-accessor, data-accessor-template
     , font-opengl-basic4x6, GLFW-b, MonadRandom, mtl, OpenGL
     }:
     mkDerivation {
       pname = "boomslang";
       version = "0.0.4";
       sha256 = "0yqqb4s5ld4fv7x17d5dp7z2dglrcmgb7fr4n8x4n2pysylxm9nh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-accessor data-accessor-template font-opengl-basic4x6 GLFW-b
         MonadRandom mtl OpenGL
       ];
       description = "Boomshine clone";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "bot" = callPackage
    ({ mkDerivation, arrows, Stream }:
     mkDerivation {
       pname = "bot";
       version = "0.3";
       sha256 = "0crs1c6v298zqkjzkdgicigx22gvp9xv7bjlynbyckvx0lrvfmrc";
       buildDepends = [ arrows Stream ];
       homepage = "http://haskell.org/haskellwiki/Bot";
       description = "bots for functional reactive programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "botpp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "botpp";
       version = "0.1";
       sha256 = "0ir6h4zkj05na1gyf7h97s832jkphh33c9qjk2i290d0q9y8s4fw";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://haskell.org/haskellwiki/Lambdabot";
       description = "Build tool for Lambdabot";
       license = "GPL";
     }) {};

  "bound" = callPackage
    ({ mkDerivation, bifunctors, binary, bytes, cereal, comonad
     , doctest, filepath, hashable, hashable-extras, prelude-extras
     , profunctors, transformers, vector
     }:
     mkDerivation {
       pname = "bound";
       version = "1.0.4";
       sha256 = "17qnrjmqhx07cpzwd1z4lp2d42jx1lfxl6b86d65g4fd79miipky";
       buildDepends = [
         bifunctors binary bytes cereal comonad hashable hashable-extras
         prelude-extras profunctors transformers
       ];
       testDepends = [
         doctest filepath prelude-extras transformers vector
       ];
       homepage = "http://github.com/ekmett/bound/";
       description = "Making de Bruijn Succ Less";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bounded-tchan" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "bounded-tchan";
       version = "0.2.3";
       sha256 = "12c78dz3y1ly05hckd9pf0j4fpknk383qyb5yrhps4sc2m3i9k9w";
       buildDepends = [ stm ];
       description = "Bounded Transactional channels (queues)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "boundingboxes" = callPackage
    ({ mkDerivation, lens, linear, QuickCheck, random, test-framework
     , test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "boundingboxes";
       version = "0.2.2";
       sha256 = "09yj85ikpdgzbibpdk0mw9vcaklmqlbhwpm6knz595596wr25fcx";
       buildDepends = [ lens ];
       testDepends = [
         lens linear QuickCheck random test-framework
         test-framework-quickcheck2 test-framework-th
       ];
       homepage = "https://github.com/fumieval/boundingboxes";
       description = "A generic boundingbox for an arbitrary vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "boxes" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "boxes";
       version = "0.1.3";
       sha256 = "1sia3j0x7m68j6j9n7bi1l1yg56ivpkxd95l19xl5vpkg03qizkq";
       buildDepends = [ split ];
       description = "2D text pretty-printing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bpann" = callPackage
    ({ mkDerivation, random, split }:
     mkDerivation {
       pname = "bpann";
       version = "0.1.1";
       sha256 = "02c8xyzs4kz9cx7ql48kq5cxf686vvd5mqrprkikynif9r4dk7w8";
       buildDepends = [ random split ];
       description = "backpropagation neuronal network";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "brainfuck" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "brainfuck";
       version = "0.1";
       sha256 = "0lsw62g4ir8idjjadsdf46p8mqd88mysn0b499bk3x5l5js858z3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl ];
       description = "Brainfuck interpreter";
       license = "GPL";
     }) {};

  "brainfuck-monad" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "brainfuck-monad";
       version = "0.4.0";
       sha256 = "14534i070l6w886sjp91yp9bfc2is5z6y7wzm8b6w4j9l78pfgmz";
       description = "BrainFuck monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "brainfuck-tut" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "brainfuck-tut";
       version = "0.7.0.0";
       sha256 = "19x8mg15mscfrj1ppm32rzk8hhm4a2v498aq7sl3kkihrhp19x6j";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://gitlab.com/cpp.cabrera/brainfuck-tut";
       description = "A simple BF interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "breakout" = callPackage
    ({ mkDerivation, haskgame, mtl, SDL }:
     mkDerivation {
       pname = "breakout";
       version = "0.0.2";
       sha256 = "04qs2r944jbb2i11dqlvrav8iaanrgp15jri0mq6nf8ccjldh3wr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskgame mtl SDL ];
       homepage = "http://github.com/Peaker/breakout/tree/master";
       description = "A simple Breakout game implementation";
       license = "GPL";
     }) {};

  "brians-brain" = callPackage
    ({ mkDerivation, parallel, random, SDL }:
     mkDerivation {
       pname = "brians-brain";
       version = "0.0.1";
       sha256 = "0a9gzclnqb28mm5gf2iiiby30qa0pwlwz3c115sim4lxpq60qran";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parallel random SDL ];
       homepage = "http://github.com/willdonnelly/brians-brain";
       description = "A Haskell implementation of the Brian's Brain cellular automaton";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "brillig" = callPackage
    ({ mkDerivation, binary, cmdargs, filepath, ListZipper, text }:
     mkDerivation {
       pname = "brillig";
       version = "0.3.1";
       sha256 = "18gm24fd5ad6dgbqiwcs750rvq2v6lmclysd6acj2y8iybwcsg8n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary cmdargs filepath ListZipper text ];
       description = "Simple part of speech tagger";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "broadcast-chan" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "broadcast-chan";
       version = "0.1.0";
       sha256 = "1dympzv8gwh31hd0x6ap29rm83rf2klkj34as2xjrayfs9kbp87s";
       homepage = "https://github.com/merijn/broadcast-chan";
       description = "Broadcast channel type that avoids 0 reader space leaks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bsd-sysctl" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bsd-sysctl";
       version = "1.0.7";
       sha256 = "18qs5s6sq6696w7y23fq6pd303j5bfh94lw86dz4z9hgdlmrx36y";
       description = "Access to the BSD sysctl(3) interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bson" = callPackage
    ({ mkDerivation, binary, cryptohash, data-binary-ieee754, mtl
     , network, QuickCheck, test-framework, test-framework-quickcheck2
     , text, time
     }:
     mkDerivation {
       pname = "bson";
       version = "0.3.1";
       sha256 = "1kihsjws8sqb44gvilh1zxrqn2bml8gxq2bbanxqb7nr4ymwfkiv";
       buildDepends = [
         binary cryptohash data-binary-ieee754 mtl network text time
       ];
       testDepends = [
         binary cryptohash data-binary-ieee754 mtl network QuickCheck
         test-framework test-framework-quickcheck2 text time
       ];
       homepage = "http://github.com/mongodb-haskell/bson";
       description = "BSON documents are JSON-like objects with a standard binary encoding";
       license = "unknown";
     }) {};

  "bson-generic" = callPackage
    ({ mkDerivation, bson, text }:
     mkDerivation {
       pname = "bson-generic";
       version = "0.0.8";
       sha256 = "0r1gd6jxwzqana2b3i3xm8mx66lq4zkcir11c3v78g9fjyyhy7dh";
       buildDepends = [ bson text ];
       description = "Generic functionality for BSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bson-generics" = callPackage
    ({ mkDerivation, bson }:
     mkDerivation {
       pname = "bson-generics";
       version = "0.0.1";
       sha256 = "03ifgmifk0dx6fzws1qlx3c1nslrkvwman5g3c4iag842bl03gxp";
       buildDepends = [ bson ];
       description = "Generics functionality for BSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bson-mapping" = callPackage
    ({ mkDerivation, bson, compact-string-fix, th-lift }:
     mkDerivation {
       pname = "bson-mapping";
       version = "0.1.4.1";
       sha256 = "0k91rkyh7lmq2iw2kmkl3lbzx4c46yzb2fp9pkag8yd05na2k9za";
       buildDepends = [ bson compact-string-fix th-lift ];
       description = "Mapping between BSON and algebraic data types";
       license = "unknown";
     }) {};

  "bspack" = callPackage
    ({ mkDerivation, mtl, tasty, tasty-hunit, tasty-quickcheck }:
     mkDerivation {
       pname = "bspack";
       version = "0.0.4";
       sha256 = "0nzw1cs3nxb55yj3sy5afr6kycbm7xk26xpl0gvysgrd6bs0p8pb";
       testDepends = [ mtl tasty tasty-hunit tasty-quickcheck ];
       homepage = "https://github.com/NicolasDP/hs-bspack";
       description = "A simple and fast bytestring packer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bsparse" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bsparse";
       version = "0.0.5";
       sha256 = "12wn8jlqkb9d9vpdbwc3m288cgnr15cq4wv5fxlp7f10p3y42l2a";
       homepage = "https://github.com/vincenthz/hs-bsparse";
       description = "A simple unassuming parser for bytestring";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "btree-concurrent" = callPackage
    ({ mkDerivation, base64-bytestring, cereal, filepath, hashable, mtl
     , QuickCheck, random, snappy, stm, time
     }:
     mkDerivation {
       pname = "btree-concurrent";
       version = "0.1.5";
       sha256 = "1xgw3ki3vypyxxiyzfjajjx1vzavyn1v9445cgbqwrr0n0wpkqm6";
       buildDepends = [
         base64-bytestring cereal filepath hashable mtl random snappy stm
         time
       ];
       testDepends = [
         base64-bytestring cereal filepath hashable mtl QuickCheck random
         snappy stm time
       ];
       homepage = "https://github.com/brinchj/btree-concurrent";
       description = "A backend agnostic, concurrent BTree";
       license = "LGPL";
     }) {};

  "btrfs" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "btrfs";
       version = "0.1.1.1";
       sha256 = "1k1b8x0p0q43872c4x5dma2hs9dzkvr7n2dnb3w29ha7f24k8g8z";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ time ];
       homepage = "https://github.com/redneb/hs-btrfs";
       description = "Bindings to the btrfs API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bugzilla" = callPackage
    ({ mkDerivation, aeson, blaze-builder, connection, data-default
     , http-conduit, http-types, iso8601-time, resourcet, text, time
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "bugzilla";
       version = "0.2.1.1";
       sha256 = "19ayjkaniksivm99lgl7bfjabig00y0gd3w9ssabksg7rfwajc5d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson blaze-builder connection data-default http-conduit http-types
         iso8601-time resourcet text time transformers unordered-containers
         vector
       ];
       homepage = "https://github.com/sethfowler/hsbugzilla";
       description = "A Haskell interface to the Bugzilla native REST API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "buildable" = callPackage
    ({ mkDerivation, dlist, text }:
     mkDerivation {
       pname = "buildable";
       version = "0.1.0.2";
       sha256 = "1p9xi5ms7rxgzn5jxv5nv8bynyfb9ll952k0j7di5s7zbga8v1pg";
       buildDepends = [ dlist text ];
       description = "Typeclass for builders of linear data structures";
       license = stdenv.lib.licenses.mit;
     }) {};

  "buildbox" = callPackage
    ({ mkDerivation, mtl, random, stm, time }:
     mkDerivation {
       pname = "buildbox";
       version = "2.1.4.3";
       sha256 = "01zhhw9fqijzn63z63bgg1l2p3wjiarfrsnids18n4vam4yjyvn2";
       buildDepends = [ mtl random stm time ];
       homepage = "http://code.ouroborus.net/buildbox";
       description = "Rehackable components for writing buildbots and test harnesses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "buildbox-tools" = callPackage
    ({ mkDerivation, buildbox, parseargs }:
     mkDerivation {
       pname = "buildbox-tools";
       version = "1.5.3.1";
       sha256 = "0j1fsdmaxnl1zxgvxilznw5jfaaphij6wnhllb64f59kvhpqmy4f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ buildbox parseargs ];
       homepage = "http://code.ouroborus.net/buildbox";
       description = "Tools for working with buildbox benchmark result files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "buildwrapper" = callPackage
    ({ mkDerivation, aeson, attoparsec, Cabal, cmdargs, cpphs, deepseq
     , dynamic-cabal, filepath, ghc-paths, ghc-pkg-lib, haskell-src-exts
     , HTF, HUnit, mtl, regex-tdfa, syb, text, time, transformers
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "buildwrapper";
       version = "0.8.11";
       sha256 = "1jnjdqxhwclr3zs7vqd44gjbl208fb46a4sdwazmz6sr0f5fz8pr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec Cabal cmdargs cpphs deepseq dynamic-cabal filepath
         ghc-paths ghc-pkg-lib haskell-src-exts mtl regex-tdfa syb text time
         transformers unordered-containers utf8-string vector
       ];
       testDepends = [
         aeson attoparsec Cabal dynamic-cabal filepath ghc-pkg-lib HTF HUnit
         mtl text time transformers unordered-containers vector
       ];
       homepage = "https://github.com/JPMoresmau/BuildWrapper";
       description = "A library and an executable that provide an easy API for a Haskell IDE";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bullet" = callPackage
    ({ mkDerivation, bullet, c2hs, vect }:
     mkDerivation {
       pname = "bullet";
       version = "0.2.4";
       sha256 = "0fksxkp6xq0q88g21b917qrg6pzzr1a00w5jjh45f4f9b3smibgn";
       buildDepends = [ vect ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ bullet ];
       homepage = "http://www.haskell.org/haskellwiki/Bullet";
       description = "A wrapper for the Bullet physics engine";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) bullet; };

  "bumper" = callPackage
    ({ mkDerivation, Cabal, fclabels, regex-compat, split, strict }:
     mkDerivation {
       pname = "bumper";
       version = "0.6.0.2";
       sha256 = "0j8g0dnk3flplkzhaqwbq8qccd89lm8n27qjr3yjz5sl5l6ncqns";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal fclabels regex-compat split strict ];
       homepage = "http://github.com/silkapp/bumper";
       description = "Automatically bump package versions, also transitively";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "burst-detection" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "burst-detection";
       version = "1.0";
       sha256 = "1pgrqjdc4n97s7jsb9ddmjkw3qa4c28p4fp1ajyx5bfxdll44dwm";
       buildDepends = [ deepseq ];
       homepage = "http://parsci.com/";
       description = "Burst detection algorithms";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "bus-pirate" = callPackage
    ({ mkDerivation, either, errors, serialport, transformers }:
     mkDerivation {
       pname = "bus-pirate";
       version = "0.6.1";
       sha256 = "179mmjc7admn6vqfdyqlnnj19vg4lf89ld3ma1i3zv730pl7dq6j";
       buildDepends = [ either errors serialport transformers ];
       homepage = "http://www.github.com/bgamari/bus-pirate";
       description = "Haskell interface to the Bus Pirate binary interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "buster" = callPackage
    ({ mkDerivation, binary, dataenc, mtl, parsec, time }:
     mkDerivation {
       pname = "buster";
       version = "2.51";
       sha256 = "12h77sa7z5ba6n2hx5kag51lp7q7hdmsd1cb006l7i46cq5b5zzg";
       buildDepends = [ binary dataenc mtl parsec time ];
       homepage = "http://vis.renci.org/jeff/buster";
       description = "Almost but not quite entirely unlike FRP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "buster-gtk" = callPackage
    ({ mkDerivation, binary, buster, dataenc, gtk, mtl, parsec, time }:
     mkDerivation {
       pname = "buster-gtk";
       version = "2.0";
       sha256 = "1ajmwdrx7cq5dh7zj0viipnhas0p910ax1yb37ina4nddrpx0gd1";
       buildDepends = [ binary buster dataenc gtk mtl parsec time ];
       homepage = "http://vis.renci.org/jeff/buster";
       description = "Almost but not quite entirely unlike FRP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "buster-network" = callPackage
    ({ mkDerivation, binary, buster, dataenc, haxr, HTTP, mtl, network
     , time
     }:
     mkDerivation {
       pname = "buster-network";
       version = "1.2";
       sha256 = "17nzw5ycdrw3f1cgwcg1vh1jk80528nl7ksmbmxg2mgndc89kg3i";
       buildDepends = [
         binary buster dataenc haxr HTTP mtl network time
       ];
       homepage = "http://vis.renci.org/jeff/buster";
       description = "Almost but not quite entirely unlike FRP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bustle" = callPackage
    ({ mkDerivation, cairo, dbus, filepath, glib, gtk, hgettext, HUnit
     , mtl, pango, parsec, pcap, QuickCheck, setlocale, test-framework
     , test-framework-hunit, text, time
     }:
     mkDerivation {
       pname = "bustle";
       version = "0.4.7";
       sha256 = "1fc8y2incvci9ib9gkbr03shjj8fwxsb5q34phwycmqiaq3j5c88";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo dbus filepath glib gtk hgettext mtl pango parsec pcap
         setlocale text time
       ];
       testDepends = [
         cairo dbus filepath gtk hgettext HUnit mtl pango pcap QuickCheck
         setlocale test-framework test-framework-hunit text
       ];
       pkgconfigDepends = [ glib ];
       description = "Draw pretty sequence diagrams of D-Bus traffic";
       license = "unknown";
     }) { inherit (pkgs) glib; };

  "bv" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bv";
       version = "0.3.0";
       sha256 = "0r2bp39ilwq3zx38spbx5qrpccwm255ax2skab3i7jxjmf7yj025";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://bitbucket.org/iago/bv-haskell";
       description = "Bit-vector arithmetic library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytable" = callPackage
    ({ mkDerivation, word24 }:
     mkDerivation {
       pname = "bytable";
       version = "0.1.0.0";
       sha256 = "0x4yh9li0pi2r9pjih000a143iw9kaz7r4z72510kv6kzkkcr9mn";
       buildDepends = [ word24 ];
       description = "data from/to ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "byteable" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "byteable";
       version = "0.1.1";
       sha256 = "1qizg0kxxjqnd3cbrjhhidk5pbbciz0pb3z5kzikjjxnnnhk8fr4";
       homepage = "http://github.com/vincenthz/hs-byteable";
       description = "Type class for sequence of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytedump" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bytedump";
       version = "1.0";
       sha256 = "1pf01mna3isx3i7m50yz3pw5ygz5sg8i8pshjb3yw8q41w2ba5xf";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/vincenthz/hs-bytedump";
       description = "Flexible byte dump helpers for human readers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "byteorder" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "byteorder";
       version = "1.0.4";
       sha256 = "06995paxbxk8lldvarqpb3ygcjbg4v8dk4scib1rjzwlhssvn85x";
       homepage = "http://community.haskell.org/~aslatter/code/byteorder";
       description = "Exposes the native endianness or byte ordering of the system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytes" = callPackage
    ({ mkDerivation, binary, cereal, doctest, filepath, mtl, text, time
     , transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "bytes";
       version = "0.14.1.2";
       sha256 = "1v1nnp1m5i4bfr0fshbps163v6yn6var53p0vcvav6g4w5wffd7d";
       buildDepends = [
         binary cereal mtl text time transformers transformers-compat void
       ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/analytics/bytes";
       description = "Sharing code for serialization between binary and cereal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring" = callPackage
    ({ mkDerivation, byteorder, deepseq, dlist, HUnit, mtl, QuickCheck
     , random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "bytestring";
       version = "0.10.4.1";
       sha256 = "1zldh1pifmyrn7m3di6xz9kw9jfm0syr2fpqh1lwfics9il4cjdg";
       buildDepends = [ deepseq ];
       testDepends = [
         byteorder deepseq dlist HUnit mtl QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell/bytestring";
       description = "Fast, compact, strict and lazy byte strings with a list interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-arbitrary" = callPackage
    ({ mkDerivation, cryptohash, QuickCheck }:
     mkDerivation {
       pname = "bytestring-arbitrary";
       version = "0.0.3";
       sha256 = "1mxxgdak43wz7vzl2hbff9an7krqz4rhld9h173vvq6w2n8jnbi7";
       buildDepends = [ cryptohash QuickCheck ];
       testDepends = [ cryptohash QuickCheck ];
       homepage = "https://github.com/tsuraan/bytestring-arbitrary";
       description = "Arbitrary instances for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-builder" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "bytestring-builder";
       version = "0.10.4.0.1";
       sha256 = "0iqh6k6dvl75z1m0i1grkr4w5ynxrd6qd7ynjl0bkd39nbwfay90";
       buildDepends = [ deepseq ];
       description = "The new bytestring builder, packaged outside of GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-class" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "bytestring-class";
       version = "0.0.0.1";
       sha256 = "1z65br00rplhniaw9fg3phpxwf13acgycn5hnhyjfcyr962xp03x";
       buildDepends = [ utf8-string ];
       description = "Classes for automatic conversion to and from strict and lazy bytestrings. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-conversion" = callPackage
    ({ mkDerivation, attoparsec, case-insensitive, double-conversion
     , QuickCheck, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "bytestring-conversion";
       version = "0.3.0";
       sha256 = "0wc5k0cis3hkd5hq875sbj39bf9c0gayyjmg638pnbc8x6v44fqm";
       buildDepends = [
         attoparsec case-insensitive double-conversion text
       ];
       testDepends = [ QuickCheck tasty tasty-quickcheck ];
       homepage = "https://github.com/twittner/bytestring-conversion/";
       description = "Type-classes to convert values to and from ByteString";
       license = "unknown";
     }) {};

  "bytestring-csv" = callPackage
    ({ mkDerivation, dlist }:
     mkDerivation {
       pname = "bytestring-csv";
       version = "0.1.2";
       sha256 = "0x7qklb36jwxry1ih5x3jw7s861vlvd5g9h7yn7b2x64c0phyj0r";
       buildDepends = [ dlist ];
       homepage = "http://code.haskell.org/~dons/code/bytestring-csv";
       description = "Parse CSV formatted data efficiently";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-delta" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bytestring-delta";
       version = "0.1.0.1";
       sha256 = "0iq59if3in08ssashk80wvh6yh1yr115387fi9kj952v6bzvzw1q";
       homepage = "http://github.com/joeyadams/haskell-bytestring-delta";
       description = "Simple, fast binary diff/patch";
       license = stdenv.lib.licenses.mit;
     }) {};

  "bytestring-from" = callPackage
    ({ mkDerivation, attoparsec, QuickCheck, tasty, tasty-quickcheck
     , text
     }:
     mkDerivation {
       pname = "bytestring-from";
       version = "0.3";
       sha256 = "030jrpri4qmv8lr8ahgkbl3gghv2c00lfigx2wbrrv9hz74gkpn4";
       buildDepends = [ attoparsec text ];
       testDepends = [ QuickCheck tasty tasty-quickcheck ];
       description = "A type-class to convert values from ByteString";
       license = "unknown";
     }) {};

  "bytestring-handle" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "bytestring-handle";
       version = "0.1.0.2";
       sha256 = "1nnqqcl9zp14q49jwcxhbm85hxk48higpr63qs675802sz0fs01v";
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://hub.darcs.net/ganesh/bytestring-handle";
       description = "ByteString-backed Handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-lexing" = callPackage
    ({ mkDerivation, alex }:
     mkDerivation {
       pname = "bytestring-lexing";
       version = "0.4.3.2";
       sha256 = "09ymg1n21668wn4harxg0cqlz98fz990bangpy99w2z7d6cwbc05";
       buildTools = [ alex ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Parse and produce literals efficiently from strict or lazy bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-mmap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bytestring-mmap";
       version = "0.2.2";
       sha256 = "1bv9xf4cpph1cbdwv6rbmq8ppi5wjpgd97lwln5l9ky5rvnaxg3v";
       homepage = "http://code.haskell.org/~dons/code/bytestring-mmap/";
       description = "mmap support for strict ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-nums" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bytestring-nums";
       version = "0.3.6";
       sha256 = "1kg777gpqj05h5bj0637yky64bdx7x77hm7nq2rhpw4i1mh9gjmx";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/solidsnack/bytestring-nums";
       description = "Parse numeric literals from ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-plain" = callPackage
    ({ mkDerivation, deepseq, hashable }:
     mkDerivation {
       pname = "bytestring-plain";
       version = "0.1.0.1";
       sha256 = "057f9kyvj7cf2a53f6wqah0bw9cp67s7y3b6l6y78m24ipx8c56a";
       buildDepends = [ deepseq hashable ];
       homepage = "https://github.com/hvr/bytestring-plain";
       description = "Plain byte strings ('ForeignPtr'-less 'ByteString's)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-progress" = callPackage
    ({ mkDerivation, terminal-progress-bar, time }:
     mkDerivation {
       pname = "bytestring-progress";
       version = "1.0.3";
       sha256 = "1v9cl7d4fcchbdrpbgjj4ilg79cj241vzijiifdsgkq30ikv2yxs";
       buildDepends = [ terminal-progress-bar time ];
       homepage = "http://github.com/acw/bytestring-progress";
       description = "A library for tracking the consumption of a lazy ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-rematch" = callPackage
    ({ mkDerivation, hspec, HUnit, rematch }:
     mkDerivation {
       pname = "bytestring-rematch";
       version = "0.1.0.0";
       sha256 = "01yk1pmsp6c89z4lf6p37g4jqbqz1d93g61gn4i99p8dijbg0pbh";
       testDepends = [ hspec HUnit rematch ];
       homepage = "github.com/tcrayford/rematch";
       description = "Rematch support for ByteString";
       license = stdenv.lib.licenses.mit;
     }) {};

  "bytestring-show" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "bytestring-show";
       version = "0.3.5.6";
       sha256 = "04h81a0bh2fvnkby1qafnydb29gzk6d4d311i2lbn7lm2vyjw919";
       buildDepends = [ binary ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "Efficient conversion of values into readable byte strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestring-trie" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "bytestring-trie";
       version = "0.2.4";
       sha256 = "1fv3xh52hqhzdbq78c3lrgx5vd49cabwp9ww5ki1888zlq29pyck";
       buildDepends = [ binary ];
       homepage = "http://code.haskell.org/~wren/";
       description = "An efficient finite map from (byte)strings to values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestringparser" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bytestringparser";
       version = "0.3";
       sha256 = "1g99vbp14ki563lb41y1fxlgvdmrmq1y0xsk0ia1m438rdpnh2qd";
       description = "Combinator parsing with Data.ByteString.Lazy";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestringparser-temporary" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bytestringparser-temporary";
       version = "0.4.1";
       sha256 = "019axq65hmgmszkc1lyyyy8rpv5xkjbf1pmgz1bz0hnc8lgv58pd";
       description = "Combinator parsing with Data.ByteString.Lazy";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bytestringreadp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "bytestringreadp";
       version = "0.2";
       sha256 = "07hx3072zg9y3kj6h99yl8fd3n115x4z8z411c1cpx1hj292d57f";
       description = "A ReadP style parser library for ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bzlib" = callPackage
    ({ mkDerivation, bzip2 }:
     mkDerivation {
       pname = "bzlib";
       version = "0.5.0.4";
       sha256 = "1vf37y7wknrihf7hipd6lihkmn7sszbgfb325my52yzbjs3baccd";
       extraLibraries = [ bzip2 ];
       description = "Compression and decompression in the bzip2 format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "bzlib-conduit" = callPackage
    ({ mkDerivation, bindings-DSL, bzip2, conduit, conduit-extra
     , data-default, hspec, mtl, QuickCheck, random, resourcet
     }:
     mkDerivation {
       pname = "bzlib-conduit";
       version = "0.2.1.3";
       sha256 = "0jqg38zvxc0fpp74az0vm8klb88zwy076ncwzgq2zr0nrmr5cghm";
       buildDepends = [
         bindings-DSL conduit conduit-extra data-default mtl resourcet
       ];
       testDepends = [
         conduit conduit-extra hspec QuickCheck random resourcet
       ];
       extraLibraries = [ bzip2 ];
       homepage = "https://github.com/snoyberg/bzlib-conduit";
       description = "Streaming compression/decompression via conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "c-dsl" = callPackage
    ({ mkDerivation, language-c }:
     mkDerivation {
       pname = "c-dsl";
       version = "0.3.1";
       sha256 = "04hj3d26rp7ibv15n48y4xkfld3nnh6dqn8shxvw1h546z1316pw";
       buildDepends = [ language-c ];
       description = "A higher level DSL on top of language-c";
       license = stdenv.lib.licenses.mit;
     }) {};

  "c-io" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "c-io";
       version = "0.1.0";
       sha256 = "1za4wcrjrxqk8yqy1bddzxw8xxx0vlxyy31dj1glb5azx6qh7qp2";
       description = "C IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "c-storable-deriving" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "c-storable-deriving";
       version = "0.1";
       sha256 = "0ym6wccjvdlnfl1i9fhy4rqd8sxbdwm8vx3z3y3ga8a2ackingwv";
       homepage = "https://github.com/maurer/c-storable-deriving";
       description = "Generate C-like storable instances from datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "c0check" = callPackage
    ({ mkDerivation, c0parser }:
     mkDerivation {
       pname = "c0check";
       version = "0.2";
       sha256 = "0alzv8cdv5q6inhgp5zpms24460iqbgmwbc3l1fmf31p6jj802im";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ c0parser ];
       description = "Simple C0 Syntax Check";
       license = "GPL";
     }) {};

  "c0parser" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "c0parser";
       version = "0.2";
       sha256 = "0i6bsi30dkz51044r92gcgqr07bzbjfzgbr1z7p078j4016zb7cw";
       buildDepends = [ parsec ];
       description = "Simple C0 Parser";
       license = "GPL";
     }) {};

  "c10k" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "c10k";
       version = "0.5.0";
       sha256 = "1i62ilk95p1vjyk7gl1fv7lwq6yk3ysfn3v1bbyfpabf97gzr0d9";
       buildDepends = [ network ];
       homepage = "http://github.com/kazu-yamamoto/c10k";
       description = "C10k server library using prefork";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "c2hs" = callPackage
    ({ mkDerivation, dlist, filepath, HUnit, language-c, shelly
     , test-framework, test-framework-hunit, text, transformers
     }:
     mkDerivation {
       pname = "c2hs";
       version = "0.20.1";
       sha256 = "1w2w9zxirzjd5lniwqakq59glgsh4mw3565x2l9qrin0bfjxkn3h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ dlist filepath language-c ];
       testDepends = [
         filepath HUnit shelly test-framework test-framework-hunit text
         transformers
       ];
       homepage = "https://github.com/haskell/c2hs";
       description = "C->Haskell FFI tool that gives some cross-language type safety";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "c2hsc" = callPackage
    ({ mkDerivation, cmdargs, filepath, HStringTemplate, language-c
     , mtl, split, transformers
     }:
     mkDerivation {
       pname = "c2hsc";
       version = "0.6.5";
       sha256 = "0c5hzi4nw9n3ir17swbwymkymnpiw958z8r2hw6656ijwqkxvzgd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs filepath HStringTemplate language-c mtl split transformers
       ];
       homepage = "https://github.com/jwiegley/c2hsc";
       description = "Convert C API header files to .hsc and .hsc.helper.c files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cab" = callPackage
    ({ mkDerivation, attoparsec, Cabal, conduit, conduit-extra
     , filepath, resourcet
     }:
     mkDerivation {
       pname = "cab";
       version = "0.2.14";
       sha256 = "109rjlxsfwsqqa85a4yl5wk4bglpk0wfyp2ggnnz8ria3mhkkdpr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec Cabal conduit conduit-extra filepath resourcet
       ];
       homepage = "http://www.mew.org/~kazu/proj/cab/";
       description = "A maintenance command of Haskell cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-audit" = callPackage
    ({ mkDerivation, Cabal, filepath, HTTP, optparse-applicative }:
     mkDerivation {
       pname = "cabal-audit";
       version = "0.3.0.0";
       sha256 = "02cfwka49fd399drv6rxb3hbxflpv6s1xfa7l759ihkp19d6ph9v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath HTTP optparse-applicative ];
       homepage = "https://github.com/joelteon/cabal-audit.git";
       description = "Check how up-to-date your .cabal dependencies are.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cabal-bounds" = callPackage
    ({ mkDerivation, Cabal, cabal-lenses, cabalInstall, cmdargs, either
     , filepath, Glob, lens, strict, tasty, tasty-golden, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "cabal-bounds";
       version = "0.8.9";
       sha256 = "1vprf6nsw3qnppqxcm5jwvwxyalkaq364xcmig54ma47rsk23nzk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal cabal-lenses cmdargs either lens strict transformers
         unordered-containers
       ];
       testDepends = [ filepath Glob tasty tasty-golden ];
       buildTools = [ cabalInstall ];
       description = "A command line program for managing the bounds/versions of the dependencies in a cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-cargs" = callPackage
    ({ mkDerivation, Cabal, cabal-lenses, cmdargs, either, filepath
     , lens, strict, system-fileio, system-filepath, tasty, tasty-golden
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "cabal-cargs";
       version = "0.7.5";
       sha256 = "0z17s4w9wlmdqbzh0c1jwqfp4d6599hqv0r4dzm9djb0x8vj327k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal cabal-lenses cmdargs either lens strict system-fileio
         system-filepath text transformers unordered-containers
       ];
       testDepends = [ filepath tasty tasty-golden ];
       description = "A command line program for extracting compiler arguments from a cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-constraints" = callPackage
    ({ mkDerivation, Cabal, optparse-applicative }:
     mkDerivation {
       pname = "cabal-constraints";
       version = "0.0.0.1";
       sha256 = "06k43il8yiwbj6x3fhw64xdwq8d8qsmvvd1ycgml7vsry6cz6pdh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal optparse-applicative ];
       homepage = "https://github.com/benarmston/cabal-constraints";
       description = "Repeatable builds for cabalized Haskell projects";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cabal-db" = callPackage
    ({ mkDerivation, ansi-wl-pprint, Cabal, filepath, mtl
     , optparse-applicative, tar, utf8-string
     }:
     mkDerivation {
       pname = "cabal-db";
       version = "0.1.11";
       sha256 = "0kxj7xf0r1waxxi25g46a2wj43dcd3b1lkdn20l4r7m3r44y1nd7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint Cabal filepath mtl optparse-applicative tar
         utf8-string
       ];
       homepage = "http://github.com/vincenthz/cabal-db";
       description = "query tools for the local cabal database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-debian" = callPackage
    ({ mkDerivation, Cabal, data-lens, data-lens-template, debian
     , deepseq, Diff, filepath, hsemail, HUnit, memoize, mtl, parsec
     , prettyclass, pureMD5, regex-tdfa, set-extra, syb, text, Unixutils
     , utf8-string
     }:
     mkDerivation {
       pname = "cabal-debian";
       version = "4.17.5";
       sha256 = "04f3i432wlf47xfwfn40y9vz1fyz2gk31vlwx8qvn39b1s3fz563";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal data-lens data-lens-template debian deepseq Diff filepath
         hsemail HUnit memoize mtl parsec prettyclass pureMD5 regex-tdfa
         set-extra syb text Unixutils utf8-string
       ];
       homepage = "https://github.com/ddssff/cabal-debian";
       description = "Create a debianization for a cabal package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-dependency-licenses" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "cabal-dependency-licenses";
       version = "0.1.0.1";
       sha256 = "1zccbhv7ysx9v6k0m2i08mrrx0d16x00cpkq7k5r765g9yjmn80k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://github.com/jaspervdj/cabal-dependency-licenses";
       description = "Compose a list of a project's transitive dependencies with their licenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-dev" = callPackage
    ({ mkDerivation, Cabal, cabal-install, filepath, HTTP, mtl, network
     , setenv, tar, transformers, zlib
     }:
     mkDerivation {
       pname = "cabal-dev";
       version = "0.9.2";
       sha256 = "1372bpn8s7d7nm01ggp3m98ldrynidbchk3p14yrjysvxwr3l6q8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal filepath HTTP mtl network setenv tar transformers zlib
       ];
       buildTools = [ cabal-install ];
       homepage = "http://github.com/creswick/cabal-dev";
       description = "Manage sandboxed Haskell build environments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-dir" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "cabal-dir";
       version = "0.1.0.4";
       sha256 = "0kbq549bl18f1cd2q4w7nngsvnvgc3366xr7y37x5sw80rq5w5wg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       description = "show dist dir of 'cabal copy/install'";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-file-th" = callPackage
    ({ mkDerivation, Cabal }:
     mkDerivation {
       pname = "cabal-file-th";
       version = "0.2.3";
       sha256 = "0kawvb5n56rkq4453l6pia3wrr6jvvdwkghi6i176n1gm2zf2ri8";
       editedCabalFile = "0zp3w7rnyh81jwcfr7zlj66z9lw4y5rrprg5n65618imlgsnrg2h";
       buildDepends = [ Cabal ];
       homepage = "http://github.com/nkpart/cabal-file-th";
       description = "Template Haskell expressions for reading fields from a project's cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-ghci" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "cabal-ghci";
       version = "0.3";
       sha256 = "1x7fpvvmr2mq7l960wgsijhyrdaiq3lnnl3z6drklc5p73pms8w6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://github.com/atnnn/cabal-ghci";
       description = "Set up ghci with options taken from a .cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-graphdeps" = callPackage
    ({ mkDerivation, options, parsec, split, temporary }:
     mkDerivation {
       pname = "cabal-graphdeps";
       version = "0.1.2";
       sha256 = "105q051bna299pf1ka0r9bmqsbpzcg9vmbi5ynmalancgjpnm29a";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ options parsec split temporary ];
       homepage = "https://john-millikin.com/software/cabal-graphdeps/";
       description = "Generate graphs of install-time Cabal dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cabal-install" = callPackage
    ({ mkDerivation, Cabal, filepath, HTTP, HUnit, mtl, network
     , QuickCheck, random, stm, test-framework, test-framework-hunit
     , test-framework-quickcheck2, time, zlib
     }:
     mkDerivation {
       pname = "cabal-install";
       version = "1.20.0.3";
       sha256 = "050b9dc4khfc1fs283p1635zni25z4b55gi5ffwvg4mfpkrmdgfj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal filepath HTTP mtl network random stm time zlib
       ];
       testDepends = [
         Cabal filepath HTTP HUnit mtl network QuickCheck stm test-framework
         test-framework-hunit test-framework-quickcheck2 time zlib
       ];
       postInstall = ''
         mkdir $out/etc
         mv bash-completion $out/etc/bash_completion.d
       '';
       homepage = "http://www.haskell.org/cabal/";
       description = "The command-line interface for Cabal and Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-install-bundle" = callPackage
    ({ mkDerivation, Cabal, filepath, time, zlib }:
     mkDerivation {
       pname = "cabal-install-bundle";
       version = "1.18.0.2.1";
       sha256 = "0gsghmpn38idqivba8islfy5y1xhnhyjdyahdg7h7isc9kvq6isq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath time ];
       extraLibraries = [ zlib ];
       description = "The (bundled) command-line interface for Cabal and Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) zlib; };

  "cabal-install-ghc72" = callPackage
    ({ mkDerivation, Cabal, filepath, HTTP, network, random, time, zlib
     }:
     mkDerivation {
       pname = "cabal-install-ghc72";
       version = "0.10.4";
       sha256 = "1fgy79w5bzzhqpnwgfd9jis9w6ix5wwdbwr2g556rxvmqsgl7mmg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath HTTP network random time zlib ];
       homepage = "http://www.haskell.org/cabal/";
       description = "Temporary version of cabal-install for ghc-7.2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-install-ghc74" = callPackage
    ({ mkDerivation, Cabal, filepath, HTTP, network, random, time, zlib
     }:
     mkDerivation {
       pname = "cabal-install-ghc74";
       version = "0.10.4";
       sha256 = "1ssk5h0hlv3aivzsr0iv90g683qkqmppc7glivhwfm6q1vkv9gmd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath HTTP network random time zlib ];
       homepage = "http://www.haskell.org/cabal/";
       description = "Temporary version of cabal-install for ghc-7.4";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-lenses" = callPackage
    ({ mkDerivation, Cabal, lens, unordered-containers }:
     mkDerivation {
       pname = "cabal-lenses";
       version = "0.4.2";
       sha256 = "0vsicvk979qznm3b174r6d5wkkyhpqx8gxjs5jw9na2jhimzjcjf";
       buildDepends = [ Cabal lens unordered-containers ];
       description = "Lenses and traversals for the Cabal library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-macosx" = callPackage
    ({ mkDerivation, Cabal, fgl, filepath, parsec, text }:
     mkDerivation {
       pname = "cabal-macosx";
       version = "0.2.3";
       sha256 = "0rvmb6lx2alr7f0v7nbv48xzg7wp4nrn03hdkjc4a4c97rai14i9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal fgl filepath parsec text ];
       homepage = "http://github.com/gimbo/cabal-macosx";
       description = "Cabal support for creating Mac OSX application bundles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-meta" = callPackage
    ({ mkDerivation, hspec, shelly, system-fileio, system-filepath
     , text
     }:
     mkDerivation {
       pname = "cabal-meta";
       version = "0.4.1.2";
       sha256 = "17ln9j0n9rb0kbnp37fi9yaf932dacrdmf3jrp301r886kh2a7kk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ shelly system-fileio system-filepath text ];
       testDepends = [ hspec shelly system-filepath text ];
       homepage = "http://www.yesodweb.com/";
       description = "build multiple packages at once";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-nirvana" = callPackage
    ({ mkDerivation, HTTP, tar }:
     mkDerivation {
       pname = "cabal-nirvana";
       version = "0.2.2.1";
       sha256 = "1clwhlqm1k9km29i9b2c2ys59nfspsffrixr2sz824gnd415x3lk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP tar ];
       homepage = "http://github.com/snoyberg/cabal-nirvana";
       description = "Avoid Cabal dependency hell by constraining to known good versions. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-progdeps" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "cabal-progdeps";
       version = "1.0";
       sha256 = "0fz2hpm8fd49jhqdc9cwzvdq34b64zwn4ln8n77hxqx8rfw8zvif";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       description = "Show dependencies of program being built in current directory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-query" = callPackage
    ({ mkDerivation, Cabal, derive, MissingH, mtl, tar, uniplate }:
     mkDerivation {
       pname = "cabal-query";
       version = "0.1";
       sha256 = "0j4n48ngwins8bl7g3mazwmbwgyjpp17mi77c9j1klfgx7fam6wa";
       buildDepends = [ Cabal derive MissingH mtl tar uniplate ];
       homepage = "http://github.com/explicitcall/cabal-query";
       description = "Helpers for quering .cabal files or hackageDB's 00-index.tar";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-rpm" = callPackage
    ({ mkDerivation, Cabal, filepath, time }:
     mkDerivation {
       pname = "cabal-rpm";
       version = "0.9.1";
       sha256 = "190yfxnwfdyiq647j7c5mzpazamhnndpa48qwnjwdhpmviyf1i76";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath time ];
       homepage = "https://github.com/juhp/cabal-rpm";
       description = "RPM packaging tool for Haskell Cabal-based packages";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "cabal-scripts" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cabal-scripts";
       version = "0.1";
       sha256 = "17wpmqkgr55wj5qzb7ph3fvifz4bzzhk98ypcmrx5q0caq1crdq8";
       description = "Shell scripts for support of Cabal maintenance";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-setup" = callPackage
    ({ mkDerivation, Cabal }:
     mkDerivation {
       pname = "cabal-setup";
       version = "1.2.1";
       sha256 = "0k1lnixkmgdjn8d2akhj60133brs424y0cwwzwraq7awx03y72bm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal ];
       homepage = "http://www.haskell.org/cabal/";
       description = "The user interface for building and installing Cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-sign" = callPackage
    ({ mkDerivation, cereal, filepath, tar, zlib }:
     mkDerivation {
       pname = "cabal-sign";
       version = "0.4.1.0";
       sha256 = "1b8yr4k0mapysgh96dxabpzxznd65v8yrcba0jk6wda3mwlm1nqk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cereal filepath tar zlib ];
       description = "Sign and verify Cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-sort" = callPackage
    ({ mkDerivation, Cabal, explicit-exception, fgl, filepath
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "cabal-sort";
       version = "0.0.5.1";
       sha256 = "1991k6p8vvagnm8wpmzy84088whkqls1q4rdgir4f2m7r0wxl414";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal explicit-exception fgl filepath transformers utility-ht
       ];
       description = "Topologically sort cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-src" = callPackage
    ({ mkDerivation, conduit, conduit-extra, filepath, http-conduit
     , http-types, network, resourcet, shelly, system-fileio
     , system-filepath, tar, text, transformers
     }:
     mkDerivation {
       pname = "cabal-src";
       version = "0.2.3";
       sha256 = "0qah1jw5nki9w2vrdgvsv4acl7ny0qawzwy1rav4gmckkwmw7sa0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         conduit conduit-extra filepath http-conduit http-types network
         resourcet shelly system-fileio system-filepath tar text
         transformers
       ];
       homepage = "https://github.com/yesodweb/cabal-src";
       description = "Alternative install procedure to avoid the diamond dependency issue";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-test" = callPackage
    ({ mkDerivation, Cabal, filepath, pqc, QuickCheck }:
     mkDerivation {
       pname = "cabal-test";
       version = "0.1";
       sha256 = "11883q7zjy3l5qla5rvbmflm19kalvzqx7n1hprmiizr1kczh6ax";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath pqc QuickCheck ];
       description = "Automated test tool for cabal projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-test-quickcheck" = callPackage
    ({ mkDerivation, Cabal, QuickCheck }:
     mkDerivation {
       pname = "cabal-test-quickcheck";
       version = "0.1.2";
       sha256 = "1fs5fciplzrlxykn3kbxdyij9vjzs1vq2n5f72vadg9c33961agv";
       buildDepends = [ Cabal QuickCheck ];
       testDepends = [ Cabal ];
       homepage = "https://github.com/zimothy/cabal-test-quickcheck";
       description = "QuickCheck for Cabal";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cabal-uninstall" = callPackage
    ({ mkDerivation, filepath, mtl }:
     mkDerivation {
       pname = "cabal-uninstall";
       version = "0.1.6";
       sha256 = "0ys1c8z8042vc7dzmis47w0q3qapyllmsdkpb1by22qmcnaavii2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl ];
       description = "Uninstall cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal-upload" = callPackage
    ({ mkDerivation, filepath, HTTP, network }:
     mkDerivation {
       pname = "cabal-upload";
       version = "0.4";
       sha256 = "05k77hdx0sbgnn454vb6rc7mmrc3zby7s44x498i4ncrkivz90bz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath HTTP network ];
       description = "Command-line tool for uploading packages to Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal2arch" = callPackage
    ({ mkDerivation, archlinux, Cabal, cmdargs, filepath, mtl }:
     mkDerivation {
       pname = "cabal2arch";
       version = "1.1";
       sha256 = "0sk10z9lj291rpidlaydp7nvgl7adbp7gyf2nvqqhrshxnlqpc8z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ archlinux Cabal cmdargs filepath mtl ];
       homepage = "http://github.com/archhaskell/";
       description = "Create Arch Linux packages from Cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal2doap" = callPackage
    ({ mkDerivation, Cabal, hsemail, hxt, parsec }:
     mkDerivation {
       pname = "cabal2doap";
       version = "0.2";
       sha256 = "1nqchq9mzq8k99agvafwa4vll7d3ahpkaifnjj2bnljqdkxlh9al";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal hsemail hxt parsec ];
       homepage = "http://gregheartsfield.com/cabal2doap/";
       description = "Cabal to Description-of-a-Project (DOAP)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal2ebuild" = callPackage
    ({ mkDerivation, Cabal, curl, filepath }:
     mkDerivation {
       pname = "cabal2ebuild";
       version = "0.0.15.9";
       sha256 = "11fp52hmzkrgcmkxzclmq6bbzxsn0ph78ib6wzzkza5j2c48ya2l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal curl filepath ];
       homepage = "yet";
       description = "make gentoo's .ebuild file from .cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal2ghci" = callPackage
    ({ mkDerivation, Cabal, cmdargs, stylish-haskell, system-fileio
     , system-filepath, text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "cabal2ghci";
       version = "0.0.1.1";
       sha256 = "1fg3pr25f78a6b8nqxvxki4z3fvgx4i6zkmpl992a0iarycqdrsg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal cmdargs stylish-haskell system-fileio system-filepath text
         unordered-containers yaml
       ];
       description = "A tool to generate .ghci file from .cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal2nix" = callPackage
    ({ mkDerivation, Cabal, doctest, filepath, hackage-db, mtl
     , regex-posix, transformers
     }:
     mkDerivation {
       pname = "cabal2nix";
       version = "1.72";
       sha256 = "0xa7v9nwhaymc40qlh7ndv6xvqmfxmc3rp860v0h4swfqsb9bsvr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal filepath hackage-db mtl regex-posix transformers
       ];
       testDepends = [ doctest ];
       homepage = "http://github.com/NixOS/cabal2nix";
       description = "Convert Cabal files into Nix build instructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabal2spec" = callPackage
    ({ mkDerivation, Cabal, filepath, tar, time, Unixutils, zlib }:
     mkDerivation {
       pname = "cabal2spec";
       version = "1.0";
       sha256 = "08y8rwj86n7f3bqfv2ximlx8qas12zspiz6ix8gg01whsry43nsj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath tar time Unixutils zlib ];
       homepage = "https://fedorahosted.org/cabal2spec/";
       description = "Generates RPM Spec files from cabal files";
       license = "GPL";
     }) {};

  "cabalg" = callPackage
    ({ mkDerivation, doctest, filepath }:
     mkDerivation {
       pname = "cabalg";
       version = "0.2.9";
       sha256 = "02brl9b1g3cyw5nmk0mih073kbszpc6g2nqgs0sh93h7y5naf5kp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath ];
       testDepends = [ doctest filepath ];
       description = "alias for cabal install from given git repo";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cabalgraph" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "cabalgraph";
       version = "0.1";
       sha256 = "1kgw1n22zh1ap6dfzhmh18d0wkr6ppd9b20r77f7q6m371hhbkvy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://code.haskell.org/~dons/code/cabalgraph";
       description = "Generate pretty graphs of module trees from cabal files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabalmdvrpm" = callPackage
    ({ mkDerivation, Cabal, cabalrpmdeps }:
     mkDerivation {
       pname = "cabalmdvrpm";
       version = "0.0.1";
       sha256 = "0pgkav4ifwkqh9idj8rpbnq3rw51i94dj1zw0wf7mv72bb32a0c6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal cabalrpmdeps ];
       homepage = "http://nanardon.zarb.org/darcsweb/darcsweb.cgi?r=haskell-cabalmdvrpm;a=shortlog;topi=0";
       description = "Create mandriva rpm from cabal package";
       license = "GPL";
     }) {};

  "cabalrpmdeps" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "cabalrpmdeps";
       version = "0.0.4";
       sha256 = "19kzbwpb9gv9knz1dfvck8yb1kda5dg9rig5xrsd118wgq6xpkr1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://nanardon.zarb.org/darcsweb/darcsweb.cgi?r=haskell-CabalRpmDeps;a=summary";
       description = "Autogenerate rpm dependencies from cabal files";
       license = "GPL";
     }) {};

  "cabalvchk" = callPackage
    ({ mkDerivation, Cabal }:
     mkDerivation {
       pname = "cabalvchk";
       version = "0.3";
       sha256 = "1ai2yz4whbjk9qfpyzjqkdypqknnzfdr1fdp5ii7h059na0q6iq2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal ];
       description = "Verify installed package version against user-specified constraints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cabin" = callPackage
    ({ mkDerivation, binary, filepath, optparse-applicative }:
     mkDerivation {
       pname = "cabin";
       version = "0.1.0.2";
       sha256 = "0fdbqfvc4ys14synk5avriwdif88r6pb49v01fd00j1rfrl2jrsy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary filepath optparse-applicative ];
       description = "Cabal binary sandboxes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cached-traversable" = callPackage
    ({ mkDerivation, binary, filepath, mtl }:
     mkDerivation {
       pname = "cached-traversable";
       version = "0.1.0.1";
       sha256 = "05hlj6qdy0iqyi8z75h7fr9ijfhxngyr3v60q8y681acsgr54dv6";
       buildDepends = [ binary filepath mtl ];
       description = "Transparent, persistent caching of lazy, traversable structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "caf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "caf";
       version = "0.0.3";
       sha256 = "1yrl3ffkfwgs4kljx57m1ldam087s7iby2qs74c4crxkrcj0j7a8";
       homepage = "http://sites.google.com/site/cafwiki/";
       description = "A library of Concurrency Abstractions using Futures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cairo" = callPackage
    ({ mkDerivation, cairo, gtk2hs-buildtools, libc, mtl, pkgconfig
     , text, utf8-string, zlib
     }:
     mkDerivation {
       pname = "cairo";
       version = "0.13.0.5";
       sha256 = "0ak6hzfrcyxajx7qybsmd5g26blqb6zxvv8r2a8bnylvm5sdj70r";
       buildDepends = [ mtl text utf8-string ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ cairo libc pkgconfig zlib ];
       pkgconfigDepends = [ cairo ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Cairo library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) cairo zlib; };

  "cairo-appbase" = callPackage
    ({ mkDerivation, cairo, glib, gtk }:
     mkDerivation {
       pname = "cairo-appbase";
       version = "0.4";
       sha256 = "1191j2587f1sy4d6z57df21xn00qdpv27clib7cyaqdy5jnv3zw2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo glib gtk ];
       description = "A template for building new GUI applications using GTK and Cairo";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cake" = callPackage
    ({ mkDerivation, binary, cmdargs, derive, filepath, mtl, parsek
     , pureMD5, regex-tdfa, split
     }:
     mkDerivation {
       pname = "cake";
       version = "1.1.0.1";
       sha256 = "168szg38gq0g0mppjszcsmsdygs8qy23w6xsz8gbg7dkh7izy1ba";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cmdargs derive filepath mtl parsek pureMD5 regex-tdfa split
       ];
       description = "A build-system library and driver";
       license = "GPL";
     }) {};

  "cake3" = callPackage
    ({ mkDerivation, attoparsec, deepseq, filepath, haskell-src-meta
     , language-javascript, mime-types, monadloc, mtl
     , optparse-applicative, parsec, syb, system-filepath, text
     , text-format
     }:
     mkDerivation {
       pname = "cake3";
       version = "0.5.2.0";
       sha256 = "0wr797r7sg8f48r2pjl2nw70vcdkiamqghz2zpfr6awy9018fhgw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec deepseq filepath haskell-src-meta language-javascript
         mime-types monadloc mtl optparse-applicative parsec syb
         system-filepath text text-format
       ];
       homepage = "https://github.com/grwlf/cake3";
       description = "Third cake the Makefile EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cakyrespa" = callPackage
    ({ mkDerivation, GLUT, gluturtle, lojbanParser, yjsvg, yjtools }:
     mkDerivation {
       pname = "cakyrespa";
       version = "0.0.29";
       sha256 = "1a2ypgkpzzp2hn14x35ava0p0k781s7mhldw29ppl1an7fs91fyx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT gluturtle lojbanParser yjsvg yjtools ];
       homepage = "http://homepage3.nifty.com/salamander/myblog/cakyrespa.html";
       description = "run turtle like LOGO with lojban";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cal3d" = callPackage
    ({ mkDerivation, cal3d }:
     mkDerivation {
       pname = "cal3d";
       version = "0.1";
       sha256 = "1b4pajzpf879vns2kffkqgyk5sbsfrr3q2kv5ryvls8rgwcjc3q6";
       extraLibraries = [ cal3d ];
       homepage = "http://haskell.org/haskellwiki/Cal3d_animation";
       description = "Haskell binding to the Cal3D animation library";
       license = "LGPL";
     }) { inherit (pkgs) cal3d; };

  "cal3d-examples" = callPackage
    ({ mkDerivation, cal3d, cal3d-opengl, OpenGL, SDL }:
     mkDerivation {
       pname = "cal3d-examples";
       version = "0.1";
       sha256 = "1fj6v1dw1gyy6dx4ssiziahxf8j8vr4l35n3rm04g797wypswmw0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cal3d cal3d-opengl OpenGL SDL ];
       homepage = "http://haskell.org/haskellwiki/Cal3d_animation";
       description = "Examples for the Cal3d animation library";
       license = "GPL";
     }) {};

  "cal3d-opengl" = callPackage
    ({ mkDerivation, cal3d, OpenGL }:
     mkDerivation {
       pname = "cal3d-opengl";
       version = "0.1";
       sha256 = "02na1ww5dw08n2y7v2vkgdvzw0zpiic5683jac7f2zvhcij68sf2";
       buildDepends = [ cal3d OpenGL ];
       homepage = "http://haskell.org/haskellwiki/Cal3d_animation";
       description = "OpenGL rendering for the Cal3D animation library";
       license = "LGPL";
     }) {};

  "calc" = callPackage
    ({ mkDerivation, harpy, mtl }:
     mkDerivation {
       pname = "calc";
       version = "0.1";
       sha256 = "1h3rqxj2df68knrb2rhp75rc92q9knsa7jp749j9h24258yr6qxw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ harpy mtl ];
       description = "A small compiler for arithmetic expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "caldims" = callPackage
    ({ mkDerivation, mtl, parsec, readline }:
     mkDerivation {
       pname = "caldims";
       version = "0.1.0";
       sha256 = "0mlgxghah8mw0v17rywfj190kmc4jajpmjpgkpgfxdqzw8djyph0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec readline ];
       description = "Calculation tool and library supporting units";
       license = "GPL";
     }) {};

  "caledon" = callPackage
    ({ mkDerivation, cpphs, lens, mtl, parsec, transformers }:
     mkDerivation {
       pname = "caledon";
       version = "3.2.1.0";
       sha256 = "0mg3qn4zfsg5pvfp51zjvsy24mljkqh2f7bsjbz04zasx5852dz9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cpphs lens mtl parsec transformers ];
       homepage = "https://github.com/mmirman/caledon";
       description = "a logic programming language based on the calculus of constructions";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "call" = callPackage
    ({ mkDerivation, bindings-portaudio, boundingboxes, clean-unions
     , colors, control-bool, deepseq, distributive, elevator, filepath
     , freetype2, GLFW-b, hashable, JuicyPixels, JuicyPixels-util, lens
     , linear, minioperational, mtl, objective, OpenGL, OpenGLRaw
     , random, reflection, text, transformers, vector, WAVE
     }:
     mkDerivation {
       pname = "call";
       version = "0.1.1.3";
       sha256 = "0avryavd59bam9qbw7nhnmp587f7ac3h17nww21r9yag59cfn23i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bindings-portaudio boundingboxes clean-unions colors control-bool
         deepseq distributive elevator filepath freetype2 GLFW-b hashable
         JuicyPixels JuicyPixels-util lens linear minioperational mtl
         objective OpenGL OpenGLRaw random reflection text transformers
         vector WAVE
       ];
       homepage = "https://github.com/fumieval/call";
       description = "The call game engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "camh" = callPackage
    ({ mkDerivation, Imlib, terminfo }:
     mkDerivation {
       pname = "camh";
       version = "0.0.2";
       sha256 = "0xk1rxydncwfwj9cg4jwdgi8mlgwmk5nfk462pla26dqqg44aw2p";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Imlib terminfo ];
       homepage = "not yet available";
       description = "Image converter to 256-colored text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "campfire" = callPackage
    ({ mkDerivation, aeson, attoparsec, filepath, http-enumerator
     , http-types, mtl, text, time, transformers, unordered-containers
     , url
     }:
     mkDerivation {
       pname = "campfire";
       version = "0.2.1";
       sha256 = "06m5d7b6dqmp3x09b1nib1rxjh1gvx84bhvfnydlb26093za71b4";
       buildDepends = [
         aeson attoparsec filepath http-enumerator http-types mtl text time
         transformers unordered-containers url
       ];
       homepage = "http://github.com/michaelxavier/Campfire";
       description = "Haskell implementation of the Campfire API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "canonical-filepath" = callPackage
    ({ mkDerivation, deepseq, filepath }:
     mkDerivation {
       pname = "canonical-filepath";
       version = "1.0.0.3";
       sha256 = "0dg9d4v08gykbjmzafpakgwc51mq5d5m6ilmhp68czpl30sqjhwf";
       buildDepends = [ deepseq filepath ];
       homepage = "http://github.com/nominolo/canonical-filepath";
       description = "Abstract data type for canonical file paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cantor" = callPackage
    ({ mkDerivation, Cabal, filepath, hspec, hxt, hxt-xpath, parsec
     , QuickCheck, split
     }:
     mkDerivation {
       pname = "cantor";
       version = "0.3";
       sha256 = "1yf76zxpy17alyfi6d33p52ds6qr9k45ww001xiyyfnpvh0zdzb5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath hxt hxt-xpath parsec split ];
       testDepends = [
         Cabal filepath hspec hxt hxt-xpath parsec QuickCheck split
       ];
       homepage = "https://github.com/klangner/cantor";
       description = "Application for analysis of java source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cao" = callPackage
    ({ mkDerivation, alex, cmdargs, ConfigFile, dlist, filepath, happy
     , language-c, mtl, yices
     }:
     mkDerivation {
       pname = "cao";
       version = "0.1.1";
       sha256 = "0rmq22fiaadpszckbj5k5gi4sr1jipinyrx9hwc21k5d185vsakd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs ConfigFile dlist filepath language-c mtl yices
       ];
       buildTools = [ alex happy ];
       homepage = "http://haslab.uminho.pt/mbb/software/cao-domain-specific-language-cryptography";
       description = "CAO Compiler";
       license = "GPL";
     }) {};

  "cap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cap";
       version = "1.0.1";
       sha256 = "1492x5hy5ljf0h40c045jd3w26f7jwqplgncka3dnw4mx9kq4g15";
       isLibrary = false;
       isExecutable = true;
       description = "Interprets and debug the cap language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "capped-list" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "capped-list";
       version = "1.2";
       sha256 = "0sik7svknaam6fhlvb4p1ijwaiwrgssrdl9gmq1wmfx66g069xi9";
       description = "A list-like type for lazy sequences, with a user-defined termination value";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "capri" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "capri";
       version = "0.1";
       sha256 = "0hsrznygvn1b2qpc75591kzmcpqh7p5fhi1mw3ws2c75igjqbni7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       description = "A simple wrapper over cabal-install to operate in project-private mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "caramia" = callPackage
    ({ mkDerivation, exceptions, OpenGLRaw, semigroups, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "caramia";
       version = "0.4.0.0";
       sha256 = "1m6a37sd6azkbq426gqr4a1xdp2gsv29p2g1m0fa5lcxhgzffsg9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         exceptions OpenGLRaw semigroups text transformers vector
       ];
       homepage = "https://github.com/Noeda/caramia/";
       description = "Less painful OpenGL 3.3 rendering";
       license = stdenv.lib.licenses.mit;
     }) {};

  "carboncopy" = callPackage
    ({ mkDerivation, filepath, IfElse, MissingH }:
     mkDerivation {
       pname = "carboncopy";
       version = "0.1.2";
       sha256 = "1wi06n0cdqkvyqqr9ji7nyjn09qqckskrzi3djcnxgwhwwp8da3i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath IfElse MissingH ];
       homepage = "http://github.com/jdevelop/carboncopy";
       description = "Drop emails from threads being watched into special CC folder";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "carettah" = callPackage
    ({ mkDerivation, cairo, filepath, gtk, hcwiid, highlighting-kate
     , mtl, pandoc, pango, time
     }:
     mkDerivation {
       pname = "carettah";
       version = "0.3.0";
       sha256 = "1vjrppsqmlxajj7dxr13ynipp0adi6xxpqic5mma04sjgi3afrj2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo filepath gtk hcwiid highlighting-kate mtl pandoc pango time
       ];
       homepage = "http://carettah.masterq.net/";
       description = "A presentation tool written with Haskell";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "carray" = callPackage
    ({ mkDerivation, binary, ix-shapable, syb }:
     mkDerivation {
       pname = "carray";
       version = "0.1.5.2";
       sha256 = "0kjqxjnamhnpjjf2bgm1gnsy6jx1fjbn5mx394pyx1vq3lkfgfb0";
       buildDepends = [ binary ix-shapable syb ];
       description = "A C-compatible array library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cartel" = callPackage
    ({ mkDerivation, filepath, time }:
     mkDerivation {
       pname = "cartel";
       version = "0.10.0.2";
       sha256 = "1ry7hcy8j00bdakvjwa0s0kaa5n68k2pp82099q6s73085n2gz9b";
       buildDepends = [ filepath time ];
       homepage = "http://www.github.com/massysett/cartel";
       description = "Specify your Cabal files in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "casadi-bindings" = callPackage
    ({ mkDerivation, casadi-bindings-core, casadi-bindings-internal
     , linear, vector
     }:
     mkDerivation {
       pname = "casadi-bindings";
       version = "2.1.3.2";
       sha256 = "1rfakjbn02wbm0d6pi7mpwd47sv2mwf7vvaswx6s0vbh612xkwyn";
       buildDepends = [
         casadi-bindings-core casadi-bindings-internal linear vector
       ];
       homepage = "http://github.com/ghorn/casadi-bindings";
       description = "mid-level bindings to CasADi";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "casadi-bindings-control" = callPackage
    ({ mkDerivation, casadi-bindings-core, casadi-bindings-internal
     , casadi_control, vector
     }:
     mkDerivation {
       pname = "casadi-bindings-control";
       version = "2.0.0.1";
       sha256 = "03lpg9vp47db8wc4waajfh1z96f3nc1v29wqc9a58vrhfdnhp52w";
       buildDepends = [
         casadi-bindings-core casadi-bindings-internal vector
       ];
       pkgconfigDepends = [ casadi_control ];
       description = "low level bindings to casadi-control";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "casadi-bindings-core" = callPackage
    ({ mkDerivation, casadi-bindings-internal, casadi_core, vector }:
     mkDerivation {
       pname = "casadi-bindings-core";
       version = "2.1.3.0";
       sha256 = "1fjqg9zlmjv0pd0hyyah2srv7wyxxffrgzpdl361ffbdwrmg4w2p";
       buildDepends = [ casadi-bindings-internal vector ];
       pkgconfigDepends = [ casadi_core ];
       description = "low level bindings to casadi-core";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "casadi-bindings-internal" = callPackage
    ({ mkDerivation, casadi_core, vector }:
     mkDerivation {
       pname = "casadi-bindings-internal";
       version = "0.1.1";
       sha256 = "0jcfkq3dfspfz2jfnmhp0dznr2vj975rcyynl6wnvf54n233vaym";
       buildDepends = [ vector ];
       pkgconfigDepends = [ casadi_core ];
       homepage = "http://github.com/ghorn/casadi-bindings";
       description = "low level bindings to CasADi";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "casadi-bindings-ipopt-interface" = callPackage
    ({ mkDerivation, casadi-bindings-core, casadi-bindings-internal
     , casadi_ipopt_interface, vector
     }:
     mkDerivation {
       pname = "casadi-bindings-ipopt-interface";
       version = "1.9.0.3";
       sha256 = "1h1qpl8ch8riz614fssirlp5j3vzi39jjajwjnfqvgw7h8sdam2a";
       buildDepends = [
         casadi-bindings-core casadi-bindings-internal vector
       ];
       pkgconfigDepends = [ casadi_ipopt_interface ];
       description = "low level bindings to casadi-ipopt_interface";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "casadi-bindings-snopt-interface" = callPackage
    ({ mkDerivation, casadi-bindings-core, casadi-bindings-internal
     , casadi_snopt_interface, vector
     }:
     mkDerivation {
       pname = "casadi-bindings-snopt-interface";
       version = "1.9.0.3";
       sha256 = "0sygbbvdrd1za6k9yf0yqxfd48imlhghzf6sy0dh77jmdhlb8asw";
       buildDepends = [
         casadi-bindings-core casadi-bindings-internal vector
       ];
       pkgconfigDepends = [ casadi_snopt_interface ];
       description = "low level bindings to casadi-snopt_interface";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "cascading" = callPackage
    ({ mkDerivation, blaze-builder, colour, lens, mtl, text
     , utf8-string, web-routes
     }:
     mkDerivation {
       pname = "cascading";
       version = "0.1.0";
       sha256 = "0w9zhaf4a09nl3b1sffllgf0zc10lzy38a8k4f7sbc0hr45wzj5y";
       buildDepends = [
         blaze-builder colour lens mtl text utf8-string web-routes
       ];
       description = "DSL for HTML CSS (Cascading Style Sheets)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "case-conversion" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "case-conversion";
       version = "0.1";
       sha256 = "1njnhbqj1c0zxr0vkb7qh51764f3hscjqjq2yzgyy1shfrc1y1i4";
       homepage = "www.xy30.com";
       description = "Convert between different cases";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "case-insensitive" = callPackage
    ({ mkDerivation, deepseq, hashable, HUnit, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "case-insensitive";
       version = "1.2.0.1";
       sha256 = "1hnckzi6yq3332fx4b140lwa9p6x69rlpaw6y1pmldj2h9nsxl6m";
       buildDepends = [ deepseq hashable text ];
       testDepends = [ HUnit test-framework test-framework-hunit text ];
       homepage = "https://github.com/basvandijk/case-insensitive";
       description = "Case insensitive string comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cases" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, HTF, HUnit, loch-th
     , placeholders, QuickCheck, text
     }:
     mkDerivation {
       pname = "cases";
       version = "0.1.2";
       sha256 = "02m4dlp0l4jd53j1ziq9hkxsj61m74b886ch7vx74n6caz90qnph";
       buildDepends = [ attoparsec base-prelude loch-th text ];
       testDepends = [ HTF HUnit loch-th placeholders QuickCheck text ];
       homepage = "https://github.com/nikita-volkov/cases";
       description = "A converter for spinal, snake and camel cases";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cash" = callPackage
    ({ mkDerivation, deepseq, HaXml, network, parallel }:
     mkDerivation {
       pname = "cash";
       version = "0.1.0.1";
       sha256 = "0pwn33dpv5bgs74i8x6q47hsbl0jg68xwhjjiwyjdyl6sb3rfih7";
       buildDepends = [ deepseq HaXml network parallel ];
       homepage = "http://www.cs.st-andrews.ac.uk/~hwloidl/SCIEnce/SymGrid-Par/CASH/";
       description = "the Computer Algebra SHell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cassandra-cql" = callPackage
    ({ mkDerivation, cereal, cryptohash, Decimal
     , MonadCatchIO-transformers, mtl, network, stm, text, time, uuid
     }:
     mkDerivation {
       pname = "cassandra-cql";
       version = "0.4.0.1";
       sha256 = "0055vvnyqa8n5fma8kk0mxbyv6xnzqvdi6lpnk888c0xh2mqqv5m";
       buildDepends = [
         cereal cryptohash Decimal MonadCatchIO-transformers mtl network stm
         text time uuid
       ];
       description = "Haskell client for Cassandra's CQL protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cassandra-thrift" = callPackage
    ({ mkDerivation, Thrift }:
     mkDerivation {
       pname = "cassandra-thrift";
       version = "0.8.5.1";
       sha256 = "0hmmi0g32nfwcny56sb4jw463jp7hiwj2hhv42bf8h9az30vjxwc";
       buildDepends = [ Thrift ];
       homepage = "http://cassandra.apache.org/";
       description = "thrift bindings to the cassandra database";
       license = "unknown";
     }) {};

  "cassava" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, deepseq, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava";
       version = "0.4.2.0";
       sha256 = "1v1izdjd4maqrlpm4cf2xpackpjp1i4vg1s7mzq90dwa6r9572x3";
       buildDepends = [
         attoparsec blaze-builder deepseq text unordered-containers vector
       ];
       testDepends = [
         attoparsec HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text unordered-containers vector
       ];
       homepage = "https://github.com/tibbe/cassava";
       description = "A CSV parsing and encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cassava-streams" = callPackage
    ({ mkDerivation, cassava, io-streams, QuickCheck, tasty
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "cassava-streams";
       version = "0.1.1.0";
       sha256 = "08b144jm9805wqj68cgmh5j0bq03i439cpbxvq5m2k72m9s81kl7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cassava io-streams vector ];
       testDepends = [
         cassava io-streams QuickCheck tasty tasty-quickcheck vector
       ];
       homepage = "https://github.com/pjones/cassava-streams";
       description = "io-streams interface for the cassava CSV library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cassette" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cassette";
       version = "0.1.0";
       sha256 = "04qnk1s4bdj3wbbxdwzzvpnhkcgma8c4qfkg454ybg7f8kyv6h7x";
       description = "A combinator library for simultaneously defining parsers and pretty printers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cassy" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, binary, cassandra-thrift
     , cereal, conduit, data-default, derive, errors, exceptions, HUnit
     , mtl, network, QuickCheck, resource-pool, retry, safecopy, stm
     , syb, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, Thrift, time, transformers-base
     }:
     mkDerivation {
       pname = "cassy";
       version = "0.7.1";
       sha256 = "0nm1xn7rkxqdap0k3lcl29jp7ajn5fypaqx3ag1zbyp8llc7xy0f";
       buildDepends = [
         aeson async attoparsec binary cassandra-thrift cereal conduit
         data-default errors exceptions mtl network resource-pool retry
         safecopy stm syb text Thrift time transformers-base
       ];
       testDepends = [
         cassandra-thrift derive HUnit network QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text Thrift time
       ];
       homepage = "http://github.com/ozataman/cassy";
       description = "A high level driver for the Cassandra datastore";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "castle" = callPackage
    ({ mkDerivation, configurator, errors, hspec, lens
     , optparse-applicative, QuickCheck, shelly, system-fileio
     , system-filepath, tasty, tasty-golden, tasty-hspec
     , tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "castle";
       version = "0.1.0.0";
       sha256 = "1xsimlz0s0x9hdqvs0mscwj756znhd9mxhq23l8ppm5lavplpycp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         configurator errors lens optparse-applicative shelly system-fileio
         system-filepath text
       ];
       testDepends = [
         hspec QuickCheck tasty tasty-golden tasty-hspec tasty-quickcheck
       ];
       homepage = "https://github.com/erochest/castle";
       description = "A tool to manage shared cabal-install sandboxes";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "casui" = callPackage
    ({ mkDerivation, gtk, mtl, parsec }:
     mkDerivation {
       pname = "casui";
       version = "0.3";
       sha256 = "1vjhg9dxg23q0dqr07gbrg92h3m9r38d7jb3c4sxnw6gaj76f5gw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk mtl parsec ];
       homepage = "http://code.atnnn.com/projects/casui";
       description = "Equation Manipulator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "catch-fd" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "catch-fd";
       version = "0.2.0.2";
       sha256 = "05fvrkvqyj7xdn6vvdwhfbym7rg9fl7r7lzzcsr2cx59iqi23frx";
       buildDepends = [ mtl transformers ];
       homepage = "http://github.com/sonyandy/catch-fd";
       description = "MonadThrow and MonadCatch, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "categorical-algebra" = callPackage
    ({ mkDerivation, newtype, pointless-haskell, void }:
     mkDerivation {
       pname = "categorical-algebra";
       version = "0.0.0.1";
       sha256 = "1kx6195mfnw4aqmcd1m4s8z5l1s8zh69in00p9a0mxm3xj3pfvpl";
       buildDepends = [ newtype pointless-haskell void ];
       description = "Categorical Monoids and Semirings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "categories" = callPackage
    ({ mkDerivation, void }:
     mkDerivation {
       pname = "categories";
       version = "1.0.6";
       sha256 = "0i5mrxbhqj5g46lvwbw2m07prjvfwja6q8648qm6bq54z6zrl5cy";
       buildDepends = [ void ];
       homepage = "http://github.com/ekmett/categories";
       description = "Categories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "category-extras" = callPackage
    ({ mkDerivation, adjunctions, bifunctors, categories, comonad
     , comonad-extras, comonad-transformers, comonads-fd, contravariant
     , distributive, either, free, groupoids, indexed, indexed-extras
     , invariant, kan-extensions, keys, monad-products, pointed
     , profunctor-extras, profunctors, recursion-schemes, reducers
     , representable-functors, representable-profunctors
     , semigroupoid-extras, semigroupoids, semigroups, void
     }:
     mkDerivation {
       pname = "category-extras";
       version = "1.0.2";
       sha256 = "168psp1qd80838b9945499qh99jidbl2gngcrjqk6hb0qsyhckcq";
       buildDepends = [
         adjunctions bifunctors categories comonad comonad-extras
         comonad-transformers comonads-fd contravariant distributive either
         free groupoids indexed indexed-extras invariant kan-extensions keys
         monad-products pointed profunctor-extras profunctors
         recursion-schemes reducers representable-functors
         representable-profunctors semigroupoid-extras semigroupoids
         semigroups void
       ];
       homepage = "http://comonad.com/reader/";
       description = "A meta-package documenting various packages inspired by category theory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cautious-file" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "cautious-file";
       version = "1.0.2";
       sha256 = "1sw5ngwrarq1lsd4c6v2wdmgbhkkq6kpybb62r8ccm11ddgn3yiq";
       buildDepends = [ filepath ];
       description = "Ways to write a file cautiously, to reduce the chances of problems such as data loss due to crashes or power failures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cblrepo" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, Cabal, filepath, json, mtl
     , optparse-applicative, safe, tar, Unixutils, zlib
     }:
     mkDerivation {
       pname = "cblrepo";
       version = "0.13";
       sha256 = "1hrkqmd2b6jdszi29grky19vx61srgavz2b93vpm7wv99x7yh1d4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson ansi-wl-pprint Cabal filepath json mtl optparse-applicative
         safe tar Unixutils zlib
       ];
       description = "Tool to maintain a database of CABAL packages and their dependencies";
       license = "unknown";
     }) {};

  "cci" = callPackage
    ({ mkDerivation, binary, cci, cmdargs, filepath, mtl, random, time
     }:
     mkDerivation {
       pname = "cci";
       version = "0.3.1";
       sha256 = "0pvap67fn9kmjvn2qqq3x99k3mzrrsnb6q6fhawvyxv8drihsfc7";
       isLibrary = true;
       isExecutable = true;
       testDepends = [ binary cmdargs filepath mtl random time ];
       extraLibraries = [ cci ];
       description = "Bindings for the CCI networking library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) cci; };

  "ccnx" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ccnx";
       version = "0.0.0";
       sha256 = "18gnm6skzdnh6cis7l7v3d5813zn6irw6nywg6shffrn8v2y6xh7";
       homepage = "http://tomahawkins.org";
       description = "A Haskell implementation of the CCNx network protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cctools-workqueue" = callPackage
    ({ mkDerivation, bindings-cctools, dttools, lens, monad-loops }:
     mkDerivation {
       pname = "cctools-workqueue";
       version = "3.6.1.0.1.0.0.1";
       sha256 = "1nqczr2f4bv107sdhqnllqcaz413r4f69f9ypshig8jyxzpcdwn3";
       buildDepends = [ bindings-cctools lens monad-loops ];
       extraLibraries = [ dttools ];
       homepage = "http://bitbucket.org/badi/hs-cctools-workqueue";
       description = "High-level interface to CCTools' WorkQueue library";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "cedict" = callPackage
    ({ mkDerivation, mtl, parsec, utf8-string }:
     mkDerivation {
       pname = "cedict";
       version = "0.2.5";
       sha256 = "13nhwd07ly2ppgbakffr2cc2idacz0q5bahz0819jjascspm32vy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec utf8-string ];
       description = "Convenient Chinese phrase & character lookup";
       license = "GPL";
     }) {};

  "cellrenderer-cairo" = callPackage
    ({ mkDerivation, c2hs, cairo, glib, gtk, mtl }:
     mkDerivation {
       pname = "cellrenderer-cairo";
       version = "1.0.0.0";
       sha256 = "05cdrq1mrrhfbsk1w1dg5qayan0h9m92r4gqgcpzfa9a073w78zw";
       buildDepends = [ cairo glib gtk mtl ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ gtk ];
       description = "Cairo-based CellRenderer";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) gtk; };

  "cereal" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cereal";
       version = "0.4.1.0";
       sha256 = "0m0iwjf9bds4nwk1rgr19rvjri4kncn37k51l1n9y869r104b8lb";
       description = "A binary serialization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cereal-conduit" = callPackage
    ({ mkDerivation, cereal, conduit, HUnit, mtl, resourcet
     , transformers
     }:
     mkDerivation {
       pname = "cereal-conduit";
       version = "0.7.2.3";
       sha256 = "0s1s8jm25wxj44x44vjz4kz5qblkyjaz7f8rw5i81bzam32afj9s";
       buildDepends = [ cereal conduit resourcet transformers ];
       testDepends = [ cereal conduit HUnit mtl resourcet transformers ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cereal-derive" = callPackage
    ({ mkDerivation, cereal }:
     mkDerivation {
       pname = "cereal-derive";
       version = "0.1.1";
       sha256 = "04mlg1r2qvrwdzcfbf1aqs4bf9n2gc7cwv73fbhld2ji5naa6fwb";
       buildDepends = [ cereal ];
       description = "Automatic deriving of Serialize using GHC.Generics";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "cereal-enumerator" = callPackage
    ({ mkDerivation, cereal, enumerator }:
     mkDerivation {
       pname = "cereal-enumerator";
       version = "0.3.1";
       sha256 = "0lpsj4f7v4sgrr6lf8jl07xwj8j3i3wj23as0imswk71f7xwfnnk";
       buildDepends = [ cereal enumerator ];
       description = "Deserialize things with cereal and enumerator";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "cereal-ieee754" = callPackage
    ({ mkDerivation, cereal }:
     mkDerivation {
       pname = "cereal-ieee754";
       version = "0.1";
       sha256 = "1gr22ziz9bj4q3y8j1vg46m648zqvbajfdks8p64xc28ci25pw2s";
       buildDepends = [ cereal ];
       homepage = "http://github.com/jystic/cereal-ieee754";
       description = "Floating point support for the 'cereal' serialization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cereal-plus" = callPackage
    ({ mkDerivation, cereal, errors, hashable, hashtables, HTF, HUnit
     , mmorph, mtl, QuickCheck, quickcheck-instances, stm, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "cereal-plus";
       version = "0.4.0";
       sha256 = "109y4ydhbl68rsi95fwck3gq1wvn9bpv0r9g9b7fm8wsgd06gipc";
       buildDepends = [
         cereal errors hashable hashtables mmorph mtl stm text time
         unordered-containers vector
       ];
       testDepends = [
         cereal errors hashable hashtables HTF HUnit mmorph mtl QuickCheck
         quickcheck-instances stm text time unordered-containers vector
       ];
       homepage = "https://github.com/nikita-volkov/cereal-plus";
       description = "An extended serialization library on top of \"cereal\"";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cereal-text" = callPackage
    ({ mkDerivation, cereal, text }:
     mkDerivation {
       pname = "cereal-text";
       version = "0.1.0.0";
       sha256 = "1rpmhafyk49whs77paxa174904idnk8j242mpnlml2b9jjc4rc3d";
       buildDepends = [ cereal text ];
       homepage = "https://github.com/ulikoehler/cereal-text";
       description = "Data.Text instances for the cereal serialization library";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "cereal-vector" = callPackage
    ({ mkDerivation, cereal, QuickCheck, vector }:
     mkDerivation {
       pname = "cereal-vector";
       version = "0.2.0.1";
       sha256 = "0czrb4l1n73cfxxlzbcqfa34qa3gw0m5w5mlz0rawylyqfk8a1pz";
       buildDepends = [ cereal vector ];
       testDepends = [ cereal QuickCheck vector ];
       homepage = "https://github.com/acfoltzer/cereal-vector";
       description = "Serialize instances for Data.Vector types.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "certificate" = callPackage
    ({ mkDerivation, asn1-data, crypto-pubkey-types, cryptohash
     , filepath, mtl, pem, time
     }:
     mkDerivation {
       pname = "certificate";
       version = "1.3.9";
       sha256 = "18g5rq7lpxmvmlnz610537w6mix6z6kxjrfj2ylbhkc81r5pn9g6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         asn1-data crypto-pubkey-types cryptohash filepath mtl pem time
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Certificates and Key Reader/Writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cf";
       version = "0.1";
       sha256 = "0wwq78b6d6hxaivyxw8rc9dsb0kq4aw0mkp8w0xmnfmz8biymlmg";
       homepage = "http://github.com/mvr/cf";
       description = "Infinite precision arithmetic using continued fractions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cfipu" = callPackage
    ({ mkDerivation, data-default, dequeue, mtl }:
     mkDerivation {
       pname = "cfipu";
       version = "1.1.0.4";
       sha256 = "1lwgqibxrs8n3czhpyg1halizsmz5jd8r2z8ham4pwi58815fzij";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ data-default dequeue mtl ];
       homepage = "https://github.com/bairyn/cfipu";
       description = "cfipu processor for toy brainfuck-like language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cflp" = callPackage
    ({ mkDerivation, control-monad-omega, HUnit, incremental-sat-solver
     , level-monad, logict, MonadRandom, mtl, random, stream-monad, syb
     , value-supply
     }:
     mkDerivation {
       pname = "cflp";
       version = "2009.2.1";
       sha256 = "01j4904fa8z2wmflqs3q1g3dg966dllbp2sbxxbghh0hhzwyg0vy";
       buildDepends = [
         control-monad-omega HUnit incremental-sat-solver level-monad logict
         MonadRandom mtl random stream-monad syb value-supply
       ];
       homepage = "http://www-ps.informatik.uni-kiel.de/~sebf/projects/cflp.html";
       description = "Constraint Functional-Logic Programming in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cfopu" = callPackage
    ({ mkDerivation, data-default, dequeue, mtl }:
     mkDerivation {
       pname = "cfopu";
       version = "1.0.0";
       sha256 = "1vd1ilcdd1k081bg4nk1zazdsd9fbz7zzcz453ff0xxjp9xl1b3z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ data-default dequeue mtl ];
       description = "cfopu processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cgen" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, regex-posix, safe }:
     mkDerivation {
       pname = "cgen";
       version = "0.0.5";
       sha256 = "18k9na7gwmnmn5gdin1qi041cb7w49xcgdnjjpc3dhmfiqnq41q8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec regex-posix safe ];
       homepage = "http://anttisalonen.github.com/cgen";
       description = "generates Haskell bindings and C wrappers for C++ libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cgi" = callPackage
    ({ mkDerivation, exceptions, mtl, multipart, network, network-uri
     , parsec, xhtml
     }:
     mkDerivation {
       pname = "cgi";
       version = "3001.2.2.0";
       sha256 = "0zl1ib0i0sh6ll3mrakaargjxyr3v2kxzzdfqpjnr57pg7isrjx9";
       buildDepends = [
         exceptions mtl multipart network network-uri parsec xhtml
       ];
       homepage = "https://github.com/cheecheeo/haskell-cgi";
       description = "A library for writing CGI programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cgi-undecidable" = callPackage
    ({ mkDerivation, cgi, mtl }:
     mkDerivation {
       pname = "cgi-undecidable";
       version = "3000.0.0";
       sha256 = "1xh3q0s7398gd3513ycxypnj0m9jn0kdbb7459dsb459kbvzdpab";
       buildDepends = [ cgi mtl ];
       description = "Undecidable instances for the cgi package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cgi-utils" = callPackage
    ({ mkDerivation, cgi, mtl, random }:
     mkDerivation {
       pname = "cgi-utils";
       version = "0.2.1";
       sha256 = "0msljq31bz40hsrhhq9qhxrgmdlqq32l3ykcy4wviv8kmc3dic7p";
       editedCabalFile = "0lnx7n8pagi3pw57cz4nz01lhfjmsyhk3z3kwgfrmdyrb3kb276z";
       buildDepends = [ cgi mtl random ];
       homepage = "http://github.com/chrisdone/haskell-cgi-utils";
       description = "Simple modular utilities for CGI/FastCGI (sessions, etc.)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cgrep" = callPackage
    ({ mkDerivation, ansi-terminal, cmdargs, dlist, either, filepath
     , mtl, regex-posix, safe, split, stm, stringsearch
     , unordered-containers
     }:
     mkDerivation {
       pname = "cgrep";
       version = "6.4.9";
       sha256 = "1g5np8r5h8hxgyxr3m7595xh7fiq1b8h9w6vm0ly81949lbwclga";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cmdargs dlist either filepath mtl regex-posix safe
         split stm stringsearch unordered-containers
       ];
       homepage = "http://awgn.github.io/cgrep/";
       description = "Command line tool";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "chain-codes" = callPackage
    ({ mkDerivation, hspec, JuicyPixels }:
     mkDerivation {
       pname = "chain-codes";
       version = "0.3.0.0";
       sha256 = "0vw6qwgcljxgrjrsgkpkdqqnpxvibnsc0c4h5kyg5p8h4avsk8k6";
       buildDepends = [ JuicyPixels ];
       testDepends = [ hspec JuicyPixels ];
       homepage = "http://github.com/Fuuzetsu/chain-codes";
       description = "Library decoding chain codes from images";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "chalkboard" = callPackage
    ({ mkDerivation, binary, Codec-Image-DevIL, data-reify, GLUT
     , OpenGLRaw, time
     }:
     mkDerivation {
       pname = "chalkboard";
       version = "1.9.0.16";
       sha256 = "0786fxylzz73kgbyyy6pz5fhk7rfh4fnrbq0br7ghg74qka66sb9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary Codec-Image-DevIL data-reify GLUT OpenGLRaw time
       ];
       homepage = "http://www.ittc.ku.edu/csdl/fpg/ChalkBoard";
       description = "Combinators for building and processing 2D images";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chalkboard-viewer" = callPackage
    ({ mkDerivation, chalkboard, GLUT, OpenGL, time }:
     mkDerivation {
       pname = "chalkboard-viewer";
       version = "0.1";
       sha256 = "1gvnp176j8gd0s6wzq10zpiqkn3wma99pwn3f78wgxm9rh588gh2";
       buildDepends = [ chalkboard GLUT OpenGL time ];
       homepage = "http://ittc.ku.edu/~andygill/chalkboard.php";
       description = "OpenGL based viewer for chalkboard rendered images";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chalmers-lava2000" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "chalmers-lava2000";
       version = "1.4.1";
       sha256 = "19n7z5k6ycn6brnh1n8ykni3ix49d53p3rjggfaklw83knqnvxhy";
       buildDepends = [ random ];
       homepage = "http://projects.haskell.org/chalmers-lava2000/Doc/tutorial.pdf";
       description = "Hardware description EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chan-split" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "chan-split";
       version = "0.5.0";
       sha256 = "1mzvrxcf263gs61hj7gafra1cqvpfbzy7rza7ql0xvnmj2g2ybrc";
       buildDepends = [ stm ];
       homepage = "http://brandon.si/code/module-chan-split-released/";
       description = "Concurrent Chans as read/write pairs. Also provides generic Chan pair class.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "change-monger" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "change-monger";
       version = "0.0";
       sha256 = "071qc0nhg4431c32z4qh23fiw1bjd1jc4s0sgq5v8ymwz4rfy9a2";
       isLibrary = true;
       isExecutable = true;
       description = "Parse VCS changelogs into ChangeLogs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "charade" = callPackage
    ({ mkDerivation, configurator, filepath, heist, lens, mtl
     , QuickCheck, random, snap, snap-core, snap-extras, snap-server
     , text, xmlhtml
     }:
     mkDerivation {
       pname = "charade";
       version = "0.1.1.2";
       sha256 = "0vi82z2c3km5shyk3wwb07y3cqcnkvkgvbl1s36a50kbz65jrl64";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         configurator filepath heist lens mtl QuickCheck random snap
         snap-core snap-extras snap-server text xmlhtml
       ];
       homepage = "https://github.com/soostone/charade";
       description = "Rapid prototyping websites with Snap and Heist";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "charset" = callPackage
    ({ mkDerivation, semigroups, unordered-containers }:
     mkDerivation {
       pname = "charset";
       version = "0.3.7";
       sha256 = "1x912dx5650x8ql3ivhpiwmxd6kv7zghark3s8ljvl1g3qr1pxd6";
       buildDepends = [ semigroups unordered-containers ];
       homepage = "http://github.com/ekmett/charset";
       description = "Fast unicode character sets based on complemented PATRICIA tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "charsetdetect" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "charsetdetect";
       version = "1.0";
       sha256 = "1w302v6pmi448k2rq2cc7wp1javsd9rgk7r7i43lxvbjhniydn7p";
       homepage = "http://www.github.com/batterseapower/charsetdetect";
       description = "Character set detection using Mozilla's Universal Character Set Detector";
       license = "LGPL";
     }) {};

  "charsetdetect-ae" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "charsetdetect-ae";
       version = "1.0.1";
       sha256 = "0bvdnv608glim8yn4dvh3av7x0fxxp3z6719j0n005bygdfgjxna";
       homepage = "http://github.com/Aelve/charsetdetect-ae";
       description = "Character set detection using Mozilla's Universal Character Set Detector";
       license = "LGPL";
     }) {};

  "chart-histogram" = callPackage
    ({ mkDerivation, Chart, colour, data-default-class, lens, vector }:
     mkDerivation {
       pname = "chart-histogram";
       version = "0.4.4";
       sha256 = "0wa3f8qnv7yw7wgg5js3y5k6msd4jfysdqic1vzf5sxd5bz0ycp0";
       buildDepends = [ Chart colour data-default-class lens vector ];
       description = "Easily render histograms with Chart";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chaselev-deque" = callPackage
    ({ mkDerivation, abstract-deque, abstract-deque-tests
     , atomic-primops, bits-atomic, HUnit, test-framework
     , test-framework-hunit, transformers, vector
     }:
     mkDerivation {
       pname = "chaselev-deque";
       version = "0.5.0.3";
       sha256 = "1qkrypqsbfnr6kcl6idqmq2z4nf6jmqmgzddzhh031nxd22p18y6";
       buildDepends = [
         abstract-deque atomic-primops bits-atomic transformers vector
       ];
       testDepends = [
         abstract-deque abstract-deque-tests atomic-primops HUnit
         test-framework test-framework-hunit vector
       ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Chase & Lev work-stealing lock-free double-ended queues (deques)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chatter" = callPackage
    ({ mkDerivation, cereal, deepseq, filepath, fullstop, HUnit, mbox
     , MonadRandom, parsec, QuickCheck, quickcheck-instances
     , random-shuffle, regex-base, regex-tdfa, regex-tdfa-text, safe
     , split, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-skip, text, tokenize
     , transformers, zlib
     }:
     mkDerivation {
       pname = "chatter";
       version = "0.5.0.0";
       sha256 = "15nj3b7w5whkifnik4fmykh21znr2vli9mm8ypbpwwzx8577d08m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal deepseq filepath fullstop mbox MonadRandom parsec QuickCheck
         quickcheck-instances random-shuffle regex-base regex-tdfa
         regex-tdfa-text safe split text tokenize transformers zlib
       ];
       testDepends = [
         cereal filepath HUnit parsec QuickCheck quickcheck-instances
         test-framework test-framework-hunit test-framework-quickcheck2
         test-framework-skip text tokenize
       ];
       homepage = "http://github.com/creswick/chatter";
       description = "A library of simple NLP algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chatty" = callPackage
    ({ mkDerivation, ansi-terminal, chatty-utils, mtl, random, setenv
     , text, time, transformers
     }:
     mkDerivation {
       pname = "chatty";
       version = "0.6.2.1";
       sha256 = "0504xxgzfrgqa6yk8c1xw6qilqq2bq1anmncm5863wg7sd0xknx9";
       buildDepends = [
         ansi-terminal chatty-utils mtl random setenv text time transformers
       ];
       description = "Some monad transformers and typeclasses for abstraction of global dependencies";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "chatty-text" = callPackage
    ({ mkDerivation, chatty, transformers }:
     mkDerivation {
       pname = "chatty-text";
       version = "0.6.0.1";
       sha256 = "1p88yn8c1ckckhxy8k0w50n3mjy8inrwh9zaas5wawaz286chxzh";
       buildDepends = [ chatty transformers ];
       description = "Provides some classes and types for dealing with text, using the fundaments of Chatty";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "chatty-utils" = callPackage
    ({ mkDerivation, mtl, text, transformers }:
     mkDerivation {
       pname = "chatty-utils";
       version = "0.7.1.2";
       sha256 = "17jilk0p6wvnpc064wjk6flilz78yx32f092wn0z8dbc9hpw32wf";
       buildDepends = [ mtl text transformers ];
       description = "Some utilities every serious chatty-based application may need";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "cheapskate" = callPackage
    ({ mkDerivation, aeson, blaze-html, data-default, http-types, mtl
     , syb, text, uniplate, wai, wai-extra, xss-sanitize
     }:
     mkDerivation {
       pname = "cheapskate";
       version = "0.1.0.2";
       sha256 = "1bz3zi2w5vm128csg21swcz4cm7h8ybqylpknr4fnyxmg3gxdd7d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson blaze-html data-default http-types mtl syb text uniplate wai
         wai-extra xss-sanitize
       ];
       homepage = "http://github.com/jgm/cheapskate";
       description = "Experimental markdown processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "check-email" = callPackage
    ({ mkDerivation, email-validate, resolv }:
     mkDerivation {
       pname = "check-email";
       version = "1.0";
       sha256 = "1drw8rspdc4a7jw2ql3fi1dcmw56ah5csf2bil6ii8ccq5vsbfyz";
       buildDepends = [ email-validate ];
       extraLibraries = [ resolv ];
       description = "Confirm whether an email is valid and probably existant";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "check-pvp" = callPackage
    ({ mkDerivation, Cabal, explicit-exception, filepath
     , haskell-src-exts, non-empty, transformers, utility-ht
     }:
     mkDerivation {
       pname = "check-pvp";
       version = "0.0.1";
       sha256 = "18xhm11xwvy9cz149ddm3lj4gxb514jglwhdr50mkrdd4rw8w59f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal explicit-exception filepath haskell-src-exts non-empty
         transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Import_modules_properly";
       description = "Check whether module and package imports conform to the PVP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "checked" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "checked";
       version = "0.1.0.1";
       sha256 = "00l04qxdid2pi885ixnyh91bsigsmk5rxb0jw6dl6j1mlcq27smd";
       description = "Bounds-checking integer types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "checkers" = callPackage
    ({ mkDerivation, QuickCheck, random }:
     mkDerivation {
       pname = "checkers";
       version = "0.4.1";
       sha256 = "19ndgbivd07vchsqs6z9iqjl2jldbq7h4skqc9acracd9xyq1vdr";
       buildDepends = [ QuickCheck random ];
       description = "Check properties on standard classes and data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chell" = callPackage
    ({ mkDerivation, ansi-terminal, options, patience, random, text
     , transformers
     }:
     mkDerivation {
       pname = "chell";
       version = "0.4";
       sha256 = "1hynr7n7wxgc3z6zrc3xrfpiqlh4zfb3kagwwfhqmcamv9d4x0ng";
       buildDepends = [
         ansi-terminal options patience random text transformers
       ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "A simple and intuitive library for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};

  "chell-hunit" = callPackage
    ({ mkDerivation, chell, HUnit }:
     mkDerivation {
       pname = "chell-hunit";
       version = "0.2.1";
       sha256 = "006l2j98gmgjrapyp00vz93hxlx9gwkdnxwh5nx293zp7vm27x00";
       buildDepends = [ chell HUnit ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "HUnit support for the Chell testing library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "chell-quickcheck" = callPackage
    ({ mkDerivation, chell, QuickCheck, random }:
     mkDerivation {
       pname = "chell-quickcheck";
       version = "0.2.4";
       sha256 = "0ys6aks97y5h0n8n8dmwx8jrai4bjlnr7n69s259664y694054wd";
       buildDepends = [ chell QuickCheck random ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "QuickCheck support for the Chell testing library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "chesshs" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "chesshs";
       version = "0.2.0";
       sha256 = "1v9qhnknqn8bsxzdcwskhssmmhbrr0d1rrxqm6ssf6j2jvv3diay";
       buildDepends = [ attoparsec ];
       homepage = "http://arnovanlumig.com/chesshs.html";
       description = "Simple library for validating chess moves and parsing PGN files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chp" = callPackage
    ({ mkDerivation, deepseq, extensible-exceptions, stm }:
     mkDerivation {
       pname = "chp";
       version = "2.2.0.1";
       sha256 = "18z0836hxs4ix7mdjxvpb40i4s71dc1j3vpxfh0vj8mf5drpc942";
       buildDepends = [ deepseq extensible-exceptions stm ];
       homepage = "http://www.cs.kent.ac.uk/projects/ofa/chp/";
       description = "An implementation of concurrency ideas from Communicating Sequential Processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chp-mtl" = callPackage
    ({ mkDerivation, chp, chp-plus, mtl }:
     mkDerivation {
       pname = "chp-mtl";
       version = "1.0.0";
       sha256 = "1x14xl9hm9n3zczj6xhffvpac09q5a13i94fhkq2kzj2s3rk1b4z";
       buildDepends = [ chp chp-plus mtl ];
       homepage = "http://www.cs.kent.ac.uk/projects/ofa/chp/";
       description = "MTL class instances for the CHP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chp-plus" = callPackage
    ({ mkDerivation, chp, deepseq, extensible-exceptions, HUnit
     , QuickCheck, stm
     }:
     mkDerivation {
       pname = "chp-plus";
       version = "1.3.1.2";
       sha256 = "1875fqf24jwl5vf2cys7yc70k0c53pg74i041y1xbrczincaww0z";
       buildDepends = [
         chp deepseq extensible-exceptions HUnit QuickCheck stm
       ];
       homepage = "http://www.cs.kent.ac.uk/projects/ofa/chp/";
       description = "A set of high-level concurrency utilities built on Communicating Haskell Processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chp-spec" = callPackage
    ({ mkDerivation, deepseq, mtl, TypeCompose }:
     mkDerivation {
       pname = "chp-spec";
       version = "1.0.0";
       sha256 = "0jil6p0cw8bbpzb0kf9lxljdnbbp0xyq7c6x7bfc7291kqkafgdi";
       buildDepends = [ deepseq mtl TypeCompose ];
       homepage = "http://www.cs.kent.ac.uk/projects/ofa/chp/";
       description = "A mirror implementation of chp that generates a specification of the program";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chp-transformers" = callPackage
    ({ mkDerivation, chp, chp-plus, transformers }:
     mkDerivation {
       pname = "chp-transformers";
       version = "1.0.0";
       sha256 = "0d4hcqpjxmns1fhq918s6z9f4bxlbjlkxzq5xkpqwjxpzy83wq23";
       buildDepends = [ chp chp-plus transformers ];
       homepage = "http://www.cs.kent.ac.uk/projects/ofa/chp/";
       description = "Transformers instances for the CHP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chronograph" = callPackage
    ({ mkDerivation, deepseq, thyme, vector-space }:
     mkDerivation {
       pname = "chronograph";
       version = "0.2.0.1";
       sha256 = "0qy2ahnp324jh0ybqwsa4nc3r2x1hkbrg6sl6f8dg1xnr0gpaag2";
       buildDepends = [ deepseq thyme vector-space ];
       description = "measure timings of data evaluation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chu2" = callPackage
    ({ mkDerivation, data-default, hack2, hack2-handler-snap-server
     , utf8-string
     }:
     mkDerivation {
       pname = "chu2";
       version = "2012.11.20";
       sha256 = "01q34kzhisb8ani3k5dfjaixa7j1vqg0nh8mbmnya52hr7p4sdiz";
       buildDepends = [
         data-default hack2 hack2-handler-snap-server utf8-string
       ];
       homepage = "https://github.com/nfjinjing/chu2";
       description = "FFI for Chu2 Agda Web Server Interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "chuchu" = callPackage
    ({ mkDerivation, abacate, ansi-wl-pprint, cmdargs, HUnit
     , lifted-base, monad-control, parsec, text, transformers
     }:
     mkDerivation {
       pname = "chuchu";
       version = "0.4.5";
       sha256 = "04xyylp5gliwpps753xqn8r72708ygxcp08j0fypc64ykhv5pnqc";
       buildDepends = [
         abacate ansi-wl-pprint cmdargs lifted-base monad-control parsec
         text transformers
       ];
       testDepends = [ HUnit text transformers ];
       homepage = "http://github.com/marcotmarcot/chuchu";
       description = "Behaviour Driven Development like Cucumber for Haskell";
       license = "unknown";
     }) {};

  "chunked-data" = callPackage
    ({ mkDerivation, blaze-builder, mono-traversable, semigroups
     , system-filepath, text, transformers, vector
     }:
     mkDerivation {
       pname = "chunked-data";
       version = "0.1.0.1";
       sha256 = "0kdq79mxi9nhy3dqw283f5ffx4rxwfrdq9cfw46ql5wmqrg2qw7r";
       buildDepends = [
         blaze-builder mono-traversable semigroups system-filepath text
         transformers vector
       ];
       homepage = "https://github.com/fpco/chunked-data";
       description = "Typeclasses for dealing with various chunked data representations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "chunks" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "chunks";
       version = "2007.4.18";
       sha256 = "0qdwilzhbnx5zgga65lcwd6kzwvsbvi8ybfw9i4d8ziz89190fkz";
       buildDepends = [ parsec ];
       homepage = "http://www.wellquite.org/chunks/";
       description = "Simple template library with static safety";
       license = "LGPL";
     }) {};

  "chunky" = callPackage
    ({ mkDerivation, binary, HUnit, text }:
     mkDerivation {
       pname = "chunky";
       version = "0.1.0.0";
       sha256 = "12g5hvb5qpbmfn1389wj7sfkc4qp19vg24gpn6j225yfyk8ccik7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary text ];
       testDepends = [ binary HUnit text ];
       description = "Human-readable storage of text/binary objects";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "church-list" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "church-list";
       version = "0.0.2";
       sha256 = "0xidwcn79acpg691n0xqk3q7xlprp9gibqkafn262zq24sks31xw";
       description = "Removed; please see fmlist";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cil" = callPackage
    ({ mkDerivation, language-c }:
     mkDerivation {
       pname = "cil";
       version = "0.1.1";
       sha256 = "0farjdyq6w33jm0qqdkfd6l7b8rr6k55dqfha643mj6nh1y904az";
       buildDepends = [ language-c ];
       homepage = "http://tomahawkins.org";
       description = "An interface to CIL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cinvoke" = callPackage
    ({ mkDerivation, cinvoke }:
     mkDerivation {
       pname = "cinvoke";
       version = "0.1";
       sha256 = "0niz7banhrkcwdfp6w5gwy1brz1c26mylnlavi5zxgawfq4d3sl2";
       extraLibraries = [ cinvoke ];
       homepage = "http://haskell.org/haskellwiki/Library/cinvoke";
       description = "A binding to cinvoke";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) cinvoke; };

  "cio" = callPackage
    ({ mkDerivation, monad-stm, mtl, parallel-io, stm }:
     mkDerivation {
       pname = "cio";
       version = "0.1.0";
       sha256 = "0518cbfyjh13ghihvnxvbhlw4060cqw5047bdrflphmigwbvpplb";
       buildDepends = [ monad-stm mtl parallel-io stm ];
       homepage = "https://github.com/nikita-volkov/cio";
       description = "A monad for concurrent IO on a thread pool";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cipher-aes" = callPackage
    ({ mkDerivation, byteable, crypto-cipher-tests, crypto-cipher-types
     , QuickCheck, securemem, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-aes";
       version = "0.2.9";
       sha256 = "1nkrh8mrrh14zfhjz0lfidw0hw9c70hap9w24rvb14zgfnnasnlq";
       buildDepends = [ byteable crypto-cipher-types securemem ];
       testDepends = [
         byteable crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-cipher-aes";
       description = "Fast AES cipher implementation with advanced mode of operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cipher-aes128" = callPackage
    ({ mkDerivation, cereal, crypto-api, tagged }:
     mkDerivation {
       pname = "cipher-aes128";
       version = "0.6.4";
       sha256 = "093zpw86wimniwmd73g3nnbfy530q52kynccssqf7jxafbsw75aa";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cereal crypto-api tagged ];
       homepage = "https://github.com/TomMD/cipher-aes128";
       description = "AES and common modes using AES-NI when available";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cipher-blowfish" = callPackage
    ({ mkDerivation, byteable, crypto-cipher-tests, crypto-cipher-types
     , QuickCheck, securemem, test-framework, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "cipher-blowfish";
       version = "0.0.3";
       sha256 = "0hb67gmiyqrknynz5am8nada1b1v47rqla87dw5nvfhxhl51fhcg";
       buildDepends = [ byteable crypto-cipher-types securemem vector ];
       testDepends = [
         byteable crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Blowfish cipher";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cipher-camellia" = callPackage
    ({ mkDerivation, byteable, crypto-cipher-tests, crypto-cipher-types
     , QuickCheck, securemem, test-framework, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "cipher-camellia";
       version = "0.0.2";
       sha256 = "19z2mi1rvp8fsqjdbmrm1hdlxmx61yr55fyknmmn945qrlvx234d";
       buildDepends = [ byteable crypto-cipher-types securemem vector ];
       testDepends = [
         byteable crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Camellia block cipher primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cipher-des" = callPackage
    ({ mkDerivation, byteable, crypto-cipher-tests, crypto-cipher-types
     , QuickCheck, securemem, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-des";
       version = "0.0.6";
       sha256 = "1isazxa2nr1y13y0danfk7wghy34rfpn3f43rw714nk2xk6vrwc5";
       buildDepends = [ byteable crypto-cipher-types securemem ];
       testDepends = [
         byteable crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "DES and 3DES primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cipher-rc4" = callPackage
    ({ mkDerivation, byteable, crypto-cipher-tests, crypto-cipher-types
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-rc4";
       version = "0.1.4";
       sha256 = "0k9qf0cn5yxc4qlqikcm5yyrnkkvr6g3v7306cp8iwz7r4dp6zn6";
       buildDepends = [ byteable crypto-cipher-types ];
       testDepends = [
         crypto-cipher-tests crypto-cipher-types QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-cipher-rc4";
       description = "Fast RC4 cipher implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cipher-rc5" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "cipher-rc5";
       version = "0.1.0.1";
       sha256 = "1ld4kdn0bd7ka448bl6df30iw3kd3mw7117qlwxyfzwbisdcsrif";
       buildDepends = [ split ];
       homepage = "http://github.com/fegu/cipher-rc5";
       description = "Pure RC5 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "circ" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "circ";
       version = "0.0.4";
       sha256 = "0n3m7kjyqic10dl06zic5qjb1yb1ff8jn9d1wchrarkprcw25knc";
       buildDepends = [ mtl ];
       description = "A Compiler IR Compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "circle-packing" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "circle-packing";
       version = "0.1.0.3";
       sha256 = "1df284n181ny3i7ajx0j6x5grxw404zzz6y8iybmh5qgba1537g2";
       description = "Simple heuristic for packing discs of varying radii in a circle";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "citation-resolve" = callPackage
    ({ mkDerivation, aeson, citeproc-hs, curl, data-default, doctest
     , download-curl, either, filepath, hspec, lens, MissingH, mtl
     , QuickCheck, safe, text, transformers, yaml
     }:
     mkDerivation {
       pname = "citation-resolve";
       version = "0.4.3";
       sha256 = "1x561l7shkz1nh43xh2nj83pb183rah1swi0ql9n0wr9ykq1mh1l";
       buildDepends = [
         aeson citeproc-hs curl data-default download-curl either lens mtl
         safe text transformers yaml
       ];
       testDepends = [ doctest filepath hspec MissingH QuickCheck ];
       homepage = "https://github.com/nushio3/citation-resolve";
       description = "convert document IDs such as DOI, ISBN, arXiv ID to bibliographic reference";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "citeproc-hs" = callPackage
    ({ mkDerivation, filepath, hexpat, hs-bibutils, HTTP, json, mtl
     , network, pandoc-types, parsec, syb, time, utf8-string
     }:
     mkDerivation {
       pname = "citeproc-hs";
       version = "0.3.9";
       sha256 = "0f3l33a3rcp8lm8nkbda42lijjpaqa7cxszswhjryy1inywpsssg";
       buildDepends = [
         filepath hexpat hs-bibutils HTTP json mtl network pandoc-types
         parsec syb time utf8-string
       ];
       homepage = "http://gorgias.mine.nu/repos/citeproc-hs/";
       description = "A Citation Style Language implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cityhash" = callPackage
    ({ mkDerivation, largeword, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cityhash";
       version = "0.3.0.1";
       sha256 = "1nr0sqrvnsjkgyhlw55mnr69s5ddxk9f0bbpwkigqc7m457vkxi6";
       buildDepends = [ largeword ];
       testDepends = [
         largeword QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/thoughtpolice/hs-cityhash";
       description = "Bindings to CityHash";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cjk" = callPackage
    ({ mkDerivation, attoparsec, text, text-icu }:
     mkDerivation {
       pname = "cjk";
       version = "0.1.0.1";
       sha256 = "1r0rw33vqkhck0mfqz19plw9a71f56gdcjldrxl23178fps349vl";
       buildDepends = [ attoparsec text text-icu ];
       homepage = "http://github.com/batterseapower/cjk";
       description = "Data about Chinese, Japanese and Korean characters and languages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clafer" = callPackage
    ({ mkDerivation, aeson, cmdargs, data-stringmap, executable-path
     , filepath, glpk-hs, HaXml, HUnit, json-builder, lens, MaybeT, mtl
     , parsec, QuickCheck, split, string-conversions, tasty, tasty-hunit
     , tasty-th, text, transformers
     }:
     mkDerivation {
       pname = "clafer";
       version = "0.3.7";
       sha256 = "1fz4bndxwyfch3bagyqgzqw46fichczj5gnkhqpvghfnlydv94a7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson cmdargs data-stringmap executable-path filepath glpk-hs HaXml
         json-builder lens MaybeT mtl parsec split string-conversions text
         transformers
       ];
       testDepends = [
         filepath HaXml HUnit lens mtl QuickCheck tasty tasty-hunit tasty-th
       ];
       homepage = "http://clafer.org";
       description = "clafer compiles Clafer models to other formats, such as Alloy, XML, HTML, Dot";
       license = stdenv.lib.licenses.mit;
     }) {};

  "claferIG" = callPackage
    ({ mkDerivation, clafer, cmdargs, data-stringmap, executable-path
     , filepath, haskeline, HaXml, HUnit, json-builder, mtl, parsec
     , string-conversions, tasty, tasty-hunit, tasty-th, transformers
     }:
     mkDerivation {
       pname = "claferIG";
       version = "0.3.7";
       sha256 = "1dnjg6w2v9ijm8rcgdsi5zm3zbj4cvyp165wgbxbmda9kl05w5am";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         clafer cmdargs data-stringmap executable-path filepath haskeline
         HaXml json-builder mtl parsec string-conversions transformers
       ];
       testDepends = [
         clafer cmdargs filepath HUnit tasty tasty-hunit tasty-th
         transformers
       ];
       homepage = "https://github.com/gsdlab/claferIG";
       description = "claferIG is an interactive tool that generates instances of Clafer models";
       license = stdenv.lib.licenses.mit;
     }) {};

  "claferwiki" = callPackage
    ({ mkDerivation, clafer, gitit, MissingH, mtl, network, SHA, split
     , time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "claferwiki";
       version = "0.3.7";
       sha256 = "170lp987dw5cfyfhqk8ak7m2z5mc0lnwzn3xlxniys47qn8ji3yx";
       buildDepends = [
         clafer gitit MissingH mtl network SHA split time transformers
         utf8-string
       ];
       homepage = "http://github.com/gsdlab/claferwiki";
       description = "A wiki-based IDE for literate modeling with Clafer";
       license = stdenv.lib.licenses.mit;
     }) {};

  "clanki" = callPackage
    ({ mkDerivation, safe, time }:
     mkDerivation {
       pname = "clanki";
       version = "1.0.5";
       sha256 = "119cz6j0w6r2k50qdjg0j81w60ypwr3n1wv656i5sn95a2wpcm7y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ safe time ];
       description = "Command-line spaced-repetition software";
       license = stdenv.lib.licenses.mit;
     }) {};

  "clash" = callPackage
    ({ mkDerivation, data-accessor, data-accessor-template, filepath
     , prettyclass, tfp, th-lift, time, transformers, utility-ht, vhdl
     }:
     mkDerivation {
       pname = "clash";
       version = "0.1.3.11";
       sha256 = "047dhg6y7yvp5vdarylry0q4l29a4x2dkjilk6j624lxcc17gyhx";
       buildDepends = [
         data-accessor data-accessor-template filepath prettyclass tfp
         th-lift time transformers utility-ht vhdl
       ];
       homepage = "http://clash.ewi.utwente.nl/";
       description = "CAES Language for Synchronous Hardware (CLaSH)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clash-ghc" = callPackage
    ({ mkDerivation, bifunctors, clash-lib, clash-prelude, filepath
     , ghc-paths, hashable, haskeline, lens, mtl, text, transformers
     , unbound, unordered-containers
     }:
     mkDerivation {
       pname = "clash-ghc";
       version = "0.4";
       sha256 = "0pyv8snrmy7x9gv6xna5rd5chacrdvczcjs7854b80pifhag5c2g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bifunctors clash-lib clash-prelude filepath ghc-paths hashable
         haskeline lens mtl text transformers unbound unordered-containers
       ];
       homepage = "http://christiaanb.github.io/clash2";
       description = "CAES Language for Synchronous Hardware";
       license = "unknown";
     }) {};

  "clash-lib" = callPackage
    ({ mkDerivation, aeson, attoparsec, concurrent-supply
     , contravariant, deepseq, errors, fgl, filepath, hashable, lens
     , ListLike, mtl, text, time, transformers, unbound
     , unordered-containers, uu-parsinglib, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-lib";
       version = "0.4";
       sha256 = "1c3bxjm356cs7wf49zlazbv44bw06rs81akmsfzkfccrl7gjy7yc";
       buildDepends = [
         aeson attoparsec concurrent-supply contravariant deepseq errors fgl
         filepath hashable lens ListLike mtl text time transformers unbound
         unordered-containers uu-parsinglib wl-pprint-text
       ];
       homepage = "http://christiaanb.github.io/clash2";
       description = "CAES Language for Synchronous Hardware - As a Library";
       license = "unknown";
     }) {};

  "clash-prelude" = callPackage
    ({ mkDerivation, data-default, th-lift }:
     mkDerivation {
       pname = "clash-prelude";
       version = "0.6.0.1";
       sha256 = "0d929g7js15aagd1pa2lfbhd1yiykd0ngp6fv522yhy1yyijn1l7";
       buildDepends = [ data-default th-lift ];
       homepage = "http://christiaanb.github.io/clash2/";
       description = "CAES Language for Synchronous Hardware - Prelude library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "classify" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "classify";
       version = "2013.11.6.1";
       sha256 = "03d4ygqhqbg4cvfjp8c5cyy0fkgf1fpzc1li45bqc555jrxwszwr";
       buildDepends = [ mtl ];
       description = "Library for classification of media files";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "classy-parallel" = callPackage
    ({ mkDerivation, lifted-base, monad-control, parallel, resourcet
     , transformers
     }:
     mkDerivation {
       pname = "classy-parallel";
       version = "0.1.0.0";
       sha256 = "0vfik37g2fwzc4p343hag5aidvi77396vfhfdx1207gahbzqf21v";
       buildDepends = [
         lifted-base monad-control parallel resourcet transformers
       ];
       description = "Fork of the monad-parallel package using monad-control";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "classy-prelude" = callPackage
    ({ mkDerivation, basic-prelude, bifunctors, chunked-data
     , enclosed-exceptions, exceptions, hashable, hspec, lifted-base
     , mono-traversable, mtl, primitive, QuickCheck, semigroups, stm
     , system-filepath, text, time, transformers, unordered-containers
     , vector, vector-instances
     }:
     mkDerivation {
       pname = "classy-prelude";
       version = "0.10.2";
       sha256 = "0pq16rgksbv2ml4wg7jdxlb9y80h8la78hnrcci637s6kbdisd7k";
       buildDepends = [
         basic-prelude bifunctors chunked-data enclosed-exceptions
         exceptions hashable lifted-base mono-traversable mtl primitive
         semigroups stm system-filepath text time transformers
         unordered-containers vector vector-instances
       ];
       testDepends = [
         hspec QuickCheck transformers unordered-containers
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "A typeclass-based Prelude";
       license = stdenv.lib.licenses.mit;
     }) {};

  "classy-prelude-conduit" = callPackage
    ({ mkDerivation, classy-prelude, conduit, conduit-combinators
     , hspec, monad-control, QuickCheck, resourcet, system-fileio
     , transformers, void
     }:
     mkDerivation {
       pname = "classy-prelude-conduit";
       version = "0.10.2";
       sha256 = "0bgic61p05hpnsami199wzs2q4cbdm00nyp03vsxz2ddsz8dwc8l";
       buildDepends = [
         classy-prelude conduit conduit-combinators monad-control resourcet
         system-fileio transformers void
       ];
       testDepends = [ conduit hspec QuickCheck transformers ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "conduit instances for classy-prelude";
       license = stdenv.lib.licenses.mit;
     }) {};

  "classy-prelude-yesod" = callPackage
    ({ mkDerivation, aeson, classy-prelude, classy-prelude-conduit
     , data-default, http-conduit, http-types, persistent, yesod
     , yesod-newsfeed, yesod-static
     }:
     mkDerivation {
       pname = "classy-prelude-yesod";
       version = "0.10.2";
       sha256 = "1jzf26rj9m8mdhhag66h5zbh91c7ff3jn1q1ghmah12dj9y06137";
       buildDepends = [
         aeson classy-prelude classy-prelude-conduit data-default
         http-conduit http-types persistent yesod yesod-newsfeed
         yesod-static
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "Provide a classy prelude including common Yesod functionality";
       license = stdenv.lib.licenses.mit;
     }) {};

  "clay" = callPackage
    ({ mkDerivation, HUnit, mtl, test-framework, test-framework-hunit
     , text
     }:
     mkDerivation {
       pname = "clay";
       version = "0.10";
       sha256 = "0xw7j9v2cfs4874l5n852b38m6v2mpkbr93dxxfkp2kwmqkjbl5v";
       buildDepends = [ mtl text ];
       testDepends = [
         HUnit mtl test-framework test-framework-hunit text
       ];
       homepage = "http://fvisser.nl/clay";
       description = "CSS preprocessor as embedded Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks" = callPackage
    ({ mkDerivation, acid-state, aeson, attoparsec, blaze-html, cereal
     , cryptopp, filepath, happstack-authenticate, happstack-hsp
     , happstack-server, happstack-server-tls, hsp, hsx-jmacro, hsx2hs
     , ixset, jmacro, mtl, network, network-uri, openssl, random, reform
     , reform-happstack, reform-hsp, safecopy, stm, tagsoup, text, time
     , unordered-containers, utf8-string, uuid, vector, web-plugins
     , web-routes, web-routes-happstack, web-routes-hsp, web-routes-th
     , xss-sanitize
     }:
     mkDerivation {
       pname = "clckwrks";
       version = "0.22.4";
       sha256 = "1srgvnsmd3lhhp797kwwq6a0sr31i0kdlgzmrqi0qs1wg54nwyw6";
       buildDepends = [
         acid-state aeson attoparsec blaze-html cereal filepath
         happstack-authenticate happstack-hsp happstack-server
         happstack-server-tls hsp hsx-jmacro ixset jmacro mtl network
         network-uri random reform reform-happstack reform-hsp safecopy stm
         tagsoup text time unordered-containers utf8-string uuid vector
         web-plugins web-routes web-routes-happstack web-routes-hsp
         web-routes-th xss-sanitize
       ];
       buildTools = [ hsx2hs ];
       extraLibraries = [ cryptopp openssl ];
       homepage = "http://www.clckwrks.com/";
       description = "A secure, reliable content management system (CMS) and blogging platform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-cli" = callPackage
    ({ mkDerivation, acid-state, clckwrks, haskeline, mtl, network
     , parsec
     }:
     mkDerivation {
       pname = "clckwrks-cli";
       version = "0.2.13";
       sha256 = "09ygkr4wqcwc07pf0alf9dncsv4dl40v97qnilis3wsdc05gflip";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         acid-state clckwrks haskeline mtl network parsec
       ];
       homepage = "http://www.clckwrks.com/";
       description = "a command-line interface for adminstrating some aspects of clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-dot-com" = callPackage
    ({ mkDerivation, clckwrks, clckwrks-plugin-bugs
     , clckwrks-plugin-media, clckwrks-plugin-page
     , clckwrks-theme-clckwrks, happstack-server, hsp, hsx2hs, mtl
     , network, text, web-plugins
     }:
     mkDerivation {
       pname = "clckwrks-dot-com";
       version = "0.3.9";
       sha256 = "0q1y6lh9215p0c45195k05m774bmxyzm6jsvyncw2qngl77gambh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         clckwrks clckwrks-plugin-bugs clckwrks-plugin-media
         clckwrks-plugin-page clckwrks-theme-clckwrks happstack-server hsp
         mtl network text web-plugins
       ];
       buildTools = [ hsx2hs ];
       homepage = "http://www.clckwrks.com/";
       description = "clckwrks.com";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-plugin-bugs" = callPackage
    ({ mkDerivation, acid-state, attoparsec, cereal, clckwrks
     , clckwrks-plugin-page, filepath, happstack-authenticate
     , happstack-hsp, happstack-server, hsp, hsx2hs, ixset, mtl, network
     , network-uri, reform, reform-happstack, reform-hsp, safecopy, text
     , time, web-plugins, web-routes, web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-bugs";
       version = "0.7.5";
       sha256 = "0la4ivk8sbh8wq1g2nhxx522ir2idffz5818bghjf8qffmqa47fv";
       buildDepends = [
         acid-state attoparsec cereal clckwrks clckwrks-plugin-page filepath
         happstack-authenticate happstack-hsp happstack-server hsp ixset mtl
         network network-uri reform reform-happstack reform-hsp safecopy
         text time web-plugins web-routes web-routes-th
       ];
       buildTools = [ hsx2hs ];
       homepage = "http://clckwrks.com/";
       description = "bug tracking plugin for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-plugin-ircbot" = callPackage
    ({ mkDerivation, acid-state, attoparsec, blaze-html, clckwrks
     , filepath, happstack-hsp, happstack-server, hsp, hsx2hs, ircbot
     , ixset, mtl, network, reform, reform-happstack, reform-hsp
     , safecopy, text, web-plugins, web-routes, web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-ircbot";
       version = "0.6.12";
       sha256 = "1pi8qrm71zdszc1fkwyvdx0qnlj4gzsyajw70w4s6sgmn7mgny69";
       buildDepends = [
         acid-state attoparsec blaze-html clckwrks filepath happstack-hsp
         happstack-server hsp ircbot ixset mtl network reform
         reform-happstack reform-hsp safecopy text web-plugins web-routes
         web-routes-th
       ];
       buildTools = [ hsx2hs ];
       homepage = "http://clckwrks.com/";
       description = "ircbot plugin for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-plugin-media" = callPackage
    ({ mkDerivation, acid-state, attoparsec, blaze-html, cereal
     , clckwrks, filepath, gd, happstack-server, hsp, hsx2hs, ixset
     , magic, mtl, reform, reform-happstack, reform-hsp, safecopy, text
     , web-plugins, web-routes, web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-media";
       version = "0.6.9";
       sha256 = "0c72c7k1zpl6sqvb8fl5dr1in6nbr5ni3hj5mvfs54phw0b6qlqs";
       buildDepends = [
         acid-state attoparsec blaze-html cereal clckwrks filepath gd
         happstack-server hsp ixset magic mtl reform reform-happstack
         reform-hsp safecopy text web-plugins web-routes web-routes-th
       ];
       buildTools = [ hsx2hs ];
       homepage = "http://clckwrks.com/";
       description = "media plugin for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-plugin-page" = callPackage
    ({ mkDerivation, acid-state, aeson, attoparsec, clckwrks, filepath
     , happstack-hsp, happstack-server, hsp, hsx2hs, ixset, mtl, random
     , reform, reform-happstack, reform-hsp, safecopy, tagsoup, text
     , time, utf8-string, uuid, web-plugins, web-routes
     , web-routes-happstack, web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-page";
       version = "0.3.6";
       sha256 = "1izz2mgznvwjy3689zw76rzyapq32kq0dvbs7147x6fx5rvsydz7";
       buildDepends = [
         acid-state aeson attoparsec clckwrks filepath happstack-hsp
         happstack-server hsp ixset mtl random reform reform-happstack
         reform-hsp safecopy tagsoup text time utf8-string uuid web-plugins
         web-routes web-routes-happstack web-routes-th
       ];
       buildTools = [ hsx2hs ];
       homepage = "http://www.clckwrks.com/";
       description = "support for CMS/Blogging in clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-theme-bootstrap" = callPackage
    ({ mkDerivation, clckwrks, hsp, hsx2hs, text }:
     mkDerivation {
       pname = "clckwrks-theme-bootstrap";
       version = "0.3.2";
       sha256 = "0bj1lxrzlhv4l37xb4jbb8h55l3mb2abyapsmlavcj0cld7ba7i2";
       buildDepends = [ clckwrks hsp text ];
       buildTools = [ hsx2hs ];
       homepage = "http://www.clckwrks.com/";
       description = "simple bootstrap based template for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-theme-clckwrks" = callPackage
    ({ mkDerivation, clckwrks, hsp, hsx2hs, text }:
     mkDerivation {
       pname = "clckwrks-theme-clckwrks";
       version = "0.4.3";
       sha256 = "0mxb48sirbhvm4vkwwgqxh7x3bahfk34x8i20zcirvh8y6xxp3pm";
       buildDepends = [ clckwrks hsp text ];
       buildTools = [ hsx2hs ];
       homepage = "http://www.clckwrks.com/";
       description = "simple bootstrap based template for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clckwrks-theme-geo-bootstrap" = callPackage
    ({ mkDerivation, clckwrks, hsp, text }:
     mkDerivation {
       pname = "clckwrks-theme-geo-bootstrap";
       version = "0.1.1";
       sha256 = "1qxik7hdz300n5lfb5xzh2md44b4xwwlr0c92y9x2na2xz41da7k";
       buildDepends = [ clckwrks hsp text ];
       homepage = "http://divshot.github.com/geo-bootstrap/";
       description = "geo bootstrap based template for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cld2" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "cld2";
       version = "0.1.0.1";
       sha256 = "0fsjp0y5f17gv3k43vbxgx7w6i2l4ralrc6g1wb0xi0gp1vrm3hd";
       editedCabalFile = "1gfgnhy9ahyq7y74mpc6gsmir8v0c2d6z81klw1zhack6pmnql30";
       buildDepends = [ text ];
       homepage = "https://github.com/dfoxfranke/haskell-cld2";
       description = "Haskell bindings to Google's Compact Language Detector 2";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "clean-home" = callPackage
    ({ mkDerivation, cmdargs, HSH, IfElse }:
     mkDerivation {
       pname = "clean-home";
       version = "0.0.4";
       sha256 = "0s894l3vjjkz94cvl5hv3vdpm934k7ila60kmr6acl7pvhppnc22";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs HSH IfElse ];
       homepage = "https://github.com/ivanperez-keera/clean-home";
       description = "Keep your home dir clean by finding old conf files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clean-unions" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "clean-unions";
       version = "0.1.1";
       sha256 = "1y4cj15s6gjcazwk0iycyc2qs7chrqcvchf4g5h4xnf2x8ld4i21";
       homepage = "https://github.com/fumieval/clean-unions";
       description = "Open unions without need for Typeable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clevercss" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "clevercss";
       version = "0.2.4";
       sha256 = "0nnczd93j160747dc11z06ds81g938bw8lnqywg7mgylsfxalznl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://sandbox.pocoo.org/clevercss-hs/";
       description = "A CSS preprocessor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cli" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cli";
       version = "0.0.4";
       sha256 = "0iychwxbmnlywv7b7fpxym0ybcbk0aba9p0pvg8brs6llz2qrn9x";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/NicolasDP/hs-cli";
       description = "Simple Command Line Interface Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "click-clack" = callPackage
    ({ mkDerivation, GLFW, Hipmunk, MonadRandom, mtl, OpenGL, random
     , StateVar, transformers
     }:
     mkDerivation {
       pname = "click-clack";
       version = "1.0.1";
       sha256 = "0ngvdq0i82qxwawqb5pqa3fscnyv1kxc3ifc3qijnn5v4py9ydd8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         GLFW Hipmunk MonadRandom mtl OpenGL random StateVar transformers
       ];
       description = "Toy game (tetris on billiard board). Hipmunk in action.";
       license = "unknown";
     }) {};

  "clientsession" = callPackage
    ({ mkDerivation, base64-bytestring, cereal, cipher-aes, cprng-aes
     , crypto-api, crypto-random, entropy, hspec, HUnit, QuickCheck
     , setenv, skein, tagged, transformers
     }:
     mkDerivation {
       pname = "clientsession";
       version = "0.9.1.1";
       sha256 = "08h0461ydhfymw2pya472n81kx5rqp7awfgxlbz2r851rl5kqmn9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base64-bytestring cereal cipher-aes cprng-aes crypto-api
         crypto-random entropy setenv skein tagged
       ];
       testDepends = [ cereal hspec HUnit QuickCheck transformers ];
       homepage = "http://github.com/yesodweb/clientsession/tree/master";
       description = "Securely store session data in a client-side cookie";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clifford" = callPackage
    ({ mkDerivation, cereal, Chart, Chart-cairo, colour, converge
     , criterion, data-default-class, data-ordlist, deepseq, derive
     , gnuplot, hspec, lens, MemoTrie, monoid-extras, nats
     , numeric-prelude, permutation, QuickCheck, reflection
     , semigroupoids, stream-fusion, tagged, vector
     }:
     mkDerivation {
       pname = "clifford";
       version = "0.1.0.14";
       sha256 = "00xxvwa60ihrd24267hzs5ssjm6nrli39qlh9gm4fkdnrzif9r4r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal Chart Chart-cairo colour converge criterion
         data-default-class data-ordlist deepseq derive gnuplot hspec lens
         MemoTrie monoid-extras nats numeric-prelude permutation QuickCheck
         reflection semigroupoids stream-fusion tagged vector
       ];
       testDepends = [ hspec nats numeric-prelude QuickCheck ];
       homepage = "http://github.com/spacekitteh/haskell-clifford";
       description = "A Clifford algebra library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clippard" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "clippard";
       version = "0.1.1";
       sha256 = "0qhi727irlkvi4ygx5qvd6h1zzz22588lymi39s0gcjir473a538";
       homepage = "https://github.com/Raynes/clippard";
       description = "A simple Haskell library for copying text to the clipboard in a cross-platform way";
       license = stdenv.lib.licenses.mit;
     }) {};

  "clipper" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "clipper";
       version = "0.0.1";
       sha256 = "0s4n8d07190yarkxpa2kjphkm6lw2ljgwcix3x6m3lxcxrvc3nr0";
       homepage = "https://github.com/chetant/clipper";
       description = "Haskell API to clipper (2d polygon union/intersection/xor/clipping API)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clippings" = callPackage
    ({ mkDerivation, assertions, bifunctors, cassava, data-default
     , filepath, parsec, safecopy, strptime, time
     }:
     mkDerivation {
       pname = "clippings";
       version = "0.1.3";
       sha256 = "0dm0cpqcv8r66zlwq7myjv7klpp43lbcwdgxs2zkg6mbsb2f1qvr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bifunctors cassava data-default parsec safecopy strptime time
       ];
       testDepends = [ assertions data-default filepath parsec time ];
       description = "A parser/generator for Kindle-format clipping files (`My Clippings.txt`),";
       license = stdenv.lib.licenses.mit;
     }) {};

  "clock" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "clock";
       version = "0.4.1.3";
       sha256 = "0wqhg8gb10lby01f0v4fl4yp23l4ilizywp5xnsbja03svnb4f0d";
       homepage = "http://corsis.github.com/clock/";
       description = "High-resolution clock functions: monotonic, realtime, cputime";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clocked" = callPackage
    ({ mkDerivation, clock, MonadCatchIO-transformers, QtCore
     , transformers
     }:
     mkDerivation {
       pname = "clocked";
       version = "0.4.1.3";
       sha256 = "1z9n4nisa73zlwch7arixg6633w3jmcqw5w97jf4p5559q874wi8";
       buildDepends = [ clock MonadCatchIO-transformers transformers ];
       pkgconfigDepends = [ QtCore ];
       homepage = "http://patch-tag.com/r/shahn/clocked/home";
       description = "timer functionality to clock IO commands";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "clogparse" = callPackage
    ({ mkDerivation, attoparsec, filepath, text, time, timezone-olson
     , timezone-series
     }:
     mkDerivation {
       pname = "clogparse";
       version = "0.2";
       sha256 = "17n5rwi64wjyv2xcxm86bawgmnpfrg7fjzwr9l3bj5jg0ggbyrbx";
       buildDepends = [
         attoparsec filepath text time timezone-olson timezone-series
       ];
       description = "Parse IRC logs such as the #haskell logs on tunes.org";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clone-all" = callPackage
    ({ mkDerivation, aeson, github, optparse-applicative, system-fileio
     , system-filepath, text, transformers
     }:
     mkDerivation {
       pname = "clone-all";
       version = "0.1.0.0";
       sha256 = "1mif1cqwpgp1wis7lplqrvv5aikdl0iv5ddazwgm6zgrxz645p09";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson github optparse-applicative system-fileio system-filepath
         text transformers
       ];
       homepage = "https://github.com/silky/clone-all";
       description = "Clone all github repositories from a given user";
       license = stdenv.lib.licenses.mit;
     }) {};

  "closure" = callPackage
    ({ mkDerivation, hashable, unordered-containers }:
     mkDerivation {
       pname = "closure";
       version = "0.1.0.0";
       sha256 = "1z9clkwjpj01g258h8bldlc759vwsgdlyppn29sr11kyani1zjwf";
       buildDepends = [ hashable unordered-containers ];
       homepage = "http://github.com/tel/closure";
       description = "Depth- and breadth-first set closures";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cloud-haskell" = callPackage
    ({ mkDerivation, distributed-process, distributed-process-platform
     , distributed-static, network-transport, rank1dynamic
     }:
     mkDerivation {
       pname = "cloud-haskell";
       version = "0.0.1.0";
       sha256 = "070rhzqv2jmwp578yizi7zw5k3i8w6xhf0mcvfknb1zk3mwnda1v";
       buildDepends = [
         distributed-process distributed-process-platform distributed-static
         network-transport rank1dynamic
       ];
       homepage = "http://github.com/haskell-distributed/cloud-haskell";
       description = "The Cloud Haskell Application Platform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cloudfront-signer" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base64-bytestring
     , crypto-pubkey-types, RSA, time
     }:
     mkDerivation {
       pname = "cloudfront-signer";
       version = "0.0.0.1";
       sha256 = "1ikjrlb421rxsj4c7dl4dw8a3kls43gzn4mapg1y9b2bkd7q6ywz";
       buildDepends = [
         asn1-encoding asn1-types base64-bytestring crypto-pubkey-types RSA
         time
       ];
       homepage = "http://github.com/cdornan/cloudfront-signer";
       description = "CloudFront URL signer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cloudyfs" = callPackage
    ({ mkDerivation, convertible, datetime, filepath, HFuse, HTTP
     , regex-base, regex-tdfa, tagsoup, timerep
     }:
     mkDerivation {
       pname = "cloudyfs";
       version = "0.0.2";
       sha256 = "0jfv3830kg3yp1vqqs75bmiwflv4y8ya86q575bsw1l695dc5lwg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         convertible datetime filepath HFuse HTTP regex-base regex-tdfa
         tagsoup timerep
       ];
       homepage = "https://github.com/bhickey/cloudyfs";
       description = "A cloud in the file system";
       license = "unknown";
     }) {};

  "cltw" = callPackage
    ({ mkDerivation, curl, mtl, random, tagsoup }:
     mkDerivation {
       pname = "cltw";
       version = "1.1.4";
       sha256 = "08nishc8ngmvx0pdksn4z8a6l8vdgm3jiyz3w6d302pwp566z4q9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ curl mtl random tagsoup ];
       homepage = "http://ui3.info/d/proj/cltw.html";
       description = "Command line Twitter utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clua" = callPackage
    ({ mkDerivation, language-c, pretty-show }:
     mkDerivation {
       pname = "clua";
       version = "0.3";
       sha256 = "0xzhpjsb9nf8xw7fa111n5gki46gz67aiyd2wr1k50pzyjrvl3vv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ language-c pretty-show ];
       homepage = "http://zwizwa.be/-/meta";
       description = "C to Lua data wrapper generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cluss" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cluss";
       version = "0.3";
       sha256 = "1q5km2f8zwnzcwnzj0khnszsgrb1x53zp0ryjwz2nfx9ajvh7zgg";
       homepage = "https://github.com/Kinokkory/cluss";
       description = "simple alternative to type classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "clustertools" = callPackage
    ({ mkDerivation, bio, QuickCheck, regex-compat, simpleargs }:
     mkDerivation {
       pname = "clustertools";
       version = "0.1.5";
       sha256 = "0in6fqzr1aki2dhbkv3vlmw17vla5m39g6msaplk4vix5yjw7vkq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio QuickCheck regex-compat simpleargs ];
       homepage = "http://malde.org/~ketil/";
       description = "Tools for manipulating sequence clusters";
       license = "GPL";
     }) {};

  "clutterhs" = callPackage
    ({ mkDerivation, c2hs, cairo, clutter, glib, gtk, mtl, pango, X11
     }:
     mkDerivation {
       pname = "clutterhs";
       version = "0.1";
       sha256 = "0mcl6pc0qjyijyqqlf1wh3548gn71kv6xy0jaqgrjddf20qlc8xl";
       buildDepends = [ cairo glib gtk mtl X11 ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ clutter glib pango ];
       description = "Bindings to the Clutter animation library";
       license = "LGPL";
     }) { inherit (pkgs) glib pango; };

  "cmaes" = callPackage
    ({ mkDerivation, doctest, doctest-prop, mtl, random, safe, strict
     , syb, vector
     }:
     mkDerivation {
       pname = "cmaes";
       version = "0.2.2";
       sha256 = "060bmnkhbwrxhalfy5zxwjzbb6mp5ffj4r0qgkv6wp7bac2nnrp8";
       buildDepends = [ mtl safe strict syb ];
       testDepends = [ doctest doctest-prop mtl random syb vector ];
       description = "CMA-ES wrapper in Haskell";
       license = "unknown";
     }) {};

  "cmath" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cmath";
       version = "0.3";
       sha256 = "1hb92cgblmwp49lv0x0ib8g557mhjk6db7ihnim75ldii2f93dnm";
       homepage = "http://code.haskell.org/~dons/code/cmath";
       description = "A binding to the standard C math library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cmathml3" = callPackage
    ({ mkDerivation, arrowapply-utils, Cabal, filepath, hxt, monads-tf
     , parsec, syb, transformers, url
     }:
     mkDerivation {
       pname = "cmathml3";
       version = "0.1";
       sha256 = "0mh6qzdlbfc1lfx7353p2qfa2j77xjlnnnnw3csmv125zha4y96d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         arrowapply-utils Cabal filepath hxt monads-tf parsec syb
         transformers url
       ];
       description = "Data model, parser, serialiser and transformations for Content MathML 3";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cmdargs" = callPackage
    ({ mkDerivation, filepath, transformers }:
     mkDerivation {
       pname = "cmdargs";
       version = "0.10.12";
       sha256 = "0axn3ycw4rijh1ka5f73gz9w330s851cpxbv39ia4xnb0l95hrjy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath transformers ];
       homepage = "http://community.haskell.org/~ndm/cmdargs/";
       description = "Command line argument processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cmdargs-browser" = callPackage
    ({ mkDerivation, cmdargs, filepath, http-types, text, transformers
     , wai, wai-handler-launch
     }:
     mkDerivation {
       pname = "cmdargs-browser";
       version = "0.1.3";
       sha256 = "1k0g2vh7sqkblzjsfvyhfiy1fcwkw0i10kgl4n2r68w7v52mmzd0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs filepath http-types text transformers wai
         wai-handler-launch
       ];
       homepage = "http://community.haskell.org/~ndm/cmdargs/";
       description = "Helper to enter cmdargs command lines using a web browser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cmdlib" = callPackage
    ({ mkDerivation, mtl, split, syb, transformers }:
     mkDerivation {
       pname = "cmdlib";
       version = "0.3.5";
       sha256 = "0218f4rl64wvvka95m969hg5y9vc29dqaawfcnk7d1qsv3hx9ydl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl split syb transformers ];
       description = "a library for command line parsing & online help";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cmdtheline" = callPackage
    ({ mkDerivation, filepath, HUnit, parsec, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "cmdtheline";
       version = "0.2.3";
       sha256 = "1jwbr34xgccjbz6nm58bdsg1vqyv87rh45yia5j36vlfbaclyb04";
       buildDepends = [ filepath parsec transformers ];
       testDepends = [
         filepath HUnit parsec test-framework test-framework-hunit
         transformers
       ];
       homepage = "http://github.com/eli-frey/cmdtheline";
       description = "Declarative command-line option parsing and documentation library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cml" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cml";
       version = "0.1.3";
       sha256 = "1hym074a8akzg3c96b1yczmdw5pgn4g0ahqxsxhg8d0kf8lzi5ph";
       homepage = "http://code.haskell.org/cml/";
       description = "Events and Channels as in Concurrent ML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cmonad" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cmonad";
       version = "0.1.1.1";
       sha256 = "07adwhpsmg3q4nhifjpdjv2dy1m08n0qkvlssmbl3b6gklvb82sk";
       description = "A library for C-like programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cmu" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cmu";
       version = "1.9";
       sha256 = "1mn6l17x7zwhc8wlbfqiaxjsvmwh6j0sr4x3gss1z32n5g03syd0";
       isLibrary = true;
       isExecutable = true;
       description = "Unification in a Commutative Monoid";
       license = "GPL";
     }) {};

  "cnc-spec-compiler" = callPackage
    ({ mkDerivation, ansi-terminal, binary, fgl, filepath, graphviz
     , HaXml, haxr, hubigraph, HUnit, mtl, parsec, prettyclass, split
     , stringtable-atom, zlib
     }:
     mkDerivation {
       pname = "cnc-spec-compiler";
       version = "0.2.0.1";
       sha256 = "0nfqglz6szbi3s8xf5i87rnac7hc8cqfyrx2rs5ydb5i439s22b0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal binary fgl filepath graphviz HaXml haxr hubigraph
         HUnit mtl parsec prettyclass split stringtable-atom zlib
       ];
       homepage = "http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/";
       description = "Compiler/Translator for CnC Specification Files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cndict" = callPackage
    ({ mkDerivation, binary, cassava, file-embed, text, vector }:
     mkDerivation {
       pname = "cndict";
       version = "0.4.0";
       sha256 = "1vxyyzlg164ybgsq48fx327sg04xwyzxn2z3vvk25h9jzmf0pvpd";
       buildDepends = [ binary cassava file-embed text vector ];
       homepage = "https://github.com/Lemmih/cndict";
       description = "Chinese/Mandarin <-> English dictionary, Chinese lexer";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "code-builder" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "code-builder";
       version = "0.1.3";
       sha256 = "1ax4c19xkszahcxvwc1wa1hrgk6ajck5sbprbplsi1gc9jj4g7jm";
       description = "Simple system for generating code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "codec-libevent" = callPackage
    ({ mkDerivation, binary, binary-strict, parsec, QuickCheck
     , regex-compat
     }:
     mkDerivation {
       pname = "codec-libevent";
       version = "0.1.2";
       sha256 = "17v7adxs65jq74ngid0iywg3p5pq5j2p9mznqwj7i53238l3p60l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary binary-strict parsec QuickCheck regex-compat
       ];
       description = "Cross-platform structure serialisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "codec-mbox" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "codec-mbox";
       version = "0.2.0.0";
       sha256 = "0kbn76g6ly1pjd9higi0k0f26hplm0jhz85b23inn0bjli14n2cl";
       description = "A library to read and write mailboxes in mbox format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "codecov-haskell" = callPackage
    ({ mkDerivation, aeson, async, cmdargs, curl, HUnit, regex-posix
     , safe, split
     }:
     mkDerivation {
       pname = "codecov-haskell";
       version = "0.1.0";
       sha256 = "0spsh55z9q91kxjv9zg2cpgmkms9g9gaa723l5i9wc4bb6nidx68";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson async cmdargs curl regex-posix safe split ];
       testDepends = [ HUnit ];
       homepage = "https://github.com/guillaume-nargeot/codecov-haskell";
       description = "Codecov.io support for Haskell.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "codemonitor" = callPackage
    ({ mkDerivation, cairo, filepath, gtk, hinotify, MissingH
     , regex-posix, time
     }:
     mkDerivation {
       pname = "codemonitor";
       version = "0.2";
       sha256 = "14jywd60mxbj5q1srxj4igs1ah0ddf8ww5k4n5d9g7cp1b1yv1mc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo filepath gtk hinotify MissingH regex-posix time
       ];
       homepage = "http://github.com/rickardlindberg/codemonitor";
       description = "Tool that automatically runs arbitrary commands when files change on disk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "codepad" = callPackage
    ({ mkDerivation, curl, mtl, network, tagsoup }:
     mkDerivation {
       pname = "codepad";
       version = "0.1";
       sha256 = "03jvbbv4cgrmk0ihz34shd1ydv5jhl1h1xiwqrln60622jlh8mr1";
       editedCabalFile = "0ym0lgdpms6gnkprfpxz3ffcp4jsxkk7gpadf8069cvp3m32pzjj";
       buildDepends = [ curl mtl network tagsoup ];
       homepage = "http://github.com/chrisdone/codepad";
       description = "Submit and retrieve paste output from CodePad.org.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "codex" = callPackage
    ({ mkDerivation, Cabal, download-curl, either, filepath, hackage-db
     , machines, machines-directory, MissingH, monad-loops
     , mono-traversable, tar, text, transformers, yaml, zlib
     }:
     mkDerivation {
       pname = "codex";
       version = "0.2.0.2";
       sha256 = "0an043cmsxc296i90pv19d8xdl7fg2fvf026lx4rly7bwskzn99x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal download-curl either filepath hackage-db machines
         machines-directory MissingH monad-loops mono-traversable tar text
         transformers yaml zlib
       ];
       homepage = "http://github.com/aloiscochard/codex";
       description = "A ctags file generator for cabal project dependencies";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "codo-notation" = callPackage
    ({ mkDerivation, comonad, haskell-src-meta, parsec, uniplate }:
     mkDerivation {
       pname = "codo-notation";
       version = "0.5.2";
       sha256 = "1bwfjg0bzph0vka1rx8m6f505l9dmj8nn6al9kmjkva18l05gsvq";
       buildDepends = [ comonad haskell-src-meta parsec uniplate ];
       description = "A notation for comonads, analogous to the do-notation for monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cofunctor" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cofunctor";
       version = "0.1.0.1";
       sha256 = "0xn4k1c7l9z3g0slbwvlfg9kpfq8jbk0qf9363qz7azv7ks1149p";
       description = "DEPRECATED: use the \"contravariant\" package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cognimeta-utils" = callPackage
    ({ mkDerivation, collections-api, comonad-transformers, data-lens
     , data-lens-fd, data-lens-template, deepseq, mtl, primitive
     , QuickCheck, stm, tagged, transformers
     }:
     mkDerivation {
       pname = "cognimeta-utils";
       version = "0.1.2";
       sha256 = "00bq5qad7x8x0fac1gb8aq97zm4pylnk7n9bg4nkhyyvwnmjsy5l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         collections-api comonad-transformers data-lens data-lens-fd
         data-lens-template deepseq mtl primitive QuickCheck stm tagged
         transformers
       ];
       homepage = "https://github.com/Cognimeta/cognimeta-utils";
       description = "Utilities for Cognimeta products (such as perdure). API may change often.";
       license = "unknown";
     }) {};

  "colada" = callPackage
    ({ mkDerivation, cereal, cmdargs, fclabels, ListZipper, monad-atom
     , mtl, split, swift-lda, text, vector
     }:
     mkDerivation {
       pname = "colada";
       version = "0.8.0.0";
       sha256 = "09a1izl99w532ldfma2zxhn6f1lsbisf3p0hy0dqkyyip01pcd8n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal cmdargs fclabels ListZipper monad-atom mtl split swift-lda
         text vector
       ];
       homepage = "https://bitbucket.org/gchrupala/colada";
       description = "Colada implements incremental word class class induction using online LDA";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "colchis" = callPackage
    ({ mkDerivation, aeson, conceit, network, network-simple, pipes
     , pipes-aeson, pipes-attoparsec, pipes-network, text, transformers
     }:
     mkDerivation {
       pname = "colchis";
       version = "0.2.0.3";
       sha256 = "1fhamxm740r59q0sazs2np1b8hv74dhhbb4ah73m94im96729rbb";
       buildDepends = [
         aeson conceit network network-simple pipes pipes-aeson
         pipes-attoparsec pipes-network text transformers
       ];
       description = "Rudimentary JSON-RPC 2.0 client over raw TCP.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "collada-output" = callPackage
    ({ mkDerivation, collada-types, SVGPath, time, vector, xml }:
     mkDerivation {
       pname = "collada-output";
       version = "0.6";
       sha256 = "1k6k2ljz9x06j0nrpbbpcgd3axamf3cgr6jyslam0xkgxzsi7w7x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ collada-types SVGPath time vector xml ];
       description = "Generate animated 3d objects in COLLADA";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "collada-types" = callPackage
    ({ mkDerivation, enumerable, OpenGL, tuple, tuple-gen, vector }:
     mkDerivation {
       pname = "collada-types";
       version = "0.3";
       sha256 = "0aw1y3ylcnpj3wwh6w8168a4mmkiayav6swyh2fq3vfjlds91xc8";
       buildDepends = [ enumerable OpenGL tuple tuple-gen vector ];
       description = "Data exchange between graphic applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "collapse-util" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "collapse-util";
       version = "0.1.0.1";
       sha256 = "02r4cz92wjm3hcih8jf5jvimw3ijwbp4x7iw90rkj05360ajikj7";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://github.com/mwotton/collapse";
       description = "utility for collapsing adjacent writes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "collections" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "collections";
       version = "0.3.1.1";
       sha256 = "0a5km8k2jwjv4gfd2vf0jiq3f9cw47dgz8f3lspmpx2b0g2pac7g";
       buildDepends = [ QuickCheck ];
       description = "Useful standard collections types and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "collections-api" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "collections-api";
       version = "1.0.0.0";
       sha256 = "0vgw1spiv6wnk11j3y45d95r3axgr1sgksb5lilnxdjj2pn4gp5l";
       buildDepends = [ QuickCheck ];
       homepage = "http://code.haskell.org/collections/";
       description = "API for collection data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "collections-base-instances" = callPackage
    ({ mkDerivation, collections-api }:
     mkDerivation {
       pname = "collections-base-instances";
       version = "1.0.0.0";
       sha256 = "0nw6wpzqsj33pnffsflc6ipjcx6lknzdnxgn4rm3vhrl5y9rgpzk";
       buildDepends = [ collections-api ];
       homepage = "http://code.haskell.org/collections/";
       description = "Useful standard collections types and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "colock" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "colock";
       version = "0.2.2";
       sha256 = "0h3y5c3c3711k2glmnydc1rlz9ff73iibcc8vf0zjzvvw9rz0xb1";
       description = "thread-friendly file locks that don't block the entire program";
       license = "LGPL";
     }) {};

  "colorize-haskell" = callPackage
    ({ mkDerivation, ansi-terminal, haskell-lexer }:
     mkDerivation {
       pname = "colorize-haskell";
       version = "1.0.1";
       sha256 = "1v4spa6vw9igjpd1dr595z5raz5fr8f485q5w9imrv8spms46xh3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ansi-terminal haskell-lexer ];
       homepage = "http://github.com/yav/colorize-haskell";
       description = "Highligt Haskell source";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "colors" = callPackage
    ({ mkDerivation, profunctors }:
     mkDerivation {
       pname = "colors";
       version = "0.2.0.1";
       sha256 = "0xl7hdp1di8gl0g28vz2lm6pbj7hihdkfnr18843016736hll4qn";
       buildDepends = [ profunctors ];
       homepage = "https://github.com/fumieval/colors";
       description = "A type for colors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "colour" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "colour";
       version = "2.3.3";
       sha256 = "1qmn1778xzg07jg9nx4k1spdz2llivpblf6wwrps1qpqjhsac5cd";
       homepage = "http://www.haskell.org/haskellwiki/Colour";
       description = "A model for human colour/color perception";
       license = stdenv.lib.licenses.mit;
     }) {};

  "coltrane" = callPackage
    ({ mkDerivation, HTTP, http-types, HUnit, mtl, regex-compat, text
     , wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "coltrane";
       version = "0.1.0.0";
       sha256 = "131arfizyniapjvc9ds6l90z7gig98imhm17k1vza5wvgjqbb5fa";
       buildDepends = [
         HTTP http-types HUnit mtl regex-compat text wai wai-extra warp
       ];
       homepage = "https://github.com/wellecks/coltrane";
       description = "A jazzy, minimal web framework for Haskell, inspired by Sinatra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "com" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "com";
       version = "1.2.3.1";
       sha256 = "1y6zm63jyigf631f2b0bqw1yhmr6hifaspqivy7qy30brmr5a27m";
       description = "Haskell COM support library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "combinat" = callPackage
    ({ mkDerivation, random, transformers }:
     mkDerivation {
       pname = "combinat";
       version = "0.2.7.0";
       sha256 = "1rch5pk0sggmdr2wmqys5i5p1cjyqdymrngjf8a2721q6nycfjjz";
       buildDepends = [ random transformers ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Generation of various combinatorial objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "combinat-diagrams" = callPackage
    ({ mkDerivation, colour, combinat, diagrams-core, diagrams-lib
     , transformers, vector-space
     }:
     mkDerivation {
       pname = "combinat-diagrams";
       version = "0.1";
       sha256 = "1m7b0qf583jgi65vg6lxvypvjal74p83iir03ma7cfrgw5s5mw2q";
       buildDepends = [
         colour combinat diagrams-core diagrams-lib transformers
         vector-space
       ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Graphical representations for various combinatorial objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "combinator-interactive" = callPackage
    ({ mkDerivation, cereal, lens, mtl, th-lift, trifecta, void }:
     mkDerivation {
       pname = "combinator-interactive";
       version = "0.1.2";
       sha256 = "0yxdy413pj6ah4d5qcpajbphfg02p0gxgs1x9salfa18fyflljc4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cereal lens mtl th-lift trifecta void ];
       homepage = "https://github.com/fumieval/combinator-interactive";
       description = "SKI Combinator interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "combinatorial-problems" = callPackage
    ({ mkDerivation, bytestring-lexing, parsec, random }:
     mkDerivation {
       pname = "combinatorial-problems";
       version = "0.0.5";
       sha256 = "1k3isi62i66xbisn48b018w7fcfhwwng1f64ca530qkk600fg850";
       buildDepends = [ bytestring-lexing parsec random ];
       homepage = "http://www.comp.leeds.ac.uk/sc06r2s/Projects/HaskellCombinatorialProblems";
       description = "A number of data structures to represent and allow the manipulation of standard combinatorial problems, used as test problems in computer science";
       license = "GPL";
     }) {};

  "combinatorics" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "combinatorics";
       version = "0.1.0";
       sha256 = "101b3lycfav6wqdqjhs0v93vgy4g3pfn5xyimip0x3alq0q2ix9a";
       homepage = "http://code.haskell.org/~wren/";
       description = "Efficient computation of common combinatoric functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "combobuffer" = callPackage
    ({ mkDerivation, vector, vector-space }:
     mkDerivation {
       pname = "combobuffer";
       version = "0.2";
       sha256 = "1zsdi9c9my6nrxpqqsy584swp4zg8lckrymfig1ywisbdfzb8rjh";
       buildDepends = [ vector vector-space ];
       homepage = "https://github.com/JohnLato/combobuffer";
       description = "Various buffer implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "command" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "command";
       version = "0.1.1";
       sha256 = "0qj6i5r1iz3d8visqpd74xwkribxzs4p66b1vgp0i3jiqgfrn2hw";
       buildDepends = [ deepseq ];
       homepage = "https://github.com/nh2/command";
       description = "Conveniently run shell commands";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "command-qq" = callPackage
    ({ mkDerivation, doctest, hspec, text }:
     mkDerivation {
       pname = "command-qq";
       version = "0.3.0.0";
       sha256 = "1bqfb4gc5ja9d9jygijqpf6014bmfcxnsvpv7c5n4f1z2aj07jy5";
       buildDepends = [ text ];
       testDepends = [ doctest hspec text ];
       homepage = "http://biegunka.github.io/command-qq/";
       description = "Quasiquoters for external commands";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "commodities" = callPackage
    ({ mkDerivation, comonad, distributive, doctest, filepath, hspec
     , hspec-expectations, keys, lens, linear, mtl, numbers, PSQueue
     , QuickCheck, semigroupoids, semigroups, text, thyme, transformers
     }:
     mkDerivation {
       pname = "commodities";
       version = "0.2.0";
       sha256 = "0xf2vp7wb3qkxkrcwhcqpqfzg9345ws890rkmibvcd21jnczhg89";
       buildDepends = [
         comonad distributive keys lens linear mtl numbers PSQueue
         semigroupoids semigroups text thyme transformers
       ];
       testDepends = [
         doctest filepath hspec hspec-expectations lens QuickCheck
         semigroups thyme transformers
       ];
       description = "Library for working with commoditized amounts and price histories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "commsec" = callPackage
    ({ mkDerivation, cipher-aes128, crypto-api, network }:
     mkDerivation {
       pname = "commsec";
       version = "0.3.5";
       sha256 = "1lshp876qm29370mpa3bh0gijcv317sf1y8vajixzz1083bkpngm";
       buildDepends = [ cipher-aes128 crypto-api network ];
       description = "Provide communications security using symmetric ephemeral keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "commsec-keyexchange" = callPackage
    ({ mkDerivation, cereal, cipher-aes128, commsec, crypto-api
     , crypto-pubkey-types, cryptohash-cryptoapi, DRBG
     , monadcryptorandom, network, RSA
     }:
     mkDerivation {
       pname = "commsec-keyexchange";
       version = "0.3.3";
       sha256 = "1c207fv429frkyb742n0r1z0kkvlwnkcxblfkrjm1lwqfkdx0prn";
       buildDepends = [
         cereal cipher-aes128 commsec crypto-api crypto-pubkey-types
         cryptohash-cryptoapi DRBG monadcryptorandom network RSA
       ];
       homepage = "https://github.com/TomMD/commsec-keyExchange";
       description = "Key agreement for commsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "comonad" = callPackage
    ({ mkDerivation, contravariant, distributive, doctest, filepath
     , semigroups, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "comonad";
       version = "4.2.2";
       sha256 = "022fcy0ijwsdnjb1b1jrwy2ypzzbzvfgj9ns0c74hrsj08gjh8j8";
       buildDepends = [
         contravariant distributive semigroups tagged transformers
         transformers-compat
       ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/comonad/";
       description = "Comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "comonad-extras" = callPackage
    ({ mkDerivation, comonad, distributive, semigroupoids, transformers
     }:
     mkDerivation {
       pname = "comonad-extras";
       version = "4.0";
       sha256 = "0irlx6rbp0cq5njxssm5a21mv7v5yccchfpn7h9hzr9fgyaxsr62";
       buildDepends = [ comonad distributive semigroupoids transformers ];
       homepage = "http://github.com/ekmett/comonad-extras/";
       description = "Exotic comonad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "comonad-random" = callPackage
    ({ mkDerivation, category-extras, random }:
     mkDerivation {
       pname = "comonad-random";
       version = "0.1.2";
       sha256 = "11jak28rpnnaswrlf2wgn91v096zkz1laq2cdhjfc7abgmkx9gay";
       buildDepends = [ category-extras random ];
       description = "Comonadic interface for random values";
       license = "unknown";
     }) {};

  "comonad-transformers" = callPackage
    ({ mkDerivation, comonad }:
     mkDerivation {
       pname = "comonad-transformers";
       version = "4.0";
       sha256 = "13zzp6r6s6c80skniphwvzxhpazbyal5854m53139kgcw560rv6z";
       buildDepends = [ comonad ];
       homepage = "http://github.com/ekmett/comonad-transformers/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "comonads-fd" = callPackage
    ({ mkDerivation, comonad }:
     mkDerivation {
       pname = "comonads-fd";
       version = "4.0";
       sha256 = "19xpv0dsz7w3a1sq1gdxwzglfal45vj2s22zb12g9mpk5rp3hw1s";
       buildDepends = [ comonad ];
       homepage = "http://github.com/ekmett/comonads-fd/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compact-map" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "compact-map";
       version = "2008.11.9";
       sha256 = "0rk2g5swblbbairwabv5azp6a7cjqywhv49prm1rz8mc361dd9by";
       buildDepends = [ binary ];
       description = "Compact Data.Map implementation using Data.Binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compact-string" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "compact-string";
       version = "0.3.1";
       sha256 = "02lqxl82jmw276mzxwsc0gmps1kb5i62im85bpjvzqwycbf3gnj8";
       homepage = "http://twan.home.fmf.nl/compact-string/";
       description = "Fast, packed and strict strings with Unicode support, based on bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compact-string-fix" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "compact-string-fix";
       version = "0.3.2";
       sha256 = "161z0lmrrqvy77ppdgz7m6nazcmlmy1azxa8rx0cgpqmyxzkf87n";
       homepage = "http://twan.home.fmf.nl/compact-string/";
       description = "Same as compact-string except with a small fix so it builds on ghc-6.12";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compdata" = callPackage
    ({ mkDerivation, deepseq, derive, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , th-expand-syns, transformers, tree-view
     }:
     mkDerivation {
       pname = "compdata";
       version = "0.9";
       sha256 = "1wk9vj834l3fc64fcsrgc9hz5f2z7461hs8lv1ldkfsixx4mxyqc";
       buildDepends = [
         deepseq derive mtl QuickCheck th-expand-syns transformers tree-view
       ];
       testDepends = [
         deepseq derive HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 th-expand-syns
         transformers
       ];
       description = "Compositional Data Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compdata-automata" = callPackage
    ({ mkDerivation, compdata, projection }:
     mkDerivation {
       pname = "compdata-automata";
       version = "0.9";
       sha256 = "1hlv6a4ywlnr86pzrlffqbg55mfkrkkxn2yir6a28bdirgi69fkf";
       editedCabalFile = "0c312ilfw7h4k0vavbciq9hghyqwpb49mwrp9kv5c7hximds3ggq";
       buildDepends = [ compdata projection ];
       description = "Tree automata on Compositional Data Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compdata-dags" = callPackage
    ({ mkDerivation, compdata, HUnit, mtl, projection, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "compdata-dags";
       version = "0.1";
       sha256 = "1ijr3lpl0g5l5xynnwwzj4rflgfgw1y2b4ldabbw5qlk4qa0gr5j";
       editedCabalFile = "0i2hyrfzswm0msjrswj5v7z13ndl89ihcx87l8wdgdmqyiibnssm";
       buildDepends = [
         compdata mtl projection unordered-containers vector
       ];
       testDepends = [
         compdata HUnit mtl projection QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
         unordered-containers vector
       ];
       description = "Compositional Data Types on DAGs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compdata-param" = callPackage
    ({ mkDerivation, compdata, HUnit, mtl, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "compdata-param";
       version = "0.8.0.2";
       sha256 = "0496i1vnawl7m7ymvf5hl3kxy352rnhxy2gni4xkfz36psnnr7fs";
       buildDepends = [ compdata mtl transformers ];
       testDepends = [
         compdata HUnit mtl test-framework test-framework-hunit transformers
       ];
       description = "Parametric Compositional Data Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compensated" = callPackage
    ({ mkDerivation, bifunctors, binary, bytes, cereal, comonad
     , deepseq, distributive, doctest, filepath, generic-deriving
     , hashable, lens, log-domain, safecopy, semigroupoids, semigroups
     , simple-reflect, vector
     }:
     mkDerivation {
       pname = "compensated";
       version = "0.6.1";
       sha256 = "026gq3ppk3id4bvkn3pdg6ljbl14gd8p4hg6i0rc13138b0mlxnh";
       buildDepends = [
         bifunctors binary bytes cereal comonad deepseq distributive
         generic-deriving hashable lens log-domain safecopy semigroupoids
         semigroups vector
       ];
       testDepends = [
         doctest filepath generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/analytics/compensated/";
       description = "Compensated floating-point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "competition" = callPackage
    ({ mkDerivation, filepath, parsec }:
     mkDerivation {
       pname = "competition";
       version = "0.2.0.0";
       sha256 = "07c6b6yai8x9i8qndimzmyp5bzhwckis8kg207n152gnskk7i3zn";
       buildDepends = [ filepath parsec ];
       homepage = "github.com/yanatan16/haskell-competition";
       description = "Helpers and runners for code competitions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "compilation" = callPackage
    ({ mkDerivation, MissingH }:
     mkDerivation {
       pname = "compilation";
       version = "0.0.0.3";
       sha256 = "0a1pp1jafra1agsx2jizdb33afzg02w6jh4a4pyw5w71kzqfrril";
       buildDepends = [ MissingH ];
       description = "Haskell functionality for quickly assembling simple compilers";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "complex-generic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "complex-generic";
       version = "0.1.1";
       sha256 = "15lqcwg3jp1whf086mlx9f5jv6sbkn53jrilhapalgcgs07nf8ll";
       homepage = "https://gitorious.org/complex-generic";
       description = "complex numbers with non-mandatory RealFloat";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "complex-integrate" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "complex-integrate";
       version = "1.0.0";
       sha256 = "0q0ffpqir4f2ch7d7p2fxgb73n7dg7xf19rg78an7i7zdl430cfj";
       homepage = "https://github.com/hijarian/complex-integrate";
       description = "A simple integration function to integrate a complex-valued complex functions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "complexity" = callPackage
    ({ mkDerivation, Chart, colour, data-accessor, hstats, parallel
     , time, transformers
     }:
     mkDerivation {
       pname = "complexity";
       version = "0.1.3";
       sha256 = "16crk93qyh0arcgqq2bx0i61cah2yhm8wwdr6sasma8y5hlw76lj";
       buildDepends = [
         Chart colour data-accessor hstats parallel time transformers
       ];
       description = "Empirical algorithmic complexity";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compose-trans" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "compose-trans";
       version = "0.1";
       sha256 = "0p2fd0knfbfjk4s0aalzrsrzpxffrykmaprxyakbgs1lmp4jyq9z";
       buildDepends = [ mtl ];
       description = "Composable monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "composition" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "composition";
       version = "1.0.1.0";
       sha256 = "1gx27vz2djiiwygcjaygjmiwjnls084b5v9km3jpimlz312qh5hc";
       homepage = "http://patch-tag.com/r/DanBurton/composition/home";
       description = "Combinators for unorthodox function composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compressed" = callPackage
    ({ mkDerivation, comonad, fingertree, hashable, keys, pointed
     , reducers, semigroupoids, semigroups, unordered-containers
     }:
     mkDerivation {
       pname = "compressed";
       version = "3.10";
       sha256 = "1y290n421knfh8k8zbcabhw24hb13xj9pkxx4h4v15yji97p5mcw";
       buildDepends = [
         comonad fingertree hashable keys pointed reducers semigroupoids
         semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/compressed/";
       description = "Compressed containers and reducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "compression" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "compression";
       version = "0.1";
       sha256 = "0cy7851i7dvn5aphg649jr3wmw9x57s29adk7qv0mvwz99fb4cpr";
       buildDepends = [ mtl ];
       homepage = "http://urchin.earth.li/~ian/cabal/compression/";
       description = "Common compression algorithms";
       license = "unknown";
     }) {};

  "computational-algebra" = callPackage
    ({ mkDerivation, algebra, equational-reasoning, heaps, lens
     , monad-loops, monomorphic, peggy, singletons, sized-vector, tagged
     , type-natural
     }:
     mkDerivation {
       pname = "computational-algebra";
       version = "0.3.0.0";
       sha256 = "09ljbspgwpg4g0fca8j10qmbc7194cjhv0l6svz2qr6zzhmb3l4x";
       buildDepends = [
         algebra equational-reasoning heaps lens monad-loops monomorphic
         peggy singletons sized-vector tagged type-natural
       ];
       homepage = "https://github.com/konn/computational-algebra";
       description = "Well-kinded computational algebra library, currently supporting Groebner basis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concatenative" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "concatenative";
       version = "1.0.1";
       sha256 = "05xwqvcdnk8bsyj698ab9jxpa1nk23pf3m7wi9mwmw0q8n99fngd";
       homepage = "https://patch-tag.com/r/salazar/concatenative/snapshot/current/content/pretty";
       description = "A library for postfix control flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "conceit" = callPackage
    ({ mkDerivation, bifunctors, exceptions, mtl, semigroupoids
     , transformers, void
     }:
     mkDerivation {
       pname = "conceit";
       version = "0.2.1.0";
       sha256 = "0hilsig5c5gajjaacfhlhapgnddc8s5557zdx00jwaarxkk83yz3";
       buildDepends = [
         bifunctors exceptions mtl semigroupoids transformers void
       ];
       description = "Concurrent actions that may fail";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concorde" = callPackage
    ({ mkDerivation, safe, temporary }:
     mkDerivation {
       pname = "concorde";
       version = "0.1";
       sha256 = "0903lrj6bzajjdr01hbld1jm6vf7assn84hqk4kgrrs1mr3ykc20";
       buildDepends = [ safe temporary ];
       description = "Simple interface to the Concorde solver for the Traveling Salesperson Problem";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concraft" = callPackage
    ({ mkDerivation, aeson, binary, cmdargs, comonad
     , crf-chain1-constrained, crf-chain2-tiers, data-lens, lazy-io
     , monad-codec, monad-ox, sgd, tagset-positional, temporary, text
     , text-binary, transformers, vector, vector-binary, zlib
     }:
     mkDerivation {
       pname = "concraft";
       version = "0.9.4";
       sha256 = "17q7mhf0n9pnxhvwk3yy61ljfifz8nhld1xhhnn13fldq34663q3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson binary cmdargs comonad crf-chain1-constrained
         crf-chain2-tiers data-lens lazy-io monad-codec monad-ox sgd
         tagset-positional temporary text text-binary transformers vector
         vector-binary zlib
       ];
       homepage = "http://zil.ipipan.waw.pl/Concraft";
       description = "Morphological disambiguation based on constrained CRFs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concraft-pl" = callPackage
    ({ mkDerivation, aeson, binary, cmdargs, concraft, lazy-io, mtl
     , network, sgd, split, tagset-positional, text, transformers
     }:
     mkDerivation {
       pname = "concraft-pl";
       version = "0.7.4";
       sha256 = "0yhq3vdg7l0ibhv0pxj70jm5lrfjk3k0xd1p6ap6im4rh3xxvgw3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson binary cmdargs concraft lazy-io mtl network sgd split
         tagset-positional text transformers
       ];
       homepage = "http://zil.ipipan.waw.pl/Concraft";
       description = "Morphological tagger for Polish";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concrete-relaxng-parser" = callPackage
    ({ mkDerivation, cmdargs, hxt, hxt-charproperties, hxt-curl
     , hxt-relaxng, hxt-tagsoup
     }:
     mkDerivation {
       pname = "concrete-relaxng-parser";
       version = "0.1.1";
       sha256 = "1w4bg284fcnd15yg7097d8sh0rzxr76zlrr1bfj2dksw8ddy3jda";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs hxt hxt-charproperties hxt-curl hxt-relaxng hxt-tagsoup
       ];
       description = "A parser driven by a standard RELAX NG schema with concrete syntax extensions";
       license = "GPL";
     }) {};

  "concrete-typerep" = callPackage
    ({ mkDerivation, binary, hashable, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "concrete-typerep";
       version = "0.1.0.2";
       sha256 = "07wy8drg4723zdy2172jrcvd5ir2c4ggcfz1n33jhm9iv3cl2app";
       buildDepends = [ binary hashable ];
       testDepends = [
         binary hashable QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Binary and Hashable instances for TypeRep";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concurrent-barrier" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "concurrent-barrier";
       version = "0.1.2";
       sha256 = "13idx7w5k8rk3qqls3yn9xqwk116xsqb36ya3vxkb5x4q4vix3mv";
       homepage = "https://github.com/jsgf/concurrent-barrier";
       description = "Simple thread barriers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concurrent-dns-cache" = callPackage
    ({ mkDerivation, async, dns, hashable, hspec, iproute, network, stm
     , time
     }:
     mkDerivation {
       pname = "concurrent-dns-cache";
       version = "0.0.1";
       sha256 = "0awba7ar4iky211psq5d44snd5j75ddvl6klalriic4i5w41dhv2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ async dns hashable iproute network stm time ];
       testDepends = [ async dns hspec ];
       description = "Concurrent DNS cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concurrent-extra" = callPackage
    ({ mkDerivation, async, HUnit, random, stm, test-framework
     , test-framework-hunit, unbounded-delays
     }:
     mkDerivation {
       pname = "concurrent-extra";
       version = "0.7.0.9";
       sha256 = "19bqm0brnbhhmp5nypi995p27mna7kd33xzw0kf7yx2w2p2kb1aw";
       buildDepends = [ stm unbounded-delays ];
       testDepends = [
         async HUnit random stm test-framework test-framework-hunit
         unbounded-delays
       ];
       homepage = "https://github.com/basvandijk/concurrent-extra";
       description = "Extra concurrency primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concurrent-sa" = callPackage
    ({ mkDerivation, MonadRandom }:
     mkDerivation {
       pname = "concurrent-sa";
       version = "1.0.1";
       sha256 = "1szvw0vih5jx2hvgb3h7mqh05im3pw687h7dshiy4ii5vs9pi6d6";
       buildDepends = [ MonadRandom ];
       description = "Concurrent simulated annealing system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concurrent-split" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "concurrent-split";
       version = "0.0";
       sha256 = "1g186wm8na81hnrfhb40xq6yyhs544k8plxpj3gphm3a00fd1ayr";
       description = "MVars and Channels with distinguished input and output side";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concurrent-state" = callPackage
    ({ mkDerivation, exceptions, mtl, stm, transformers }:
     mkDerivation {
       pname = "concurrent-state";
       version = "0.6.0.0";
       sha256 = "0b9lndzqm451j9wv2694gjd9w9j2vmhp32j57fqnq43pq8a1h1z6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ exceptions mtl stm transformers ];
       homepage = "https://github.com/joelteon/concurrent-state";
       description = "MTL-like library using TVars";
       license = stdenv.lib.licenses.mit;
     }) {};

  "concurrent-supply" = callPackage
    ({ mkDerivation, hashable }:
     mkDerivation {
       pname = "concurrent-supply";
       version = "0.1.7";
       sha256 = "0crg4rm5wibw9h6lmsi43d280xg1xr9xbgqr9s4inxq7x0yyn68c";
       buildDepends = [ hashable ];
       homepage = "http://github.com/ekmett/concurrent-supply/";
       description = "A fast concurrent unique identifier supply with a pure API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "concurrentoutput" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "concurrentoutput";
       version = "0.2.0.2";
       sha256 = "0fd372awmxrngbcb2phyzy3az9j2327kdhjnm7c5mm808vix67a8";
       description = "Ungarble output from several threads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cond" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cond";
       version = "0.4.1.1";
       sha256 = "12xcjxli1scd4asr4zc77i5q9qka2100gx97hv3vv12l7gj7d703";
       homepage = "https://github.com/kallisti-dev/cond";
       description = "Basic conditional and boolean operators with monadic variants";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "condor" = callPackage
    ({ mkDerivation, binary, Cabal, filepath, glider-nlp, HUnit, text
     }:
     mkDerivation {
       pname = "condor";
       version = "0.3";
       sha256 = "0ahikfb6h2clkx3pi6a7gyp39jhv2am98vyyaknyd1nvfvxl96x7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary filepath glider-nlp text ];
       testDepends = [ binary Cabal glider-nlp HUnit text ];
       homepage = "https://github.com/klangner/Condor";
       description = "Information retrieval library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "condorcet" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "condorcet";
       version = "0.0.1";
       sha256 = "1raf8mrnfnn90ymcnyhqf1kzb9mpfsk83qlmajibjd8n94iq76nd";
       homepage = "http://neugierig.org/software/darcs/condorcet";
       description = "Library for Condorcet voting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "conductive-base" = callPackage
    ({ mkDerivation, random, stm, time }:
     mkDerivation {
       pname = "conductive-base";
       version = "0.3";
       sha256 = "1jdslfnwyh7l10xhk9i0293p0qnw0xsd70d5xgpc6xlijhrsg8wp";
       buildDepends = [ random stm time ];
       homepage = "http://www.renickbell.net/doku.php?id=conductive-base";
       description = "a library for live coding and real-time musical applications";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "conductive-clock" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "conductive-clock";
       version = "0.2";
       sha256 = "1plml14h5d31jr3bvjjgaxcdqssxqfwwnbz9c5gvjlds6lla145p";
       homepage = "http://www.renickbell.net/doku.php?id=conductive-clock";
       description = "a library for displaying musical time in a terminal-based clock";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "conductive-hsc3" = callPackage
    ({ mkDerivation, conductive-base, conductive-song, filepath, hosc
     , hsc3, random
     }:
     mkDerivation {
       pname = "conductive-hsc3";
       version = "0.3.1";
       sha256 = "1z037753mxkfqbqqrlkpg5a6z9afpjj16bfplsmbbx3r3vrxbkpa";
       buildDepends = [
         conductive-base conductive-song filepath hosc hsc3 random
       ];
       homepage = "http://www.renickbell.net/doku.php?id=conductive-hsc3";
       description = "a library with examples of using Conductive with hsc3";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "conductive-song" = callPackage
    ({ mkDerivation, conductive-base, random }:
     mkDerivation {
       pname = "conductive-song";
       version = "0.2";
       sha256 = "16bdsjv64fc3ydv230rja5q9rqzlr4vd9mh3jabiyahck44imrvi";
       buildDepends = [ conductive-base random ];
       homepage = "http://www.renickbell.net/doku.php?id=conductive-song";
       description = "a library of functions which are useful for composing music";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "conduit" = callPackage
    ({ mkDerivation, exceptions, hspec, lifted-base, mmorph
     , monad-control, mtl, QuickCheck, resourcet, safe, transformers
     , transformers-base, void
     }:
     mkDerivation {
       pname = "conduit";
       version = "1.2.3";
       sha256 = "1n4cc5mij9q5wrnm394a2dka7vbnnr9c2kg5d3f4sl1fh156lf6n";
       buildDepends = [
         exceptions lifted-base mmorph monad-control mtl resourcet
         transformers transformers-base void
       ];
       testDepends = [
         exceptions hspec mtl QuickCheck resourcet safe transformers void
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Streaming data processing library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "conduit-combinators" = callPackage
    ({ mkDerivation, base16-bytestring, base64-bytestring, chunked-data
     , conduit, conduit-extra, hspec, monad-control, mono-traversable
     , mtl, mwc-random, primitive, QuickCheck, resourcet, safe, silently
     , system-fileio, system-filepath, text, transformers
     , transformers-base, unix-compat, vector, void
     }:
     mkDerivation {
       pname = "conduit-combinators";
       version = "0.3.0.4";
       sha256 = "1aphk79r3ibpb9gykdnz55isp7kf48jhz4h4vgplb0ndbmz8f8zm";
       buildDepends = [
         base16-bytestring base64-bytestring chunked-data conduit
         conduit-extra monad-control mono-traversable mwc-random primitive
         resourcet system-fileio system-filepath text transformers
         transformers-base unix-compat vector void
       ];
       testDepends = [
         base16-bytestring base64-bytestring chunked-data conduit hspec
         mono-traversable mtl mwc-random QuickCheck safe silently
         system-filepath text transformers vector
       ];
       homepage = "https://github.com/fpco/conduit-combinators";
       description = "Commonly used conduit functions, for both chunked and unchunked data";
       license = stdenv.lib.licenses.mit;
     }) {};

  "conduit-connection" = callPackage
    ({ mkDerivation, conduit, connection, HUnit, network, resourcet
     , test-framework, test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "conduit-connection";
       version = "0.1.0.1";
       sha256 = "1z3i2s8xl02qb4wfnmqd92kzmbp2jb09msywnzgawyxs5aghy0n4";
       buildDepends = [ conduit connection resourcet transformers ];
       testDepends = [
         conduit connection HUnit network resourcet test-framework
         test-framework-hunit transformers
       ];
       homepage = "https://github.com/sdroege/conduit-connection";
       description = "Conduit source and sink for Network.Connection.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "conduit-extra" = callPackage
    ({ mkDerivation, async, attoparsec, blaze-builder, conduit
     , exceptions, filepath, hspec, monad-control, network, primitive
     , resourcet, stm, streaming-commons, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "conduit-extra";
       version = "1.1.5.1";
       sha256 = "06k36g6cfd3pn0cffy8ya5biqz831qy1wfqjyhh5dhib20dld8c1";
       buildDepends = [
         attoparsec blaze-builder conduit filepath monad-control network
         primitive resourcet stm streaming-commons text transformers
         transformers-base
       ];
       testDepends = [
         async attoparsec blaze-builder conduit exceptions hspec resourcet
         stm text transformers transformers-base
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Batteries included conduit: adapters for common libraries";
       license = stdenv.lib.licenses.mit;
     }) {};

  "conduit-iconv" = callPackage
    ({ mkDerivation, conduit, mtl, QuickCheck, test-framework
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "conduit-iconv";
       version = "0.1.1.0";
       sha256 = "0bnak5dpqgdgybi62w1rbmr9brbcqv4i2v345x0m275gzsz0i84h";
       buildDepends = [ conduit ];
       testDepends = [
         conduit mtl QuickCheck test-framework test-framework-quickcheck2
         text
       ];
       homepage = "https://github.com/sdroege/conduit-iconv";
       description = "Conduit for character encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "conduit-network-stream" = callPackage
    ({ mkDerivation, conduit, mtl, network-conduit, resourcet }:
     mkDerivation {
       pname = "conduit-network-stream";
       version = "0.2";
       sha256 = "0ch0b23z7k4kxnbkvfd3gaxc7xrnlbjz7hv0pshp4k6xqg2bymv4";
       buildDepends = [ conduit mtl network-conduit resourcet ];
       description = "A base layer for network protocols using Conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "conduit-resumablesink" = callPackage
    ({ mkDerivation, conduit, hspec, transformers, void }:
     mkDerivation {
       pname = "conduit-resumablesink";
       version = "0.1.1";
       sha256 = "1bqdpnhqjh4dhvppsa8nlgja0jpdw48kxywz2999sp5hi53qxdfg";
       buildDepends = [ conduit void ];
       testDepends = [ conduit hspec transformers void ];
       homepage = "http://github.com/A1kmm/conduit-resumablesink";
       description = "Allows conduit to resume sinks to feed multiple sources into it";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "conf" = callPackage
    ({ mkDerivation, haskell-src }:
     mkDerivation {
       pname = "conf";
       version = "0.1.0.0";
       sha256 = "15zd72l2izdiw79hldf34pymxc4d9r06db91x6p2mfv2i31wy2n2";
       buildDepends = [ haskell-src ];
       description = "Parser for Haskell-based configuration files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "config-select" = callPackage
    ({ mkDerivation, filepath, vty-menu }:
     mkDerivation {
       pname = "config-select";
       version = "0.0.1";
       sha256 = "1b1fs42c5y5sixgag972m5hb6xwbwp1d64p0gadqg9mg1vknl34y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath vty-menu ];
       description = "A small program for swapping out dot files";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "configuration" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "configuration";
       version = "0.1.1";
       sha256 = "1jqc5xpbxrlnpxk2yci861gpxl5c9vm9lffchrpp1hk8ag5wkxk1";
       description = "Simple data type for application configuration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "configuration-tools" = callPackage
    ({ mkDerivation, aeson, attoparsec, base-unicode-symbols, Cabal
     , case-insensitive, dlist, errors, mtl, network-uri
     , optparse-applicative, profunctors, text, transformers
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "configuration-tools";
       version = "0.2.7";
       sha256 = "0lx5cix1kf50kvsak75gwhbbrgp2d3ji0ja4x0jnrh5n1xv0n812";
       buildDepends = [
         aeson attoparsec base-unicode-symbols Cabal case-insensitive dlist
         errors mtl network-uri optparse-applicative profunctors text
         transformers unordered-containers yaml
       ];
       testDepends = [ base-unicode-symbols errors mtl ];
       homepage = "https://github.com/alephcloud/hs-configuration-tools";
       description = "Tools for specifying and parsing configurations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "configurator" = callPackage
    ({ mkDerivation, attoparsec, filepath, hashable, HUnit
     , test-framework, test-framework-hunit, text, unix-compat
     , unordered-containers
     }:
     mkDerivation {
       pname = "configurator";
       version = "0.3.0.0";
       sha256 = "1d1iq1knwiq6ia5g64rw5hqm6dakz912qj13r89737rfcxmrkfbf";
       buildDepends = [
         attoparsec hashable text unix-compat unordered-containers
       ];
       testDepends = [
         filepath HUnit test-framework test-framework-hunit text
       ];
       homepage = "http://github.com/bos/configurator";
       description = "Configuration management";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "confsolve" = callPackage
    ({ mkDerivation, attoparsec, cmdargs, system-fileio
     , system-filepath, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "confsolve";
       version = "0.5.3";
       sha256 = "10x3ykg76imw8vgd9jh6zn8cdi8aamdqqwmsjc3qqmy30jqff2ls";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec cmdargs system-fileio system-filepath text time
         unordered-containers
       ];
       description = "A command line tool for resolving conflicts of file synchronizers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "congruence-relation" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "congruence-relation";
       version = "0.1.0.0";
       sha256 = "1pj4kby5pba1xfz2fvv2lij7h2i8crf3qkhgs3rp4ziay0jkg18v";
       description = "Decidable congruence relations for Haskell: up to you whether this is a joke";
       license = stdenv.lib.licenses.mit;
     }) {};

  "conjugateGradient" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "conjugateGradient";
       version = "2.2";
       sha256 = "1is3j61ra1whjpm8rq89yj9rscqj1ipgqlnh1nwvyzi2nggl06ya";
       buildDepends = [ random ];
       homepage = "http://github.com/LeventErkok/conjugateGradient";
       description = "Sparse matrix linear-equation solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "conjure" = callPackage
    ({ mkDerivation, filepath, html, HTTP, mtl, network, parsec, random
     , stm
     }:
     mkDerivation {
       pname = "conjure";
       version = "0.1";
       sha256 = "02a33940rnwq5bzqx50fjy76q0z6nimsg2fk3q17ai4kvi0rw0p3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath html HTTP mtl network parsec random stm
       ];
       description = "A BitTorrent client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "connection" = callPackage
    ({ mkDerivation, cprng-aes, data-default-class, network, socks, tls
     , x509, x509-store, x509-system, x509-validation
     }:
     mkDerivation {
       pname = "connection";
       version = "0.2.3";
       sha256 = "02mqn19pssdak82jw38p3cbwjyfvmjc6fawgx5981hzbdgb64vsb";
       buildDepends = [
         cprng-aes data-default-class network socks tls x509 x509-store
         x509-system x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-connection";
       description = "Simple and easy network connections API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "connection-pool" = callPackage
    ({ mkDerivation, between, data-default-class, monad-control
     , network, resource-pool, streaming-commons, time
     , transformers-base
     }:
     mkDerivation {
       pname = "connection-pool";
       version = "0.1.1.0";
       sha256 = "08mfl5gwbxzkf6dvqvshmzpjy02f46avimw8ss66br2397bi0qj7";
       buildDepends = [
         between data-default-class monad-control network resource-pool
         streaming-commons time transformers-base
       ];
       homepage = "https://github.com/trskop/connection-pool";
       description = "Connection pool built on top of resource-pool and streaming-commons";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "consistent" = callPackage
    ({ mkDerivation, lifted-async, lifted-base, monad-control, stm
     , transformers, transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "consistent";
       version = "0.0.1";
       sha256 = "003vnmh6mbjz08msnvnjfwwfsn8m15fa9apr5igkvscdqrr5hzd5";
       buildDepends = [
         lifted-async lifted-base monad-control stm transformers
         transformers-base unordered-containers
       ];
       testDepends = [ lifted-async transformers ];
       description = "Eventually consistent STM transactions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "console-program" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, fez-conf, haskeline
     , parsec, parsec-extra, split, transformers, utility-ht
     }:
     mkDerivation {
       pname = "console-program";
       version = "0.3.2.0";
       sha256 = "1517vwn9l10hihw7ysj812x7cypf5gca468sdzgdlcwvqa8wsr3m";
       buildDepends = [
         ansi-terminal ansi-wl-pprint fez-conf haskeline parsec parsec-extra
         split transformers utility-ht
       ];
       description = "Interpret the command line and contents of a config file as commands and options";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "const-math-ghc-plugin" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "const-math-ghc-plugin";
       version = "1.0.0.0";
       sha256 = "1fcj3ssfyxnq4cmb3lr5cg7qkgnkhf1ra0469cbw61gr2fl3kzdl";
       homepage = "https://github.com/kfish/const-math-ghc-plugin";
       description = "Compiler plugin for constant math elimination";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "constrained-normal" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "constrained-normal";
       version = "1.0.2";
       sha256 = "1mq0w2qndrjx9ap9dkyxvz91fbszsnwlhh4hnm9g2dx020fawgac";
       homepage = "http://dx.doi.org/10.1145/2500365.2500602";
       description = "Normalised Deep Embeddings for Constrained Type-Class Instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "constraints" = callPackage
    ({ mkDerivation, newtype }:
     mkDerivation {
       pname = "constraints";
       version = "0.4";
       sha256 = "0nnplylzbcw884jgsd4i46z75dkiyx4166j5fym5zdnwhyj75sp5";
       buildDepends = [ newtype ];
       homepage = "http://github.com/ekmett/constraints/";
       description = "Constraint manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "constructible" = callPackage
    ({ mkDerivation, arithmoi, binary-search, complex-generic }:
     mkDerivation {
       pname = "constructible";
       version = "0.1.0.1";
       sha256 = "0d3x92h194y6q8qn11prj05gcnv01vmbvlcsvb1zxgp51qmv1aih";
       buildDepends = [ arithmoi binary-search complex-generic ];
       homepage = "http://andersk.mit.edu/haskell/constructible/";
       description = "Exact computation with constructible real numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "constructive-algebra" = callPackage
    ({ mkDerivation, QuickCheck, type-level }:
     mkDerivation {
       pname = "constructive-algebra";
       version = "0.3.0";
       sha256 = "17ab0vkq5w3zwh76ws7b82wbc0871qdmvrxhxga78h3h0axjiz1x";
       buildDepends = [ QuickCheck type-level ];
       description = "A library of constructive algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "container-classes" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "container-classes";
       version = "0.0.0.0";
       sha256 = "18mx50mp9pv1a33kcwmckz6r4a0j6rlc1165ivn9cj8iiwpmd6pv";
       description = "Generic classes for interacting with different container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "containers" = callPackage
    ({ mkDerivation, ChasingBottoms, deepseq, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "containers";
       version = "0.5.5.1";
       sha256 = "08xd9v7q5iiy0aywl7kzq5qv8455xkgq2bljx8f5p6ywyxys8z2b";
       buildDepends = [ deepseq ];
       testDepends = [
         ChasingBottoms deepseq HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "Assorted concrete container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "containers-benchmark" = callPackage
    ({ mkDerivation, criterion, deepseq, random }:
     mkDerivation {
       pname = "containers-benchmark";
       version = "1.1.0.0";
       sha256 = "11h88lgwgiyacv9b9k96aih95ydjq1i4ny03z0zw8iyd3c0yi7m0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ criterion deepseq random ];
       homepage = "http://git.auryn.cz/haskell/containers-benchmark/";
       description = "Extensive benchmark suite for containers package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "containers-deepseq" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "containers-deepseq";
       version = "0.1.0.1";
       sha256 = "0l9d7hj66fygpsbjw6wy4l11c9cw739lvkrypapwihav7jzva541";
       buildDepends = [ deepseq ];
       description = "Provide orphan NFData instances for containers as needed. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "containers-unicode-symbols" = callPackage
    ({ mkDerivation, base-unicode-symbols }:
     mkDerivation {
       pname = "containers-unicode-symbols";
       version = "0.3.1.1";
       sha256 = "0ccv7rqkykfk5wmr73mc0kwrnwyzakgp5x495dgwn5nila3g4ma6";
       buildDepends = [ base-unicode-symbols ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "context-stack" = callPackage
    ({ mkDerivation, classy-prelude, mtl, unordered-containers }:
     mkDerivation {
       pname = "context-stack";
       version = "0.1.0.1";
       sha256 = "0y51xlva4364658bgbchcasbq5pka2ixlvhdf9g38xwlmhfg736x";
       buildDepends = [ classy-prelude mtl unordered-containers ];
       homepage = "http://github.com/thinkpad20/context-stack";
       description = "An abstraction of a stack and stack-based monadic context";
       license = stdenv.lib.licenses.mit;
     }) {};

  "continue" = callPackage
    ({ mkDerivation, bifunctors, monad-control, mtl, semigroupoids
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "continue";
       version = "0.2.0";
       sha256 = "0iyqwqbzmk8v4j6xdmfir8mdxjgzl1dh76c9ngwzyccpv7xbz59a";
       buildDepends = [
         bifunctors monad-control mtl semigroupoids transformers
         transformers-base
       ];
       description = "Monads with suspension and arbitrary-spot reentry";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "continued-fractions" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "continued-fractions";
       version = "0.9.1.1";
       sha256 = "0gqp1yazmmmdf04saa306jdsf8r5s98fll9rnm8ff6jzr87nvnnh";
       homepage = "/dev/null";
       description = "Continued fractions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "continuum" = callPackage
    ({ mkDerivation, cereal, data-default, foldl, hyperleveldb
     , leveldb-haskell-fork, mtl, nanomsg-haskell, parallel-io
     , resourcet, stm, suspend, time, timers, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "continuum";
       version = "0.1.0.7";
       sha256 = "0viqn05l4xjwb3w2qbldxmwv0dj1bzwbvjcgczj1clhdx2zdgfx6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal data-default foldl leveldb-haskell-fork mtl nanomsg-haskell
         parallel-io resourcet stm suspend time timers transformers
         transformers-base
       ];
       extraLibraries = [ hyperleveldb ];
       license = stdenv.lib.licenses.mit;
     }) {};

  "continuum-client" = callPackage
    ({ mkDerivation, cereal, mtl, nanomsg-haskell, time }:
     mkDerivation {
       pname = "continuum-client";
       version = "0.1.0.0";
       sha256 = "0qv7dz2h3aay4ak5nz38wp3wrrk2zzg2g58xdlglvml08hpxsf7k";
       buildDepends = [ cereal mtl nanomsg-haskell time ];
       license = stdenv.lib.licenses.mit;
     }) {};

  "contravariant" = callPackage
    ({ mkDerivation, semigroups, transformers, transformers-compat
     , void
     }:
     mkDerivation {
       pname = "contravariant";
       version = "1.2";
       sha256 = "0gzk9b3xig48jvqz9983a7kziyb2n9z329kn6cqw1k0p8w2h3l8f";
       buildDepends = [
         semigroups transformers transformers-compat void
       ];
       homepage = "http://github.com/ekmett/contravariant/";
       description = "Contravariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "control-bool" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "control-bool";
       version = "0.2.1";
       sha256 = "10amxm1ff7xhd8g66n65wkbb8d17n77v1nmwxkbzhrask398asp4";
       homepage = "https://github.com/fumieval/control-bool";
       description = "Useful combinators for boolean expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "control-event" = callPackage
    ({ mkDerivation, stm, time }:
     mkDerivation {
       pname = "control-event";
       version = "1.2.1.1";
       sha256 = "0hwsidsxnzi4b3aphn3f7lsf1z508ql6cnhfq6zbqfsvcynm7565";
       buildDepends = [ stm time ];
       description = "Event scheduling system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "control-monad-attempt" = callPackage
    ({ mkDerivation, attempt, transformers }:
     mkDerivation {
       pname = "control-monad-attempt";
       version = "0.3.0.1";
       sha256 = "140n27vdbyjz5qycrwlrmyd7s48fxcl6msl16g7czg40k5y23j5s";
       buildDepends = [ attempt transformers ];
       homepage = "http://github.com/snoyberg/control-monad-attempt";
       description = "Monad transformer for attempt. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "control-monad-exception" = callPackage
    ({ mkDerivation, failure, lifted-base, monad-control, monadloc
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "control-monad-exception";
       version = "0.11.1";
       sha256 = "1lzv5xggc7nyw62jq9plc3lzg06yx3sbd9jzji0pc6xcbqn2m4qn";
       buildDepends = [
         failure lifted-base monad-control monadloc transformers
         transformers-base
       ];
       homepage = "http://pepeiborra.github.com/control-monad-exception";
       description = "Explicitly typed, checked exceptions with stack traces";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-exception-monadsfd" = callPackage
    ({ mkDerivation, control-monad-exception, monads-fd, transformers
     }:
     mkDerivation {
       pname = "control-monad-exception-monadsfd";
       version = "0.10.3";
       sha256 = "1izyxqry863jg9i88gcs7cib39q9c2mnm74mxdyl1d84kj1hrnim";
       buildDepends = [ control-monad-exception monads-fd transformers ];
       homepage = "http://pepeiborra.github.com/control-monad-exception";
       description = "Monads-fd instances for the EMT exceptions monad transformer";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-exception-monadstf" = callPackage
    ({ mkDerivation, control-monad-exception, monads-tf, transformers
     }:
     mkDerivation {
       pname = "control-monad-exception-monadstf";
       version = "0.10.3";
       sha256 = "1qj4y71g5p6b4aa5wn5fp4i5c9iw0pdrqs9yvzr6f41v6knw16za";
       buildDepends = [ control-monad-exception monads-tf transformers ];
       homepage = "http://pepeiborra.github.com/control-monad-exception";
       description = "Monads-tf instances for the EMT exceptions monad transformer";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-exception-mtl" = callPackage
    ({ mkDerivation, control-monad-exception, mtl }:
     mkDerivation {
       pname = "control-monad-exception-mtl";
       version = "0.10.3";
       sha256 = "1wwqn3xcd2fspfd2cnf9cym0cbbgvlajr3pkx7f2v3b37mx6blni";
       buildDepends = [ control-monad-exception mtl ];
       homepage = "http://pepeiborra.github.com/control-monad-exception";
       description = "MTL instances for the EMT exceptions monad transformer";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-failure" = callPackage
    ({ mkDerivation, failure, transformers }:
     mkDerivation {
       pname = "control-monad-failure";
       version = "0.7.0.1";
       sha256 = "1g304wb1fhx81iw2vv7nv6cp2qmy69frwiv3vax85lxw03s4nlkq";
       buildDepends = [ failure transformers ];
       homepage = "http://github.com/pepeiborra/control-monad-failure";
       description = "A class for monads which can fail with an error. (deprecated)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-failure-mtl" = callPackage
    ({ mkDerivation, failure, mtl }:
     mkDerivation {
       pname = "control-monad-failure-mtl";
       version = "0.7.1";
       sha256 = "0j9i85vq033789vx2589mfqwk954hqy1wla527ssbyf05k6vkn8j";
       buildDepends = [ failure mtl ];
       homepage = "http://github.com/pepeiborra/control-monad-failure";
       description = "A class for monads which can fail with an error for mtl 1 (deprecated)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-free" = callPackage
    ({ mkDerivation, deepseq, transformers }:
     mkDerivation {
       pname = "control-monad-free";
       version = "0.5.3";
       sha256 = "1igwawcdpg8irayjax1xdrlpa9587k1v4y28ib3xfb7yk0xv7vk1";
       buildDepends = [ deepseq transformers ];
       homepage = "http://github.com/pepeiborra/control-monad-free";
       description = "Free monads and monad transformers";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-loop" = callPackage
    ({ mkDerivation, transformers, transformers-base }:
     mkDerivation {
       pname = "control-monad-loop";
       version = "0.1";
       sha256 = "003k4pp6wgn30m9ksbh8680f0klzsvd90wsl9jpqs9lpg14hi6zj";
       buildDepends = [ transformers transformers-base ];
       homepage = "https://github.com/joeyadams/haskell-control-monad-loop";
       description = "Simple monad transformer for imperative-style loops";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "control-monad-omega" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "control-monad-omega";
       version = "0.3.1";
       sha256 = "11hirysr76i01qj8rm22xjcrv2qwxgwjlrqqyd1dsnnvypn9hfrq";
       homepage = "http://github.com/luqui/control-monad-omega";
       description = "A breadth-first list monad";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "control-monad-queue" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "control-monad-queue";
       version = "0.2";
       sha256 = "15syy24v1a2h25j4ijddi9l0pmp84wq9hlryh18f1jvqm8apc8vs";
       description = "Reusable corecursive queues, via continuations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "control-timeout" = callPackage
    ({ mkDerivation, stm, time }:
     mkDerivation {
       pname = "control-timeout";
       version = "0.1.2";
       sha256 = "1g1x6c4dafckwcw48v83f3nm2sxv8kynwv8ib236ay913ycgayvg";
       buildDepends = [ stm time ];
       description = "Timeout handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "contstuff" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "contstuff";
       version = "1.2.6";
       sha256 = "0rw2bslajjch057fsxf881wi39bsd9y6196j0kb0lz47r0zn8003";
       buildDepends = [ transformers ];
       homepage = "http://haskell.org/haskellwiki/Contstuff";
       description = "Fast, easy to use CPS-based monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "contstuff-monads-tf" = callPackage
    ({ mkDerivation, contstuff, monads-tf }:
     mkDerivation {
       pname = "contstuff-monads-tf";
       version = "0.2.1";
       sha256 = "0j4y76ar0m642jxcyrvlrxagawrlq637cvx3fqprw5sl5cslgxh5";
       buildDepends = [ contstuff monads-tf ];
       description = "ContStuff instances for monads-tf transformers (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "contstuff-transformers" = callPackage
    ({ mkDerivation, contstuff, transformers }:
     mkDerivation {
       pname = "contstuff-transformers";
       version = "0.1.1";
       sha256 = "0b5vskp1bxqpi4ffcxwjw6kr0jd6n8v8jlhf03p54ckfd5ym4ai6";
       buildDepends = [ contstuff transformers ];
       description = "Deprecated interface between contstuff 0.7.0 and the transformers package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "converge" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "converge";
       version = "0.1.0.1";
       sha256 = "0y28m7kgphknra0w2kzf0g4m2bdj604nr3f22xng46nl7kljbpvj";
       homepage = "/dev/null";
       description = "Limit operations for converging sequences";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "convertible" = callPackage
    ({ mkDerivation, mtl, text, time }:
     mkDerivation {
       pname = "convertible";
       version = "1.1.0.0";
       sha256 = "0pc3z4jfjna1rz5wlfimw9fyhpasmdnwvava883s401760y99i0k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl text time ];
       homepage = "http://hackage.haskell.org/cgi-bin/hackage-scripts/package/convertible";
       description = "Typeclasses and instances for converting between types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "convertible-ascii" = callPackage
    ({ mkDerivation, ascii, base-unicode-symbols, blaze-builder
     , convertible-text, failure, text
     }:
     mkDerivation {
       pname = "convertible-ascii";
       version = "0.1.0.1";
       sha256 = "0yzfq0r430ziclxn44k9x3jwl675gs3lafr5d1cb6y9j20fl1sjw";
       buildDepends = [
         ascii base-unicode-symbols blaze-builder convertible-text failure
         text
       ];
       homepage = "https://github.com/phonohawk/convertible-ascii";
       description = "convertible instances for ascii";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "convertible-text" = callPackage
    ({ mkDerivation, attempt, text, time }:
     mkDerivation {
       pname = "convertible-text";
       version = "0.4.0.2";
       sha256 = "1wqpl9dms1rsd24d00f18l9sm601nm6kr7h4ig8y70jdzy8w73fz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attempt text time ];
       homepage = "http://github.com/snoyberg/convertible/tree/text";
       description = "Typeclasses and instances for converting between types (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cookbook" = callPackage
    ({ mkDerivation, strict }:
     mkDerivation {
       pname = "cookbook";
       version = "3.0.0.1";
       sha256 = "1mhj4g7bg6gi1wx8pshwl4n37vgqacnssh5hwskyaajy4gqz6hki";
       buildDepends = [ strict ];
       description = "Tiered general-purpose libraries with domain-specific applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cookie" = callPackage
    ({ mkDerivation, blaze-builder, data-default, deepseq, HUnit
     , QuickCheck, tasty, tasty-hunit, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "cookie";
       version = "0.4.1.4";
       sha256 = "0axvljw34cjw47fxwxqql8rvjsyp9gxfbaijmysy5j10kx8s931d";
       buildDepends = [ blaze-builder data-default deepseq text time ];
       testDepends = [
         blaze-builder HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
         text time
       ];
       homepage = "http://github.com/snoyberg/cookie";
       description = "HTTP cookie parsing and rendering";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "coordinate" = callPackage
    ({ mkDerivation, doctest, filepath, lens, QuickCheck, radian
     , tagged, transformers
     }:
     mkDerivation {
       pname = "coordinate";
       version = "0.0.18";
       sha256 = "0avag247d74qwy6gikcmva5k41iriba42rkxik781dsnp2caxq1f";
       buildDepends = [ lens radian tagged transformers ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/NICTA/coordinate";
       description = "A representation of latitude and longitude";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copilot" = callPackage
    ({ mkDerivation, copilot-c99, copilot-cbmc, copilot-core
     , copilot-language, copilot-libraries, copilot-sbv, random
     }:
     mkDerivation {
       pname = "copilot";
       version = "2.1.1";
       sha256 = "0m4sw5cvnijr85y2rnaipljrx735d80y47sqwchcclds9n4vbb4r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         copilot-c99 copilot-cbmc copilot-core copilot-language
         copilot-libraries copilot-sbv random
       ];
       homepage = "http://leepike.github.com/Copilot/";
       description = "A stream DSL for writing embedded C programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copilot-c99" = callPackage
    ({ mkDerivation, atom, bytestring-csv, copilot-core, QuickCheck
     , random, text
     }:
     mkDerivation {
       pname = "copilot-c99";
       version = "2.1.1";
       sha256 = "0h1af0062qrslmh2iqbykfymahrrv9n9dyzlkmdlwzyi4dd6nc2q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         atom bytestring-csv copilot-core QuickCheck random text
       ];
       description = "A compiler for Copilot targeting C99";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copilot-cbmc" = callPackage
    ({ mkDerivation, copilot-c99, copilot-core, copilot-sbv }:
     mkDerivation {
       pname = "copilot-cbmc";
       version = "2.1.1";
       sha256 = "1bqz5y25bvr73ydr51yc5w680w2db1l1j03mxs0b6hxzdy0xallp";
       buildDepends = [ copilot-c99 copilot-core copilot-sbv ];
       description = "Copilot interface to a C model-checker";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copilot-core" = callPackage
    ({ mkDerivation, dlist, mtl, pretty-ncols, random }:
     mkDerivation {
       pname = "copilot-core";
       version = "2.1.1";
       sha256 = "1jzxv446dg09wbh9lkqsq5lfymkqwczlx0d5w0q7zd60fvvkbsmp";
       buildDepends = [ dlist mtl pretty-ncols random ];
       description = "An intermediate representation for Copilot";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copilot-language" = callPackage
    ({ mkDerivation, copilot-core, data-reify, mtl }:
     mkDerivation {
       pname = "copilot-language";
       version = "2.1.1";
       sha256 = "12ds0awf7i4qm1g3jvkcva64627m5ba6zpc0zadiplaviglsfkqk";
       buildDepends = [ copilot-core data-reify mtl ];
       description = "A Haskell-embedded DSL for monitoring hard real-time distributed systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copilot-libraries" = callPackage
    ({ mkDerivation, copilot-language, mtl, parsec }:
     mkDerivation {
       pname = "copilot-libraries";
       version = "2.1.1";
       sha256 = "0b69rfz4gvdvk9f9y7yns3hmh1m7akcrm3rcdi8rkhizykcnnsyj";
       buildDepends = [ copilot-language mtl parsec ];
       description = "A Haskell-embedded DSL for monitoring hard real-time distributed systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copilot-sbv" = callPackage
    ({ mkDerivation, copilot-core, filepath, sbv }:
     mkDerivation {
       pname = "copilot-sbv";
       version = "2.1.1";
       sha256 = "1mpb4595igpfp5xrv8l7q4k2ba6ffn784934629j1c76ifld12wl";
       buildDepends = [ copilot-core filepath sbv ];
       description = "A compiler for CoPilot targeting SBV";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "copr" = callPackage
    ({ mkDerivation, aeson, hlint, HsOpenSSL, http-streams, io-streams
     , semigroups, text
     }:
     mkDerivation {
       pname = "copr";
       version = "1.1.1";
       sha256 = "0zgg60ri8yvz96gk08wdfn0445wqszigh2p0964nr2zdnffq5rnw";
       editedCabalFile = "0994z9ivgxaw8qslmqqhcnyy4q4q90nyczb4wklylzr5gnzbi7zg";
       buildDepends = [
         aeson HsOpenSSL http-streams io-streams semigroups text
       ];
       testDepends = [ hlint ];
       homepage = "https://github.com/relrod/copr-hs";
       description = "Haskell interface to the Fedora Copr system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "core" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "core";
       version = "0.5";
       sha256 = "1fqgfbd3in8l84250kda67paakz4sr2ywf5qzsy403546w7q9ccz";
       buildDepends = [ parsec ];
       description = "External core parser and pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "core-haskell" = callPackage
    ({ mkDerivation, haskeline, haskell-src-exts, hint }:
     mkDerivation {
       pname = "core-haskell";
       version = "0.6.4";
       sha256 = "1wjmj2p8j6xw7cga01jsjgpi4dswrxif3j6mml48fq8a4k19zqxr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskeline haskell-src-exts hint ];
       homepage = "https://github.com/happlebao/Core-Haskell";
       description = "A subset of Haskell using in UCC for teaching purpose";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "corebot-bliki" = callPackage
    ({ mkDerivation, aeson, blaze-builder, filepath, filestore
     , http-types, monads-tf, pandoc, text, time, yesod
     }:
     mkDerivation {
       pname = "corebot-bliki";
       version = "0.2.2.0";
       sha256 = "10pfz4bw1wh55c2cizd8jiwh8bkaqw9p773976vl52f0jrhns1qg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson blaze-builder filepath filestore http-types monads-tf pandoc
         text time yesod
       ];
       homepage = "http://github.com/coreyoconnor/corebot-bliki";
       description = "A bliki written using yesod. Uses pandoc to process files stored in git.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "coroutine-enumerator" = callPackage
    ({ mkDerivation, enumerator, monad-coroutine }:
     mkDerivation {
       pname = "coroutine-enumerator";
       version = "0.1.1";
       sha256 = "1rjbhpy5vw1maawi47jsrnagqm19say9w1i31pgcpxl45vhrshp7";
       buildDepends = [ enumerator monad-coroutine ];
       homepage = "http://trac.haskell.org/SCC/wiki/coroutine-enumerator";
       description = "Bridge between the monad-coroutine and enumerator packages";
       license = "GPL";
     }) {};

  "coroutine-iteratee" = callPackage
    ({ mkDerivation, iteratee, monad-coroutine }:
     mkDerivation {
       pname = "coroutine-iteratee";
       version = "0.1.1";
       sha256 = "1ycir4kwpcz34yg64cdb9q0jxv3ma12vrrs28cr5jm64jmi8m0wd";
       buildDepends = [ iteratee monad-coroutine ];
       homepage = "http://trac.haskell.org/SCC/wiki/coroutine-iteratee";
       description = "Bridge between the monad-coroutine and iteratee packages";
       license = "GPL";
     }) {};

  "coroutine-object" = callPackage
    ({ mkDerivation, cereal, either, lens, mtl, safecopy, transformers
     , transformers-free, uuid
     }:
     mkDerivation {
       pname = "coroutine-object";
       version = "0.3";
       sha256 = "0q0rvcc7ipxwmikaxh0ymq1d65f2q1a2jrd1i553pdf8hwmv0k1r";
       buildDepends = [
         cereal either lens mtl safecopy transformers transformers-free uuid
       ];
       description = "Object-oriented programming realization using coroutine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "couch-hs" = callPackage
    ({ mkDerivation, aeson, attoparsec, hint, random, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "couch-hs";
       version = "0.1.6";
       sha256 = "0mrx0mjh9kzk6nx53gn5hvhjgmhlwphxkl5yn9a1x17l62v3x6q7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec hint random text transformers vector
       ];
       description = "A CouchDB view server for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "couchdb-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-conduit
     , blaze-builder, conduit, data-default, http-conduit, http-types
     , HUnit, lifted-base, monad-control, resourcet, string-conversions
     , syb, test-framework, test-framework-hunit, text, transformers
     , transformers-base, unordered-containers, vector
     }:
     mkDerivation {
       pname = "couchdb-conduit";
       version = "0.10.6";
       sha256 = "0rp5pj56m9n20g5hjjw8gbx81lb2z0ckwpgpvyr2a5sgk6b7z2al";
       buildDepends = [
         aeson attoparsec attoparsec-conduit blaze-builder conduit
         data-default http-conduit http-types lifted-base monad-control
         resourcet string-conversions syb text transformers
         unordered-containers vector
       ];
       testDepends = [
         aeson attoparsec attoparsec-conduit blaze-builder conduit
         data-default http-conduit http-types HUnit lifted-base
         monad-control string-conversions syb test-framework
         test-framework-hunit text transformers transformers-base
         unordered-containers
       ];
       homepage = "https://github.com/akaspin/couchdb-conduit";
       description = "Couch DB client library using http-conduit and aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "couchdb-enumerator" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-enumerator
     , enumerator, http-enumerator, http-types, HUnit, lifted-base
     , monad-control, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, transformers
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "couchdb-enumerator";
       version = "0.3.7";
       sha256 = "02h0a61dbchyjp0shpj0shsdfcggx0cm5psxgw9g67vv3v8f98pn";
       buildDepends = [
         aeson attoparsec attoparsec-enumerator enumerator http-enumerator
         http-types lifted-base monad-control text transformers
         unordered-containers utf8-string
       ];
       testDepends = [
         aeson attoparsec attoparsec-enumerator enumerator http-enumerator
         http-types HUnit lifted-base monad-control QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         transformers unordered-containers utf8-string vector
       ];
       homepage = "http://bitbucket.org/wuzzeb/couchdb-enumerator";
       description = "Couch DB client library using http-enumerator and aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "count" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "count";
       version = "0.0.1";
       sha256 = "1az2vr1rjq4pfgzswwbwgfq4kcb8kq759vn5kl7ghzaqr7b6vkgx";
       description = "Bijective mappings between values and possibly infinite prefixes of [0..]";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "countable" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "countable";
       version = "0.1";
       sha256 = "0qfgfsl9zvi7fkzdzh7n7v190w8jxvjb7dx1y3hxxg7cikflppz9";
       description = "Countable, Searchable, Finite, Empty classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "counter" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "counter";
       version = "0.1.0.0";
       sha256 = "1wqbk40izzb6wfwk1qprnqgm5f9mhs2xm7pl1ks8ajv4hdpkrnik";
       homepage = "https://github.com/wei2912/counter";
       description = "An object frequency counter";
       license = stdenv.lib.licenses.mit;
     }) {};

  "country-codes" = callPackage
    ({ mkDerivation, aeson, HTF, HUnit, shakespeare, tagsoup, text }:
     mkDerivation {
       pname = "country-codes";
       version = "0.1.1";
       sha256 = "1pv8sxq999437azc2w8qs9p27346sc1fpv9vwlny6rym19avknm5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson shakespeare tagsoup text ];
       testDepends = [ aeson HTF HUnit ];
       homepage = "https://github.com/prowdsponsor/country-codes";
       description = "ISO 3166 country codes and i18n names";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "courier" = callPackage
    ({ mkDerivation, async, cereal, hslogger, HUnit, network, stm
     , test-framework, test-framework-hunit, text, uuid
     }:
     mkDerivation {
       pname = "courier";
       version = "0.1.0.15";
       sha256 = "1aj9anrw7jfqx8s2xkdznqs212f54g6i2lcf79bgnkmxsbax252v";
       buildDepends = [ async cereal hslogger network stm text uuid ];
       testDepends = [
         async cereal hslogger HUnit network stm test-framework
         test-framework-hunit
       ];
       homepage = "http://github.com/hargettp/courier";
       description = "A message-passing library for simplifying network applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "court" = callPackage
    ({ mkDerivation, aeson, filepath, optparse-applicative, stm, text
     , time
     }:
     mkDerivation {
       pname = "court";
       version = "0.1.0.0";
       sha256 = "0cpvm6cjfz203hajl8fj5gxc5hc7516v0bzz4d7hyih2kh21k6dn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson filepath optparse-applicative stm text time
       ];
       homepage = "http://hub.darcs.net/thoferon/court";
       description = "Simple and flexible CI system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cplusplus-th" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "cplusplus-th";
       version = "1.0.0.0";
       sha256 = "0gmsn35rd6ij4ax4j626hg9pdb40ilj22zg0nxrnl6n1828a9rqj";
       testDepends = [ QuickCheck ];
       homepage = "https://github.com/nicta/cplusplus-th";
       description = "C++ Foreign Import Generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cpphs" = callPackage
    ({ mkDerivation, polyparse }:
     mkDerivation {
       pname = "cpphs";
       version = "1.18.6";
       sha256 = "0ds712zabigswf3cljzh7f2ys4rl1fj2cf76lbw856adm8514gxc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ polyparse ];
       homepage = "http://projects.haskell.org/cpphs/";
       description = "A liberalised re-implementation of cpp, the C pre-processor";
       license = "LGPL";
     }) {};

  "cprng-aes" = callPackage
    ({ mkDerivation, byteable, cipher-aes, crypto-random }:
     mkDerivation {
       pname = "cprng-aes";
       version = "0.6.1";
       sha256 = "1wr15kbmk1g3l8a75n0iwbzqg24ixv78slwzwb2q6rlcvq0jlnb4";
       buildDepends = [ byteable cipher-aes crypto-random ];
       homepage = "http://github.com/vincenthz/hs-cprng-aes";
       description = "Crypto Pseudo Random Number Generator using AES in counter mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cprng-aes-effect" = callPackage
    ({ mkDerivation, cprng-aes, crypto-random, crypto-random-effect
     , extensible-effects
     }:
     mkDerivation {
       pname = "cprng-aes-effect";
       version = "0.1.0.2";
       sha256 = "0443h7jfpjvc6vmp3kfx0h6j2aynvgfznssz7lin9fmsxghlvsfb";
       buildDepends = [
         cprng-aes crypto-random crypto-random-effect extensible-effects
       ];
       homepage = "https://github.com/ibotty/crypto-random-effect";
       description = "Run random effect using cprng-aes, a crypto pseudo number generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cpsa" = callPackage
    ({ mkDerivation, parallel }:
     mkDerivation {
       pname = "cpsa";
       version = "2.4.0";
       sha256 = "1xhqqrfz6jdmmil1b3awz1j7hfkcpla7vzindqdxhf99y81wd187";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parallel ];
       description = "Symbolic cryptographic protocol analyzer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cpu" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cpu";
       version = "0.1.2";
       sha256 = "0x19mlanmkg96h6h1i04w2i631z84y4rbk22ki4zhgsajysgw9sn";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/vincenthz/hs-cpu";
       description = "Cpu information and properties helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cpuid" = callPackage
    ({ mkDerivation, data-accessor, enumset }:
     mkDerivation {
       pname = "cpuid";
       version = "0.2.3";
       sha256 = "126xg98yaf3q61h85yrs1cm6wxlayf590l0a3h0gw6c282s8l6gq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-accessor enumset ];
       homepage = "http://code.haskell.org/cpuid/";
       description = "Binding for the cpuid machine instruction on x86 compatible processors";
       license = "GPL";
     }) {};

  "cpuperf" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "cpuperf";
       version = "0.1.1";
       sha256 = "1xnmrm3agkxziflvanihckg6q97z5w9gh7yv7mbbc7gqax3sz6l0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://code.haskell.org/~dons/code/cpuperf";
       description = "Modify the cpu frequency on OpenBSD systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cpython" = callPackage
    ({ mkDerivation, c2hs, python3, text }:
     mkDerivation {
       pname = "cpython";
       version = "3.3.0";
       sha256 = "162m0dfgnicyv3jb9dqq6pmyymh1dim043kbmbg1hfhxjfrv17jj";
       buildDepends = [ text ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ python3 ];
       homepage = "https://john-millikin.com/software/haskell-python/";
       description = "Bindings for libpython";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "cql" = callPackage
    ({ mkDerivation, cereal, Decimal, iproute, network, QuickCheck
     , tasty, tasty-quickcheck, text, time, transformers, uuid
     }:
     mkDerivation {
       pname = "cql";
       version = "3.0.1";
       sha256 = "02jgr0mm95hka82n2f3kg6ipyadz7gqgj2n4f7qxw27s5nszmz24";
       buildDepends = [
         cereal Decimal iproute network text time transformers uuid
       ];
       testDepends = [
         cereal Decimal iproute network QuickCheck tasty tasty-quickcheck
         text time uuid
       ];
       homepage = "https://github.com/twittner/cql/";
       description = "Cassandra CQL binary protocol";
       license = "unknown";
     }) {};

  "cql-io" = callPackage
    ({ mkDerivation, async, auto-update, cql, data-default-class
     , exceptions, hashable, iproute, lens, monad-control, mtl
     , mwc-random, network, semigroups, stm, text, time, tinylog
     , transformers, transformers-base, uuid, vector
     }:
     mkDerivation {
       pname = "cql-io";
       version = "0.12.2";
       sha256 = "16y1h5gzpism0rj4ba2flm0fpqzx1znm1wlcqnsd2hwyznqlc09a";
       buildDepends = [
         async auto-update cql data-default-class exceptions hashable
         iproute lens monad-control mtl mwc-random network semigroups stm
         text time tinylog transformers transformers-base uuid vector
       ];
       homepage = "https://github.com/twittner/cql-io/";
       description = "Cassandra CQL client";
       license = "unknown";
     }) {};

  "cqrs" = callPackage
    ({ mkDerivation, async, conduit, cqrs-test, cqrs-types, deepseq
     , hspec, HUnit, pool-conduit, random, SafeSemaphore, stm
     , transformers
     }:
     mkDerivation {
       pname = "cqrs";
       version = "0.9.0";
       sha256 = "1r3wl6fwkqccnfhazq7dk4c2zmlirxrh3y7a7fjhxm9273g59f1b";
       buildDepends = [
         conduit cqrs-types deepseq pool-conduit random SafeSemaphore stm
         transformers
       ];
       testDepends = [
         async conduit cqrs-test hspec HUnit pool-conduit stm transformers
       ];
       description = "Command-Query Responsibility Segregation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cqrs-example" = callPackage
    ({ mkDerivation, aeson, blaze-builder, cereal, conduit, cqrs
     , deepseq, derive, scotty, stm, text, transformers, wai-eventsource
     , wai-middleware-static
     }:
     mkDerivation {
       pname = "cqrs-example";
       version = "0.9.1";
       sha256 = "0yllvs64qaxpgqlwdv3hmi4gzl5qf2lbyy3r0whyi2kz53kwl03i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson blaze-builder cereal conduit cqrs deepseq derive scotty stm
         text transformers wai-eventsource wai-middleware-static
       ];
       description = "Example for cqrs package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cqrs-postgresql" = callPackage
    ({ mkDerivation, bytestring-lexing, conduit, cqrs-test, cqrs-types
     , hspec, pool-conduit, postgresql-libpq, text, time, transformers
     }:
     mkDerivation {
       pname = "cqrs-postgresql";
       version = "0.9.0";
       sha256 = "0zannh06gbc5vm5cpx9015i7ssg38k5lwwyajxhxa1nckwynqmzb";
       buildDepends = [
         bytestring-lexing conduit cqrs-types pool-conduit postgresql-libpq
         text time transformers
       ];
       testDepends = [
         conduit cqrs-test cqrs-types hspec pool-conduit postgresql-libpq
       ];
       description = "PostgreSQL backend for the cqrs package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cqrs-sqlite3" = callPackage
    ({ mkDerivation, conduit, cqrs-test, cqrs-types, direct-sqlite
     , hspec, pool-conduit, text, transformers
     }:
     mkDerivation {
       pname = "cqrs-sqlite3";
       version = "0.9.0";
       sha256 = "086g5z7ajr2x2didd0q8qcvnxdsf2gfrn27436gbj8y81cbg0fsh";
       buildDepends = [
         conduit cqrs-types direct-sqlite pool-conduit text transformers
       ];
       testDepends = [
         conduit cqrs-test direct-sqlite hspec pool-conduit text
         transformers
       ];
       description = "SQLite3 backend for the cqrs package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cqrs-test" = callPackage
    ({ mkDerivation, conduit, cqrs-types, hspec, HUnit, pool-conduit
     , stm, transformers
     }:
     mkDerivation {
       pname = "cqrs-test";
       version = "0.9.0";
       sha256 = "1i47c2d7c64kp63spm12jkwg3g21i0z4n9z9gdwvmsr1s638k5gl";
       buildDepends = [
         conduit cqrs-types hspec HUnit pool-conduit stm transformers
       ];
       description = "Command-Query Responsibility Segregation Test Support";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cqrs-types" = callPackage
    ({ mkDerivation, base16-bytestring, base64-bytestring, conduit
     , deepseq, derive, random
     }:
     mkDerivation {
       pname = "cqrs-types";
       version = "0.9.0";
       sha256 = "1xxyy8zrx76x3vg54awhp9lz5qhg9x5cafhlqr45ilfz2rxjkzbg";
       buildDepends = [
         base16-bytestring base64-bytestring conduit deepseq derive random
       ];
       description = "Command-Query Responsibility Segregation. Modules for the basic types.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cr" = callPackage
    ({ mkDerivation, cmdargs, shelly, text, transformers }:
     mkDerivation {
       pname = "cr";
       version = "1.2";
       sha256 = "107chyp8br2ryjqdf7100109k0wg3jawzva76wf4r6fndjr3gin1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs shelly text transformers ];
       homepage = "https://github.com/scvalex/cr";
       description = "Code review tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "crack" = callPackage
    ({ mkDerivation, crack }:
     mkDerivation {
       pname = "crack";
       version = "0.1";
       sha256 = "0rfwvvb3q0a7z8is95yjh3wfvz818xyblp1hrwh8fwddppncrzrk";
       extraLibraries = [ crack ];
       description = "A haskell binding to cracklib";
       license = "GPL";
     }) { inherit (pkgs) crack; };

  "craftwerk" = callPackage
    ({ mkDerivation, colour, mtl, vector-space }:
     mkDerivation {
       pname = "craftwerk";
       version = "0.1";
       sha256 = "0002n3fq3afmby843gfi0dnwm2saq29w6hnn6lzqhsalw33j97d3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ colour mtl vector-space ];
       homepage = "http://mahrz.github.com/craftwerk.html";
       description = "2D graphics library with integrated TikZ output";
       license = stdenv.lib.licenses.mit;
     }) {};

  "craftwerk-cairo" = callPackage
    ({ mkDerivation, cairo, craftwerk, mtl }:
     mkDerivation {
       pname = "craftwerk-cairo";
       version = "0.1";
       sha256 = "16in87l2v49k785fldm7fvprywg0v497kz29jr22y91q5j5gnm4z";
       buildDepends = [ cairo craftwerk mtl ];
       homepage = "http://mahrz.github.com/craftwerk.html";
       description = "Cairo backend for Craftwerk";
       license = stdenv.lib.licenses.mit;
     }) {};

  "craftwerk-gtk" = callPackage
    ({ mkDerivation, cairo, craftwerk, craftwerk-cairo, gtk, mtl }:
     mkDerivation {
       pname = "craftwerk-gtk";
       version = "0.1";
       sha256 = "18b63yh4p5ry38c3p6plyhk5j0gmmnyjw25r2dxdaddpnn051nff";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo craftwerk craftwerk-cairo gtk mtl ];
       homepage = "http://mahrz.github.com/craftwerk.html";
       description = "Gtk UI for Craftwerk";
       license = stdenv.lib.licenses.mit;
     }) {};

  "crc16" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "crc16";
       version = "0.1.1";
       sha256 = "15x3xwq2vyg474m09jak1c2zx9w5acpfjgmy5jj4asxj33z9n7bz";
       description = "Calculate the crc16-ccitt";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crc16-table" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "crc16-table";
       version = "0.1";
       sha256 = "0x943wmcbj679kj7q2a2ipjycq17ajm71m487vkb8b6gdrdy8f2z";
       description = "Compute CRC16 checksums using a lookup table";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "creatur" = callPackage
    ({ mkDerivation, binary, cereal, cond, filepath, gray-extended
     , hdaemonize, HUnit, MonadRandom, mtl, QuickCheck, random, split
     , temporary, test-framework, test-framework-hunit
     , test-framework-quickcheck2, time, transformers, zlib
     }:
     mkDerivation {
       pname = "creatur";
       version = "5.9.0";
       sha256 = "10iqpj52jgcmwxisbfc0xxglfh6m8fw26a0gx25nn9mr0vq43sda";
       buildDepends = [
         cereal cond filepath gray-extended hdaemonize MonadRandom mtl
         random split time transformers zlib
       ];
       testDepends = [
         binary cereal filepath HUnit MonadRandom mtl QuickCheck temporary
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/mhwombat/creatur";
       description = "Framework for artificial life experiments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crf-chain1" = callPackage
    ({ mkDerivation, binary, data-lens, logfloat, monad-codec, parallel
     , random, sgd, vector, vector-binary, vector-th-unbox
     }:
     mkDerivation {
       pname = "crf-chain1";
       version = "0.2.2";
       sha256 = "0v0mmpvn9qma3xz92s13ywk9p5czxzshh2rf06hb2zqqq5m6iwhq";
       buildDepends = [
         binary data-lens logfloat monad-codec parallel random sgd vector
         vector-binary vector-th-unbox
       ];
       homepage = "https://github.com/kawu/crf-chain1";
       description = "First-order, linear-chain conditional random fields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crf-chain1-constrained" = callPackage
    ({ mkDerivation, binary, data-lens, logfloat, monad-codec, parallel
     , random, sgd, vector, vector-binary, vector-th-unbox
     }:
     mkDerivation {
       pname = "crf-chain1-constrained";
       version = "0.3.1";
       sha256 = "02ms8wjppyd23wzmyf8fcygy7gn13r431bz968nyrv8cdj2qiv3h";
       buildDepends = [
         binary data-lens logfloat monad-codec parallel random sgd vector
         vector-binary vector-th-unbox
       ];
       homepage = "https://github.com/kawu/crf-chain1-constrained";
       description = "First-order, constrained, linear-chain conditional random fields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crf-chain2-generic" = callPackage
    ({ mkDerivation, binary, comonad-transformers, data-lens, logfloat
     , monad-codec, parallel, sgd, vector, vector-binary
     }:
     mkDerivation {
       pname = "crf-chain2-generic";
       version = "0.3.0";
       sha256 = "104r52rf5q84bm6977bsfm4djcz8c08warfkk4xmympb0cmxkhxy";
       buildDepends = [
         binary comonad-transformers data-lens logfloat monad-codec parallel
         sgd vector vector-binary
       ];
       homepage = "https://github.com/kawu/crf-chain2-generic";
       description = "Second-order, generic, constrained, linear conditional random fields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crf-chain2-tiers" = callPackage
    ({ mkDerivation, binary, comonad, data-lens, logfloat, monad-codec
     , parallel, sgd, vector, vector-binary, vector-th-unbox
     }:
     mkDerivation {
       pname = "crf-chain2-tiers";
       version = "0.2.3";
       sha256 = "0dbg82ydsj7gl5bbfzldmkbv8q89ycsijpdrw7r9xrpac6b1428n";
       buildDepends = [
         binary comonad data-lens logfloat monad-codec parallel sgd vector
         vector-binary vector-th-unbox
       ];
       homepage = "https://github.com/kawu/crf-chain2-tiers";
       description = "Second-order, tiered, constrained, linear conditional random fields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "critbit" = callPackage
    ({ mkDerivation, deepseq, QuickCheck, test-framework
     , test-framework-quickcheck2, text, transformers, vector
     }:
     mkDerivation {
       pname = "critbit";
       version = "0.2.0.0";
       sha256 = "1xdgaj73ffvj1q1kyi62bifbazmzgamfwzdbdz0c339axw5dga82";
       buildDepends = [ deepseq text vector ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2 text
         transformers vector
       ];
       homepage = "https://github.com/bos/critbit";
       description = "Crit-bit maps and sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "criterion" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, binary, cassava, deepseq
     , either, filepath, Glob, hastache, HUnit, mtl, mwc-random
     , optparse-applicative, parsec, QuickCheck, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, time, transformers, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "criterion";
       version = "1.0.2.0";
       sha256 = "02mcb49hiv0gijj5343gffdd3r8hjf4d52llv2gradaijz4zdqhx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ansi-wl-pprint binary cassava deepseq either filepath Glob
         hastache mtl mwc-random optparse-applicative parsec statistics text
         time transformers vector vector-algorithms
       ];
       testDepends = [
         HUnit QuickCheck statistics test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       homepage = "http://www.serpentine.com/criterion";
       description = "Robust, reliable performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "criterion-plus" = callPackage
    ({ mkDerivation, criterion, deepseq, HTF, HUnit, loch-th
     , monad-control, mtl, optparse-applicative, placeholders
     , QuickCheck, statistics, string-conversions, system-fileio
     , system-filepath, text, th-printf, transformers, transformers-base
     , vector
     }:
     mkDerivation {
       pname = "criterion-plus";
       version = "0.1.1";
       sha256 = "0ml97f717mlzxfi5j998zxxc0bva26lcxgq2r5ababxa9x55kpkz";
       buildDepends = [
         criterion deepseq loch-th monad-control mtl optparse-applicative
         placeholders statistics string-conversions system-fileio
         system-filepath text th-printf transformers transformers-base
         vector
       ];
       testDepends = [
         criterion deepseq HTF HUnit loch-th monad-control mtl
         optparse-applicative placeholders QuickCheck statistics
         string-conversions system-fileio system-filepath text th-printf
         transformers transformers-base vector
       ];
       homepage = "https://github.com/nikita-volkov/criterion-plus";
       description = "Enhancement of the \"criterion\" benchmarking library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "criterion-to-html" = callPackage
    ({ mkDerivation, aeson, blaze-html, blaze-markup, filepath }:
     mkDerivation {
       pname = "criterion-to-html";
       version = "0.0.0.3";
       sha256 = "010x56czgipw3p1cfkx07mlcy4yj6advq3zzgrxpmjhrxzsa89xn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson blaze-html blaze-markup filepath ];
       homepage = "http://github.com/jaspervdj/criterion-to-html";
       description = "Convert criterion output to HTML reports";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crockford" = callPackage
    ({ mkDerivation, digits, QuickCheck, safe }:
     mkDerivation {
       pname = "crockford";
       version = "0.2";
       sha256 = "1fgsmf2k0v1j7b3gv06q9c65410qa2ivl59rwkm7j931wsymsg26";
       buildDepends = [ digits QuickCheck safe ];
       description = "An implementation of Douglas Crockford's base32 encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crocodile" = callPackage
    ({ mkDerivation, bmp, deepseq, heap, HUnit, mersenne-random-pure64
     , mtl, parallel
     }:
     mkDerivation {
       pname = "crocodile";
       version = "0.1.2";
       sha256 = "1krvcn5yb9i6jxwn2wwnpc8ylivhn27315a2sifn19f1l2vvy038";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bmp deepseq heap HUnit mersenne-random-pure64 mtl parallel
       ];
       homepage = "https://github.com/TomHammersley/HaskellRenderer/";
       description = "An offline renderer supporting ray tracing and photon mapping";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "cron" = callPackage
    ({ mkDerivation, attoparsec, derive, hspec, hspec-expectations
     , QuickCheck, text, time
     }:
     mkDerivation {
       pname = "cron";
       version = "0.2.2";
       sha256 = "15zi5kjrxhvl5jp5dkwhas45k1ry9i5b269kw6cdjbmvpb2fcff4";
       buildDepends = [ attoparsec text time ];
       testDepends = [
         attoparsec derive hspec hspec-expectations QuickCheck text time
       ];
       homepage = "http://github.com/michaelxavier/cron";
       description = "Cron datatypes and Attoparsec parser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cruncher-types" = callPackage
    ({ mkDerivation, aeson, hlint, lens, text }:
     mkDerivation {
       pname = "cruncher-types";
       version = "1.1.0";
       sha256 = "0kp0vm8mvgn12kk5csyhzv6g6az43acl6iwjbhvfdfr2mqif2b9h";
       buildDepends = [ aeson lens text ];
       testDepends = [ hlint ];
       homepage = "http://github.com/eval-so/cruncher-types";
       description = "Request and Response types for Eval.so's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crunghc" = callPackage
    ({ mkDerivation, filelock, filepath, SHA, text, time, transformers
     }:
     mkDerivation {
       pname = "crunghc";
       version = "0.1.1.1";
       sha256 = "08341mvdca70nlkdi2im344hhkv62s278a1gkp02hj0zrixzfkqm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filelock filepath SHA text time transformers ];
       description = "A runghc replacement with transparent caching";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "crypto-api" = callPackage
    ({ mkDerivation, cereal, entropy, tagged, transformers }:
     mkDerivation {
       pname = "crypto-api";
       version = "0.13.2";
       sha256 = "1vc27qcgbg7hf50rkqhlrs58zn1888ilh4b6wrrm07bnm48xacak";
       buildDepends = [ cereal entropy tagged transformers ];
       homepage = "https://github.com/TomMD/crypto-api";
       description = "A generic interface for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-api-tests" = callPackage
    ({ mkDerivation, cereal, crypto-api, filepath, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-api-tests";
       version = "0.3";
       sha256 = "0w3j43jdrlj28jryp18hc6q84nkl2yf4vs1hhgrsk7gb9kfyqjpl";
       buildDepends = [
         cereal crypto-api filepath HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://trac.haskell.org/crypto-api/wiki";
       description = "A test framework and KATs for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-cipher-benchmarks" = callPackage
    ({ mkDerivation, byteable, criterion, crypto-cipher-types, mtl
     , securemem
     }:
     mkDerivation {
       pname = "crypto-cipher-benchmarks";
       version = "0.0.5";
       sha256 = "1ddyz0fn3srvm37afbiw86lv0z7iwrmnhazgvk0gg5n3ic57anhq";
       buildDepends = [
         byteable criterion crypto-cipher-types mtl securemem
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher benchmarks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-cipher-tests" = callPackage
    ({ mkDerivation, byteable, crypto-cipher-types, HUnit, mtl
     , QuickCheck, securemem, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-cipher-tests";
       version = "0.0.11";
       sha256 = "19wqignlq90qwpam01hnmmrxaxh5lkax9l1l6rlbi4a07nvp1dnz";
       buildDepends = [
         byteable crypto-cipher-types HUnit mtl QuickCheck securemem
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       testDepends = [
         byteable crypto-cipher-types HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-cipher-types" = callPackage
    ({ mkDerivation, byteable, securemem }:
     mkDerivation {
       pname = "crypto-cipher-types";
       version = "0.0.9";
       sha256 = "03qa1i1kj07pfrxsi7fiaqnnd0vi94jd4jfswbmnm4gp1nvzcwr0";
       buildDepends = [ byteable securemem ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-conduit" = callPackage
    ({ mkDerivation, cereal, conduit, conduit-extra, crypto-api
     , cryptocipher, cryptohash-cryptoapi, hspec, resourcet, skein
     , transformers
     }:
     mkDerivation {
       pname = "crypto-conduit";
       version = "0.5.5";
       sha256 = "0zd4smj3rk2x1msl8z8f5y01x4b87rhgm45g26g6c3dsdasn1lyf";
       buildDepends = [
         cereal conduit conduit-extra crypto-api resourcet transformers
       ];
       testDepends = [
         cereal conduit conduit-extra crypto-api cryptocipher
         cryptohash-cryptoapi hspec skein transformers
       ];
       homepage = "https://github.com/prowdsponsor/crypto-conduit";
       description = "Conduit interface for cryptographic operations (from crypto-api)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-numbers" = callPackage
    ({ mkDerivation, byteable, crypto-random, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "crypto-numbers";
       version = "0.2.3";
       sha256 = "0nx2mlf40127j7vas7liqy2yzfg4alfaxcjilcxk99kavpaanzgp";
       buildDepends = [ crypto-random vector ];
       testDepends = [
         byteable crypto-random HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-numbers";
       description = "Cryptographic numbers: functions and algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-pubkey" = callPackage
    ({ mkDerivation, byteable, crypto-numbers, crypto-pubkey-types
     , crypto-random, cryptohash, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-pubkey";
       version = "0.2.5";
       sha256 = "18rxm6mgxp8x4ns2725pw6ja2g6n6k64dj9cbwdlsb13pkdh3lxq";
       buildDepends = [
         byteable crypto-numbers crypto-pubkey-types crypto-random
         cryptohash
       ];
       testDepends = [
         byteable crypto-numbers crypto-pubkey-types crypto-random
         cryptohash HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-pubkey";
       description = "Public Key cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-pubkey-openssh" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, attoparsec
     , base64-bytestring, cereal, crypto-pubkey-types, deepseq, filepath
     , pem, QuickCheck, tasty, tasty-quickcheck, temporary
     }:
     mkDerivation {
       pname = "crypto-pubkey-openssh";
       version = "0.2.6";
       sha256 = "1q7gx8q0dpwv8xyjq5v2i1sdlbkh5xyf1gsw7q3xs1dj2bldqfpf";
       buildDepends = [
         asn1-encoding asn1-types attoparsec base64-bytestring cereal
         crypto-pubkey-types pem
       ];
       testDepends = [
         asn1-encoding asn1-types attoparsec base64-bytestring cereal
         crypto-pubkey-types deepseq filepath pem QuickCheck tasty
         tasty-quickcheck temporary
       ];
       homepage = "https://github.com/knsd/crypto-pubkey-openssh";
       description = "OpenSSH keys decoder/encoder";
       license = stdenv.lib.licenses.mit;
     }) {};

  "crypto-pubkey-types" = callPackage
    ({ mkDerivation, asn1-types }:
     mkDerivation {
       pname = "crypto-pubkey-types";
       version = "0.4.2.3";
       sha256 = "1isfyr1ly9hv8idslpjbyc9hhgb1zqd9gfc1s4kvwy4gcdsvrx52";
       buildDepends = [ asn1-types ];
       homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
       description = "Generic cryptography Public keys algorithm types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-random" = callPackage
    ({ mkDerivation, securemem, vector }:
     mkDerivation {
       pname = "crypto-random";
       version = "0.0.8";
       sha256 = "058ilm05ni5ribggx25cfrhsv1z0abvgxzf3wd3d6qqq58p5wbkv";
       buildDepends = [ securemem vector ];
       homepage = "http://github.com/vincenthz/hs-crypto-random";
       description = "Simple cryptographic random related types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-random-api" = callPackage
    ({ mkDerivation, entropy }:
     mkDerivation {
       pname = "crypto-random-api";
       version = "0.2.0";
       sha256 = "0z49kwgjj7rz235642q64hbkgp0zl6ipn29xd19yb75xc5q7gsan";
       buildDepends = [ entropy ];
       homepage = "http://github.com/vincenthz/hs-crypto-random-api";
       description = "Simple random generators API for cryptography related code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "crypto-random-effect" = callPackage
    ({ mkDerivation, crypto-random, extensible-effects, securemem
     , transformers
     }:
     mkDerivation {
       pname = "crypto-random-effect";
       version = "0.2.0.4.1";
       sha256 = "1gj40r6i79jvsghyv4nqm3yrjlby9fkxxhzp0lkr5j1b9b3b2xwr";
       buildDepends = [
         crypto-random extensible-effects securemem transformers
       ];
       homepage = "https://github.com/ibotty/crypto-random-effect";
       description = "A random effect using crypto-random";
       license = stdenv.lib.licenses.mit;
     }) {};

  "crypto-totp" = callPackage
    ({ mkDerivation, cereal, cryptohash, tagged }:
     mkDerivation {
       pname = "crypto-totp";
       version = "0.1.0.1";
       sha256 = "0vkjkyaxp0rb4n2p7gdbbswm32gvbsbqnb6xs9hh4rncfaghpqds";
       buildDepends = [ cereal cryptohash tagged ];
       description = "Provides generation and verification services for time-based one-time keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cryptocipher" = callPackage
    ({ mkDerivation, cipher-aes, cipher-blowfish, cipher-camellia
     , cipher-des, cipher-rc4, crypto-cipher-types
     }:
     mkDerivation {
       pname = "cryptocipher";
       version = "0.6.2";
       sha256 = "0ip3a2as0df6drl29sryayxx22sx55v6bs60s2fh3i1nxqnydf9l";
       buildDepends = [
         cipher-aes cipher-blowfish cipher-camellia cipher-des cipher-rc4
         crypto-cipher-types
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Symmetrical block and stream ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cryptohash" = callPackage
    ({ mkDerivation, byteable, HUnit, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash";
       version = "0.11.6";
       sha256 = "0dyzcaxr8vhzqq9hj4240rxpi87h4ps87yz09klz723shls26f6s";
       buildDepends = [ byteable ];
       testDepends = [
         byteable HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hs-cryptohash";
       description = "collection of crypto hashes, fast, pure and practical";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cryptohash-conduit" = callPackage
    ({ mkDerivation, conduit, conduit-extra, cryptohash, resourcet
     , transformers
     }:
     mkDerivation {
       pname = "cryptohash-conduit";
       version = "0.1.1";
       sha256 = "1kmlskgb0jx8hkzdncr24aqir9k1kyfcb2rypvkdld1yin4nslga";
       buildDepends = [
         conduit conduit-extra cryptohash resourcet transformers
       ];
       homepage = "http://github.com/vincenthz/hs-cryptohash-conduit";
       description = "cryptohash conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cryptohash-cryptoapi" = callPackage
    ({ mkDerivation, cereal, crypto-api, cryptohash, tagged }:
     mkDerivation {
       pname = "cryptohash-cryptoapi";
       version = "0.1.3";
       sha256 = "0wj53p32js8lfg0i8akrljpash0jdiyv2vcqpmjbd4dq2fx81w2n";
       buildDepends = [ cereal crypto-api cryptohash tagged ];
       homepage = "http://github.com/vincenthz/hs-cryptohash-cryptoapi";
       description = "Crypto-api interfaces for cryptohash";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cryptsy-api" = callPackage
    ({ mkDerivation, aeson, deepseq, either, http-client
     , http-client-tls, pipes-attoparsec, pipes-http, text, time
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cryptsy-api";
       version = "0.2";
       sha256 = "09sx9z6s1ii8p4hw84j4ahd81a6k4xz3fn1zi60r7grsmbx69pkw";
       buildDepends = [
         aeson deepseq either http-client http-client-tls pipes-attoparsec
         pipes-http text time transformers unordered-containers vector
       ];
       description = "Bindings for Cryptsy cryptocurrency exchange API";
       license = "unknown";
     }) {};

  "crystalfontz" = callPackage
    ({ mkDerivation, crc16-table, MaybeT, serialport }:
     mkDerivation {
       pname = "crystalfontz";
       version = "0.1";
       sha256 = "14mh098kgckncips17bdsbg08q78xk1114174zq860z4znmc1gxv";
       buildDepends = [ crc16-table MaybeT serialport ];
       description = "Control Crystalfontz LCD displays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cse-ghc-plugin" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "cse-ghc-plugin";
       version = "0.1.1";
       sha256 = "123x10ircbj8lrsqapf6cb9b3ibjgp1q8l862a3i6i0ak7ash49f";
       homepage = "http://thoughtpolice.github.com/cse-ghc-plugin";
       description = "Compiler plugin for common subexpression elimination";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csound-catalog" = callPackage
    ({ mkDerivation, csound-expression, transformers }:
     mkDerivation {
       pname = "csound-catalog";
       version = "0.2.0";
       sha256 = "1ci9iw24mnf0jixy1d7149s0a4477r5xnvfb41qr3614yidicgwi";
       buildDepends = [ csound-expression transformers ];
       homepage = "https://github.com/anton-k/csound-catalog";
       description = "a gallery of Csound instruments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csound-expression" = callPackage
    ({ mkDerivation, Boolean, colour, csound-expression-opcodes
     , csound-expression-typed, data-default
     }:
     mkDerivation {
       pname = "csound-expression";
       version = "4.2.0";
       sha256 = "1rb62pihb48nrvpabln28ypaq2hk2ykycgc6mpnwk6qdkgdqj905";
       buildDepends = [
         Boolean colour csound-expression-opcodes csound-expression-typed
         data-default
       ];
       homepage = "https://github.com/anton-k/csound-expression";
       description = "library to make electronic music";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csound-expression-dynamic" = callPackage
    ({ mkDerivation, Boolean, data-default, data-fix, data-fix-cse
     , transformers, wl-pprint
     }:
     mkDerivation {
       pname = "csound-expression-dynamic";
       version = "0.1.0";
       sha256 = "0vbvah8icjnc2bjp8w21x8a48ijy598q09wgx68al4d4nya7fj4v";
       buildDepends = [
         Boolean data-default data-fix data-fix-cse transformers wl-pprint
       ];
       homepage = "https://github.com/anton-k/csound-expression-dynamic";
       description = "dynamic core for csound-expression library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csound-expression-opcodes" = callPackage
    ({ mkDerivation, csound-expression-dynamic, csound-expression-typed
     , transformers
     }:
     mkDerivation {
       pname = "csound-expression-opcodes";
       version = "0.0.1";
       sha256 = "0lm95cx66i8bysr9y9gd455pfmx9didgk78cfld8fcwjj6rv1qa0";
       buildDepends = [
         csound-expression-dynamic csound-expression-typed transformers
       ];
       description = "opcodes for the library csound-expression";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csound-expression-typed" = callPackage
    ({ mkDerivation, Boolean, colour, csound-expression-dynamic
     , data-default, deepseq, stable-maps, transformers, wl-pprint
     }:
     mkDerivation {
       pname = "csound-expression-typed";
       version = "0.0.6.0";
       sha256 = "176f4lp8vjad80a7pa93vkrx54kq6pp3hdwlchr4asm1w52jh05h";
       buildDepends = [
         Boolean colour csound-expression-dynamic data-default deepseq
         stable-maps transformers wl-pprint
       ];
       homepage = "https://github.com/anton-k/csound-expression-typed";
       description = "typed core for the library csound-expression";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csound-sampler" = callPackage
    ({ mkDerivation, csound-expression, transformers }:
     mkDerivation {
       pname = "csound-sampler";
       version = "0.0.3.1";
       sha256 = "02qmmq5alfbs1j6wzyyiab7q02aa5fiphs5p4lzlh7a8vrv7kq1g";
       buildDepends = [ csound-expression transformers ];
       homepage = "https://github.com/anton-k/csound-sampler";
       description = "A musical sampler based on Csound";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csp" = callPackage
    ({ mkDerivation, mtl, nondeterminism }:
     mkDerivation {
       pname = "csp";
       version = "1.0";
       sha256 = "0skz2yx8armbr0x7vhixxkbm7qbspg38723x98k6kysz7n5nzw2c";
       buildDepends = [ mtl nondeterminism ];
       description = "Discrete constraint satisfaction problem (CSP) solvers";
       license = "LGPL";
     }) {};

  "cspmchecker" = callPackage
    ({ mkDerivation, filepath, haskeline, libcspm, mtl }:
     mkDerivation {
       pname = "cspmchecker";
       version = "1.0.0";
       sha256 = "1yz94yvggw6a7fh2p7fszyp02nnk7labbl6z079gqn3smayzfs31";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath haskeline libcspm mtl ];
       homepage = "https://github.com/tomgr/libcspm";
       description = "A command line type checker for CSPM files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "css" = callPackage
    ({ mkDerivation, mtl, text }:
     mkDerivation {
       pname = "css";
       version = "0.2";
       sha256 = "150gdsf059x658z6cbclrydzbynw06nhrpf4i1l9gwb6siarvjv9";
       buildDepends = [ mtl text ];
       description = "Minimal monadic CSS DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "css-text" = callPackage
    ({ mkDerivation, attoparsec, hspec, QuickCheck, text }:
     mkDerivation {
       pname = "css-text";
       version = "0.1.2.1";
       sha256 = "1xi1n2f0g8y43p95lynhcg50wxbq7hqfzbfzm7fy8mn7gvd920nw";
       buildDepends = [ attoparsec text ];
       testDepends = [ attoparsec hspec QuickCheck text ];
       homepage = "http://www.yesodweb.com/";
       description = "CSS parser and renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csv" = callPackage
    ({ mkDerivation, filepath, parsec }:
     mkDerivation {
       pname = "csv";
       version = "0.1.2";
       sha256 = "00767ai09wm7f0yzmpqck3cpgxncpr9djnmmz5l17ajz69139x4c";
       buildDepends = [ filepath parsec ];
       description = "CSV loader and dumper";
       license = stdenv.lib.licenses.mit;
     }) {};

  "csv-conduit" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, blaze-builder
     , conduit, conduit-extra, data-default, HUnit, mmorph
     , monad-control, mtl, primitive, resourcet, test-framework
     , test-framework-hunit, text, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "csv-conduit";
       version = "0.6.3";
       sha256 = "1db1wlpl0ryyf8cmkrg1hgz4ggsvzy6z9ayzcc6n6rdywpfi29z4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec attoparsec-conduit blaze-builder conduit conduit-extra
         data-default mmorph monad-control mtl primitive resourcet text
         transformers unordered-containers vector
       ];
       testDepends = [
         HUnit mtl primitive test-framework test-framework-hunit text
         transformers vector
       ];
       homepage = "http://github.com/ozataman/csv-conduit";
       description = "A flexible, fast, conduit-based CSV parser library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csv-enumerator" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, enumerator
     , safe, transformers, unix-compat
     }:
     mkDerivation {
       pname = "csv-enumerator";
       version = "0.10.2.0";
       sha256 = "0n1zc9rwzj9w39nmjfn65qawj19b6zay3d62ss2crnxbgqnh07gh";
       buildDepends = [
         attoparsec attoparsec-enumerator enumerator safe transformers
         unix-compat
       ];
       homepage = "http://github.com/ozataman/csv-enumerator";
       description = "A flexible, fast, enumerator-based CSV parser library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "csv-nptools" = callPackage
    ({ mkDerivation, aeson, csv, html, tabular, text, txt-sushi, vector
     }:
     mkDerivation {
       pname = "csv-nptools";
       version = "0.4.1";
       sha256 = "0898553pikxjgmycdyiw92bbmzxgbl4dl8029qljyjzlzlasj7by";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson csv html tabular text txt-sushi vector ];
       description = "A collection of CSV tools";
       license = "GPL";
     }) {};

  "csv-to-qif" = callPackage
    ({ mkDerivation, Cabal, explicit-exception, hspec, regex-tdfa
     , split, spreadsheet
     }:
     mkDerivation {
       pname = "csv-to-qif";
       version = "0.3.2";
       sha256 = "1mfy19fvi92zzzqn70ga2p5csmc8qm0qnkn3vyl41ic6f69vm73x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ explicit-exception regex-tdfa split spreadsheet ];
       testDepends = [ Cabal hspec regex-tdfa split ];
       homepage = "https://github.com/mrVanDalo/csv-to-qif/";
       description = "A small program that will read csv files and create qif files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ctemplate" = callPackage
    ({ mkDerivation, ctemplate }:
     mkDerivation {
       pname = "ctemplate";
       version = "0.1";
       sha256 = "02xsw0zpg728cq018w6zjgbzk6d7px62mapn40gir9c0hi6rqlx8";
       extraLibraries = [ ctemplate ];
       homepage = "http://darcs.imperialviolet.org/ctemplate";
       description = "Binding to the Google ctemplate library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) ctemplate; };

  "ctkl" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ctkl";
       version = "0.27.0.0";
       sha256 = "0sqrg04zlwq62jggjvrd1dq7a2alwx2190w6b19d3jn51n0s907m";
       description = "packaging of Manuel Chakravarty's CTK Light for Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ctpl" = callPackage
    ({ mkDerivation, chatty-text, chatty-utils }:
     mkDerivation {
       pname = "ctpl";
       version = "0.1.0.1";
       sha256 = "1mbqgbig5n8rrkxmrdbcl8qafa2r58c2pial2b67yr6cw08v0srv";
       buildDepends = [ chatty-text chatty-utils ];
       description = "A programming language for text modification";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "ctrie" = callPackage
    ({ mkDerivation, atomic-primops, hashable, primitive, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "ctrie";
       version = "0.1.0.2";
       sha256 = "11ylwjmp015ppisczggzj1x7mfg1bfg4g4qg0s91xrrgms78r014";
       buildDepends = [ atomic-primops hashable primitive ];
       testDepends = [
         hashable QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/mcschroeder/ctrie";
       description = "Non-blocking concurrent map";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cubical" = callPackage
    ({ mkDerivation, alex, BNFC, filepath, happy, haskeline, mtl
     , transformers
     }:
     mkDerivation {
       pname = "cubical";
       version = "0.2.0";
       sha256 = "1n44d39s3r5iakbhjf99w49gb1y8l1xl46lz40jkhx7k4knwb1fj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ BNFC filepath haskeline mtl transformers ];
       buildTools = [ alex happy ];
       homepage = "https://github.com/simhu/cubical";
       description = "Implementation of Univalence in Cubical Sets";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cubicbezier" = callPackage
    ({ mkDerivation, deepseq, integration }:
     mkDerivation {
       pname = "cubicbezier";
       version = "0.2.0";
       sha256 = "1xrbg2pr41lnw7av38q2w70gi4cv1j8rx5pv3fgfr8qb9i0gd9w7";
       buildDepends = [ deepseq integration ];
       description = "Efficient manipulating of 2D cubic bezier curves";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cubicspline" = callPackage
    ({ mkDerivation, hmatrix, safe }:
     mkDerivation {
       pname = "cubicspline";
       version = "0.1";
       sha256 = "0z6gwg8h760jviq2v8m9b5w84f9qrkz3hd1vp5y183i0c2wa97ak";
       buildDepends = [ hmatrix safe ];
       description = "Natural cubic spline interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cublas" = callPackage
    ({ mkDerivation, c2hs, cublas, cuda, cusparse, filepath, language-c
     , storable-complex
     }:
     mkDerivation {
       pname = "cublas";
       version = "0.2.0.2";
       sha256 = "1kf7xydwcxajc6pk89vhdhpb4lxsmbr98r8nj6nl017fqiz3mk52";
       buildDepends = [ cuda filepath language-c storable-complex ];
       buildTools = [ c2hs ];
       extraLibraries = [ cublas cusparse ];
       homepage = "https://github.com/bmsherman/cublas";
       description = "FFI bindings to the CUDA CUBLAS and CUSPARSE libraries";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) cublas; };

  "cuboid" = callPackage
    ({ mkDerivation, GLUT, Yampa }:
     mkDerivation {
       pname = "cuboid";
       version = "0.14.1";
       sha256 = "10h14qzvv46pmqcwwsvil93da2g8ddk5cpqxwmi884v2svjvz7qm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT Yampa ];
       description = "3D Yampa/GLUT Puzzle Game";
       license = stdenv.lib.licenses.mit;
     }) {};

  "cuda" = callPackage
    ({ mkDerivation, c2hs, cudatoolkit, nvidia_x11 }:
     mkDerivation {
       pname = "cuda";
       version = "0.6.5.1";
       sha256 = "04j57inw4wmd0l74ryxdgpjcbf3zkklgkqw9bv7yp4n96n40mp0y";
       editedCabalFile = "000wqa112yzvvi2650lfl3cnk1rk91fpb2g38pj21ciiq4wdnwja";
       isLibrary = true;
       isExecutable = true;
       buildTools = [ c2hs ];
       extraLibraries = [ cudatoolkit nvidia_x11 stdenv.gcc ];
       # The cudatoolkit provides both 64 and 32-bit versions of the
       # library. GHC's linker fails if the wrong version is found first.
       # We solve this by eliminating lib64 from the path on 32-bit
       # platforms and putting lib64 first on 64-bit platforms.
       configurePhase = ''
         for i in Setup.hs Setup.lhs; do
           test -f $i && ghc --make $i
         done
         for p in $extraBuildInputs $propagatedNativeBuildInputs; do
           if [ -d "$p/include" ]; then
             extraLibDirs="$extraLibDirs --extra-include-dir=$p/include"
           fi
           for d in ${if stdenv.is64bit then "lib64 lib" else "lib"}; do
             if [ -d "$p/$d" ]; then
               extraLibDirs="$extraLibDirs --extra-lib-dir=$p/$d"
             fi
           done
         done
         ./Setup configure --verbose --prefix="$out" $libraryProfiling $extraLibDirs $configureFlags
       '';
       homepage = "https://github.com/tmcdonell/cuda";
       description = "FFI binding to the CUDA interface for programming NVIDIA GPUs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cufft" = callPackage
    ({ mkDerivation, c2hs, cuda }:
     mkDerivation {
       pname = "cufft";
       version = "0.1.1.0";
       sha256 = "0d13nf61698gzh0hcycx1z9bm2xpikkg27bjymsjhfwimvqn7z8h";
       buildDepends = [ cuda ];
       buildTools = [ c2hs ];
       homepage = "http://github.com/robeverest/cufft";
       description = "Haskell bindings for the CUFFT library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "curl" = callPackage
    ({ mkDerivation, curl }:
     mkDerivation {
       pname = "curl";
       version = "1.3.8";
       sha256 = "0vj4hpaa30jz7c702xpsfvqaqdxz28zslsqnsfx6bf6dpwvck1wh";
       extraLibraries = [ curl ];
       description = "Haskell binding to libcurl";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) curl; };

  "curl-aeson" = callPackage
    ({ mkDerivation, aeson, curl, text, utf8-string }:
     mkDerivation {
       pname = "curl-aeson";
       version = "0.0.4";
       sha256 = "1fpi448f6bgf3rbw3zxf7r9nwyhv9q67zan5sixnad1y7lqxivrx";
       buildDepends = [ aeson curl text utf8-string ];
       homepage = "https://github.com/zouppen/haskell-curl-aeson";
       description = "Communicate with HTTP service using JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "curlhs" = callPackage
    ({ mkDerivation, hspec, rtld, time }:
     mkDerivation {
       pname = "curlhs";
       version = "0.1.3";
       sha256 = "0m8n19kyimxd9c7aazkw7gak7v1lik04m0y0izs3zanjlhqvnn3j";
       editedCabalFile = "1q0jnzbmh0ssrxzxnk7074irl34x9dzbz797bfrbyl11rm1igrhs";
       buildDepends = [ rtld time ];
       testDepends = [ hspec ];
       homepage = "https://kkardzis.github.com/curlhs";
       description = "bindings to libcurl, the multiprotocol file transfer library";
       license = "unknown";
     }) {};

  "currency" = callPackage
    ({ mkDerivation, hashable, iso3166-country-codes }:
     mkDerivation {
       pname = "currency";
       version = "0.2.0.0";
       sha256 = "0yj1x7zmkmwr9az55i9gvf84m7i3b4qi80p8qk9hszzlv7rigmdw";
       buildDepends = [ hashable iso3166-country-codes ];
       homepage = "https://github.com/singpolyma/currency-haskell";
       description = "Types representing standard and non-standard currencies";
       license = "unknown";
     }) {};

  "current-locale" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "current-locale";
       version = "0.1.0.1";
       sha256 = "185fgzh8nvf2gl5hzg3xmab4xlp2wm2nw485g5nikzx99y3zr1b6";
       homepage = "https://github.com/koterpillar/current-locale";
       description = "Get the current system locale in System.Locale format";
       license = stdenv.lib.licenses.mit;
     }) {};

  "curry-base" = callPackage
    ({ mkDerivation, filepath, mtl, syb }:
     mkDerivation {
       pname = "curry-base";
       version = "0.2.9";
       sha256 = "0sdwygsbqmvcbzi7zsr0jd02s2r19pc7zsk4b6hjxv4vzjc9f120";
       buildDepends = [ filepath mtl syb ];
       homepage = "http://www.curry-language.org";
       description = "Functions for manipulating Curry programs";
       license = "unknown";
     }) {};

  "curry-frontend" = callPackage
    ({ mkDerivation, curry-base, filepath, mtl, syb }:
     mkDerivation {
       pname = "curry-frontend";
       version = "0.2.12";
       sha256 = "1igys4i7wwj1ildkf4is66gq22zsjg158kv3ald5xiilwkmvfc4h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ curry-base filepath mtl syb ];
       homepage = "http://www.curry-language.org";
       description = "Compile the functional logic language Curry to several intermediate formats";
       license = "unknown";
     }) {};

  "cursedcsv" = callPackage
    ({ mkDerivation, csv-enumerator, enumerator, hscurses, mtl
     , natural-sort, parseargs, regex-tdfa, safe
     }:
     mkDerivation {
       pname = "cursedcsv";
       version = "0.1.1";
       sha256 = "1qcld5mg8vla6fb9biriyx3lldn69spq9halg46in6lg5qw45ycz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         csv-enumerator enumerator hscurses mtl natural-sort parseargs
         regex-tdfa safe
       ];
       description = "Terminal tool for viewing tabular data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "curves" = callPackage
    ({ mkDerivation, filepath, HaXml, JuicyPixels, QuickCheck }:
     mkDerivation {
       pname = "curves";
       version = "1.1.0.1";
       sha256 = "0zmy9an40wnxjhqjhlvsg0jy4bqqby6hl8ckjcm0406988ma8mi6";
       buildDepends = [ filepath HaXml JuicyPixels QuickCheck ];
       description = "Library for drawing curve based images";
       license = stdenv.lib.licenses.mit;
     }) {};

  "custom-prelude" = callPackage
    ({ mkDerivation, basic-prelude, monad-loops }:
     mkDerivation {
       pname = "custom-prelude";
       version = "0.2.2.0";
       sha256 = "00lkpkl79kznib0s6xm644f3k13dv59x5z06ccymvx6l6iqxyzn6";
       buildDepends = [ basic-prelude monad-loops ];
       homepage = "https://github.com/ajnsit/custom-prelude";
       description = "An enhanced prelude, serving as a foundation for my projects";
       license = "GPL";
     }) {};

  "cv-combinators" = callPackage
    ({ mkDerivation, allocated-processor, graphics-drawingcombinators
     , HOpenCV, SDL, vector-space
     }:
     mkDerivation {
       pname = "cv-combinators";
       version = "0.1.2.3";
       sha256 = "1bdhs4dy9yfgc9j281rxiiy9md3s27yy44scz86s29vbm7prccvp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         allocated-processor graphics-drawingcombinators HOpenCV SDL
         vector-space
       ];
       description = "Functional Combinators for Computer Vision";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "cyclotomic" = callPackage
    ({ mkDerivation, arithmoi }:
     mkDerivation {
       pname = "cyclotomic";
       version = "0.4.3";
       sha256 = "14rfyxmqjrlirszk2mrqm030rya6cbcydbf7fl7if82y21qrfg0p";
       buildDepends = [ arithmoi ];
       description = "A subfield of the complex numbers for exact calculation";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "cypher" = callPackage
    ({ mkDerivation, aeson, attoparsec, classy-parallel, conduit
     , http-conduit, http-types, resourcet, text, transformers
     , transformers-base, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cypher";
       version = "0.8.1";
       sha256 = "0f79791j9nczm80cifpc4iq5pqkhca67s94c5wqm0kiprlxblc53";
       buildDepends = [
         aeson attoparsec classy-parallel conduit http-conduit http-types
         resourcet text transformers transformers-base unordered-containers
         vector
       ];
       description = "Haskell bindings for the neo4j \"cypher\" query language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "d-bus" = callPackage
    ({ mkDerivation, async, attoparsec, binary, blaze-builder, conduit
     , conduit-extra, data-binary-ieee754, data-default, exceptions
     , free, hslogger, mtl, network, QuickCheck, singletons, stm, tasty
     , tasty-quickcheck, tasty-th, text, transformers, xml-conduit
     , xml-hamlet, xml-picklers, xml-types
     }:
     mkDerivation {
       pname = "d-bus";
       version = "0.1.2";
       sha256 = "176brypscws03sswda215ywc6l5hj6l5iw4vkfrcppzycdyh3yd2";
       buildDepends = [
         async attoparsec binary blaze-builder conduit conduit-extra
         data-binary-ieee754 data-default exceptions free hslogger mtl
         network singletons stm text transformers xml-conduit xml-picklers
         xml-types
       ];
       testDepends = [
         binary mtl QuickCheck singletons tasty tasty-quickcheck tasty-th
         text xml-hamlet
       ];
       description = "Permissively licensed D-Bus client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "d3js" = callPackage
    ({ mkDerivation, mtl, random, text }:
     mkDerivation {
       pname = "d3js";
       version = "0.1.0.0";
       sha256 = "0wrxvfgss9fiv1pwsdi1md0plc4mf9sadkhgm46dsfq16dwrp3q2";
       buildDepends = [ mtl random text ];
       homepage = "https://github.com/nebuta/d3js-haskell";
       description = "Declarative visualization on a web browser with DSL approach";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "daemonize-doublefork" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "daemonize-doublefork";
       version = "0.1.1";
       sha256 = "1g446qxff8ajv44341y0f9v39j8idmnn23lwi08gq3ps4qrz0py2";
       homepage = "https://github.com/scvalex/daemonize-doublefork";
       description = "Start background daemons by double-forking";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "daemons" = callPackage
    ({ mkDerivation, cereal, data-default, filepath, HUnit, network
     , pipes, test-framework, test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "daemons";
       version = "0.2.1";
       sha256 = "0zf9831vl1hz606nsp0yhjg46wxzvwkd3hn9shjw5akk26sddi8p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal data-default filepath network pipes transformers
       ];
       testDepends = [
         data-default HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/scvalex/daemons";
       description = "Daemons in Haskell made fun and easy";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "damnpacket" = callPackage
    ({ mkDerivation, attoparsec, deepseq, QuickCheck, text }:
     mkDerivation {
       pname = "damnpacket";
       version = "0.6.0";
       sha256 = "137ckcsy2a9f8xfw83rapl2msb6z0pdlsksay5qkymxcpfwrabyb";
       buildDepends = [ attoparsec deepseq text ];
       testDepends = [ QuickCheck text ];
       homepage = "https://github.com/joelteon/damnpacket";
       description = "Parsing dAmn packets";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dao" = callPackage
    ({ mkDerivation, binary, Crypto, data-binary-ieee754, deepseq
     , filepath, mtl, random, time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "dao";
       version = "0.1.0.1";
       sha256 = "0caas3ql32925rzsghb7rdrm17bw3hn84cizkl9dqmz6nwlhclk9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary Crypto data-binary-ieee754 deepseq filepath mtl random time
         transformers utf8-string
       ];
       testDepends = [
         binary Crypto data-binary-ieee754 deepseq filepath mtl random time
         transformers utf8-string
       ];
       description = "Dao is meta programming language with its own built-in interpreted language, designed with artificial intelligence applications in mind";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "dapi" = callPackage
    ({ mkDerivation, explicit-exception, multiarg, parsec, prednote
     , rainbow, text, time, transformers
     }:
     mkDerivation {
       pname = "dapi";
       version = "0.2.0.0";
       sha256 = "0idi472qqks286fbw718vddk5kc3vxicrb8m38sllw6x663xnljz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         explicit-exception multiarg parsec prednote rainbow text time
         transformers
       ];
       homepage = "http://massysett.github.com/dapi";
       description = "Prints a series of dates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "darcs" = callPackage
    ({ mkDerivation, curl, extensible-exceptions, filepath
     , hashed-storage, haskeline, html, HTTP, mmap, mtl, network
     , network-uri, parsec, random, regex-compat, tar, terminfo, text
     , utf8-string, vector, zlib
     }:
     mkDerivation {
       pname = "darcs";
       version = "2.8.5";
       sha256 = "16g3ayw0wwhkjpprlkzi971ibs4dp152bmaa487512cwb3ni0hq6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions filepath hashed-storage haskeline html HTTP
         mmap mtl network network-uri parsec random regex-compat tar
         terminfo text utf8-string vector zlib
       ];
       extraLibraries = [ curl ];
       postInstall = ''
         mkdir -p $out/etc/bash_completion.d
         mv contrib/darcs_completion $out/etc/bash_completion.d/darcs
       '';
       homepage = "http://darcs.net/";
       description = "a distributed, interactive, smart revision control system";
       license = "GPL";
     }) { inherit (pkgs) curl; };

  "darcs-benchmark" = callPackage
    ({ mkDerivation, cmdargs, datetime, filepath, hs-gchart, html, HTTP
     , json, mtl, network, regex-posix, SHA, split, statistics, strict
     , tabular, tar, time, utf8-string, uvector, zlib
     }:
     mkDerivation {
       pname = "darcs-benchmark";
       version = "0.1.9";
       sha256 = "1qwh4yas6alp65lwimh8xlz3i572nxn4iwqsppx7qqlj8kjhbyvj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs datetime filepath hs-gchart html HTTP json mtl network
         regex-posix SHA split statistics strict tabular tar time
         utf8-string uvector zlib
       ];
       homepage = "http://wiki.darcs.net/Development/Benchmarks";
       description = "Comparative benchmark suite for darcs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "darcs-beta" = callPackage
    ({ mkDerivation, curl, extensible-exceptions, filepath
     , hashed-storage, haskeline, html, HTTP, mmap, mtl, network, parsec
     , random, regex-compat, tar, terminfo, text, vector, zlib
     }:
     mkDerivation {
       pname = "darcs-beta";
       version = "2.7.99.2";
       sha256 = "0jkgy8k2i7hhcl7dzm4zvbm0q189hhp4cza9aslslzcq15jsa225";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions filepath hashed-storage haskeline html HTTP
         mmap mtl network parsec random regex-compat tar terminfo text
         vector zlib
       ];
       extraLibraries = [ curl ];
       homepage = "http://darcs.net/";
       description = "a distributed, interactive, smart revision control system";
       license = "GPL";
     }) { inherit (pkgs) curl; };

  "darcs-buildpackage" = callPackage
    ({ mkDerivation, ConfigFile, hslogger, MissingH, network, parsec
     , regex-compat
     }:
     mkDerivation {
       pname = "darcs-buildpackage";
       version = "0.5.12";
       sha256 = "0c82r7bgz8wj172q1n4dfz9kfn4466v7k159vlkfdqv7as0qj8qf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile hslogger MissingH network parsec regex-compat
       ];
       description = "Tools to help manage Debian packages with Darcs";
       license = "GPL";
     }) {};

  "darcs-cabalized" = callPackage
    ({ mkDerivation, curl, curses, html, HUnit, mtl, parsec, QuickCheck
     , regex-compat, zlib
     }:
     mkDerivation {
       pname = "darcs-cabalized";
       version = "2.0.2.2";
       sha256 = "1lc1v30zmlcrp6i22d3arghqhy9pjncddr34df6zd8s0r9wsi61d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ html HUnit mtl parsec QuickCheck regex-compat ];
       extraLibraries = [ curl curses zlib ];
       homepage = "http://darcs.net/";
       description = "David's Advanced Version Control System";
       license = "GPL";
     }) { inherit (pkgs) curl zlib; };

  "darcs-fastconvert" = callPackage
    ({ mkDerivation, attoparsec, cmdlib, darcs, datetime, filepath
     , hashed-storage, mtl, utf8-string
     }:
     mkDerivation {
       pname = "darcs-fastconvert";
       version = "0.2.1";
       sha256 = "1a49v3l9n5cqlmdpjj8mzz5v6b47my84id62ag7004ynr11vih9s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec cmdlib darcs datetime filepath hashed-storage mtl
         utf8-string
       ];
       description = "Import/export git fast-import streams to/from darcs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "darcs-graph" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "darcs-graph";
       version = "1.0";
       sha256 = "01404plnjrds57lf7widss2piwpal9khl0gq22xkswj68zzfjcv6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ time ];
       description = "Generate graphs of darcs repository activity";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "darcs-monitor" = callPackage
    ({ mkDerivation, HaXml, mtl }:
     mkDerivation {
       pname = "darcs-monitor";
       version = "0.4.2";
       sha256 = "0rp6flaizbaxzr28fr82vaacl4wajh6zdqnwcbgyhwz5dj7rdanq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HaXml mtl ];
       homepage = "http://wiki.darcs.net/RelatedSoftware/DarcsMonitor";
       description = "Darcs repository monitor (sends email)";
       license = "GPL";
     }) {};

  "darcs-scripts" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "darcs-scripts";
       version = "0.1";
       sha256 = "1jyl04z76935kz71hmz2hdx9bw2ka2v8pai6lpy6iz63wamhkmps";
       description = "Shell scripts for support of darcs workflow";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "darcs2dot" = callPackage
    ({ mkDerivation, darcs, graph-wrapper, string-conversions }:
     mkDerivation {
       pname = "darcs2dot";
       version = "0.1.0.1";
       sha256 = "0r6hri2kpfq7r0c25qrlrj5y9pi2j76njvwsgrpnpm6p4gg151wk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ darcs graph-wrapper string-conversions ];
       description = "Outputs dependencies of darcs patches in dot format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "darcsden" = callPackage
    ({ mkDerivation, aeson, base64-string, blaze-builder, blaze-html
     , blaze-markup, CouchDB, darcs, filepath, harp, hashed-storage
     , highlighting-kate, HsOpenSSL, hsp, http-conduit, HUnit, json
     , mime-mail, mtl, pandoc, pcre-light, pureMD5, random, redis, safe
     , SHA, snap-core, snap-server, split, ssh, system-uuid, text, time
     , utf8-string, webdriver, xhtml, xml
     }:
     mkDerivation {
       pname = "darcsden";
       version = "1.1";
       sha256 = "105al8x28ml91nll0jwqfmkg7slipkd9b4rab8sb2mh4minspff2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson base64-string blaze-builder blaze-html blaze-markup CouchDB
         darcs filepath harp hashed-storage highlighting-kate HsOpenSSL hsp
         http-conduit HUnit json mime-mail mtl pandoc pcre-light pureMD5
         random redis safe SHA snap-core snap-server split ssh system-uuid
         text time utf8-string webdriver xhtml xml
       ];
       homepage = "http://hackage.haskell.org/package/darcsden";
       description = "Darcs repository UI and hosting/collaboration app (hub.darcs.net branch).";
       license = "GPL";
     }) {};

  "darcswatch" = callPackage
    ({ mkDerivation, cgi, concurrentoutput, Crypto, filepath, HTTP
     , mime-string, mtl, nano-md5, network, parsec, regex-compat, safe
     , time, xhtml, zlib
     }:
     mkDerivation {
       pname = "darcswatch";
       version = "0.4.4";
       sha256 = "1gl0wplzlhb6ynacq7bv38ijhazpwr642zc0a2dixbpibchgxksf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cgi concurrentoutput Crypto filepath HTTP mime-string mtl nano-md5
         network parsec regex-compat safe time xhtml zlib
       ];
       homepage = "http://darcswatch.nomeata.de/";
       description = "Track application of Darcs patches";
       license = "GPL";
     }) {};

  "dash-haskell" = callPackage
    ({ mkDerivation, Cabal, direct-sqlite, either, haddock-api, mtl
     , optparse-applicative, parsec, pipes, sqlite-simple, system-fileio
     , system-filepath, tagsoup, text, transformers
     }:
     mkDerivation {
       pname = "dash-haskell";
       version = "1.0.0.3";
       sha256 = "1z1nqfsfkkwcg4k7jhwyiwy7m1qwcmk9q0aqjqspikv8jg3zrqnz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal direct-sqlite either haddock-api mtl optparse-applicative
         parsec pipes sqlite-simple system-fileio system-filepath tagsoup
         text transformers
       ];
       homepage = "http://www.github.com/jfeltz/dash-haskell";
       description = "Command line tool to generate Dash docsets (IDE docs) from package haddock";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "data-accessor" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "data-accessor";
       version = "0.2.2.6";
       sha256 = "0668qgllmp2911ppsb0g9z95nq2x0h2cvzyyjlb6iwhnjzyyg7gf";
       buildDepends = [ transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Utilities for accessing and manipulating fields of records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-accessor-monadLib" = callPackage
    ({ mkDerivation, data-accessor, monadLib }:
     mkDerivation {
       pname = "data-accessor-monadLib";
       version = "0.0.1";
       sha256 = "0l1ywmr4jry4cys7lq6k0w0nsdpqj1g5l3vsnxyf0ai1901zk18i";
       buildDepends = [ data-accessor monadLib ];
       description = "Accessor functions for monadLib's monads";
       license = "unknown";
     }) {};

  "data-accessor-monads-fd" = callPackage
    ({ mkDerivation, data-accessor, monads-fd, transformers }:
     mkDerivation {
       pname = "data-accessor-monads-fd";
       version = "0.2.0.3";
       sha256 = "1yvfk55qra7f9ggcybw3j68xg9dzx2f07swj99v4f588gh32ixhz";
       buildDepends = [ data-accessor monads-fd transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in monads-fd State monad class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-accessor-monads-tf" = callPackage
    ({ mkDerivation, data-accessor, monads-tf, transformers }:
     mkDerivation {
       pname = "data-accessor-monads-tf";
       version = "0.2.1.4";
       sha256 = "12skayn01s8svfdr4h5am2y2dw7ax6s83pb7vy3jxyddywpm04mk";
       buildDepends = [ data-accessor monads-tf transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in monads-tf State monad type family";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-accessor-mtl" = callPackage
    ({ mkDerivation, data-accessor, mtl }:
     mkDerivation {
       pname = "data-accessor-mtl";
       version = "0.2.0.4";
       sha256 = "1i8lk0vy04giixng5addgj740cbvwlc7g62qgrmhfip0w9k93kqh";
       buildDepends = [ data-accessor mtl ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in mtl State monad class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-accessor-template" = callPackage
    ({ mkDerivation, data-accessor, utility-ht }:
     mkDerivation {
       pname = "data-accessor-template";
       version = "0.2.1.11";
       sha256 = "1n2slv287zp6pabqb7xbfi296dbikw5a4ivqmnas0c4nxikqkayx";
       buildDepends = [ data-accessor utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Utilities for accessing and manipulating fields of records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-accessor-transformers" = callPackage
    ({ mkDerivation, data-accessor, transformers }:
     mkDerivation {
       pname = "data-accessor-transformers";
       version = "0.2.1.6";
       sha256 = "1iawhp1h68ynr2axj12jrn47nf08mss0ar8blagp59yi8j7170fa";
       buildDepends = [ data-accessor transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in transformers State monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-aviary" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-aviary";
       version = "0.4.0";
       sha256 = "03jhlb7w98bwx5xa23as9i6id0qxcl4f7k9rql2cgcy8nxf7c2xn";
       homepage = "http://code.google.com/p/copperbox/";
       description = "Combinator birds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-binary-ieee754" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "data-binary-ieee754";
       version = "0.4.4";
       sha256 = "02nzg1barhqhpf4x26mpzvk7jd29nali033qy01adjplv2z5m5sr";
       buildDepends = [ binary ];
       homepage = "https://john-millikin.com/software/data-binary-ieee754/";
       description = "Parser/Serialiser for IEEE-754 floating-point values";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-bword" = callPackage
    ({ mkDerivation, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "data-bword";
       version = "0.1";
       sha256 = "1s0fid1b8fjazii4j9rsjfmfhyacacknvy374y7nixsdgl4xp44d";
       testDepends = [ tasty tasty-quickcheck ];
       homepage = "https://github.com/mvv/data-bword";
       description = "Extra operations on binary words of fixed length";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-carousel" = callPackage
    ({ mkDerivation, lens }:
     mkDerivation {
       pname = "data-carousel";
       version = "0.1.0.0";
       sha256 = "1vp17428a2pw4g3y2ra22ll5vjnqwl2xwr2wfj8ppkxaj34a2nsh";
       buildDepends = [ lens ];
       description = "A rotating sequence data structure";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-category" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-category";
       version = "0.6.1";
       sha256 = "1rkxwzigc4lw4hp593fwcxkhnd4jqwd7szwc2jgdz50bdc6k3jqc";
       homepage = "http://github.com/sjoerdvisscher/data-category";
       description = "Category theory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-checked" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "data-checked";
       version = "0.3";
       sha256 = "0xjn7iqlsgi51h8gz4x40kc2qb5lwf6nw5kjwgkck1w5gjfd11yw";
       buildDepends = [ deepseq ];
       homepage = "https://github.com/mvv/data-checked";
       description = "Type-indexed runtime-checked properties";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-clist" = callPackage
    ({ mkDerivation, deepseq, QuickCheck }:
     mkDerivation {
       pname = "data-clist";
       version = "0.0.7.3";
       sha256 = "0kabcqyvsajf5drihp3f6da2vbw76f85cc4gh20n9czxy19g35rq";
       buildDepends = [ deepseq QuickCheck ];
       homepage = "https://github.com/sw17ch/data-clist";
       description = "Simple functional ring type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-concurrent-queue" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "data-concurrent-queue";
       version = "0.3.0.0";
       sha256 = "0rmn4pq5pgvam78vxp4y7431jai8dklml322r4nw47jjc1m20kmv";
       buildDepends = [ stm ];
       description = "A Library for directional queues";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-cycle" = callPackage
    ({ mkDerivation, collections-api, collections-base-instances }:
     mkDerivation {
       pname = "data-cycle";
       version = "0.1.2";
       sha256 = "1k7a2k4vvbwilayh5827na7fifaww66fnmd7mr9vzwmsw9g6q80g";
       buildDepends = [ collections-api collections-base-instances ];
       description = "a cyclic doubly linked list";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-default" = callPackage
    ({ mkDerivation, data-default-class, data-default-instances-base
     , data-default-instances-containers, data-default-instances-dlist
     , data-default-instances-old-locale
     }:
     mkDerivation {
       pname = "data-default";
       version = "0.5.3";
       sha256 = "0d1hm0l9kim3kszshr4msmgzizrzha48gz2kb7b61p7n3gs70m7c";
       buildDepends = [
         data-default-class data-default-instances-base
         data-default-instances-containers data-default-instances-dlist
         data-default-instances-old-locale
       ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-default-class" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-default-class";
       version = "0.0.1";
       sha256 = "0ccgr3jllinchqhw3lsn73ic6axk4196if5274rr1rghls0fxj5d";
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-default-generics" = callPackage
    ({ mkDerivation, dlist, hspec, HUnit, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "data-default-generics";
       version = "0.3";
       sha256 = "0asjirn324ixyzkf5vhanyf7q9aj9zh693m55qln7dx3vdayn1yv";
       buildDepends = [ dlist text time unordered-containers vector ];
       testDepends = [
         dlist hspec HUnit text time unordered-containers vector
       ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-default-instances-base" = callPackage
    ({ mkDerivation, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-base";
       version = "0.0.1";
       sha256 = "1832nq6by91f1iw73ycvkbgn8kpra83pvf2q61hy47xffh0zy4pb";
       buildDepends = [ data-default-class ];
       description = "Default instances for types in base";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-default-instances-containers" = callPackage
    ({ mkDerivation, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-containers";
       version = "0.0.1";
       sha256 = "06h8xka031w752a7cjlzghvr8adqbl95xj9z5zc1b62w02phfpm5";
       buildDepends = [ data-default-class ];
       description = "Default instances for types in containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-default-instances-dlist" = callPackage
    ({ mkDerivation, data-default-class, dlist }:
     mkDerivation {
       pname = "data-default-instances-dlist";
       version = "0.0.1";
       sha256 = "0narkdqiprhgayjiawrr4390h4rq4pl2pb6mvixbv2phrc8kfs3x";
       buildDepends = [ data-default-class dlist ];
       description = "Default instances for types in dlist";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-default-instances-old-locale" = callPackage
    ({ mkDerivation, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-old-locale";
       version = "0.0.1";
       sha256 = "00h81i5phib741yj517p8mbnc48myvfj8axzsw44k34m48lv1lv0";
       buildDepends = [ data-default-class ];
       description = "Default instances for types in old-locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-dispersal" = callPackage
    ({ mkDerivation, AES, binary, entropy, finite-field, matrix
     , QuickCheck, secret-sharing, spool, syb, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "data-dispersal";
       version = "1.0.0.2";
       sha256 = "1x6wd4xah19isysk2b9waws3fyvzx3w6l917zyw0cvdzf1lkpbw6";
       buildDepends = [
         AES binary entropy finite-field matrix secret-sharing syb vector
       ];
       testDepends = [
         binary QuickCheck spool syb test-framework
         test-framework-quickcheck2 vector
       ];
       homepage = "http://monoid.at/code";
       description = "Space-efficient and privacy-preserving data dispersal algorithms";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "data-dword" = callPackage
    ({ mkDerivation, data-bword, hashable, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "data-dword";
       version = "0.3";
       sha256 = "0m4jmmdi5j6h0pa4d8ll6pv2qvsf3y3bk6kss0hfglcwaa5vvy73";
       buildDepends = [ data-bword hashable ];
       testDepends = [ tasty tasty-quickcheck ];
       homepage = "https://github.com/mvv/data-dword";
       description = "Stick two binary words together to get a bigger one";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-easy" = callPackage
    ({ mkDerivation, either, errors, haskell-src-exts, hlint, hspec
     , HUnit, QuickCheck, safe, text, transformers
     }:
     mkDerivation {
       pname = "data-easy";
       version = "0.4";
       sha256 = "07cpsix22gvx23si1s4xsx4359qj5sp3gfw6a8075zzs8f10ci0y";
       buildDepends = [ either safe ];
       testDepends = [
         either errors haskell-src-exts hlint hspec HUnit QuickCheck safe
         text transformers
       ];
       homepage = "https://github.com/jcristovao/easy-data";
       description = "Consistent set of utility functions for Maybe, Either, List, Monoids";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-endian" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-endian";
       version = "0.1";
       sha256 = "0ilvpd3xw1nljxvl7jdrzzyfkfl7gykidvbjvc7px3bca5mlmf1r";
       homepage = "https://github.com/mvv/data-endian";
       description = "Endian-sensitive data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-extra" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-extra";
       version = "2.5.5";
       sha256 = "0py4a3mzqga25y6y1sirvc9369n3b7y5kpm5f9m613yjlypv6pc1";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-filepath" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "data-filepath";
       version = "2.0.0.0";
       sha256 = "0nlbg3bkkbcbxs8yx81rizzvg4dm1i83ly4n8c182947zd6i44n1";
       buildDepends = [ split ];
       description = "A type safe file path data structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-fin" = callPackage
    ({ mkDerivation, lazysmallcheck, prelude-safeenum, QuickCheck
     , reflection, smallcheck, tagged
     }:
     mkDerivation {
       pname = "data-fin";
       version = "0.1.1.3";
       sha256 = "02n3dr4gj73z549vwq5h7h1kvmx2j8vaxjcggpdlppps9wl6flry";
       buildDepends = [
         lazysmallcheck prelude-safeenum QuickCheck reflection smallcheck
         tagged
       ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Finite totally ordered sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-fix" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-fix";
       version = "0.0.1";
       sha256 = "09r08lrv92ka6p35wkbfhq9ywg7y5pmgszwbz8a20h31vjz1ffpr";
       homepage = "https://github.com/anton-k/data-fix";
       description = "Fixpoint data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-fix-cse" = callPackage
    ({ mkDerivation, data-fix, transformers }:
     mkDerivation {
       pname = "data-fix-cse";
       version = "0.0.1";
       sha256 = "1jrkphyw1npj4f2vy7n6xap1v2h6glw0gwzjg0iyjnflhjgnfl2m";
       buildDepends = [ data-fix transformers ];
       homepage = "https://github.com/anton-k/data-fix-cse";
       description = "Common subexpression elimination for the fixploint types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-flags" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-flags";
       version = "0.0.3.1";
       sha256 = "1s0djw1qarjn1fkyf21fd6pacfpfy4cvyw3wbd63ccaf9g0s1gs5";
       description = "A package for working with bit masks and flags in general";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-fresh" = callPackage
    ({ mkDerivation, free, transformers }:
     mkDerivation {
       pname = "data-fresh";
       version = "0.2013.251.0";
       sha256 = "1hz30myv78mw4sf19k1yg4qikrnxsa5ng0ff4naxyz1zyi2m87f1";
       buildDepends = [ free transformers ];
       description = "Interface and functor transformers for fresh values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-hash" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "data-hash";
       version = "0.2.0.0";
       sha256 = "1bfsbc4fkg3jqgbgka1mg6k1fizynvvxbhf2zb0x1apgr579mcrm";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Combinators for building fast hashing functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-interval" = callPackage
    ({ mkDerivation, deepseq, extended-reals, hashable, HUnit, lattices
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "data-interval";
       version = "1.1.1";
       sha256 = "1j4571qla66ks9kbyy3pllfgygjmrjb6sn3wjnlnwzsdskdg5fxk";
       buildDepends = [ deepseq extended-reals hashable lattices ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th
       ];
       description = "Interval arithmetic for both open and closed intervals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-inttrie" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-inttrie";
       version = "0.1.0";
       sha256 = "00kzf3cw0y0848cprmx3i7g70rmr92hhfzn60a2x98vb8f7y3814";
       homepage = "http://github.com/luqui/data-inttrie";
       description = "A lazy, infinite trie of integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-ivar" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-ivar";
       version = "0.30";
       sha256 = "1vnbmvihkrcknys33sam9zlb5qk5qqkxz6w3wamsbdmpp0q6zfb2";
       description = "Write-once variables with concurrency support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-layout" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "data-layout";
       version = "0.1.0.0";
       sha256 = "1w8r4vw731dmam8vcidz9a4wb2swqd5djsf9vkkxihxnphh0a1x5";
       buildDepends = [ vector ];
       homepage = "http://github.com/jystic/data-layout";
       description = "Read/write arbitrary binary layouts to a \"Data.Vector.Storable\".";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-lens" = callPackage
    ({ mkDerivation, comonad, semigroupoids, transformers }:
     mkDerivation {
       pname = "data-lens";
       version = "2.10.5";
       sha256 = "11na4wx0f0ihk87d00njwrfc430nb25dkkadv1n47yvcyfc60i90";
       buildDepends = [ comonad semigroupoids transformers ];
       homepage = "http://github.com/roconnor/data-lens/";
       description = "Used to be Haskell 98 Lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-lens-fd" = callPackage
    ({ mkDerivation, comonad, data-lens, mtl, transformers }:
     mkDerivation {
       pname = "data-lens-fd";
       version = "2.0.5";
       sha256 = "0r8cfgn6wx304b5ihmwgsxxjwalb7086wii655mgmb6cn3nirpyk";
       buildDepends = [ comonad data-lens mtl transformers ];
       homepage = "http://github.com/roconnor/data-lens-fd/";
       description = "Lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-lens-ixset" = callPackage
    ({ mkDerivation, data-lens, ixset, QuickCheck }:
     mkDerivation {
       pname = "data-lens-ixset";
       version = "0.1.4";
       sha256 = "0frzjfcp7w1ayfai1m07n0fpj3z1vbi971bc1kn1iarxhakny651";
       buildDepends = [ data-lens ixset ];
       testDepends = [ QuickCheck ];
       homepage = "https://github.com/dag/data-lens-ixset";
       description = "A Lens for IxSet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-lens-light" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "data-lens-light";
       version = "0.1.2.1";
       sha256 = "038vfzb4vxk1qb0246l2kgv9br37wg59wnlhzyjpn97lypwlf68w";
       buildDepends = [ mtl ];
       homepage = "https://github.com/feuerbach/data-lens-light";
       description = "Simple lenses, minimum dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-lens-template" = callPackage
    ({ mkDerivation, data-lens }:
     mkDerivation {
       pname = "data-lens-template";
       version = "2.1.8";
       sha256 = "0w8x5zn3d98z0q74bqfgkb9s0ca9hd1xc53gjl759s77wm4iwa0q";
       buildDepends = [ data-lens ];
       homepage = "http://github.com/roconnor/data-lens-template/";
       description = "Utilities for Data.Lens";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-list-sequences" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-list-sequences";
       version = "0.1";
       sha256 = "0r3y66lxgk0sdg500xnz0fvg4dvzvx47imnw0qkici22b9d92kv8";
       homepage = "https://github.com/jkramer/data-list-sequences";
       description = "Utilities for working with sequences within lists";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "data-memocombinators" = callPackage
    ({ mkDerivation, data-inttrie }:
     mkDerivation {
       pname = "data-memocombinators";
       version = "0.5.1";
       sha256 = "1mvfc1xri3kgkx5q7za01bqg1x3bfvbgcffw5vwl6jmq4hh1sd5l";
       buildDepends = [ data-inttrie ];
       homepage = "http://github.com/luqui/data-memocombinators";
       description = "Combinators for building memo tables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-named" = callPackage
    ({ mkDerivation, attoparsec, binary, text }:
     mkDerivation {
       pname = "data-named";
       version = "0.5.2";
       sha256 = "1mzwnbcb7ji4m6p4s68422gmpna06llbh2rhk6w048mgjxv4fhsx";
       buildDepends = [ attoparsec binary text ];
       homepage = "https://github.com/kawu/data-named";
       description = "Data types for named entities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-nat" = callPackage
    ({ mkDerivation, semigroups }:
     mkDerivation {
       pname = "data-nat";
       version = "0.1.2";
       sha256 = "1yzxkch0xzy76iyad0yshfnpvz38xklqdlyj8lgqnqsllw0vwh0m";
       buildDepends = [ semigroups ];
       homepage = "http://github.com/glehel/data-nat";
       description = "data Nat = Zero | Succ Nat";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-object" = callPackage
    ({ mkDerivation, failure, text, time }:
     mkDerivation {
       pname = "data-object";
       version = "0.3.1.9";
       sha256 = "0z8m23kw8mj6hhy1r8y1vvlxxpwl273dhanszig2673a1sw0l98l";
       buildDepends = [ failure text time ];
       homepage = "http://github.com/snoyberg/data-object/tree/master";
       description = "Represent hierachichal structures, called objects in JSON. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-object-json" = callPackage
    ({ mkDerivation, bytestring-trie, convertible-text, data-object
     , failure, JSONb, text
     }:
     mkDerivation {
       pname = "data-object-json";
       version = "0.3.1.8";
       sha256 = "06zkiqj4pkl5q4fmh816y4yj74rzwi2b91k542lxswjvfa3za3qk";
       buildDepends = [
         bytestring-trie convertible-text data-object failure JSONb text
       ];
       homepage = "http://github.com/snoyberg/data-object-json/tree/master";
       description = "Serialize JSON data to/from Haskell using the data-object library. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-object-yaml" = callPackage
    ({ mkDerivation, conduit, convertible-text, data-object, failure
     , text, transformers, yaml
     }:
     mkDerivation {
       pname = "data-object-yaml";
       version = "0.3.4.2";
       sha256 = "18a9r4wfpb7icjb6nji9iy3abq6sxafmsnfwqpnm1nn2nn3fm1ap";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         conduit convertible-text data-object failure text transformers yaml
       ];
       homepage = "http://github.com/snoyberg/data-object-yaml";
       description = "Serialize data to and from Yaml files (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-or" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-or";
       version = "1.0.0.4";
       sha256 = "17plwr0ayll8na73vhdsfxk86dnds4rpj8v6nww7shb6vk5v3hf5";
       homepage = "http://code.haskell.org/~wren/";
       description = "A data type for non-exclusive disjunction";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-ordlist" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-ordlist";
       version = "0.4.7.0";
       sha256 = "03a9ix1fcx08viwv2jg5ndw1qbkydyyrmjvqr9wasmcik9x1wv3g";
       description = "Set and bag operations on ordered lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-partition" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-partition";
       version = "0.2.0.1";
       sha256 = "1pgl8xr91kscqpx2bgvgy7qcdl17pkw9m1xdy9k075jvammlfxk7";
       homepage = "https://github.com/luqui/data-partition";
       description = "A pure disjoint set (union find) data structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-pprint" = callPackage
    ({ mkDerivation, deepseq, mtl, parallel, time }:
     mkDerivation {
       pname = "data-pprint";
       version = "0.2.3";
       sha256 = "1ygbhn399d4hlrdjmg7gxbr5akydb78p6qa80rv7m6j0fsqzbf6y";
       buildDepends = [ deepseq mtl parallel time ];
       description = "Prettyprint and compare Data values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-quotientref" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-quotientref";
       version = "0.1";
       sha256 = "0ylimakhw37klz2axg8qrdhwag34mfa1byb2z2mz2i8z0w4737j8";
       description = "Reference cells that need two independent indices to be accessed";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-r-tree" = callPackage
    ({ mkDerivation, binary, deepseq, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "data-r-tree";
       version = "0.0.5.0";
       sha256 = "1zgwm020zxfhb70llch4y075rd6klwwnv9yn8mpgh0rm0ib7jvyy";
       buildDepends = [ binary deepseq ];
       testDepends = [
         binary HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/sebastian-philipp/r-tree";
       description = "R-Tree is a spatial data structure similar to Quadtrees or B-Trees";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-ref" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "data-ref";
       version = "0.0";
       sha256 = "0bcizcf6i1hfpk7ry64si40mfdndgd8k0h9mzh873xp1v2qali7n";
       buildDepends = [ stm transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Mutable_variable";
       description = "Unify STRef and IORef in plain Haskell 98";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-reify" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-reify";
       version = "0.6";
       sha256 = "0mif89mpj5zvw8czc51mfj27jw2ipxd2awnm9q13s46k6s5pv6a7";
       editedCabalFile = "1h9kr0d9xmxf5y5hlygfnv8r7kvwibap6i7bjzr65zl7vczms630";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.ittc.ku.edu/csdl/fpg/Tools/IOReification";
       description = "Reify a recursive data structure into an explicit graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-reify-cse" = callPackage
    ({ mkDerivation, data-reify }:
     mkDerivation {
       pname = "data-reify-cse";
       version = "0.0.3";
       sha256 = "0vjfpbp0maqwirvi8j21z9qbs396l76dk5npn8zxac56j0i6l62r";
       buildDepends = [ data-reify ];
       description = "Common Sub-Expression Elimination for graphs generated by Data.Reify.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-rope" = callPackage
    ({ mkDerivation, bytestring-mmap }:
     mkDerivation {
       pname = "data-rope";
       version = "0.3";
       sha256 = "06sz6z0kd53av4acmgxh4668fsn588hx5k5qp752rrjf2nx9vww8";
       buildDepends = [ bytestring-mmap ];
       description = "Ropes, an alternative to (Byte)Strings";
       license = "GPL";
     }) {};

  "data-size" = callPackage
    ({ mkDerivation, deepseq, text }:
     mkDerivation {
       pname = "data-size";
       version = "0.1.1.7";
       sha256 = "0j1g39ha2fjgd960zd0gbhpznisw3qw07mbdacbx226bw50nwa7y";
       buildDepends = [ deepseq text ];
       description = "Profiling of data structures";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-spacepart" = callPackage
    ({ mkDerivation, vector-space }:
     mkDerivation {
       pname = "data-spacepart";
       version = "20090215.0";
       sha256 = "0h6z4yibjbnzck2fvh9mnppz9j0lzgx8nzmzm08q5yzmzjydy3rk";
       buildDepends = [ vector-space ];
       homepage = "http://code.haskell.org/data-spacepart";
       description = "Deprecated. Now called \"spacepart\". Space partitioning data structures.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-store" = callPackage
    ({ mkDerivation, cereal, deepseq, lens, QuickCheck, safecopy
     , test-framework, test-framework-quickcheck2, transformers, vector
     }:
     mkDerivation {
       pname = "data-store";
       version = "0.3.0.7";
       sha256 = "0cv02d3fwyyyxjv3519k9wilaagxlcn8m2nfifrcq0q0qihxd1bd";
       buildDepends = [ cereal deepseq lens safecopy transformers ];
       testDepends = [
         cereal deepseq lens QuickCheck safecopy test-framework
         test-framework-quickcheck2 transformers vector
       ];
       homepage = "https://github.com/Palmik/data-store";
       description = "Type safe, in-memory dictionary with multidimensional keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-stringmap" = callPackage
    ({ mkDerivation, binary, deepseq, ghc-heap-view, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "data-stringmap";
       version = "1.0.1.1";
       sha256 = "0djbky5m6hxr04jgxi2cq3fsivja32nzn16zs8ffqgadxw030pa1";
       buildDepends = [ binary deepseq ];
       testDepends = [
         deepseq ghc-heap-view HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "An efficient implementation of maps from strings to arbitrary values";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-structure-inferrer" = callPackage
    ({ mkDerivation, alex, ansi-terminal, deepseq, derive, filepath
     , happy, language-c, mtl, random, safe, utility-ht
     }:
     mkDerivation {
       pname = "data-structure-inferrer";
       version = "1.0";
       sha256 = "0jkbysk1rmbkjvjizwx72h58amvnz4iyjbs0lcx6987m4fn456w9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal deepseq derive filepath language-c mtl random safe
         utility-ht
       ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/alistra/data-structure-inferrer";
       description = "Program that infers the fastest data structure available for your program";
       license = stdenv.lib.licenses.mit;
     }) {};

  "data-textual" = callPackage
    ({ mkDerivation, parsers, QuickCheck, test-framework
     , test-framework-quickcheck2, text, text-latin1, text-printer
     , type-hint
     }:
     mkDerivation {
       pname = "data-textual";
       version = "0.3.0.2";
       sha256 = "0c4qs923dj4jnvvkjvbij0c1yg922iw66140cq6wb1m4h6q31ia4";
       buildDepends = [ parsers text text-latin1 text-printer ];
       testDepends = [
         parsers QuickCheck test-framework test-framework-quickcheck2
         text-printer type-hint
       ];
       homepage = "https://github.com/mvv/data-textual";
       description = "Human-friendly textual representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-timeout" = callPackage
    ({ mkDerivation, data-textual, parsers, tagged, text-printer
     , transformers-base
     }:
     mkDerivation {
       pname = "data-timeout";
       version = "0.3";
       sha256 = "1b6af2x19hb1kynsv7ypc2q6b71cazcg86gf1yhq0rr0fjj478ah";
       buildDepends = [
         data-textual parsers tagged text-printer transformers-base
       ];
       homepage = "https://github.com/mvv/data-timeout";
       description = "64-bit timeouts of nanosecond precision";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-transform" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "data-transform";
       version = "0.1.0.0";
       sha256 = "1mhcbwh4s414hq4cwljxxadazxfi382spfgkw38fz2xi08lbfsji";
       buildDepends = [ mtl ];
       description = "Functions to transform data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-treify" = callPackage
    ({ mkDerivation, ty }:
     mkDerivation {
       pname = "data-treify";
       version = "0.3.4";
       sha256 = "03xchr2h0f54rlcq285xaq5bakjq13mbjwz3xi3kfa6i71rr2rk9";
       buildDepends = [ ty ];
       homepage = "http://ittc.ku.edu/~andygill/data-reify.php";
       description = "Reify a recursive data structure into an explicit graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-type" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-type";
       version = "0.1.0";
       sha256 = "1x3wsnilp9sxy061sfmyyg0f6b0k2lxvi0g4qf2gkldrz32c4qvj";
       description = "Basic type wrangling types and classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-util" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "data-util";
       version = "0.4";
       sha256 = "1ywp3h2zccknc2sr0b5zbf9ms2zph5qh8znswxc7bi5wynyk9z98";
       homepage = "https://github.com/cutsea110/data-util";
       description = "utilities for handle data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "data-variant" = callPackage
    ({ mkDerivation, safe }:
     mkDerivation {
       pname = "data-variant";
       version = "0.28.0.5";
       sha256 = "11ia37q28xz8a87xkc8yyvqqd3qzfvcbdnp2caxdbzvdnjbazhmk";
       buildDepends = [ safe ];
       homepage = "https://bitbucket.org/tdammers/data-variant";
       description = "A variant data type, useful for modeling dynamically-typed programming languages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "database-migrate" = callPackage
    ({ mkDerivation, cmdargs, either, filepath, lens, postgresql-simple
     , text, time, transformers
     }:
     mkDerivation {
       pname = "database-migrate";
       version = "0.2.0";
       sha256 = "1hhx3851yzgq7cf397sifdbnznk0sfqf3blflxfl50yq68rmwbzy";
       buildDepends = [
         cmdargs either filepath lens postgresql-simple text time
         transformers
       ];
       homepage = "https://github.com/markhibberd/database-migrate";
       description = "Database versioning and migration (experimental)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "database-study" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "database-study";
       version = "0.0.1";
       sha256 = "1aqp7a46p758f1q99cn700mgc1dic896gpsih3vj2fmffqj42gd7";
       homepage = "http://dbs.informatik.uni-halle.de/Lehre/LP09/";
       description = "Demonstrate how a database can be implemented the functional way";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dataenc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dataenc";
       version = "0.14.0.7";
       sha256 = "1wwgm7wakkz6v94lyxyd3yi21l3h28sss4xxdb3d770vmjhp1lzr";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.haskell.org/haskellwiki/Library/Data_encoding";
       description = "Data encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "datalog" = callPackage
    ({ mkDerivation, exceptions, hashable, haskeline, HUnit, parsec
     , test-framework, test-framework-hunit, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "datalog";
       version = "0.2.0.2";
       sha256 = "1nfjmgf6j8a8602rmk7fg3kbkafiyd7lsnhvnwc95ms90icg0r86";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         exceptions hashable haskeline parsec text transformers
         unordered-containers vector
       ];
       testDepends = [
         hashable HUnit test-framework test-framework-hunit text
       ];
       description = "An implementation of datalog in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "datapacker" = callPackage
    ({ mkDerivation, filepath, hslogger, MissingH, mtl }:
     mkDerivation {
       pname = "datapacker";
       version = "1.0.1";
       sha256 = "10fj1z4wbr76wfnp9h1jzyd8afzn495r6xvbjiw55bimy0hasalg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath hslogger MissingH mtl ];
       homepage = "http://software.complete.org/datapacker";
       description = "Tool to help pack files into the minimum number of CDs/DVDs/etc";
       license = "GPL";
     }) {};

  "date-cache" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "date-cache";
       version = "0.3.0";
       sha256 = "0grhcbd0rhdn0cf1fz82x8pv8cmxfhndlcwyrax4mnnr3pql9kmb";
       description = "Date cacher";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dates" = callPackage
    ({ mkDerivation, base-unicode-symbols, parsec, syb, time }:
     mkDerivation {
       pname = "dates";
       version = "0.2.2.0";
       sha256 = "08d90fii0nmvmfxhhw4k5ja13jyxg79n527089lrc2r31l3wj40a";
       buildDepends = [ base-unicode-symbols parsec syb time ];
       homepage = "http://redmine.iportnov.ru/projects/dates/";
       description = "Small library for parsing different dates formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "datetime" = callPackage
    ({ mkDerivation, QuickCheck, time }:
     mkDerivation {
       pname = "datetime";
       version = "0.2.1";
       sha256 = "1yfg3wvi13r725dhfsmcdw4ns3cgl2ayrb5jck0q8b4crk2dlrzg";
       buildDepends = [ QuickCheck time ];
       homepage = "http://github.com/esessoms/datetime";
       description = "Utilities to make Data.Time.* easier to use.";
       license = "GPL";
     }) {};

  "dawg" = callPackage
    ({ mkDerivation, binary, mtl, transformers, vector, vector-binary
     }:
     mkDerivation {
       pname = "dawg";
       version = "0.11";
       sha256 = "0xvkw5hp66r46v59ld0s7yi2jzvlcc4vc8ignadai9vqxayzm799";
       buildDepends = [ binary mtl transformers vector vector-binary ];
       homepage = "https://github.com/kawu/dawg";
       description = "Directed acyclic word graphs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dbf" = callPackage
    ({ mkDerivation, binary, monad-loops, rwlock }:
     mkDerivation {
       pname = "dbf";
       version = "0.0.0.2";
       sha256 = "1pay47bbmxvishmczs3kgn19nzkfmmip3m51h4zlwydm5kxfc5n2";
       buildDepends = [ binary monad-loops rwlock ];
       homepage = "http://code.haskell.org/~mokus/dbf";
       description = "Read and write XBase \".dbf\" files";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "dbjava" = callPackage
    ({ mkDerivation, binary, uulib }:
     mkDerivation {
       pname = "dbjava";
       version = "1.7";
       sha256 = "06xz0a38sjjr64sz19lg0wzb73yz1msdlbg5s02ldd8n4b9yjk5f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary uulib ];
       homepage = "http://devel.comunidadhaskell.org/dbjava/";
       description = "Decompiler Bytecode Java";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dbmigrations" = callPackage
    ({ mkDerivation, configurator, fgl, filepath, HDBC, HDBC-postgresql
     , HDBC-sqlite3, HUnit, mtl, random, text, time, yaml-light
     }:
     mkDerivation {
       pname = "dbmigrations";
       version = "0.8";
       sha256 = "0m1zvc61y0n7p66iwsb8wzwgivxnc08cm1h3xvf1jnwrv294dwch";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         configurator fgl filepath HDBC HDBC-postgresql HDBC-sqlite3 HUnit
         mtl random text time yaml-light
       ];
       description = "An implementation of relational database \"migrations\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dbus" = callPackage
    ({ mkDerivation, cereal, chell, chell-quickcheck, filepath
     , libxml-sax, network, parsec, QuickCheck, random, text
     , transformers, vector, xml-types
     }:
     mkDerivation {
       pname = "dbus";
       version = "0.10.9";
       sha256 = "0sjnmxy0ikvg21sip7yadg4qr3lniy1wwpavkg48dc87gv98ymdb";
       buildDepends = [
         cereal libxml-sax network parsec random text transformers vector
         xml-types
       ];
       testDepends = [
         cereal chell chell-quickcheck filepath libxml-sax network parsec
         QuickCheck random text transformers vector xml-types
       ];
       homepage = "https://john-millikin.com/software/haskell-dbus/";
       description = "A client library for the D-Bus IPC system";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "dbus-client" = callPackage
    ({ mkDerivation, dbus-core, monads-tf, text, transformers }:
     mkDerivation {
       pname = "dbus-client";
       version = "0.4.1";
       sha256 = "0z7061kafjzd4jaws4xcp1xzh2kx559bgp7cmcjq55mbxr1rrsjq";
       buildDepends = [ dbus-core monads-tf text transformers ];
       homepage = "http://john-millikin.com/software/haskell-dbus/";
       description = "Monadic and object-oriented interfaces to DBus";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "dbus-core" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, libxml-sax, network
     , parsec, text, vector, xml-types
     }:
     mkDerivation {
       pname = "dbus-core";
       version = "0.9.3";
       sha256 = "110373yinimq0k7hl8wkk7g4hm3hj563dpa2y8ag2lpl9yydzgfa";
       buildDepends = [
         binary data-binary-ieee754 libxml-sax network parsec text vector
         xml-types
       ];
       homepage = "https://john-millikin.com/software/dbus-core/";
       description = "Low-level D-Bus protocol implementation";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "dbus-qq" = callPackage
    ({ mkDerivation, dbus, parsec, QuickCheck }:
     mkDerivation {
       pname = "dbus-qq";
       version = "0.1.0";
       sha256 = "0dg03nv7bsjydywhby0rv1a6jc90gf2885djxd8pb9aly2ncpjxx";
       buildDepends = [ dbus parsec ];
       testDepends = [ dbus QuickCheck ];
       description = "Quasi-quoter for DBus functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dbus-th" = callPackage
    ({ mkDerivation, dbus, syb, text }:
     mkDerivation {
       pname = "dbus-th";
       version = "0.1.1.0";
       sha256 = "1rwxbv92x7c0psp2s88cn168zkxdghviym9zpaz13av7ix06zx7a";
       buildDepends = [ dbus syb text ];
       description = "TemplateHaskell generator of DBus bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dclabel" = callPackage
    ({ mkDerivation, cereal, QuickCheck, quickcheck-instances
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "dclabel";
       version = "0.9.0.0";
       sha256 = "0bnbqbjpbx98wjgsz7kgr5znljbwhd6lsb8m9ky7dmzqygzybvir";
       buildDepends = [ cereal ];
       testDepends = [
         cereal QuickCheck quickcheck-instances test-framework
         test-framework-quickcheck2
       ];
       description = "This packge is deprecated. See the the \"LIO.DCLabel\" in the \"lio\" package.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dclabel-eci11" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "dclabel-eci11";
       version = "0.3";
       sha256 = "1bfc9ip4fqzjzlzppkrnspnm6gc50f4rkf0wngnxyj7f79fvjr6k";
       buildDepends = [ QuickCheck ];
       description = "The Disjunction Category Label Format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ddc-base" = callPackage
    ({ mkDerivation, deepseq, parsec, transformers, wl-pprint }:
     mkDerivation {
       pname = "ddc-base";
       version = "0.4.1.3";
       sha256 = "1v3qkvfcajr8ljnrkmdpkhp6069b54fg168ryknq4b7rkl4piqfm";
       buildDepends = [ deepseq parsec transformers wl-pprint ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler common utilities";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-build" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, ddc-core-eval, ddc-core-flow
     , ddc-core-llvm, ddc-core-salt, ddc-core-simpl, ddc-core-tetra
     , ddc-source-tetra, deepseq, filepath, mtl
     }:
     mkDerivation {
       pname = "ddc-build";
       version = "0.4.1.3";
       sha256 = "15bjdr9g48p1ahga9qc1cgfbpr89551yaqx9psa44da0vy468fjs";
       buildDepends = [
         ddc-base ddc-core ddc-core-eval ddc-core-flow ddc-core-llvm
         ddc-core-salt ddc-core-simpl ddc-core-tetra ddc-source-tetra
         deepseq filepath mtl
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler build framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-code" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "ddc-code";
       version = "0.4.1.3";
       sha256 = "1m904n1s2cszakjrlz81y1gplrgfv3np2ja0m6fapj9c2yyfmg6r";
       buildDepends = [ filepath ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler base libraries";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-core" = callPackage
    ({ mkDerivation, ddc-base, deepseq, mtl, transformers }:
     mkDerivation {
       pname = "ddc-core";
       version = "0.4.1.3";
       sha256 = "15a51cgk3pqsbmy6hv0jrf8ldxmb0kvzd0pwkqa6141phk2g1dd5";
       buildDepends = [ ddc-base deepseq mtl transformers ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler core language and type checker";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-core-eval" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, deepseq, mtl, transformers }:
     mkDerivation {
       pname = "ddc-core-eval";
       version = "0.4.1.3";
       sha256 = "0s11wzl75fa4pnjclgqdvymddk8srpknvpf6p3vkm2b09y0fryxd";
       buildDepends = [ ddc-base ddc-core deepseq mtl transformers ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler semantic evaluator for the core language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-core-flow" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, ddc-core-salt, ddc-core-simpl
     , deepseq, mtl, transformers
     }:
     mkDerivation {
       pname = "ddc-core-flow";
       version = "0.4.1.3";
       sha256 = "1szy9x5pc2l5ib8sbkajj6i7nfb46ypgi655wy0jrcnp7m2q22fy";
       buildDepends = [
         ddc-base ddc-core ddc-core-salt ddc-core-simpl deepseq mtl
         transformers
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler data flow compiler";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-core-llvm" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, ddc-core-salt, ddc-core-simpl
     , mtl, transformers
     }:
     mkDerivation {
       pname = "ddc-core-llvm";
       version = "0.4.1.3";
       sha256 = "0f0cby09lqhvw5ajm6q25qg57qbb4h3qvqwv30bzl6kw0884lkb5";
       buildDepends = [
         ddc-base ddc-core ddc-core-salt ddc-core-simpl mtl transformers
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler LLVM code generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-core-salt" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, deepseq, mtl, transformers }:
     mkDerivation {
       pname = "ddc-core-salt";
       version = "0.4.1.3";
       sha256 = "18cywxp3zp6aafpq8si1vvqy7lywwl31mdp58asyzcwi1g1v7y7q";
       buildDepends = [ ddc-base ddc-core deepseq mtl transformers ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler C code generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-core-simpl" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, deepseq, mtl, transformers }:
     mkDerivation {
       pname = "ddc-core-simpl";
       version = "0.4.1.3";
       sha256 = "0y3rxcl2h6dqmy367zfri1r21flcbygvrpa7sj8cr8gh128xwbbz";
       buildDepends = [ ddc-base ddc-core deepseq mtl transformers ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler code transformations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-core-tetra" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, ddc-core-salt, ddc-core-simpl
     , deepseq, mtl, transformers
     }:
     mkDerivation {
       pname = "ddc-core-tetra";
       version = "0.4.1.3";
       sha256 = "01ax5dirrf8jk03316dw1cnrs9fl5qlm8k07nb0rzxwybm3wqdv2";
       buildDepends = [
         ddc-base ddc-core ddc-core-salt ddc-core-simpl deepseq mtl
         transformers
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler intermediate language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-driver" = callPackage
    ({ mkDerivation, ddc-base, ddc-build, ddc-core, ddc-core-eval
     , ddc-core-flow, ddc-core-llvm, ddc-core-salt, ddc-core-simpl
     , ddc-core-tetra, ddc-interface, ddc-source-tetra, deepseq
     , filepath, mtl, transformers
     }:
     mkDerivation {
       pname = "ddc-driver";
       version = "0.4.1.3";
       sha256 = "0iyvmifnj05v9r2sh867dm2vgm8hijsxf6bmzrksj1kcs36qwrrk";
       buildDepends = [
         ddc-base ddc-build ddc-core ddc-core-eval ddc-core-flow
         ddc-core-llvm ddc-core-salt ddc-core-simpl ddc-core-tetra
         ddc-interface ddc-source-tetra deepseq filepath mtl transformers
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler top-level driver";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-interface" = callPackage
    ({ mkDerivation, ddc-base }:
     mkDerivation {
       pname = "ddc-interface";
       version = "0.4.1.3";
       sha256 = "0pbsnxzlbx9xblqf9199wrl80aard59l3193gm8gzxx7ispfhs3f";
       buildDepends = [ ddc-base ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler user interface support";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-source-tetra" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, ddc-core-salt, ddc-core-tetra
     , deepseq, mtl, transformers
     }:
     mkDerivation {
       pname = "ddc-source-tetra";
       version = "0.4.1.3";
       sha256 = "088lsavx4fhyxyxzxd4vj1880j19r4l4fvlb4dly42mbyfrg5jrs";
       buildDepends = [
         ddc-base ddc-core ddc-core-salt ddc-core-tetra deepseq mtl
         transformers
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler source language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-tools" = callPackage
    ({ mkDerivation, ddc-base, ddc-build, ddc-code, ddc-core
     , ddc-core-eval, ddc-core-flow, ddc-core-llvm, ddc-core-salt
     , ddc-core-simpl, ddc-core-tetra, ddc-driver, ddc-interface
     , ddc-source-tetra, filepath, haskeline, mtl, transformers
     }:
     mkDerivation {
       pname = "ddc-tools";
       version = "0.4.1.3";
       sha256 = "1hg6hajqrb7sf8bvr27cabdxalwvkw8lm2igsx05p9wq4bpirz62";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ddc-base ddc-build ddc-code ddc-core ddc-core-eval ddc-core-flow
         ddc-core-llvm ddc-core-salt ddc-core-simpl ddc-core-tetra
         ddc-driver ddc-interface ddc-source-tetra filepath haskeline mtl
         transformers
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler command line tools";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddc-war" = callPackage
    ({ mkDerivation, buildbox, filepath, random, stm }:
     mkDerivation {
       pname = "ddc-war";
       version = "0.4.1.3";
       sha256 = "0y9h4z1drgwgmw9wjf8ga2kiagmfgppdy29l9cz0j4rjz3mm302y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ buildbox filepath random stm ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciplined Disciple Compiler test driver and buildbot";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ddci-core" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, ddc-core-eval, ddc-core-simpl
     , haskeline, haskell-src-exts
     }:
     mkDerivation {
       pname = "ddci-core";
       version = "0.2.1.2";
       sha256 = "1w4kcqivphc9gmj4xnkqx2hbzd3cmssww5hqgja1kh0b03q026w0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ddc-base ddc-core ddc-core-eval ddc-core-simpl haskeline
         haskell-src-exts
       ];
       homepage = "http://disciple.ouroborus.net";
       description = "Disciple Core language interactive interpreter";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dead-simple-json" = callPackage
    ({ mkDerivation, parsec, transformers, vector }:
     mkDerivation {
       pname = "dead-simple-json";
       version = "0.1.2";
       sha256 = "10wp97pxhkvlk3lhknvsnwkl9p7lm1v7y1wk0nn55q68jx1b5zpr";
       buildDepends = [ parsec transformers vector ];
       homepage = "http://hub.darcs.net/scravy/dead-simple-json";
       description = "Dead simple JSON parser, with some Template Haskell sugar";
       license = stdenv.lib.licenses.mit;
     }) {};

  "debian" = callPackage
    ({ mkDerivation, ansi-wl-pprint, bzlib, either, exceptions
     , filepath, HaXml, HUnit, ListLike, mtl, network, network-uri
     , parsec, prettyclass, process-listlike, pureMD5, regex-compat
     , regex-tdfa, text, time, Unixutils, utf8-string, zlib
     }:
     mkDerivation {
       pname = "debian";
       version = "3.85";
       sha256 = "1s9k0dpdja73s1icwma10cl6ix8k61d8xaj3divwqk5xvi9zw9gl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint bzlib either exceptions filepath HaXml HUnit
         ListLike mtl network network-uri parsec prettyclass
         process-listlike pureMD5 regex-compat regex-tdfa text time
         Unixutils utf8-string zlib
       ];
       homepage = "https://github.com/ddssff/debian-haskell";
       description = "Modules for working with the Debian package system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "debian-binary" = callPackage
    ({ mkDerivation, filepath, HSH }:
     mkDerivation {
       pname = "debian-binary";
       version = "0.0.1";
       sha256 = "0k6blaq1p2phydl4pqlqg6kdicrfjhm6h27svws7dq8di3y274fq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath HSH ];
       description = "Utilities to work with debian binary packages";
       license = "unknown";
     }) {};

  "debian-build" = callPackage
    ({ mkDerivation, Cabal, filepath, transformers }:
     mkDerivation {
       pname = "debian-build";
       version = "0.2.1.1";
       sha256 = "0kpxm1vvz3f0pa403lxs79yvfc8aimraw1ggcm4xj0g9px8l5hsx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath transformers ];
       homepage = "http://twitter.com/khibino/";
       description = "Debian package build sequence tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "debug-diff" = callPackage
    ({ mkDerivation, groom, temporary }:
     mkDerivation {
       pname = "debug-diff";
       version = "0.1";
       sha256 = "19k9f92pjh52qnr31l0468hn2klkb8wszs7azwczvxzg8aq7krld";
       buildDepends = [ groom temporary ];
       description = "Display a colorized diff between two Haskell values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "decepticons" = callPackage
    ({ mkDerivation, comonad-transformers }:
     mkDerivation {
       pname = "decepticons";
       version = "0.1.0.0";
       sha256 = "1fnp2c2rdpihvxm5j22z1mrf8pnpcnasvfsrlg7lvg5m76md7k3v";
       buildDepends = [ comonad-transformers ];
       description = "The categorical dual of transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "decoder-conduit" = callPackage
    ({ mkDerivation, binary, conduit }:
     mkDerivation {
       pname = "decoder-conduit";
       version = "0.0.1.1";
       sha256 = "0z5krcl4xd385f7v2bsnfyr7zidqwfjvc6b432gbbn2vcrx966c7";
       buildDepends = [ binary conduit ];
       homepage = "https://github.com/hansonkd/decoder-conduit";
       description = "Conduit for decoding ByteStrings using Data.Binary.Get";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dedukti" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, haskell-src-exts-qq
     , hmk, mtl, parsec, Stream, stringtable-atom, time, wl-pprint
     }:
     mkDerivation {
       pname = "dedukti";
       version = "1.1.4";
       sha256 = "0b7328529m3xl8bj7sncv5rr13ld2aghgqkf55j4n15jagv6g72d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath haskell-src-exts haskell-src-exts-qq hmk mtl parsec Stream
         stringtable-atom time wl-pprint
       ];
       homepage = "http://www.lix.polytechnique.fr/dedukti";
       description = "A type-checker for the λΠ-modulo calculus";
       license = "GPL";
     }) {};

  "deeplearning-hs" = callPackage
    ({ mkDerivation, accelerate, mtl, QuickCheck, repa, repa-algorithms
     , test-framework, test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "deeplearning-hs";
       version = "0.1.0.2";
       sha256 = "1cw29xisgykb20qv3jkpcpaiijicyzkfsgglrsbx1admfzbqv98d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ accelerate mtl repa repa-algorithms vector ];
       testDepends = [
         accelerate mtl QuickCheck repa repa-algorithms test-framework
         test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/ajtulloch/deeplearning-hs";
       description = "Deep Learning in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "deepseq" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "deepseq";
       version = "1.3.0.2";
       sha256 = "09jnfz5158s4fvlfjbz44vb5jsvflagmsrgbk846arymwym6b7bp";
       editedCabalFile = "0gigsy8ivijrj6jyrqkw92nymqi9kg8nqvqnmg9y6fzl47zkllad";
       description = "Deep evaluation of data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "deepseq-generics" = callPackage
    ({ mkDerivation, deepseq, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "deepseq-generics";
       version = "0.1.1.1";
       sha256 = "1icc2gxsbnjjl150msnyysvr9r14kb6s2gm3izrj5a3mwf6l7s08";
       buildDepends = [ deepseq ];
       testDepends = [
         deepseq HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/hvr/deepseq-generics";
       description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "deepseq-th" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "deepseq-th";
       version = "0.1.0.4";
       sha256 = "12wk8higrp12b22zzz1b4ar1q5h7flk22bp2rvswsqri2zkbi965";
       buildDepends = [ deepseq ];
       testDepends = [ deepseq ];
       description = "Template Haskell based deriver for optimised NFData instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "deepzoom" = callPackage
    ({ mkDerivation, filepath, hsmagick }:
     mkDerivation {
       pname = "deepzoom";
       version = "0.1";
       sha256 = "1hisk6yfq4182ak7d1mi1kmnwwlcl8w7gwc8wqkq4l8m3zfyij8k";
       buildDepends = [ filepath hsmagick ];
       description = "A DeepZoom image slicer. Only known to work on 32bit Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "defargs" = callPackage
    ({ mkDerivation, cluss }:
     mkDerivation {
       pname = "defargs";
       version = "0.3";
       sha256 = "1rz37w83awji034spyv4cnfbqb6r98r1bbvzh2i979qh5c5s6ckg";
       buildDepends = [ cluss ];
       homepage = "https://github.com/Kinokkory/defargs";
       description = "default arguments in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "definitive-base" = callPackage
    ({ mkDerivation, deepseq, GLURaw, OpenGL, OpenGLRaw, primitive
     , vector
     }:
     mkDerivation {
       pname = "definitive-base";
       version = "2.3";
       sha256 = "126ln7k6k188xjnig60ksc425fp3hql5znb98h5c1w157jgg0sw9";
       buildDepends = [
         deepseq GLURaw OpenGL OpenGLRaw primitive vector
       ];
       homepage = "http://coiffier.net/projects/definitive-framework.html";
       description = "The base modules of the Definitive framework";
       license = "unknown";
     }) {};

  "definitive-filesystem" = callPackage
    ({ mkDerivation, clock, deepseq, definitive-base
     , definitive-reactive, filepath, primitive, time, vector
     }:
     mkDerivation {
       pname = "definitive-filesystem";
       version = "1.2";
       sha256 = "0bc098igiqzbm25bjaxdxm4jq17kc8bgz1ab0pgm0h5jvy1bf8id";
       editedCabalFile = "089isrgdbc7xv4msnwqhz7kbncj1kjbjmdl9v2awm4d2mbcd8y1s";
       buildDepends = [
         clock deepseq definitive-base definitive-reactive filepath
         primitive time vector
       ];
       homepage = "http://coiffier.net/projects/definitive-framework.html";
       description = "A library that enable you to interact with the filesystem in a definitive way";
       license = "unknown";
     }) {};

  "definitive-graphics" = callPackage
    ({ mkDerivation, binary, clock, cpu, deepseq, definitive-base
     , definitive-parser, definitive-reactive, GLFW, JuicyPixels, mtl
     , primitive, stb-truetype, transformers, utf8-string, vector, zlib
     }:
     mkDerivation {
       pname = "definitive-graphics";
       version = "1.2";
       sha256 = "0ah19j2al9l6pbin821rsicidmg3rd4cc74r8qw095773sa98zyr";
       editedCabalFile = "1vds2sa35gllj5zhk2qck97hbjjlz20qq20cyjphsfcqh3m6gn56";
       buildDepends = [
         binary clock cpu deepseq definitive-base definitive-parser
         definitive-reactive GLFW JuicyPixels mtl primitive stb-truetype
         transformers utf8-string vector zlib
       ];
       homepage = "http://coiffier.net/projects/definitive-framework.html";
       description = "A definitive package allowing you to open windows, read image files and render text to be displayed or saved";
       license = "unknown";
     }) {};

  "definitive-parser" = callPackage
    ({ mkDerivation, cpu, deepseq, definitive-base, GLURaw, OpenGL
     , OpenGLRaw, primitive, utf8-string, vector
     }:
     mkDerivation {
       pname = "definitive-parser";
       version = "2.1";
       sha256 = "0sl77xgk7vjn69mx89k4f3yviz821mg01fga0klqplcccbkzknmh";
       buildDepends = [
         cpu deepseq definitive-base GLURaw OpenGL OpenGLRaw primitive
         utf8-string vector
       ];
       homepage = "http://coiffier.net/projects/definitive-framework.html";
       description = "A parser combinator library for the Definitive framework";
       license = "unknown";
     }) {};

  "definitive-reactive" = callPackage
    ({ mkDerivation, clock, deepseq, definitive-base, primitive, vector
     }:
     mkDerivation {
       pname = "definitive-reactive";
       version = "1.0";
       sha256 = "0gk39602k5yjxxgpd725dnvqhlcnaqgds7g0c8v1h509lc0d7xm3";
       editedCabalFile = "15vpplck9h6ys5szhn8i69409cbgsv8hd01cwgnnjxffqky6lg4c";
       buildDepends = [ clock deepseq definitive-base primitive vector ];
       homepage = "http://coiffier.net/projects/definitive-framework.html";
       description = "A simple Reactive library";
       license = "unknown";
     }) {};

  "definitive-sound" = callPackage
    ({ mkDerivation, alsa-core, alsa-pcm, clock, deepseq
     , definitive-base, primitive, sample-frame, storable-record, vector
     }:
     mkDerivation {
       pname = "definitive-sound";
       version = "1.0";
       sha256 = "01k4h7av4fhp4xchrcbnc1gnnbsh5ngasq55l16n3l438pr73vzj";
       editedCabalFile = "0w9x8k62c6bhm360bj38gkzbbwx770klk50sy2l4xf273yhg148l";
       buildDepends = [
         alsa-core alsa-pcm clock deepseq definitive-base primitive
         sample-frame storable-record vector
       ];
       homepage = "http://coiffier.net/projects/definitive-framework.html";
       description = "A definitive package to handle sound and play it back";
       license = "unknown";
     }) {};

  "deiko-config" = callPackage
    ({ mkDerivation, exceptions, mtl, parsec, text, transformers }:
     mkDerivation {
       pname = "deiko-config";
       version = "0.5.0.0";
       sha256 = "0zhi173mm905aqh52fsw1c9y3hxk07yc1g2s0rrjr75cdl7ssljy";
       buildDepends = [ exceptions mtl parsec text transformers ];
       homepage = "http://github.com/YoEight/deiko-config";
       description = "Small and typesafe configuration library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "deka" = callPackage
    ({ mkDerivation, mpdec, parsec, transformers }:
     mkDerivation {
       pname = "deka";
       version = "0.6.0.2";
       sha256 = "1l23b5v0wjg72vlnyxa87v3j2dxbld536ws8j03ddcwgqgws1fj4";
       buildDepends = [ parsec transformers ];
       extraLibraries = [ mpdec ];
       homepage = "https://github.com/massysett/deka";
       description = "Decimal floating point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "deka-tests" = callPackage
    ({ mkDerivation, deka, parsec, pipes, QuickCheck, quickpull
     , transformers
     }:
     mkDerivation {
       pname = "deka-tests";
       version = "0.6.0.2";
       sha256 = "08226vca64v8brcgci8a3s5fnf4qy8g9drk3lzzd0dq6g8yvypy9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deka parsec pipes QuickCheck transformers ];
       testDepends = [ deka QuickCheck quickpull ];
       homepage = "https://github.com/massysett/deka";
       description = "Tests for deka, decimal floating point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "delaunay" = callPackage
    ({ mkDerivation, AC-Vector, hashable, HUnit, QuickCheck
     , unordered-containers
     }:
     mkDerivation {
       pname = "delaunay";
       version = "0.1.0.2";
       sha256 = "145a220kv3fk2lk6jpvqmmhwmbgiqzkcbsi5hynsg196chydxgvd";
       buildDepends = [ AC-Vector hashable unordered-containers ];
       testDepends = [ AC-Vector HUnit QuickCheck ];
       homepage = "http://github.com/mruegenberg/Delaunay";
       description = "Build a Delaunay triangulation of a set of points";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "delicious" = callPackage
    ({ mkDerivation, curl, feed, json, nano-md5, xml }:
     mkDerivation {
       pname = "delicious";
       version = "0.3.4";
       sha256 = "1dx2y2ggzcwcjs618jmg21342pcd0maqx8pj2hwv80zq6f5v0c50";
       buildDepends = [ curl feed json nano-md5 xml ];
       homepage = "https://github.com/sof/delicious";
       description = "Accessing the del.icio.us APIs from Haskell (v2)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "delimited-text" = callPackage
    ({ mkDerivation, attoparsec, binary, bytestring-show }:
     mkDerivation {
       pname = "delimited-text";
       version = "0.3.0";
       sha256 = "0mn6sv4nm3wbzq5cc9s9kb3xbm9jd5i059xr6qr9mqxa18j78c05";
       buildDepends = [ attoparsec binary bytestring-show ];
       homepage = "http://space.k-hornz.de/software/delimited-text";
       description = "Parse character delimited textual data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "delta-h" = callPackage
    ({ mkDerivation, binary, monad-atom, nlp-scores, text }:
     mkDerivation {
       pname = "delta-h";
       version = "0.0.3";
       sha256 = "0ya0hgvpa9w41gswngg84yxhvll3fyr6b3h56p80yc5bldw700wg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary monad-atom nlp-scores text ];
       homepage = "https://bitbucket.org/gchrupala/delta-h";
       description = "Online entropy-based model of lexical category acquisition";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "demarcate" = callPackage
    ({ mkDerivation, free, hspec, transformers }:
     mkDerivation {
       pname = "demarcate";
       version = "0.1.0";
       sha256 = "130yk7461rwmjgzivsya10xzh0d0ca8pfkxh7fpll239r7xlbds3";
       buildDepends = [ free transformers ];
       testDepends = [ hspec ];
       homepage = "https://github.com/fizruk/demarcate";
       description = "Demarcating transformed monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "denominate" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "denominate";
       version = "0.5.0";
       sha256 = "06jdr1236wlsmapwn6hdmjl41qlig7ck541lynyds0qd6ymcb9k1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath ];
       homepage = "http://protempore.net/denominate/";
       description = "Functions supporting bulk file and directory name normalization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dependent-map" = callPackage
    ({ mkDerivation, dependent-sum }:
     mkDerivation {
       pname = "dependent-map";
       version = "0.1.1.2";
       sha256 = "1g8mq8189c6wr1rik70019gqrnk84c613x9cn5383p7hhfyc0rnn";
       buildDepends = [ dependent-sum ];
       homepage = "https://github.com/mokus0/dependent-map";
       description = "Dependent finite maps (partial dependent products)";
       license = "unknown";
     }) {};

  "dependent-sum" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dependent-sum";
       version = "0.2.1.0";
       sha256 = "1h6wsrh206k6q3jcfdxvlsswbm47x30psp6x30l2z0j9jyf7jpl3";
       homepage = "https://github.com/mokus0/dependent-sum";
       description = "Dependent sum type";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "dependent-sum-template" = callPackage
    ({ mkDerivation, dependent-sum, th-extras }:
     mkDerivation {
       pname = "dependent-sum-template";
       version = "0.0.0.1";
       sha256 = "16p6ckl6ml8lgy42mvivnqphfd73cg8chms3fxid66gv4fif68zl";
       buildDepends = [ dependent-sum th-extras ];
       homepage = "/dev/null";
       description = "Template Haskell code to generate instances of classes in dependent-sum package";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "depends" = callPackage
    ({ mkDerivation, filepath, hspec, QuickCheck, transformers
     , yaml-config
     }:
     mkDerivation {
       pname = "depends";
       version = "0.0.1";
       sha256 = "0y43bhxx5s4v72gc0y1cwfy2h4hyz9x5cab2fbkd7rvj5wn4w4gq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath transformers yaml-config ];
       testDepends = [
         filepath hspec QuickCheck transformers yaml-config
       ];
       description = "A simple configuration management tool for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dephd" = callPackage
    ({ mkDerivation, bio, cmdargs, regex-compat }:
     mkDerivation {
       pname = "dephd";
       version = "0.1.6";
       sha256 = "0qgqlnj7wkmjba5f2rql51g9jhak0ksx3xdmr25j3p6qwb43k5ih";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio cmdargs regex-compat ];
       homepage = "http://malde.org/~ketil/biohaskell/dephd";
       description = "Analyze quality of nucleotide sequences";
       license = "GPL";
     }) {};

  "dequeue" = callPackage
    ({ mkDerivation, QuickCheck, safe }:
     mkDerivation {
       pname = "dequeue";
       version = "0.1.5";
       sha256 = "1z4c3hyk1lbjqm5is1d9qb6sxwv8i870ph7n2h51r631mhxbdnxl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck safe ];
       description = "A typeclass and an implementation for double-ended queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "derangement" = callPackage
    ({ mkDerivation, fgl }:
     mkDerivation {
       pname = "derangement";
       version = "0.1.0";
       sha256 = "13w257bndjpaz7fiz4g2w4v2bmlch07ay5pxxv5ifc4llh665ch0";
       buildDepends = [ fgl ];
       description = "Find derangements of lists";
       license = "GPL";
     }) {};

  "derivation-trees" = callPackage
    ({ mkDerivation, applicative-extras, labeled-tree, mtl }:
     mkDerivation {
       pname = "derivation-trees";
       version = "0.7.3";
       sha256 = "05f77vkqzia91rywkg68ad24j98a7h9aqkd0568x2zmqcndzbisy";
       buildDepends = [ applicative-extras labeled-tree mtl ];
       description = "Typeset Derivation Trees via MetaPost";
       license = "GPL";
     }) {};

  "derive" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, syb, transformers
     , uniplate
     }:
     mkDerivation {
       pname = "derive";
       version = "2.5.18";
       sha256 = "1jqng8v1d4rac8xmrpm7h1pkyr9pfwsbb0ap6pnwzpwz9fns9c3k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath haskell-src-exts syb transformers uniplate
       ];
       homepage = "http://community.haskell.org/~ndm/derive/";
       description = "A program and library to derive instances for data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "derive-IG" = callPackage
    ({ mkDerivation, instant-generics }:
     mkDerivation {
       pname = "derive-IG";
       version = "0.1.1";
       sha256 = "0bggj2jb3bbgxcz75v8q2yx29v88skiwjaj3fxkkynnv5zvrbgwr";
       buildDepends = [ instant-generics ];
       homepage = "http://github.com/konn/derive-IG";
       description = "Macro to derive instances for Instant-Generics using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "derive-gadt" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta }:
     mkDerivation {
       pname = "derive-gadt";
       version = "0.1.1";
       sha256 = "0s6vb3b3chf1gy44a6zsi2z19d6snk12qlk4v8q2smipmj42v7d6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskell-src-exts haskell-src-meta ];
       description = "Instance deriving for (a subset of) GADTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "derive-trie" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "derive-trie";
       version = "0.2.1";
       sha256 = "11c378mh5razibd9ljffm5353v4plrgvkfb62p6029f04sf29jnc";
       homepage = "http://github.com/baldo/derive-trie";
       description = "Automatic derivation of Trie implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "derp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "derp";
       version = "0.1.6";
       sha256 = "0g8y98qjjampbwnxhvjzrs2jczh2mcwsacjq95jxpidgsld00shk";
       description = "Derivative Parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "derp-lib" = callPackage
    ({ mkDerivation, derp }:
     mkDerivation {
       pname = "derp-lib";
       version = "0.0.0.1";
       sha256 = "0j883w01k9scz6cfxljkw9s2kgs9f7vdxyyxxhlvvkgzb0050v0x";
       buildDepends = [ derp ];
       homepage = "http://darcsden.com/kyagrd/derp-lib";
       description = "combinators based on parsing with derivatives (derp) package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "descrilo" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "descrilo";
       version = "0.1.0.2";
       sha256 = "1wvq4gcda39k69hadz9kfxn5bsxqjag4chbbppiwmyp503y8f2k1";
       description = "Loads a list of items with fields";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "despair" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "despair";
       version = "0.0.2";
       sha256 = "1dwhp1izikvj1qfz6shvnl4q519vgjpnfmkwkj8zp875dki87pnj";
       buildDepends = [ random ];
       description = "Despair";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "detrospector" = callPackage
    ({ mkDerivation, binary, cmdargs, hashable, mwc-random, text
     , unordered-containers, zlib
     }:
     mkDerivation {
       pname = "detrospector";
       version = "0.3";
       sha256 = "0fsdbagj9zhbm6hh5rsjgz3iq1raxkljnr65ba506nwxmc052xcn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary cmdargs hashable mwc-random text unordered-containers zlib
       ];
       description = "Markov chain text generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "deunicode" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "deunicode";
       version = "0.1";
       sha256 = "08skd630jj9h3mlxm86s7qkdrpcwhknk21dmlj69126dn67v159f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ utf8-string ];
       description = "Get rid of unicode (utf-8) symbols in Haskell sources";
       license = stdenv.lib.licenses.mit;
     }) {};

  "devil" = callPackage
    ({ mkDerivation, aeson, filepath, hinotify, split, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "devil";
       version = "0.1.1.0";
       sha256 = "1n5rzm40srakb0jv8j9gin6m15x5l37knmdckc4xhwvliyvllrf4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson filepath hinotify split text unordered-containers
       ];
       homepage = "https://github.com/luanzhu/devil";
       description = "A small tool to make it easier to update program managed by Angel";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dewdrop" = callPackage
    ({ mkDerivation, elf, hdis86, syb }:
     mkDerivation {
       pname = "dewdrop";
       version = "0.1";
       sha256 = "1xi78d31hljbybpm3jzs4l3g35sdfhmmm7ksivjdi91gv9m88l0n";
       buildDepends = [ elf hdis86 syb ];
       homepage = "https://github.com/kmcallister/dewdrop";
       description = "Find gadgets for return-oriented programming on x86";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dfrac" = callPackage
    ({ mkDerivation, scientific }:
     mkDerivation {
       pname = "dfrac";
       version = "0.1.2.0";
       sha256 = "1ybq5bnh85dbr9lfx5d6qw87x9qc8fs0yvbi1a6860an13lvrzy7";
       buildDepends = [ scientific ];
       description = "A package for precise decimal arithmatic using rationals";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dfsbuild" = callPackage
    ({ mkDerivation, ConfigFile, filepath, HSH, hslogger, MissingH
     , network, parsec, random, regex-compat
     }:
     mkDerivation {
       pname = "dfsbuild";
       version = "1.0.2";
       sha256 = "0nh5cvb8macw523iids072rs9kylkv8zrliraw1jrvmhsznkj05x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile filepath HSH hslogger MissingH network parsec random
         regex-compat
       ];
       description = "Build Debian From Scratch CD/DVD images";
       license = "GPL";
     }) {};

  "dgs" = callPackage
    ({ mkDerivation, HTTP, mtl, network, split }:
     mkDerivation {
       pname = "dgs";
       version = "0.2";
       sha256 = "100xlxqhy33kllyb4dy7q0bwwy5wn9w45qy1cb5f0yb0dqff1pnx";
       buildDepends = [ HTTP mtl network split ];
       homepage = "http://www.dmwit.com/dgs";
       description = "Haskell front-end for DGS' bot interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dia-base" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "dia-base";
       version = "0.1.1.2";
       sha256 = "08j65fgxrbp8mdhs887w6hj4wakxrkbk9nr5kk9jy0bahw7dw9c5";
       buildDepends = [ deepseq ];
       description = "An EDSL for teaching Haskell with diagrams - data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dia-functions" = callPackage
    ({ mkDerivation, data-pprint, deepseq, dia-base, mtl, xhtml }:
     mkDerivation {
       pname = "dia-functions";
       version = "0.2.1.3";
       sha256 = "0zay364hmrd1759i89g8bv8845hd9b3dnvicz3ybnqk5bcn6aq1l";
       buildDepends = [ data-pprint deepseq dia-base mtl xhtml ];
       description = "An EDSL for teaching Haskell with diagrams - functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams" = callPackage
    ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
     , diagrams-svg
     }:
     mkDerivation {
       pname = "diagrams";
       version = "1.2";
       sha256 = "17j7hyd86h9msc8ni19agb0yhixga76q9kh4i109iyiyqizdnfhg";
       buildDepends = [
         diagrams-contrib diagrams-core diagrams-lib diagrams-svg
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative vector graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-builder" = callPackage
    ({ mkDerivation, cmdargs, diagrams-lib, exceptions, filepath
     , hashable, haskell-src-exts, hint, lens, mtl, split, transformers
     }:
     mkDerivation {
       pname = "diagrams-builder";
       version = "0.6.0.2";
       sha256 = "18avlhwywhrxlf1cyp9fdiy0i3gy12k4i28cymllmmyx78fv59q5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs diagrams-lib exceptions filepath hashable haskell-src-exts
         hint lens mtl split transformers
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "hint-based build service for the diagrams graphics EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-cairo" = callPackage
    ({ mkDerivation, cairo, colour, data-default-class, diagrams-core
     , diagrams-lib, filepath, hashable, JuicyPixels, lens, mtl
     , optparse-applicative, pango, split, statestack, time
     , transformers, vector
     }:
     mkDerivation {
       pname = "diagrams-cairo";
       version = "1.2.0.4";
       sha256 = "1yg6ja5jha499b6j5fsgdl4f3l2ff1gp6cl7ixzj9y26m7a10bqq";
       buildDepends = [
         cairo colour data-default-class diagrams-core diagrams-lib filepath
         hashable JuicyPixels lens mtl optparse-applicative pango split
         statestack time transformers vector
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Cairo backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-canvas" = callPackage
    ({ mkDerivation, blank-canvas, cmdargs, data-default-class
     , diagrams-core, diagrams-lib, lens, mtl, NumInstances
     , optparse-applicative, statestack, text, vector-space
     }:
     mkDerivation {
       pname = "diagrams-canvas";
       version = "0.3.0.2";
       sha256 = "1y1wm5ziy6wrz75dgs8wjvlzb3g7bgk21smm9d247bghpjnrwshv";
       buildDepends = [
         blank-canvas cmdargs data-default-class diagrams-core diagrams-lib
         lens mtl NumInstances optparse-applicative statestack text
         vector-space
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-contrib" = callPackage
    ({ mkDerivation, arithmoi, circle-packing, colour, data-default
     , data-default-class, diagrams-core, diagrams-lib, force-layout
     , HUnit, lens, MonadRandom, mtl, parsec, QuickCheck, semigroups
     , split, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, vector-space
     , vector-space-points
     }:
     mkDerivation {
       pname = "diagrams-contrib";
       version = "1.1.2.4";
       sha256 = "0iq5psy5wjm664hqsaprynba0b7x3ijxngh7mbk6hkh004vsna1w";
       buildDepends = [
         arithmoi circle-packing colour data-default data-default-class
         diagrams-core diagrams-lib force-layout lens MonadRandom mtl parsec
         semigroups split text vector-space vector-space-points
       ];
       testDepends = [
         diagrams-lib HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Collection of user contributions to diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-core" = callPackage
    ({ mkDerivation, dual-tree, lens, MemoTrie, monoid-extras, newtype
     , semigroups, vector-space, vector-space-points
     }:
     mkDerivation {
       pname = "diagrams-core";
       version = "1.2.0.4";
       sha256 = "1axkgprqs4jvzh5vfr118nzr1h0m48axr5jfiqqrqvy5xyjcagkq";
       buildDepends = [
         dual-tree lens MemoTrie monoid-extras newtype semigroups
         vector-space vector-space-points
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Core libraries for diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-gtk" = callPackage
    ({ mkDerivation, cairo, diagrams-cairo, diagrams-lib, gtk }:
     mkDerivation {
       pname = "diagrams-gtk";
       version = "1.0.1.3";
       sha256 = "1bcgplmg01sp7iwhgx7ircbn9bj15m42w6vkh539sd65y01z3hc8";
       buildDepends = [ cairo diagrams-cairo diagrams-lib gtk ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Backend for rendering diagrams directly to GTK windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-haddock" = callPackage
    ({ mkDerivation, ansi-terminal, base64-bytestring, blaze-svg, Cabal
     , cautious-file, cmdargs, cpphs, diagrams-builder, diagrams-lib
     , diagrams-svg, filepath, haskell-src-exts, lens, mtl, parsec
     , QuickCheck, split, strict, tasty, tasty-quickcheck, text
     , uniplate, vector-space
     }:
     mkDerivation {
       pname = "diagrams-haddock";
       version = "0.2.2.12";
       sha256 = "1yrbrq54ihxh7pnn3cax3r880mawpxmp044bdb581ah1ch3l8ch6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal base64-bytestring blaze-svg Cabal cautious-file
         cmdargs cpphs diagrams-builder diagrams-lib diagrams-svg filepath
         haskell-src-exts lens mtl parsec split strict text uniplate
         vector-space
       ];
       testDepends = [
         haskell-src-exts lens parsec QuickCheck tasty tasty-quickcheck
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Preprocessor for embedding diagrams in Haddock documentation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-lib" = callPackage
    ({ mkDerivation, active, colour, data-default-class, diagrams-core
     , dual-tree, filepath, fingertree, hashable, intervals, JuicyPixels
     , lens, MemoTrie, monoid-extras, optparse-applicative, semigroups
     , tagged, vector-space, vector-space-points
     }:
     mkDerivation {
       pname = "diagrams-lib";
       version = "1.2.0.7";
       sha256 = "12ddlipp47j2mifwhi0ilb2fjdh2whk24s4d5h6ais2znj3hh99a";
       buildDepends = [
         active colour data-default-class diagrams-core dual-tree filepath
         fingertree hashable intervals JuicyPixels lens MemoTrie
         monoid-extras optparse-applicative semigroups tagged vector-space
         vector-space-points
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-pdf" = callPackage
    ({ mkDerivation, cmdargs, colour, diagrams-core, diagrams-lib
     , filepath, HPDF, lens, monoid-extras, mtl, semigroups, split
     , vector-space
     }:
     mkDerivation {
       pname = "diagrams-pdf";
       version = "0.3.1";
       sha256 = "0wi38w0r1n1zm49r16vhmgg14v3pw7ca6wwb85y3zrbjmzfa37vy";
       buildDepends = [
         cmdargs colour diagrams-core diagrams-lib filepath HPDF lens
         monoid-extras mtl semigroups split vector-space
       ];
       homepage = "http://www.alpheccar.org";
       description = "PDF backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-postscript" = callPackage
    ({ mkDerivation, data-default-class, diagrams-core, diagrams-lib
     , dlist, filepath, hashable, lens, monoid-extras, mtl, semigroups
     , split, vector-space
     }:
     mkDerivation {
       pname = "diagrams-postscript";
       version = "1.1.0.3";
       sha256 = "172r7q9jzhy2kv5bsbakakwv6gpvy308gvp8xpirbch9mrvnjxhz";
       buildDepends = [
         data-default-class diagrams-core diagrams-lib dlist filepath
         hashable lens monoid-extras mtl semigroups split vector-space
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Postscript backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-qrcode" = callPackage
    ({ mkDerivation, colour, diagrams-core, diagrams-lib }:
     mkDerivation {
       pname = "diagrams-qrcode";
       version = "1.2";
       sha256 = "15c1h0izxi475b1n8q3dmg0kpp7dk0s4nifnxcq3lbq71jmsg8ll";
       buildDepends = [ colour diagrams-core diagrams-lib ];
       homepage = "https://github.com/prowdsponsor/diagrams-qrcode";
       description = "Draw QR codes to SVG, PNG, PDF or PS files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-rasterific" = callPackage
    ({ mkDerivation, data-default-class, diagrams-core, diagrams-lib
     , filepath, FontyFruity, JuicyPixels, lens, mtl
     , optparse-applicative, Rasterific, split, statestack, time
     }:
     mkDerivation {
       pname = "diagrams-rasterific";
       version = "0.1.0.5";
       sha256 = "1a95l8g55jsmqhbv9flk5kfkfa40z93axbjfz6xb74lyvl6xccwr";
       buildDepends = [
         data-default-class diagrams-core diagrams-lib filepath FontyFruity
         JuicyPixels lens mtl optparse-applicative Rasterific split
         statestack time
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Rasterific backend for diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-svg" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-markup, blaze-svg, colour
     , diagrams-core, diagrams-lib, filepath, hashable, JuicyPixels
     , lens, monoid-extras, mtl, split, time, vector-space
     }:
     mkDerivation {
       pname = "diagrams-svg";
       version = "1.1.0.3";
       sha256 = "0byqxwz9h1hi2yrq2vz32gv0az9q3l94qa2q3nl3j8sa64qmpdwq";
       buildDepends = [
         base64-bytestring blaze-markup blaze-svg colour diagrams-core
         diagrams-lib filepath hashable JuicyPixels lens monoid-extras mtl
         split time vector-space
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "SVG backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diagrams-tikz" = callPackage
    ({ mkDerivation, diagrams-core, diagrams-lib, dlist, mtl }:
     mkDerivation {
       pname = "diagrams-tikz";
       version = "0.6";
       sha256 = "1qs4m1xy62pv6gjgip9vx2pwlv2gzjq1h86yiiq15yg4gcbn5fav";
       buildDepends = [ diagrams-core diagrams-lib dlist mtl ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "TikZ backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dice" = callPackage
    ({ mkDerivation, parsec, random-fu, transformers }:
     mkDerivation {
       pname = "dice";
       version = "0.1";
       sha256 = "1rfx3vh983f3gc6si661zimhjl47ip30l3pvf7dysjirr3gffgz1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec random-fu transformers ];
       description = "Simplistic D&D style dice-rolling system";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "dice-entropy-conduit" = callPackage
    ({ mkDerivation, conduit, entropy, QuickCheck, test-framework
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "dice-entropy-conduit";
       version = "1.0.0.1";
       sha256 = "01xwxajwyvv6ac48j9if6xsv05aqg1p02i7d25ivk1k56ky41l1s";
       buildDepends = [ conduit entropy transformers ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://monoid.at/code";
       description = "Cryptographically secure n-sided dice via rejection sampling";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "dictparser" = callPackage
    ({ mkDerivation, hspec, parsec, split }:
     mkDerivation {
       pname = "dictparser";
       version = "0.3.0.0";
       sha256 = "1wjxcn53h9rp8jancspb9yq4h26215b63pghw802wgh073vp9h0i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec split ];
       testDepends = [ hspec parsec ];
       homepage = "http://github.com/mwotton/dictparser";
       description = "Parsec parsers for the DICT format produced by dictfmt -t";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diet" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "diet";
       version = "0.0.1";
       sha256 = "0qkyfmys5k6la10dvi8wsmw120xfarjblpkr33xiazll2m9845wh";
       homepage = "https://github.com/tonymorris/diet";
       description = "Discrete Interval Encoding Tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diff-parse" = callPackage
    ({ mkDerivation, attoparsec, hspec, text }:
     mkDerivation {
       pname = "diff-parse";
       version = "0.1.2";
       sha256 = "1pcddda822n5zsjzs4ld4prjj04v4cgpk3hvjn7ivmdnb06g85il";
       buildDepends = [ attoparsec text ];
       testDepends = [ attoparsec hspec text ];
       description = "A parser for diff file formats";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "diff3" = callPackage
    ({ mkDerivation, Diff, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "diff3";
       version = "0.2.0.3";
       sha256 = "0zdfn1jhsq8pd23qpkhzr8wgiwbazfbq688bjnpc406i7gq88k78";
       buildDepends = [ Diff ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/ocharles/diff3.git";
       description = "Perform a 3-way difference of documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diffarray" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "diffarray";
       version = "0.1.1";
       sha256 = "0p95i1xzp0bdm0zrdil79rfxfyz372y2qjdxyvxdzxvfb1mvalcm";
       description = "DiffArray";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diffcabal" = callPackage
    ({ mkDerivation, Cabal, Diff, filepath }:
     mkDerivation {
       pname = "diffcabal";
       version = "0.1.1";
       sha256 = "0ggla2i4jw24a3vdq2xyz70asp80s5jl5nkwms6ck4r69zm3mci6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal Diff filepath ];
       homepage = "http://code.haskell.org/~dons/code/diffcabal";
       description = "Diff two .cabal files syntactically";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diffdump" = callPackage
    ({ mkDerivation, ansi-terminal, cmdargs, filemanip, filepath
     , parallel-io, process-extras
     }:
     mkDerivation {
       pname = "diffdump";
       version = "0.7.5";
       sha256 = "08z1h3xf3j5xzhf08i9w7hvg05wvqcf13k50chx6av70f0cs2rvh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cmdargs filemanip filepath parallel-io process-extras
       ];
       description = "Tools for diffing stdout";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digamma" = callPackage
    ({ mkDerivation, polynomial }:
     mkDerivation {
       pname = "digamma";
       version = "0.1";
       sha256 = "0qij2pn107dfb9rl9rrd77l69wmfp9fghv9ysql2d7g5qdr306pd";
       buildDepends = [ polynomial ];
       homepage = "https://github.com/bgamari/digamma";
       description = "A robust implementation of the digamma function";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digest" = callPackage
    ({ mkDerivation, zlib }:
     mkDerivation {
       pname = "digest";
       version = "0.0.1.2";
       sha256 = "04gy2zp8yzvv7j9bdfvmfzcz3sqyqa6rwslqcn4vyair2vmif5v4";
       extraLibraries = [ zlib ];
       description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) zlib; };

  "digest-pure" = callPackage
    ({ mkDerivation, digest, QuickCheck }:
     mkDerivation {
       pname = "digest-pure";
       version = "0.0.3";
       sha256 = "0rb5jkzn1d4z90hd47qh98mf4n90wvj0cqf3qfpj7ndvw52yy95w";
       testDepends = [ digest QuickCheck ];
       homepage = "http://github.com/danieldk/digest-pure";
       description = "Pure hash functions for bytestrings";
       license = "unknown";
     }) {};

  "digestive-bootstrap" = callPackage
    ({ mkDerivation, blaze-bootstrap, blaze-html, digestive-functors
     , digestive-functors-blaze, http-types, text
     }:
     mkDerivation {
       pname = "digestive-bootstrap";
       version = "0.1.0.0";
       sha256 = "0c1hd3l29sci624r4gwp3ndzmancwdy9dp3gz2fmd4jniani3kzz";
       buildDepends = [
         blaze-bootstrap blaze-html digestive-functors
         digestive-functors-blaze http-types text
       ];
       description = "Speed up form designing using digestive functors and bootstrap";
       license = stdenv.lib.licenses.mit;
     }) {};

  "digestive-functors" = callPackage
    ({ mkDerivation, HUnit, mtl, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "digestive-functors";
       version = "0.7.1.1";
       sha256 = "161461y8gil2922gx6kdc59g50ywk9nk74gkxl0yrwvz80a118c9";
       buildDepends = [ mtl text time ];
       testDepends = [
         HUnit mtl QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text time
       ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "A practical formlet library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digestive-functors-aeson" = callPackage
    ({ mkDerivation, aeson, digestive-functors, HUnit, lens, lens-aeson
     , mtl, safe, scientific, tasty, tasty-hunit, text, vector
     }:
     mkDerivation {
       pname = "digestive-functors-aeson";
       version = "1.1.12.1";
       sha256 = "1jwrlmavwjq3bf8ylazi91mwl47n5pdh3lipv4p7v0gq45dm3hg9";
       buildDepends = [
         aeson digestive-functors lens lens-aeson safe text vector
       ];
       testDepends = [
         aeson digestive-functors HUnit mtl scientific tasty tasty-hunit
         text
       ];
       homepage = "http://github.com/ocharles/digestive-functors-aeson";
       description = "Run digestive-functors forms against JSON";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "digestive-functors-blaze" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, digestive-functors, text
     }:
     mkDerivation {
       pname = "digestive-functors-blaze";
       version = "0.6.0.4";
       sha256 = "04ldrbwla8gcsan8hahjgf4mzm6wz7kxhwrikqgnyv0dm45ias7c";
       buildDepends = [ blaze-html blaze-markup digestive-functors text ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "Blaze frontend for the digestive-functors library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digestive-functors-happstack" = callPackage
    ({ mkDerivation, digestive-functors, happstack-server, text }:
     mkDerivation {
       pname = "digestive-functors-happstack";
       version = "0.6.1.0";
       sha256 = "02akxqb8zmc4gbgs79g8k5ycp20c54zc025vl6l3b4mc45lp73r4";
       buildDepends = [ digestive-functors happstack-server text ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "Happstack backend for the digestive-functors library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digestive-functors-heist" = callPackage
    ({ mkDerivation, blaze-builder, digestive-functors, heist, mtl
     , text, xmlhtml
     }:
     mkDerivation {
       pname = "digestive-functors-heist";
       version = "0.8.6.1";
       sha256 = "1l8ppn2h1nxzn5wxnglc2fyi7r90177v75yf4n7cyvzrcxdaz4bb";
       buildDepends = [
         blaze-builder digestive-functors heist mtl text xmlhtml
       ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "Heist frontend for the digestive-functors library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digestive-functors-hsp" = callPackage
    ({ mkDerivation, digestive-functors, hsp, hsx, text, trhsx }:
     mkDerivation {
       pname = "digestive-functors-hsp";
       version = "0.5.0";
       sha256 = "00n1cxkrkd3ayl7pp6pr7nyx6zcwqpsqzflnnnf0f8dabrz4wzdc";
       buildDepends = [ digestive-functors hsp hsx text ];
       buildTools = [ trhsx ];
       homepage = "http://src.seereason.com/digestive-functors-hsp";
       description = "HSP support for digestive-functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digestive-functors-scotty" = callPackage
    ({ mkDerivation, digestive-functors, http-types, scotty, text, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "digestive-functors-scotty";
       version = "0.2.0.2";
       sha256 = "0flm1akhx3fj8pli3nz9s7asah7cfm9afz99jx3f4rv7352saclp";
       buildDepends = [
         digestive-functors http-types scotty text wai wai-extra
       ];
       homepage = "https://bitbucket.org/wniare/digestive-functors-scotty";
       description = "Scotty backend for the digestive-functors library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digestive-functors-snap" = callPackage
    ({ mkDerivation, digestive-functors, filepath, mtl, snap-core, text
     }:
     mkDerivation {
       pname = "digestive-functors-snap";
       version = "0.6.1.0";
       sha256 = "07xb8jr70j03kggk55p3zzp07y7amzm7f8hdzry4vff7yx41rxhr";
       buildDepends = [ digestive-functors filepath mtl snap-core text ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "Snap backend for the digestive-functors library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digit" = callPackage
    ({ mkDerivation, doctest, filepath, lens, QuickCheck }:
     mkDerivation {
       pname = "digit";
       version = "0.1.1";
       sha256 = "18l6ca3kgp0g8zmai6jsq6pz7hjilcnyspvz95h9pqklhh2z32qk";
       buildDepends = [ lens ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/NICTA/digit";
       description = "A data-type representing digits 0-9 and other combinations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "digits" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "digits";
       version = "0.2";
       sha256 = "18s9k7kj0qvd4297msl0k6ziwfb5bl1gwnxlrl8b4rkqda4kf17l";
       buildDepends = [ QuickCheck ];
       description = "Converts integers to lists of digits and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dimensional" = callPackage
    ({ mkDerivation, numtype, time }:
     mkDerivation {
       pname = "dimensional";
       version = "0.13.0.1";
       sha256 = "1cn7gyskp0ax5lm5k05p6qp461hirjyhj0k1qyd64fgdmmp81vi6";
       buildDepends = [ numtype time ];
       homepage = "http://dimensional.googlecode.com/";
       description = "Statically checked physical dimensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dimensional-tf" = callPackage
    ({ mkDerivation, numtype-tf, time }:
     mkDerivation {
       pname = "dimensional-tf";
       version = "0.3.0.1";
       sha256 = "0gnaylxhjcyvsibq15bw9k4c846l2329yvvl79cdw2jqggfnzxw6";
       buildDepends = [ numtype-tf time ];
       homepage = "http://dimensional.googlecode.com/";
       description = "Statically checked physical dimensions, implemented using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dingo-core" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring
     , blaze-builder, blaze-html, blaze-textual, conduit, cookie
     , deepseq, fclabels, file-embed, hashable, http-types, random, SHA
     , shakespeare-js, strict-concurrency, text, transformers
     , unordered-containers, wai, wai-eventsource, wai-extra, warp
     , web-css
     }:
     mkDerivation {
       pname = "dingo-core";
       version = "0.2.0";
       sha256 = "1h0ir5h6nq2c8qk4irbcai87mxgiyahyi2lcxps959zja70pmqf5";
       buildDepends = [
         aeson attoparsec base64-bytestring blaze-builder blaze-html
         blaze-textual conduit cookie deepseq fclabels file-embed hashable
         http-types random SHA shakespeare-js strict-concurrency text
         transformers unordered-containers wai wai-eventsource wai-extra
         warp web-css
       ];
       description = "Dingo is a Rich Internet Application platform based on the Warp web server";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dingo-example" = callPackage
    ({ mkDerivation, aeson, blaze-html, dingo-core, dingo-widgets
     , fclabels, shakespeare-js, text, transformers
     }:
     mkDerivation {
       pname = "dingo-example";
       version = "0.2.0";
       sha256 = "0mla83bijf077bx16r9rsvbyr8v684j1bfllfw7kswlgyz37rf4b";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson blaze-html dingo-core dingo-widgets fclabels shakespeare-js
         text transformers
       ];
       description = "Dingo Example";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dingo-widgets" = callPackage
    ({ mkDerivation, aeson, blaze-html, dingo-core, fclabels
     , file-embed, shakespeare-js, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "dingo-widgets";
       version = "0.2.0";
       sha256 = "1d61l2c6vwpngffr5ynm3zrvn7as9zgsm3zg18ldq958s0mvdn8p";
       buildDepends = [
         aeson blaze-html dingo-core fclabels file-embed shakespeare-js text
         transformers unordered-containers
       ];
       description = "Dingo Widgets";
       license = stdenv.lib.licenses.mit;
     }) {};

  "diophantine" = callPackage
    ({ mkDerivation, happy }:
     mkDerivation {
       pname = "diophantine";
       version = "0.2.1.0";
       sha256 = "118r59mwvihzqsjd530x4pdnvqjk87b3jjdhx5avq31cfdbiyaj9";
       buildTools = [ happy ];
       homepage = "https://github.com/llllllllll/Math.Diophantine";
       description = "A quadratic diophantine equation solving library";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "direct-binary-files" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "direct-binary-files";
       version = "1.0";
       sha256 = "0ci6av8sgrlsn12dbpvqf3imq9w1hm2ll5np2fz7gh9760vvdidr";
       buildDepends = [ mtl ];
       homepage = "http://ireneknapp.com/software/";
       description = "Serialization and deserialization monads for streams and ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "direct-daemonize" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "direct-daemonize";
       version = "3.1";
       sha256 = "0698l8zylkgafx8g91icysz6rq2lyrnd25blhday67s9vkdpbvxh";
       homepage = "http://dankna.com/software/";
       description = "Library to switch to daemon mode using built-in OS facilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "direct-fastcgi" = callPackage
    ({ mkDerivation, mtl, network, utf8-string }:
     mkDerivation {
       pname = "direct-fastcgi";
       version = "1.0.3";
       sha256 = "049z23gkssk3h8sx9xr3baln3hz5cykf2zp9kzmvbk2n4ky8fs78";
       buildDepends = [ mtl network utf8-string ];
       homepage = "http://dankna.com/software/";
       description = "Native implementation of the FastCGI protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "direct-http" = callPackage
    ({ mkDerivation, direct-daemonize, lifted-base, monad-control, mtl
     , network, SafeSemaphore, time, transformers-base, utf8-string
     }:
     mkDerivation {
       pname = "direct-http";
       version = "0.6";
       sha256 = "0aghfhg0nx2bqi56cw5hnnqxnjbziihn36yqpq12gyhnahwdfvpg";
       buildDepends = [
         direct-daemonize lifted-base monad-control mtl network
         SafeSemaphore time transformers-base utf8-string
       ];
       homepage = "http://ireneknapp.com/software/";
       description = "Native webserver that acts as a library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "direct-murmur-hash" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "direct-murmur-hash";
       version = "1.0";
       sha256 = "1br1xi3pcv52pn3a51nnaxn1kvg5fg0z1ys11gamzkjjk60qxnmk";
       homepage = "http://ireneknapp.com/software/";
       description = "An implementation of the MurmurHash3 algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "direct-plugins" = callPackage
    ({ mkDerivation, ghc-paths }:
     mkDerivation {
       pname = "direct-plugins";
       version = "1.1";
       sha256 = "03f7jrx0skqiirvpzzakk3wwwdjanjxpzv8j5nwpzvqpb4syshcr";
       buildDepends = [ ghc-paths ];
       homepage = "http://dankna.com/software/";
       description = "Lightweight replacement for Plugins, specific to GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "direct-sqlite" = callPackage
    ({ mkDerivation, base16-bytestring, HUnit, text }:
     mkDerivation {
       pname = "direct-sqlite";
       version = "2.3.14";
       sha256 = "0xxvr2wln54snkvs2r46fkkn7yhm6i2afgww40vnfqamg8g81x5w";
       buildDepends = [ text ];
       testDepends = [ base16-bytestring HUnit text ];
       homepage = "https://github.com/IreneKnapp/direct-sqlite";
       description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "directed-cubical" = callPackage
    ({ mkDerivation, deepseq, hashable, parallel, QuickCheck
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "directed-cubical";
       version = "0.1.2.0";
       sha256 = "0wy6p5nymri7l1ldc6c34b9y4ncmzr2wpidbqjrmacxg07iypn3z";
       buildDepends = [
         deepseq hashable parallel QuickCheck unordered-containers vector
       ];
       description = "Finite directed cubical complexes and associated algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "directory" = callPackage
    ({ mkDerivation, filepath, time }:
     mkDerivation {
       pname = "directory";
       version = "1.2.1.0";
       sha256 = "110ch0nd2hh5fsq3whrvj85s0h27ch1q6xg7z9s6mqbd6k6p9yzs";
       editedCabalFile = "0bvl4zfx13bnlb234nh7ax9djdik52vmbkbdd7df0s0kbq0zdz85";
       buildDepends = [ filepath time ];
       description = "library for directory handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "directory-layout" = callPackage
    ({ mkDerivation, command-qq, doctest, filepath, free, hspec, lens
     , semigroups, temporary, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "directory-layout";
       version = "0.7.4.1";
       sha256 = "0hj7dfv5i2s1dk0rws2fg84crpxz1kgvrq68f373a6hwkbfhv89b";
       buildDepends = [
         command-qq filepath free hspec lens semigroups text transformers
         unordered-containers
       ];
       testDepends = [
         command-qq doctest filepath free hspec lens semigroups temporary
         text transformers unordered-containers
       ];
       description = "Directory layout DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "directory-tree" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "directory-tree";
       version = "0.12.0";
       sha256 = "1idknm7fwci91fkwvzl35g0qd0jk1vb00ds2x82zjf2hdbkcc2gz";
       buildDepends = [ filepath ];
       testDepends = [ filepath ];
       homepage = "http://brandon.si/code/directory-tree-module-released/";
       description = "A simple directory-like tree datatype, with useful IO functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dirfiles" = callPackage
    ({ mkDerivation, aeson, hblock, safecopy, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "dirfiles";
       version = "0.1.0.9";
       sha256 = "0jqavj2s28ffaql3mcgasxa8fg0bv0v6irr2a5334jqydksj0b96";
       buildDepends = [
         aeson hblock safecopy text time unordered-containers
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dirstream" = callPackage
    ({ mkDerivation, pipes, pipes-safe, system-fileio, system-filepath
     }:
     mkDerivation {
       pname = "dirstream";
       version = "1.0.0";
       sha256 = "1hxmcc62h21zsy5bgm9m4d4q7vcgps168j2mp365d2wva56r87vw";
       buildDepends = [ pipes pipes-safe system-fileio system-filepath ];
       description = "Easily stream directory contents in constant memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "disassembler" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "disassembler";
       version = "0.2.0.0";
       sha256 = "125191kzflzdj2wnghfc3dzpdxqc44iir5ypvhsz5xb773cdxwxv";
       buildDepends = [ mtl parsec ];
       description = "Disassembler for X86 & AMD64 machine code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "discordian-calendar" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "discordian-calendar";
       version = "0.1";
       sha256 = "0ykbfisrb6k8vsqx5avv99j0z4j4615hmql263h12jzhjxfzd22d";
       buildDepends = [ time ];
       homepage = "https://github.com/kallisti-dev/discordian-calendar";
       description = "library for handling Discordian calendar dates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "discount" = callPackage
    ({ mkDerivation, markdown, text }:
     mkDerivation {
       pname = "discount";
       version = "0.1.1";
       sha256 = "1q1lz9dgxp5kq0ngh7pagijmlc616vwrfrb14pjx2vc9s7yvg779";
       buildDepends = [ text ];
       extraLibraries = [ markdown ];
       homepage = "http://github.com/lightquake/discount";
       description = "Haskell bindings to the discount Markdown library";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) markdown; };

  "discrete-space-map" = callPackage
    ({ mkDerivation, adjunctions, comonad, distributive, keys
     , semigroupoids
     }:
     mkDerivation {
       pname = "discrete-space-map";
       version = "0.0.3";
       sha256 = "1f3idrz60plnsp5hc6xad0pfx292m9m8aiax2rw2q8gj0smzqv3k";
       buildDepends = [
         adjunctions comonad distributive keys semigroupoids
       ];
       homepage = "https://github.com/sjoerdvisscher/discrete-space-map";
       description = "A discrete space map";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "disjoint-set" = callPackage
    ({ mkDerivation, HUnit, mtl, QuickCheck, transformers }:
     mkDerivation {
       pname = "disjoint-set";
       version = "0.2";
       sha256 = "05m7liind4fdw5lw8a8381hm6rjzsqz86qzir79y30pj0axayc3z";
       buildDepends = [ mtl transformers ];
       testDepends = [ HUnit mtl QuickCheck transformers ];
       homepage = "https://github.com/maxwellsayles/disjoint-set";
       description = "Persistent disjoint-sets, a.k.a union-find.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "disjoint-sets-st" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "disjoint-sets-st";
       version = "0.1";
       sha256 = "0yy4gp5jhfsj3gbk7gh3yplxkxxfsmrl84chp4wfr4v46ff9pc2m";
       homepage = "http://github.com/ppetr/disjoint-sets-st/";
       description = "Imperative ST/IO based disjoint set data structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "disk-free-space" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "disk-free-space";
       version = "0.1.0.0";
       sha256 = "03dfvywfs2mx00ip8pn3dvji6bjjlzvfy9m51d6zz8h3j3alwf5m";
       homepage = "https://github.com/redneb/disk-free-space";
       description = "Retrieve information about disk space usage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dist-upload" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "dist-upload";
       version = "0.0.4";
       sha256 = "1i9g4jqmmjydcvi07878k6yb5kvxab6dlw3j6nkjdn4mcsc50s71";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       description = "Generate/Upload cabal package to Hackage";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "distributed-process" = callPackage
    ({ mkDerivation, binary, data-accessor, deepseq, distributed-static
     , hashable, mtl, network-transport, random, rank1dynamic, stm, syb
     , time, transformers
     }:
     mkDerivation {
       pname = "distributed-process";
       version = "0.5.2";
       sha256 = "04llhz9z28365idgj13hhwkp98zwqv6mhhy9i7416wk5d3r70g7l";
       buildDepends = [
         binary data-accessor deepseq distributed-static hashable mtl
         network-transport random rank1dynamic stm syb time transformers
       ];
       homepage = "http://haskell-distributed.github.com/";
       description = "Cloud Haskell: Erlang-style concurrency in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distributed-process-azure" = callPackage
    ({ mkDerivation, azure-service-api, binary, certificate
     , distributed-process, distributed-static, executable-path
     , filepath, libssh2, mtl, network-transport, network-transport-tcp
     , pureMD5, rank1dynamic, transformers
     }:
     mkDerivation {
       pname = "distributed-process-azure";
       version = "0.1.0";
       sha256 = "0dc0izlsxzcr5jyiad5yvgs5sp5b6dqwr6gxxkk99p7h1wpd4r2g";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         azure-service-api binary certificate distributed-process
         distributed-static executable-path filepath libssh2 mtl
         network-transport network-transport-tcp pureMD5 rank1dynamic
         transformers
       ];
       homepage = "http://github.com/haskell-distributed/distributed-process";
       description = "Microsoft Azure backend for Cloud Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distributed-process-monad-control" = callPackage
    ({ mkDerivation, distributed-process, monad-control, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "distributed-process-monad-control";
       version = "0.5.0";
       sha256 = "1ja6xwdpssm7wafv2id6c3f49iw7pkks2smk6l1n1dxkh029z8nk";
       buildDepends = [
         distributed-process monad-control transformers transformers-base
       ];
       homepage = "http://haskell-distributed.github.io";
       description = "Orphan instances for MonadBase and MonadBaseControl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distributed-process-p2p" = callPackage
    ({ mkDerivation, binary, distributed-process, mtl, network
     , network-transport, network-transport-tcp
     }:
     mkDerivation {
       pname = "distributed-process-p2p";
       version = "0.1.3.0";
       sha256 = "00lvi2x1s8r7lwfvsjnvzc9iwdk4ip8svw85p2h3ra4iqbzj70l2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary distributed-process mtl network network-transport
         network-transport-tcp
       ];
       homepage = "https://bitbucket.org/dpwiz/distributed-process-p2p/";
       description = "Peer-to-peer node discovery for Cloud Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distributed-process-platform" = callPackage
    ({ mkDerivation, ansi-terminal, binary, data-accessor, deepseq
     , distributed-process, distributed-static, fingertree, hashable
     , HUnit, mtl, network, network-transport, network-transport-tcp
     , QuickCheck, rematch, stm, test-framework, test-framework-hunit
     , test-framework-quickcheck2, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "distributed-process-platform";
       version = "0.1.0";
       sha256 = "0bxfynvqkzvah7gbg74yzwpma8j32bamnyysj6dk39da0v880abm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary data-accessor deepseq distributed-process fingertree
         hashable mtl stm time transformers unordered-containers
       ];
       testDepends = [
         ansi-terminal binary data-accessor deepseq distributed-process
         distributed-static fingertree hashable HUnit mtl network
         network-transport network-transport-tcp QuickCheck rematch stm
         test-framework test-framework-hunit test-framework-quickcheck2 time
         transformers unordered-containers
       ];
       homepage = "http://github.com/haskell-distributed/distributed-process-platform";
       description = "The Cloud Haskell Application Platform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distributed-process-simplelocalnet" = callPackage
    ({ mkDerivation, binary, data-accessor, distributed-process
     , network, network-multicast, network-transport
     , network-transport-tcp, transformers
     }:
     mkDerivation {
       pname = "distributed-process-simplelocalnet";
       version = "0.2.2.0";
       sha256 = "024m5jycz257i34m2x97x3qyg76j1128ww61pql3fqy4mhvp3791";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary data-accessor distributed-process network network-multicast
         network-transport network-transport-tcp transformers
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Simple zero-configuration backend for Cloud Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distributed-process-tests" = callPackage
    ({ mkDerivation, ansi-terminal, binary, distributed-process
     , distributed-static, HUnit, network, network-transport
     , network-transport-tcp, random, rematch, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "distributed-process-tests";
       version = "0.4.1";
       sha256 = "1jjj77pw39bbbf58j61hdcpr872ncd1k1z2ly75n96gklw9aikbb";
       buildDepends = [
         ansi-terminal binary distributed-process distributed-static HUnit
         network network-transport random rematch test-framework
         test-framework-hunit
       ];
       testDepends = [
         network network-transport network-transport-tcp test-framework
       ];
       homepage = "http://github.com/haskell-distributed/distributed-process-tests";
       description = "Tests for distributed-process";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distributed-static" = callPackage
    ({ mkDerivation, binary, rank1dynamic }:
     mkDerivation {
       pname = "distributed-static";
       version = "0.3.1.0";
       sha256 = "190b6vjcipgrvnfl72c0ssw8crza02gfw9kwyvwg043jcznihj08";
       buildDepends = [ binary rank1dynamic ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compositional, type-safe, polymorphic static values and closures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "distribution" = callPackage
    ({ mkDerivation, MonadRandom, random }:
     mkDerivation {
       pname = "distribution";
       version = "1.0.0.0";
       sha256 = "0zh9ap3hhylpk7bsp54hm9gj5x8f8zvm5sg7nydmxnigyq0b3l4y";
       buildDepends = [ MonadRandom random ];
       homepage = "https://github.com/redelmann/haskell-distribution";
       description = "Finite discrete probability distributions";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "distribution-plot" = callPackage
    ({ mkDerivation, Chart, Chart-cairo, colour, data-default-class
     , distribution, lens
     }:
     mkDerivation {
       pname = "distribution-plot";
       version = "1.0.0.0";
       sha256 = "16k57dxg79x3i7j62ln063j4g4v4n5x80b12pajjrpxrmaffy79n";
       buildDepends = [
         Chart Chart-cairo colour data-default-class distribution lens
       ];
       homepage = "https://github.com/redelmann/haskell-distribution-plot";
       description = "Easily plot distributions from the distribution package..";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "distributive" = callPackage
    ({ mkDerivation, doctest, filepath, tagged, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "distributive";
       version = "0.4.4";
       sha256 = "0s2ln9jv7bh4ri2y31178pvjl8x6nik5d0klx7j2b77yjlsgblc2";
       buildDepends = [ tagged transformers transformers-compat ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/distributive/";
       description = "Distributive functors -- Dual to Traversable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "diversity" = callPackage
    ({ mkDerivation, fasta, math-functions, optparse-applicative
     , parsec, split
     }:
     mkDerivation {
       pname = "diversity";
       version = "0.3.4.1";
       sha256 = "10ij12bf1bc6iifglh2w88rkyby8jjaadrip4d2wfs4djdpppxra";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         fasta math-functions optparse-applicative parsec split
       ];
       homepage = "https://github.com/GregorySchwartz/diversity";
       description = "Return the diversity at each position for all sequences in a fasta file";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "djinn" = callPackage
    ({ mkDerivation, haskeline, mtl }:
     mkDerivation {
       pname = "djinn";
       version = "2014.9.7";
       sha256 = "1p9dvzb83nlrq8h4brdq5l9dm2zf28rjhsmi7nwmac79p5pk9y2g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskeline mtl ];
       description = "Generate Haskell code from a type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "djinn-ghc" = callPackage
    ({ mkDerivation, async, djinn-lib, mtl, transformers }:
     mkDerivation {
       pname = "djinn-ghc";
       version = "0.0.2.2";
       sha256 = "0dz5jg58si9fsc12212rxmzky09zric7b2sdj1ydmvnrjxkh9l70";
       buildDepends = [ async djinn-lib mtl transformers ];
       description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "djinn-lib" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "djinn-lib";
       version = "0.0.1.2";
       sha256 = "048hs27awl4j9lg04qbnpf8c51mzbgy2afckis19zcswmavi1zn0";
       buildDepends = [ mtl ];
       homepage = "http://www.augustsson.net/Darcs/Djinn/";
       description = "Generate Haskell code from a type. Library extracted from djinn package.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "djinn-th" = callPackage
    ({ mkDerivation, logict }:
     mkDerivation {
       pname = "djinn-th";
       version = "0.0.1";
       sha256 = "089b6z8hcv6q9y77zy8m96lc00r1ckzmff0mybp9l1akj7gwdpix";
       buildDepends = [ logict ];
       homepage = "http://gitorious.org/djinn-th";
       description = "Generate executable Haskell code from a type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dlist" = callPackage
    ({ mkDerivation, Cabal, deepseq, QuickCheck }:
     mkDerivation {
       pname = "dlist";
       version = "0.7.1";
       sha256 = "13ka30bn742ldacfgj2lhxvhwf769d0ziy2358vmd5xaq6fn1xfr";
       buildDepends = [ deepseq ];
       testDepends = [ Cabal QuickCheck ];
       homepage = "https://github.com/spl/dlist";
       description = "Difference lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dlist-instances" = callPackage
    ({ mkDerivation, dlist, semigroups }:
     mkDerivation {
       pname = "dlist-instances";
       version = "0.1";
       sha256 = "0r1j7djywqd7c224wc9ixkplj3m2mbf9k3ra7n92ja2kfpksm615";
       buildDepends = [ dlist semigroups ];
       homepage = "https://github.com/gregwebs/dlist-instances";
       description = "Difference lists instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dns" = callPackage
    ({ mkDerivation, attoparsec, binary, blaze-builder, conduit
     , conduit-extra, doctest, hspec, iproute, mtl, network, random
     , resourcet, word8
     }:
     mkDerivation {
       pname = "dns";
       version = "1.4.4";
       sha256 = "1g910rlahvrhjlg6jl7gpya1y3mqkkpmihfr2jnmmlzykll10dnd";
       buildDepends = [
         attoparsec binary blaze-builder conduit conduit-extra iproute mtl
         network random resourcet
       ];
       testDepends = [
         attoparsec binary blaze-builder conduit conduit-extra doctest hspec
         iproute mtl network random resourcet word8
       ];
       testTarget = "spec";
       description = "DNS library in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dnscache" = callPackage
    ({ mkDerivation, contstuff, dns, iproute, time }:
     mkDerivation {
       pname = "dnscache";
       version = "1.1.0";
       sha256 = "0bwpfw7fsis0sqnqrgw13ifla17mcm2xk9b9jagjjqmim66d6zxb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ contstuff dns iproute time ];
       description = "Caching DNS resolver library and mass DNS resolver utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dnsrbl" = callPackage
    ({ mkDerivation, hsdns, HUnit, network }:
     mkDerivation {
       pname = "dnsrbl";
       version = "0.0.3";
       sha256 = "07xq52aqqmzq1f68m8spr7fyax0cqnpv9mh5m4x3klxm0iznv9xm";
       buildDepends = [ hsdns HUnit network ];
       homepage = "http://www.pigscanfly.ca/~holden/dnsrbl/";
       description = "Asynchronous DNS RBL lookup";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dnssd" = callPackage
    ({ mkDerivation, dns_sd, transformers }:
     mkDerivation {
       pname = "dnssd";
       version = "0.1.0.0";
       sha256 = "0gfyyr1wcxni0r0r9df6lkmv6gvi0qvwclwi9majzg10pas6dk2n";
       buildDepends = [ transformers ];
       extraLibraries = [ dns_sd ];
       homepage = "https://github.com/maxpow4h/dnssd";
       description = "DNS service discovery bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "doc-review" = callPackage
    ({ mkDerivation, base64-bytestring, binary, feed, filepath, heist
     , hexpat, json, MonadCatchIO-transformers, MonadRandom, monads-fd
     , network, snap-core, snap-server, sqlite, tagchup, text, time
     , transformers, xhtml-combinators, xml, xml-basic
     }:
     mkDerivation {
       pname = "doc-review";
       version = "0.7.1";
       sha256 = "0009gpm6hgjr78bsp0cd4skvhbms83j4j9axf6zns7pnfqvc6inf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base64-bytestring binary feed filepath heist hexpat json
         MonadCatchIO-transformers MonadRandom monads-fd network snap-core
         snap-server sqlite tagchup text time transformers xhtml-combinators
         xml xml-basic
       ];
       homepage = "https://github.com/j3h/doc-review";
       description = "Document review Web application, like http://book.realworldhaskell.org/";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "doccheck" = callPackage
    ({ mkDerivation, attoparsec, directory-tree, filepath, ghc-paths
     , text
     }:
     mkDerivation {
       pname = "doccheck";
       version = "0.1.0.0";
       sha256 = "055jns09s50iyzgk9m9d7gbxvnmgd4wxfb5axsxra8qnlfq331lb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec directory-tree filepath ghc-paths text
       ];
       homepage = "https://github.com/Fuuzetsu/doccheck";
       description = "Checks Haddock comments for pitfalls and version changes";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "docidx" = callPackage
    ({ mkDerivation, Cabal, filepath, html, MissingH, mtl, tagsoup
     , time
     }:
     mkDerivation {
       pname = "docidx";
       version = "1.1.0";
       sha256 = "0020pi4m0n6cvb6hdzhai5f9jidwc8dy6qq3pjs6g4dwql9igsb8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath html MissingH mtl tagsoup time ];
       homepage = "http://github.com/gimbo/docidx.hs";
       description = "Generate an HTML index of installed Haskell packages and their documentation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "docker" = callPackage
    ({ mkDerivation, aeson, data-default, lens, network-uri, pipes
     , pipes-bytestring, pipes-http, pipes-text, text, wreq
     }:
     mkDerivation {
       pname = "docker";
       version = "0.1.0.1";
       sha256 = "0jp7jsacxxzfbz0sdmzwwl9nj8xyfg889zxsw4mg87jxasmll3g2";
       buildDepends = [
         aeson data-default lens network-uri pipes pipes-bytestring
         pipes-http pipes-text text wreq
       ];
       homepage = "https://github.com/denibertovic/docker-hs";
       description = "Haskell wrapper for Docker Remote API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dockercook" = callPackage
    ({ mkDerivation, attoparsec, base16-bytestring, cereal, conduit
     , conduit-combinators, conduit-extra, cryptohash, filepath
     , graph-core, hashable, HTF, monad-logger, mtl
     , optparse-applicative, persistent-sqlite, persistent-template
     , regex-compat, resourcet, safecopy, stm, system-filepath
     , temporary, text, time, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "dockercook";
       version = "0.1.2.1";
       sha256 = "1phfnijfnjlwfglz661cvi5pp43vz753d6qdfj3q74wmmhk4pspv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec base16-bytestring cereal conduit conduit-combinators
         conduit-extra cryptohash filepath graph-core hashable monad-logger
         mtl optparse-applicative persistent-sqlite persistent-template
         regex-compat resourcet safecopy stm system-filepath temporary text
         time transformers unordered-containers vector
       ];
       testDepends = [ HTF text vector ];
       homepage = "https://github.com/factisresearch/dockercook";
       description = "A build tool for multiple docker image layers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "docopt" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, parsec, split }:
     mkDerivation {
       pname = "docopt";
       version = "0.6.0.1";
       sha256 = "0rdzyb48d5arrilsncp7zjn3gw0sdcda7fnpvc045n1npzpi53aj";
       buildDepends = [ parsec ];
       testDepends = [ aeson ansi-terminal parsec split ];
       homepage = "https://github.com/docopt/docopt.hs";
       description = "A command-line interface parser that will make you smile";
       license = stdenv.lib.licenses.mit;
     }) {};

  "doctest" = callPackage
    ({ mkDerivation, base-compat, deepseq, filepath, ghc-paths, hspec
     , HUnit, QuickCheck, setenv, silently, stringbuilder, syb
     , transformers
     }:
     mkDerivation {
       pname = "doctest";
       version = "0.9.11.1";
       sha256 = "1gzzzwr7f7281mlbfbk74nxr28l70lwfaws4xjfx2v06xazl99db";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deepseq filepath ghc-paths syb transformers ];
       testDepends = [
         base-compat deepseq filepath ghc-paths hspec HUnit QuickCheck
         setenv silently stringbuilder syb transformers
       ];
       homepage = "https://github.com/sol/doctest#readme";
       description = "Test interactive Haskell examples";
       license = stdenv.lib.licenses.mit;
     }) {};

  "doctest-discover" = callPackage
    ({ mkDerivation, aeson, doctest, filepath }:
     mkDerivation {
       pname = "doctest-discover";
       version = "0.1.0.6";
       sha256 = "1rgk831yf4gamb4m10bbcc2r4hhdh4ffjjr80smkfs95x3pi15d3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson doctest filepath ];
       testDepends = [ doctest ];
       homepage = "http://github.com/karun012/doctest-discover";
       description = "Easy way to run doctests via cabal";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "doctest-discover-configurator" = callPackage
    ({ mkDerivation, configurator, doctest, filepath }:
     mkDerivation {
       pname = "doctest-discover-configurator";
       version = "0.1.0.6";
       sha256 = "1n2x8rp67ddifyahxcny0k7r514qa82lbxg13z7yg2kvmrfip7r8";
       editedCabalFile = "0i8anaxkzw4j9gygcj6vvxxn7mcrzqpysc07hm7vmb0hzw02mxkr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ configurator doctest filepath ];
       testDepends = [ doctest ];
       homepage = "http://github.com/relrod/doctest-discover-noaeson";
       description = "Easy way to run doctests via cabal (no aeson dependency, uses configurator instead)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "doctest-prop" = callPackage
    ({ mkDerivation, doctest, HUnit, QuickCheck }:
     mkDerivation {
       pname = "doctest-prop";
       version = "0.2";
       sha256 = "09wxkhcmh297hqnx3g4x8ff0w5dcmls9y383417rc8wawf5q288n";
       buildDepends = [ HUnit QuickCheck ];
       testDepends = [ doctest HUnit QuickCheck ];
       description = "Allow QuickCheck-style property testing within doctest";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dom-lt" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dom-lt";
       version = "0.1.3";
       sha256 = "0i51d8d49jpf7mhl6c2a4565d4vmh0x5f4kam46hn5ahb1v2nrga";
       description = "The Lengauer-Tarjan graph dominators algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dom-selector" = callPackage
    ({ mkDerivation, blaze-html, html-conduit, parsec, QuickCheck, text
     , th-lift, xml-conduit
     }:
     mkDerivation {
       pname = "dom-selector";
       version = "0.2.0.1";
       sha256 = "1nm3r79k4is5lh5fna4v710vhb0n5hpp3d21r0w6hmqizhdrkb22";
       buildDepends = [
         blaze-html html-conduit parsec QuickCheck text th-lift xml-conduit
       ];
       testDepends = [
         blaze-html html-conduit parsec QuickCheck text th-lift xml-conduit
       ];
       homepage = "https://github.com/nebuta/";
       description = "DOM traversal by CSS selectors for xml-conduit package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "domain-auth" = callPackage
    ({ mkDerivation, appar, binary, blaze-builder, crypto-pubkey-types
     , dns, iproute, network, RSA, SHA
     }:
     mkDerivation {
       pname = "domain-auth";
       version = "0.2.1";
       sha256 = "1b1kw4pkm1f5z5qwyfpppk5rjqzi4i7b2vx4zmb2cd9398dnkj4a";
       buildDepends = [
         appar binary blaze-builder crypto-pubkey-types dns iproute network
         RSA SHA
       ];
       description = "Domain authentication library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dominion" = callPackage
    ({ mkDerivation, hscolour, hspec, lens, mtl, random, random-extras
     , random-fu, transformers
     }:
     mkDerivation {
       pname = "dominion";
       version = "0.1.0.4";
       sha256 = "13ypa09adkj7yilyxxf84rkpap5h4mmx4pwvc4x6121j77xz29dy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         hscolour lens mtl random random-extras random-fu transformers
       ];
       testDepends = [
         hscolour hspec lens mtl random random-extras random-fu transformers
       ];
       homepage = "http://github.com/egonschiele/dominion";
       description = "A simulator for the board game Dominion";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "domplate" = callPackage
    ({ mkDerivation, tagsoup, text, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "domplate";
       version = "0.1";
       sha256 = "116ljs471cdb21sjglk53wa8270axw7zbsm6ah785q1vabczgs8p";
       buildDepends = [ tagsoup text unordered-containers vector yaml ];
       homepage = "https://github.com/valderman/domplate";
       description = "A simple templating library using HTML5 as its template language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dot2graphml" = callPackage
    ({ mkDerivation, graphviz, hxt, text }:
     mkDerivation {
       pname = "dot2graphml";
       version = "0.1.0.2";
       sha256 = "1fwfwp24fdgir0m721c801xi8gkhz2y8s1r1gxdp7m1vl5d0xqii";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ graphviz hxt text ];
       homepage = "http://redmine.iportnov.ru/projects/dot2graphml";
       description = "Converter from GraphViz .dot format to yEd GraphML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dotfs" = callPackage
    ({ mkDerivation, filepath, haskell-src, HFuse, HUnit, parsec
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "dotfs";
       version = "0.1.1.3";
       sha256 = "0hj21rvjbn8hmb3kf4225ir57j75d8jyzhw2rw8kmjxw3w62l49f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath haskell-src HFuse HUnit parsec QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
       ];
       testDepends = [
         haskell-src HUnit parsec QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
       ];
       homepage = "http://github.com/toothbrush/dotfs";
       description = "Filesystem to manage and parse dotfiles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dotgen" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dotgen";
       version = "0.4.1";
       sha256 = "1g5ds0mqkz0lzhcp42hin08azschs3p083ikdk4d5jil8rzl7d8k";
       isLibrary = true;
       isExecutable = true;
       description = "A simple interface for building .dot graph files.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "double-conversion" = callPackage
    ({ mkDerivation, test-framework, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "double-conversion";
       version = "2.0.1.0";
       sha256 = "034ji9jgf3jl0n5pp1nki3lsg173c3b9vniwnwp1q21iasqbawh0";
       buildDepends = [ text ];
       testDepends = [ test-framework test-framework-quickcheck2 text ];
       homepage = "https://github.com/bos/double-conversion";
       description = "Fast conversion between double precision floating point and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dow" = callPackage
    ({ mkDerivation, elerea, GLFW, mersenne-random, OpenGL }:
     mkDerivation {
       pname = "dow";
       version = "0.2.5";
       sha256 = "15vlydfw0yw49jha90zcxynwajnyxhqn32x9w7n58k3j0rkcrp9l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ elerea GLFW mersenne-random OpenGL ];
       description = "Dungeons of Wor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "download" = callPackage
    ({ mkDerivation, feed, tagsoup, xml }:
     mkDerivation {
       pname = "download";
       version = "0.3.2";
       sha256 = "0nhbfq8q9ckc5fnlg54l361p2jhkag9cz11v07kj9f1kwkm4d7w3";
       buildDepends = [ feed tagsoup xml ];
       homepage = "http://code.haskell.org/~dons/code/download";
       description = "High-level file download based on URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "download-curl" = callPackage
    ({ mkDerivation, curl, feed, tagsoup, xml }:
     mkDerivation {
       pname = "download-curl";
       version = "0.1.4";
       sha256 = "1wf3pf2k4i6jvpfsjlxdj6v53qd33jj1z1ipaf3p47glgx4xw3lm";
       buildDepends = [ curl feed tagsoup xml ];
       homepage = "http://code.haskell.org/~dons/code/download-curl";
       description = "High-level file download based on URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "download-media-content" = callPackage
    ({ mkDerivation, filepath, http-enumerator, tagsoup, text }:
     mkDerivation {
       pname = "download-media-content";
       version = "0.0.0.1";
       sha256 = "1bj4310j3s26xd4ic6hm284dlk91npwilfbwvrk1zz8fas6yr6z6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath http-enumerator tagsoup text ];
       homepage = "http://github.com/jaspervdj/download-media-content";
       description = "Simple tool to download images from RSS feeds (e.g. Flickr, Picasa)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-base" = callPackage
    ({ mkDerivation, random, vector }:
     mkDerivation {
       pname = "dph-base";
       version = "0.7.0.1";
       sha256 = "19rc0h94lgxyndaw41wgnc0prwffl780i6nqsn9b7byvgy97f15y";
       buildDepends = [ random vector ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell common config and debugging functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-examples" = callPackage
    ({ mkDerivation, dph-base, dph-lifted-vseg, dph-prim-par, HUnit
     , parseargs, random, vector
     }:
     mkDerivation {
       pname = "dph-examples";
       version = "0.7.0.5";
       sha256 = "1qbj8hsgpmcx95qsqycb6cnfb5vfk9h3w1jyq4k02hf9g7gyvckz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         dph-base dph-lifted-vseg dph-prim-par HUnit parseargs random vector
       ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell example programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-lifted-base" = callPackage
    ({ mkDerivation, dph-base, dph-prim-par, random, vector }:
     mkDerivation {
       pname = "dph-lifted-base";
       version = "0.7.0.1";
       sha256 = "1gp3l9bgpmly3h74hyfxi3yfm8v4r918800ca64q1b16019hk20k";
       buildDepends = [ dph-base dph-prim-par random vector ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell common definitions used by other dph-lifted packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-lifted-copy" = callPackage
    ({ mkDerivation, dph-base, dph-prim-par, random, vector }:
     mkDerivation {
       pname = "dph-lifted-copy";
       version = "0.7.0.1";
       sha256 = "11aaiarvrm5463b77r2jimw78pr39g8apjk7bim3d8rl3ija775q";
       buildDepends = [ dph-base dph-prim-par random vector ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell lifted array combinators. (deprecated version)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-lifted-vseg" = callPackage
    ({ mkDerivation, dph-base, dph-lifted-base, dph-prim-par, random
     , vector
     }:
     mkDerivation {
       pname = "dph-lifted-vseg";
       version = "0.7.0.1";
       sha256 = "0vkq7kyd65znzqxh32ql2lrm30vg1wy85bnjg8g08s9q9j3j6a45";
       buildDepends = [
         dph-base dph-lifted-base dph-prim-par random vector
       ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell lifted array combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-par" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dph-par";
       version = "0.5.1.99";
       sha256 = "0csgd8ghbxv1vwp95dn98qv1zp8229fffm9j274bmjg857588i97";
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "(deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-prim-interface" = callPackage
    ({ mkDerivation, dph-base, random, vector }:
     mkDerivation {
       pname = "dph-prim-interface";
       version = "0.7.0.1";
       sha256 = "17m03gylc61d7mx26rz70kwmi014rv1g14683vraa1b77pci5h8j";
       buildDepends = [ dph-base random vector ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell segmented arrays. (abstract interface)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-prim-par" = callPackage
    ({ mkDerivation, dph-base, dph-prim-interface, dph-prim-seq, random
     , vector
     }:
     mkDerivation {
       pname = "dph-prim-par";
       version = "0.7.0.1";
       sha256 = "13x7ribvcm965pnzissj0cwk17r5f0ag1zs7w31za17kal3r91pp";
       buildDepends = [
         dph-base dph-prim-interface dph-prim-seq random vector
       ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell segmented arrays. (production version)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-prim-seq" = callPackage
    ({ mkDerivation, dph-base, dph-prim-interface, primitive, random
     , vector
     }:
     mkDerivation {
       pname = "dph-prim-seq";
       version = "0.7.0.1";
       sha256 = "1fz95qzvk2f7zg8am73vdbk14ms420vfvapz79piip0s4bv8cnqr";
       buildDepends = [
         dph-base dph-prim-interface primitive random vector
       ];
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "Data Parallel Haskell segmented arrays. (sequential implementation)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dph-seq" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dph-seq";
       version = "0.5.1.99";
       sha256 = "10s6qq4ayh85wvhnyl7dfdr72a76irvg83s71lww8ig988599ygp";
       homepage = "http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell";
       description = "(deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dpkg" = callPackage
    ({ mkDerivation, bindings-DSL, HUnit, libdpkg, monad-loops }:
     mkDerivation {
       pname = "dpkg";
       version = "0.0.3";
       sha256 = "1bqrj1vqqjnv3qcs1s7lbwyzry95fzxrhi6340zqv0ibvyqnaz5k";
       buildDepends = [ bindings-DSL monad-loops ];
       testDepends = [ HUnit libdpkg ];
       pkgconfigDepends = [ libdpkg ];
       description = "libdpkg bindings";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "drClickOn" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "drClickOn";
       version = "0.1";
       sha256 = "10rcmqa2x5xlh5pqfsg9dagf2lmrwc2bby3zklzv3x4s3yqg2ar3";
       homepage = "https://github.com/cwi-swat/monadic-frp";
       description = "Monadic FRP";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "drawille" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "drawille";
       version = "0.1.0.5";
       sha256 = "08zmy1r1qj7adhsp4z0mr7h0qvc9gaziacjqfl0629n5x2i7zddr";
       isLibrary = true;
       isExecutable = true;
       testDepends = [ hspec QuickCheck ];
       homepage = "https://github.com/yamadapc/haskell-drawille";
       description = "A port of asciimoo's drawille to haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "dropbox-sdk" = callPackage
    ({ mkDerivation, blaze-builder, case-insensitive, certificate
     , conduit, HTTP, http-conduit, http-types, json, monad-control
     , network, pem, resourcet, time, tls, tls-extra, transformers
     , urlencoded, utf8-string
     }:
     mkDerivation {
       pname = "dropbox-sdk";
       version = "0.3.1";
       sha256 = "1s0aki1ayjickkkwmn1mc38gnd257v24wy6yj9p05qm2g8gm7xy2";
       buildDepends = [
         blaze-builder case-insensitive certificate conduit HTTP
         http-conduit http-types json monad-control network pem resourcet
         time tls tls-extra transformers urlencoded utf8-string
       ];
       homepage = "http://github.com/cakoose/dropbox-sdk-haskell";
       description = "A library to access the Dropbox HTTP API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dropsolve" = callPackage
    ({ mkDerivation, filepath, regex-posix, time }:
     mkDerivation {
       pname = "dropsolve";
       version = "0.1.2.1";
       sha256 = "1nrvrcf51jdy5vhqbnrllb3y5rgrhg1qwsd05z24s38ra40whbgp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath regex-posix time ];
       description = "A command line tool for resolving dropbox conflicts. Deprecated! Please use confsolve.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ds-kanren" = callPackage
    ({ mkDerivation, logict, QuickCheck, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "ds-kanren";
       version = "0.2.0.1";
       sha256 = "14sgqd55jnqahp0mi4x46a5903bnj2f2crlfrkyg9qds73wjj7fk";
       buildDepends = [ logict ];
       testDepends = [ QuickCheck tasty tasty-quickcheck ];
       description = "A subset of the miniKanren language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dsmc" = callPackage
    ({ mkDerivation, attoparsec, entropy, hslogger, mwc-random
     , parallel, primitive, repa, strict, transformers, vector
     }:
     mkDerivation {
       pname = "dsmc";
       version = "0.1.0.1";
       sha256 = "0va22bx3fj80rl03mv3pnwvsdjkax41pp8qxyj3yiicbyi6zzaa5";
       buildDepends = [
         attoparsec entropy hslogger mwc-random parallel primitive repa
         strict transformers vector
       ];
       description = "DSMC library for rarefied gas dynamics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dsmc-tools" = callPackage
    ({ mkDerivation, cmdargs, ConfigFile, dsmc, gloss, gloss-raster
     , hslogger, mtl, repa, strict, transformers, vector
     }:
     mkDerivation {
       pname = "dsmc-tools";
       version = "0.1.0.1";
       sha256 = "0wry1dwcf3dwd780aic3v6jlrdjplrsciw1rr582a78c7anasjr0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs ConfigFile dsmc gloss gloss-raster hslogger mtl repa strict
         transformers vector
       ];
       description = "DSMC toolkit for rarefied gas dynamics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dson" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "dson";
       version = "0.3.0.0";
       sha256 = "15pqja0q1lram7xi5xk8dlcfg5m1z0l4zscqw24wm50hmqpxi09d";
       buildDepends = [ parsec ];
       homepage = "https://github.com/lcycon/hs-dson";
       description = "Haskell DogeScript Object Notation Parser";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "dson-parsec" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "dson-parsec";
       version = "0.4.1.1";
       sha256 = "1zflz9vhcz7psssn6hrizmwdmrvpagxhl0648k6f1n9xj50kp99y";
       buildDepends = [ parsec ];
       homepage = "https://github.com/alvare/dson-parsec";
       description = "DSON parser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "dsp" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "dsp";
       version = "0.2.3";
       sha256 = "1h7y3b2gwbkq97lv6f9a4zssyqs422g5zj2bi9mq1a5fzy5i4v4v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://www.haskell.org/haskellwiki/DSP";
       description = "Haskell Digital Signal Processing";
       license = "GPL";
     }) {};

  "dstring" = callPackage
    ({ mkDerivation, base-unicode-symbols, dlist }:
     mkDerivation {
       pname = "dstring";
       version = "0.4.0.4";
       sha256 = "15zy1dhfs87hxq1qm54ym0pdhvg7l76m7vy5y06dnksb1sblhaqm";
       buildDepends = [ base-unicode-symbols dlist ];
       homepage = "https://github.com/basvandijk/dstring";
       description = "Difference strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dtab" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, transformers }:
     mkDerivation {
       pname = "dtab";
       version = "1.0";
       sha256 = "1zx5kpljjxyzbsg0hg8ml8mig1s9hggm2nlqmbfbxmldxh3pq1j3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary data-binary-ieee754 transformers ];
       description = "Harmonix (Guitar Hero, Rock Band) DTA/DTB metadata library";
       license = "GPL";
     }) {};

  "dtd" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, blaze-builder
     , conduit, lifted-base, monad-control, network, resourcet, text
     , transformers, uri-conduit, xml-catalog, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "dtd";
       version = "1.1.0.2";
       sha256 = "11sqmsxw36rn2xkccr7zrmpzijpc3j0z1cxsjcfncnj3l5iaqryp";
       buildDepends = [
         attoparsec attoparsec-conduit blaze-builder conduit lifted-base
         monad-control network resourcet text transformers uri-conduit
         xml-catalog xml-conduit xml-types
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Parse and render DTD files (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dtd-text" = callPackage
    ({ mkDerivation, attoparsec, dtd-types, text, xml-types }:
     mkDerivation {
       pname = "dtd-text";
       version = "0.1.2.0";
       sha256 = "1czygz52aparm4qbkfsskm9qd5wirdpccjn66nh7d62d440j1as8";
       buildDepends = [ attoparsec dtd-types text xml-types ];
       homepage = "http://github.com/m15k/hs-dtd-text";
       description = "Parse and render XML DTDs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dtd-types" = callPackage
    ({ mkDerivation, text, xml-types }:
     mkDerivation {
       pname = "dtd-types";
       version = "0.3.0.1";
       sha256 = "1w2ni9b8kn242grdqb4wxvgxqpkpp9qy66d57n33l5jghlg8b0s7";
       buildDepends = [ text xml-types ];
       homepage = "http://projects.haskell.org/dtd/";
       description = "Basic types for representing XML DTDs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dtrace" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dtrace";
       version = "0.1";
       sha256 = "0qszlhll0cx0clydypg0r0g00v8ig1aasqp1ga0jnbfr7q7rwfrr";
       isLibrary = true;
       isExecutable = true;
       description = "Haskell interface to the DTrace system tracing utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dual-tree" = callPackage
    ({ mkDerivation, monoid-extras, newtype, semigroups }:
     mkDerivation {
       pname = "dual-tree";
       version = "0.2.0.5";
       sha256 = "077njr9m6x9n2id0419rn6v4xwb9nvxshrmas9pkknp52va4ljg5";
       buildDepends = [ monoid-extras newtype semigroups ];
       description = "Rose trees with cached and accumulating monoidal annotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dvda" = callPackage
    ({ mkDerivation, ad, fgl, file-location, graphviz, hashable
     , hashtables, mtl, QuickCheck, test-framework
     , test-framework-quickcheck2, unordered-containers, vector
     }:
     mkDerivation {
       pname = "dvda";
       version = "0.4";
       sha256 = "1q8avdmzqxnr63ak0i1n6n4cvc23qkrmqlii628mis7vzfcw2yp8";
       buildDepends = [
         hashable hashtables mtl unordered-containers vector
       ];
       testDepends = [
         ad fgl file-location graphviz hashable hashtables mtl QuickCheck
         test-framework test-framework-quickcheck2 unordered-containers
       ];
       description = "Efficient automatic differentiation and code generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dvdread" = callPackage
    ({ mkDerivation, c2hs, dvdread, mtl }:
     mkDerivation {
       pname = "dvdread";
       version = "0.1";
       sha256 = "1lxqm9r4zcw364yzpqaaf4nrja5n88vlwa527ixifhc80x6ffx0m";
       buildDepends = [ mtl ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ dvdread ];
       description = "A monadic interface to libdvdread";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) dvdread; };

  "dvi-processing" = callPackage
    ({ mkDerivation, filepath, transformers }:
     mkDerivation {
       pname = "dvi-processing";
       version = "0.3.1";
       sha256 = "0dp6acmrvlns85nzbbh65vd6fjam04h11kxd9bk6j6hqa2qaqa43";
       buildDepends = [ filepath transformers ];
       description = "Read/write DVI and TFM file";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "dvorak" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "dvorak";
       version = "0.1.0.0";
       sha256 = "1kxnzzm24kslsyy9fsjazfz14svbh9svh6f7rnf060as864vmj5g";
       testDepends = [ hspec QuickCheck ];
       homepage = "https://github.com/kvanberendonck/codec-dvorak";
       description = "Dvorak encoding for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dwarf" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "dwarf";
       version = "0.23";
       sha256 = "0h6bzh628cz0qnbk4aiz5859r9va99q307scbwzvs1wn3nm6dszl";
       buildDepends = [ binary ];
       description = "Parser for DWARF debug format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dwarf-el" = callPackage
    ({ mkDerivation, binary, transformers, utf8-string }:
     mkDerivation {
       pname = "dwarf-el";
       version = "0.2.1.1";
       sha256 = "18ba03v1m7xbsgygjgfrzr9c7fah21lr3300mhvqipicdgrb691w";
       buildDepends = [ binary transformers utf8-string ];
       description = "Parser for DWARF debug format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dwarfadt" = callPackage
    ({ mkDerivation, bytestring-mmap, dwarf-el, elf, lens, transformers
     }:
     mkDerivation {
       pname = "dwarfadt";
       version = "0.4";
       sha256 = "15mzv6sa2qf0g9skwq4ij35l3lqbc4x3fzwj5hkx93f8pz2bj1hi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bytestring-mmap dwarf-el elf lens transformers ];
       description = "High-level wrapper around the dwarf library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dx9base" = callPackage
    ({ mkDerivation, Win32 }:
     mkDerivation {
       pname = "dx9base";
       version = "0.1.1";
       sha256 = "16gwlpxfgh78sx7cb2ryqklhz5smhwk51ma260d6rg082nhy5y3i";
       buildDepends = [ Win32 ];
       description = "Backend for a binding to the Microsoft DirectX 9 API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dx9d3d" = callPackage
    ({ mkDerivation, d3d9, dx9base, Win32 }:
     mkDerivation {
       pname = "dx9d3d";
       version = "0.1.1.1";
       sha256 = "1y9g53jajgnlrzzg5vzgx329mii9k396xai4b04hs6gndkdrwprj";
       buildDepends = [ dx9base Win32 ];
       extraLibraries = [ d3d9 ];
       description = "A binding to the Microsoft DirectX 9 API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dx9d3dx" = callPackage
    ({ mkDerivation, d3dx9, dx9base, dx9d3d, Win32 }:
     mkDerivation {
       pname = "dx9d3dx";
       version = "0.1.1";
       sha256 = "1n5rbq7k1g5l9y5vkadypfksai9sfx2vimdsas1if9h3jnqvvf67";
       buildDepends = [ dx9base dx9d3d Win32 ];
       extraLibraries = [ d3dx9 ];
       description = "A binding to the Microsoft DirectX 9 D3DX API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dynamic-cabal" = callPackage
    ({ mkDerivation, data-default, doctest, filepath, ghc-paths
     , haskell-generate, haskell-src-exts, HUnit, tasty, tasty-hunit
     , tasty-th, time, void
     }:
     mkDerivation {
       pname = "dynamic-cabal";
       version = "0.3.3";
       sha256 = "0fq6q0j2fx7ygarzgsvb7scssjnrxjrq188d0habfar6bdm0vqdg";
       buildDepends = [
         data-default filepath ghc-paths haskell-generate haskell-src-exts
         time void
       ];
       testDepends = [
         doctest filepath HUnit tasty tasty-hunit tasty-th
       ];
       homepage = "http://github.com/bennofs/dynamic-cabal/";
       description = "dynamic-cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dynamic-graph" = callPackage
    ({ mkDerivation, cairo, colour, deepseq, either, GLFW-b, GLUtil
     , OpenGL, pango, pipes, transformers
     }:
     mkDerivation {
       pname = "dynamic-graph";
       version = "0.1.0.3";
       sha256 = "0sn3g41qhhh9jcp7siqiqxp5rzf29dxc6a07c48dgj214gglns4z";
       buildDepends = [
         cairo colour deepseq either GLFW-b GLUtil OpenGL pango pipes
         transformers
       ];
       description = "Draw and update graphs in real time with OpenGL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dynamic-linker-template" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "dynamic-linker-template";
       version = "0.1.0.4";
       sha256 = "043d8kp4a5pskfyzihm7laa1h9jchdgzvc8v32ck0mxcrigicrgq";
       homepage = "http://github.com/hsyl20/dynamic-linker-template";
       description = "Automatically derive dynamic linking methods from a data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dynamic-loader" = callPackage
    ({ mkDerivation, hashable, hashtables, time, transformers }:
     mkDerivation {
       pname = "dynamic-loader";
       version = "0.0";
       sha256 = "0cwmwf60gfcb1xzbx9yz870fxxpdwcd0kmj4pkz6zy8l53j3mqi0";
       buildDepends = [ hashable hashtables time transformers ];
       homepage = "https://github.com/ggreif/dynamic-loader";
       description = "lightweight loader of GHC-based modules or packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dynamic-mvector" = callPackage
    ({ mkDerivation, primitive, vector }:
     mkDerivation {
       pname = "dynamic-mvector";
       version = "0.1.0.1";
       sha256 = "0yqw4ay18c3wmaw1ayqbxb0q2frnidb95nc41qpq6cj7m4pg5him";
       buildDepends = [ primitive vector ];
       homepage = "https://github.com/AndrasKovacs/dynamic-mvector";
       description = "A wrapper around MVector that enables pushing, popping and extending";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dynamic-object" = callPackage
    ({ mkDerivation, doctest, hspec, lens, mtl, QuickCheck, text
     , transformers
     }:
     mkDerivation {
       pname = "dynamic-object";
       version = "0.2.1";
       sha256 = "1xzjwsdq4v08m66lph81h67sii7qkvni5pygmh3iblx7rybsvflb";
       buildDepends = [ lens mtl QuickCheck text transformers ];
       testDepends = [ doctest hspec lens QuickCheck transformers ];
       description = "Object-oriented programming with duck typing and singleton classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dynamic-state" = callPackage
    ({ mkDerivation, binary, concrete-typerep, hashable
     , unordered-containers
     }:
     mkDerivation {
       pname = "dynamic-state";
       version = "0.1.1.0";
       sha256 = "18dc6fbnyk3q7n7gvqrgy98qc2grq0algr2jnc1ai3vm9bqh2x8n";
       buildDepends = [
         binary concrete-typerep hashable unordered-containers
       ];
       description = "Optionally serializable dynamic state keyed by type";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "dyre" = callPackage
    ({ mkDerivation, binary, executable-path, filepath, ghc-paths
     , io-storage, time, xdg-basedir
     }:
     mkDerivation {
       pname = "dyre";
       version = "0.8.12";
       sha256 = "10hnlysy4bjvvznk8v902mlk4jx95qf972clyi1l32xkqrf30972";
       buildDepends = [
         binary executable-path filepath ghc-paths io-storage time
         xdg-basedir
       ];
       homepage = "http://github.com/willdonnelly/dyre";
       description = "Dynamic reconfiguration in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "dzen-utils" = callPackage
    ({ mkDerivation, colour }:
     mkDerivation {
       pname = "dzen-utils";
       version = "0.1.1";
       sha256 = "05s47s40amydwd6dc75rnaganx2qi2spx668p8x0xs0fdwnqvsf0";
       buildDepends = [ colour ];
       description = "Utilities for creating inputs for dzen";
       license = "GPL";
     }) {};

  "eager-sockets" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "eager-sockets";
       version = "0.1";
       sha256 = "10g8w50hhw8ap6lvsv9apmmfaqvqjwzhnq4mx1npapb8cmsmzgdb";
       buildDepends = [ network ];
       description = "Socket operations with timeouts";
       license = "unknown";
     }) {};

  "easy-api" = callPackage
    ({ mkDerivation, aeson, either, http-conduit, mtl, resourcet, text
     }:
     mkDerivation {
       pname = "easy-api";
       version = "0.1.0.0";
       sha256 = "0ch4vb7h499gfc2j60gfzj164f3s8rk9hw22g36ymiihsi3ipl1b";
       buildDepends = [ aeson either http-conduit mtl resourcet text ];
       homepage = "http://github.com/sanetracker/easy-api";
       description = "Utility code for building HTTP API bindings more quickly";
       license = stdenv.lib.licenses.mit;
     }) {};

  "easy-file" = callPackage
    ({ mkDerivation, filepath, time }:
     mkDerivation {
       pname = "easy-file";
       version = "0.2.0";
       sha256 = "0v8skixq15rvyiyky1dcrfl9jrzkbi75vai8np11xy2kg7a8ym2a";
       buildDepends = [ filepath time ];
       homepage = "http://github.com/kazu-yamamoto/easy-file";
       description = "Cross-platform File handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "easyjson" = callPackage
    ({ mkDerivation, mtl, parsec, text, unordered-containers, vector }:
     mkDerivation {
       pname = "easyjson";
       version = "0.1.0.1";
       sha256 = "19464q0xc3pk1jbf3p94ym97i90600dzhyy4ddv9xf4ligvgbsg2";
       buildDepends = [ mtl parsec text unordered-containers vector ];
       homepage = "https://github.com/thinkpad20/easyjson";
       description = "Haskell JSON library with an emphasis on simplicity, minimal dependencies, and ease of use";
       license = stdenv.lib.licenses.mit;
     }) {};

  "easyplot" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "easyplot";
       version = "1.0";
       sha256 = "18kndgvdj2apjpfga6fp7m16y1gx8zrwp3c5vfj03sx4v6jvciqk";
       homepage = "http://hub.darcs.net/scravy/easyplot";
       description = "A tiny plotting library, utilizes gnuplot for plotting";
       license = stdenv.lib.licenses.mit;
     }) {};

  "easyrender" = callPackage
    ({ mkDerivation, mtl, superdoc, zlib }:
     mkDerivation {
       pname = "easyrender";
       version = "0.1.0.1";
       sha256 = "147r2jw0vrld73637vw4k83v4xf8r1dl9cy6gcll9kkpkcck8lkn";
       buildDepends = [ mtl superdoc zlib ];
       homepage = "http://www.mathstat.dal.ca/~selinger/easyrender/";
       description = "User-friendly creation of EPS, PostScript, and PDF files";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "ebeats" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "ebeats";
       version = "0.1.0";
       sha256 = "0r3pl63fxrrfafwp3791xh0c47pb4jqqcm9lk52g0gaqg0s8x5qk";
       buildDepends = [ time ];
       description = "Time in ebeats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ec2-signature" = callPackage
    ({ mkDerivation, base64-bytestring, doctest, hspec, http-types
     , HUnit, QuickCheck, SHA
     }:
     mkDerivation {
       pname = "ec2-signature";
       version = "3.1";
       sha256 = "1yzyz2a4fm2q6r3nlfjqjmm4fabhl31mq8dgg9shfd3p7cm646g0";
       buildDepends = [ base64-bytestring http-types SHA ];
       testDepends = [
         base64-bytestring doctest hspec http-types HUnit QuickCheck SHA
       ];
       homepage = "https://github.com/worksap-ate/ec2-signature";
       description = "The Amazon EC2 style signature calculator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ecdsa" = callPackage
    ({ mkDerivation, crypto-api, crypto-pubkey-types, hecc }:
     mkDerivation {
       pname = "ecdsa";
       version = "0.2";
       sha256 = "1300m9rszfjmwqbqb7x9clg6y3qwgwa9s38w72r6plhzbiqmy28n";
       buildDepends = [ crypto-api crypto-pubkey-types hecc ];
       homepage = "https://github.com/singpolyma/ecdsa-haskell";
       description = "Basic ECDSA signing implementation";
       license = "unknown";
     }) {};

  "ecma262" = callPackage
    ({ mkDerivation, data-default, lens, parsec, safe, transformers }:
     mkDerivation {
       pname = "ecma262";
       version = "0.0.0";
       sha256 = "1hvi5adgqjkxq1y10d7jr39h4i63khmgrgmlfk09114flllnh8gm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-default lens parsec safe transformers ];
       homepage = "https://github.com/fabianbergmark/ECMA-262";
       description = "A ECMA-262 interpreter library";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "ecu" = callPackage
    ({ mkDerivation, canlib, digest, vcd }:
     mkDerivation {
       pname = "ecu";
       version = "0.0.8";
       sha256 = "1afb507ywpy2y29zmvywj25qw4gn1h5sd0k051jiw03yvdasn0wj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ digest vcd ];
       extraLibraries = [ canlib ];
       description = "Tools for automotive ECU development";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ed25519" = callPackage
    ({ mkDerivation, hlint, QuickCheck }:
     mkDerivation {
       pname = "ed25519";
       version = "0.0.2.0";
       sha256 = "0x08p2941g7f3xsg8jgy5j73v0dihg47j2i1hb53c7h4jhvc1fmj";
       testDepends = [ hlint QuickCheck ];
       homepage = "http://thoughtpolice.github.com/hs-ed25519";
       description = "ed25519 cryptographic signatures";
       license = stdenv.lib.licenses.mit;
     }) {};

  "eddie" = callPackage
    ({ mkDerivation, cmdargs, hint }:
     mkDerivation {
       pname = "eddie";
       version = "0.5";
       sha256 = "013fcf13pb771hkcfn0l1h57qczyn24s6d7hjszwgf9fazx713vd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs hint ];
       homepage = "http://eddie.googlecode.com/";
       description = "Command line file filtering with haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ede" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, bifunctors, comonad
     , filepath, free, lens, mtl, parsers, scientific, semigroups, tasty
     , tasty-golden, text, text-format, text-manipulate, trifecta
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "ede";
       version = "0.2.4";
       sha256 = "0aji7bnkql6k0b6qa9m7g7y6nvkz8hxwf8w5bk6yzxnzvfg3dxdb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ansi-wl-pprint bifunctors comonad filepath free lens mtl
         parsers scientific semigroups text text-format text-manipulate
         trifecta unordered-containers vector
       ];
       testDepends = [ aeson bifunctors tasty tasty-golden text ];
       homepage = "http://github.com/brendanhay/ede";
       description = "Templating language with similar syntax and features to Liquid or Jinja2";
       license = "unknown";
     }) {};

  "edenmodules" = callPackage
    ({ mkDerivation, deepseq, parallel }:
     mkDerivation {
       pname = "edenmodules";
       version = "1.2.0.0";
       sha256 = "1wbasb9lsw2rycl2ibd8r9p3d9dl8gd75390qsc83znqx802ylxj";
       buildDepends = [ deepseq parallel ];
       homepage = "http://www.mathematik.uni-marburg.de/~eden";
       description = "Semi-explicit parallel programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "edenskel" = callPackage
    ({ mkDerivation, edenmodules, parallel }:
     mkDerivation {
       pname = "edenskel";
       version = "2.0.0.1";
       sha256 = "0fmr2chrpp990lyjfk13s4d8h1hdw853wk54233mpmxlh0sd32ki";
       editedCabalFile = "1pyil6b2scc3vrgbrjl0mr706wkvd06y736imfgnwcp29k12504p";
       buildDepends = [ edenmodules parallel ];
       description = "Semi-explicit parallel programming skeleton library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "edentv" = callPackage
    ({ mkDerivation, binary, cairo, filepath, ghc-events-parallel, gtk
     , mtl, text, zip-archive
     }:
     mkDerivation {
       pname = "edentv";
       version = "4.9.2";
       sha256 = "19d103r1xgad4169yjgl7llmaixyvzx8i1rn5wq528km445071wv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary cairo filepath ghc-events-parallel gtk mtl text zip-archive
       ];
       homepage = "http://www.mathematik.uni-marburg.de/~eden";
       description = "A Tool to Visualize Parallel Functional Program Executions";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "edge" = callPackage
    ({ mkDerivation, ALUT, cmdtheline, gloss, random, wraparound }:
     mkDerivation {
       pname = "edge";
       version = "0.9.0.2";
       sha256 = "0rd95pw3b83zg50i29g6bvqh4dnz5ma9l3v5r1hhszmrkpyfvzkv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ALUT cmdtheline gloss random wraparound ];
       homepage = "http://frigidcode.com/code/edge";
       description = "Top view space combat arcade game";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "edit-distance" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "edit-distance";
       version = "0.2.1.2";
       sha256 = "08dxsp1ar8mr4xrjy37lzl0s1rjnqsdq30p09nclip5pyhcw7g44";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://github.com/batterseapower/edit-distance";
       description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "edit-lenses" = callPackage
    ({ mkDerivation, data-default, lattices, mtl }:
     mkDerivation {
       pname = "edit-lenses";
       version = "0.2";
       sha256 = "1nrpbrq38q779s0fbzaxig2fdqgg9qg41vajx7lbhasal6aiclya";
       buildDepends = [ data-default lattices mtl ];
       description = "Symmetric, stateful edit lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "edit-lenses-demo" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "edit-lenses-demo";
       version = "0.1";
       sha256 = "0dvxiwhbmknmg4w5dj202g8r0capvgy3rn6c757ci5nhcmr4lypc";
       isLibrary = false;
       isExecutable = true;
       description = "Programs demoing the use of symmetric, stateful edit lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "editable" = callPackage
    ({ mkDerivation, text, vty, vty-ui }:
     mkDerivation {
       pname = "editable";
       version = "1.0.0.2";
       sha256 = "15jz0b913xd8yd3nzk4vrlj0vzbhjarl05h9j0mdcfgxns5j0yxi";
       buildDepends = [ text vty vty-ui ];
       homepage = "https://github.com/maxpow4h/editable";
       description = "Interactive editors for Generics";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "editline" = callPackage
    ({ mkDerivation, libedit }:
     mkDerivation {
       pname = "editline";
       version = "0.2.1.1";
       sha256 = "101zhzja14n8bhbrly7w2aywx3sxyzgyjdrmgpg4gn4alf4lzdlz";
       extraLibraries = [ libedit ];
       homepage = "http://code.haskell.org/editline";
       description = "Bindings to the editline library (libedit)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "effect-monad" = callPackage
    ({ mkDerivation, type-level-sets }:
     mkDerivation {
       pname = "effect-monad";
       version = "0.6.1";
       sha256 = "0kbjsdiv2x84spbw4qrgk76xwwgqrqhasim83h2jjwvn4qdpyjw8";
       buildDepends = [ type-level-sets ];
       description = "Embeds effect systems into Haskell using parameteric effect monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "effective-aspects" = callPackage
    ({ mkDerivation, Cabal, hashtables, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "effective-aspects";
       version = "0.1.0.0";
       sha256 = "0hcczdc98w8mqhap20dm0dmxbmqrxa8xxs8mjx4lga7y2n6wq22i";
       buildDepends = [ hashtables HUnit mtl QuickCheck ];
       testDepends = [
         Cabal hashtables HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://pleiad.cl/EffectiveAspects";
       description = "A monadic embedding of aspect oriented programming";
       license = "unknown";
     }) {};

  "effective-aspects-mzv" = callPackage
    ({ mkDerivation, Cabal, hashtables, HUnit, mzv, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "effective-aspects-mzv";
       version = "0.1.0.1";
       sha256 = "03mignf38inf10l19mcsjgjb0935lm53b29xy39pkcycrpmp0ckj";
       buildDepends = [ hashtables HUnit mzv QuickCheck ];
       testDepends = [
         Cabal hashtables HUnit mzv QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://pleiad.cl/EffectiveAspects";
       description = "A monadic embedding of aspect oriented programming, using \"Monads, Zippers and Views\" instead of mtl";
       license = "unknown";
     }) {};

  "effects" = callPackage
    ({ mkDerivation, newtype, void }:
     mkDerivation {
       pname = "effects";
       version = "0.2.2";
       sha256 = "0ysz02qvw9gg271dsign11hs7cfsz7xfc4kjmggf10j86lcpi034";
       buildDepends = [ newtype void ];
       homepage = "http://github.com/sjoerdvisscher/effects";
       description = "Computational Effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "effects-parser" = callPackage
    ({ mkDerivation, effects }:
     mkDerivation {
       pname = "effects-parser";
       version = "0.1";
       sha256 = "0vjjld95kg02a4nr2a0lwlcwaq3867qvbbjk8b1g6fd3d1qj456r";
       buildDepends = [ effects ];
       homepage = "http://github.com/nybble41/effects-parser";
       description = "Parser Effect for the Control.Effects Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "effin" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "effin";
       version = "0.2.1.2";
       sha256 = "0zjblpsd837ngg1pb1rqb3wyszwx93hpn08qg0b6f68vks83z66s";
       buildDepends = [ mtl ];
       homepage = "https://github.com/YellPika/effin";
       description = "A Typeable-free implementation of extensible effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "egison" = callPackage
    ({ mkDerivation, filepath, ghc-paths, Glob, haskeline, HUnit, mtl
     , parsec, random, regex-posix, strict-io, test-framework
     , test-framework-hunit, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "egison";
       version = "3.4.0";
       sha256 = "1i37w1z1wfl567gp7vj4i0svpiasz771lypq18gq5b7n2w2clnnn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath ghc-paths haskeline mtl parsec random regex-posix
         strict-io text transformers unordered-containers
       ];
       testDepends = [
         Glob HUnit mtl test-framework test-framework-hunit transformers
       ];
       homepage = "http://www.egison.org";
       description = "Programming language with non-linear pattern-matching against unfree data";
       license = stdenv.lib.licenses.mit;
     }) {};

  "egison-quote" = callPackage
    ({ mkDerivation, egison, mtl, parsec }:
     mkDerivation {
       pname = "egison-quote";
       version = "0.2";
       sha256 = "1qmbivr4lp8m27ns5cz38fkkynfky9z73hqr173dhyvqccjamfgk";
       buildDepends = [ egison mtl parsec ];
       homepage = "https://github.com/xenophobia/Egison-Quote";
       description = "A quasi quotes for using Egison expression in Haskell code";
       license = stdenv.lib.licenses.mit;
     }) {};

  "egison-tutorial" = callPackage
    ({ mkDerivation, egison, filepath, ghc-paths, haskeline, mtl
     , parsec, regex-posix, strict-io, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "egison-tutorial";
       version = "3.3.6";
       sha256 = "0v234hcmx7jr8xqdsmi0v4p0a80v09sdmgqpmvssr0vfj9gjk18x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         egison filepath ghc-paths haskeline mtl parsec regex-posix
         strict-io transformers unordered-containers
       ];
       homepage = "http://www.egison.org";
       description = "A tutorial program for the Egison programming language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ehaskell" = callPackage
    ({ mkDerivation, filepath, mtlparse, regexpr, utf8-string, yjtools
     }:
     mkDerivation {
       pname = "ehaskell";
       version = "0.7";
       sha256 = "0d7j20lrxy5qy1ybgywfjk0d0f6iin37nfw9zdbmhi1z2l89mmnj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtlparse regexpr utf8-string yjtools ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/ehaskell/index.xhtml";
       description = "like eruby, ehaskell is embedded haskell";
       license = "GPL";
     }) {};

  "ehs" = callPackage
    ({ mkDerivation, dlist, haskell-src-meta, parsec }:
     mkDerivation {
       pname = "ehs";
       version = "0.1.0.1";
       sha256 = "1g1mq956jd9fnh17zzgpyfc4b8pc10iqfgmm691hskx6wf6lc641";
       buildDepends = [ dlist haskell-src-meta parsec ];
       homepage = "http://github.com/minpou/ehs/";
       description = "embedded Haskell by using quasiquotes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "eibd-client-simple" = callPackage
    ({ mkDerivation, eibclient, mtl, transformers }:
     mkDerivation {
       pname = "eibd-client-simple";
       version = "0.0.4";
       sha256 = "14nxahznqy6xfjgyi8d11b4hgrw431ywqc5hkz0lbpgxysgkc61d";
       editedCabalFile = "103xb7w0sqs1np2ygn9d3vyn2f959dhz54pf1k3b889m13ws0m2i";
       buildDepends = [ mtl transformers ];
       extraLibraries = [ eibclient ];
       description = "EIBd Client";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "eigen" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "eigen";
       version = "1.0.0";
       sha256 = "1957jq0fv3migj9807ifa0iws8x8ysxz0a6mhrvblvz0dl175vr6";
       buildDepends = [ vector ];
       homepage = "https://github.com/osidorkin/haskell-eigen";
       description = "Haskel binding for Eigen library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "either" = callPackage
    ({ mkDerivation, bifunctors, exceptions, free, monad-control
     , MonadRandom, mtl, profunctors, semigroupoids, semigroups
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "either";
       version = "4.3.2";
       sha256 = "0bmw4qc263fs5ivf94qfzrq26v8kflb13gims7c474d4jhg8g0w1";
       buildDepends = [
         bifunctors exceptions free monad-control MonadRandom mtl
         profunctors semigroupoids semigroups transformers transformers-base
       ];
       homepage = "http://github.com/ekmett/either/";
       description = "An either monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "either-unwrap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "either-unwrap";
       version = "1.1";
       sha256 = "0g1f5m7bcpnyg2sdvwx8x34ml6dqfrn326s8pbfciaqqf7wddayc";
       homepage = "http://github.com/gcross/either-unwrap";
       description = "Functions for probing and unwrapping values inside of Either";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "eithers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "eithers";
       version = "0.2.0";
       sha256 = "069w3qbyghs1w8wqimj54dwblq5rx1ylgflzzc4cwnjn0aqzgs45";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ekg" = callPackage
    ({ mkDerivation, aeson, ekg-core, filepath, network, snap-core
     , snap-server, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ekg";
       version = "0.4.0.5";
       sha256 = "0ak06yz88p79bhayy8byy3j9yw9bix7zhw8yxfcdnxjwgnx621h0";
       buildDepends = [
         aeson ekg-core filepath network snap-core snap-server text time
         transformers unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg";
       description = "Remote monitoring of processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ekg-bosun" = callPackage
    ({ mkDerivation, aeson, ekg-core, http-client, lens, network
     , network-uri, text, time, unordered-containers, vector, wreq
     }:
     mkDerivation {
       pname = "ekg-bosun";
       version = "1.0.3";
       sha256 = "0mlfsmw1aa24p6fhml8m2dj2v7hrp91a9d3cfl74rr8z8am61mqc";
       buildDepends = [
         aeson ekg-core http-client lens network network-uri text time
         unordered-containers vector wreq
       ];
       homepage = "http://github.com/ocharles/ekg-bosun";
       description = "Send ekg metrics to a Bosun instance";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ekg-carbon" = callPackage
    ({ mkDerivation, ekg-core, network, network-carbon, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "ekg-carbon";
       version = "1.0.2";
       sha256 = "0m8cv2hsn1745f7pj552rp9sjsyfh7fbgjw6k2ippqcbxmhqmf4i";
       buildDepends = [
         ekg-core network network-carbon text time unordered-containers
         vector
       ];
       homepage = "http://github.com/ocharles/ekg-carbon";
       description = "An EKG backend to send statistics to Carbon (part of Graphite monitoring tools)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ekg-core" = callPackage
    ({ mkDerivation, text, unordered-containers }:
     mkDerivation {
       pname = "ekg-core";
       version = "0.1.0.2";
       sha256 = "0iipj2q4msawxlvzzikiy7jls22ncbx7v3ldi7y75d52cyl2lmpg";
       buildDepends = [ text unordered-containers ];
       homepage = "https://github.com/tibbe/ekg-core";
       description = "Tracking of system metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ekg-log" = callPackage
    ({ mkDerivation, aeson, ekg-core, fast-logger, filepath, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "ekg-log";
       version = "0.1.0.3";
       sha256 = "1rgjpd0cksxxr1934k9xpzhyzsl54d7yp1mh65m85z7665kcjshw";
       buildDepends = [
         aeson ekg-core fast-logger filepath text time unordered-containers
       ];
       homepage = "https://github.com/ixmatus/ekg-log";
       description = "Push metrics to a log file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ekg-rrd" = callPackage
    ({ mkDerivation, ekg-core, HUnit, mtl, test-framework
     , test-framework-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "ekg-rrd";
       version = "0.2.0.14";
       sha256 = "07is6m992laicd334pxdj9lli0wgspk69k30ppi5irvlczyfaqki";
       buildDepends = [ ekg-core mtl text time unordered-containers ];
       testDepends = [
         ekg-core HUnit test-framework test-framework-hunit text time
         unordered-containers
       ];
       homepage = "https://bitbucket.org/davecturner/ekg-rrd";
       description = "Passes ekg statistics to rrdtool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ekg-statsd" = callPackage
    ({ mkDerivation, ekg-core, network, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "ekg-statsd";
       version = "0.2.0.1";
       sha256 = "0s01bkir41189ss72sshlbg4y4qk2wvkr234m2j1y0169l067687";
       buildDepends = [ ekg-core network text time unordered-containers ];
       homepage = "https://github.com/tibbe/ekg-statsd";
       description = "Push metrics to statsd";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "electrum-mnemonic" = callPackage
    ({ mkDerivation, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "electrum-mnemonic";
       version = "0.1.2";
       sha256 = "1lswfw72imi326146dyvva3w9g4v5725kj817q9bjgrfmzn2k2k3";
       testDepends = [ tasty tasty-quickcheck ];
       description = "easy to remember mnemonic for a high-entropy value";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "elerea" = callPackage
    ({ mkDerivation, transformers, transformers-base }:
     mkDerivation {
       pname = "elerea";
       version = "2.8.0";
       sha256 = "1sc71775f787dh70ay9fm6x6npsn81yci9yr984ai87ddz023sab";
       buildDepends = [ transformers transformers-base ];
       description = "A minimalistic FRP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elerea-examples" = callPackage
    ({ mkDerivation, elerea, GLFW, OpenGL }:
     mkDerivation {
       pname = "elerea-examples";
       version = "2.2.3";
       sha256 = "17m52c6qa905wpfanllhnaizq6vv2hp0ldfmlv10b0hbzjs29bx1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ elerea GLFW OpenGL ];
       description = "Example applications for Elerea";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elerea-sdl" = callPackage
    ({ mkDerivation, elerea, SDL }:
     mkDerivation {
       pname = "elerea-sdl";
       version = "0.1.1";
       sha256 = "1dfbgnwn0jj3lv2fskc2k3m4h0crars2d1p0gpj265r4k58qis36";
       buildDepends = [ elerea SDL ];
       homepage = "http://github.com/singpolyma/elerea-sdl";
       description = "Elerea FRP wrapper for SDL";
       license = "unknown";
     }) {};

  "elevator" = callPackage
    ({ mkDerivation, clean-unions, transformers }:
     mkDerivation {
       pname = "elevator";
       version = "0.1.3";
       sha256 = "0z7rj70ilv4y95prfdj3fjlw4icr64d66lqgyr6jp28zxrxw1535";
       buildDepends = [ clean-unions transformers ];
       homepage = "https://github.com/fumieval/elevator";
       description = "Immediately lifts to a desired level";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elf" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "elf";
       version = "0.27";
       sha256 = "19ylk13ny2clwfgqv6r55h80ghlgzbwydzrfy1msyxcxn4zmdpjs";
       buildDepends = [ binary ];
       homepage = "http://github.com/erikcharlebois/elf";
       description = "Parser for ELF object format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-build-lib" = callPackage
    ({ mkDerivation, elm-compiler, elm-core-sources, file-embed }:
     mkDerivation {
       pname = "elm-build-lib";
       version = "0.14.0.0";
       sha256 = "12hhyjr3bshbz66zxl5jfs4s3qx6laqqwcim3kf8rj2vh12h6wj5";
       buildDepends = [ elm-compiler elm-core-sources file-embed ];
       homepage = "http://github.com/JoeyEremondi/elm-build-lib";
       description = "Compile Elm code to JS within Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-compiler" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, binary, blaze-html
     , blaze-markup, cmdargs, filemanip, filepath, HUnit, indents
     , language-ecmascript, language-glsl, mtl, parsec, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, transformers, union-find, unordered-containers
     }:
     mkDerivation {
       pname = "elm-compiler";
       version = "0.14";
       sha256 = "1vgbs3navs6dr36k408kc83gkn2ndhmc0b1015zk3jb0wkmvm73y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty binary blaze-html blaze-markup cmdargs filepath
         indents language-ecmascript language-glsl mtl parsec text
         transformers union-find unordered-containers
       ];
       testDepends = [
         aeson aeson-pretty binary blaze-html blaze-markup cmdargs filemanip
         filepath HUnit indents language-ecmascript language-glsl mtl parsec
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text transformers union-find
         unordered-containers
       ];
       homepage = "http://elm-lang.org";
       description = "Values to help with elm-package, elm-make, and elm-lang.org.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-core-sources" = callPackage
    ({ mkDerivation, file-embed }:
     mkDerivation {
       pname = "elm-core-sources";
       version = "1.0.0";
       sha256 = "1yr0csgz0hv25cz3jslap0adwvfcvv35bns32b9g0vyda1fm00x4";
       buildDepends = [ file-embed ];
       homepage = "http://github.com/JoeyEremondi/elm-build-lib";
       description = "Source files for the Elm runtime and standard libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-get" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, ansi-wl-pprint, binary, Elm
     , filepath, HTTP, http-client, http-client-tls, http-types, mtl
     , network, optparse-applicative, vector
     }:
     mkDerivation {
       pname = "elm-get";
       version = "0.1.3";
       sha256 = "1did7vjd1h2kh5alndd2b63zi8b1m9hf6k1k75yxwvw6f6mz5i4q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty ansi-wl-pprint binary Elm filepath HTTP
         http-client http-client-tls http-types mtl network
         optparse-applicative vector
       ];
       homepage = "http://github.com/elm-lang/elm-get";
       description = "Tool for sharing and using Elm libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-make" = callPackage
    ({ mkDerivation, ansi-wl-pprint, binary, blaze-html, blaze-markup
     , elm-compiler, elm-package, filepath, mtl, optparse-applicative
     , text
     }:
     mkDerivation {
       pname = "elm-make";
       version = "0.1";
       sha256 = "1hrc8bzfqzrcmkzqcampxkn5m113blfp4095h6c2xnadiicbvwdy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint binary blaze-html blaze-markup elm-compiler
         elm-package filepath mtl optparse-applicative text
       ];
       homepage = "http://elm-lang.org";
       description = "A build tool for Elm projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-package" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, ansi-wl-pprint, binary
     , elm-compiler, filepath, HTTP, http-client, http-client-tls
     , http-types, HUnit, json, mtl, network, optparse-applicative
     , resourcet, test-framework, test-framework-hunit, text, time
     , unordered-containers, vector, zip-archive
     }:
     mkDerivation {
       pname = "elm-package";
       version = "0.2";
       sha256 = "12181flwqnjxx7b6vx521nizh3i0dhc4mbl6axzjmd65mll3pjv1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty ansi-wl-pprint binary elm-compiler filepath HTTP
         http-client http-client-tls http-types mtl network
         optparse-applicative text time unordered-containers vector
         zip-archive
       ];
       testDepends = [
         aeson aeson-pretty ansi-wl-pprint binary elm-compiler filepath HTTP
         http-client http-client-tls http-types HUnit json mtl network
         optparse-applicative resourcet test-framework test-framework-hunit
         text time unordered-containers vector
       ];
       homepage = "http://github.com/elm-lang/elm-package";
       description = "Package manager for Elm libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-reactor" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, cmdargs, elm-compiler
     , filepath, fsnotify, HTTP, mtl, snap-core, snap-server
     , system-filepath, text, time, transformers, unordered-containers
     , websockets, websockets-snap
     }:
     mkDerivation {
       pname = "elm-reactor";
       version = "0.2.0.1";
       sha256 = "1qnrxr3wayhw92w6lghchz8avxbxg00w7p6d1vs7mq9q56876jgj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-html blaze-markup cmdargs elm-compiler filepath fsnotify HTTP
         mtl snap-core snap-server system-filepath text time transformers
         unordered-containers websockets websockets-snap
       ];
       homepage = "http://elm-lang.org";
       description = "Interactive development tool for Elm programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-repl" = callPackage
    ({ mkDerivation, binary, bytestring-trie, cmdargs, elm-compiler
     , elm-package, filepath, haskeline, HUnit, mtl, parsec, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "elm-repl";
       version = "0.4";
       sha256 = "1yy3vxp87bxps41x985sa0q7cqm9wx5d8sc04q0licx0in2phvyi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary bytestring-trie cmdargs elm-compiler elm-package filepath
         haskeline mtl parsec
       ];
       testDepends = [
         bytestring-trie cmdargs elm-compiler elm-package filepath haskeline
         HUnit mtl parsec QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/elm-lang/elm-repl";
       description = "a REPL for Elm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-server" = callPackage
    ({ mkDerivation, cmdargs, Elm, filepath, mtl, snap-core
     , snap-server, unordered-containers
     }:
     mkDerivation {
       pname = "elm-server";
       version = "0.11.0.1";
       sha256 = "0nnkhmmm4cl6a314xxh5qwxkjsc3k3vcwdfar62578ykarxb53g1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs Elm filepath mtl snap-core snap-server unordered-containers
       ];
       homepage = "http://elm-lang.org";
       description = "Server for developing Elm projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "elm-yesod" = callPackage
    ({ mkDerivation, blaze-markup, Elm, shakespeare-js, text
     , yesod-core
     }:
     mkDerivation {
       pname = "elm-yesod";
       version = "0.2";
       sha256 = "0hza3khwspwlqbyllh2w1083hh19hslc0lhdryq1bbs8bssird39";
       buildDepends = [ blaze-markup Elm shakespeare-js text yesod-core ];
       homepage = "http://elm-lang.org";
       description = "The Elm language Yesod compatibility module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "email" = callPackage
    ({ mkDerivation, encoding, HaskellNet, hsemail, parsec, time }:
     mkDerivation {
       pname = "email";
       version = "0.1.1.2";
       sha256 = "144a53an7laivcc6zxawsjz8yijknswnlbrd8id87d6x6lbq1cw3";
       buildDepends = [ encoding HaskellNet hsemail parsec time ];
       description = "Sending eMail in Haskell made easy";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "email-header" = callPackage
    ({ mkDerivation, attoparsec, base64-bytestring, case-insensitive
     , QuickCheck, tasty, tasty-quickcheck, text, text-icu, time
     }:
     mkDerivation {
       pname = "email-header";
       version = "0.2.0";
       sha256 = "1kl7d1scxq6ygjdixl4xkhaa4d60zr8i92fkcw5qczk44la4wiyv";
       buildDepends = [
         attoparsec base64-bytestring case-insensitive text text-icu time
       ];
       testDepends = [
         case-insensitive QuickCheck tasty tasty-quickcheck text time
       ];
       homepage = "http://github.com/knrafto/email-header";
       description = "Parsing and rendering of email and MIME headers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "email-postmark" = callPackage
    ({ mkDerivation, aeson, attoparsec, HTTP, network }:
     mkDerivation {
       pname = "email-postmark";
       version = "0.2";
       sha256 = "17zby98j1glsslrndmxl6zwrc3q7ir9771yvfxijawp4wdx6nayy";
       buildDepends = [ aeson attoparsec HTTP network ];
       description = "A simple wrapper to send emails via the api of the service postmark (http://postmarkapp.com/)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "email-validate" = callPackage
    ({ mkDerivation, attoparsec, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "email-validate";
       version = "2.0.1";
       sha256 = "1qxvcm8xiyz50ganzic8cm8nxswq361i80yi939y3n89dk067lzj";
       buildDepends = [ attoparsec ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://porg.es/blog/email-address-validation-simpler-faster-more-correct";
       description = "Validating an email address string against RFC 5322";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "email-validator" = callPackage
    ({ mkDerivation, cmdargs, dns, doctest, email-validate, HUnit
     , parallel-io, pcre-light, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "email-validator";
       version = "0.0.3";
       sha256 = "0ai0fj7rpq9h0i0rznrsqwvqbkkry5dgq4hgg5jc8ma3j9gym87n";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs dns email-validate HUnit parallel-io pcre-light tasty
         tasty-hunit
       ];
       testDepends = [
         cmdargs dns doctest email-validate HUnit parallel-io pcre-light
         tasty tasty-hunit
       ];
       description = "Perform basic syntax and deliverability checks on email addresses";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "embeddock" = callPackage
    ({ mkDerivation, filepath, her-lexer, MissingH }:
     mkDerivation {
       pname = "embeddock";
       version = "0.3.0.1";
       sha256 = "01xyqwnyza1cpd7ky4kgr1z5m8w2ms395lj7xjwxh42jg65b1rfr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath her-lexer MissingH ];
       homepage = "https://github.com/nushio3/embeddock";
       description = "Embed the values in scope in the haddock documentation of the module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "embeddock-example" = callPackage
    ({ mkDerivation, embeddock, time }:
     mkDerivation {
       pname = "embeddock-example";
       version = "0.1";
       sha256 = "07xc7kdnlbfwr08zhgjphbcmn8ycilp6pna3nk4y0w2hw87g7db0";
       buildDepends = [ embeddock time ];
       homepage = "https://github.com/nushio3/embeddock-example";
       description = "Example of using embeddock";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "embroidery" = callPackage
    ({ mkDerivation, dlist, gloss, HCodecs, mtl }:
     mkDerivation {
       pname = "embroidery";
       version = "0.1";
       sha256 = "1vqksv7a12xzi6zp4b2qfnsb5gaarg5bhxanhbi4qkn1jmwy82yx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ dlist gloss HCodecs mtl ];
       homepage = "https://ludflu@github.com/ludflu/embroidery.git";
       description = "support for embroidery formats in haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "emgm" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, syb }:
     mkDerivation {
       pname = "emgm";
       version = "0.4";
       sha256 = "0cpcwrb6wqwq371wqjmhzfhdwk3vfhjjgz4vgjsjvw6cdhbpw5p1";
       testDepends = [ HUnit QuickCheck syb ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/EMGM";
       description = "Extensible and Modular Generics for the Masses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "empty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "empty";
       version = "9";
       sha256 = "0ap7qby3n5qiwf791z4li05h0l6p6xi899wkmg6x8z6bb8z9q2d9";
       description = "Ceci n'est pas une package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enclosed-exceptions" = callPackage
    ({ mkDerivation, async, deepseq, hspec, lifted-base, monad-control
     , QuickCheck, transformers, transformers-base
     }:
     mkDerivation {
       pname = "enclosed-exceptions";
       version = "1.0.1";
       sha256 = "1kid1hi392h88a1am0jkm7dhwl3v78lw5wfcyhmh0x454yr3b6zz";
       buildDepends = [
         async deepseq lifted-base monad-control transformers
         transformers-base
       ];
       testDepends = [
         async deepseq hspec lifted-base monad-control QuickCheck
         transformers transformers-base
       ];
       homepage = "https://github.com/jcristovao/enclosed-exceptions";
       description = "Catching all exceptions from within an enclosed computation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "encoding" = callPackage
    ({ mkDerivation, binary, extensible-exceptions, HaXml, mtl
     , regex-compat
     }:
     mkDerivation {
       pname = "encoding";
       version = "0.7.0.2";
       sha256 = "14l3dx7ayvp2dm37c3h7p63zfzmhwpx1hirbkm04idhi3906lxps";
       buildDepends = [
         binary extensible-exceptions HaXml mtl regex-compat
       ];
       homepage = "http://code.haskell.org/encoding/";
       description = "A library for various character encodings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "engine-io" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base64-bytestring
     , either, free, monad-loops, mwc-random, stm, stm-delay, text
     , transformers, unordered-containers, vector, websockets
     }:
     mkDerivation {
       pname = "engine-io";
       version = "1.2.3";
       sha256 = "05sc939x24f3na6nxywgbq0yx4wdamh6zk4spdclqgq65j7v0hxc";
       buildDepends = [
         aeson async attoparsec base64-bytestring either free monad-loops
         mwc-random stm stm-delay text transformers unordered-containers
         vector websockets
       ];
       homepage = "http://github.com/ocharles/engine.io";
       description = "A Haskell implementation of Engine.IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "engine-io-snap" = callPackage
    ({ mkDerivation, attoparsec-enumerator, engine-io
     , MonadCatchIO-transformers, snap-core, unordered-containers
     , websockets, websockets-snap
     }:
     mkDerivation {
       pname = "engine-io-snap";
       version = "1.0.2";
       sha256 = "0x2sb3b825ds1g2g15yyqxdrw6bh968ivmyd1933l47649qbs0xr";
       buildDepends = [
         attoparsec-enumerator engine-io MonadCatchIO-transformers snap-core
         unordered-containers websockets websockets-snap
       ];
       homepage = "http://github.com/ocharles/engine.io";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "engine-io-yesod" = callPackage
    ({ mkDerivation, conduit, conduit-extra, engine-io, http-types
     , text, unordered-containers, wai, wai-websockets, websockets
     , yesod-core
     }:
     mkDerivation {
       pname = "engine-io-yesod";
       version = "1.0.1";
       sha256 = "0pczmiqrg046r367j071h2hr6p2amw93sqy7j1drd2gdiwaxzn02";
       editedCabalFile = "1ajjga1r2j8czvchnwqpn6kk09dzba1mzcvyyr4r0c25y62w6qsr";
       buildDepends = [
         conduit conduit-extra engine-io http-types text
         unordered-containers wai wai-websockets websockets yesod-core
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "engineering-units" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "engineering-units";
       version = "0.0.1";
       sha256 = "1jpipav3znxbj7ld5m53wv6pmv1nrcxprqm0m1p3ny9cmpnw3r9x";
       description = "A numeric type for managing and automating engineering units";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "entropy" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "entropy";
       version = "0.3.4.1";
       sha256 = "10myxs2a7838sywnlfggpsd7lmvzphl10zdh1vbbi18n3x79gyk0";
       homepage = "https://github.com/TomMD/entropy";
       description = "A platform independent entropy source";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enumerable" = callPackage
    ({ mkDerivation, control-monad-omega, tagged }:
     mkDerivation {
       pname = "enumerable";
       version = "0.0.3";
       sha256 = "1v94y0a3rlkg3qlbv70d1zj2vjhssf1f89xlgb5cnsy9az07517q";
       buildDepends = [ control-monad-omega tagged ];
       description = "A typeclass for enumerating all values a type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enumeration" = callPackage
    ({ mkDerivation, arith-encode, arithmoi, binary, Cabal, heap
     , HUnit-Plus
     }:
     mkDerivation {
       pname = "enumeration";
       version = "0.1.0";
       sha256 = "17d7vm2nkyhxw2f0wk6llrw9y5kqzgqlgswv98wrpnpsspwmx0bk";
       buildDepends = [ arith-encode arithmoi binary Cabal heap ];
       testDepends = [
         arith-encode arithmoi binary Cabal heap HUnit-Plus
       ];
       homepage = "https://github.com/emc2/enumeration";
       description = "A practical API for building recursive enumeration procedures and enumerating datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enumerator" = callPackage
    ({ mkDerivation, text, transformers }:
     mkDerivation {
       pname = "enumerator";
       version = "0.4.20";
       sha256 = "02a75dggj295zkhgjry5cb43s6y6ydpjb5w6vgl7kd9b6ma11qik";
       buildDepends = [ text transformers ];
       homepage = "https://john-millikin.com/software/enumerator/";
       description = "Reliable, high-performance processing with left-fold enumerators";
       license = stdenv.lib.licenses.mit;
     }) {};

  "enumerator-fd" = callPackage
    ({ mkDerivation, enumerator, mtl }:
     mkDerivation {
       pname = "enumerator-fd";
       version = "0.1.0.2";
       sha256 = "0xbrkv65m206qlvnjlbfb52kvjhw91rdnihwv3y31p2qj5zlz29p";
       buildDepends = [ enumerator mtl ];
       homepage = "https://john-millikin.com/software/enumerator/";
       description = "Enumerator instances for monads-fd classes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "enumerator-tf" = callPackage
    ({ mkDerivation, enumerator, monads-tf }:
     mkDerivation {
       pname = "enumerator-tf";
       version = "0.1.1";
       sha256 = "0s47j6pf05nwl105i2vwvsn18gis1v96gid85kj49ngb8ax0pjsp";
       buildDepends = [ enumerator monads-tf ];
       homepage = "https://john-millikin.com/software/enumerator/";
       description = "Enumerator instances for monads-tf classes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "enumfun" = callPackage
    ({ mkDerivation, enummapset-th }:
     mkDerivation {
       pname = "enumfun";
       version = "0.5.1.0";
       sha256 = "1fq4zmhc825bmyslfm7kbsa29qq773cgrz4npj2bcfl0jkbl3ndc";
       buildDepends = [ enummapset-th ];
       homepage = "https://github.com/liyang/enumfun";
       description = "Finitely represented /total/ EnumMaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enummapmap" = callPackage
    ({ mkDerivation, cereal, contravariant, data-default, deepseq
     , hspec, hspec-expectations, HUnit, lens, QuickCheck, safecopy
     , semigroups
     }:
     mkDerivation {
       pname = "enummapmap";
       version = "0.7.0";
       sha256 = "17rlynm46i3y76ms8s5ajkz50cj5m1anw83dizj281887qg63iwr";
       buildDepends = [
         contravariant data-default deepseq lens safecopy semigroups
       ];
       testDepends = [
         cereal deepseq hspec hspec-expectations HUnit lens QuickCheck
         safecopy semigroups
       ];
       description = "Map of maps using Enum types as keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enummapset" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "enummapset";
       version = "0.5.2.0";
       sha256 = "065gxljrjw59rdf7abq0v0c29wg1ymg984ckixnjrcs1yks0c2js";
       buildDepends = [ deepseq ];
       homepage = "https://github.com/michalt/enummapset";
       description = "IntMap and IntSet with Enum keys/elements";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enummapset-th" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "enummapset-th";
       version = "0.6.0.1";
       sha256 = "1v12pfj6k8av58sh6siwzspf2dnbcapmrzfpg2p4yz3bdkc70hh8";
       buildDepends = [ deepseq ];
       homepage = "https://github.com/liyang/enummapset-th";
       description = "TH-generated EnumSet/EnumMap wrappers around IntSet/IntMap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "enumset" = callPackage
    ({ mkDerivation, data-accessor, storable-record }:
     mkDerivation {
       pname = "enumset";
       version = "0.0.4";
       sha256 = "1dzwxi7i757zdf68v470n8dwn1g8kg51w3c1mwqyxwq85650805w";
       buildDepends = [ data-accessor storable-record ];
       description = "Sets of enumeration values represented by machine words";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "env-parser" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring
     , base64-bytestring, http-types, mtl, network, text, time
     , transformers
     }:
     mkDerivation {
       pname = "env-parser";
       version = "0.0.2.1";
       sha256 = "13d6yi5jbdi84nccn3ffiw96v5knbz4madjfg980izxfrnbsl1rr";
       buildDepends = [
         aeson attoparsec base16-bytestring base64-bytestring http-types mtl
         network text time transformers
       ];
       homepage = "http://github.com/tel/env-parser";
       description = "Pull configuration information from the ENV";
       license = stdenv.lib.licenses.mit;
     }) {};

  "envparse" = callPackage
    ({ mkDerivation, hspec }:
     mkDerivation {
       pname = "envparse";
       version = "0.1.0";
       sha256 = "1rlqb5wcqws0rz66cd704swmcx93617ai25hsx4ah45r18qs3qsh";
       testDepends = [ hspec ];
       homepage = "http://example.com/";
       description = "Parse environment variables";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "epanet-haskell" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "epanet-haskell";
       version = "2.0.12.4";
       sha256 = "1jpz58zlkhgf2fl4fzicpdkqqdbwy3sw56dga8yvjmgv5zcqqshx";
       homepage = "http://epanet.de/developer/haskell.html";
       description = "Haskell binding for EPANET";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "epass" = callPackage
    ({ mkDerivation, stm, time }:
     mkDerivation {
       pname = "epass";
       version = "0.2.1";
       sha256 = "0sg5pipzc4s9xq83ari7rigjbvhyh76kqnp57i98bs3k54ba53ym";
       buildDepends = [ stm time ];
       homepage = "http://github.com/baldo/epass";
       description = "Baisc, Erlang-like message passing supporting sockets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "epic" = callPackage
    ({ mkDerivation, boehmgc, Cabal, gmp, happy, mtl }:
     mkDerivation {
       pname = "epic";
       version = "0.9.3.2";
       sha256 = "1l73absns4ci20brkdjg1r1l9p4xxx88vax736diqik7rl7zrx9h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal mtl ];
       buildTools = [ happy ];
       extraLibraries = [ boehmgc gmp ];
       homepage = "http://www.dcs.st-and.ac.uk/~eb/epic.php";
       description = "Compiler for a simple functional language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "epoll" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "epoll";
       version = "0.2.2";
       sha256 = "0iz1x6lb5b71h4sgiacsnv5f8zj445v88a3rsra7vbza5g35nwnp";
       homepage = "http://github.com/twittner/epoll/";
       description = "epoll bindings";
       license = "LGPL";
     }) {};

  "eprocess" = callPackage
    ({ mkDerivation, exceptions, mtl }:
     mkDerivation {
       pname = "eprocess";
       version = "1.7.0";
       sha256 = "1h4ajq1rraiz7qw7350128n26jnqhzk9iyjzqc3lnbyx87q8j73v";
       buildDepends = [ exceptions mtl ];
       description = "*Very* basic Erlang-like process support for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "epub" = callPackage
    ({ mkDerivation, filepath, utf8-string, xml, zip-archive }:
     mkDerivation {
       pname = "epub";
       version = "0.0.7";
       sha256 = "0h9j9qqdllkng13w978fpd44zxni5v0mpywh7yxz259hlihwmw22";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath utf8-string xml zip-archive ];
       description = "EPUB E-Book construction support library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "epub-metadata" = callPackage
    ({ mkDerivation, filepath, HUnit, hxt, mtl, regex-compat
     , zip-archive
     }:
     mkDerivation {
       pname = "epub-metadata";
       version = "4.2";
       sha256 = "1pj0z6avdwvqrnjgwn7x5ajc7nagr575cilxmvzj22zlzhz4if3p";
       buildDepends = [ filepath hxt mtl regex-compat zip-archive ];
       testDepends = [ filepath HUnit hxt mtl regex-compat zip-archive ];
       homepage = "http://ui3.info/d/proj/epub-metadata.html";
       description = "Library for parsing epub document metadata";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "epub-tools" = callPackage
    ({ mkDerivation, epub-metadata, filepath, HUnit, mtl, parsec
     , regex-compat, zip-archive
     }:
     mkDerivation {
       pname = "epub-tools";
       version = "2.5";
       sha256 = "0ksnzh2j1xa5jvql7b37dnld3pv1lqf62rfww6wv58hh3d1zmzwj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         epub-metadata filepath mtl parsec regex-compat zip-archive
       ];
       testDepends = [
         epub-metadata filepath HUnit mtl parsec regex-compat
       ];
       homepage = "http://ui3.info/d/proj/epub-tools.html";
       description = "Command line utilities for working with epub files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "epubname" = callPackage
    ({ mkDerivation, epub-metadata, mtl, regex-compat }:
     mkDerivation {
       pname = "epubname";
       version = "2.3.2";
       sha256 = "1l3vi5z46x4m5h3x97hgr9g76i4s5scmpmpjzf97c1kddw31hlh3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ epub-metadata mtl regex-compat ];
       homepage = "http://ui3.info/d/proj/epubname.html";
       description = "Rename epub ebook files based on meta information";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "eq" = callPackage
    ({ mkDerivation, semigroupoids }:
     mkDerivation {
       pname = "eq";
       version = "4.0.3";
       sha256 = "1n2f20dh1rghv8c43dgdlpgamq61dy8dzh86v4p62a125pgawfn3";
       buildDepends = [ semigroupoids ];
       homepage = "http://github.com/ekmett/eq/";
       description = "Leibnizian equality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "equal-files" = callPackage
    ({ mkDerivation, explicit-exception, filemanip, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "equal-files";
       version = "0.0.5.1";
       sha256 = "1rm0hk42xnzix1ba7bxfrc910v4nnhvqk3cbdrxy7avzhad31nbf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         explicit-exception filemanip transformers utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/equal-files/";
       description = "Shell command for finding equal files";
       license = "GPL";
     }) {};

  "equational-reasoning" = callPackage
    ({ mkDerivation, singletons, void }:
     mkDerivation {
       pname = "equational-reasoning";
       version = "0.2.0.4";
       sha256 = "1f94y6h7qg7rck7rxf6j8sygkh1xmfk0z1lr71inx6s74agjyc9j";
       buildDepends = [ singletons void ];
       description = "Proof assistant for Haskell using DataKinds & PolyKinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "equivalence" = callPackage
    ({ mkDerivation, mtl, QuickCheck, STMonadTrans, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "equivalence";
       version = "0.2.5";
       sha256 = "014r9v81r7nj5pynfk3wa4lm4hk04123fgxkhb9a945wi6d9m5h3";
       buildDepends = [ mtl STMonadTrans ];
       testDepends = [
         mtl QuickCheck STMonadTrans test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://bitbucket.org/paba/equivalence/";
       description = "Maintaining an equivalence relation implemented as union-find using STT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "erd" = callPackage
    ({ mkDerivation, graphviz, parsec, text }:
     mkDerivation {
       pname = "erd";
       version = "0.1.3.0";
       sha256 = "00cf1q7472kkl12z48dwnhixvyk99451by577qmfj0vhlnl1dc09";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ graphviz parsec text ];
       homepage = "https://github.com/BurntSushi/erd";
       description = "An entity-relationship diagram generator from a plain text description";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "erf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "erf";
       version = "2.0.0.0";
       sha256 = "0dxk2r32ajmmc05vaxcp0yw6vgv4lkbmh8jcshncn98xgsfbgw14";
       description = "The error function, erf, and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "erf-native" = callPackage
    ({ mkDerivation, polynomial }:
     mkDerivation {
       pname = "erf-native";
       version = "1.0.0.1";
       sha256 = "0i031ws189rjl5gn44qpkfylx8kz7rdf3nzw9h0dmy2h86xbkckc";
       buildDepends = [ polynomial ];
       homepage = "http://code.haskell.org/~mokus/erf-native";
       description = "Native Haskell implementation of the interface from the erf package";
       license = "GPL";
     }) {};

  "erlang" = callPackage
    ({ mkDerivation, binary, filepath, nano-md5, network, random }:
     mkDerivation {
       pname = "erlang";
       version = "0.1";
       sha256 = "14jvl8mqdaxavzlkwdxr227m4igmcckhakmy45h7bgcxi5qbkla4";
       buildDepends = [ binary filepath nano-md5 network random ];
       homepage = "http://github.com/esessoms/haskell-interface";
       description = "FFI interface to Erlang";
       license = "GPL";
     }) {};

  "eros" = callPackage
    ({ mkDerivation, aeson, text }:
     mkDerivation {
       pname = "eros";
       version = "0.6.0.0";
       sha256 = "0nr0c2qq30ji50pyjrklrb6a73i6qkqws7ywbfpa4pcd176xwlrw";
       buildDepends = [ aeson text ];
       description = "A text censorship library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "eros-client" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, eros, text }:
     mkDerivation {
       pname = "eros-client";
       version = "0.5.0.1";
       sha256 = "15pi4khibvfpxni4v3kz6f92s8s34kmkx4q7kwq1rxk5gb6p8rcb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson aeson-pretty eros text ];
       description = "DEPRECATED in favor of eros-http";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "eros-http" = callPackage
    ({ mkDerivation, aeson, blaze-html, eros, http-types, markdown
     , text, wai, warp
     }:
     mkDerivation {
       pname = "eros-http";
       version = "0.6.0.1";
       sha256 = "1c7bwszjvbb3qnbvpjm0vin2x2z6dylplhs10hbhszkq2ypjjxyk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson blaze-html eros http-types markdown text wai warp
       ];
       description = "JSON HTTP interface to Eros";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "errno" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "errno";
       version = "0.1";
       sha256 = "0jix16b2c24pfbc3rig01nl68zdwpi28zzbciscalmq8lkpp10fa";
       buildDepends = [ mtl ];
       description = "a FFI utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "error-loc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "error-loc";
       version = "0.1.0.0";
       sha256 = "0ch7c537fp52yg3qmc1v9rs4y70cc0zyb3g3i0bmmhgdhxd90bm5";
       homepage = "https://github.com/joelteon/error-loc";
       description = "An error replacement with call-site metadata";
       license = stdenv.lib.licenses.mit;
     }) {};

  "error-location" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "error-location";
       version = "0.1.5.5";
       sha256 = "1gfi3jvag662xbsiv75ndb8p9s3c7j6lny15a9gqk8wd4l71myid";
       homepage = "https://github.com/gregwebs/ErrorLocation.hs";
       description = "error functions that show file location information";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "error-message" = callPackage
    ({ mkDerivation, ansi-wl-pprint, either-unwrap, InfixApplicative
     , mtl
     }:
     mkDerivation {
       pname = "error-message";
       version = "1.1";
       sha256 = "0xnz5l3r9x81pmb6nddzrrws1yqzdqydqkr2g1ib4pwmdwazf7f9";
       buildDepends = [
         ansi-wl-pprint either-unwrap InfixApplicative mtl
       ];
       homepage = "http://github.com/gcross/error-message";
       description = "Composable error messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "errorcall-eq-instance" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "errorcall-eq-instance";
       version = "0.1.0";
       sha256 = "1sr2wxbdqzpdawcivvd01nwpki0xbcxylz5qv95b96sq6b296gkk";
       testDepends = [ hspec QuickCheck ];
       description = "An orphan Eq instance for ErrorCall";
       license = stdenv.lib.licenses.mit;
     }) {};

  "errors" = callPackage
    ({ mkDerivation, either, safe, transformers }:
     mkDerivation {
       pname = "errors";
       version = "1.4.7";
       sha256 = "09g53dylwsw1phxq5zhkbq8pnpwqzipvqclmcrdypzkpwkmfncl7";
       buildDepends = [ either safe transformers ];
       description = "Simplified error-handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ersatz" = callPackage
    ({ mkDerivation, blaze-builder, blaze-textual, data-default
     , data-reify, doctest, filepath, HUnit, lens, mtl, parsec
     , QuickCheck, temporary, test-framework, test-framework-hunit
     , test-framework-quickcheck, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ersatz";
       version = "0.2.6.1";
       sha256 = "1hbn49ycc47f5zjf5zdgls23a8da389ma19g43bc379l8hm2xrjj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-textual data-default lens mtl parsec temporary
         transformers unordered-containers
       ];
       testDepends = [
         data-reify doctest filepath HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck transformers
       ];
       homepage = "http://github.com/ekmett/ersatz";
       description = "A monad for expressing SAT or QSAT problems using observable sharing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ert" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-expr, regex-compat
     , text, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "ert";
       version = "0.0.2.0";
       sha256 = "07pany4zv8crgbcilxsz5abmaq2bma5lhn9fkngra62w8mhkhzvz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec attoparsec-expr regex-compat text
         unordered-containers vector yaml
       ];
       homepage = "https://bitbucket.org/kayo/ert";
       description = "Easy Runtime Templates";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "esotericbot" = callPackage
    ({ mkDerivation, attoparsec, fgl, mtl, network, stm, stream-fusion
     , tuple
     }:
     mkDerivation {
       pname = "esotericbot";
       version = "0.0.6";
       sha256 = "0r77y94ff210nqjga0xm2hrraa01dgjfaxs3ijrg11z6hfz523s7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec fgl mtl network stm stream-fusion tuple
       ];
       homepage = "http://www.killersmurf.com/projects/esotericbot";
       description = "Esotericbot is a sophisticated, lightweight IRC bot";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "esqueleto" = callPackage
    ({ mkDerivation, conduit, hspec, HUnit, monad-control, monad-logger
     , persistent, persistent-sqlite, persistent-template, QuickCheck
     , resourcet, tagged, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "esqueleto";
       version = "2.1.2.1";
       sha256 = "0lynhkbrxxrngvdj5d4xlmi92s4m3dzdpd7gs1k408slil2i7r7i";
       buildDepends = [
         conduit monad-logger persistent resourcet tagged text transformers
         unordered-containers
       ];
       testDepends = [
         conduit hspec HUnit monad-control monad-logger persistent
         persistent-sqlite persistent-template QuickCheck resourcet text
         transformers
       ];
       homepage = "https://github.com/prowdsponsor/esqueleto";
       description = "Type-safe EDSL for SQL queries on persistent backends";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "estimator" = callPackage
    ({ mkDerivation, ad, distributive, lens, linear, reflection }:
     mkDerivation {
       pname = "estimator";
       version = "1.0.0.1";
       sha256 = "0l1c2k4c5bpfr7h03fdcfnvm5nsv605sxnd8agi1v2qakwxhdjcp";
       buildDepends = [ ad distributive lens linear reflection ];
       homepage = "https://github.com/GaloisInc/estimator";
       description = "State-space estimation algorithms such as Kalman Filters";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "estimators" = callPackage
    ({ mkDerivation, binary, deepseq, list-tries, MonadRandom, mtl
     , prettyclass, QuickCheck, text
     }:
     mkDerivation {
       pname = "estimators";
       version = "0.1.4";
       sha256 = "0n7j2ay68m73f1mkfsxrrcs1rq0fpavwf58r50y7wirpm5f6agcy";
       buildDepends = [
         binary deepseq list-tries MonadRandom mtl prettyclass QuickCheck
         text
       ];
       description = "Tool for managing probability estimation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "estreps" = callPackage
    ({ mkDerivation, bio, random }:
     mkDerivation {
       pname = "estreps";
       version = "0.3.1";
       sha256 = "100pqygnwclmpzjhzpz3j34y8v75d8ldxg76f9jys90gb41kggpi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio random ];
       homepage = "http://blog.malde.org/";
       description = "Repeats from ESTs";
       license = "GPL";
     }) {};

  "etcd" = callPackage
    ({ mkDerivation, aeson, hspec, http-conduit, MonadRandom, mtl, time
     }:
     mkDerivation {
       pname = "etcd";
       version = "0.1.0.2";
       sha256 = "07ai1dchi708v024ajv4cnx2rrlqyk8cd95znxxl1zz9mz6s1sdv";
       buildDepends = [ aeson http-conduit time ];
       testDepends = [ hspec MonadRandom mtl ];
       description = "Client for etcd, a highly-available key value store";
       license = "unknown";
     }) {};

  "eternal" = callPackage
    ({ mkDerivation, conduit, conduit-extra, filepath, http-conduit
     , http-types, network, regex-compat, transformers, utf8-string
     }:
     mkDerivation {
       pname = "eternal";
       version = "0.0.9";
       sha256 = "0kp25p26fsyqn4877wqjhbwfy7m0fnh7lfw0p5njmlx6kqbwi79n";
       buildDepends = [
         conduit conduit-extra filepath http-conduit http-types network
         regex-compat transformers utf8-string
       ];
       description = "everything breaking the Fairbairn threshold";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ety" = callPackage
    ({ mkDerivation, curl, random, text-icu, utf8-string, xml }:
     mkDerivation {
       pname = "ety";
       version = "0.1";
       sha256 = "165vwca1q001pa9f09vfhf724kq5jnsip907c9dr6fncj9yjdp2p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ curl random text-icu utf8-string xml ];
       description = "Random etymology online entry";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "eurofxref" = callPackage
    ({ mkDerivation, conduit, failure, hexpat, http-conduit, http-types
     , monad-control, mtl, time
     }:
     mkDerivation {
       pname = "eurofxref";
       version = "0.2.1";
       sha256 = "0zjf3rky2ww2nq4ryyz0069cv3ps1h29nwrgr2sk127bsik868x9";
       buildDepends = [
         conduit failure hexpat http-conduit http-types monad-control mtl
         time
       ];
       description = "Free foreign exchange/currency feed from the European Central Bank";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "event-driven" = callPackage
    ({ mkDerivation, monads-tf, yjtools }:
     mkDerivation {
       pname = "event-driven";
       version = "0.0.2";
       sha256 = "1jkrc1k0ixjs95fvj36gr08igpx5vqff5zc6bi9f04ldxqz4wbap";
       buildDepends = [ monads-tf yjtools ];
       description = "library for event driven programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "event-handlers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "event-handlers";
       version = "0.0.0.3";
       sha256 = "1515v1khdkr145z5inrm2ardhpzfsbncpl5wmfd9nmilw97da9ld";
       homepage = "http://code.haskell.org/~mokus/event-handlers";
       description = "Event handlers";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "event-list" = callPackage
    ({ mkDerivation, non-negative, QuickCheck, random, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "event-list";
       version = "0.1.1.1";
       sha256 = "16qrjvn8z2nlpfp3xlgwsg2abn7b33n3z673qs5k6ashfbkdy5ja";
       buildDepends = [ non-negative QuickCheck transformers utility-ht ];
       testDepends = [
         non-negative QuickCheck random transformers utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/event-list/";
       description = "Event lists with relative or absolute time stamps";
       license = "GPL";
     }) {};

  "event-monad" = callPackage
    ({ mkDerivation, event-handlers, monad-loops, mtl, prettyclass
     , priority-queue, stateref
     }:
     mkDerivation {
       pname = "event-monad";
       version = "0.0.3";
       sha256 = "1phs799i4da1nfgx530bp93n9xhzgnavilwlk8nz5vi3kd61gzf4";
       buildDepends = [
         event-handlers monad-loops mtl prettyclass priority-queue stateref
       ];
       homepage = "http://code.haskell.org/~mokus/event-monad";
       description = "Event-graph simulation monad transformer";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "eventstore" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, binary, cereal, network
     , protobuf, random, stm, suspend, text, time, timers, uuid
     }:
     mkDerivation {
       pname = "eventstore";
       version = "0.1.0.0";
       sha256 = "0hyyxg062i79gbgqw1fkqp6jjjvns78nmwz36w2jkzxyzp4pgjgj";
       buildDepends = [
         aeson async attoparsec binary cereal network protobuf random stm
         suspend text time timers uuid
       ];
       description = "EventStore Haskell TCP Client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "every-bit-counts" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "every-bit-counts";
       version = "0.1";
       sha256 = "0r959iyd5nsw3sj7p0gwsccdgaald9lwisg0lvq9qynyz09kh4vj";
       homepage = "http://research.microsoft.com/en-us/people/dimitris/pearl.pdf";
       description = "A functional pearl on encoding and decoding using question-and-answer strategies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ewe" = callPackage
    ({ mkDerivation, alex, happy, mtl, transformers }:
     mkDerivation {
       pname = "ewe";
       version = "0.1.0.40";
       sha256 = "0r9kcpb6j2x4cmg26rvzd2gp4bjjmlsd0rbk1y2dc7vyivd0m14l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl transformers ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/jfcmacro/ewe";
       description = "An language using in Programming Languages teaching";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ex-pool" = callPackage
    ({ mkDerivation, exceptions, hashable, stm, time, transformers
     , vector
     }:
     mkDerivation {
       pname = "ex-pool";
       version = "0.2";
       sha256 = "0da5grl2fdca24zhlngq2n16smdb4f5vvxqzc29ipsc3j7wkbmva";
       buildDepends = [
         exceptions hashable stm time transformers vector
       ];
       homepage = "https://github.com/kim/ex-pool";
       description = "Another fork of resource-pool, with a MonadIO and MonadCatch constraint";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exact-combinatorics" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "exact-combinatorics";
       version = "0.2.0.7";
       sha256 = "05q31mh5x6i90n3ddxyqnhhjga7vbsbi947iywyqi53h2z2iw8f7";
       homepage = "http://code.haskell.org/~wren/";
       description = "Efficient exact computation of combinatoric functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exception-mailer" = callPackage
    ({ mkDerivation, hslogger, mime-mail, text }:
     mkDerivation {
       pname = "exception-mailer";
       version = "0.4.1";
       sha256 = "068zhr90gldin0f6xafqp1pncf6rhhm3gagnvn6r3p0kx060ia23";
       buildDepends = [ hslogger mime-mail text ];
       homepage = "https://github.com/drpowell/exception-mailer";
       description = "Catch all runtime exceptions and send an email";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exception-monads-fd" = callPackage
    ({ mkDerivation, exception-transformers, monads-fd, transformers }:
     mkDerivation {
       pname = "exception-monads-fd";
       version = "0.2";
       sha256 = "1wrhi9h2k068f0q0aqvpmlyx3318znm137xnvx7icf5shlpsilvi";
       buildDepends = [ exception-transformers monads-fd transformers ];
       homepage = "http://www.eecs.harvard.edu/~mainland/";
       description = "Exception monad transformer instances for monads-fd classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exception-monads-tf" = callPackage
    ({ mkDerivation, exception-transformers, monads-tf, transformers }:
     mkDerivation {
       pname = "exception-monads-tf";
       version = "0.3.0.3";
       sha256 = "1smmbdiqp2qxa13sv2j7sqyakvsv1g7g9mh9z65b756ss672913x";
       buildDepends = [ exception-transformers monads-tf transformers ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Exception monad transformer instances for monads-tf classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exception-mtl" = callPackage
    ({ mkDerivation, exception-transformers, mtl, transformers }:
     mkDerivation {
       pname = "exception-mtl";
       version = "0.3.0.5";
       sha256 = "1rqrh1wbm67w9rbh1gg5zsavlsw9nfw0hnbs9q2djglh73pq3iqj";
       buildDepends = [ exception-transformers mtl transformers ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Exception monad transformer instances for mtl2 classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exception-transformers" = callPackage
    ({ mkDerivation, HUnit, stm, test-framework, test-framework-hunit
     , transformers
     }:
     mkDerivation {
       pname = "exception-transformers";
       version = "0.3.0.4";
       sha256 = "1m4mwgzynymdjvrrrvl90q468pgwik07yy2lsff9spxhcd43w2ra";
       buildDepends = [ stm transformers ];
       testDepends = [
         HUnit test-framework test-framework-hunit transformers
       ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Type classes and monads for unchecked extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exceptions" = callPackage
    ({ mkDerivation, mtl, QuickCheck, test-framework
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "exceptions";
       version = "0.6.1";
       sha256 = "09jv5jskv48fd5la1pdvafwc9j2jxj1ncf6yxzkwcjddynbkyszm";
       buildDepends = [ mtl transformers ];
       testDepends = [
         mtl QuickCheck test-framework test-framework-quickcheck2
         transformers
       ];
       homepage = "http://github.com/ekmett/exceptions/";
       description = "Extensible optionally-pure exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "executable-path" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "executable-path";
       version = "0.0.3";
       sha256 = "1jg58qf19qz93c60ryglcavwdcysz4fd4qn8kpw5im9w9kniawlc";
       buildDepends = [ filepath ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Finding out the full path of the executable";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "exif" = callPackage
    ({ mkDerivation, exif }:
     mkDerivation {
       pname = "exif";
       version = "3000.0.0";
       sha256 = "0w0l4xk3qwfiw10880729mwfdkx4xpfn9ffdw7fi5swyhinjh6wi";
       extraLibraries = [ exif ];
       description = "A Haskell binding to a subset of libexif";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) exif; };

  "exists" = callPackage
    ({ mkDerivation, contravariant }:
     mkDerivation {
       pname = "exists";
       version = "0.2";
       sha256 = "1f7v2f7jmqx0nkl2wla88mnb21nava74b73rvsmfbj4kxmwchsgy";
       buildDepends = [ contravariant ];
       homepage = "http://github.com/glehel/exists";
       description = "Existential datatypes holding evidence of constraints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "expand" = callPackage
    ({ mkDerivation, AspectAG, HList, murder, uu-parsinglib }:
     mkDerivation {
       pname = "expand";
       version = "0.0.1";
       sha256 = "0i8agr9np8pg40z58z8jz1fvq3vqjk2sx247dn33mvqyd03hnbss";
       buildDepends = [ AspectAG HList murder uu-parsinglib ];
       description = "Extensible Pandoc";
       license = "LGPL";
     }) {};

  "expat-enumerator" = callPackage
    ({ mkDerivation, enumerator, hexpat, text, transformers, xml-types
     }:
     mkDerivation {
       pname = "expat-enumerator";
       version = "0.1.0.3";
       sha256 = "0alllaa9qj94jp99pyvbh4ckdvb43aba2l2jmigazqvbc9db03mx";
       buildDepends = [ enumerator hexpat text transformers xml-types ];
       homepage = "http://john-millikin.com/software/expat-enumerator/";
       description = "Enumerator-based API for Expat";
       license = stdenv.lib.licenses.mit;
     }) {};

  "expiring-cache-map" = callPackage
    ({ mkDerivation, hashable, time, unordered-containers }:
     mkDerivation {
       pname = "expiring-cache-map";
       version = "0.0.5.3";
       sha256 = "0ihyfhkqdr29pmcb2pylrj6p2xmfgfz9qw6dabxxy8dbcg38ppvf";
       editedCabalFile = "0k6s0cm3rsq4gv7yklilxgd9zbr6m7zd9fcgsqnj1z50nw0096g3";
       buildDepends = [ hashable unordered-containers ];
       testDepends = [ hashable time unordered-containers ];
       homepage = "https://github.com/elblake/expiring-cache-map";
       description = "General purpose simple caching";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "expiring-mvar" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "expiring-mvar";
       version = "0.1";
       sha256 = "0mkc7d346vdsjg83a253986w4pps53r262w1if91q16kx6qci7yy";
       description = "Create values which expire after a period of time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "explain" = callPackage
    ({ mkDerivation, ansi-wl-pprint, haskell-src-exts }:
     mkDerivation {
       pname = "explain";
       version = "0.1.0.1";
       sha256 = "14n8ic5mg2819s9bk4czwfxrkyz96c2lvnksv1hq5vwr579rvjx2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ansi-wl-pprint haskell-src-exts ];
       homepage = "https://github.com/joelteon/explain";
       description = "Show how expressions are parsed";
       license = stdenv.lib.licenses.mit;
     }) {};

  "explicit-determinant" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "explicit-determinant";
       version = "0.1.0.0";
       sha256 = "0g20kblzvhx53mi82frpx29x0nsfjrzsanqq8f6yw22lh47pbm4y";
       homepage = "https://github.com/jwaldmann/haskell-explicit-determinant";
       description = "explicit computation of determinant of small matrices";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "explicit-exception" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "explicit-exception";
       version = "0.1.7.3";
       sha256 = "0f1p1llz6z4ag1wnf57mgm861cbw7va0g0m8klp6f6pnirdhlwz1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Exception";
       description = "Exceptions which are explicit in the type signature";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "explicit-iomodes" = callPackage
    ({ mkDerivation, base-unicode-symbols, tagged }:
     mkDerivation {
       pname = "explicit-iomodes";
       version = "0.6.0.5";
       sha256 = "0irz1zy6iaipym73x343zvr6cqym6ci2vbjbyr564d29ymd6ldzd";
       buildDepends = [ base-unicode-symbols tagged ];
       homepage = "https://github.com/basvandijk/explicit-iomodes/";
       description = "File handles with explicit IOModes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "explicit-iomodes-bytestring" = callPackage
    ({ mkDerivation, explicit-iomodes }:
     mkDerivation {
       pname = "explicit-iomodes-bytestring";
       version = "0.2.0.2";
       sha256 = "0h3dlgkd2gx8zr3sh949nhqgrdg943dgpp4v1n599jjjpqpw16hj";
       buildDepends = [ explicit-iomodes ];
       homepage = "https://github.com/basvandijk/explicit-iomodes-bytestring/";
       description = "Extends explicit-iomodes with ByteString operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "explicit-iomodes-text" = callPackage
    ({ mkDerivation, explicit-iomodes, text }:
     mkDerivation {
       pname = "explicit-iomodes-text";
       version = "0.1.0.8";
       sha256 = "12ny5wa1j1wp8fbg5k8zkv4a3axmssxcvfvhg3frsm4dych6hmyg";
       buildDepends = [ explicit-iomodes text ];
       homepage = "https://github.com/basvandijk/explicit-iomodes-text/";
       description = "Extends explicit-iomodes with Text operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "explicit-sharing" = callPackage
    ({ mkDerivation, derive, mtl }:
     mkDerivation {
       pname = "explicit-sharing";
       version = "0.9";
       sha256 = "0jshv56i60mzlfddvfkcx0j7rzqdlhy6h09bmqci15wzisvpvjpq";
       buildDepends = [ derive mtl ];
       homepage = "http://sebfisch.github.com/explicit-sharing";
       description = "Explicit Sharing of Monadic Effects";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "explore" = callPackage
    ({ mkDerivation, pngload }:
     mkDerivation {
       pname = "explore";
       version = "0.0.7.2";
       sha256 = "18x2gw9w2jzisyl2hsp2rlml6slnlbjpqbadqcbcm8pamnl7w1fc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ pngload ];
       homepage = "http://corsis.sourceforge.net/haskell/explore";
       description = "Experimental Plot data Reconstructor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "exposed-containers" = callPackage
    ({ mkDerivation, ChasingBottoms, deepseq, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "exposed-containers";
       version = "0.5.5.1";
       sha256 = "09ck4hadxgdlqpgxr45jxr261mzkzihmwd5b02xi05z8034bhqk7";
       editedCabalFile = "0p36wbk8rmx6kqh5g2nfw26a8fsc8da3039ahy5l7kl8fa56yl95";
       buildDepends = [ deepseq ];
       testDepends = [
         ChasingBottoms deepseq HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "A distribution of the 'containers' package, with all modules exposed";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "expression-parser" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "expression-parser";
       version = "0.1";
       sha256 = "1ldp1f2c823byx4ag8jpmq9bhw26lq98fz7ljqslffs37pc098qs";
       description = "Generalization of parsec's expression parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "extcore" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, syb }:
     mkDerivation {
       pname = "extcore";
       version = "1.0.2";
       sha256 = "1dpn4dbbn5d3zqrhxkg8nvb97vp9pf61gwa46yf218nvwgqvx437";
       buildDepends = [ filepath mtl parsec syb ];
       description = "Libraries for processing GHC Core";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "extemp" = callPackage
    ({ mkDerivation, feed, happstack-auth, happstack-server
     , happstack-state, happstack-util, HTTP, MaybeT, monad-parallel
     , mtl, network, regex-tdfa, smartGroup, stringsearch, time, xhtml
     , xml
     }:
     mkDerivation {
       pname = "extemp";
       version = "0.0.1";
       sha256 = "1vbazvs1ij4qfhzf38f7z75lx4mdxnkvcb79ngqc3h67844s90xy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         feed happstack-auth happstack-server happstack-state happstack-util
         HTTP MaybeT monad-parallel mtl network regex-tdfa smartGroup
         stringsearch time xhtml xml
       ];
       homepage = "http://patch-tag.com/r/salazar/extemp";
       description = "automated printing for extemp speakers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "extended-categories" = callPackage
    ({ mkDerivation, constraints, tagged }:
     mkDerivation {
       pname = "extended-categories";
       version = "0.2.0";
       sha256 = "1dg9zvqszlg5v3mygazzgm84qlkcmpryv3vv4x3zwrzi1g0idq72";
       buildDepends = [ constraints tagged ];
       homepage = "github.com/ian-mi/extended-categories";
       description = "Extended Categories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "extended-reals" = callPackage
    ({ mkDerivation, deepseq, hashable, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , test-framework-th
     }:
     mkDerivation {
       pname = "extended-reals";
       version = "0.1.0.0";
       sha256 = "05v45adkjpjirhlilapsi447jkmhjr8x93znjyhkg5v782dvjh5c";
       buildDepends = [ deepseq hashable ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th
       ];
       homepage = "https://github.com/msakai/extended-reals/";
       description = "Extension of real numbers with positive/negative infinities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "extensible-data" = callPackage
    ({ mkDerivation, data-lens, hashable, unordered-containers }:
     mkDerivation {
       pname = "extensible-data";
       version = "0.1.0.4";
       sha256 = "143cl3w129mkvs410lx63v3x1dq2az8sk0hlcymaavnqik5maa6g";
       buildDepends = [ data-lens hashable unordered-containers ];
       description = "Sums/products/lists/trees which can be extended in other modules";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "extensible-effects" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     , transformers-base, type-aligned, void
     }:
     mkDerivation {
       pname = "extensible-effects";
       version = "1.9.0.1";
       sha256 = "17hl4x4052jfn7xs6xhnc6d3x75a8haw2zsbnjd6rr5gsd1hq5kx";
       buildDepends = [
         transformers transformers-base type-aligned void
       ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 void
       ];
       homepage = "https://github.com/RobotGymnast/extensible-effects";
       description = "An Alternative to Monad Transformers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "extensible-exceptions" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "extensible-exceptions";
       version = "0.1.1.4";
       sha256 = "1273nqws9ij1rp1bsq5jc7k2jxpqa0svawdbim05lf302y0firbc";
       description = "Extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "external-sort" = callPackage
    ({ mkDerivation, binary, EdisonAPI, EdisonCore }:
     mkDerivation {
       pname = "external-sort";
       version = "0.2";
       sha256 = "1i7q3wh2c4fyv6wn4smws8r382hnnppj39xys43h9pkqfis786r9";
       buildDepends = [ binary EdisonAPI EdisonCore ];
       description = "Sort large arrays on your hard drive. Kind of like the unix util sort.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "extra" = callPackage
    ({ mkDerivation, filepath, QuickCheck, time }:
     mkDerivation {
       pname = "extra";
       version = "1.0";
       sha256 = "0ainwq8f2mp1wc30srl971xy4qnrcyrcyig1kmrxx951hgav1dkb";
       buildDepends = [ filepath time ];
       testDepends = [ filepath QuickCheck time ];
       homepage = "https://github.com/ndmitchell/extra#readme";
       description = "Extra functions I use";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "extractelf" = callPackage
    ({ mkDerivation, bytestring-mmap, elf, filepath
     , optparse-applicative
     }:
     mkDerivation {
       pname = "extractelf";
       version = "0.1.0.0";
       sha256 = "13wbzqw0iz7xkqdrwan9xxl8vwqvhvwzlypps964v1s1bgabmpqj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bytestring-mmap elf filepath optparse-applicative
       ];
       homepage = "https://github.com/Peaker/extractelf";
       description = "Extract an ELF's metadata and sections into files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ez-couch" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-conduit
     , blaze-builder, classy-prelude, classy-prelude-conduit, hashable
     , hslogger, http-conduit, http-types, mtl, neat-interpolation
     , random, resourcet, string-conversions, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "ez-couch";
       version = "0.7.0";
       sha256 = "023wrrk7slrg8p547saspfvp771zqwdh7mnvwg1sag4a2j20b660";
       buildDepends = [
         aeson attoparsec attoparsec-conduit blaze-builder classy-prelude
         classy-prelude-conduit hashable hslogger http-conduit http-types
         mtl neat-interpolation random resourcet string-conversions text
         time unordered-containers vector
       ];
       homepage = "https://github.com/nikita-volkov/ez-couch";
       description = "A high level static library for working with CouchDB";
       license = stdenv.lib.licenses.mit;
     }) {};

  "faceted" = callPackage
    ({ mkDerivation, free }:
     mkDerivation {
       pname = "faceted";
       version = "0.0.2.0";
       sha256 = "0apgad2rqpgxypm10n98agmfrlxydcawvsvyafdwj8jhynfycx03";
       buildDepends = [ free ];
       homepage = "http://github.com/haskell-faceted/haskell-faceted";
       description = "Faceted computation for dynamic information flow security";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "factory" = callPackage
    ({ mkDerivation, Cabal, deepseq, parallel, primes, QuickCheck
     , random, toolshed
     }:
     mkDerivation {
       pname = "factory";
       version = "0.2.1.0";
       sha256 = "1sxk8pv2r2a9d457ikxcz71z06sxajsjvw4647jw1s3y10fn6hvb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal deepseq parallel primes QuickCheck random toolshed
       ];
       homepage = "http://functionalley.eu";
       description = "Rational arithmetic in an irrational world";
       license = "GPL";
     }) {};

  "factual-api" = callPackage
    ({ mkDerivation, aeson, attoparsec, curl, dataenc, hoauth, HTTP
     , MissingH, text, unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "factual-api";
       version = "0.6.1";
       sha256 = "1njijf5l277qndp5xmyqji0fcd84zxnn9vhz5v8nlqp3pfcilidp";
       buildDepends = [
         aeson attoparsec curl dataenc hoauth HTTP MissingH text
         unordered-containers utf8-string vector
       ];
       homepage = "https://github.com/rudyl313/factual-haskell-driver";
       description = "A driver for the Factual API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fad" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fad";
       version = "1.1.0.1";
       sha256 = "00n5m3fa14y882rnzw7pwc154bgp46rhvvj2cghldvybxmj61zgm";
       homepage = "http://github.com/bjornbm/fad";
       description = "Forward Automatic Differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "failable-list" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "failable-list";
       version = "0.2";
       sha256 = "0bq0q9n4wnacjqs517i12kl56m16n5ff4gk8kamh87gqkd58w06x";
       description = "A list-like type for lazy streams, which might terminate with an error";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "failure" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "failure";
       version = "0.2.0.3";
       sha256 = "0jimc2x46zq7wnmzfbnqi67jl8yhbvr0fa65ljlc9p3fns9mca3p";
       buildDepends = [ transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Failure";
       description = "A simple type class for success/failure computations. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fair-predicates" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fair-predicates";
       version = "0.1.1";
       sha256 = "1z0c83gfmvwhzsj2iz422mxcyxc8jnic25i1vz6yp4xzv41ibmj6";
       homepage = "http://sebfisch.github.com/fair-predicates";
       description = "Fair Predicates";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "falling-turnip" = callPackage
    ({ mkDerivation, gloss, gloss-raster, JuicyPixels-repa, QuickCheck
     , random, repa, repa-algorithms, vector
     }:
     mkDerivation {
       pname = "falling-turnip";
       version = "0.1.0.0";
       sha256 = "035rjjjvwbjw4z6nlmiyxia5y91yiiw7902f9q6n5jimi5xk2hgk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         gloss gloss-raster JuicyPixels-repa QuickCheck random repa
         repa-algorithms vector
       ];
       homepage = "http://github.com/tranma/falling-turnip";
       description = "Falling sand game/cellular automata simulation using regular parallel arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fallingblocks" = callPackage
    ({ mkDerivation, SDL, SDL-mixer, SDL-ttf }:
     mkDerivation {
       pname = "fallingblocks";
       version = "0.1.4";
       sha256 = "18h5d33hd4cs6dc508mzl7c46pxwrk2q0daabvg8m4fiwk5wzlr0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ SDL SDL-mixer SDL-ttf ];
       homepage = "http://bencode.blogspot.com/2009/03/falling-blocks-tetris-clone-in-haskell.html";
       description = "A fun falling blocks game";
       license = "GPL";
     }) {};

  "family-tree" = callPackage
    ({ mkDerivation, binary, hashable, intervals, lens, tables, text
     , time, unordered-containers
     }:
     mkDerivation {
       pname = "family-tree";
       version = "0.5";
       sha256 = "1bjg231g1rfzzqki3by85vs3ay4iy3mdg6v22kd8b4p9h4q1nmnj";
       buildDepends = [
         binary hashable intervals lens tables text time
         unordered-containers
       ];
       homepage = "https://github.com/Taneb/family-tree";
       description = "A family tree library for the Haskell programming language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fast-logger" = callPackage
    ({ mkDerivation, auto-update, blaze-builder, filepath, hspec, text
     }:
     mkDerivation {
       pname = "fast-logger";
       version = "2.2.3";
       sha256 = "0zap61gz0snbq42h8nyjh637fr2cm1ny9f77sqd6v3yfqjq0ljh3";
       buildDepends = [ auto-update blaze-builder filepath text ];
       testDepends = [ hspec ];
       description = "A fast logging system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fast-math" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fast-math";
       version = "1.0.1";
       sha256 = "1a36mvrdr8gai4sn1s52fyc8alcl6ks6dlmr77df5dgvc2z74hhb";
       description = "Non IEEE-754 compliant compile-time floating-point optimisations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fast-tags" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "fast-tags";
       version = "0.0.6";
       sha256 = "0kjj01xpdz5yzdxxagwzv2w7vma43qs71ffxbbrh1wilk7k1ma32";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ text ];
       testDepends = [ text ];
       homepage = "https://github.com/elaforge/fast-tags";
       description = "Fast incremental vi tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fast-tagsoup" = callPackage
    ({ mkDerivation, tagsoup, text, text-icu }:
     mkDerivation {
       pname = "fast-tagsoup";
       version = "1.0.6";
       sha256 = "0d1h57flg9iq4psfpwcqq91giljqcjz9lhd7nhdrk08pzdla09iq";
       buildDepends = [ tagsoup text text-icu ];
       homepage = "https://github.com/vshabanov/fast-tagsoup";
       description = "Fast parser for tagsoup package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fast-tagsoup-utf8-only" = callPackage
    ({ mkDerivation, tagsoup, text }:
     mkDerivation {
       pname = "fast-tagsoup-utf8-only";
       version = "1.0.5";
       sha256 = "10svhgjvp1802jawr1s5chkincl2xhh6k0grm60f216jpasbvff4";
       buildDepends = [ tagsoup text ];
       homepage = "https://github.com/exbb2/fast-tagsoup";
       description = "Fast parser for tagsoup package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fasta" = callPackage
    ({ mkDerivation, parsec, split, text }:
     mkDerivation {
       pname = "fasta";
       version = "0.5.1.3";
       sha256 = "1p5a98riv7wjkd0mdinqfm3qmhx6q4dbibdhpp9a4r4zm4ccwpfb";
       buildDepends = [ parsec split text ];
       homepage = "https://github.com/GregorySchwartz/fasta";
       description = "A simple, mindless parser for fasta files";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "fastbayes" = callPackage
    ({ mkDerivation, hmatrix, vector }:
     mkDerivation {
       pname = "fastbayes";
       version = "0.2.0.0";
       sha256 = "1nqrfrhw8gd3blfzrwbf7pm4wwqbxfaw640bzx62kwh7x2h6v3cm";
       buildDepends = [ hmatrix vector ];
       homepage = "https://github.com/cscherrer/fastbayes";
       description = "Bayesian modeling algorithms accelerated for particular model structures";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fastcgi" = callPackage
    ({ mkDerivation, cgi, fcgi }:
     mkDerivation {
       pname = "fastcgi";
       version = "3001.0.2.4";
       sha256 = "0lp17w098043xczwkah7h1x47wzrym7vv5adgla0aq9iybqay7xr";
       editedCabalFile = "12p963nf6375sh1k7dd1m9l0nzq4xwsc099gh1qj2jch59lqgkbl";
       buildDepends = [ cgi ];
       extraLibraries = [ fcgi ];
       description = "A Haskell library for writing FastCGI programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fastirc" = callPackage
    ({ mkDerivation, attoparsec, bytestring-show, monadLib
     , network-fancy
     }:
     mkDerivation {
       pname = "fastirc";
       version = "0.2.0";
       sha256 = "0ddacpw19kh304j8js9ybwclkgyh8n5yy1r2xh48z9h3gas2zim4";
       buildDepends = [
         attoparsec bytestring-show monadLib network-fancy
       ];
       description = "Fast Internet Relay Chat (IRC) library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fault-tree" = callPackage
    ({ mkDerivation, yices }:
     mkDerivation {
       pname = "fault-tree";
       version = "0.0.0";
       sha256 = "04m6hfj0sqhmq89fwfq4igz1rc0p3rzkhfg6fzsw5kyda2c8bbz0";
       buildDepends = [ yices ];
       homepage = "http://tomahawkins.org";
       description = "A fault tree analysis library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay" = callPackage
    ({ mkDerivation, aeson, data-default, filepath, ghc-paths
     , haskell-names, haskell-packages, haskell-src-exts
     , language-ecmascript, mtl, optparse-applicative, safe, sourcemap
     , split, spoon, syb, text, time, transformers, uniplate
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "fay";
       version = "0.21.2.1";
       sha256 = "06ijfkm1x5a15hac9f4cs4f16rva2hkf07xfh0mm9q3wkamqxlfm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson data-default filepath ghc-paths haskell-names
         haskell-packages haskell-src-exts language-ecmascript mtl
         optparse-applicative safe sourcemap split spoon syb text time
         transformers uniplate unordered-containers utf8-string vector
       ];
       homepage = "https://github.com/faylang/fay/wiki";
       description = "A compiler for Fay, a Haskell subset that compiles to JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay-base" = callPackage
    ({ mkDerivation, fay }:
     mkDerivation {
       pname = "fay-base";
       version = "0.19.4.1";
       sha256 = "1pk1jjwyh2n9fg583v4cd0ll5qglphwnfm08q95klcvc61p4wqg6";
       buildDepends = [ fay ];
       homepage = "https://github.com/faylang/fay/";
       description = "The base package for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay-builder" = callPackage
    ({ mkDerivation, Cabal, data-default, fay, filepath, safe, split
     , text
     }:
     mkDerivation {
       pname = "fay-builder";
       version = "0.2.0.1";
       sha256 = "1p8mg6g20jsnvkf3fl02wf757nw23hccwx2br9k8w4z60p9mvw6b";
       buildDepends = [ Cabal data-default fay filepath safe split text ];
       description = "Compile Fay code on cabal install, and ad-hoc recompile during development";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay-dom" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-dom";
       version = "0.5";
       sha256 = "1r8kl6wbrl516qc29zs93png922p7zzg2lagvkcf2cb506qg1mr1";
       buildDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-dom";
       description = "DOM FFI wrapper library for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay-hsx" = callPackage
    ({ mkDerivation, fay-base, fay-jquery }:
     mkDerivation {
       pname = "fay-hsx";
       version = "0.2.0";
       sha256 = "1mzjna8yc7jczgggpcgh9i6akiy72d60jczvmzxngh778z3g5zmi";
       buildDepends = [ fay-base fay-jquery ];
       homepage = "http://www.happstack.com/";
       description = "Clientside HTML generation for fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay-jquery" = callPackage
    ({ mkDerivation, fay-base, fay-text }:
     mkDerivation {
       pname = "fay-jquery";
       version = "0.6.0.2";
       sha256 = "1gif4sd0qvb1jkl4j2iv0gqyyrkz9brfwcj9vv9sldqx0lmxkvpm";
       buildDepends = [ fay-base fay-text ];
       homepage = "https://github.com/faylang/fay-jquery";
       description = "jQuery bindings for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay-ref" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-ref";
       version = "0.1.0.0";
       sha256 = "1dcifraih13zqwmm4xn57wfg63rdkiac81avyymid308r6p1x9cn";
       buildDepends = [ fay-base ];
       homepage = "https://github.com/A1kmm/fay-ref";
       description = "Like IORef but for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fay-text" = callPackage
    ({ mkDerivation, fay, fay-base, text }:
     mkDerivation {
       pname = "fay-text";
       version = "0.3.2";
       sha256 = "1yjsn188ixpfqdr75xyl57rbv53dybik4g28h6p3jv73q494552m";
       buildDepends = [ fay fay-base text ];
       homepage = "https://github.com/faylang/fay-text";
       description = "Fay Text type represented as JavaScript strings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fay-uri" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-uri";
       version = "0.2.0.0";
       sha256 = "1vv4jgkz9cx8inbn6g6sn3a0nf1ak81qlj5li21sk2isj0yws1nr";
       buildDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-uri";
       description = "Persistent FFI bindings for using jsUri in Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fb" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring
     , base64-bytestring, cereal, conduit, conduit-extra, crypto-api
     , cryptohash, cryptohash-cryptoapi, data-default, hspec
     , http-conduit, http-types, HUnit, lifted-base, monad-control
     , monad-logger, QuickCheck, resourcet, text, time, transformers
     , transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "fb";
       version = "1.0.7";
       sha256 = "0ghyddxf4aqidqvbm93pjgaban0whfj4y1w11b7nxy89srhyjhh8";
       buildDepends = [
         aeson attoparsec base16-bytestring base64-bytestring cereal conduit
         conduit-extra crypto-api cryptohash cryptohash-cryptoapi
         data-default http-conduit http-types lifted-base monad-control
         monad-logger resourcet text time transformers transformers-base
         unordered-containers
       ];
       testDepends = [
         aeson conduit data-default hspec http-conduit HUnit lifted-base
         monad-control QuickCheck resourcet text time transformers
       ];
       homepage = "https://github.com/prowdsponsor/fb";
       description = "Bindings to Facebook's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fb-persistent" = callPackage
    ({ mkDerivation, cereal, fb, persistent, text, time }:
     mkDerivation {
       pname = "fb-persistent";
       version = "0.3.4";
       sha256 = "07hrifzwvv7fzqh70igfbxzn854yvyx7406s8byn0arhmp21ka3b";
       buildDepends = [ cereal fb persistent text time ];
       homepage = "https://github.com/prowdsponsor/fb-persistent";
       description = "Provides Persistent instances to Facebook types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fca" = callPackage
    ({ mkDerivation, cryptohash, hashable, text, unordered-containers
     }:
     mkDerivation {
       pname = "fca";
       version = "0.1.0.2";
       sha256 = "1c38524r3mhy4m7s1cvfcn539xvf50x0z8a9fzk4x4pz5yq9c1vp";
       buildDepends = [ cryptohash hashable text unordered-containers ];
       description = "Algo for Formal Concept Analysis";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "fcd" = callPackage
    ({ mkDerivation, tasty, tasty-hunit, text, vty, vty-ui }:
     mkDerivation {
       pname = "fcd";
       version = "1.0.0.0";
       sha256 = "1z3vphn3vgvsq0mshhvsks03v79wnj9g6r8mmrwkiax126aqzqn6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ text vty vty-ui ];
       testDepends = [ tasty tasty-hunit ];
       homepage = "https://github.com/Neki/fcd";
       description = "A faster way to navigate directories using the command line";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fckeditor" = callPackage
    ({ mkDerivation, cgi, HaXml, xhtml }:
     mkDerivation {
       pname = "fckeditor";
       version = "0.1";
       sha256 = "1yvsnk9awik143jh2268w1l5x70kmky60gac10fy2y1450dcn65x";
       buildDepends = [ cgi HaXml xhtml ];
       homepage = "http://peteg.org/";
       description = "Server-Side Integration for FCKeditor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fclabels" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "fclabels";
       version = "2.0.2";
       sha256 = "108ad6l8ibz44n000hlywqpqslsz1czmsal7qvbd53chmmm4xgdp";
       buildDepends = [ mtl transformers ];
       homepage = "https://github.com/sebastiaanvisser/fclabels";
       description = "First class accessor labels implemented as lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fclabels-monadlib" = callPackage
    ({ mkDerivation, fclabels, monadLib }:
     mkDerivation {
       pname = "fclabels-monadlib";
       version = "0.2.1";
       sha256 = "1j15fxrpwnjnbjkswsy6jxn8f0bj2nhcdsf5976i7rka7gsjzr3d";
       buildDepends = [ fclabels monadLib ];
       description = "MonadLib monadic interface for the \"fclabels\" package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fdo-notify" = callPackage
    ({ mkDerivation, dbus }:
     mkDerivation {
       pname = "fdo-notify";
       version = "0.3.1";
       sha256 = "1n4zk1i7g34w0wk5zy8n4r63xbglxf62h8j78kv5fc2yn95l30vh";
       buildDepends = [ dbus ];
       homepage = "http://bitbucket.org/taejo/fdo-notify/";
       description = "Desktop Notifications client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fdo-trash" = callPackage
    ({ mkDerivation, Diff, filepath, parsec, time, url }:
     mkDerivation {
       pname = "fdo-trash";
       version = "0.0.0.2";
       sha256 = "04y29wmndyvrlrixj57m7jgx3z8qld0nvlggmg0rvia4p2dv82bk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Diff filepath parsec time url ];
       homepage = "https://github.com/jkarlson/fdo-trash";
       description = "Utilities related to freedesktop Trash standard";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "feature-flags" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "feature-flags";
       version = "0.1.0.0";
       sha256 = "1xkmzpdc7920vjkz3v77ds1wf2c896rkxykdd36my6aw85qg9pa6";
       buildDepends = [ text ];
       homepage = "https://github.com/iand675/feature-flags";
       description = "A simple library for dynamically enabling and disabling functionality";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fec" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fec";
       version = "0.1.1";
       sha256 = "04ryd1c06l45af6627vjvprhs0rk1rwl0k9gq0byr95ghvc6mk6d";
       homepage = "http://allmydata.org/source/zfec";
       description = "Forward error correction of ByteStrings";
       license = "GPL";
     }) {};

  "fedora-packages" = callPackage
    ({ mkDerivation, aeson, hlint, HsOpenSSL, hspec, http-streams
     , io-streams, lens, text
     }:
     mkDerivation {
       pname = "fedora-packages";
       version = "0.0.3";
       sha256 = "14fpv76ndp755mysgbya2hgr35rg2hb6dsagmrq2j2mn06xmngqk";
       editedCabalFile = "0fnkx2k6iii86g6k1kvg9acpnp0cc7hjd1mvky67yllidmz8b7dh";
       buildDepends = [
         aeson HsOpenSSL http-streams io-streams lens text
       ];
       testDepends = [
         aeson hlint HsOpenSSL hspec http-streams io-streams lens text
       ];
       homepage = "https://github.com/relrod/fedora-packages-hs";
       description = "Haskell interface to the Fedora Packages webapp API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "feed" = callPackage
    ({ mkDerivation, time, utf8-string, xml }:
     mkDerivation {
       pname = "feed";
       version = "0.3.9.2";
       sha256 = "05sg2ly1pvni3sfv03rbf60vdjkrfa0f9mmc1dm1hrmp638j67gg";
       buildDepends = [ time utf8-string xml ];
       homepage = "https://github.com/sof/feed";
       description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "feed-cli" = callPackage
    ({ mkDerivation, feed, time, xml }:
     mkDerivation {
       pname = "feed-cli";
       version = "2009.7.5";
       sha256 = "0gql641jmbldx6vhk37i2v41j2nq22lrihm48f97wirrxw7yjn61";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ feed time xml ];
       homepage = "http://www.syntaxpolice.org/darcs_repos/feed-cli";
       description = "A simple command line interface for creating and updating feeds like RSS";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "feed2lj" = callPackage
    ({ mkDerivation, curl, feed, HTTP, pureMD5, regex-posix, tagsoup
     , time, utf8-string
     }:
     mkDerivation {
       pname = "feed2lj";
       version = "0.0.3.1";
       sha256 = "0ym4f6d8fxl6j9kfqmp3ds36qj35nypxjmmqv6w96yz5y8ia3ynv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         curl feed HTTP pureMD5 regex-posix tagsoup time utf8-string
       ];
       description = "(unsupported)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "feed2twitter" = callPackage
    ({ mkDerivation, download-curl, feed, hs-twitter }:
     mkDerivation {
       pname = "feed2twitter";
       version = "0.2.0";
       sha256 = "1zhl7f5zlyv0l5h0zay66p532n1vywnirwxbc1c9fjaia7yv0rij";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ download-curl feed hs-twitter ];
       homepage = "http://github.com/tomlokhorst/feed2twitter";
       description = "Send posts from a feed to Twitter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "feldspar-compiler" = callPackage
    ({ mkDerivation, Cabal, data-default, feldspar-language, filepath
     , gcc_s, ghc-paths, mtl, plugins, plugins-multistage, QuickCheck
     , storable-record, storable-tuple, syntactic, tasty, tasty-golden
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "feldspar-compiler";
       version = "0.7";
       sha256 = "0kkxjnbx4yn3k2s1gdxg4jj06fhdd2jprq8s4zyaybs8xcddgvhh";
       buildDepends = [
         Cabal data-default feldspar-language filepath ghc-paths mtl plugins
         plugins-multistage storable-record storable-tuple syntactic
       ];
       testDepends = [
         Cabal feldspar-language mtl QuickCheck tasty tasty-golden
         tasty-quickcheck
       ];
       extraLibraries = [ gcc_s ];
       homepage = "http://feldspar.github.com";
       description = "Compiler for the Feldspar language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "feldspar-language" = callPackage
    ({ mkDerivation, data-default, data-hash, data-lens, deepseq
     , monad-par, mtl, patch-combinators, QuickCheck, random, syntactic
     , tagged, tasty, tasty-golden, tasty-quickcheck, tasty-th, tuple
     , utf8-string
     }:
     mkDerivation {
       pname = "feldspar-language";
       version = "0.7";
       sha256 = "0gzs2qdvpzcx4w89wpmwk2jnambvyl08afpk16989vcviq5ri51n";
       buildDepends = [
         data-default data-hash data-lens deepseq monad-par mtl
         patch-combinators QuickCheck random syntactic tagged tuple
       ];
       testDepends = [
         QuickCheck random tasty tasty-golden tasty-quickcheck tasty-th
         utf8-string
       ];
       homepage = "http://feldspar.github.com";
       description = "A functional embedded language for DSP and parallelism";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fences" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fences";
       version = "0.1.1";
       sha256 = "16qzqczr6nlbng16vby1c12a0apfjm4lmm0pgybi5xaziaq4c4db";
       description = "To be written";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "fenfire" = callPackage
    ({ mkDerivation, cairo, gtk, harp, HaXml, mtl, raptor }:
     mkDerivation {
       pname = "fenfire";
       version = "0.1";
       sha256 = "0sq4g0sdayk1lqzdhggwshl22gny5cjbv70cmr1p27q0wfwfbfff";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo gtk harp HaXml mtl ];
       extraLibraries = [ raptor ];
       homepage = "http://fenfire.org/";
       description = "Graph-based notetaking system";
       license = "GPL";
     }) {};

  "fez-conf" = callPackage
    ({ mkDerivation, regex-compat }:
     mkDerivation {
       pname = "fez-conf";
       version = "1.0.1";
       sha256 = "180vflhr18kj5vgsy715wrrb0cx9l89xw2g6y2ga4gg6hc71khzl";
       buildDepends = [ regex-compat ];
       homepage = "http://ui3.info/d/proj/fez-conf.html";
       description = "Simple functions for loading config files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ffeed" = callPackage
    ({ mkDerivation, HTTP, json, network, utf8-string }:
     mkDerivation {
       pname = "ffeed";
       version = "0.3.2";
       sha256 = "1976v5m050lwp8v2vh1cm08pn6q9lbdkxhq10pql6fyzysn6qz62";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HTTP json network utf8-string ];
       description = "Haskell binding to the FriendFeed API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fficxx" = callPackage
    ({ mkDerivation, Cabal, either, errors, filepath, hashable
     , HStringTemplate, lens, mtl, pureMD5, split, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "fficxx";
       version = "0.2";
       sha256 = "0512v9xhli6qdz46gvn8lj15rp30919pf982fjcgklw22qmci69q";
       buildDepends = [
         Cabal either errors filepath hashable HStringTemplate lens mtl
         pureMD5 split transformers unordered-containers
       ];
       description = "automatic C++ binding generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fficxx-runtime" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fficxx-runtime";
       version = "0.2";
       sha256 = "0czh7in30369c8c4ls3m3r61w6zb1p0p0jy2yi5j9521f61q588a";
       description = "Runtime for fficxx-generated library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ffmpeg-light" = callPackage
    ({ mkDerivation, JuicyPixels, libavcodec, libavformat, libavutil
     , libswscale, mtl, transformers, vector
     }:
     mkDerivation {
       pname = "ffmpeg-light";
       version = "0.8.1";
       sha256 = "08hydkqpk72s5bnc7h133jdz0x5msbxf7r1149hb2pqaqffid569";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ JuicyPixels mtl transformers vector ];
       pkgconfigDepends = [ libavcodec libavformat libavutil libswscale ];
       description = "Minimal bindings to the FFmpeg library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ffmpeg-tutorials" = callPackage
    ({ mkDerivation, hs-ffmpeg, SDL, stm }:
     mkDerivation {
       pname = "ffmpeg-tutorials";
       version = "0.3.3";
       sha256 = "134czpbzxw0mpnc5mz6j1l6vavdbhw5w3l4lg5zbc2gq1qg9ikqv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hs-ffmpeg SDL stm ];
       homepage = "http://patch-tag.com/r/VasylPasternak/ffmpeg-tutorials";
       description = "Tutorials on ffmpeg usage to play video/audio";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fft" = callPackage
    ({ mkDerivation, carray, fftw3, ix-shapable, QuickCheck
     , storable-complex, syb
     }:
     mkDerivation {
       pname = "fft";
       version = "0.1.7.3";
       sha256 = "0zfs1p1lfa83qqrlma4hnwf3j934f7hml5r0dxa3zf3cqmkgqln4";
       buildDepends = [ carray ix-shapable storable-complex syb ];
       testDepends = [ carray QuickCheck storable-complex ];
       pkgconfigDepends = [ fftw3 ];
       description = "Bindings to the FFTW library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fgl" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "fgl";
       version = "5.5.0.1";
       sha256 = "0qw70f5hfrxmrx49wx8vk2f5cam7jbpb20mp4i0ybcwdld5ncqda";
       buildDepends = [ mtl ];
       homepage = "http://web.engr.oregonstate.edu/~erwig/fgl/haskell";
       description = "Martin Erwig's Functional Graph Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fgl-extras-decompositions" = callPackage
    ({ mkDerivation, fgl }:
     mkDerivation {
       pname = "fgl-extras-decompositions";
       version = "0.1.0.0";
       sha256 = "0mx0axc88yb992zb9ymaipsrln42rj49558ir9753j19d38v2q8m";
       buildDepends = [ fgl ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "Graph decomposition algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fgl-visualize" = callPackage
    ({ mkDerivation, dotgen, fgl }:
     mkDerivation {
       pname = "fgl-visualize";
       version = "0.1.0.1";
       sha256 = "0vwafx0rggksg5i7cx4r2bs5wa6csb5p39vpix425zr3l6vggrxq";
       buildDepends = [ dotgen fgl ];
       description = "Convert FGL graphs to dot (graphviz) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fibon" = callPackage
    ({ mkDerivation, attoparsec, bytestring-lexing, Cabal, cereal
     , filepath, hslogger, mtl, regex-compat, statistics, syb, tabular
     , time, vector
     }:
     mkDerivation {
       pname = "fibon";
       version = "0.2.0";
       sha256 = "1jkawf65gdmyzmdw4xfk3jihahi3x7vsavjfy6rnl96bj15q4vzl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec bytestring-lexing Cabal cereal filepath hslogger mtl
         regex-compat statistics syb tabular time vector
       ];
       homepage = "http://github.com/dmpots/fibon/wiki";
       description = "Tools for running and analyzing Haskell benchmarks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fibonacci" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fibonacci";
       version = "0.2.0.1";
       sha256 = "18jqb4ynjsnpvydzpqzh7l5wyrjb3s3kxgc6a6ipwb6w2hygyf7k";
       homepage = "http://github.com/sebfisch/fibonacci";
       description = "Fast computation of Fibonacci numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fields" = callPackage
    ({ mkDerivation, fclabels, monads-fd, transformers }:
     mkDerivation {
       pname = "fields";
       version = "0.1.0";
       sha256 = "0xxri0a3y75ppywcm6py9zbffaawcycrv8gabflbl1m1z8n6jq6v";
       buildDepends = [ fclabels monads-fd transformers ];
       homepage = "http://github.com/AstraFIN/fields";
       description = "First-class record field combinators with infix record field syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fields-json" = callPackage
    ({ mkDerivation, base64-bytestring, json, mtl, utf8-string }:
     mkDerivation {
       pname = "fields-json";
       version = "0.2.2.3";
       sha256 = "0wqci95ad339nd3lfbhc6v55c7zdkq714hw8igq5fwvbd8kq11d0";
       buildDepends = [ base64-bytestring json mtl utf8-string ];
       description = "Abusing monadic syntax JSON objects generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fieldwise" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fieldwise";
       version = "0.1.0.0";
       sha256 = "1mmlw5nk09w829gjp8lc0p280vdkh68rv05b1j55x99l7xywgvj7";
       description = "Provides Fieldwise typeclass for operations of fields of records treated as independent components";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "fig" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "fig";
       version = "1.4.0";
       sha256 = "03bxiicvfwia5g0whg454ph2s34n8firjcqhn6d7qvbim338hkxq";
       buildDepends = [ parsec ];
       homepage = "http://www.bergsoe.org/fig";
       description = "Manipulation of FIG files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "file-command-qq" = callPackage
    ({ mkDerivation, parsec, system-filepath, text }:
     mkDerivation {
       pname = "file-command-qq";
       version = "0.1.0.4";
       sha256 = "1yq1bc738nfhdrnd2ll1v1wji9gyma4nday2q2rz5lvh5jfdfaks";
       buildDepends = [ parsec system-filepath text ];
       homepage = "https://github.com/jfischoff/file-command-qq";
       description = "Quasiquoter for system commands involving filepaths";
       license = stdenv.lib.licenses.mit;
     }) {};

  "file-embed" = callPackage
    ({ mkDerivation, filepath, HUnit }:
     mkDerivation {
       pname = "file-embed";
       version = "0.0.7";
       sha256 = "0mj8f70f9k78wjzcx59w68szajafmm119rcrsspmxsygglh8ji2g";
       buildDepends = [ filepath ];
       testDepends = [ filepath HUnit ];
       homepage = "https://github.com/snoyberg/file-embed";
       description = "Use Template Haskell to embed file contents directly";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "file-location" = callPackage
    ({ mkDerivation, lifted-base, transformers }:
     mkDerivation {
       pname = "file-location";
       version = "0.4.5.3";
       sha256 = "0d1iqhdac1gcag1d7ch9ia4fm97jpp31m46b794z90bmm6nr29h9";
       buildDepends = [ lifted-base transformers ];
       testDepends = [ lifted-base transformers ];
       homepage = "https://github.com/gregwebs/FileLocation.hs";
       description = "common functions that show file location information";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "filecache" = callPackage
    ({ mkDerivation, hashable, hinotify, lens, mtl, stm
     , strict-base-types, temporary, unordered-containers
     }:
     mkDerivation {
       pname = "filecache";
       version = "0.2.5";
       sha256 = "0yx255yl8v8knhbnzahx2v606y23nmgh5hs65dqcxmhyh53wawda";
       buildDepends = [
         hashable hinotify lens mtl stm strict-base-types
         unordered-containers
       ];
       testDepends = [ temporary unordered-containers ];
       homepage = "http://lpuppet.banquise.net/";
       description = "A Linux-only cache system associating values to files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "filelock" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "filelock";
       version = "0.1.0.1";
       sha256 = "0qypjnbkfayqyaymx8qrq4abddlrlzanf6lqhfn9cqzcgzr6735d";
       homepage = "http://github.com/takano-akio/filelock";
       description = "Portable interface to file locking (flock / LockFileEx)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "filemanip" = callPackage
    ({ mkDerivation, filepath, mtl, unix-compat }:
     mkDerivation {
       pname = "filemanip";
       version = "0.3.6.2";
       sha256 = "03l114rhb4f6nyzs9w14i79d7kyyq9ia542alsqpbmikm9gxm4rz";
       buildDepends = [ filepath mtl unix-compat ];
       homepage = "https://github.com/bos/filemanip";
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "filepath" = callPackage
    ({ mkDerivation, QuickCheck, random }:
     mkDerivation {
       pname = "filepath";
       version = "1.3.0.2";
       sha256 = "0wvvz6cs5fh4f04a87b9s7xrnzypmnzzkn149p6xk8xi7gcvcpy2";
       editedCabalFile = "0q7dwhmpik7a3046wshkjwdhsv1cd628n8m0846x6mkzlfhqnnca";
       testDepends = [ QuickCheck random ];
       homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/";
       description = "Library for manipulating FilePaths in a cross platform way";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "filepath-io-access" = callPackage
    ({ mkDerivation, base-io-access, filepath }:
     mkDerivation {
       pname = "filepath-io-access";
       version = "0.1.0.0";
       sha256 = "08rb2nafnh5vx7i6i3ddhq4h1s2ffgz8ailap5knr1xl7izgyywp";
       buildDepends = [ base-io-access filepath ];
       description = "IO Access for filepath";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "filepather" = callPackage
    ({ mkDerivation, comonad, comonad-transformers, data-lens, filepath
     , mtl, transformers
     }:
     mkDerivation {
       pname = "filepather";
       version = "0.3.0";
       sha256 = "1gqnanmnhrpdw5iryf757qwj7j9izyzx1j4y74ydivxafz8w469v";
       buildDepends = [
         comonad comonad-transformers data-lens filepath mtl transformers
       ];
       homepage = "https://github.com/tonymorris/filepather";
       description = "Functions on System.FilePath";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "filestore" = callPackage
    ({ mkDerivation, Diff, filepath, HUnit, mtl, parsec, split, time
     , utf8-string, xml
     }:
     mkDerivation {
       pname = "filestore";
       version = "0.6.0.4";
       sha256 = "1b3ymdqwcn84m8kkybshx10bfylby49i0yhbassvlgf0n096lp12";
       buildDepends = [ Diff filepath parsec split time utf8-string xml ];
       testDepends = [ Diff filepath HUnit mtl time ];
       description = "Interface for versioning file stores";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "filesystem-conduit" = callPackage
    ({ mkDerivation, blaze-builder, conduit, hspec, QuickCheck
     , system-fileio, system-filepath, text, transformers
     }:
     mkDerivation {
       pname = "filesystem-conduit";
       version = "1.0.0.2";
       sha256 = "05dsl3bgyjciq6sgmba0hki7imilrjq3ddp9ip5gxl9884j1f4a1";
       buildDepends = [
         conduit system-fileio system-filepath text transformers
       ];
       testDepends = [
         blaze-builder conduit hspec QuickCheck text transformers
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Use system-filepath data types with conduits. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "filesystem-enumerator" = callPackage
    ({ mkDerivation, enumerator, system-fileio, system-filepath
     , transformers
     }:
     mkDerivation {
       pname = "filesystem-enumerator";
       version = "0.1.1";
       sha256 = "04cs5kz390g5qanwqps5kx1pd70b9vzaykn4c0yc0kxi16xlxyrc";
       buildDepends = [
         enumerator system-fileio system-filepath transformers
       ];
       homepage = "https://john-millikin.com/software/haskell-filesystem/";
       description = "Enumerator-based API for manipulating the filesystem";
       license = stdenv.lib.licenses.mit;
     }) {};

  "filesystem-trees" = callPackage
    ({ mkDerivation, cond, data-lens, deepseq, dlist, filepath, mtl }:
     mkDerivation {
       pname = "filesystem-trees";
       version = "0.1.0.5";
       sha256 = "0ypdnzv00kgr785z1psqaz306rgkvkn53jnr7qvchx1pqdw2v5cg";
       buildDepends = [ cond data-lens deepseq dlist filepath mtl ];
       homepage = "https://github.com/kallisti-dev/filesystem-trees";
       description = "Recursively manipulate and traverse filesystems as lazy rose trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "final" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "final";
       version = "0.1";
       sha256 = "189vby5ym6hcjpz6y9chlgkyzl8wnndqkhzk7s7qy8mksr3g66f9";
       buildDepends = [ stm transformers ];
       homepage = "http://github.com/errge/final";
       description = "utility to add extra safety to monadic returns";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "find-conduit" = callPackage
    ({ mkDerivation, attoparsec, conduit, conduit-combinators, doctest
     , either, exceptions, filepath, hspec, mmorph, monad-control, mtl
     , regex-posix, semigroups, system-filepath, text, time
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "find-conduit";
       version = "0.4.1";
       sha256 = "171y1bb3r6af41i2xsip2r4xm7grbzpvlwczrvaj8hzyknr3y7dx";
       buildDepends = [
         attoparsec conduit conduit-combinators either exceptions mmorph
         monad-control mtl regex-posix semigroups system-filepath text time
         transformers transformers-base
       ];
       testDepends = [
         attoparsec conduit conduit-combinators doctest either exceptions
         filepath hspec mmorph monad-control mtl regex-posix semigroups
         system-filepath text time transformers transformers-base
       ];
       description = "A file-finding conduit that allows user control over traversals";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fingertree" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "fingertree";
       version = "0.1.0.0";
       sha256 = "0c35sryzsijwavvw9x1pk5p99rhmp4g8pjh2ds419mlfgxc039ms";
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Generic finger-tree structure, with example instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fingertree-psqueue" = callPackage
    ({ mkDerivation, fingertree }:
     mkDerivation {
       pname = "fingertree-psqueue";
       version = "0.3";
       sha256 = "14kc0ijx44q7whniickjj3h9ag1pixn51dlxjs6n2ypaclcjz34z";
       buildDepends = [ fingertree ];
       description = "Implementation of priority search queues as finger trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fingertree-tf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fingertree-tf";
       version = "0.1.0.0";
       sha256 = "1ja8cqxpqhvssbcywph3zna946g1li5hlzsqab9lhg6vw0baakdn";
       description = "Generic finger-tree structure using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "finite-field" = callPackage
    ({ mkDerivation, deepseq, hashable, HUnit, primes, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, type-level-numbers
     }:
     mkDerivation {
       pname = "finite-field";
       version = "0.8.0";
       sha256 = "0wlbq7dpb4545xdnqjqppp0cmjx9m8g1p6lydkvn7pj7dwar8lni";
       buildDepends = [ deepseq hashable type-level-numbers ];
       testDepends = [
         HUnit primes QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th type-level-numbers
       ];
       description = "Finite Fields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "first-class-patterns" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "first-class-patterns";
       version = "0.3.2.1";
       sha256 = "07ak85jkxli1yhj75mpvam0av8iz5qpbx6m5kzw04fqg3vcfrj8j";
       buildDepends = [ transformers ];
       homepage = "https://github.com/reinerp/first-class-patterns";
       description = "First class patterns and pattern matching, using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "firstify" = callPackage
    ({ mkDerivation, filepath, homeomorphic, mtl, Safe, yhccore }:
     mkDerivation {
       pname = "firstify";
       version = "0.1";
       sha256 = "1g851dgsxq9gfbsx4qas9vm844ay3g5vhfd1493fgpay0j7i5fnd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath homeomorphic mtl Safe yhccore ];
       homepage = "http://www-users.cs.york.ac.uk/~ndm/firstify/";
       description = "Defunctionalisation for Yhc Core";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fishfood" = callPackage
    ({ mkDerivation, Cabal, factory, mtl, QuickCheck, toolshed }:
     mkDerivation {
       pname = "fishfood";
       version = "0.0.1.0";
       sha256 = "13fwwvvr3jd856gc28kckmaqgy3mdy02af0i6fws9jqkchm0d2l6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal factory mtl QuickCheck toolshed ];
       homepage = "http://functionalley.eu";
       description = "Calculates file-size frequency-distribution";
       license = "GPL";
     }) {};

  "fitsio" = callPackage
    ({ mkDerivation, cfitsio, filepath, mtl }:
     mkDerivation {
       pname = "fitsio";
       version = "0.2";
       sha256 = "07zsd05ncq8rnrswk4kzg97sam8czibw2nhlrqxg8q1a5canisag";
       buildDepends = [ filepath mtl ];
       extraLibraries = [ cfitsio ];
       homepage = "http://github.com/esessoms/fitsio";
       description = "A library for reading and writing data files in the FITS data format";
       license = "GPL";
     }) {};

  "fix-imports" = callPackage
    ({ mkDerivation, cpphs, filepath, haskell-src-exts, split, text
     , uniplate
     }:
     mkDerivation {
       pname = "fix-imports";
       version = "1.0.4";
       sha256 = "0j8yqqf61f2m4zri844gp6k80vkfzk1rby2miv90niz3hbciknj6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cpphs filepath haskell-src-exts split text uniplate
       ];
       description = "Program to manage the imports of a haskell module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fix-parser-simple" = callPackage
    ({ mkDerivation, mmtl }:
     mkDerivation {
       pname = "fix-parser-simple";
       version = "15320.3";
       sha256 = "0ls5fxwq2lnb0rjqih4isfwiv0603ga12gxnf7w3rpqp5qhrhas8";
       buildDepends = [ mmtl ];
       description = "Simple fix-expression parser";
       license = "LGPL";
     }) {};

  "fix-symbols-gitit" = callPackage
    ({ mkDerivation, gitit }:
     mkDerivation {
       pname = "fix-symbols-gitit";
       version = "0.1.0";
       sha256 = "01fxzhd2wqzp0paba64q5psfc4qvc4b8i88rdkn6mxlkm21gkp6y";
       buildDepends = [ gitit ];
       description = "Gitit plugin: Turn some Haskell symbols into pretty math symbols";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fixed";
       version = "0.2.1";
       sha256 = "1ayfya62ngcyyhi736fl5cd39iw568lkl16j4mliw3mi1cs2cic0";
       homepage = "http://github.com/ekmett/fixed";
       description = "Signed 15.16 precision fixed point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed-list" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fixed-list";
       version = "0.1.5";
       sha256 = "07b1kzysf96jckx7yghb2a93l884x8fvxxd0g2ja3hwb5y403911";
       homepage = "http://github.com/jvranish/FixedList/tree/master";
       description = "A fixed length list type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed-point" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fixed-point";
       version = "0.5.0.1";
       sha256 = "010gx32av4cn5bqq1zrrcah50ay528vw01fvv1xhfpkrx1ll9wka";
       description = "Binary fixed-point arithmetic";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fixed-point-vector" = callPackage
    ({ mkDerivation, fixed-point, vector }:
     mkDerivation {
       pname = "fixed-point-vector";
       version = "0.5.0.1";
       sha256 = "029mn44d1i794b1pbpa0zmf6b20zl0cvsf77mbfdkqnyx8986883";
       buildDepends = [ fixed-point vector ];
       description = "Unbox instances for the fixed-point package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fixed-point-vector-space" = callPackage
    ({ mkDerivation, fixed-point, vector-space }:
     mkDerivation {
       pname = "fixed-point-vector-space";
       version = "0.5.0.1";
       sha256 = "10b29gqy3rpwd5wf2b65p0llm8ksyp1p7k43rm1n5g5z67wkd7dx";
       buildDepends = [ fixed-point vector-space ];
       description = "vector-space instances for the fixed-point package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fixed-precision" = callPackage
    ({ mkDerivation, hmpfr, reflection, tagged }:
     mkDerivation {
       pname = "fixed-precision";
       version = "0.4.0";
       sha256 = "1akgiark8svzkqx764iic10qpfixm0js8vwga0134d81ppcp58f6";
       buildDepends = [ hmpfr reflection tagged ];
       homepage = "http://github.com/ekmett/fixed-precision";
       description = "Fixed Precision Arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed-storable-array" = callPackage
    ({ mkDerivation, tagged }:
     mkDerivation {
       pname = "fixed-storable-array";
       version = "0.3.1.1";
       sha256 = "0vb5h2v2qx19d7xibf7ksv2cha2pngh49mfpkh43f9vrwc6042ph";
       buildDepends = [ tagged ];
       description = "Fixed-size wrapper for StorableArray, providing a Storable instance. Deprecated - use storable-static-array instead.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed-vector" = callPackage
    ({ mkDerivation, doctest, filemanip, primitive }:
     mkDerivation {
       pname = "fixed-vector";
       version = "0.7.0.0";
       sha256 = "07wpzcpnnz0jjq5gs4ra8c2hyrxzmp0ryk06y3ryf8i4w65awgvf";
       buildDepends = [ primitive ];
       testDepends = [ doctest filemanip primitive ];
       description = "Generic vectors with statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed-vector-binary" = callPackage
    ({ mkDerivation, binary, fixed-vector, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "fixed-vector-binary";
       version = "0.6.0.0";
       sha256 = "1yjyw9wc92laiwd9w8ng3456azicvf9a9wqk2v6liiksj3flw7hy";
       buildDepends = [ binary fixed-vector ];
       testDepends = [ binary fixed-vector tasty tasty-quickcheck ];
       description = "Binary instances for fixed-vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed-vector-cereal" = callPackage
    ({ mkDerivation, cereal, fixed-vector, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "fixed-vector-cereal";
       version = "0.6.0.0";
       sha256 = "1kf3d0pfaif5fish1vc5z7d5ym23bwl80l8bg4bgpdw75cg2dnn6";
       buildDepends = [ cereal fixed-vector ];
       testDepends = [ cereal fixed-vector tasty tasty-quickcheck ];
       description = "Cereal instances for fixed-vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixed-vector-hetero" = callPackage
    ({ mkDerivation, deepseq, fixed-vector, primitive, transformers }:
     mkDerivation {
       pname = "fixed-vector-hetero";
       version = "0.2.0.0";
       sha256 = "0fjcbmk202850835zdgrffhlsiiifw1rsf2gf5bp203hf03h6906";
       buildDepends = [ deepseq fixed-vector primitive transformers ];
       homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
       description = "Generic heterogeneous vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixedprec" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "fixedprec";
       version = "0.2.2.1";
       sha256 = "0s921nhkmdglmcwzyr048r04dswc6hz7kvh9p4lvd8i2mxq0szgi";
       buildDepends = [ random ];
       description = "A fixed-precision real number type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixhs" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, deepseq, dlist
     , enumerator, HaXml, MissingH, network, parallel, QuickCheck, text
     }:
     mkDerivation {
       pname = "fixhs";
       version = "0.1.4";
       sha256 = "0kxfx3k2d8xy75s7cln3l1hiia5vjcr6k5almbpys63dkr3svcz2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec attoparsec-enumerator deepseq dlist enumerator HaXml
         MissingH network parallel QuickCheck text
       ];
       homepage = "http://github.com/urv/fixhs";
       description = "FIX (co)parser";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "fixplate" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fixplate";
       version = "0.1.5";
       sha256 = "0mmkkydvdiw4nawgw3w7a9gpcxc3wzzlhz2083hqa6sxhx8x3b29";
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Uniplate-style generic traversals for optionally annotated fixed-point types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixpoint" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fixpoint";
       version = "0.1.1";
       sha256 = "05h1cw1gpnwk1qjlia4l27j375cva8pp75fzn99w2rxsv6khszpb";
       homepage = "http://www.cse.unsw.edu.au/~rl/code/fixpoint.html";
       description = "Data types as fixpoints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fixtime" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "fixtime";
       version = "1.5.0.2";
       sha256 = "1walxcyi1wrv28vgy318c88z3mprz6mc8qfhbjgxb156iwfv80w5";
       buildDepends = [ time ];
       homepage = "https://github.com/pharpend/fixtime";
       description = "Some fixes to the time package";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "fizz-buzz" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fizz-buzz";
       version = "0.1.0.1";
       sha256 = "169xaj7iczz0mnvd03pf95dcvy918jscpzap6z9y62kb0daskg4p";
       description = "Functional Fizz/Buzz";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flaccuraterip" = callPackage
    ({ mkDerivation, binary, deepseq, HTTP, optparse-applicative }:
     mkDerivation {
       pname = "flaccuraterip";
       version = "0.3.3";
       sha256 = "0l6lh7ji8qp11jj4cc29b1f5lmr2cqb76krccc8p9jfizdxia8fl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary deepseq HTTP optparse-applicative ];
       homepage = "http://noaxiom.org/flAccurateRip";
       description = "Verify FLAC files ripped form CD using AccurateRip™";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "flamethrower" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "flamethrower";
       version = "0.0.5.1";
       sha256 = "10kfy1cnp721hgz6lbc28y7hkjhbv6gpk2jff6nk2avrfbaqqd8x";
       buildDepends = [ text ];
       homepage = "https://charmander.me/flamethrower/";
       description = "A template engine for HTML";
       license = stdenv.lib.licenses.mit;
     }) {};

  "flat-mcmc" = callPackage
    ({ mkDerivation, monad-par, monad-par-extras, mtl, mwc-random
     , primitive, vector
     }:
     mkDerivation {
       pname = "flat-mcmc";
       version = "0.1.0.0";
       sha256 = "1fp5jga82kbkj77xhy4m4vsn7zqf6fr9fwram3a2ybqssicgs3z5";
       buildDepends = [
         monad-par monad-par-extras mtl mwc-random primitive vector
       ];
       homepage = "http://jtobin.github.com/flat-mcmc";
       description = "Painless general-purpose sampling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flexible-defaults" = callPackage
    ({ mkDerivation, th-extras, transformers }:
     mkDerivation {
       pname = "flexible-defaults";
       version = "0.0.1.1";
       sha256 = "0cbp8hb7y29xz3hl780173cs6ca4df0r98fz7v3drqr46aq55ipl";
       buildDepends = [ th-extras transformers ];
       homepage = "https://github.com/mokus0/flexible-defaults";
       description = "Generate default function implementations for complex type classes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "flexible-unlit" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "flexible-unlit";
       version = "0.2013.314.0";
       sha256 = "0jwsa2qfzw4rdj55axy7cw1p82314i28c16f7p7pjp53cwnsp02a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ text ];
       description = "A configurable reimplementation of unlit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flexiwrap" = callPackage
    ({ mkDerivation, data-type, mtl, QuickCheck }:
     mkDerivation {
       pname = "flexiwrap";
       version = "0.1.0";
       sha256 = "0vvl9w3i374k720sscbcsbha89fcfk1hcvdr0nk4y7gkp13xwdba";
       buildDepends = [ data-type mtl QuickCheck ];
       description = "Flexible wrappers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flexiwrap-smallcheck" = callPackage
    ({ mkDerivation, data-type, flexiwrap, mtl, smallcheck }:
     mkDerivation {
       pname = "flexiwrap-smallcheck";
       version = "0.0.1";
       sha256 = "1dara0az10fxx46jmplf2l6a6x8qqjk00fxjzb9n10ndd4lxcsm3";
       buildDepends = [ data-type flexiwrap mtl smallcheck ];
       description = "SmallCheck (Serial) instances for flexiwrap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flickr" = callPackage
    ({ mkDerivation, filepath, HTTP, mime, network, random, utf8-string
     , xhtml, xml
     }:
     mkDerivation {
       pname = "flickr";
       version = "0.3.3";
       sha256 = "12fi34zl2ggbxf5gmfldplzi1pk9byf8rpn58ljw2fvz3qb8x6yl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath HTTP mime network random utf8-string xhtml xml
       ];
       description = "Haskell binding to the Flickr API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flippers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "flippers";
       version = "1.0.1";
       sha256 = "1swyj1f67giq7h9xcl6dzsw4ywk1jbl6avpihbv0q9g9hp6yzqp3";
       editedCabalFile = "1d3k5prcb5nl7gwq30h4n7qsbl86hrj42zpvrqwsr9lir2jss279";
       description = "Variations on flip for multiple arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flite" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "flite";
       version = "0.1.2";
       sha256 = "0ck44icwg6gzi9x5h5iszk59qnr0fhsj95ghk0lxm8aygavwq44d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec ];
       homepage = "http://www.cs.york.ac.uk/fp/reduceron/";
       description = "f-lite compiler, interpreter and libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flo" = callPackage
    ({ mkDerivation, mtl, parsec, regex-compat, text }:
     mkDerivation {
       pname = "flo";
       version = "0.1";
       sha256 = "1hxzdgnsfxallmw7z07hs4ax8pfn57hk55kyjxg8vnrj7i07bp9l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec regex-compat text ];
       description = "Generate flow charts from your code base";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "float-binstring" = callPackage
    ({ mkDerivation, attoparsec, hspec, HUnit, QuickCheck, split, text
     }:
     mkDerivation {
       pname = "float-binstring";
       version = "0.2";
       sha256 = "0dcxk1s13ppslqxd378yh92pzmxnmnhk1q07wl5ifcnfy5zamzdq";
       buildDepends = [ attoparsec split text ];
       testDepends = [ attoparsec hspec HUnit QuickCheck split text ];
       homepage = "https://github.com/llelf/float-binstring";
       description = "C99 printf \"%a\" style formatting and parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "floatshow" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "floatshow";
       version = "0.2.4";
       sha256 = "1zsxjwgm8nkphnmsbz03yvplc2r02qybb387n910j4j6vya98khc";
       homepage = "https://bitbucket.org/dafis/floatshow";
       description = "Alternative faster String representations for Double and Float, String representations for more general numeric types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flock" = callPackage
    ({ mkDerivation, lifted-base, monad-control, transformers }:
     mkDerivation {
       pname = "flock";
       version = "0.3.1.7";
       sha256 = "0hd3hbbmd0bk7xx662r0wrpicy6b7xgaysy1x849nmj4ilnhnmk5";
       buildDepends = [ lifted-base monad-control transformers ];
       homepage = "http://github.com/hesselink/flock";
       description = "Wrapper for flock(2)";
       license = "unknown";
     }) {};

  "flow2dot" = callPackage
    ({ mkDerivation, mtl, parsec, QuickCheck, utf8-string }:
     mkDerivation {
       pname = "flow2dot";
       version = "0.9.0.3";
       sha256 = "1pf60wpwsvxxgqkz3zh2qlcyz9pyd8axi41y5y6pn77n9x8p2613";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec QuickCheck utf8-string ];
       homepage = "http://adept.linux.kiev.ua:8080/repos/flow2dot";
       description = "Library and binary to generate sequence/flow diagrams from plain text source";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "flowdock" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, http-client
     , http-client-tls, lens, mtl, pipes, pipes-aeson, pipes-http
     , pipes-parse, text, unordered-containers, uuid
     }:
     mkDerivation {
       pname = "flowdock";
       version = "0.2.0.0";
       sha256 = "1lmjhy6cxdr86pia9v04h4q40w0401r3a2srsdhgwbgxzj3syi1r";
       buildDepends = [
         aeson base64-bytestring http-client http-client-tls lens mtl pipes
         pipes-aeson pipes-http pipes-parse text unordered-containers uuid
       ];
       homepage = "https://github.com/brewtown/hs-flowdock";
       description = "Flowdock client library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "flowdock-api" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, blaze-builder
     , data-default, filepath, heredoc, HsOpenSSL, hspec, http-streams
     , http-types, io-streams, monad-logger, MonadCatchIO-transformers
     , optparse-applicative, split, text, time, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "flowdock-api";
       version = "0.1.0.0";
       sha256 = "0p0b0pabyykvli9l0jrcbfgpyq7dna3zilb4z0s1hb6mamfdn7ng";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring blaze-builder data-default filepath
         HsOpenSSL http-streams http-types io-streams monad-logger
         MonadCatchIO-transformers optparse-applicative split text time
         transformers unordered-containers vector
       ];
       testDepends = [
         aeson base64-bytestring blaze-builder data-default heredoc
         HsOpenSSL hspec http-streams http-types io-streams monad-logger
         MonadCatchIO-transformers text time transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/gabemc/flowdock-api";
       description = "API integration with Flowdock";
       license = stdenv.lib.licenses.mit;
     }) {};

  "flower" = callPackage
    ({ mkDerivation, binary, bio, cmdargs, mtl, random }:
     mkDerivation {
       pname = "flower";
       version = "0.7.2";
       sha256 = "0r9l3b91kyhf4ab8m2qv5jsfqf3k7x639bq1wjbf852imzl6138b";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary bio cmdargs mtl random ];
       homepage = "http://biohaskell.org/Applications/Flower";
       description = "Analyze 454 flowgrams (.SFF files)";
       license = "GPL";
     }) {};

  "flowsim" = callPackage
    ({ mkDerivation, biocore, biofasta, biosff, cmdargs, MonadRandom
     , mtl, random
     }:
     mkDerivation {
       pname = "flowsim";
       version = "0.3.5";
       sha256 = "0l3222a2r2khhrfhzvd0iikqq1rlcwhvf785bwnwqygq35i1w6j3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         biocore biofasta biosff cmdargs MonadRandom mtl random
       ];
       homepage = "http://biohaskell.org/Applications/FlowSim";
       description = "Simulate 454 pyrosequencing";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "fluent-logger" = callPackage
    ({ mkDerivation, attoparsec, cereal, cereal-conduit, conduit
     , conduit-extra, exceptions, hspec, messagepack, network
     , network-socket-options, random, stm, text, time, transformers
     , vector
     }:
     mkDerivation {
       pname = "fluent-logger";
       version = "0.2.0.0";
       sha256 = "02sh7q9l874rbjdwj66grz0y0cbnd2wc5413x4mrvg095i8g9zww";
       buildDepends = [
         cereal messagepack network network-socket-options random stm text
         time vector
       ];
       testDepends = [
         attoparsec cereal cereal-conduit conduit conduit-extra exceptions
         hspec messagepack network text time transformers
       ];
       description = "A structured logger for Fluentd (Haskell)";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "fluent-logger-conduit" = callPackage
    ({ mkDerivation, conduit, fluent-logger, resourcet, transformers }:
     mkDerivation {
       pname = "fluent-logger-conduit";
       version = "0.3.0.0";
       sha256 = "0z21dg1y0rqfgvpvgci5kp3jh0kdx5v5paxdidwp8dd6v7y3ag9q";
       buildDepends = [ conduit fluent-logger resourcet transformers ];
       description = "Conduit interface for fluent-logger";
       license = "unknown";
     }) {};

  "fluidsynth" = callPackage
    ({ mkDerivation, bindings-DSL, fluidsynth }:
     mkDerivation {
       pname = "fluidsynth";
       version = "0.2.0.0";
       sha256 = "18r7q7sh35sr71ays0c9ic6f7vmrblpw25mz1y5v9sbk5x2lh64s";
       buildDepends = [ bindings-DSL ];
       extraLibraries = [ fluidsynth ];
       homepage = "https://github.com/MostAwesomeDude/hsfluidsynth";
       description = "Haskell bindings to FluidSynth";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) fluidsynth; };

  "fmark" = callPackage
    ({ mkDerivation, filepath, mtl, Unixutils }:
     mkDerivation {
       pname = "fmark";
       version = "0.1.1";
       sha256 = "1bjkkd90mw1nbm5pyjh52dwhqa6xx3i3hhl2ys3qpk08mrw5r09l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl Unixutils ];
       homepage = "http://github.com/jabolopes/fmark";
       description = "A Friendly Markup language without syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fmlist" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fmlist";
       version = "0.8";
       sha256 = "1knr9yh58fwjpkm37hvrqghlchf5qibwf9q52app6zh3ys999rrs";
       description = "FoldMap lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "focus" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "focus";
       version = "0.1.3";
       sha256 = "11l6rlr22m0z41c9fynpisj0cnx70zzcxhsakz9b09ap8wj0raqy";
       homepage = "https://github.com/nikita-volkov/focus";
       description = "A general abstraction for manipulating elements of container data structures";
       license = stdenv.lib.licenses.mit;
     }) {};

  "foldl" = callPackage
    ({ mkDerivation, primitive, text, transformers, vector }:
     mkDerivation {
       pname = "foldl";
       version = "1.0.7";
       sha256 = "0mqxibifrlfqnibzy9b2rncy4dyljdz35560ni3rwi8hkyix74a9";
       buildDepends = [ primitive text transformers vector ];
       description = "Composable, streaming, and efficient left folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "foldl-incremental" = callPackage
    ({ mkDerivation, foldl, tasty, tasty-golden, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "foldl-incremental";
       version = "0.1.1.0";
       sha256 = "1wqvd48ivs4nn0kw9g9r0p0029kigl8bbc3554m1g033l2b8k2pk";
       buildDepends = [ foldl ];
       testDepends = [
         foldl tasty tasty-golden tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/tonyday567/foldl-incremental";
       description = "incremental folds";
       license = stdenv.lib.licenses.mit;
     }) {};

  "folds" = callPackage
    ({ mkDerivation, comonad, contravariant, deepseq, doctest, filepath
     , lens, mtl, pointed, profunctors, reflection, semigroupoids
     , semigroups, tagged, transformers, vector
     }:
     mkDerivation {
       pname = "folds";
       version = "0.6.2";
       sha256 = "13zdmf7szdy9ka5dw0vgzbfmndm7w8fz7ryz5h2z5hsqg9am2qqa";
       buildDepends = [
         comonad contravariant lens pointed profunctors reflection
         semigroupoids tagged transformers vector
       ];
       testDepends = [ deepseq doctest filepath mtl semigroups ];
       configureFlags = "-f-test-hlint";
       homepage = "http://github.com/ekmett/folds";
       description = "Beautiful Folding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "follower" = callPackage
    ({ mkDerivation, ansi-wl-pprint, cmdargs, filepath, hs-twitter
     , strict, time
     }:
     mkDerivation {
       pname = "follower";
       version = "0.0.1";
       sha256 = "0iy8q06fpc03n4z6dcrl95vji67dia6bp30q42rrlqw6s9cwigsm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint cmdargs filepath hs-twitter strict time
       ];
       homepage = "http://rebworks.net/projects/follower/";
       description = "Follow Tweets anonymously";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "font-opengl-basic4x6" = callPackage
    ({ mkDerivation, GLFW-b, OpenGL }:
     mkDerivation {
       pname = "font-opengl-basic4x6";
       version = "0.0.3";
       sha256 = "0myjb8g3mis887l0jmr88nb757x0zcvhnanx02hxjbfb5iqx3cx9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ GLFW-b OpenGL ];
       description = "Basic4x6 font for OpenGL";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "foo" = callPackage
    ({ mkDerivation, GLUT, OpenGL }:
     mkDerivation {
       pname = "foo";
       version = "1.0";
       sha256 = "1f1abijdfvnmkgbvw9q94k4p39pbqslmg9am1j1sjyxrag5y0vv8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT OpenGL ];
       homepage = "http://sourceforge.net/projects/fooengine/?abmode=1";
       description = "Paper soccer, an OpenGL game";
       license = "GPL";
     }) {};

  "for-free" = callPackage
    ({ mkDerivation, comonad, comonad-transformers, contravariant
     , transformers
     }:
     mkDerivation {
       pname = "for-free";
       version = "0.1";
       sha256 = "048m95sg8jq7kpr55iq5h93c7zbaqp5v340phb13v9yw2hv50sql";
       buildDepends = [
         comonad comonad-transformers contravariant transformers
       ];
       description = "Functor, Monad, MonadPlus, etc for free";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "force-layout" = callPackage
    ({ mkDerivation, data-default-class, lens, vector-space
     , vector-space-points
     }:
     mkDerivation {
       pname = "force-layout";
       version = "0.3.0.8";
       sha256 = "00b831l94r3lx0b330ql3w551w0fwziayhsjydzbfqq335syaaxg";
       buildDepends = [
         data-default-class lens vector-space vector-space-points
       ];
       description = "Simple force-directed layout";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fordo" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "fordo";
       version = "0.1";
       sha256 = "0vlh5rfn3n8vi3gbfmpbw20jgv5skvcw187walgv6dns39pagsar";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ transformers ];
       description = "Run a command on files with magic substituion support (sequencing and regexp)";
       license = "GPL";
     }) {};

  "foreign-storable-asymmetric" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "foreign-storable-asymmetric";
       version = "0.0.1";
       sha256 = "1pj30p7z5nq8j95z9c4kjv6spandfch3r0dvx3n8wsbh3270dvxj";
       description = "Types and instances for implementing a Storable with different peek and poke";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "foreign-store" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "foreign-store";
       version = "0.1";
       sha256 = "1p7hsr1kg1667wql9c18q7bwpnrldnb8r18ijhji5c7qqr8yml5g";
       homepage = "https://github.com/chrisdone/foreign-store";
       description = "Store a stable pointer in a foreign context to be retrieved later. Persists through GHCi reloads.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "forkable-monad" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "forkable-monad";
       version = "0.1.1";
       sha256 = "0nxcjx3cf8bkl0cwkpgz5c6byld13kw2601q4157fmfa370bi11h";
       buildDepends = [ transformers ];
       homepage = "http://code.google.com/p/forkable-monad/";
       description = "An implementation of forkIO for monad stacks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "formal" = callPackage
    ({ mkDerivation, ansi-terminal, file-embed, HTTP, indents
     , interpolatedstring-perl6, jmacro, MissingH, mtl, network, pandoc
     , parsec, text, transformers, urlencoded, wl-pprint-text
     }:
     mkDerivation {
       pname = "formal";
       version = "0.1.0";
       sha256 = "0z8a5a9w7mg69c1x6h8825bhkll63gz6j85lbc0w59w1ag2x8865";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal file-embed HTTP indents interpolatedstring-perl6
         jmacro MissingH mtl network pandoc parsec text transformers
         urlencoded wl-pprint-text
       ];
       description = "A statically typed, functional programming language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "format" = callPackage
    ({ mkDerivation, parsec, QuickCheck }:
     mkDerivation {
       pname = "format";
       version = "0.1.0.0";
       sha256 = "1vv9b0hif5hi3jkd1n6j85b5mkfkjyixldblm2l4qfgrj95igmph";
       buildDepends = [ parsec ];
       testDepends = [ parsec QuickCheck ];
       homepage = "https://github.com/bytbox/hs-format";
       description = "Rendering from and scanning to format strings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "format-status" = callPackage
    ({ mkDerivation, data-concurrent-queue, stm, text, time }:
     mkDerivation {
       pname = "format-status";
       version = "0.2.0.0";
       sha256 = "0dfmjp307c8685cdw41nmjmisf3aplyf177r973wyqcrifabvs2q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ data-concurrent-queue stm text time ];
       description = "A utility for writing the date to dzen2";
       license = stdenv.lib.licenses.mit;
     }) {};

  "formatting" = callPackage
    ({ mkDerivation, scientific, text, text-format, time }:
     mkDerivation {
       pname = "formatting";
       version = "5.4";
       sha256 = "017fm3pqr2nqpcqmpldr74cvb641hxvybhvnwv8a8vv4ry1vdrk9";
       buildDepends = [ scientific text text-format time ];
       description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "forml" = callPackage
    ({ mkDerivation, ansi-terminal, cereal, file-embed, GraphSCC
     , hslogger, HTTP, indents, interpolatedstring-perl6, jmacro
     , MissingH, mtl, network, pandoc, parsec, text, urlencoded
     , utf8-string, zlib
     }:
     mkDerivation {
       pname = "forml";
       version = "0.2";
       sha256 = "1bqfw3h06mbznivg37840qnzjygflzp90wkyssnb1kjxi4bj1vbv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cereal file-embed GraphSCC hslogger HTTP indents
         interpolatedstring-perl6 jmacro MissingH mtl network pandoc parsec
         text urlencoded utf8-string zlib
       ];
       homepage = "http://texodus.github.com/forml";
       description = "A statically typed, functional programming language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "formlets" = callPackage
    ({ mkDerivation, applicative-extras, blaze-html, syb, transformers
     , xhtml
     }:
     mkDerivation {
       pname = "formlets";
       version = "0.8";
       sha256 = "0jx56vhrzcwca33rgp738plmssw95nv20rrzw5xrxcmdv26zp1w9";
       buildDepends = [
         applicative-extras blaze-html syb transformers xhtml
       ];
       homepage = "http://github.com/chriseidhof/formlets/tree/master";
       description = "Formlets implemented in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "formlets-hsp" = callPackage
    ({ mkDerivation, applicative-extras, formlets, hsp, hsx, mtl, trhsx
     }:
     mkDerivation {
       pname = "formlets-hsp";
       version = "2.3.1";
       sha256 = "19m0nryrksh1cgsz7sx3gamjczw36hqfsbml05p6j7li3bk0fpw2";
       buildDepends = [ applicative-extras formlets hsp hsx mtl ];
       buildTools = [ trhsx ];
       description = "HSP support for Formlets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "forth-hll" = callPackage
    ({ mkDerivation, array-forth, free, mtl }:
     mkDerivation {
       pname = "forth-hll";
       version = "0.1.0.0";
       sha256 = "1hmcicxnxcl99chidkbg1kspjzpxxcw8qh4lrwvmlpz2knzf11g3";
       buildDepends = [ array-forth free mtl ];
       description = "A simple eDSL for generating arrayForth code";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "fountain" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "fountain";
       version = "0.1";
       sha256 = "0mxzrvrag2qwn22llklmdkcf4icd8n9ifg1awd9q7ffll8a1a67p";
       buildDepends = [ random ];
       homepage = "http://tomahawkins.org";
       description = "A fountain codec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fpco-api" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, blaze-html
     , cereal, data-default, deepseq, deepseq-generics, failure, fay
     , filepath, hashable, http-conduit, http-types, ini, lifted-async
     , lifted-base, monad-control, monad-extras, monad-logger, mtl
     , network, optparse-applicative, persistent, persistent-template
     , pretty-show, random, resourcet, safe, semigroups, shakespeare
     , shakespeare-i18n, stm, syb, text, time, transformers
     , transformers-base, unordered-containers, vector, yesod-core
     }:
     mkDerivation {
       pname = "fpco-api";
       version = "1.2.0.4";
       sha256 = "1hyvnra01c7jqh3n0zpnff6m9z2xjiq6fp4484qb7km58mw1hm2v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base64-bytestring blaze-html cereal data-default
         deepseq deepseq-generics failure fay filepath hashable http-conduit
         http-types ini lifted-async lifted-base monad-control monad-extras
         monad-logger mtl network optparse-applicative persistent
         persistent-template pretty-show random resourcet safe semigroups
         shakespeare shakespeare-i18n stm syb text time transformers
         transformers-base unordered-containers vector yesod-core
       ];
       homepage = "https://www.fpcomplete.com/page/api";
       description = "Simple interface to the FP Complete IDE API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fpipe" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fpipe";
       version = "0.0.1";
       sha256 = "1b6r19yy9wh5w8xb0ajjxsd2qyzjnkgyav1975qv92wwxslyxwr8";
       description = "F#-style composition and application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fpnla" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fpnla";
       version = "0.1.1";
       sha256 = "15qpfi3b9vnpm17q3y64nsrhlj5vi9rgrgysjfk98aw1gkj9mvv4";
       description = "A library for NLA operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fpnla-examples" = callPackage
    ({ mkDerivation, accelerate, data-default, deepseq, fpnla, hmatrix
     , HUnit, linear-algebra-cblas, monad-par, parallel, QuickCheck
     , random, repa, tagged, test-framework, test-framework-hunit
     , test-framework-quickcheck2, time, vector
     }:
     mkDerivation {
       pname = "fpnla-examples";
       version = "0.1.1";
       sha256 = "1p305r0jgcqrbny22ic1ziyav9yjy6v02wgna0sgh4p0c1wi7pb2";
       buildDepends = [
         accelerate deepseq fpnla hmatrix linear-algebra-cblas monad-par
         parallel repa vector
       ];
       testDepends = [
         accelerate data-default deepseq fpnla hmatrix HUnit
         linear-algebra-cblas monad-par parallel QuickCheck random repa
         tagged test-framework test-framework-hunit
         test-framework-quickcheck2 time vector
       ];
       description = "Example implementations for FPNLA library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fptest" = callPackage
    ({ mkDerivation, doctest, Glob, hlint, HUnit, parsec
     , parsec3-numbers, QuickCheck, regex-compat, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "fptest";
       version = "0.2.2.0";
       sha256 = "1wqca640h9qcrnwkqdw1pyl73c4nraglgwqgimkrgbkjlwpyn824";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         HUnit parsec parsec3-numbers QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       testDepends = [
         doctest Glob hlint HUnit parsec parsec3-numbers QuickCheck
         regex-compat test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/jrp2014/fptest";
       description = "IEEE754r floating point conformance tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fquery" = callPackage
    ({ mkDerivation, extensible-exceptions, hashtables, parsec
     , regex-compat
     }:
     mkDerivation {
       pname = "fquery";
       version = "0.2.1.5";
       sha256 = "1v1qrbr5kz17haawrh0ksmjw7j4ks0x4kqzss5z1fbldl6axw97i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions hashtables parsec regex-compat
       ];
       description = "Installed package query tool for Gentoo Linux";
       license = "unknown";
     }) {};

  "fractal" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fractal";
       version = "0.0.1";
       sha256 = "0iw5454mi0ms3w62m118rlqr6lr1j9mbxwfj26mlc5p38bq9k7ds";
       isLibrary = false;
       isExecutable = true;
       description = "Draw Newton, Julia and Mandelbrot fractals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fraction" = callPackage
    ({ mkDerivation, semigroups }:
     mkDerivation {
       pname = "fraction";
       version = "0.1.0.3";
       sha256 = "0kjpfqy528s11kfigp27kr5a4xw8kn11mpgjzb6fapdbip6y9579";
       buildDepends = [ semigroups ];
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/fraction";
       description = "Fractions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "frag" = callPackage
    ({ mkDerivation, GLUT, OpenGL, random }:
     mkDerivation {
       pname = "frag";
       version = "1.1.2";
       sha256 = "1xgnp4cls8i61hyl4kcf3afri77jlcahwjvww498xl5d5frdiv90";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT OpenGL random ];
       homepage = "http://haskell.org/haskellwiki/Frag";
       description = "A 3-D First Person Shooter Game";
       license = "GPL";
     }) {};

  "frame" = callPackage
    ({ mkDerivation, happstack-fastcgi, happstack-server, haskelldb
     , haskelldb-hdbc, haskelldb-hdbc-odbc, HDBC, HDBC-odbc, HTTP
     , MissingH, mtl, utf8-string
     }:
     mkDerivation {
       pname = "frame";
       version = "0.1";
       sha256 = "0ldncqifcnk4d50qivgw62hcdy4nc23zr64q787azid0vb9vsdja";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         happstack-fastcgi happstack-server haskelldb haskelldb-hdbc
         haskelldb-hdbc-odbc HDBC HDBC-odbc HTTP MissingH mtl utf8-string
       ];
       description = "A simple web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "frame-markdown" = callPackage
    ({ mkDerivation, frame, pandoc }:
     mkDerivation {
       pname = "frame-markdown";
       version = "0.1";
       sha256 = "0wy1c9xgd6ykymqciga1sla83wfdwy17p88bygfp6pflbc0rw57g";
       buildDepends = [ frame pandoc ];
       description = "A markdown to Frame GUI writer for Pandoc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "franchise" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "franchise";
       version = "0.0.6";
       sha256 = "144fywp5fcix5i06wvwvzwsr19bgxpajx7bi7jw43hnm3rlcj4vr";
       description = "A package for configuring and building Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "free" = callPackage
    ({ mkDerivation, bifunctors, comonad, distributive, mtl
     , prelude-extras, profunctors, semigroupoids, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "free";
       version = "4.10.0.1";
       sha256 = "0vs080bbcbncjqa7z0l6zd10kpmilj8khxiqdn4bq24mifyryhvq";
       buildDepends = [
         bifunctors comonad distributive mtl prelude-extras profunctors
         semigroupoids semigroups transformers
       ];
       homepage = "http://github.com/ekmett/free/";
       description = "Monads for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "free-functors" = callPackage
    ({ mkDerivation, algebraic-classes, comonad, constraints
     , transformers, void
     }:
     mkDerivation {
       pname = "free-functors";
       version = "0.6.3.3";
       sha256 = "05q3b5ls6c63piywyxpa87gzn0c46xwgisq6skb05a38q24za3a0";
       buildDepends = [
         algebraic-classes comonad constraints transformers void
       ];
       homepage = "https://github.com/sjoerdvisscher/free-functors";
       description = "Provides free functors that are adjoint to functors that forget class constraints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "free-game" = callPackage
    ({ mkDerivation, boundingboxes, colors, control-bool, filepath
     , free, freetype2, GLFW-b, hashable, JuicyPixels, JuicyPixels-util
     , lens, linear, mtl, OpenGL, OpenGLRaw, random, reflection
     , transformers, vector, void
     }:
     mkDerivation {
       pname = "free-game";
       version = "1.1.80";
       sha256 = "1vpwrviwxib22mkaqmwndzfly8iicr85sh1y914gwp5n83lmkava";
       buildDepends = [
         boundingboxes colors control-bool filepath free freetype2 GLFW-b
         hashable JuicyPixels JuicyPixels-util lens linear mtl OpenGL
         OpenGLRaw random reflection transformers vector void
       ];
       homepage = "https://github.com/fumieval/free-game";
       description = "Create games for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "free-operational" = callPackage
    ({ mkDerivation, comonad-transformers, free, kan-extensions, mtl
     , transformers
     }:
     mkDerivation {
       pname = "free-operational";
       version = "0.5.0.0";
       sha256 = "0gim4m0l76sxxg6a8av1gl6qjpwxwdzyviij86d06v1150r08dmb";
       buildDepends = [
         comonad-transformers free kan-extensions mtl transformers
       ];
       description = "Operational Applicative, Alternative, Monad and MonadPlus from free types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "free-theorems" = callPackage
    ({ mkDerivation, haskell-src, haskell-src-exts, mtl, syb }:
     mkDerivation {
       pname = "free-theorems";
       version = "0.3.2.0";
       sha256 = "1r0qz8h8fjb9akkhd3impr30gd0s5ky51dj667x0pf155b4lvx2w";
       buildDepends = [ haskell-src haskell-src-exts mtl syb ];
       description = "Automatic generation of free theorems";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "free-theorems-counterexamples" = callPackage
    ({ mkDerivation, cgi, free-theorems, haskell-src, haskell-src-exts
     , HUnit, mtl, syb, utf8-string, xhtml
     }:
     mkDerivation {
       pname = "free-theorems-counterexamples";
       version = "0.3.1.0";
       sha256 = "1wq5lvnylw92qzv1q93liz4i3q2j8sbgwgaw8nw79q0x0cdvbbb3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cgi free-theorems haskell-src haskell-src-exts HUnit mtl syb
         utf8-string xhtml
       ];
       description = "Automatically Generating Counterexamples to Naive Free Theorems";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "free-theorems-seq" = callPackage
    ({ mkDerivation, free-theorems, haskell-src, mtl, parsec, syb
     , utf8-string, xhtml
     }:
     mkDerivation {
       pname = "free-theorems-seq";
       version = "1.0";
       sha256 = "1scqjv6hc2y0w1x9f8v8bwrl1dnz64hf5jgrdam12dxbsk6qjs6g";
       buildDepends = [
         free-theorems haskell-src mtl parsec syb utf8-string xhtml
       ];
       description = "Taming Selective Strictness";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "free-theorems-seq-webui" = callPackage
    ({ mkDerivation, cgi, free-theorems-seq, mtl, network, syb
     , utf8-string, xhtml
     }:
     mkDerivation {
       pname = "free-theorems-seq-webui";
       version = "1.0.0.2";
       sha256 = "1bx7fg1ddycl9pgrlh2qij5vb6fqx79gl6lbm248c95xyygi3iy5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cgi free-theorems-seq mtl network syb utf8-string xhtml
       ];
       description = "Taming Selective Strictness";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "free-theorems-webui" = callPackage
    ({ mkDerivation, cgi, csv, dataenc, filepath, free-theorems, time
     , xhtml
     }:
     mkDerivation {
       pname = "free-theorems-webui";
       version = "0.2.1.1";
       sha256 = "1qxdfbzr52dw0qww03l86vpgmylznifqzvjarmgpkfr129szl7ba";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cgi csv dataenc filepath free-theorems time xhtml
       ];
       description = "CGI-based web interface for the free-theorems package";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "freekick2" = callPackage
    ({ mkDerivation, binary, EdisonCore, filepath, FTGL, mtl, OpenGL
     , pngload, random, SDL
     }:
     mkDerivation {
       pname = "freekick2";
       version = "0.1.2";
       sha256 = "1ybmffs05hgzn81szcd8nrz4f94qc64d9y2d2hkyq57djb87503j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary EdisonCore filepath FTGL mtl OpenGL pngload random SDL
       ];
       homepage = "http://github.com/anttisalonen/freekick2";
       description = "A soccer game";
       license = "GPL";
     }) {};

  "freenect" = callPackage
    ({ mkDerivation, freenect, freenect_sync, vector }:
     mkDerivation {
       pname = "freenect";
       version = "1.2";
       sha256 = "11ggp90npdyfdmf8zhjk442zl0j0lni6hizhgc0409za9i6s1l5g";
       buildDepends = [ vector ];
       extraLibraries = [ freenect freenect_sync ];
       homepage = "https://github.com/chrisdone/freenect";
       description = "Interface to the Kinect device";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) freenect; };

  "freesect" = callPackage
    ({ mkDerivation, cpphs, mtl, parallel, random, syb }:
     mkDerivation {
       pname = "freesect";
       version = "0.8";
       sha256 = "150ch1xmx3slmq7hb74z8sjrqhrsc9kl1zjn030fj6k6kphrwd88";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cpphs mtl parallel random syb ];
       homepage = "http://fremissant.net/freesect";
       description = "A Haskell syntax extension for generalised sections";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "freesound" = callPackage
    ({ mkDerivation, curl, data-accessor, data-accessor-template, mtl
     , xml
     }:
     mkDerivation {
       pname = "freesound";
       version = "0.1.0";
       sha256 = "0a34qc62sjc355qfr3qz92nh27gmcyqk2jlhq77pjfdzv0ivigcy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         curl data-accessor data-accessor-template mtl xml
       ];
       homepage = "http://code.haskell.org/~StefanKersten/code/freesound";
       description = "Access the Freesound Project database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "freetype-simple" = callPackage
    ({ mkDerivation, boundingboxes, freetype2, linear }:
     mkDerivation {
       pname = "freetype-simple";
       version = "0.1.0.1";
       sha256 = "1qhiy896a10af9fnzcp4y0ra1c9l6fbcclrr3k74pn2qvvfybnss";
       buildDepends = [ boundingboxes freetype2 linear ];
       homepage = "https://github.com/capsjac/freetype-simple";
       description = "Single line text rendering for OpenGL ES";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "freetype2" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "freetype2";
       version = "0.1.1";
       sha256 = "16ayyqvbl278z68ssfbv2nvbyxs7585zmnk2w53vlxvj0k9zj66s";
       isLibrary = true;
       isExecutable = true;
       description = "Haskell binding for FreeType 2 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fresh" = callPackage
    ({ mkDerivation, haskell-src-exts, syb }:
     mkDerivation {
       pname = "fresh";
       version = "0.1.1";
       sha256 = "1441yv55bwmiwnr6jsccq91anq8vhc2a4ka0irn3i2i9cjzw0gkw";
       buildDepends = [ haskell-src-exts syb ];
       homepage = "https://github.com/davidlazar/fresh";
       description = "Introduce fresh variables into Haskell source code";
       license = stdenv.lib.licenses.mit;
     }) {};

  "friday" = callPackage
    ({ mkDerivation, convertible, libdevil, primitive, QuickCheck
     , ratio-int, test-framework, test-framework-quickcheck2
     , transformers, vector
     }:
     mkDerivation {
       pname = "friday";
       version = "0.1.5";
       sha256 = "1wa8swh152nvp2ilw4hxcsydmgd0ifcikpfnxg5jwlnbs3b6fm8q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         convertible primitive ratio-int transformers vector
       ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2 vector
       ];
       extraLibraries = [ libdevil ];
       homepage = "https://github.com/RaphaelJ/friday";
       description = "A functionnal image processing library for Haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "friendly-time" = callPackage
    ({ mkDerivation, HUnit, test-framework, test-framework-hunit, time
     }:
     mkDerivation {
       pname = "friendly-time";
       version = "0.3";
       sha256 = "10p78qbb1c87d0ag6cwc7blgwaw8r5sbs00gp5qg3sh9x7n9l3nj";
       buildDepends = [ time ];
       testDepends = [ HUnit test-framework test-framework-hunit time ];
       homepage = "http://github.com/pbrisbin/friendly-time";
       description = "Print time information in friendly ways";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "frisby" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "frisby";
       version = "0.2";
       sha256 = "0isj9p7j33va1a4q78vnq32j9jdbjww596rxja235z4whicraf53";
       buildDepends = [ mtl ];
       homepage = "http://repetae.net/computer/frisby/";
       description = "Linear time composable parser for PEG grammars";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "frquotes" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "frquotes";
       version = "0.2.1";
       sha256 = "0s5cb0m6xgf9zfch75nzk9b8lvghl4nc5dk35xkakq6ys3zizw6c";
       isLibrary = true;
       isExecutable = true;
       description = "Lexical extension for Quasi-Quotations using French-Quotes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fs-events" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fs-events";
       version = "0.1";
       sha256 = "0jw6cx9fzzs8r20acjq8nq8zjhwiwnvg1b0kc97c2sij1bhw6pw4";
       homepage = "http://github.com/nkpart/fs-events";
       description = "A haskell binding to the FSEvents API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fsharp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fsharp";
       version = "0.0.4";
       sha256 = "1scmvhbsn988x6j4a94ibg1c7adrxf8lzn06n9n1iv62bjd450m3";
       description = "some F# operators, high priority pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fsmActions" = callPackage
    ({ mkDerivation, fgl, filepath, graphviz, MissingH, mtl, parsec }:
     mkDerivation {
       pname = "fsmActions";
       version = "0.4.4";
       sha256 = "05713wj1s1307brqkbnapqi42dva55kcjgb8n3x6yirpfp6lhdsc";
       buildDepends = [ fgl filepath graphviz MissingH mtl parsec ];
       homepage = "http://projects.haskell.org/fsmActions/";
       description = "Finite state machines and FSM actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fsnotify" = callPackage
    ({ mkDerivation, async, hinotify, system-fileio, system-filepath
     , tasty, tasty-hunit, temporary-rc, text, time
     }:
     mkDerivation {
       pname = "fsnotify";
       version = "0.1.0.3";
       sha256 = "0m6jyg45azk377jklgwyqrx95q174cxd5znpyh9azznkh09wq58z";
       buildDepends = [
         async hinotify system-fileio system-filepath text time
       ];
       testDepends = [
         async system-fileio system-filepath tasty tasty-hunit temporary-rc
       ];
       description = "Cross platform library for file change notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fst" = callPackage
    ({ mkDerivation, haskeline, mtl, QuickCheck, transformers }:
     mkDerivation {
       pname = "fst";
       version = "0.10.0.0";
       sha256 = "14135p69zjn0f0300q09g79dm9vgrmvgnjwdhy7f58z0blhahibs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskeline mtl transformers ];
       testDepends = [ QuickCheck ];
       homepage = "http://www.cse.chalmers.se/alumni/markus/fstStudio/";
       description = "Finite state transducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fsutils" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "fsutils";
       version = "0.1.2";
       sha256 = "07lx4928d1fnjbpfmky4jhhk7sqj98b11vdbv4f67p3bwfn5lrp8";
       buildDepends = [ filepath ];
       homepage = "https://github.com/Raynes/fsutils";
       description = "File system utilities for Haskell that are missing from built in libraries";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fswatcher" = callPackage
    ({ mkDerivation, fsnotify, system-filepath }:
     mkDerivation {
       pname = "fswatcher";
       version = "0.1.2";
       sha256 = "1b6pm3jfyi5lbrpjv8n6z970xs11h61hj1g5ph54fhsqd2wvmpc2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ fsnotify system-filepath ];
       homepage = "http://www.github.com/ehamberg/fswatcher/";
       description = "Watch a file/directory and run a command when it's modified";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ftdi" = callPackage
    ({ mkDerivation, base-unicode-symbols, safe, transformers, usb }:
     mkDerivation {
       pname = "ftdi";
       version = "0.2.0.1";
       sha256 = "1gnfbngn3jwva6nvrcrzmi2n2vy4k55yh41zvg0kyb61w7kgm4m8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ base-unicode-symbols safe transformers usb ];
       description = "A thin layer over USB to communicate with FTDI chips";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ftp-conduit" = callPackage
    ({ mkDerivation, byteorder, conduit, MissingH, network
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "ftp-conduit";
       version = "0.0.5";
       sha256 = "0gb65g46nr9haysy3dbrylka08fsz81yn7aiwwingc6wlp7d76dg";
       buildDepends = [
         byteorder conduit MissingH network transformers utf8-string
       ];
       homepage = "https://github.com/litherum/ftp-conduit";
       description = "FTP client package with conduit interface based off http-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ftphs" = callPackage
    ({ mkDerivation, hslogger, MissingH, mtl, network, parsec
     , regex-compat
     }:
     mkDerivation {
       pname = "ftphs";
       version = "1.0.9.1";
       sha256 = "1whvawaifhi5xgmiagdayjf7m6p6vs71mvc4a4csd4vzzjr0a2yf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         hslogger MissingH mtl network parsec regex-compat
       ];
       homepage = "http://software.complete.org/ftphs";
       description = "FTP Client and Server Library";
       license = "LGPL";
     }) {};

  "ftree" = callPackage
    ({ mkDerivation, ShowF, type-unary }:
     mkDerivation {
       pname = "ftree";
       version = "0.1.3";
       sha256 = "1ma87jnwsgzlr7z6ac303i0qy9i2lywvjgb2zjv9qgnbkf18pg3m";
       buildDepends = [ ShowF type-unary ];
       homepage = "https://github.com/conal/ftree/";
       description = "Depth-typed functor-based trees, both top-down and bottom-up";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ftshell" = callPackage
    ({ mkDerivation, free-theorems, mtl, Shellac, Shellac-readline }:
     mkDerivation {
       pname = "ftshell";
       version = "0.3.0.1";
       sha256 = "1jrpb6dzq47xy6xvsisc7g1y53dc97s4l826f9sscxpdsrx3yp8r";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ free-theorems mtl Shellac Shellac-readline ];
       description = "Shell interface to the FreeTheorems library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "fugue" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fugue";
       version = "0.1";
       sha256 = "0g0qy0lcixbjm5srmfl1dnci4m09zwqcs5dpknpnsdc4b4l3925r";
       description = "A recapitulated prelude with minimal dependencies and profligate exports";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "full-sessions" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "full-sessions";
       version = "0.6.2.1";
       sha256 = "0irm1zrggjl9zrapzxfl3kj32d81k30c8nbmr3bf9ramjg65xm90";
       buildDepends = [ network ];
       homepage = "http://www.agusa.i.is.nagoya-u.ac.jp/person/sydney/full-sessions.html";
       description = "a monad for protocol-typed network programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "full-text-search" = callPackage
    ({ mkDerivation, alex, happy, QuickCheck, tasty, tasty-quickcheck
     , text, vector
     }:
     mkDerivation {
       pname = "full-text-search";
       version = "0.2.1.1";
       sha256 = "1rz4gimbk32677158321xs36pkc5ywjhm2sisw8hrwa3zlfjkrfc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ text vector ];
       testDepends = [ QuickCheck tasty tasty-quickcheck text vector ];
       buildTools = [ alex happy ];
       description = "In-memory full text search engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fullstop" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, split, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "fullstop";
       version = "0.1.4";
       sha256 = "10452kdl98igk2y48bb2ligj8nk7gpjcsf0nsiifvpjbfxv4gakc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ split ];
       testDepends = [
         HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://hub.darcs.net/kowey/fullstop";
       description = "Simple sentence segmenter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "funcmp" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "funcmp";
       version = "1.7";
       sha256 = "1rna7x7lw36fv5pyq0zn4b472mh11r0bszzji13wm3byhhmzs04k";
       buildDepends = [ filepath ];
       homepage = "http://savannah.nongnu.org/projects/funcmp/";
       description = "Functional MetaPost";
       license = "GPL";
     }) {};

  "function-combine" = callPackage
    ({ mkDerivation, data-type }:
     mkDerivation {
       pname = "function-combine";
       version = "0.1.0";
       sha256 = "1m8bmqxb9kar3y8zv22qs2a6kzd636m5li1r2q4y6pps0nglv9i9";
       buildDepends = [ data-type ];
       description = "Combining functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "function-instances-algebra" = callPackage
    ({ mkDerivation, numeric-prelude }:
     mkDerivation {
       pname = "function-instances-algebra";
       version = "0.1";
       sha256 = "0dxym6xrylngw8r5spi246nmi8fvvxxx776qismcr04zqshv7ygw";
       buildDepends = [ numeric-prelude ];
       homepage = "github.com/kreuzschlitzschraubenzieher/function-instances-algebra";
       description = "Instances of the Algebra.* classes for functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "functional-arrow" = callPackage
    ({ mkDerivation, HList }:
     mkDerivation {
       pname = "functional-arrow";
       version = "0.0";
       sha256 = "1la9xqm5gs6a6cb18wyx9wr0nx6p5ryhczvb72d0zm6xrjrf0r5s";
       buildDepends = [ HList ];
       description = "Combinators that allow for a more functional/monadic style of Arrow programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "functor-apply" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "functor-apply";
       version = "0.11";
       sha256 = "0jshf7and80p0gq26zz83xj4p3ff8lppa5252qg0646xsr06lfkr";
       homepage = "http://comonad.com/reader/";
       description = "This package has been subsumed by semigroupoids";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "functor-combo" = callPackage
    ({ mkDerivation, data-inttrie, lub, type-unary, TypeCompose }:
     mkDerivation {
       pname = "functor-combo";
       version = "0.3.5";
       sha256 = "1q93chk6bj43dym8v620sdcpwfzw4q1ws3jcry84h33ymlpwqnpp";
       buildDepends = [ data-inttrie lub type-unary TypeCompose ];
       description = "Functor combinators with tries & zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "functor-infix" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "functor-infix";
       version = "0.0.1";
       sha256 = "1f8m4nxlr2il9j0ilgw91fhp6mmz5xqlhylavncqwvbcq82362dc";
       homepage = "https://github.com/fmap/functor-infix";
       description = "Compositions of functors";
       license = stdenv.lib.licenses.mit;
     }) {};

  "functorm" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "functorm";
       version = "1.0.1";
       sha256 = "1aa4f6yp4vrrrs3rswhjxw2gij3mwn8yf299kgv42wd03xazyxrs";
       description = "Data.FunctorM (compatibility package)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "functors" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "functors";
       version = "0.1";
       sha256 = "0nfnjxihn0nhj0rhi1wvqax1f95wskr3fwb7c2clz4lvsma6bfg6";
       homepage = "https://github.com/aristidb/functors";
       description = "(.:) and friends, syntax for Functor and Applicative.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "funion" = callPackage
    ({ mkDerivation, filepath, HFuse }:
     mkDerivation {
       pname = "funion";
       version = "0.0.2";
       sha256 = "0pgl4fg29xg7g2pdyjqmi7qlpzcs25ggwg6d9y4fzbc7fzh31wxv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath HFuse ];
       homepage = "http://github.com/nathanwiegand/funion";
       description = "A unioning file-system using HFuse";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "funpat" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "funpat";
       version = "0.1";
       sha256 = "0zblrfg8mfbc1hzxb36hk2lb3c167xmpcvg8h595m9kjpdmj4ayw";
       buildDepends = [ mtl ];
       description = "A generalization of pattern matching";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "funsat" = callPackage
    ({ mkDerivation, bimap, bitset, fgl, mtl, parse-dimacs, QuickCheck
     , random, time
     }:
     mkDerivation {
       pname = "funsat";
       version = "0.6.2";
       sha256 = "1hyyx3ivrhw5svklyl36qzbcd0wwx4978znvn42lsl53273ds5n3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bimap bitset fgl mtl parse-dimacs QuickCheck random time
       ];
       homepage = "http://github.com/dbueno/funsat";
       description = "A modern DPLL-style SAT solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "futun" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "futun";
       version = "0.1.0.2";
       sha256 = "1vfi30mlr0lds975wgq3197sv1qdwy6lvm6xaqwk28h5flmk28k1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network ];
       description = "Simple IP-over-UDP tunnel using TUNTAP";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "future" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "future";
       version = "2.0.0";
       sha256 = "1gvv1m6sfxdc28h4rzp5dh6hrz6nfh031nhs192606v8wg78m3ri";
       homepage = "http://hackage.haskell.org/cgi-bin/hackage-scripts/package/future";
       description = "Supposed to mimics and enhance proposed C++ \"future\" features";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "future-resource" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "future-resource";
       version = "0.3.0.0";
       sha256 = "1w1ifjzfpqlqf7dzlnca67xhc1m1ddaflq3xin5xf9s2qnmsahvx";
       editedCabalFile = "10mh317aq1b1wq900cs34hcjydf0i22lzvmqj1hls4wndvr2m17r";
       description = "realtime resource handling with manual concurrency";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "fuzzcheck" = callPackage
    ({ mkDerivation, hspec, hspec-expectations, HUnit, lifted-base
     , monad-control, QuickCheck, random, transformers
     }:
     mkDerivation {
       pname = "fuzzcheck";
       version = "0.1.1";
       sha256 = "0qfr4f0b50l368b45yzwhqd4g2y1kvfrfj4hr84cdxcwdrwn9mpc";
       buildDepends = [
         lifted-base monad-control QuickCheck random transformers
       ];
       testDepends = [ hspec hspec-expectations HUnit QuickCheck ];
       homepage = "https://github.com/fpco/fuzzcheck";
       description = "A simple checker for stress testing monadic code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "fuzzy-timings" = callPackage
    ({ mkDerivation, glpk-hs, HUnit, mtl, QuickCheck, random
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time
     }:
     mkDerivation {
       pname = "fuzzy-timings";
       version = "0.0.1";
       sha256 = "1sm4g04y9n8r61q2sqa91n87hh32kpcn2r5zjlvdy7qxc11lrmj7";
       buildDepends = [ glpk-hs mtl random time ];
       testDepends = [
         HUnit mtl QuickCheck random test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://github.com/tlaitinen/fuzzy-timings";
       description = "Translates high-level definitions of \"fuzzily\" scheduled objects (e.g. play this commercial 10 times per hour between 9:00-13:00) to a list of accurately scheduled objects using glpk-hs.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "fuzzytime" = callPackage
    ({ mkDerivation, cmdargs }:
     mkDerivation {
       pname = "fuzzytime";
       version = "0.7.7";
       sha256 = "16ybyzki390g2172d3f48vyr1gr27grkvs1jjb6cblws34n5g2pr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs ];
       description = "A 'ten past six' style clock";
       license = "GPL";
     }) {};

  "g-npm" = callPackage
    ({ mkDerivation, HTTP, json }:
     mkDerivation {
       pname = "g-npm";
       version = "0.1.0";
       sha256 = "1blr3xbqn8fa59av4kgfp2y3szky40v5qmw3k9gsr2barrvkjqz0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP json ];
       description = "Generate Gentoo ebuilds from NodeJS/npm packages";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gact" = callPackage
    ({ mkDerivation, biopsl, cmdargs, hashable, unordered-containers }:
     mkDerivation {
       pname = "gact";
       version = "0.2";
       sha256 = "0p1rb24yldkjnkrygjb43g63vfgzq2bix7rrmiqyrdwb37s65ixq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ biopsl cmdargs hashable unordered-containers ];
       description = "General Alignment Clustering Tool";
       license = "GPL";
     }) {};

  "game-probability" = callPackage
    ({ mkDerivation, probability, random }:
     mkDerivation {
       pname = "game-probability";
       version = "1.1";
       sha256 = "1wl29h702g79kwy4ca35x1q37aaj3rphf1i9vdm2hmd44bzrwvkk";
       buildDepends = [ probability random ];
       description = "Simple probability library for dice rolls, card games and similar";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "game-tree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "game-tree";
       version = "0.1.0.0";
       sha256 = "1g8gkp4g18dr6m0scilhgdwg0zh0f9a2q3b1sk0gh4m3jw6gj4m5";
       description = "Searching game trees with alpha-beta pruning";
       license = "GPL";
     }) {};

  "gameclock" = callPackage
    ({ mkDerivation, cairo, glib, gtk, time }:
     mkDerivation {
       pname = "gameclock";
       version = "1.0.4";
       sha256 = "192rn2d8bil8wqilnaqxba8nzq0fjlbf0innv6rdcjs1kxw1ga0l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo glib gtk time ];
       description = "Game clock that shows two analog clock faces";
       license = "GPL";
     }) {};

  "gamma" = callPackage
    ({ mkDerivation, continued-fractions, converge, vector }:
     mkDerivation {
       pname = "gamma";
       version = "0.9.0.2";
       sha256 = "09z4m0qsf1aa2al7x3gl7z3xy6r4m0xqhnz8b917dxa104zw6flq";
       buildDepends = [ continued-fractions converge vector ];
       homepage = "https://github.com/mokus0/gamma";
       description = "Gamma function and related functions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "gang-of-threads" = callPackage
    ({ mkDerivation, mtl, stm, transformers }:
     mkDerivation {
       pname = "gang-of-threads";
       version = "3.2.1";
       sha256 = "0gj7ln0xq1a7zzxhyl636z854xfq714kmh2ld30ll0dskr701l1p";
       buildDepends = [ mtl stm transformers ];
       description = "Non-deterministic parallelism with bags";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "garepinoh" = callPackage
    ({ mkDerivation, haskeline, transformers }:
     mkDerivation {
       pname = "garepinoh";
       version = "0.9.9.2.1";
       sha256 = "1cylwaj62gmcjczw5g44k9x6g5bamgk88h2arbbripzphhaf7cm7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskeline transformers ];
       homepage = "http://hub.darcs.net/mekeor/Garepinoh/text/README.md";
       description = "reverse prefix notation calculator and calculation library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "garsia-wachs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "garsia-wachs";
       version = "1.2";
       sha256 = "0mks5nwc19i0wsc5hhxh0ji2bh0224y3r89b3p9dfzzn64n3za6v";
       description = "A Functional Implementation of the Garsia-Wachs Algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gbu" = callPackage
    ({ mkDerivation, fgl, Graphalyze, mtl, regex-posix }:
     mkDerivation {
       pname = "gbu";
       version = "0.1";
       sha256 = "0zqgq5hr3vmajijf1vmc1s1lwilnymwvv493rra4fl0zy28k5cz6";
       buildDepends = [ fgl Graphalyze mtl regex-posix ];
       homepage = "http://www.daneel0yaitskov.000space.com";
       description = "planar graph embedding into a plane";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gc-monitoring-wai" = callPackage
    ({ mkDerivation, aeson, blaze-builder, conduit, http-types, text
     , transformers, unordered-containers, wai
     }:
     mkDerivation {
       pname = "gc-monitoring-wai";
       version = "0.1.2";
       sha256 = "04i86mngz0s6x5j36vs2nrxivqayqjfa2ppk016r4ffs4mi7i4va";
       buildDepends = [
         aeson blaze-builder conduit http-types text transformers
         unordered-containers wai
       ];
       homepage = "https://github.com/yihuang/gc-monitoring-wai";
       description = "a wai application to show GHC.GCStats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gconf" = callPackage
    ({ mkDerivation, gconf, glib, gtk2hs-buildtools, text }:
     mkDerivation {
       pname = "gconf";
       version = "0.13.0.0";
       sha256 = "1xjnd15vf75dh6zfcgks3fwgjs0nf117g78jhb0364a3f7w1xvhn";
       buildDepends = [ glib text ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ gconf ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GNOME configuration database system";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gconf; };

  "gd" = callPackage
    ({ mkDerivation, expat, fontconfig, freetype, gd, libjpeg, libpng
     , zlib
     }:
     mkDerivation {
       pname = "gd";
       version = "3000.7.3";
       sha256 = "1dkzv6zs00qi0jmblkw05ywizc8y3baz7pnz0lcqn1cs1mhcpbhl";
       extraLibraries = [
         expat fontconfig freetype gd libjpeg libpng zlib
       ];
       description = "A Haskell binding to a subset of the GD graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) gd zlib; };

  "gdiff" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "gdiff";
       version = "1.1";
       sha256 = "1d0d8f8bfw7ld6a1d5y6syzdha5qsm909mqzd5gfqcbi2wnh8aqc";
       homepage = "https://github.com/eelco/gdiff";
       description = "Generic diff and patch";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gdiff-ig" = callPackage
    ({ mkDerivation, instant-generics }:
     mkDerivation {
       pname = "gdiff-ig";
       version = "0.1.1";
       sha256 = "1ma9w9ypk078vvqwlfgkwcw962xha1g1fx4abji1b7km09p58jm2";
       buildDepends = [ instant-generics ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/InstantGenerics";
       description = "Generic diff for the instant-generics library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gdiff-th" = callPackage
    ({ mkDerivation, gdiff, mtl, th-expand-syns, uniplate }:
     mkDerivation {
       pname = "gdiff-th";
       version = "0.1.0.7";
       sha256 = "1ihbz95k01giqbpbp1hddx71pkhz63pz5q4b71gv6z2vvvh34s2w";
       buildDepends = [ gdiff mtl th-expand-syns uniplate ];
       testDepends = [ gdiff mtl th-expand-syns uniplate ];
       homepage = "https://github.com/jfischoff/gdiff-th";
       description = "Generate gdiff GADTs and Instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gearbox" = callPackage
    ({ mkDerivation, GLUT, OpenGLRaw, Vec }:
     mkDerivation {
       pname = "gearbox";
       version = "1.0.0.2";
       sha256 = "15ip1vb1b82ympfylm1m1hxw2nkcmhnqhj2bl4v8mw61zcvznky7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT OpenGLRaw Vec ];
       description = "zooming rotating fractal gears graphics demo";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "geek" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, air, air-extra, air-th, curl
     , data-default, filepath, fsnotify, Glob, hack2, hack2-contrib
     , miku, moe, mtl, random, safe, system-filepath, text, text-icu
     , time
     }:
     mkDerivation {
       pname = "geek";
       version = "1.1.0.1";
       sha256 = "09ajjb12ziknfrw2m4plm10r99crq1hhizymni441x58wprpcdm2";
       buildDepends = [
         aeson aeson-pretty air air-extra air-th curl data-default filepath
         fsnotify Glob hack2 hack2-contrib miku moe mtl random safe
         system-filepath text text-icu time
       ];
       homepage = "http://github.com/nfjinjing/geek";
       description = "Geek blog engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geek-server" = callPackage
    ({ mkDerivation, air, data-default, geek, hack2
     , hack2-handler-snap-server, pandoc, text
     }:
     mkDerivation {
       pname = "geek-server";
       version = "1.1";
       sha256 = "1951jw8la59c7qvjpx8x898l7hnwc51c4264mmw0h402ik233bp2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         air data-default geek hack2 hack2-handler-snap-server pandoc text
       ];
       homepage = "http://github.com/nfjinjing/geek";
       description = "Geek blog engine server";
       license = "GPL";
     }) {};

  "gemstone" = callPackage
    ({ mkDerivation, bitmap, bitmap-opengl, FTGL, lens, linear, OpenGL
     , random, SDL, SDL-image, stb-image, transformers
     }:
     mkDerivation {
       pname = "gemstone";
       version = "0.3.0.1";
       sha256 = "0y9ilxpkyb42iddks31k1f6vjkm78z6yaj2yd9ppis42r2advg40";
       buildDepends = [
         bitmap bitmap-opengl FTGL lens linear OpenGL random SDL SDL-image
         stb-image transformers
       ];
       homepage = "http://corbinsimpson.com/";
       description = "A simple library of helpers for SDL+GL games";
       license = "GPL";
     }) {};

  "gencheck" = callPackage
    ({ mkDerivation, combinat, ieee754, memoize, random, transformers
     }:
     mkDerivation {
       pname = "gencheck";
       version = "0.1.1";
       sha256 = "1fa1p13zmqqhlcakcy73ypasn4ircg1x5p3q1p5mklvfjifphfir";
       buildDepends = [ combinat ieee754 memoize random transformers ];
       homepage = "http://github.com/JacquesCarette/GenCheck";
       description = "A testing framework inspired by QuickCheck and SmallCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gender" = callPackage
    ({ mkDerivation, attoparsec, text }:
     mkDerivation {
       pname = "gender";
       version = "0.1.1.0";
       sha256 = "0sfl3729v03s5ykd8ijv4yrf8lzja5hyaphsfgk96gcx3zvd1a0q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec text ];
       homepage = "https://github.com/womfoo/gender";
       description = "Identify a persons gender by their first name";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "general-prelude" = callPackage
    ({ mkDerivation, lens, pointless-fun, strict, system-filepath }:
     mkDerivation {
       pname = "general-prelude";
       version = "0.1.2";
       sha256 = "0km8nrd7pili8s5fz68xpb6nw9mfk0phgwaxnflk6a78vz9ic76d";
       buildDepends = [ lens pointless-fun strict system-filepath ];
       description = "Prelude replacement using generalized type classes where possible";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generator" = callPackage
    ({ mkDerivation, List, transformers }:
     mkDerivation {
       pname = "generator";
       version = "0.5.4";
       sha256 = "1yphw9ira01c0989gq1hrh53xcd3qvq8fib5k1bpsmb313j7x8b8";
       buildDepends = [ List transformers ];
       homepage = "http://github.com/yairchu/generator/tree";
       description = "Python-generators notation for creation of monadic lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generators" = callPackage
    ({ mkDerivation, mtl, random }:
     mkDerivation {
       pname = "generators";
       version = "1.0.3";
       sha256 = "0i51xx2hhjqjdvyzy2jza921jcfhy37azyp1cfaakvrj9kxl2w2q";
       buildDepends = [ mtl random ];
       homepage = "http://liamoc.net/pdf/Generator.pdf";
       description = "Actually useful monadic random value generators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, generic-deriving, mtl, tagged
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "generic-aeson";
       version = "0.2.0.2";
       sha256 = "1x58c7xgdc1asg4n61fpikn7jvspyqawykq4q49xhsp5dp11lzzh";
       buildDepends = [
         aeson attoparsec generic-deriving mtl tagged text
         unordered-containers vector
       ];
       description = "Derivation of Aeson instances using GHC generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-binary" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "generic-binary";
       version = "1.0.1";
       sha256 = "1h6xs56c351137mjc3hdba7yfcw8jy9dvzj0vdrgwm0dprn0xh29";
       buildDepends = [ binary ];
       description = "Generic Data.Binary derivation using GHC generics.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-church" = callPackage
    ({ mkDerivation, HUnit, test-framework, test-framework-hunit }:
     mkDerivation {
       pname = "generic-church";
       version = "0.3.0.0";
       sha256 = "1cw48dnw2nbnm3vr5xcsz7nma6g8dxvwvv7hwm63jikd9jgisnac";
       testDepends = [ HUnit test-framework test-framework-hunit ];
       description = "Automatically convert Generic instances to and from church representations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "generic-deepseq" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "generic-deepseq";
       version = "2.0.1.1";
       sha256 = "1yajkzp79ri5i7n5ynv0i6spxyg6kyi6qvqj46brlgjag98526iv";
       description = "Generic deep evaluation of data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-deriving" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "generic-deriving";
       version = "1.7.0";
       sha256 = "145bixg4jr0hhw32jznrvl4qjjk7bgjbxlfznqra1s1rnmcyr5v6";
       description = "Generic programming library for generalised deriving";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-lucid-scaffold" = callPackage
    ({ mkDerivation, lucid, text }:
     mkDerivation {
       pname = "generic-lucid-scaffold";
       version = "0.0.1";
       sha256 = "13lry3hqqrqgk5z9dc6q6hr70iqky4ssra2l71y51gnrg1kprkrz";
       buildDepends = [ lucid text ];
       description = "General-purpose web page scaffold for Lucid";
       license = stdenv.lib.licenses.mit;
     }) {};

  "generic-maybe" = callPackage
    ({ mkDerivation, deepseq, doctest, filepath, generic-deriving
     , hlint, mtl, nats, parallel, semigroups, simple-reflect, split
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "generic-maybe";
       version = "0.3.0.4";
       sha256 = "1gs89wzs3288l2p24pj5yi68xyy2kj3aczj31zk6v9xi3bwb73x1";
       testDepends = [
         deepseq doctest filepath generic-deriving hlint mtl nats parallel
         semigroups simple-reflect split text unordered-containers vector
       ];
       homepage = "https://github.com/jfischoff/generic-maybe";
       description = "A generic version of Data.Maybe";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-server" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "generic-server";
       version = "0.1";
       sha256 = "0bl3gfqdw6sdwcailzkzmpz433cpxf6np9w9qnkwwa05xhcpd2k6";
       buildDepends = [ network ];
       description = "Simple generic TCP/IP server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-storable" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "generic-storable";
       version = "0.1.0.0";
       sha256 = "016gg232r453i7grbjg2hb69ww8jqgafnq32f38lv7l81dgzwfxj";
       testDepends = [ hspec QuickCheck ];
       description = "Generic implementation of Storable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generic-tree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "generic-tree";
       version = "15329.2";
       sha256 = "1frwwa45kahflnw2cgs8nb8jfxgrxw0n9i7h9cakpqzgbywy9b28";
       description = "Generic Tree data type";
       license = "LGPL";
     }) {};

  "generic-xml" = callPackage
    ({ mkDerivation, HaXml, mtl, syb-with-class }:
     mkDerivation {
       pname = "generic-xml";
       version = "0.1";
       sha256 = "08fy9wc90wcnr74wbr7q3pfr0bigrzhchx158p1ji3gagb2n2njd";
       buildDepends = [ HaXml mtl syb-with-class ];
       description = "Marshalling Haskell values to/from XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "generics-sop" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "generics-sop";
       version = "0.1.0.3";
       sha256 = "0wvrav5armspfp6iixns1db45xfpqicx74asi14a2gnl28yqmfpl";
       description = "Generic Programming using True Sums of Products";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "genericserialize" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "genericserialize";
       version = "0.1";
       sha256 = "0zpb5rq2zvfsb0wlp9q4cckjkz6sdrngpir49d0sr06pivh8s6cl";
       description = "Serialization library using Data.Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "genetics" = callPackage
    ({ mkDerivation, random-fu }:
     mkDerivation {
       pname = "genetics";
       version = "0.0.2";
       sha256 = "0rq1m7psvs2r35mnz7gwmsvzyd3jv44bqp0zhq8l7mq2pq2x7dhv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random-fu ];
       description = "A Genetic Algorithm library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geni-gui" = callPackage
    ({ mkDerivation, cabal-macosx, filepath, GenI, graphviz, hslogger
     , json, mtl, text, transformers, wx, wxcore, yaml-light
     }:
     mkDerivation {
       pname = "geni-gui";
       version = "0.24.1";
       sha256 = "1kng7bv8amch6bswhica6xhmavc0r5phg402lg76xwz7ywrsc6y3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cabal-macosx filepath GenI graphviz hslogger json mtl text
         transformers wx wxcore yaml-light
       ];
       homepage = "http://projects.haskell.org/GenI";
       description = "GenI graphical user interface";
       license = "GPL";
     }) {};

  "geni-util" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, cmdargs, filepath, GenI
     , geniserver, HTTP, http-streams, io-streams, json, text
     }:
     mkDerivation {
       pname = "geni-util";
       version = "0.24.1";
       sha256 = "0djfckf2k7wvnzsl7yy6f33csa82c7ps1mah6bdnw31bqijxiyjd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-html blaze-markup cmdargs filepath GenI geniserver HTTP
         http-streams io-streams json text
       ];
       homepage = "http://kowey.github.io/GenI";
       description = "Companion tools for use with the GenI surface realiser";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "geniconvert" = callPackage
    ({ mkDerivation, binary, GenI, HaXml, HUnit, mtl, parsec
     , QuickCheck, utf8-string
     }:
     mkDerivation {
       pname = "geniconvert";
       version = "0.20";
       sha256 = "0brnh6f8zdpn37fjdmnpbdvb75vmaf6iq7i9vpv4a8g7asc425wd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary GenI HaXml HUnit mtl parsec QuickCheck utf8-string
       ];
       homepage = "http://wiki.loria.fr/wiki/GenI";
       description = "Conversion utility for the GenI generator";
       license = "GPL";
     }) {};

  "genifunctors" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "genifunctors";
       version = "0.2.2.0";
       sha256 = "0j0pxpb46iq5vqbr5x1cjng9dpjcbd3q2r53ds27b956pyi82m19";
       buildDepends = [ mtl ];
       testDepends = [ mtl ];
       homepage = "https://github.com/danr/genifunctors";
       description = "Generate generalized fmap, foldMap and traverse";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geniplate" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "geniplate";
       version = "0.6.0.5";
       sha256 = "01cwyf5kql4hf76p1ssqpmhaxyl7rmnmqwv644wgd0j8km8b6szc";
       buildDepends = [ mtl ];
       description = "Use Template Haskell to generate Uniplate-like functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geniserver" = callPackage
    ({ mkDerivation, cmdargs, GenI, http-types, json, snap-core
     , snap-server, text, transformers, utf8-string
     }:
     mkDerivation {
       pname = "geniserver";
       version = "0.24.1";
       sha256 = "0r12iz8zy3vbcjphprzydvf6rw94qdk2mcl4am9agmyw2g5gqcfd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs GenI http-types json snap-core snap-server text
         transformers utf8-string
       ];
       description = "Simple HTTP server for GenI results";
       license = "GPL";
     }) {};

  "genprog" = callPackage
    ({ mkDerivation, MonadRandom, syb, syz }:
     mkDerivation {
       pname = "genprog";
       version = "0.1.0.2";
       sha256 = "1a9b2h4swfwx5zwcyr2zdhxdxi9f68pwpglijxhxb5javjc4dppr";
       buildDepends = [ MonadRandom syb syz ];
       homepage = "http://github.com/jsnajder/genprog";
       description = "Genetic programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gentlemark" = callPackage
    ({ mkDerivation, HUnit, parsec, transformers }:
     mkDerivation {
       pname = "gentlemark";
       version = "1.0.0";
       sha256 = "1cb9si5axwqi1d893vp6n2mr68isdxc9qp6dfygy0v6hci2spnmm";
       buildDepends = [ parsec transformers ];
       testDepends = [ HUnit parsec transformers ];
       homepage = "http://github.com/andriyp/gentlemark";
       description = "Gentle markup language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geocalc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "geocalc";
       version = "1.0.0";
       sha256 = "1bvbvrkxh8dvm796ilpp294qlacid6aap2ljdi9pmz1lkf20fxjg";
       description = "Libary for calculating distances between two coordinates in WSG84";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geodetic" = callPackage
    ({ mkDerivation, coordinate, doctest, filepath, lens, optional
     , QuickCheck, radian
     }:
     mkDerivation {
       pname = "geodetic";
       version = "0.1.4";
       sha256 = "07l6yha31l0ahd6jhlj09vclms8km4q82xq2mfx2a3lbv2kffcfz";
       buildDepends = [ coordinate lens optional radian ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/NICTA/geodetic";
       description = "Geodetic calculations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geodetics" = callPackage
    ({ mkDerivation, dimensional, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "geodetics";
       version = "0.0.2";
       sha256 = "09abyh6xgfq6cgrkk16xq5djn9ikjx40vaz12hpi97xgkybk1nir";
       buildDepends = [ dimensional ];
       testDepends = [
         dimensional HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/PaulJohnson/geodetics";
       description = "Terrestrial coordinate systems and associated calculations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geohash" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "geohash";
       version = "1.0.1";
       sha256 = "1pdx4pnq893kkjmgg0bgh9bfvfqdvzfq5fi02zfyhw3h8h4k05v4";
       description = "Geohash latitudes and longitudes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "geojson" = callPackage
    ({ mkDerivation, aeson, doctest, filepath, hlint, lens, QuickCheck
     , semigroups, text, transformers, validation, vector
     }:
     mkDerivation {
       pname = "geojson";
       version = "1.2.0";
       sha256 = "1i6fyqxqksq657nd3m19qk690l74j4frvsvwhbdyjs07rc0xvbli";
       buildDepends = [
         aeson lens semigroups text transformers validation vector
       ];
       testDepends = [ doctest filepath hlint QuickCheck ];
       homepage = "https://github.com/domdere/hs-geojson";
       description = "A thin GeoJSON Layer above the aeson library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "getemx" = callPackage
    ({ mkDerivation, curl, filepath, hxt, mtl, time }:
     mkDerivation {
       pname = "getemx";
       version = "0.1";
       sha256 = "1qgq465ck4z0mix3ari9n7a5qx5xc1zii4hmfsp093vx3qlc5nwm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ curl filepath hxt mtl time ];
       homepage = "http://bitbucket.org/kenko/getemx";
       description = "Fetch from emusic using .emx files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "getflag" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "getflag";
       version = "1.0";
       sha256 = "0jsr8cmbnllcswdvf1rp11sc6cpjhwr22x7kx9sk3dw8bv772jjc";
       description = "Command-line parser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "getopt-simple" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "getopt-simple";
       version = "0.1.0.2";
       sha256 = "1pf40nc3jzprv4wn9h8mr0nhzxzilffgkapxg3k0qksfxydzv7pp";
       homepage = "https://bitbucket.org/dpwiz/getopt-simple";
       description = "A \"System.Console.GetOpt\" wrapper to make simple use case easy.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gf" = callPackage
    ({ mkDerivation, alex, Cabal, cgi, filepath, fst, happy, haskeline
     , HTF, httpd-shed, HUnit, json, lifted-base, mtl, network, parallel
     , random, time, time-compat, utf8-string
     }:
     mkDerivation {
       pname = "gf";
       version = "3.6";
       sha256 = "10s8vgca36jz7b9sbd3n1in13xifwc7h42qwd58yq1lvk3j1fizx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cgi filepath fst haskeline httpd-shed json lifted-base mtl network
         parallel random time time-compat utf8-string
       ];
       testDepends = [ Cabal filepath HTF HUnit ];
       buildTools = [ alex happy ];
       homepage = "http://www.grammaticalframework.org/";
       description = "Grammatical Framework";
       license = "unknown";
     }) {};

  "ggtsTC" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "ggtsTC";
       version = "0.5";
       sha256 = "0k5in0r3lwjr5yn4ayw5ssdvinh7zwzsx6pfjdj246ngx1r7ydxj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec ];
       homepage = "http://a319-101.ipm.edu.mo/~wke/ggts/impl/";
       description = "A type checker and runtime system of rCOS/g (impl. of ggts-FCS).";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "ghc-core" = callPackage
    ({ mkDerivation, colorize-haskell, filepath, pcre-light }:
     mkDerivation {
       pname = "ghc-core";
       version = "0.5.6";
       sha256 = "11byidxq2mcqams9a7df0hwwlzir639mr1s556sw5rrbi7jz6d7c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ colorize-haskell filepath pcre-light ];
       homepage = "https://github.com/shachaf/ghc-core";
       description = "Display GHC's core and assembly output in a pager";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-core-html" = callPackage
    ({ mkDerivation, blaze-html, mtl, parsec }:
     mkDerivation {
       pname = "ghc-core-html";
       version = "0.1.1";
       sha256 = "0l0474kpzvzzwkbz9mcjl4fnasznb1crynjcsk3hmnjq8syhmm97";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ blaze-html mtl parsec ];
       homepage = "http://github.com/vincenthz/ghc-core-html";
       description = "Core to HTML display";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-datasize" = callPackage
    ({ mkDerivation, ghc-heap-view }:
     mkDerivation {
       pname = "ghc-datasize";
       version = "0.1.2";
       sha256 = "0bjdcfrk3q0rsy9wmw0b01q0vmbi9jsw1bxl4l78azs7xpk9yl03";
       buildDepends = [ ghc-heap-view ];
       homepage = "http://felsin9.de/nnis/ghc-datasize";
       description = "Determine the size of data structures in GHC's memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-dup" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ghc-dup";
       version = "0.1";
       sha256 = "0aw4wnbzfw031xqmq0lpi4zz2md1f43nj921ni91mhdl5xgqcajm";
       description = "Explicitly prevent sharing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-events" = callPackage
    ({ mkDerivation, binary, mtl }:
     mkDerivation {
       pname = "ghc-events";
       version = "0.4.3.0";
       sha256 = "128p651hp8v1i0iaccmfh3ap6lajcrzdihjb853s71pgnpal6izr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary mtl ];
       testDepends = [ binary mtl ];
       description = "Library and tool for parsing .eventlog files from GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-events-analyze" = callPackage
    ({ mkDerivation, diagrams-lib, diagrams-svg, filepath, ghc-events
     , lens, mtl, optparse-applicative, parsec, SVGFonts, th-lift
     , transformers
     }:
     mkDerivation {
       pname = "ghc-events-analyze";
       version = "0.2.1";
       sha256 = "0lf063p2wj2d1hxb5hx4bcid3a3ni3g9x8sglm5q5kfbmdk7awj4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         diagrams-lib diagrams-svg filepath ghc-events lens mtl
         optparse-applicative parsec SVGFonts th-lift transformers
       ];
       description = "Analyze and visualize event logs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-events-parallel" = callPackage
    ({ mkDerivation, binary, transformers }:
     mkDerivation {
       pname = "ghc-events-parallel";
       version = "0.5.0.1";
       sha256 = "181qnh6mm3pmlalf17g2g87gj7hyzf5pxzvix1cmap2f31x4p6by";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary transformers ];
       testDepends = [ binary transformers ];
       description = "Library and tool for parsing .eventlog files from parallel GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-gc-tune" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "ghc-gc-tune";
       version = "0.3";
       sha256 = "0ghp3f86m91zi6kl8zq157717s2p73nwdgln4aiclq830m72ys9w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       homepage = "http://code.haskell.org/~dons/code/ghc-gc-tune";
       description = "Graph performance of Haskell programs with different GC flags";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-heap-view" = callPackage
    ({ mkDerivation, binary, deepseq, transformers }:
     mkDerivation {
       pname = "ghc-heap-view";
       version = "0.5.3";
       sha256 = "1jcqi4gahxmhd61hl75wgb9dp99kxld68860jnd9x4hnp5cd33q0";
       buildDepends = [ binary transformers ];
       testDepends = [ deepseq ];
       postInstall = ''
         ensureDir "$out/share/ghci"
         ln -s "$out/share/$pname-$version/ghci" "$out/share/ghci/$pname"
       '';
       description = "Extract the heap representation of Haskell values and thunks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-imported-from" = callPackage
    ({ mkDerivation, Cabal, filepath, ghc-mod, ghc-paths, ghc-syb-utils
     , hspec, mtl, optparse-applicative, parsec, safe, syb, transformers
     }:
     mkDerivation {
       pname = "ghc-imported-from";
       version = "0.2.0.6";
       sha256 = "0y9gln7lbp8xqg5apfwfs95z3faawd236wqz69q8j7riwfra9bqm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath ghc-mod ghc-paths ghc-syb-utils hspec mtl
         optparse-applicative parsec safe syb transformers
       ];
       testDepends = [
         Cabal filepath ghc-mod ghc-paths ghc-syb-utils hspec mtl
         optparse-applicative parsec safe syb transformers
       ];
       homepage = "https://github.com/carlohamalainen/ghc-imported-from";
       description = "Find the Haddock documentation for a symbol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-make" = callPackage
    ({ mkDerivation, shake, unordered-containers }:
     mkDerivation {
       pname = "ghc-make";
       version = "0.3.1";
       sha256 = "0nbv6sdi68ifbm4kz9h78n1aybc8rllyinc2k63m7lzh0jfqkk4m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ shake unordered-containers ];
       homepage = "https://github.com/ndmitchell/ghc-make#readme";
       description = "Accelerated version of ghc --make";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-man-completion" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "ghc-man-completion";
       version = "0.0.0.3";
       sha256 = "08qyn6mpmkq1vdfrqhckfqc096jv21scss76x9zcss4hfbljfa0p";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec ];
       description = "Generate a bash completion from the GHC manpage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-mod" = callPackage
    ({ mkDerivation, async, Cabal, data-default, deepseq, djinn-ghc
     , doctest, emacs, filepath, ghc-paths, ghc-syb-utils
     , haskell-src-exts, hlint, hspec, io-choice, makeWrapper
     , monad-control, monad-journal, mtl, split, syb, temporary, text
     , time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "ghc-mod";
       version = "5.2.1.1";
       sha256 = "09dg54970s4n54xxmalr5a2g4r5jnwccl9984shmmv0vsr3h5k26";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async Cabal data-default deepseq djinn-ghc filepath ghc-paths
         ghc-syb-utils haskell-src-exts hlint io-choice monad-control
         monad-journal mtl split syb temporary text time transformers
         transformers-base
       ];
       testDepends = [
         Cabal deepseq djinn-ghc doctest filepath ghc-paths ghc-syb-utils
         haskell-src-exts hlint hspec io-choice monad-control monad-journal
         mtl split syb temporary text time transformers transformers-base
       ];
       buildTools = [ emacs makeWrapper ];
       configureFlags = "--datasubdir=ghc-mod-5.2.1.1";
       postInstall = ''
         cd $out/share/$pname-$version
         make
         rm Makefile
         cd ..
         ensureDir "$out/share/emacs"
         mv $pname-$version emacs/site-lisp
       '';
       homepage = "http://www.mew.org/~kazu/proj/ghc-mod/";
       description = "Happy Haskell Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-mtl" = callPackage
    ({ mkDerivation, exceptions, extensible-exceptions, mtl }:
     mkDerivation {
       pname = "ghc-mtl";
       version = "1.2.1.0";
       sha256 = "0h6r6gip9nsjlsq88wj105hhqliy7ac2dmmndsfzbjz07b03cklk";
       buildDepends = [ exceptions extensible-exceptions mtl ];
       homepage = "http://hub.darcs.net/jcpetruzza/ghc-mtl";
       description = "An mtl compatible version of the Ghc-Api monads and monad-transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-parmake" = callPackage
    ({ mkDerivation, filepath, HUnit, QuickCheck, temporary
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "ghc-parmake";
       version = "0.1.8";
       sha256 = "089ma8mjyvz61hr2907aihz8bh7h1pdmjrpm9smqmz8j5x72bsfc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath temporary ];
       testDepends = [
         filepath HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/23Skidoo/ghc-parmake";
       description = "A parallel wrapper for 'ghc --make'";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-parser" = callPackage
    ({ mkDerivation, cpphs, happy }:
     mkDerivation {
       pname = "ghc-parser";
       version = "0.1.3.0";
       sha256 = "13p09mj92jh4y0v2r672d49fmlz3l5r2r1lqg0jjy6kj045wcfdn";
       buildTools = [ cpphs happy ];
       patchPhase = ''
         substituteInPlace build-parser.sh --replace "/bin/bash" "$SHELL"
       '';
       homepage = "https://github.com/gibiansky/IHaskell";
       description = "Haskell source parser from GHC";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ghc-paths" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ghc-paths";
       version = "0.1.0.9";
       sha256 = "0ibrr1dxa35xx20cpp8jzgfak1rdmy344dfwq4vlq013c6w8z9mg";
       patches = [ ./ghc-paths-nix.patch ];
       description = "Knowledge of GHC's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-pkg-autofix" = callPackage
    ({ mkDerivation, Cabal, cmdargs, filepath, parsec, split }:
     mkDerivation {
       pname = "ghc-pkg-autofix";
       version = "0.2.0.1";
       sha256 = "0rm7vksfzwkpby1b8k2v745d7bylxbgspjhhfvdxc40a3rix8sz7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal cmdargs filepath parsec split ];
       description = "Simple utility to fix BROKEN package dependencies for cabal-install";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-pkg-lib" = callPackage
    ({ mkDerivation, Cabal, filepath, ghc-paths }:
     mkDerivation {
       pname = "ghc-pkg-lib";
       version = "0.2.1";
       sha256 = "1zj1wf1xsyv3jqpia59r6yfk4zqdj9za4b0808876c55krw1vf0c";
       buildDepends = [ Cabal filepath ghc-paths ];
       homepage = "https://github.com/JPMoresmau/ghc-pkg-lib";
       description = "Provide library support for ghc-pkg information";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-prim" = callPackage
    ({ mkDerivation, rts }:
     mkDerivation {
       pname = "ghc-prim";
       version = "0.3.1.0";
       sha256 = "1726hddr7lyklagni1f7m27yak35ailn1zy6401ripppj3m0f03b";
       buildDepends = [ rts ];
       description = "GHC primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-server" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ghc-server";
       version = "1.2";
       sha256 = "1hg5iddlh87hir5vqjby2bihah4xcyarsfcgff3gd8l2h7mqi2dn";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-srcspan-plugin" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ghc-srcspan-plugin";
       version = "0.2.0.0";
       sha256 = "14p2c20xsng1h7129fadvhxs2yy2c865x19vybmzsj5ibjrzrqk2";
       description = "Generic GHC Plugin for annotating Haskell code with source location data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-syb" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ghc-syb";
       version = "0.2.0.0";
       sha256 = "0rwx7l89r5yfi1187c0zgx1ph2rsagyvrizb1c0vnbyrwhpbslh0";
       homepage = "http://github.com/nominolo/ghc-syb";
       description = "Data and Typeable instances for the GHC API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-syb-utils" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "ghc-syb-utils";
       version = "0.2.2";
       sha256 = "03r4x3a4hjivxladlw23jk8s2pgfh85lqf196ks1ngyg6ih1g6lk";
       buildDepends = [ syb ];
       homepage = "http://github.com/nominolo/ghc-syb";
       description = "Scrap Your Boilerplate utilities for the GHC API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-time-alloc-prof" = callPackage
    ({ mkDerivation, attoparsec, text, time }:
     mkDerivation {
       pname = "ghc-time-alloc-prof";
       version = "0.0.0";
       sha256 = "0a3800pngsbjc0fxpbqps9caa7gp5956wfyh18ybarlpi0ah7d7r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec text time ];
       homepage = "https://github.com/maoe/ghc-time-alloc-prof";
       description = "Library for parsing GHC time and allocation profiling reports";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghc-vis" = callPackage
    ({ mkDerivation, cairo, deepseq, fgl, ghc-heap-view, graphviz, gtk
     , mtl, svgcairo, text, transformers, xdot
     }:
     mkDerivation {
       pname = "ghc-vis";
       version = "0.7.2.7";
       sha256 = "0kxkmbp71yx5mskzpcyjd8s2yq01q1q6dxmqzmwg6naalcpcbswv";
       buildDepends = [
         cairo deepseq fgl ghc-heap-view graphviz gtk mtl svgcairo text
         transformers xdot
       ];
       postInstall = ''
         ensureDir "$out/share/ghci"
         ln -s "$out/share/$pname-$version/ghci" "$out/share/ghci/$pname"
       '';
       homepage = "http://felsin9.de/nnis/ghc-vis";
       description = "Live visualization of data structures in GHCi";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghci-diagrams" = callPackage
    ({ mkDerivation, cairo, colour, diagrams, gtk }:
     mkDerivation {
       pname = "ghci-diagrams";
       version = "0.1.1";
       sha256 = "1jlym5k2d43avkgw7ff3pdaad5j2q5yq803cy74bgy0z69x77v1w";
       buildDepends = [ cairo colour diagrams gtk ];
       description = "Display simple diagrams from ghci";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghci-haskeline" = callPackage
    ({ mkDerivation, filepath, ghc-paths, haskeline, mtl }:
     mkDerivation {
       pname = "ghci-haskeline";
       version = "0.2";
       sha256 = "01j2ryxxmd5zzdv1ayvzibi3njl3nbn0ypxmafvglrvn2zwnmsqy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ghc-paths haskeline mtl ];
       homepage = "http://code.haskell.org/~judah/ghci-haskeline";
       description = "An implementation of ghci using the Haskeline line-input library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghci-lib" = callPackage
    ({ mkDerivation, MissingH }:
     mkDerivation {
       pname = "ghci-lib";
       version = "0.1.0.0";
       sha256 = "06lg1czsr6k5h18aks33p2kbahiidhv7xsrv7n1fcvqsgglzgk3z";
       buildDepends = [ MissingH ];
       homepage = "http://github.com/gibiansky/IHaskell";
       description = "A library for interactively evaluating Haskell code";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ghci-ng" = callPackage
    ({ mkDerivation, filepath, ghc-paths, haskeline, transformers }:
     mkDerivation {
       pname = "ghci-ng";
       version = "7.6.3.5";
       sha256 = "01ghvv0y1qif19v8dlbspxyb9m5zag832sx2k3qyhqh8iccnr14x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ghc-paths haskeline transformers ];
       homepage = "https://github.com/hvr/ghci-ng";
       description = "Extended GHCi fork";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghci-pretty" = callPackage
    ({ mkDerivation, hscolour, ipprint }:
     mkDerivation {
       pname = "ghci-pretty";
       version = "0.0.2";
       sha256 = "01syl5c6ana4m8d3jc5pbi64zf3c4l2x0r7jwkizm7kymszmbns5";
       buildDepends = [ hscolour ipprint ];
       homepage = "https://github.com/larskuhtz/ghci-pretty";
       description = "colored pretty-printing within ghci";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ghcid" = callPackage
    ({ mkDerivation, cmdargs, extra, filepath, tasty, tasty-hunit
     , terminal-size, time
     }:
     mkDerivation {
       pname = "ghcid";
       version = "0.3.2";
       sha256 = "1kx20la4snldhd709y69za8bs57v90nblghfrxrvmzhrmpvh4bn3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs extra filepath terminal-size time ];
       testDepends = [
         cmdargs extra filepath tasty tasty-hunit terminal-size time
       ];
       homepage = "https://github.com/ndmitchell/ghcid#readme";
       description = "GHCi based bare bones IDE";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghcjs-codemirror" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ghcjs-codemirror";
       version = "0.0.0.1";
       sha256 = "04x5h0i4fgyc2c5ihrnk0w3l1f3avvcl115zlnich93nillgbnfw";
       homepage = "https://github.com/ghcjs/CodeMirror";
       description = "Installs CodeMirror JavaScript files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ghcjs-dom" = callPackage
    ({ mkDerivation, ghcjs-base, mtl, text }:
     mkDerivation {
       pname = "ghcjs-dom";
       version = "0.1.1.1";
       sha256 = "0fwwm658gf4fp32zmfskfayi480ddsf40y2cfla88a7l1rbacwif";
       buildDepends = [ ghcjs-base mtl text ];
       description = "DOM library that supports both GHCJS and WebKitGTK";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ghcjs-dom-hello" = callPackage
    ({ mkDerivation, ghcjs-dom, mtl }:
     mkDerivation {
       pname = "ghcjs-dom-hello";
       version = "1.2.0.0";
       sha256 = "0jbn6nhaq7h01wh1limsb4xzgwp7i71922gql5mz916kv6wa2cgl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ghcjs-dom mtl ];
       homepage = "https://github.com/ghcjs/ghcjs-dom-hello";
       description = "GHCJS DOM Hello World, an example package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ghclive" = callPackage
    ({ mkDerivation, aeson, blaze-html, blaze-markup, diagrams-lib
     , diagrams-svg, file-embed, hint, mtl, text, time
     , unordered-containers, vector, wai, wai-websockets, warp
     , websockets, yesod, yesod-static
     }:
     mkDerivation {
       pname = "ghclive";
       version = "0.1.0.2";
       sha256 = "0rnmv09sl5pj9y8hr7s8hwh23zfm4j8nsn524hpj73diwmzf5fh8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson blaze-html blaze-markup diagrams-lib diagrams-svg file-embed
         hint mtl text time unordered-containers vector wai wai-websockets
         warp websockets yesod yesod-static
       ];
       homepage = "http://github.com/shapr/ghclive/";
       description = "Interactive Haskell interpreter in a browser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ghczdecode" = callPackage
    ({ mkDerivation, zenc }:
     mkDerivation {
       pname = "ghczdecode";
       version = "0.1.0.1";
       sha256 = "1yn6blszccmgv0zrq5cxv6kww47j7pwgywgy7piz6is44ab5s5l9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ zenc ];
       homepage = "https://github.com/Peaker/ghczdecode";
       description = "Decode Z-encoded strings from GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ght" = callPackage
    ({ mkDerivation, binary, data-default, filepath, iteratee
     , iteratee-compress, mmap, mtl, SHA, storable-endian, time
     , ui-command, zlib
     }:
     mkDerivation {
       pname = "ght";
       version = "0.4.0.1";
       sha256 = "03lrn3s79gxdn5fwh6cbp46k303662fnisjs7qp1yf8c66vxi8wc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary data-default filepath iteratee iteratee-compress mmap mtl
         SHA storable-endian time ui-command zlib
       ];
       description = "Trivial routines for inspecting git repositories";
       license = "GPL";
     }) {};

  "gimlh" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "gimlh";
       version = "0.1.0.0";
       sha256 = "0wvx2xzq8ybwzpjaqp0c2623h5yhnbwcm1q1yn2s2n4asdd1f1yk";
       buildDepends = [ split ];
       homepage = "https://github.com/gazay/gimlh";
       description = "Haskell parser for GIML";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ginsu" = callPackage
    ({ mkDerivation, binary, mtl, network, openssl, parsec, random
     , regex-posix, syb, utf8-string
     }:
     mkDerivation {
       pname = "ginsu";
       version = "0.8.1";
       sha256 = "0gnmdw430zfxhfhjimaminbdi13acwmb85a38hdyhfranra9yiif";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary mtl network parsec random regex-posix syb utf8-string
       ];
       extraLibraries = [ openssl ];
       homepage = "http://repetae.net/computer/ginsu/";
       description = "Ginsu Gale Client";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gio" = callPackage
    ({ mkDerivation, glib, gtk2hs-buildtools, mtl }:
     mkDerivation {
       pname = "gio";
       version = "0.13.0.3";
       sha256 = "15025jj6i1gpvjs46545vzmvs6ka41x15lrllqr9hd0qsyhibsf5";
       buildDepends = [ glib mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ glib ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GIO";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) glib; };

  "gist" = callPackage
    ({ mkDerivation, aeson, conduit, http-conduit, text }:
     mkDerivation {
       pname = "gist";
       version = "0.1";
       sha256 = "1jgdhga0qjbc6kx1nr5yngcx560rlxiil3cnsmzh8mwazbs3yyl1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson conduit http-conduit text ];
       homepage = "http://github.com/simonmichael/gist";
       description = "A reliable command-line client for gist.github.com";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "git-all" = callPackage
    ({ mkDerivation, cmdargs, hslogger, parallel-io, regex-posix
     , shelly, system-fileio, system-filepath, text, transformers
     }:
     mkDerivation {
       pname = "git-all";
       version = "1.5.0";
       sha256 = "0wfvfrmwn81myiaa5x4bw6ypyk0hljaaf3f7b9rnpxwk291dwc3z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs hslogger parallel-io regex-posix shelly system-fileio
         system-filepath text transformers
       ];
       homepage = "https://github.com/jwiegley/git-all";
       description = "Determine which Git repositories need actions to be taken";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "git-annex" = callPackage
    ({ mkDerivation, aeson, async, aws, blaze-builder, bloomfilter, bup
     , byteable, case-insensitive, clientsession, conduit, conduit-extra
     , crypto-api, cryptohash, curl, data-default, dataenc, DAV, dbus
     , dlist, dns, edit-distance, exceptions, fdo-notify, feed, filepath
     , git, gnupg1, gnutls, hamlet, hinotify, hslogger, http-client
     , http-conduit, http-types, IfElse, json, lsof, MissingH
     , monad-control, mtl, network, network-info, network-multicast
     , network-protocol-xmpp, network-uri, openssh, optparse-applicative
     , path-pieces, perl, QuickCheck, random, regex-tdfa, resourcet
     , rsync, SafeSemaphore, securemem, SHA, shakespeare, stm, tasty
     , tasty-hunit, tasty-quickcheck, tasty-rerun, text, time
     , transformers, unix-compat, utf8-string, uuid, wai, wai-extra
     , warp, warp-tls, which, xml-types, yesod, yesod-core
     , yesod-default, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "git-annex";
       version = "5.20141203";
       sha256 = "01gifds86925vg7mh363i7qsii2wrgf3vpk3wgjff9rbb7z0fvfk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson async aws blaze-builder bloomfilter byteable case-insensitive
         clientsession conduit conduit-extra crypto-api cryptohash
         data-default dataenc DAV dbus dlist dns edit-distance exceptions
         fdo-notify feed filepath gnutls hamlet hinotify hslogger
         http-client http-conduit http-types IfElse json MissingH
         monad-control mtl network network-info network-multicast
         network-protocol-xmpp network-uri optparse-applicative path-pieces
         QuickCheck random regex-tdfa resourcet SafeSemaphore securemem SHA
         shakespeare stm tasty tasty-hunit tasty-quickcheck tasty-rerun text
         time transformers unix-compat utf8-string uuid wai wai-extra warp
         warp-tls xml-types yesod yesod-core yesod-default yesod-form
         yesod-static
       ];
       buildTools = [ bup curl git gnupg1 lsof openssh perl rsync which ];
       configureFlags = "-fAssistant -fProduction";
       preConfigure = "export HOME=$TEMPDIR";
       installPhase = "./Setup install";
       checkPhase = ''
         cp dist/build/git-annex/git-annex git-annex
         ./git-annex test
       '';
       propagatedUserEnvPkgs = [git lsof];
       homepage = "http://git-annex.branchable.com/";
       description = "manage files with git, without checking their contents into git";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "git-checklist" = callPackage
    ({ mkDerivation, filepath, optparse-applicative, parsec }:
     mkDerivation {
       pname = "git-checklist";
       version = "1.0.0.0";
       sha256 = "1q4fbvpdjca5k530dcm6yspsgzy60dx7nimar2fkm8s086qsf662";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath optparse-applicative parsec ];
       homepage = "https://github.com/dougalstanton/git-checklist";
       description = "Maintain per-branch checklists in Git";
       license = "GPL";
     }) {};

  "git-date" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2, time, utf8-string
     }:
     mkDerivation {
       pname = "git-date";
       version = "0.2.1";
       sha256 = "17xiim439igg1gfcfwpzxjkgpmfqqh9v79jm4bg0f9h5dijij79l";
       buildDepends = [ time utf8-string ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2 time
         utf8-string
       ];
       homepage = "https://github.com/singpolyma/git-date-haskell";
       description = "Bindings to the date parsing from Git";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "git-embed" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "git-embed";
       version = "0.1.0";
       sha256 = "0yrx06ay25zsk90djr4mrqnn80xp3w6cmkciqavrmijf25fc5jvn";
       buildDepends = [ filepath ];
       homepage = "https://github.com/borsboom/git-embed";
       description = "Use TH to embed Git repo information";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "git-freq" = callPackage
    ({ mkDerivation, hspec, optparse-applicative, text }:
     mkDerivation {
       pname = "git-freq";
       version = "0.0.2";
       sha256 = "1vi87kdb58d7yg5bc97nkz2lcnfxsmn4w66m2m52rbfi8xnqkl6l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ optparse-applicative text ];
       testDepends = [ hspec optparse-applicative text ];
       homepage = "https://github.com/fujimura/git-freq";
       description = "A Git subcommand to show total addition, deletion per file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "git-gpush" = callPackage
    ({ mkDerivation, filepath, gitlib, gitlib-cmdline, hslogger
     , optparse-applicative, shelly, tagged, text, time, transformers
     }:
     mkDerivation {
       pname = "git-gpush";
       version = "3.1.0.1";
       sha256 = "13m95j227mvl7facqjlwcz11kd88ibhr7fwf5ph81wppyic8136g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath gitlib gitlib-cmdline hslogger optparse-applicative shelly
         tagged text time transformers
       ];
       homepage = "http://github.com/jwiegley/gitlib";
       description = "More intelligent push-to-GitHub utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "git-monitor" = callPackage
    ({ mkDerivation, filepath, gitlib, gitlib-libgit2, lifted-async
     , logging, monad-logger, optparse-applicative, shelly, tagged, text
     , time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "git-monitor";
       version = "3.1.1.2";
       sha256 = "08bjhvxa11syhk4ab7dk81ipj1x8xnvfgkyv05i2ay4npc1xmdgd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath gitlib gitlib-libgit2 lifted-async logging monad-logger
         optparse-applicative shelly tagged text time transformers
         unordered-containers
       ];
       homepage = "http://github.com/jwiegley/gitlib";
       description = "Passively snapshots working tree changes efficiently";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "git-object" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, enumerator
     , filepath, zlib-enum
     }:
     mkDerivation {
       pname = "git-object";
       version = "0.0.2";
       sha256 = "1hwsl5n6im6b13iy1whvgd3avax9xb81maaan2vf3r474r3321jm";
       buildDepends = [
         attoparsec attoparsec-enumerator enumerator filepath zlib-enum
       ];
       homepage = "http://www.mew.org/~kazu/";
       description = "Git object and its parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "git-repair" = callPackage
    ({ mkDerivation, async, exceptions, filepath, hslogger, IfElse
     , MissingH, mtl, network, network-uri, optparse-applicative
     , QuickCheck, text, time, transformers, unix-compat, utf8-string
     }:
     mkDerivation {
       pname = "git-repair";
       version = "1.20141027";
       sha256 = "1cnrnvv8q2i748fvcqlmbf40nk7s8kgn4qzg7cdy37xp7rqx732q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         async exceptions filepath hslogger IfElse MissingH mtl network
         network-uri optparse-applicative QuickCheck text time transformers
         unix-compat utf8-string
       ];
       homepage = "http://git-repair.branchable.com/";
       description = "repairs a damanged git repisitory";
       license = "GPL";
     }) {};

  "git-sanity" = callPackage
    ({ mkDerivation, Cabal, machines, machines-io, machines-process
     , safe, transformers
     }:
     mkDerivation {
       pname = "git-sanity";
       version = "0.0.2";
       sha256 = "1h7ahn2km9mffbyr8nkp6dn6xvwxq5ybl6pypchvxyy6p968i26h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal machines machines-io machines-process safe transformers
       ];
       homepage = "github.com/aloiscochard/git-sanity";
       description = "A sanity checker for your git history";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "gitcache" = callPackage
    ({ mkDerivation, cryptohash, filepath, utf8-string }:
     mkDerivation {
       pname = "gitcache";
       version = "0.2";
       sha256 = "0vd580k1cxipycyyjpzhwvv6q70nf6fjfrsxp3gz3gy4iqzzssgy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cryptohash filepath utf8-string ];
       homepage = "https://github.com/vincenthz/gitcache";
       description = "Simple git utility to use and manage clone cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "github" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring, byteable
     , case-insensitive, conduit, cryptohash, data-default, failure
     , hashable, HTTP, http-conduit, http-types, network, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "github";
       version = "0.13.1";
       sha256 = "0rz89lpswxxsdyfjb63v9md96bxr3abxzwqryh1a2jxhm7f1ia5l";
       buildDepends = [
         aeson attoparsec base16-bytestring byteable case-insensitive
         conduit cryptohash data-default failure hashable HTTP http-conduit
         http-types network text time unordered-containers vector
       ];
       homepage = "https://github.com/fpco/github";
       description = "Access to the Github API, v3";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "github-backup" = callPackage
    ({ mkDerivation, exceptions, filepath, git, github, hslogger
     , IfElse, MissingH, mtl, network, network-uri, optparse-applicative
     , pretty-show, text, transformers, unix-compat
     }:
     mkDerivation {
       pname = "github-backup";
       version = "1.20141204";
       sha256 = "0asj0ix81k6vi95rwlhs7ikk936lzfsav4gw0gvyzf31ggmf4j4c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         exceptions filepath github hslogger IfElse MissingH mtl network
         network-uri optparse-applicative pretty-show text transformers
         unix-compat
       ];
       buildTools = [ git ];
       homepage = "https://github.com/joeyh/github-backup";
       description = "backs up everything github knows about a repository, to the repository";
       license = "GPL";
     }) {};

  "github-post-receive" = callPackage
    ({ mkDerivation, aeson, email-validate, http-types, text, wai
     , wai-logger, warp
     }:
     mkDerivation {
       pname = "github-post-receive";
       version = "1.2.0.1";
       sha256 = "14vd9rnr3x3wasnc6w6d3kcs5dnka902n9cbxblqdryc8l7p360q";
       buildDepends = [
         aeson email-validate http-types text wai wai-logger warp
       ];
       homepage = "https://github.com/amutake/github-post-receive";
       description = "GitHub webhooks library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "github-types" = callPackage
    ({ mkDerivation, aeson, text }:
     mkDerivation {
       pname = "github-types";
       version = "0.1.0.5";
       sha256 = "0lymbga0rwhni0rrjdla6fz5a1gz8zclf421rdiz5cnnh8lbd97i";
       buildDepends = [ aeson text ];
       description = "Type definitions for objects used by the GitHub v3 API";
       license = "unknown";
     }) {};

  "gitignore" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, http-conduit, network
     , safe, text
     }:
     mkDerivation {
       pname = "gitignore";
       version = "1.0.1";
       sha256 = "03sjhlsp7xswciypp7sw9x0b3h6m7fvc2dk5k0a3bibflns2zgql";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring http-conduit network safe text
       ];
       homepage = "https://github.com/relrod/gitignore";
       description = "Apply GitHub .gitignore templates to already existing repositories.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gitit" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, blaze-html, ConfigFile
     , feed, filepath, filestore, ghc-paths, happstack-server
     , highlighting-kate, hoauth2, hslogger, HStringTemplate, HTTP
     , http-client-tls, http-conduit, json, mtl, network, network-uri
     , pandoc, pandoc-types, parsec, random, recaptcha, safe, SHA, split
     , syb, tagsoup, text, time, uri, url, utf8-string, uuid, xhtml, xml
     , xss-sanitize, zlib
     }:
     mkDerivation {
       pname = "gitit";
       version = "0.10.6.1";
       sha256 = "1l6zra0yiwrmiycblp25b5yd1yrz94537l8zkspkf7z6wc8vdkn0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring blaze-html ConfigFile feed filepath
         filestore ghc-paths happstack-server highlighting-kate hoauth2
         hslogger HStringTemplate HTTP http-client-tls http-conduit json mtl
         network network-uri pandoc pandoc-types parsec random recaptcha
         safe SHA split syb tagsoup text time uri url utf8-string uuid xhtml
         xml xss-sanitize zlib
       ];
       homepage = "http://gitit.net";
       description = "Wiki using happstack, git or darcs, and pandoc";
       license = "GPL";
     }) {};

  "gitlib" = callPackage
    ({ mkDerivation, base16-bytestring, conduit, conduit-combinators
     , exceptions, filepath, hashable, lifted-async, lifted-base
     , monad-control, monad-logger, mtl, resourcet, semigroups
     , system-filepath, tagged, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "gitlib";
       version = "3.1.0";
       sha256 = "0zyym7m8bdhc4wi2jrhcmipmlq106qkd61c4y9iisgk73v2pg9f4";
       buildDepends = [
         base16-bytestring conduit conduit-combinators exceptions filepath
         hashable lifted-async lifted-base monad-control monad-logger mtl
         resourcet semigroups system-filepath tagged text time transformers
         unordered-containers
       ];
       description = "API library for working with Git repositories";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitlib-cmdline" = callPackage
    ({ mkDerivation, conduit, conduit-combinators, exceptions, gitlib
     , gitlib-test, hspec, hspec-expectations, monad-control, mtl
     , parsec, process-extras, shelly, system-filepath, tagged, text
     , time, transformers, transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "gitlib-cmdline";
       version = "3.1.0";
       sha256 = "1rsw7a06bj1k2pfil20pzla2cxdry6fzdc9hlkcgan7sfik9sxa7";
       buildDepends = [
         conduit conduit-combinators exceptions gitlib monad-control mtl
         parsec process-extras shelly system-filepath tagged text time
         transformers transformers-base unordered-containers
       ];
       testDepends = [
         gitlib gitlib-test hspec hspec-expectations system-filepath tagged
         text transformers
       ];
       description = "Gitlib repository backend that uses the git command-line tool";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitlib-cross" = callPackage
    ({ mkDerivation, gitlib, gitlib-cmdline, gitlib-libgit2
     , gitlib-test, hspec, hspec-expectations, HUnit
     }:
     mkDerivation {
       pname = "gitlib-cross";
       version = "3.1.0";
       sha256 = "0iack7kafbfa45s9k7ypbafapahrifh2grjdzyrhvzjg767l3i1h";
       testDepends = [
         gitlib gitlib-cmdline gitlib-libgit2 gitlib-test hspec
         hspec-expectations HUnit
       ];
       description = "Run tests between repositories";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitlib-libgit2" = callPackage
    ({ mkDerivation, conduit, conduit-combinators, exceptions
     , fast-logger, filepath, gitlib, gitlib-test, hlibgit2, hspec
     , hspec-expectations, HUnit, lifted-async, lifted-base
     , missing-foreign, mmorph, monad-control, monad-logger, monad-loops
     , mtl, resourcet, stm, stm-conduit, tagged, text, text-icu, time
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "gitlib-libgit2";
       version = "3.1.0.1";
       sha256 = "0rqx1cqj7rciy7kr5dfzh4crvjk0s6amm3d5nzyawkkkdda54dcs";
       buildDepends = [
         conduit conduit-combinators exceptions fast-logger filepath gitlib
         hlibgit2 lifted-async lifted-base missing-foreign mmorph
         monad-control monad-logger monad-loops mtl resourcet stm
         stm-conduit tagged text text-icu time transformers
         transformers-base
       ];
       testDepends = [
         exceptions gitlib gitlib-test hspec hspec-expectations HUnit
         monad-logger transformers
       ];
       description = "Libgit2 backend for gitlib";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitlib-s3" = callPackage
    ({ mkDerivation, aeson, attempt, aws, bifunctors, binary, conduit
     , conduit-combinators, data-default, exceptions, filepath, gitlib
     , gitlib-libgit2, gitlib-test, hlibgit2, hspec, hspec-expectations
     , http-conduit, HUnit, lens, lifted-base, monad-control
     , monad-logger, resourcet, retry, split, stm, temporary, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "gitlib-s3";
       version = "3.1.0";
       sha256 = "1gx35869p9b34zi24830asq4d6y5nwjq4skjld9jgdc0545bvjzz";
       buildDepends = [
         aeson attempt aws bifunctors binary conduit conduit-combinators
         data-default exceptions filepath gitlib gitlib-libgit2 hlibgit2
         http-conduit lens lifted-base monad-control monad-logger resourcet
         retry split stm text time transformers unordered-containers
       ];
       testDepends = [
         aws data-default exceptions filepath gitlib gitlib-libgit2
         gitlib-test hlibgit2 hspec hspec-expectations HUnit monad-logger
         resourcet temporary text transformers
       ];
       description = "Gitlib repository backend for storing Git objects in Amazon S3";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitlib-sample" = callPackage
    ({ mkDerivation, exceptions, gitlib, mtl, transformers }:
     mkDerivation {
       pname = "gitlib-sample";
       version = "3.1.0";
       sha256 = "1px3yskxkr1kmgwfw1jdrbgjgkz8wxznz56g0gn3gqx63haxifmc";
       buildDepends = [ exceptions gitlib mtl transformers ];
       description = "Sample backend for gitlib showing the basic structure for any backend";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitlib-test" = callPackage
    ({ mkDerivation, conduit, conduit-combinators, exceptions, gitlib
     , hspec, hspec-expectations, HUnit, monad-control, tagged, text
     , time, transformers
     }:
     mkDerivation {
       pname = "gitlib-test";
       version = "3.1.0.1";
       sha256 = "1c65v86brvw3sy48vg79j0ijc5n4cpafksqsmbjs50h3v80zkdm3";
       buildDepends = [
         conduit conduit-combinators exceptions gitlib hspec
         hspec-expectations HUnit monad-control tagged text time
         transformers
       ];
       description = "Test library for confirming gitlib backend compliance";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitlib-utils" = callPackage
    ({ mkDerivation, conduit, data-default, failure, gitlib, hex
     , lifted-base, system-fileio, system-filepath, tagged, text
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "gitlib-utils";
       version = "1.2.0";
       sha256 = "081vagmlf6lkh7qqr9y42nl8c1ds011s05a567dsw6ckf166wshn";
       buildDepends = [
         conduit data-default failure gitlib hex lifted-base system-fileio
         system-filepath tagged text transformers unordered-containers
       ];
       description = "Generic utility functions for working with Git repositories";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gitson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, doctest, errors, filepath
     , flock, Glob, hspec, HUnit, monad-control, QuickCheck
     , transformers
     }:
     mkDerivation {
       pname = "gitson";
       version = "0.4.1";
       sha256 = "1sq339av6113v4rgzwpsf7k1bip632b8avl3r8nb0i4acqzb06m4";
       buildDepends = [
         aeson aeson-pretty errors filepath flock monad-control transformers
       ];
       testDepends = [
         aeson doctest Glob hspec HUnit QuickCheck transformers
       ];
       homepage = "https://github.com/myfreeweb/gitson";
       description = "A document store library for Git + JSON";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "gl" = callPackage
    ({ mkDerivation, filepath, fixed, half, hxt, mesa, split
     , transformers
     }:
     mkDerivation {
       pname = "gl";
       version = "0.6.1";
       sha256 = "0wqsbwnp69g6vz5irf65zv1nx4vnlwcm771jxzk70r2wzi2vsg3y";
       buildDepends = [ filepath fixed half hxt split transformers ];
       extraLibraries = [ mesa ];
       description = "Complete OpenGL raw bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gl-capture" = callPackage
    ({ mkDerivation, OpenGL }:
     mkDerivation {
       pname = "gl-capture";
       version = "0.1.0.0";
       sha256 = "0pcan0fpb1mfwda69f8z8pdrdav79rdm31yvmrk98dca7al7k583";
       buildDepends = [ OpenGL ];
       description = "simple image capture from OpenGL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "glade" = callPackage
    ({ mkDerivation, glib, gtk, gtk2hs-buildtools, gtkC, libc, libglade
     , pkgconfig
     }:
     mkDerivation {
       pname = "glade";
       version = "0.12.5.0";
       sha256 = "0dbl7y5rdwzcham16iym9cikfyaphzr1rqcsni9ab6s2368a1vkr";
       buildDepends = [ glib gtk ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ libc pkgconfig ];
       pkgconfigDepends = [ gtkC libglade ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the glade library";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "gladexml-accessor" = callPackage
    ({ mkDerivation, glade, HaXml }:
     mkDerivation {
       pname = "gladexml-accessor";
       version = "0.0";
       sha256 = "06kzakvssmldjgx0s8qm0a3cd9glmwrdnh690sv708jcvg8x45y3";
       buildDepends = [ glade HaXml ];
       description = "Automagically declares getters for widget handles in specified interface file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "glapp" = callPackage
    ({ mkDerivation, GLFW-b, lens, mtl, OpenGL }:
     mkDerivation {
       pname = "glapp";
       version = "0.1.0.1";
       sha256 = "076v7h0p91dj8hx110vm0li2njsc8p5dgcf6zxk721mdx5xkymhz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ GLFW-b lens mtl OpenGL ];
       homepage = "zyghost.com";
       description = "An OpenGL micro framework";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "glib" = callPackage
    ({ mkDerivation, glib, gtk2hs-buildtools, libc, pkgconfig, text
     , utf8-string
     }:
     mkDerivation {
       pname = "glib";
       version = "0.13.0.6";
       sha256 = "1hn3l0vrz76gmk7bjhs4nw68izf29k0pxm92l0zih7wq5ny4lhrv";
       buildDepends = [ text utf8-string ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ libc pkgconfig ];
       pkgconfigDepends = [ glib ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GLIB library for Gtk2Hs";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) glib; };

  "glider-nlp" = callPackage
    ({ mkDerivation, Cabal, HUnit, text }:
     mkDerivation {
       pname = "glider-nlp";
       version = "0.1";
       sha256 = "1i604gj3ssabr3dcas6gfh20d4psqwl1j4d7wk4p3gy0hvjvr8fb";
       buildDepends = [ text ];
       testDepends = [ Cabal HUnit text ];
       homepage = "https://github.com/klangner/glider-nlp";
       description = "Natural Language Processing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "glintcollider" = callPackage
    ({ mkDerivation, ppm, split }:
     mkDerivation {
       pname = "glintcollider";
       version = "0.0.2";
       sha256 = "1xgx02cxvpc8sv99wl44lpzbv9cc87nnihbpalmddb71mwrmj4ji";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ppm split ];
       description = "A simple ray tracer in an early stage of development";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "global" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-exts-qq, loch-th
     , SafeSemaphore, stm, syntax-trees-fork-bairyn, tagged
     }:
     mkDerivation {
       pname = "global";
       version = "0.2.1.0";
       sha256 = "00d9qsh0n9yxr411mdisk602qiizy9h4wgz4k04mfr5x5g6cp418";
       buildDepends = [
         haskell-src-exts haskell-src-exts-qq loch-th SafeSemaphore stm
         syntax-trees-fork-bairyn tagged
       ];
       homepage = "https://github.com/bairyn/global";
       description = "Library enabling unique top-level declarations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "global-config" = callPackage
    ({ mkDerivation, data-default, global-variables, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers
     }:
     mkDerivation {
       pname = "global-config";
       version = "0.3.1";
       sha256 = "1rp855j0rzx528x01q5wi2hah80bwqf5rrw7p8p8qzl39fhlpzqa";
       buildDepends = [ data-default global-variables transformers ];
       testDepends = [
         data-default HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       homepage = "https://github.com/akaspin/global-config";
       description = "Global mutable configuration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "global-lock" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "global-lock";
       version = "0.1";
       sha256 = "0b2sz9ag6wcr0amgrx08l7924brfansnh9rv64wg9s3nk4ni2sxp";
       description = "A global lock implemented without unsafePerformIO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "global-variables" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "global-variables";
       version = "1.0.1.1";
       sha256 = "0fvhh6q6z114qyi5rhwzxhrlqfhx6af97187b49lyvx2k9zkzvzp";
       buildDepends = [ stm ];
       description = "Namespaced, global, and top-level mutable variables without unsafePerformIO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "glome-hs" = callPackage
    ({ mkDerivation, GlomeTrace, GlomeVec, GLUT, OpenGL, parallel
     , random, time
     }:
     mkDerivation {
       pname = "glome-hs";
       version = "0.61";
       sha256 = "069j4xvh5039xkg300h1cwa0lyvkycixasxr8zh4iqyl1g5bcvs8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         GlomeTrace GlomeVec GLUT OpenGL parallel random time
       ];
       homepage = "http://haskell.org/haskellwiki/Glome";
       description = "ray tracer";
       license = "GPL";
     }) {};

  "gloss" = callPackage
    ({ mkDerivation, bmp, gloss-rendering, GLUT, OpenGL }:
     mkDerivation {
       pname = "gloss";
       version = "1.9.2.1";
       sha256 = "1fk7472lw4621gv64fv4mna8z1av15f7d0didpc9r22rdlkpa80l";
       buildDepends = [ bmp gloss-rendering GLUT OpenGL ];
       homepage = "http://gloss.ouroborus.net";
       description = "Painless 2D vector graphics, animations and simulations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gloss-accelerate" = callPackage
    ({ mkDerivation, accelerate, accelerate-cuda, gloss }:
     mkDerivation {
       pname = "gloss-accelerate";
       version = "1.8.15.0";
       sha256 = "1nj2rnp2bg3xmi4xbaws9jc7qx3b4qqg9fyvfv13xdav28d7iqb0";
       editedCabalFile = "1mmq7z826pz923s7m8znjwvsyjajgyhjf7wdddwcdcwc4319a09w";
       buildDepends = [ accelerate accelerate-cuda gloss ];
       description = "Extras to interface Gloss and Accelerate";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gloss-algorithms" = callPackage
    ({ mkDerivation, gloss }:
     mkDerivation {
       pname = "gloss-algorithms";
       version = "1.9.2.1";
       sha256 = "1cmjzwajn1y01p68fb8wvx7ld5ildkjzdzbmymlifcvw9csy3n2r";
       buildDepends = [ gloss ];
       homepage = "http://gloss.ouroborus.net";
       description = "Data structures and algorithms for working with 2D graphics";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gloss-banana" = callPackage
    ({ mkDerivation, gloss, reactive-banana }:
     mkDerivation {
       pname = "gloss-banana";
       version = "0.1.0.4";
       sha256 = "0zzpdryfcqvxpzv53ymsvkm2nza9ryvzqgf3n89pnvrni91avgj3";
       buildDepends = [ gloss reactive-banana ];
       homepage = "https://github.com/Twey/gloss-banana";
       description = "An Interface for gloss in terms of a reactive-banana Behavior";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "gloss-devil" = callPackage
    ({ mkDerivation, gloss, repa, repa-devil }:
     mkDerivation {
       pname = "gloss-devil";
       version = "0.2";
       sha256 = "17gwy13z4lymm9dpj26q4ihcl198gqn9kpcjdw8lcgfcg4gxszsm";
       buildDepends = [ gloss repa repa-devil ];
       description = "Display images in Gloss using libdevil for decoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gloss-examples" = callPackage
    ({ mkDerivation, bmp, GLFW-b, gloss, gloss-algorithms, gloss-raster
     , gloss-rendering, random, repa, repa-algorithms, repa-io, vector
     }:
     mkDerivation {
       pname = "gloss-examples";
       version = "1.9.2.1";
       sha256 = "0pl0p5g0vn5dw5f16dj2qyn39qln48a9kiaxznhy2hxjqp1in3jz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bmp GLFW-b gloss gloss-algorithms gloss-raster gloss-rendering
         random repa repa-algorithms repa-io vector
       ];
       homepage = "http://gloss.ouroborus.net";
       description = "Examples using the gloss library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gloss-game" = callPackage
    ({ mkDerivation, gloss, gloss-juicy }:
     mkDerivation {
       pname = "gloss-game";
       version = "0.3.3.0";
       sha256 = "01k9600f9lv65n9bi2v40gzcl14gg9cm27fxz8yk4kx1hk5hv980";
       buildDepends = [ gloss gloss-juicy ];
       homepage = "https://github.com/mchakravarty/gloss-game";
       description = "Gloss wrapper that simplifies writing games";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gloss-juicy" = callPackage
    ({ mkDerivation, bmp, gloss, JuicyPixels, vector }:
     mkDerivation {
       pname = "gloss-juicy";
       version = "0.2";
       sha256 = "1y525ck3cqqg9zggd88ilzxv1pfcz801s0sdgprw3amzyxn71kqq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bmp gloss JuicyPixels vector ];
       homepage = "http://github.com/alpmestan/gloss-juicy";
       description = "Load any image supported by Juicy.Pixels in your gloss application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gloss-raster" = callPackage
    ({ mkDerivation, gloss, gloss-rendering, llvm, repa }:
     mkDerivation {
       pname = "gloss-raster";
       version = "1.9.2.1";
       sha256 = "0vz03hw9rck9vcbh1lvy7dncij9ykgh7mslb3hwsz8z570dbnacw";
       buildDepends = [ gloss gloss-rendering repa ];
       extraLibraries = [ llvm ];
       homepage = "http://gloss.ouroborus.net";
       description = "Parallel rendering of raster images";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) llvm; };

  "gloss-raster-accelerate" = callPackage
    ({ mkDerivation, accelerate, accelerate-cuda, gloss
     , gloss-accelerate
     }:
     mkDerivation {
       pname = "gloss-raster-accelerate";
       version = "1.8.15.0";
       sha256 = "1fs3ybrzkykslac1zzh6g73lfdfysn6y2fr1pra9hd0a7x5a8j10";
       editedCabalFile = "0dan3bb78p3rmv46lgapawjfz0nyl80qcdi92f8jp0j56ksh3ivx";
       buildDepends = [
         accelerate accelerate-cuda gloss gloss-accelerate
       ];
       description = "Parallel rendering of raster images using Accelerate";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gloss-rendering" = callPackage
    ({ mkDerivation, bmp, GLUT, OpenGL }:
     mkDerivation {
       pname = "gloss-rendering";
       version = "1.9.2.1";
       sha256 = "05wdiadwjykz8x0fimznp3q1drm4v3vnv6cv6wjkj1xsclmhb99k";
       buildDepends = [ bmp GLUT OpenGL ];
       description = "Gloss picture data types and rendering functions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gloss-sodium" = callPackage
    ({ mkDerivation, gloss, sodium }:
     mkDerivation {
       pname = "gloss-sodium";
       version = "0.1.0.0";
       sha256 = "0ygjqzb1pn092j0d0gcwhxdv940rdlvpaj1gxa347mdgvp4jb9za";
       buildDepends = [ gloss sodium ];
       homepage = "https://github.com/Twey/gloss-sodium";
       description = "A Sodium interface to the Gloss drawing package";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "glpk-hs" = callPackage
    ({ mkDerivation, deepseq, glpk, mtl }:
     mkDerivation {
       pname = "glpk-hs";
       version = "0.3.4";
       sha256 = "0wyasd0dqi5nnh52lx980vnyhm0rwib0sd7qnpj4s9hq8rn994cm";
       buildDepends = [ deepseq mtl ];
       extraLibraries = [ glpk ];
       description = "Comprehensive GLPK linear programming bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gluturtle" = callPackage
    ({ mkDerivation, convertible, GLUT, stm, yjsvg, yjtools }:
     mkDerivation {
       pname = "gluturtle";
       version = "0.0.58.1";
       sha256 = "0jwkppf9ipm61g052r9m65awq3nsigf3q4m9bj2hmb3n9z75i1hp";
       buildDepends = [ convertible GLUT stm yjsvg yjtools ];
       description = "turtle like LOGO with glut";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gmap" = callPackage
    ({ mkDerivation, AvlTree, COrdering, QuickCheck, random }:
     mkDerivation {
       pname = "gmap";
       version = "0.1";
       sha256 = "0kwx0zknxpda0pjf9hphniz33b9m0md54z8zx09vzkjq7lpljx7r";
       buildDepends = [ AvlTree COrdering QuickCheck random ];
       description = "Composable maps and generic tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gmndl" = callPackage
    ({ mkDerivation, ad, gtk, gtkglext, mtl, OpenGL, OpenGLRaw, parsec
     , priority-queue, qd, reflection, Vec
     }:
     mkDerivation {
       pname = "gmndl";
       version = "0.4.0.2";
       sha256 = "04r7n24jnqgggi19d4l1lj1ag5jrh3zk2pvxwm5xfb7imlg37zm8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ad gtk gtkglext mtl OpenGL OpenGLRaw parsec priority-queue qd
         reflection Vec
       ];
       description = "Mandelbrot Set explorer using GTK";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "gnome-desktop" = callPackage
    ({ mkDerivation, gconf, glib, gtk, random }:
     mkDerivation {
       pname = "gnome-desktop";
       version = "1.0.0.0";
       sha256 = "0ipx8hka4ly3dc3dv6dnk2bq3hbiiahqqragdm1bqgy1plvwa5q6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gconf glib gtk random ];
       description = "Randomly set a picture as the GNOME desktop background";
       license = "GPL";
     }) {};

  "gnome-keyring" = callPackage
    ({ mkDerivation, c2hs, gnome_keyring, text, time }:
     mkDerivation {
       pname = "gnome-keyring";
       version = "0.3.1";
       sha256 = "08fayi4ixqyzin7lxyx2s3yap377y6nrdf4fmv7bi895j2k642l8";
       buildDepends = [ text time ];
       buildTools = [ c2hs ];
       extraLibraries = [ gnome_keyring ];
       pkgconfigDepends = [ gnome_keyring ];
       homepage = "https://john-millikin.com/software/haskell-gnome-keyring/";
       description = "Bindings for libgnome-keyring";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "gnomevfs" = callPackage
    ({ mkDerivation, glib, gnome_vfs, gnome_vfs_module, gtk
     , gtk2hs-buildtools, mtl
     }:
     mkDerivation {
       pname = "gnomevfs";
       version = "0.11.0";
       sha256 = "0g4dic9k1c4221v4kacc46sj2vra1jlnb4pn657zfwbkni8z0kmp";
       buildDepends = [ glib gtk mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ gnome_vfs gnome_vfs_module ];
       homepage = "http://www.haskell.org/gtk2hs/";
       description = "Binding to the GNOME Virtual File System library";
       license = "GPL";
     }) {};

  "gnuidn" = callPackage
    ({ mkDerivation, c2hs, libidn, text }:
     mkDerivation {
       pname = "gnuidn";
       version = "0.2.1";
       sha256 = "1jii635wc3j1jnwwx24j9gg9xd91g2iw5967acn74p7db62lqx37";
       buildDepends = [ text ];
       buildTools = [ c2hs ];
       extraLibraries = [ libidn ];
       pkgconfigDepends = [ libidn ];
       homepage = "https://john-millikin.com/software/haskell-gnuidn/";
       description = "Bindings for GNU IDN";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "gnuplot" = callPackage
    ({ mkDerivation, data-accessor, data-accessor-transformers, deepseq
     , filepath, temporary, time, transformers, utility-ht
     }:
     mkDerivation {
       pname = "gnuplot";
       version = "0.5.2.2";
       sha256 = "0l5hi346bhs9w11i3z6yy4mcr3k50xcp3j31g6wza9grxlfqc5av";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor data-accessor-transformers deepseq filepath temporary
         time transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Gnuplot";
       description = "2D and 3D plots using gnuplot";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gnutls" = callPackage
    ({ mkDerivation, gnutls, monads-tf, transformers }:
     mkDerivation {
       pname = "gnutls";
       version = "0.1.5";
       sha256 = "1sf6b4g0jwk1jrzjq4vwwak57lzm1zc43ggysp973q5icm6gs8wp";
       buildDepends = [ monads-tf transformers ];
       extraLibraries = [ gnutls ];
       pkgconfigDepends = [ gnutls ];
       homepage = "https://john-millikin.com/software/haskell-gnutls/";
       description = "Bindings for GNU libgnutls";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) gnutls; };

  "goa" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "goa";
       version = "3.3";
       sha256 = "0z1mhi2y4qm1lj6vfsmxf2gs5shfwdac3p9gqj89hx28mpc3rmzk";
       buildDepends = [ filepath ];
       description = "GHCi bindings to lambdabot";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "goatee" = callPackage
    ({ mkDerivation, HUnit, mtl, parsec }:
     mkDerivation {
       pname = "goatee";
       version = "0.2.0";
       sha256 = "0lqvdxv500q19xfpp4vcvz0y3s9s2q1iz1n2c01k9kbph4hjd198";
       buildDepends = [ mtl parsec ];
       testDepends = [ HUnit mtl parsec ];
       homepage = "http://khumba.net/projects/goatee";
       description = "A monadic take on a 2,500-year-old board game - library";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "goatee-gtk" = callPackage
    ({ mkDerivation, cairo, filepath, goatee, gtk, HUnit, mtl, parsec
     }:
     mkDerivation {
       pname = "goatee-gtk";
       version = "0.2.0";
       sha256 = "03klvlxzmm50n8b1bslqjqvrpisiv7rmhjzhssiyakg1qzjpnjzf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo filepath goatee gtk mtl parsec ];
       testDepends = [ HUnit ];
       homepage = "http://khumba.net/projects/goatee";
       description = "A monadic take on a 2,500-year-old board game - GTK+ UI";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "gofer-prelude" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "gofer-prelude";
       version = "2.30.3";
       sha256 = "1whl3fvwxh26nsb4l6brljsmwl891w5yxlsv69mdfvfb1rl7p64f";
       homepage = "http://code.haskell.org/~dons/code/gofer-prelude";
       description = "The Gofer 2.30 standard prelude";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "google-dictionary" = callPackage
    ({ mkDerivation, aeson, HTTP, lens, mtl }:
     mkDerivation {
       pname = "google-dictionary";
       version = "0.1.0.2";
       sha256 = "12ib4y8cjg0dvvizy8yxgjaqvyawdy7vxmh1ab12b4yg40wwsg6g";
       buildDepends = [ aeson HTTP lens mtl ];
       homepage = "https://github.com/mitchellwrosen/google-dictionary-api";
       description = "Simple interface to the google.com/dictionary API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "google-drive" = callPackage
    ({ mkDerivation, aeson, conduit, conduit-extra, filepath
     , google-oauth2, hspec, http-conduit, http-types, load-env, mtl
     , random, resourcet, text, time
     }:
     mkDerivation {
       pname = "google-drive";
       version = "0.2.0";
       sha256 = "1lkz7dc7jiq2d8k1714priyxm464v9m04inc3glbw3k2wa68h1s3";
       buildDepends = [
         aeson conduit conduit-extra filepath http-conduit http-types mtl
         random resourcet text time
       ];
       testDepends = [ conduit google-oauth2 hspec load-env text ];
       description = "Google Drive API access";
       license = stdenv.lib.licenses.mit;
     }) {};

  "google-html5-slide" = callPackage
    ({ mkDerivation, blaze-html, cmdargs, data-default, hamlet, pandoc
     , shakespeare-css, syb, text, time
     }:
     mkDerivation {
       pname = "google-html5-slide";
       version = "2011.0";
       sha256 = "0wkblf0i4lfw6s8adf2clcqj3161863vbsq1cip3rcn9djqbimzl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-html cmdargs data-default hamlet pandoc shakespeare-css syb
         text time
       ];
       description = "Google HTML5 Slide generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "google-mail-filters" = callPackage
    ({ mkDerivation, google-search, text, time, xml-conduit }:
     mkDerivation {
       pname = "google-mail-filters";
       version = "0.0.1.1";
       sha256 = "0cxslr062h536q4vgs16r2s1lm7x5m9lcy1hzif6mpnmvjzqsn11";
       buildDepends = [ google-search text time xml-conduit ];
       testDepends = [ google-search text time xml-conduit ];
       homepage = "https://github.com/liyang/google-mail-filters";
       description = "Write GMail filters and output to importable XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "google-oauth2" = callPackage
    ({ mkDerivation, aeson, hspec, HTTP, http-conduit, http-types
     , load-env
     }:
     mkDerivation {
       pname = "google-oauth2";
       version = "0.1.0";
       sha256 = "0sn86raxvgzp4hjmg5b0gm5ibhiys5jimvxgds13qxbgrgcvvwh6";
       buildDepends = [ aeson HTTP http-conduit ];
       testDepends = [ hspec http-conduit http-types load-env ];
       description = "Google OAuth2 token negotiation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "google-search" = callPackage
    ({ mkDerivation, free, nats, text, time }:
     mkDerivation {
       pname = "google-search";
       version = "0.1.0.1";
       sha256 = "0nkpvp5zjf3mkhqv6z5xvrmr6b6d5zgmzlh67y7ssslp4620m5m7";
       buildDepends = [ free nats text time ];
       homepage = "https://github.com/liyang/google-search";
       description = "EDSL for Google and GMail search expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "googleplus" = callPackage
    ({ mkDerivation, aeson, attoparsec, enumerator, http-enumerator
     , http-types, mtl, text, time, timerep, transformers, url
     }:
     mkDerivation {
       pname = "googleplus";
       version = "0.3.1.1";
       sha256 = "046fvrr8cg00wagx4vdx35l2xk8qbs7fbs0v5hj45h4jk9dnk2jg";
       buildDepends = [
         aeson attoparsec enumerator http-enumerator http-types mtl text
         time timerep transformers url
       ];
       homepage = "http://github.com/michaelxavier/GooglePlus";
       description = "Haskell implementation of the Google+ API v1";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gopherbot" = callPackage
    ({ mkDerivation, HDBC, HDBC-postgresql, MissingH, network, parsec
     }:
     mkDerivation {
       pname = "gopherbot";
       version = "0.1.0";
       sha256 = "0qa4xs07975spf4pwc2y0hichn4x8l7kn2949v0j19gbd099vjng";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HDBC HDBC-postgresql MissingH network parsec ];
       description = "Spidering robot to download files from Gopherspace";
       license = "GPL";
     }) {};

  "gpah" = callPackage
    ({ mkDerivation, Cabal, cmdargs, csv, deepseq, filepath
     , haskell-src-exts, hint, HTTP, network, syb, tar, uniplate
     , uu-parsinglib, zlib
     }:
     mkDerivation {
       pname = "gpah";
       version = "0.0.2";
       sha256 = "1zwz065fdg3k09nh976igr90p1qpb397fyi7jh941c512m70qbxr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal cmdargs csv deepseq filepath haskell-src-exts hint HTTP
         network syb tar uniplate uu-parsinglib zlib
       ];
       description = "Generic Programming Use in Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gpcsets" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "gpcsets";
       version = "0.9.2.0";
       sha256 = "1fm0k6n6fb5a3wvmb2l6k4zq3sdfxv16cb2y2zmjgxgj5n3gy9s8";
       description = "Generalized Pitch Class Sets for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gpolyline" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "gpolyline";
       version = "0.1.0.1";
       sha256 = "01bsl7s8r33jgvk9lyca02awj43acii8spa6sskz19ivhm2adcr8";
       buildDepends = [ split ];
       homepage = "https://github.com/fegu/gpolyline";
       description = "Pure module for encoding/decoding Google Polyline";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gps" = callPackage
    ({ mkDerivation, GPX, gpx-conduit, hxt, prettyclass, QuickCheck
     , statistics, test-framework, test-framework-quickcheck2, time
     , vector, xsd
     }:
     mkDerivation {
       pname = "gps";
       version = "1.1";
       sha256 = "14plvzspi7c1fsz91kn945vlpalbdx67b8wkfb05cpa3id7g6jp6";
       buildDepends = [ gpx-conduit prettyclass statistics time vector ];
       testDepends = [
         GPX hxt QuickCheck statistics test-framework
         test-framework-quickcheck2 time vector xsd
       ];
       description = "For manipulating GPS coordinates and trails";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gps2htmlReport" = callPackage
    ({ mkDerivation, cairo, Chart, cmdargs, colour, data-accessor
     , filepath, gd, gps, GPX, hsmagick, html, http-enumerator, random
     , tar, time, xsd
     }:
     mkDerivation {
       pname = "gps2htmlReport";
       version = "0.3.1";
       sha256 = "1n6a1c6w3wmyaqan3ymlrk36h98yvy40wgwfdah4ayyxlsmvvxg8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo Chart cmdargs colour data-accessor filepath gd gps GPX
         hsmagick html http-enumerator random tar time xsd
       ];
       homepage = "https://github.com/robstewart57/Gps2HtmlReport";
       description = "GPS to HTML Summary Report";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gpx-conduit" = callPackage
    ({ mkDerivation, attoparsec, conduit, filepath, monad-control, text
     , time, void, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "gpx-conduit";
       version = "0.1.1";
       sha256 = "0ffb0npx0yb69qxdcdznxpw36zjp2za7vdpzy2r5l245y0xr7mj4";
       buildDepends = [
         attoparsec conduit filepath monad-control text time void
         xml-conduit xml-types
       ];
       description = "Read GPX files using conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graceful" = callPackage
    ({ mkDerivation, filepath, hspec, network, stm }:
     mkDerivation {
       pname = "graceful";
       version = "0.1.1.4";
       sha256 = "1dj23pkvh013428247s6n6vsbv3klfa5gj9wrjs1qmaz1gkc216a";
       buildDepends = [ network stm ];
       testDepends = [ filepath hspec network stm ];
       description = "Library to write graceful shutdown / upgrade service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "grammar-combinators" = callPackage
    ({ mkDerivation, enumerable, fgl, graphviz, MaybeT, mtl, multirec
     , parsec, text, uu-parsinglib
     }:
     mkDerivation {
       pname = "grammar-combinators";
       version = "0.2.7";
       sha256 = "1z7i1270g919g1756wgfap2mfhvln13bhgya2pw4b9lbr5fphkdd";
       buildDepends = [
         enumerable fgl graphviz MaybeT mtl multirec parsec text
         uu-parsinglib
       ];
       homepage = "http://projects.haskell.org/grammar-combinators/";
       description = "A parsing library of context-free grammar combinators";
       license = "LGPL";
     }) {};

  "grapefruit-examples" = callPackage
    ({ mkDerivation, colour, fraction, grapefruit-frp
     , grapefruit-records, grapefruit-ui
     }:
     mkDerivation {
       pname = "grapefruit-examples";
       version = "0.1.0.5";
       sha256 = "0ad64jnp71gh7rj3rlfw7z67l5xnmc052g5q3slw3s6ga7spajlr";
       buildDepends = [
         colour fraction grapefruit-frp grapefruit-records grapefruit-ui
       ];
       homepage = "http://grapefruit-project.org/";
       description = "Examples using the Grapefruit library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "grapefruit-frp" = callPackage
    ({ mkDerivation, arrows, fingertree, semigroups, TypeCompose }:
     mkDerivation {
       pname = "grapefruit-frp";
       version = "0.1.0.5";
       sha256 = "155hmjflmzm463b00r1jjwbpjq8ilwss5xqwi6nz6lm3xbc2ddhm";
       buildDepends = [ arrows fingertree semigroups TypeCompose ];
       homepage = "http://grapefruit-project.org/";
       description = "Functional Reactive Programming core";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "grapefruit-records" = callPackage
    ({ mkDerivation, arrows, grapefruit-frp }:
     mkDerivation {
       pname = "grapefruit-records";
       version = "0.1.0.5";
       sha256 = "02hyrbsz20fl9mnynval55xar175vgy77s23zaq66r3f8c6gf6h1";
       buildDepends = [ arrows grapefruit-frp ];
       homepage = "http://grapefruit-project.org/";
       description = "A record system for Functional Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "grapefruit-ui" = callPackage
    ({ mkDerivation, arrows, colour, fraction, grapefruit-frp
     , grapefruit-records
     }:
     mkDerivation {
       pname = "grapefruit-ui";
       version = "0.1.0.5";
       sha256 = "11xxvg2847vyzpw8i11a6mnflyr639hdwj51r9pfyaq95034q9jq";
       buildDepends = [
         arrows colour fraction grapefruit-frp grapefruit-records
       ];
       homepage = "http://grapefruit-project.org/";
       description = "Declarative user interface programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "grapefruit-ui-gtk" = callPackage
    ({ mkDerivation, colour, fraction, glib, grapefruit-frp
     , grapefruit-records, grapefruit-ui, gtk
     }:
     mkDerivation {
       pname = "grapefruit-ui-gtk";
       version = "0.1.0.5";
       sha256 = "106svyjnv72f0ikcfxgq8zagqxcn52yc1f31kfgz9258mmdki49z";
       buildDepends = [
         colour fraction glib grapefruit-frp grapefruit-records
         grapefruit-ui gtk
       ];
       homepage = "http://grapefruit-project.org/";
       description = "GTK+-based backend for declarative user interface programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-core" = callPackage
    ({ mkDerivation, deepseq, hashable, HTF, mtl, QuickCheck, safe
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "graph-core";
       version = "0.2.1.0";
       sha256 = "0xx99p2i1ng79rph0hkb2dp5r9y77s0y4v8njsywxyq4kbl3ly7f";
       buildDepends = [
         deepseq hashable mtl QuickCheck safe unordered-containers vector
       ];
       testDepends = [
         deepseq hashable HTF mtl QuickCheck safe unordered-containers
         vector
       ];
       homepage = "https://github.com/factisresearch/graph-core";
       description = "Fast, memory efficient and persistent graph implementation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "graph-generators" = callPackage
    ({ mkDerivation, Cabal, fgl, hspec, hspec-expectations, multiset
     , mwc-random, QuickCheck
     }:
     mkDerivation {
       pname = "graph-generators";
       version = "0.1.2.0";
       sha256 = "0iw22rmlhryc0z6k92lzdyjkc1qs98lj2509rk7qc7z0ghbhir9s";
       buildDepends = [ fgl multiset mwc-random ];
       testDepends = [
         Cabal fgl hspec hspec-expectations multiset mwc-random QuickCheck
       ];
       homepage = "https://github.com/ulikoehler/graph-random";
       description = "Functions for generating structured or random FGL graphs";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "graph-matchings" = callPackage
    ({ mkDerivation, fgl }:
     mkDerivation {
       pname = "graph-matchings";
       version = "0.1.0.0";
       sha256 = "0dzkv13w06hkxg2vkbblpskvsq02c2ay06rw2j4vyjpw13hms5bv";
       buildDepends = [ fgl ];
       description = "An implementation of algorithms for matchings in graphs";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "graph-rewriting" = callPackage
    ({ mkDerivation, base-unicode-symbols, mtl }:
     mkDerivation {
       pname = "graph-rewriting";
       version = "0.7.6";
       sha256 = "014zsw98ksylr4g1ax3xxlsh9jiybaz7xjapl2h88a8ma91da3jz";
       buildDepends = [ base-unicode-symbols mtl ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Monadic graph rewriting of hypergraphs with ports and multiedges";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-cl" = callPackage
    ({ mkDerivation, base-unicode-symbols, GLUT, graph-rewriting
     , graph-rewriting-gl, graph-rewriting-layout, OpenGL, parsec
     }:
     mkDerivation {
       pname = "graph-rewriting-cl";
       version = "0.2.2";
       sha256 = "0rwycs3vnzy9awm081h836136s2wjyk9qyhsx9j6z7y3lgsb2cr0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols GLUT graph-rewriting graph-rewriting-gl
         graph-rewriting-layout OpenGL parsec
       ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Interactive graph rewriting system implementing various well-known combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-gl" = callPackage
    ({ mkDerivation, AC-Vector, base-unicode-symbols, GLUT
     , graph-rewriting, graph-rewriting-layout, OpenGL
     }:
     mkDerivation {
       pname = "graph-rewriting-gl";
       version = "0.7.5";
       sha256 = "0cynzhr226944w3sn13bdnl60z9fy87va5fjayd4g0as2168ikhy";
       buildDepends = [
         AC-Vector base-unicode-symbols GLUT graph-rewriting
         graph-rewriting-layout OpenGL
       ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "OpenGL interface for interactive port graph rewriting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-lambdascope" = callPackage
    ({ mkDerivation, base-unicode-symbols, GLUT, graph-rewriting
     , graph-rewriting-gl, graph-rewriting-layout
     , graph-rewriting-strategies, IndentParser, OpenGL, parsec
     }:
     mkDerivation {
       pname = "graph-rewriting-lambdascope";
       version = "0.5.6";
       sha256 = "1qwy2mn22a5ppz3lrqz6czxrr3j26zxpp6lm3sf121k3a78c7vvp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols GLUT graph-rewriting graph-rewriting-gl
         graph-rewriting-layout graph-rewriting-strategies IndentParser
         OpenGL parsec
       ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Lambdascope, an optimal evaluator of the lambda calculus, as an interactive graph-rewriting system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-layout" = callPackage
    ({ mkDerivation, AC-Vector, base-unicode-symbols, graph-rewriting
     }:
     mkDerivation {
       pname = "graph-rewriting-layout";
       version = "0.5.3";
       sha256 = "09fscyaknd3nhqn7d3wa4j8n2yagmmfk661m41cqx5hlay60x5f5";
       buildDepends = [ AC-Vector base-unicode-symbols graph-rewriting ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Force-directed node placement intended for incremental graph drawing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-ski" = callPackage
    ({ mkDerivation, base-unicode-symbols, GLUT, graph-rewriting
     , graph-rewriting-gl, graph-rewriting-layout, OpenGL, parsec
     }:
     mkDerivation {
       pname = "graph-rewriting-ski";
       version = "0.6.4";
       sha256 = "0jdfwcz427lx3r0alba1rphc6hj43mqygkdqmwn37yll4r1c62a4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols GLUT graph-rewriting graph-rewriting-gl
         graph-rewriting-layout OpenGL parsec
       ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Two evalutors of the SKI combinator calculus as interactive graph rewrite systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-strategies" = callPackage
    ({ mkDerivation, base-unicode-symbols, graph-rewriting }:
     mkDerivation {
       pname = "graph-rewriting-strategies";
       version = "0.2.3";
       sha256 = "0mimp7xbmnp9c2j8hr09qivc6kgfi4g63p071s560laddins39jr";
       buildDepends = [ base-unicode-symbols graph-rewriting ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Evaluation strategies for port-graph rewriting systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-trs" = callPackage
    ({ mkDerivation, base-unicode-symbols, filepath, GLUT
     , graph-rewriting, graph-rewriting-gl, graph-rewriting-layout
     , OpenGL, uu-parsinglib
     }:
     mkDerivation {
       pname = "graph-rewriting-trs";
       version = "0.1.6";
       sha256 = "1v8imc3ym0jjyhpw10xh36l060nvd0klp9llnmdnv8qkmy7pn8yg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols filepath GLUT graph-rewriting
         graph-rewriting-gl graph-rewriting-layout OpenGL uu-parsinglib
       ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Evaluate first-order applicative term rewrite systems interactively using graph reduction";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-rewriting-ww" = callPackage
    ({ mkDerivation, base-unicode-symbols, GLUT, graph-rewriting
     , graph-rewriting-gl, graph-rewriting-layout, IndentParser, OpenGL
     , parsec
     }:
     mkDerivation {
       pname = "graph-rewriting-ww";
       version = "0.3.4";
       sha256 = "169s5iy15q9ll12fjxizrc0l2q34rvqmxfpbcanc602cj3inav2w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols GLUT graph-rewriting graph-rewriting-gl
         graph-rewriting-layout IndentParser OpenGL parsec
       ];
       homepage = "http://rochel.info/#graph-rewriting";
       description = "Evaluator of the lambda-calculus in an interactive graph rewriting system with explicit sharing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-serialize" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "graph-serialize";
       version = "0.2";
       sha256 = "1a9qq5gpyxg6j6ja3kjldnf11wywjvvxpwvgiahlsrmwfw2c8d74";
       homepage = "http://github.com/nominolo/graph-serialize";
       description = "Serialization of data structures with references";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-utils" = callPackage
    ({ mkDerivation, fgl, mtl, parsec, syb }:
     mkDerivation {
       pname = "graph-utils";
       version = "0.3.7";
       sha256 = "06wl6i8z0gfndr96g5ps11h877rbwvi1d9cbbr3d2whvbcsyclsf";
       buildDepends = [ fgl mtl parsec syb ];
       homepage = "http://github.com/konn/graph-utils/";
       description = "A simple wrapper & quasi quoter for fgl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-visit" = callPackage
    ({ mkDerivation, data-lens, data-lens-template, mtl }:
     mkDerivation {
       pname = "graph-visit";
       version = "0.1.0.2";
       sha256 = "0afj0wqpk549n0xs4vqcblrxs1d6knmxcldfnmz5vy2da5zlfn0q";
       buildDepends = [ data-lens data-lens-template mtl ];
       homepage = "https://github.com/atzedijkstra/graph-visit";
       description = "Graph walk abstraction";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graph-wrapper" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "graph-wrapper";
       version = "0.2.4.3";
       sha256 = "1wfazkczc9m1r0snzv5b4ax315g93qgrnqc2wnrqqnzhcfy1symg";
       homepage = "http://www.github.com/batterseapower/graph-wrapper";
       description = "A wrapper around the standard Data.Graph with a less awkward interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphbuilder" = callPackage
    ({ mkDerivation, mtl, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "graphbuilder";
       version = "0.1.0.0";
       sha256 = "0zhjzb53qaj6dy6ncqjaxdfrs2hwfy4g9czybpsgnbniqm07i22b";
       buildDepends = [ mtl ];
       testDepends = [
         mtl QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/tel/graphbuilder";
       description = "A declarative, monadic graph construction language for small graphs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "graphene" = callPackage
    ({ mkDerivation, bifunctors, hashable, lens-family
     , lens-family-core, mtl, transformers
     }:
     mkDerivation {
       pname = "graphene";
       version = "0.1.0.4";
       sha256 = "09q57hqf3s29y3b6wn79wa9ksm5r2p75ww3kpwqmigvngy4sz006";
       buildDepends = [
         bifunctors hashable lens-family lens-family-core mtl transformers
       ];
       homepage = "https://github.com/5outh/graphene";
       description = "A minimal Graph Theory library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "graphics-drawingcombinators" = callPackage
    ({ mkDerivation, bitmap, FTGL, OpenGL, stb-image }:
     mkDerivation {
       pname = "graphics-drawingcombinators";
       version = "1.5";
       sha256 = "064g5zcdm0xpczyf8xwx0q0yr6jrd54461qpfxbvsh90lq0pa051";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bitmap FTGL OpenGL stb-image ];
       homepage = "http://github.com/luqui/graphics-drawingcombinators";
       description = "A functional interface to 2D drawing in OpenGL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphics-formats-collada" = callPackage
    ({ mkDerivation, bitmap-opengl, hxt, OpenGL, stb-image
     , transformers
     }:
     mkDerivation {
       pname = "graphics-formats-collada";
       version = "0.3.1";
       sha256 = "1kfx1c2x8v2i7ckhjiqv7ghhn44w7fscghxkn1iqkp3mj1p3xvbv";
       buildDepends = [ bitmap-opengl hxt OpenGL stb-image transformers ];
       homepage = "http://github.com/luqui/collada";
       description = "Load 3D geometry in the COLLADA format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphicsFormats" = callPackage
    ({ mkDerivation, OpenGL, QuickCheck }:
     mkDerivation {
       pname = "graphicsFormats";
       version = "0.1";
       sha256 = "0bcqj0n8qqaqfrn21qgkf8si5qgxl3qlsc8djy0rqhnfi2grb8nh";
       buildDepends = [ OpenGL QuickCheck ];
       description = "Classes for renderable objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphicstools" = callPackage
    ({ mkDerivation, bindings-DSL, CV, wx, wxcore }:
     mkDerivation {
       pname = "graphicstools";
       version = "0.2.2";
       sha256 = "0hcz8w6yf7dls4sv0i5kihs22ysv0dl63q5bs5y4hgv6d747psp8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bindings-DSL CV wx wxcore ];
       homepage = "https://yousource.it.jyu.fi/cvlab/pages/GraphicsTools";
       description = "Tools for creating graphical UIs, based on wxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphmod" = callPackage
    ({ mkDerivation, dotgen, filepath, haskell-lexer }:
     mkDerivation {
       pname = "graphmod";
       version = "1.2.6";
       sha256 = "02p1x44ywv2mb4l2dsz9z3ybnvv4nns3882lqm3nc8sw2hkib8z3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ dotgen filepath haskell-lexer ];
       homepage = "http://github.com/yav/graphmod/wiki";
       description = "Present the module dependencies of a program as a \"dot\" graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphs" = callPackage
    ({ mkDerivation, transformers, void }:
     mkDerivation {
       pname = "graphs";
       version = "0.5.0.1";
       sha256 = "1qr5ihf66byq6wq3f6al1i2jrxfi107b5agwck265425mq0jaf9f";
       buildDepends = [ transformers void ];
       homepage = "http://github.com/ekmett/graphs";
       description = "A simple monadic graph library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphtype" = callPackage
    ({ mkDerivation, dotgen, haskell-src-exts, uniplate }:
     mkDerivation {
       pname = "graphtype";
       version = "0.2.0";
       sha256 = "13nblgd4b3pwpw8idvbd54fq2lf233vj8gvsl0qr381lsvj69fbi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ dotgen haskell-src-exts uniplate ];
       homepage = "http://github.com/explicitcall/graphtype";
       description = "A simple tool to illustrate dependencies between Haskell types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "graphviz" = callPackage
    ({ mkDerivation, colour, dlist, fgl, filepath, polyparse
     , QuickCheck, systemGraphviz, temporary, text, transformers
     , wl-pprint-text
     }:
     mkDerivation {
       pname = "graphviz";
       version = "2999.17.0.1";
       sha256 = "0s6l1mlqvllrlx7vc06lgcs68ajhfk98awm63ab1dkqmcnj23ixv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         colour dlist fgl filepath polyparse temporary text transformers
         wl-pprint-text
       ];
       testDepends = [ fgl filepath QuickCheck systemGraphviz text ];
       homepage = "http://projects.haskell.org/graphviz/";
       description = "Bindings to Graphviz for graph visualisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gravatar" = callPackage
    ({ mkDerivation, data-default, HTTP, pureMD5, text }:
     mkDerivation {
       pname = "gravatar";
       version = "0.6";
       sha256 = "035qhrk0s4bpv9xvji4j7w2r98gppn2armz4wjdjy8f50anjpfw3";
       buildDepends = [ data-default HTTP pureMD5 text ];
       homepage = "http://github.com/pbrisbin/gravatar";
       description = "Look up gravatar image urls by email address";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gray-code" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "gray-code";
       version = "0.3.1";
       sha256 = "0b0pm24mxjsxg95q6yisr9pa0jfklsfw66cicryib42czvv083av";
       testDepends = [ QuickCheck ];
       homepage = "http://bitbucket.org/astanin/hs-gray-code";
       description = "Gray code encoder/decoder";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gray-extended" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "gray-extended";
       version = "1.5";
       sha256 = "19v7vazq1dxqj324m36ff88xp8w5jssbh8w50i2ba8c3h7s2x470";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/mhwombat/gray-extended";
       description = "Gray encoding schemes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "greencard" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "greencard";
       version = "3.0.4.2";
       sha256 = "1vl9p6mqss5r4jfqnjir7m1q7fhh9f204c99qd5y5d0j7yc26r5y";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/sof/greencard";
       description = "GreenCard, a foreign function pre-processor for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "greencard-lib" = callPackage
    ({ mkDerivation, greencard }:
     mkDerivation {
       pname = "greencard-lib";
       version = "3.0.1";
       sha256 = "1a8h36kclb5db7kfy1pb4h2pwy6a6wwnjpm21xzvc9fjx9vj44kd";
       buildDepends = [ greencard ];
       homepage = "http://www.haskell.org/greencard/";
       description = "A foreign function interface pre-processor library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "greg-client" = callPackage
    ({ mkDerivation, binary, clock, hostname, network, stm, system-uuid
     , time
     }:
     mkDerivation {
       pname = "greg-client";
       version = "1.0.2";
       sha256 = "1p645qgn5i194mna20ariypxp0dci7lzyxhszmnyylpd0icyg4in";
       buildDepends = [
         binary clock hostname network stm system-uuid time
       ];
       homepage = "http://code.google.com/p/greg/";
       description = "A scalable distributed logger with a high-precision global time axis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "grid" = callPackage
    ({ mkDerivation, cereal, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "grid";
       version = "7.6.7";
       sha256 = "1sdm47y9hbqn40bfi4fssnbrhksca7gdkgpqvz1gd2lqs729i1nf";
       buildDepends = [ cereal ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/mhwombat/grid";
       description = "Tools for working with regular grids (graphs, lattices)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "grm" = callPackage
    ({ mkDerivation, Cabal, cmdargs, filepath, happy, parsec, syb
     , wl-pprint
     }:
     mkDerivation {
       pname = "grm";
       version = "0.1.1";
       sha256 = "1za45931c6avyqxb6dwiafl739fmwdk68kxpk13zkv0jwxxpp9px";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal cmdargs filepath parsec syb wl-pprint ];
       buildTools = [ happy ];
       description = "grm grammar converter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groom" = callPackage
    ({ mkDerivation, haskell-src-exts }:
     mkDerivation {
       pname = "groom";
       version = "0.1.2";
       sha256 = "045hzpnf17rp1ib6q3gcznl9b7ivz5zmv0gh7qfg726kr8i030hf";
       buildDepends = [ haskell-src-exts ];
       description = "Pretty printing for well-behaved Show instances";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "groundhog" = callPackage
    ({ mkDerivation, blaze-builder, monad-control, monad-logger, mtl
     , text, time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "groundhog";
       version = "0.7.0";
       sha256 = "0l86d46ch5ivm3hjdz02rzwj1dijnilksm2i7zrcj7hyhksci2v6";
       buildDepends = [
         blaze-builder monad-control monad-logger mtl text time transformers
         transformers-base
       ];
       homepage = "http://github.com/lykahb/groundhog";
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groundhog-inspector" = callPackage
    ({ mkDerivation, aeson-pretty, cmdargs, groundhog, groundhog-sqlite
     , groundhog-th, mtl, regex-compat, syb, text, time, transformers
     }:
     mkDerivation {
       pname = "groundhog-inspector";
       version = "0.7.1.1";
       sha256 = "17bnzi1gkhl8ps9dihmrw3nb0mdlbgd83k67dplqzgj1q3z52lpy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson-pretty cmdargs groundhog groundhog-sqlite groundhog-th mtl
         regex-compat syb text time transformers
       ];
       homepage = "http://github.com/lykahb/groundhog";
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groundhog-mysql" = callPackage
    ({ mkDerivation, groundhog, monad-control, monad-logger, mysql
     , mysql-simple, resource-pool, text, time, transformers
     }:
     mkDerivation {
       pname = "groundhog-mysql";
       version = "0.7.0";
       sha256 = "1impf72vq2lrf6apcg5lmw9pnrbhk77f83r1a8kp4ssn61zsk6z8";
       buildDepends = [
         groundhog monad-control monad-logger mysql mysql-simple
         resource-pool text time transformers
       ];
       description = "MySQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groundhog-postgresql" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, groundhog
     , monad-control, monad-logger, postgresql-libpq, postgresql-simple
     , resource-pool, text, time, transformers
     }:
     mkDerivation {
       pname = "groundhog-postgresql";
       version = "0.7.0";
       sha256 = "05j5188gm183mwzp270m1h4311n4b4cxlz7c3y47p7bjv65daq4a";
       buildDepends = [
         attoparsec blaze-builder groundhog monad-control monad-logger
         postgresql-libpq postgresql-simple resource-pool text time
         transformers
       ];
       description = "PostgreSQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groundhog-sqlite" = callPackage
    ({ mkDerivation, direct-sqlite, groundhog, monad-control
     , monad-logger, resource-pool, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "groundhog-sqlite";
       version = "0.7.0";
       sha256 = "17np5dx8c1z27h8dv4gw2qzqx2qs5l4ars1k0xdqs0xzf745id84";
       buildDepends = [
         direct-sqlite groundhog monad-control monad-logger resource-pool
         text transformers unordered-containers
       ];
       description = "Sqlite3 backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groundhog-th" = callPackage
    ({ mkDerivation, aeson, groundhog, text, time, unordered-containers
     , yaml
     }:
     mkDerivation {
       pname = "groundhog-th";
       version = "0.7.0";
       sha256 = "14g4665wrr3226m2v63p4j8g9bcyi5la7nk2vh509xyz3z17aq67";
       buildDepends = [
         aeson groundhog text time unordered-containers yaml
       ];
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "group-with" = callPackage
    ({ mkDerivation, Cabal, hspec, hspec-expectations, QuickCheck }:
     mkDerivation {
       pname = "group-with";
       version = "0.2.0.2";
       sha256 = "0c7p3bj3b68h2zp0lzldfjwq7x2a38v0gnxyflisawdg61jnx8h6";
       testDepends = [ Cabal hspec hspec-expectations QuickCheck ];
       homepage = "https://github.com/ulikoehler/group-with";
       description = "Classify objects by key-generating function, like SQL GROUP BY";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "groupoid" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "groupoid";
       version = "0.1.0";
       sha256 = "0gpjlq9f2il4vp7ihh1sf5g2jr1rbi5big5c6dhjk961n8b1dq0z";
       homepage = "http://code.google.com/p/copperbox/";
       description = "A Groupoid class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groupoids" = callPackage
    ({ mkDerivation, semigroupoids }:
     mkDerivation {
       pname = "groupoids";
       version = "4.0";
       sha256 = "08la44c19pz2clws5mb939zc1d17cb6qy9qlh2n1634pl0zrawb6";
       buildDepends = [ semigroupoids ];
       homepage = "http://github.com/ekmett/groupoids/";
       description = "This package has been absorbed into semigroupoids 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "groups" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "groups";
       version = "0.4.0.0";
       sha256 = "1kp8h3617cimya8nnadljyy4vk66dzl5nzfm900k2gh3ci8kja6k";
       description = "Haskell 98 groups";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "growler" = callPackage
    ({ mkDerivation, aeson, blaze-builder, case-insensitive, either
     , http-types, lens, monad-control, mtl, pipes, pipes-aeson
     , pipes-wai, regex-compat, text, transformers-base
     , unordered-containers, vector, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "growler";
       version = "0.4.0";
       sha256 = "0z05j8xxq4zs2n8v94mgl359kv6i8mi2q9avw40jc7pslm7qfr9v";
       buildDepends = [
         aeson blaze-builder case-insensitive either http-types lens
         monad-control mtl pipes pipes-aeson pipes-wai regex-compat text
         transformers-base unordered-containers vector wai wai-extra warp
       ];
       homepage = "http://github.com/iand675/growler";
       description = "A revised version of the scotty library that attempts to be simpler and more performant";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gruff" = callPackage
    ({ mkDerivation, filepath, FTGL, gtk, gtkglext, mtl, OpenGL
     , OpenGLRaw, parallel, qd, qd-vec, ruff, time, Vec
     }:
     mkDerivation {
       pname = "gruff";
       version = "0.3.4";
       sha256 = "0is9bpaalyr78g0hfp6bbmny4w6w8a3aj9a041f82499hhy0vv0h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath FTGL gtk gtkglext mtl OpenGL OpenGLRaw parallel qd qd-vec
         ruff time Vec
       ];
       description = "fractal explorer GUI using the ruff library";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "gruff-examples" = callPackage
    ({ mkDerivation, data-memocombinators, filepath, gruff, qd, qd-vec
     , random, ruff, Vec
     }:
     mkDerivation {
       pname = "gruff-examples";
       version = "0.3.1";
       sha256 = "02ygb88zxikf5ggw9ypyzganngk4dgfcszpkyzy6cwm47mksdzg7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-memocombinators filepath gruff qd qd-vec random ruff Vec
       ];
       description = "Mandelbrot Set examples using ruff and gruff";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "gsasl" = callPackage
    ({ mkDerivation, gsasl, transformers }:
     mkDerivation {
       pname = "gsasl";
       version = "0.3.5";
       sha256 = "1797rs6syrgs82akbj7nkmj0nni4w83fhwrl1zy2l3jqkcacvbm3";
       buildDepends = [ transformers ];
       pkgconfigDepends = [ gsasl ];
       homepage = "https://john-millikin.com/software/haskell-gsasl/";
       description = "Bindings for GNU libgsasl";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) gsasl; };

  "gsc-weighting" = callPackage
    ({ mkDerivation, hierarchical-clustering }:
     mkDerivation {
       pname = "gsc-weighting";
       version = "0.2";
       sha256 = "1mdm0n96gy00wf7lv6c0qxk9bi1ahf58vzrgnh3jfiwhzjivcvlj";
       buildDepends = [ hierarchical-clustering ];
       description = "Generic implementation of Gerstein/Sonnhammer/Chothia weighting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gsl-random" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "gsl-random";
       version = "0.5.0";
       sha256 = "0bhwi2ianxazyxyp2siczk8rfdnj4dx3rfz5d82bag2xcbzcrbfj";
       buildDepends = [ vector ];
       homepage = "http://github.com/patperry/hs-gsl-random";
       description = "Bindings the the GSL random number generation facilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gsl-random-fu" = callPackage
    ({ mkDerivation, gsl-random, random-fu }:
     mkDerivation {
       pname = "gsl-random-fu";
       version = "0.0.0.1";
       sha256 = "1qf5m3zksn16mlgavrwbq6yd1mbyafy27qf1ws4nmkxl8ci0k48i";
       buildDepends = [ gsl-random random-fu ];
       homepage = "http://code.haskell.org/~mokus/gsl-random-fu";
       description = "Instances for using gsl-random with random-fu";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "gsmenu" = callPackage
    ({ mkDerivation, mtl, parsec, permute, sindre, text, X11 }:
     mkDerivation {
       pname = "gsmenu";
       version = "3.0";
       sha256 = "15ddm69fmk0nkkrs5g80amdvld2mq59ah58nbnk83mwkffpi484f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec permute sindre text X11 ];
       homepage = "http://sigkill.dk/programs/gsmenu";
       description = "A visual generic menu";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gstreamer" = callPackage
    ({ mkDerivation, glib, gstreamer, gstreamer-audio, gstreamer-base
     , gstreamer-controller, gstreamer-dataprotocol, gstreamer-net
     , gstreamer-plugins-base, gtk2hs-buildtools, mtl
     }:
     mkDerivation {
       pname = "gstreamer";
       version = "0.12.5.0";
       sha256 = "0grg20wsvdyfpm2y3ykw7d3j7s2hlbs8psjwfy0yfz3839yvccy6";
       buildDepends = [ glib mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [
         gstreamer gstreamer-audio gstreamer-base gstreamer-controller
         gstreamer-dataprotocol gstreamer-net gstreamer-plugins-base
       ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GStreamer open source multimedia framework";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gstreamer; };

  "gt-tools" = callPackage
    ({ mkDerivation, extensible-exceptions, haskeline, HTTP, json, mtl
     , url, utf8-string
     }:
     mkDerivation {
       pname = "gt-tools";
       version = "0.1.4.4";
       sha256 = "180p3djyn5235knk8cqnrlsbxm3wfcjmb603k193dfn28b34jjw6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions haskeline HTTP json mtl url utf8-string
       ];
       homepage = "http://github.com/styx/gtc";
       description = "Console and GUI interface for Google Translate service";
       license = "GPL";
     }) {};

  "gtfs" = callPackage
    ({ mkDerivation, csv, filepath, rowrecord, split }:
     mkDerivation {
       pname = "gtfs";
       version = "0.1";
       sha256 = "0m0i13xpj9wz6ykngwfqi2vnrliwf0y1d2cxg9254dm865l5gvsi";
       buildDepends = [ csv filepath rowrecord split ];
       description = "The General Transit Feed Specification format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gtk" = callPackage
    ({ mkDerivation, cairo, gio, glib, gtk, gtk2hs-buildtools, libc
     , mtl, pango, pkgconfig, text
     }:
     mkDerivation {
       pname = "gtk";
       version = "0.13.3";
       sha256 = "016v6r53py659ncx0nvlcvvs3j3kj6rrbrm7lk8sggdhm7jvz6w7";
       buildDepends = [ cairo gio glib mtl pango text ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ libc pkgconfig ];
       pkgconfigDepends = [ glib gtk ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) glib gtk; };

  "gtk-jsinput" = callPackage
    ({ mkDerivation, gtk, json, transformers }:
     mkDerivation {
       pname = "gtk-jsinput";
       version = "0.0.0";
       sha256 = "0fjlk6z8j77l35k9cdzgbyf1w5wd0v0k1sry78vf7f6j4mvv8wb0";
       buildDepends = [ gtk json transformers ];
       homepage = "http://github.com/timthelion/gtk-jsinput";
       description = "A simple custom form widget for gtk which allows inputing of JSON values";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "gtk-largeTreeStore" = callPackage
    ({ mkDerivation, glib, gtk3, hspec, mtl, nested-sets }:
     mkDerivation {
       pname = "gtk-largeTreeStore";
       version = "0.0.1.0";
       sha256 = "0nzddvm17gqkdjpkls4rd5lxshx8fwvn35b9r3njqqpm2yi5qci0";
       buildDepends = [ glib gtk3 mtl nested-sets ];
       testDepends = [ gtk3 hspec ];
       description = "Large TreeStore support for gtk2hs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "gtk-mac-integration" = callPackage
    ({ mkDerivation, glib, gtk, gtk-mac-integration, gtk2hs-buildtools
     , mtl
     }:
     mkDerivation {
       pname = "gtk-mac-integration";
       version = "0.3.0.1";
       sha256 = "06x0mv47yhck00igcq9dkzkbgaiyqqd2bqsmjxilvslf0wdhawbw";
       buildDepends = [ glib gtk mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ gtk-mac-integration ];
       homepage = "http://www.haskell.org/gtk2hs/";
       description = "Bindings for the Gtk/OS X integration library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gtk-mac-integration; };

  "gtk-serialized-event" = callPackage
    ({ mkDerivation, glib, gtk, mtl }:
     mkDerivation {
       pname = "gtk-serialized-event";
       version = "0.12.0";
       sha256 = "0gh8kwd9758ws941xbxhrm3144pmnqln0md5r6vjbq7s1x54bsrf";
       buildDepends = [ glib gtk mtl ];
       pkgconfigDepends = [ gtk ];
       homepage = "http://www.haskell.org/gtk2hs/";
       description = "GTK+ Serialized event";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gtk; };

  "gtk-simple-list-view" = callPackage
    ({ mkDerivation, gtk }:
     mkDerivation {
       pname = "gtk-simple-list-view";
       version = "0.0.0";
       sha256 = "1qqfhaap2996015h3jkgg9j3hyxrh88wn6kba29ys0q1h35f8yws";
       buildDepends = [ gtk ];
       homepage = "http://github.com/timthelion/gtk-simple-list-view";
       description = "A simple custom form widget for gtk which allows single LOC creation/updating of list views";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "gtk-toggle-button-list" = callPackage
    ({ mkDerivation, gtk }:
     mkDerivation {
       pname = "gtk-toggle-button-list";
       version = "0.0.0";
       sha256 = "14hb7nxf4l0q7hab8dzll8dh5ccb4hhc8arywijdgdrz4i2s2706";
       buildDepends = [ gtk ];
       homepage = "http://github.com/timthelion/gtk-toggle-button-list";
       description = "A simple custom form widget for gtk which allows single LOC creation/updating of toggle button lists";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "gtk-toy" = callPackage
    ({ mkDerivation, gtk }:
     mkDerivation {
       pname = "gtk-toy";
       version = "0.2.0";
       sha256 = "0zf3k0c5h5wcgkqr8np5kvgz4c9nha86k5whsn4f1wk0ikj98dfq";
       buildDepends = [ gtk ];
       description = "Convenient Gtk canvas with mouse and keyboard input";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gtk-traymanager" = callPackage
    ({ mkDerivation, glib, gtk, x11 }:
     mkDerivation {
       pname = "gtk-traymanager";
       version = "0.1.5";
       sha256 = "0hzl9pa5vx04vslb2visx35wwjagzzi1j5gyk5acy8pym8ly50hm";
       buildDepends = [ glib gtk ];
       pkgconfigDepends = [ gtk x11 ];
       homepage = "http://github.com/travitch/gtk-traymanager";
       description = "A wrapper around the eggtraymanager library for Linux system trays";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gtk; };

  "gtk2hs-buildtools" = callPackage
    ({ mkDerivation, alex, filepath, happy, hashtables, random }:
     mkDerivation {
       pname = "gtk2hs-buildtools";
       version = "0.13.0.3";
       sha256 = "1ijcmcjp8mralpzl1gvh24bzq8njlzkvck1r07b010rrklv04arp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath hashtables random ];
       buildTools = [ alex happy ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Tools to build the Gtk2Hs suite of User Interface libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "gtk2hs-cast-glade" = callPackage
    ({ mkDerivation, glade, gtk, gtk2hs-cast-glib, hint }:
     mkDerivation {
       pname = "gtk2hs-cast-glade";
       version = "0.10.1.1";
       sha256 = "0azyf3h53r5dqvz66bbvqk9qp418v0mq0yzd1ia6pc6d7ypknkx6";
       buildDepends = [ glade gtk gtk2hs-cast-glib hint ];
       description = "A type class for cast functions of Gtk2hs: glade package";
       license = "unknown";
     }) {};

  "gtk2hs-cast-glib" = callPackage
    ({ mkDerivation, glib }:
     mkDerivation {
       pname = "gtk2hs-cast-glib";
       version = "0.10.1.1";
       sha256 = "1bsz1zyz2hxf07q6xr232aciwxl3819jklj16hqqbfjwm4mzn2mp";
       buildDepends = [ glib ];
       description = "A type class for cast functions of Gtk2hs: glib package";
       license = "unknown";
     }) {};

  "gtk2hs-cast-gnomevfs" = callPackage
    ({ mkDerivation, gnomevfs, gtk2hs-cast-glib, gtk2hs-cast-th, hint
     }:
     mkDerivation {
       pname = "gtk2hs-cast-gnomevfs";
       version = "0.10.1.2";
       sha256 = "0fkrrsvagsn51rn0b16y8ac3fg509wrxqdfwsij9nbprcd8iz75g";
       buildDepends = [ gnomevfs gtk2hs-cast-glib gtk2hs-cast-th hint ];
       description = "A type class for cast functions of Gtk2hs: gnomevfs package";
       license = "unknown";
     }) {};

  "gtk2hs-cast-gtk" = callPackage
    ({ mkDerivation, gtk, gtk2hs-cast-glib, gtk2hs-cast-th, hint }:
     mkDerivation {
       pname = "gtk2hs-cast-gtk";
       version = "0.10.1.2";
       sha256 = "15d6c0mdd9nzpb310n19kyw0jqv019w17ncxxhg3wk90ckb43l3j";
       buildDepends = [ gtk gtk2hs-cast-glib gtk2hs-cast-th hint ];
       description = "A type class for cast functions of Gtk2hs: gtk package";
       license = "unknown";
     }) {};

  "gtk2hs-cast-gtkglext" = callPackage
    ({ mkDerivation, gtk2hs-cast-glib, gtk2hs-cast-th, gtkglext, hint
     }:
     mkDerivation {
       pname = "gtk2hs-cast-gtkglext";
       version = "0.10.1.2";
       sha256 = "05m4h8wh820mwiarrysa4fkxj14l90ky89kv24irpa3vw27xnsm9";
       buildDepends = [ gtk2hs-cast-glib gtk2hs-cast-th gtkglext hint ];
       description = "A type class for cast functions of Gtk2hs: gtkglext package";
       license = "unknown";
     }) {};

  "gtk2hs-cast-gtksourceview2" = callPackage
    ({ mkDerivation, gtk2hs-cast-glib, gtk2hs-cast-th, gtksourceview2
     , hint
     }:
     mkDerivation {
       pname = "gtk2hs-cast-gtksourceview2";
       version = "0.10.1.2";
       sha256 = "1fyca2kwjc4hk9jqshn9hzq4m7415kapdln1nv0rgxsd1iabjk81";
       buildDepends = [
         gtk2hs-cast-glib gtk2hs-cast-th gtksourceview2 hint
       ];
       description = "A type class for cast functions of Gtk2hs: gtksourceview2 package";
       license = "unknown";
     }) {};

  "gtk2hs-cast-th" = callPackage
    ({ mkDerivation, hint }:
     mkDerivation {
       pname = "gtk2hs-cast-th";
       version = "0.10.1.0";
       sha256 = "19a7qb0dlfqw22fz7m94xyzbssvia106wlvy3brag5nhfza833px";
       buildDepends = [ hint ];
       description = "A type class for cast functions of Gtk2hs: TH package";
       license = "unknown";
     }) {};

  "gtk2hs-hello" = callPackage
    ({ mkDerivation, glib, gtk3, transformers }:
     mkDerivation {
       pname = "gtk2hs-hello";
       version = "1.1.0.0";
       sha256 = "0km86yd8wkn85x8xr326a8pzrfmbrf0cpf6zz3sggk3kn4jrmbj4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ glib gtk3 transformers ];
       homepage = "http://www.haskell.org/hello/";
       description = "Gtk2Hs Hello World, an example package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "gtk2hs-rpn" = callPackage
    ({ mkDerivation, cairo, glib, gtk, mtl }:
     mkDerivation {
       pname = "gtk2hs-rpn";
       version = "0.2.1";
       sha256 = "01wikd60b48qcz6vk31kwfkpkf2za5laxbhdyns45s90lvr98rvi";
       buildDepends = [ cairo glib gtk mtl ];
       description = "Adds a module to gtk2hs allowing layouts to be defined using reverse polish notation";
       license = "LGPL";
     }) {};

  "gtk3" = callPackage
    ({ mkDerivation, cairo, gio, glib, gtk2hs-buildtools, gtk3, mtl
     , pango, text, time, transformers
     }:
     mkDerivation {
       pname = "gtk3";
       version = "0.13.3";
       sha256 = "0246d4dxgmfvq7g8avswjry2rh5lfj1kzcf0vqwchgvlvcfhgzlh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo gio glib mtl pango text time transformers ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ glib gtk3 ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) glib gtk3; };

  "gtk3-mac-integration" = callPackage
    ({ mkDerivation, glib, gtk-mac-integration, gtk2hs-buildtools, gtk3
     , mtl
     }:
     mkDerivation {
       pname = "gtk3-mac-integration";
       version = "0.3.0.1";
       sha256 = "1sg18zniiig73klqv6yyfzgjfs817416qwq2jg2dp6zgli9fryq1";
       buildDepends = [ glib gtk3 mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ gtk-mac-integration ];
       homepage = "http://www.haskell.org/gtk2hs/";
       description = "Bindings for the Gtk/OS X integration library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gtk-mac-integration; };

  "gtkglext" = callPackage
    ({ mkDerivation, glib, gtk, gtk2hs-buildtools, gtkglext, pango
     , pangox_compat
     }:
     mkDerivation {
       pname = "gtkglext";
       version = "0.12.5.0";
       sha256 = "1xhalcb85cpswdpqxx64fxpmyqq7iakgaczjrbr25fp0h1glshhk";
       buildDepends = [ glib gtk pango ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ gtkglext pangox_compat ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GTK+ OpenGL Extension";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gtkglext; };

  "gtkimageview" = callPackage
    ({ mkDerivation, glib, gtk, gtk2hs-buildtools, gtkimageview, mtl }:
     mkDerivation {
       pname = "gtkimageview";
       version = "0.12.0";
       sha256 = "0sdfb7gmgqh4dkc0a39abx84x7j7zs5z1l62nfzz22wsx1h641j3";
       buildDepends = [ glib gtk mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ gtkimageview ];
       homepage = "http://www.haskell.org/gtk2hs/";
       description = "Binding to the GtkImageView library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) gtkimageview; };

  "gtkrsync" = callPackage
    ({ mkDerivation, gconf, glade, gtk, MissingH, regex-posix }:
     mkDerivation {
       pname = "gtkrsync";
       version = "1.0.4";
       sha256 = "0z7mwgmjpbmj2949bfrragyjr6s38vv9sz8zpy63ss9h7b5xn4xw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gconf glade gtk MissingH regex-posix ];
       homepage = "http://hg.complete.org/gtkrsync";
       description = "Gnome rsync progress display";
       license = "GPL";
     }) {};

  "gtksourceview2" = callPackage
    ({ mkDerivation, glib, gtk, gtk2hs-buildtools, gtksourceview, libc
     , mtl, pkgconfig, text
     }:
     mkDerivation {
       pname = "gtksourceview2";
       version = "0.13.1.1";
       sha256 = "09439drmwfy5bqni1clcn0nng30irn9x43fjak9jljggg1yij9xw";
       buildDepends = [ glib gtk mtl text ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ libc pkgconfig ];
       pkgconfigDepends = [ gtksourceview ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GtkSourceView library";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "gtksourceview3" = callPackage
    ({ mkDerivation, glib, gtk2hs-buildtools, gtk3, gtksourceview, mtl
     , text
     }:
     mkDerivation {
       pname = "gtksourceview3";
       version = "0.13.1.1";
       sha256 = "15xf7w88c3pqqszwyp149qsq1z23lf72r6kq5xkdw8gvi0pfyavj";
       buildDepends = [ glib gtk3 mtl text ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ gtksourceview ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GtkSourceView library";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "guarded-rewriting" = callPackage
    ({ mkDerivation, instant-generics }:
     mkDerivation {
       pname = "guarded-rewriting";
       version = "0.1";
       sha256 = "04396pd4c4yqpw6ai5ciigva9l3acdz7yn4d5hvyks52khv5fsf9";
       buildDepends = [ instant-generics ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/GuardedRewriting";
       description = "Datatype-generic rewriting with preconditions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "guess-combinator" = callPackage
    ({ mkDerivation, HList }:
     mkDerivation {
       pname = "guess-combinator";
       version = "0.1.1";
       sha256 = "1xaj8zl6cbgks3r0asbnkz1ixq1hlglpjxdymj6ikyjq955sxmzj";
       buildDepends = [ HList ];
       homepage = "http://code.atnnn.com/project/guess";
       description = "Generate simple combinators given their type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "gulcii" = callPackage
    ({ mkDerivation, cairo, filepath, gtk }:
     mkDerivation {
       pname = "gulcii";
       version = "0.2.0.1";
       sha256 = "0r368b4gw32yxi7xx85ljaw72plbw1i659kwjqiigmd2s54ids5h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo filepath gtk ];
       homepage = "http://gitorious.org/maximus/gulcii";
       description = "graphical untyped lambda calculus interactive interpreter";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "gutenberg-fibonaccis" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "gutenberg-fibonaccis";
       version = "1.1.0";
       sha256 = "0vvzlfnvh9r9jqf7v83d0piqpvl40sg0mswf9f41vncgzg0z79v2";
       homepage = "https://github.com/justinhanekom/gutenberg-fibonaccis";
       description = "The first 1001 Fibonacci numbers, retrieved from the Gutenberg Project";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "h-booru" = callPackage
    ({ mkDerivation, filepath, http-conduit, hxt, mtl, stm
     , transformers, utf8-string, vinyl
     }:
     mkDerivation {
       pname = "h-booru";
       version = "0.3.0.0";
       sha256 = "0v2mcf35j4dr32j9n6rx10h7mx9d9f14bh70yphj01laxg240746";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath http-conduit hxt mtl stm transformers utf8-string vinyl
       ];
       homepage = "https://github.com/Fuuzetsu/h-booru";
       description = "Haskell library for retrieving data from various booru image sites";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "h-gpgme" = callPackage
    ({ mkDerivation, bindings-gpgme, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "h-gpgme";
       version = "0.2.0.0";
       sha256 = "0v6l9vhk2yp394152g5d4g0p72mqhjhf1spmhqcv2ijmrwynv2m5";
       buildDepends = [ bindings-gpgme ];
       testDepends = [
         bindings-gpgme HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/rethab/h-gpgme";
       license = stdenv.lib.licenses.mit;
     }) {};

  "h2048" = callPackage
    ({ mkDerivation, HUnit, MonadRandom, mtl, text, transformers, vty
     , vty-ui
     }:
     mkDerivation {
       pname = "h2048";
       version = "0.2.0.1";
       sha256 = "1s8r476bhvmhpj914n4sjsa1z6dgf26m872rpzhlsyhw1rsxgcfr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ MonadRandom mtl text transformers vty vty-ui ];
       testDepends = [ HUnit MonadRandom mtl transformers ];
       homepage = "https://github.com/Javran/h2048";
       description = "a haskell implementation of Game 2048";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hArduino" = callPackage
    ({ mkDerivation, mtl, serialport, time }:
     mkDerivation {
       pname = "hArduino";
       version = "0.9";
       sha256 = "03wq0c9aqv3n27zcm74l2df75z3sr7kvyszgs0m2sn2680izl024";
       buildDepends = [ mtl serialport time ];
       homepage = "http://leventerkok.github.com/hArduino";
       description = "Control your Arduino board from Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hBDD" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hBDD";
       version = "0.0.2";
       sha256 = "15pq6r8kz7ki1siz9xihd85qck9gnkp17cdz331srgr5kzij3lgv";
       description = "An abstraction layer for BDD libraries";
       license = "LGPL";
     }) {};

  "hBDD-CUDD" = callPackage
    ({ mkDerivation, c2hs, cudd, deepseq, epd, hBDD, mtr, st, util }:
     mkDerivation {
       pname = "hBDD-CUDD";
       version = "0.0.2";
       sha256 = "0rjfycxnhwwylpdb5sm4kqzypfbigzmx6azrs44sixmkq0cv5yb4";
       buildDepends = [ deepseq hBDD ];
       buildTools = [ c2hs ];
       extraLibraries = [ cudd epd mtr st util ];
       description = "An FFI binding to the CUDD library";
       license = "LGPL";
     }) {};

  "hCsound" = callPackage
    ({ mkDerivation, c2hs, csound64, libsndfile, monads-tf
     , transformers, vector
     }:
     mkDerivation {
       pname = "hCsound";
       version = "0.4.2";
       sha256 = "0z4zcf70jplm68k69kigj0kfx78r00y6fx6rjymzpvpbhppmyyd2";
       buildDepends = [ monads-tf transformers vector ];
       buildTools = [ c2hs ];
       extraLibraries = [ csound64 libsndfile ];
       description = "interface to CSound API";
       license = "LGPL";
     }) {};

  "hDFA" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hDFA";
       version = "0.0.2";
       sha256 = "1ays1qy2zsl3h49ryr2y9dymfv1ak1m1d0jvarmqwg3nb49armhm";
       description = "A simple library for representing and minimising DFAs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hF2" = callPackage
    ({ mkDerivation, cereal, vector }:
     mkDerivation {
       pname = "hF2";
       version = "0.2";
       sha256 = "1y0731fsay2dp9m4b94w15m054vqsnnafz4k8jjqjvvrmwyfgicz";
       buildDepends = [ cereal vector ];
       description = "F(2^e) math for cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hGelf" = callPackage
    ({ mkDerivation, aeson, cereal, network, pureMD5, QuickCheck, text
     , time, zlib
     }:
     mkDerivation {
       pname = "hGelf";
       version = "0.1";
       sha256 = "0jkgf0sm8xv204hrzpkplccfq88y5xyrm8y2b5gjfp473872jqxw";
       buildDepends = [
         aeson cereal network pureMD5 QuickCheck text time zlib
       ];
       description = "Haskell GELF library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hMollom" = callPackage
    ({ mkDerivation, aeson, attoparsec, Crypto, dataenc, HTTP, mtl
     , pureMD5, random, time
     }:
     mkDerivation {
       pname = "hMollom";
       version = "0.4.0";
       sha256 = "1grhkvmcdyi7gmmcqfqi3n78p4gbimzxa4mylj1f0j8iy5iycmg5";
       buildDepends = [
         aeson attoparsec Crypto dataenc HTTP mtl pureMD5 random time
       ];
       homepage = "http://github.com/itkovian/hMollom";
       description = "Library to interact with the @Mollom anti-spam service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hOpenPGP" = callPackage
    ({ mkDerivation, ansi-wl-pprint, attoparsec, base64-bytestring
     , bzlib, cereal, cereal-conduit, conduit, conduit-extra
     , crypto-cipher-types, crypto-pubkey, crypto-random, cryptocipher
     , cryptohash, data-default, errors, hashable, incremental-parser
     , ixset, lens, monad-loops, mtl, nettle, openpgp-asciiarmor
     , QuickCheck, quickcheck-instances, resourcet, securemem
     , semigroups, split, tasty, tasty-hunit, tasty-quickcheck, text
     , time, transformers, unordered-containers, zlib
     }:
     mkDerivation {
       pname = "hOpenPGP";
       version = "1.11";
       sha256 = "1alcaqx2i4a4cbmh0brb9axfsm4nb8fs4mqglh609iy3bdl791b7";
       buildDepends = [
         ansi-wl-pprint attoparsec base64-bytestring bzlib cereal
         cereal-conduit conduit conduit-extra crypto-cipher-types
         crypto-pubkey crypto-random cryptocipher cryptohash data-default
         errors hashable incremental-parser ixset lens monad-loops mtl
         nettle openpgp-asciiarmor resourcet securemem semigroups split text
         time transformers unordered-containers zlib
       ];
       testDepends = [
         ansi-wl-pprint attoparsec bzlib cereal cereal-conduit conduit
         conduit-extra crypto-cipher-types crypto-pubkey crypto-random
         cryptocipher cryptohash data-default errors hashable
         incremental-parser ixset lens monad-loops mtl nettle QuickCheck
         quickcheck-instances resourcet securemem semigroups split tasty
         tasty-hunit tasty-quickcheck text time transformers
         unordered-containers zlib
       ];
       homepage = "http://floss.scru.org/hOpenPGP/";
       description = "native Haskell implementation of OpenPGP (RFC4880)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hPDB" = callPackage
    ({ mkDerivation, AC-Vector, deepseq, iterable, mmap, mtl, Octree
     , parallel, QuickCheck, tagged, text, text-format, vector, zlib
     }:
     mkDerivation {
       pname = "hPDB";
       version = "1.2.0";
       sha256 = "1a5lwjrqqm8arsark87vd512w45pik9jxih5zzzamksn4j9mc6y8";
       buildDepends = [
         AC-Vector deepseq iterable mmap mtl Octree parallel QuickCheck
         tagged text text-format vector zlib
       ];
       homepage = "https://github.com/BioHaskell/hPDB";
       description = "Protein Databank file format library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hPDB-examples" = callPackage
    ({ mkDerivation, AC-Vector, deepseq, GLUT, hPDB, iterable, mtl
     , Octree, OpenGL, QuickCheck, text, text-format, vector
     }:
     mkDerivation {
       pname = "hPDB-examples";
       version = "1.1.2";
       sha256 = "0i5ig6h884m34cjzml29yadf7jflxhd4rih60r93s4c7i4npkixj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         AC-Vector deepseq GLUT hPDB iterable mtl Octree OpenGL QuickCheck
         text text-format vector
       ];
       homepage = "https://github.com/BioHaskell/hPDB-examples";
       description = "Examples for hPDB library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hPushover" = callPackage
    ({ mkDerivation, aeson, http-conduit, network }:
     mkDerivation {
       pname = "hPushover";
       version = "0.1.1";
       sha256 = "1qz1hd05fhh9vfjxmmnl9qs29hjl2qdyvfi9h687dp1dvk36j7ns";
       buildDepends = [ aeson http-conduit network ];
       homepage = "https://github.com/WJWH/hPushover";
       description = "Pushover.net API functions.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hR" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hR";
       version = "0.1.1";
       sha256 = "1kc03mgsxijszdvxw4qwq4fnd0ln61v08rk9y1k6kx9vyqc7bilc";
       description = "R bindings and interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hRESP" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "hRESP";
       version = "0.1.0.0";
       sha256 = "188rs1g2yacka8c4wbqkhwjrin95f3ribm8007lqsxiapaj1d89y";
       buildDepends = [ attoparsec ];
       homepage = "https://github.com/yihuang/hresp";
       description = "haskell implementation of RESP (REdis Serialization Protocol)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hS3" = callPackage
    ({ mkDerivation, Crypto, dataenc, HTTP, hxt, MissingH, network
     , network-uri, random, regex-compat, utf8-string
     }:
     mkDerivation {
       pname = "hS3";
       version = "0.5.9";
       sha256 = "0nf71jb15gkkcrb0x83mmql6j55c6dnz3bl3yq1grphwn0jbmq3y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Crypto dataenc HTTP hxt MissingH network network-uri random
         regex-compat utf8-string
       ];
       homepage = "http://gregheartsfield.com/hS3/";
       description = "Interface to Amazon's Simple Storage Service (S3)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hSimpleDB" = callPackage
    ({ mkDerivation, Crypto, dataenc, HTTP, hxt, network, utf8-string
     }:
     mkDerivation {
       pname = "hSimpleDB";
       version = "0.3";
       sha256 = "045mgg2b7wmkcziil8njb2wsy8pgzqcc46dwdrabxgbw1nzsfkaa";
       buildDepends = [ Crypto dataenc HTTP hxt network utf8-string ];
       description = "Interface to Amazon's SimpleDB service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hTalos" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hTalos";
       version = "0.2";
       sha256 = "05l9nlrwpb9gwgj8z48paxx46lkasa82naiq7armi98salk1a9ip";
       homepage = "https://github.com/mgajda/hTalos";
       description = "Parser, print and manipulate structures in PDB file format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hTensor" = callPackage
    ({ mkDerivation, hmatrix, random }:
     mkDerivation {
       pname = "hTensor";
       version = "0.8.2";
       sha256 = "1nwzh68v2b11lph64432bjdrpxrr62cv4hdh935wml13mac3l2ly";
       buildDepends = [ hmatrix random ];
       homepage = "http://perception.inf.um.es/tensor";
       description = "Multidimensional arrays and simple tensor computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hVOIDP" = callPackage
    ({ mkDerivation, blas, hmatrix, lapack }:
     mkDerivation {
       pname = "hVOIDP";
       version = "1.0.2";
       sha256 = "0r9a461k1rr0j9zgjfq1z37i6blv9rqf8pzb984h1nmlfqpnidnc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hmatrix ];
       extraLibraries = [ blas lapack ];
       homepage = "http://dslsrv4.cs.missouri.edu/~qqbm9";
       description = "Optimal variable selection in chain graphical model";
       license = "GPL";
     }) { inherit (pkgs) blas; };

  "haar" = callPackage
    ({ mkDerivation, QuickCheck, split, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "haar";
       version = "0.1";
       sha256 = "1xmz659lqr25c0xxkmly5w4fxgk9rqnms2sknd5ab8czqdgq6n1v";
       buildDepends = [ split ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/mhwombat/haar";
       description = "Haar wavelet transforms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hacanon-light" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "hacanon-light";
       version = "2008.10.28";
       sha256 = "0m0wfg74kmpz6ydldz5h9z5xd54957v1rprl9wal9sjr0pzl28a7";
       buildDepends = [ mtl ];
       description = "Template Haskell framework for automatic FFI code generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack" = callPackage
    ({ mkDerivation, data-default }:
     mkDerivation {
       pname = "hack";
       version = "2012.2.6";
       sha256 = "0wrfa9fa6skl985fi2a6iv4m8kchg87w9x3k37nf3l8vaz95jmdr";
       buildDepends = [ data-default ];
       homepage = "http://github.com/nfjinjing/hack/tree/master";
       description = "a Haskell Webserver Interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-contrib" = callPackage
    ({ mkDerivation, ansi-wl-pprint, cgi, data-default, filepath, hack
     , mps, network, time, utf8-string
     }:
     mkDerivation {
       pname = "hack-contrib";
       version = "2010.9.28";
       sha256 = "1r0g8fcwz6r4vrsadjyb5awjmfbqsskmc1c8xkfwv0knak1qq2p1";
       buildDepends = [
         ansi-wl-pprint cgi data-default filepath hack mps network time
         utf8-string
       ];
       homepage = "http://github.com/nfjinjing/hack-contrib";
       description = "Hack contrib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-contrib-press" = callPackage
    ({ mkDerivation, bytestring-class, hack, json, mtl, parsec, press
     }:
     mkDerivation {
       pname = "hack-contrib-press";
       version = "0.1.2";
       sha256 = "12v7xw448cxl93bnbzqkinlij74flffpif0x5jd51sndvpgsh12r";
       buildDepends = [ bytestring-class hack json mtl parsec press ];
       homepage = "http://github.com/bickfordb/hack-contrib-press";
       description = "Hack helper that renders Press templates";
       license = "GPL";
     }) {};

  "hack-frontend-happstack" = callPackage
    ({ mkDerivation, hack, happstack-server, network, utf8-string }:
     mkDerivation {
       pname = "hack-frontend-happstack";
       version = "2009.6.24.1";
       sha256 = "1x4kaj4nk5lrgsm6pfxr6f8rvjyxhy0agqv9f810xh6s1r9pihw1";
       buildDepends = [ hack happstack-server network utf8-string ];
       homepage = "http://github.com/nfjinjing/hack/tree/master";
       description = "hack-frontend-happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-frontend-monadcgi" = callPackage
    ({ mkDerivation, cgi, hack }:
     mkDerivation {
       pname = "hack-frontend-monadcgi";
       version = "0.0.3.1";
       sha256 = "0m0af44jv03djn5i2lgrnnvvcdqx44qppfx76m1bwr7gv1vzm432";
       buildDepends = [ cgi hack ];
       description = "Allows programs written against MonadCGI to run with any hack handler. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-handler-cgi" = callPackage
    ({ mkDerivation, hack }:
     mkDerivation {
       pname = "hack-handler-cgi";
       version = "0.2.0.2";
       sha256 = "0pm8vs94dbaahqrdwfffwa1jb9ghyjnq48sirlw1dj2gcsa3np2x";
       buildDepends = [ hack ];
       homepage = "http://github.com/snoyberg/hack-handler-cgi/tree/master";
       description = "Hack handler using CGI protocol. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-handler-epoll" = callPackage
    ({ mkDerivation, data-default, epoll, failure, hack, HTTP, network
     , utf8-string
     }:
     mkDerivation {
       pname = "hack-handler-epoll";
       version = "0.1.3";
       sha256 = "0q4cw789x8c93y53lwhr7g0hkli8x6qb9k0cg5pxln6cxxvi9p82";
       buildDepends = [
         data-default epoll failure hack HTTP network utf8-string
       ];
       homepage = "http://github.com/twittner/hack-handler-epoll/";
       description = "hack handler implementation using epoll";
       license = "LGPL";
     }) {};

  "hack-handler-evhttp" = callPackage
    ({ mkDerivation, bytestring-class, data-default, event, hack
     , hack-contrib, network
     }:
     mkDerivation {
       pname = "hack-handler-evhttp";
       version = "2009.8.4";
       sha256 = "1a09ls9jgakdx8ya6zd5z3ss2snb4pp0db1573hzmrhr37i2gklz";
       buildDepends = [
         bytestring-class data-default hack hack-contrib network
       ];
       extraLibraries = [ event ];
       homepage = "http://github.com/bickfordb/hack-handler-evhttp";
       description = "Hack EvHTTP (libevent) Handler";
       license = "GPL";
     }) {};

  "hack-handler-fastcgi" = callPackage
    ({ mkDerivation, fcgi, hack, hack-handler-cgi }:
     mkDerivation {
       pname = "hack-handler-fastcgi";
       version = "0.2.0.1";
       sha256 = "02slh33r9qy8q0vpi4s4vvf5lmb14ypk8bixdicvxakahjvxhanr";
       buildDepends = [ hack hack-handler-cgi ];
       extraLibraries = [ fcgi ];
       homepage = "http://github.com/snoyberg/hack-handler-fastcgi/tree/master";
       description = "Hack handler direct to fastcgi (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-handler-happstack" = callPackage
    ({ mkDerivation, cgi, data-default, hack, happstack-server, mtl
     , network
     }:
     mkDerivation {
       pname = "hack-handler-happstack";
       version = "2009.12.20";
       sha256 = "10b3cp1gap59ialfl33dwhzw50nwrqg49zvv0v813q7rqk3nkhg4";
       buildDepends = [
         cgi data-default hack happstack-server mtl network
       ];
       homepage = "http://github.com/nfjinjing/hack-handler-happstack";
       description = "Hack Happstack server handler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-handler-hyena" = callPackage
    ({ mkDerivation, data-default, hack, hyena, network }:
     mkDerivation {
       pname = "hack-handler-hyena";
       version = "2010.3.15";
       sha256 = "1p0zyki1iapz2xncq0l5bbas44pk5kb29kbb3bdxb4anb0m5jb2q";
       buildDepends = [ data-default hack hyena network ];
       homepage = "http://github.com/nfjinjing/hack-handler-hyena";
       description = "Hyena hack handler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-handler-kibro" = callPackage
    ({ mkDerivation, cgi, data-default, hack, kibro, network }:
     mkDerivation {
       pname = "hack-handler-kibro";
       version = "2009.5.27";
       sha256 = "0py30rp7r4hrazrfq3avpqcp1w8405pyfw1yxz7msb58yjppa792";
       buildDepends = [ cgi data-default hack kibro network ];
       homepage = "http://github.com/nfjinjing/hack/tree/master";
       description = "Hack Kibro handler";
       license = "GPL";
     }) {};

  "hack-handler-simpleserver" = callPackage
    ({ mkDerivation, failure, hack, network, web-encodings }:
     mkDerivation {
       pname = "hack-handler-simpleserver";
       version = "0.2.2";
       sha256 = "1p7igprgxkzkqhsy5n2qci75dbx2qxs1dcq8krghwj3isl6wds3y";
       buildDepends = [ failure hack network web-encodings ];
       homepage = "http://github.com/snoyberg/hack-handler-simpleserver/tree/master";
       description = "A simplistic HTTP server handler for Hack. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-middleware-cleanpath" = callPackage
    ({ mkDerivation, hack, split, web-encodings }:
     mkDerivation {
       pname = "hack-middleware-cleanpath";
       version = "0.0.1.1";
       sha256 = "0107ajkiwkn33h56dz576y4dxl0sr2lkkcmjy6f9s2nzqp9ibin4";
       buildDepends = [ hack split web-encodings ];
       homepage = "http://github.com/snoyberg/hack-middleware-cleanpath/tree/master";
       description = "Applies some basic redirect rules to get cleaner paths. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-middleware-clientsession" = callPackage
    ({ mkDerivation, clientsession, hack, predicates, time
     , web-encodings
     }:
     mkDerivation {
       pname = "hack-middleware-clientsession";
       version = "0.0.1.1";
       sha256 = "0h4l2lvshf9cqg43az9alq4rybhr4k07mhrila4fx7yjxslw871f";
       buildDepends = [
         clientsession hack predicates time web-encodings
       ];
       homepage = "http://github.com/snoyberg/hack-middleware-clientsession/tree/master";
       description = "Middleware for easily keeping session data in client cookies. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-middleware-gzip" = callPackage
    ({ mkDerivation, hack, split, zlib }:
     mkDerivation {
       pname = "hack-middleware-gzip";
       version = "0.0.0.1";
       sha256 = "1x7526939h7g44yyscyk324gdb40cryyiffh13iinf8aw1rach70";
       buildDepends = [ hack split zlib ];
       homepage = "http://github.com/snoyberg/hack-middleware-gzip/tree/master";
       description = "Automatic gzip compression of responses. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack-middleware-jsonp" = callPackage
    ({ mkDerivation, bytestring-class, hack, web-encodings }:
     mkDerivation {
       pname = "hack-middleware-jsonp";
       version = "0.0.2.1";
       sha256 = "0g7l441s0065f5dw2rj82m547nnc1i7cclx81kvgbpbi8q6hz0iw";
       buildDepends = [ bytestring-class hack web-encodings ];
       homepage = "http://github.com/snoyberg/hack-middleware-jsonp/tree/master";
       description = "Automatic wrapping of JSON responses to convert into JSONP. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2" = callPackage
    ({ mkDerivation, data-default }:
     mkDerivation {
       pname = "hack2";
       version = "2014.11.17";
       sha256 = "1b6jzdisv58scyzb9pxhqrnz74sy0j96jkbbnf84wccwbwn4rf28";
       buildDepends = [ data-default ];
       homepage = "https://github.com/nfjinjing/hack2";
       description = "a Haskell Webserver Interface (V2)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2-contrib" = callPackage
    ({ mkDerivation, air, data-default, filepath, hack2, network-uri
     , text, time
     }:
     mkDerivation {
       pname = "hack2-contrib";
       version = "2014.11.17";
       sha256 = "1fjk86r1lh77r729qgaj664swq07fqz4pafm99xfzy3xwvbfx5lx";
       buildDepends = [
         air data-default filepath hack2 network-uri text time
       ];
       homepage = "https://github.com/nfjinjing/hack2-contrib";
       description = "Hack2 contrib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2-contrib-extra" = callPackage
    ({ mkDerivation, air, air-extra, cgi, data-default, filepath, hack2
     , hack2-contrib, network, time
     }:
     mkDerivation {
       pname = "hack2-contrib-extra";
       version = "2013.6.22";
       sha256 = "082zncsmzfs7vcvssfkrb3l8ks3y26hw4y2796932psjnl8v36rr";
       buildDepends = [
         air air-extra cgi data-default filepath hack2 hack2-contrib network
         time
       ];
       homepage = "https://github.com/nfjinjing/hack2-contrib";
       description = "Hack2 contrib extra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2-handler-happstack-server" = callPackage
    ({ mkDerivation, cgi, data-default, enumerator, hack2
     , happstack-server, mtl, network
     }:
     mkDerivation {
       pname = "hack2-handler-happstack-server";
       version = "2011.6.20";
       sha256 = "115nrzf0626pc716n01qjhxs44c1awdd4q1c8kbax025cwac7kpx";
       buildDepends = [
         cgi data-default enumerator hack2 happstack-server mtl network
       ];
       homepage = "https://github.com/nfjinjing/hack2-handler-happstack-server";
       description = "Hack2 Happstack server handler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2-handler-mongrel2-http" = callPackage
    ({ mkDerivation, aeson, air, attoparsec, blaze-builder
     , blaze-textual, data-default, enumerator, hack2, mtl, network
     , safe, stm, text, zeromq-haskell
     }:
     mkDerivation {
       pname = "hack2-handler-mongrel2-http";
       version = "2011.10.31";
       sha256 = "1pymar803n696yx3dwqpfwqlkg93ncff162p26mrs7iqn14v851w";
       buildDepends = [
         aeson air attoparsec blaze-builder blaze-textual data-default
         enumerator hack2 mtl network safe stm text zeromq-haskell
       ];
       homepage = "https://github.com/nfjinjing/hack2-handler-mongrel2-http";
       description = "Hack2 Mongrel2 HTTP handler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2-handler-snap-server" = callPackage
    ({ mkDerivation, air, blaze-builder, case-insensitive, data-default
     , enumerator, hack2, mtl, network, snap-core, snap-server
     }:
     mkDerivation {
       pname = "hack2-handler-snap-server";
       version = "2014.11.17";
       sha256 = "0cfc2d6px0n33a3wl7s7k0l7nq9rfi1lxchlwjjb6wyp4f6mg4bb";
       buildDepends = [
         air blaze-builder case-insensitive data-default enumerator hack2
         mtl network snap-core snap-server
       ];
       homepage = "https://github.com/nfjinjing/hack2-handler-snap-server";
       description = "Hack2 Snap server handler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2-handler-warp" = callPackage
    ({ mkDerivation, air, data-default, hack2, hack2-interface-wai
     , warp
     }:
     mkDerivation {
       pname = "hack2-handler-warp";
       version = "2012.5.25";
       sha256 = "1p0lkhf95xkllfpcb9yibpa1rkam90bccmzj2aa60shd7v9qx9r5";
       buildDepends = [ air data-default hack2 hack2-interface-wai warp ];
       homepage = "https://github.com/nfjinjing/hack2-handler-warp";
       description = "Hack2 warp handler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hack2-interface-wai" = callPackage
    ({ mkDerivation, air, case-insensitive, data-default, hack2
     , http-types, mtl, network, safe, wai
     }:
     mkDerivation {
       pname = "hack2-interface-wai";
       version = "2012.5.25";
       sha256 = "18yyvb38axz18ac2q9z31qmqjd3d9yrzsgiv11wbf8ccdp2irm5w";
       buildDepends = [
         air case-insensitive data-default hack2 http-types mtl network safe
         wai
       ];
       homepage = "https://github.com/nfjinjing/hack2-interface-wai";
       description = "Hack2 interface of WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackage-db" = callPackage
    ({ mkDerivation, Cabal, filepath, tar, utf8-string }:
     mkDerivation {
       pname = "hackage-db";
       version = "1.11";
       sha256 = "14jjy3i5pjdcw2cx3n5ipg72zahvy9vh87vlcgnz44slw8av6dcq";
       buildDepends = [ Cabal filepath tar utf8-string ];
       homepage = "http://github.com/peti/hackage-db";
       description = "access Hackage's package database via Data.Map";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackage-diff" = callPackage
    ({ mkDerivation, ansi-terminal, async, attoparsec, Cabal, cpphs
     , filepath, haskell-src-exts, HTTP, mtl, text
     }:
     mkDerivation {
       pname = "hackage-diff";
       version = "0.1.0.0";
       sha256 = "0kdc7ah1mn6xcaan56li9k7ccrcsjz3ysi04fp334l57kd3i105z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal async attoparsec Cabal cpphs filepath
         haskell-src-exts HTTP mtl text
       ];
       homepage = "https://github.com/blitzcode/hackage-diff";
       description = "Compare the public API of different versions of a Hackage library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hackage-plot" = callPackage
    ({ mkDerivation, download-curl, filepath, gnuplot, parsedate }:
     mkDerivation {
       pname = "hackage-plot";
       version = "0.2.1";
       sha256 = "11vlnmadnjz1q4iw4ay8gh1yclba7550mnxwakdryakws5v75am1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ download-curl filepath gnuplot parsedate ];
       homepage = "http://code.haskell.org/~dons/code/hackage-plot";
       description = "Generate cumulative graphs of hackage uploads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackage-proxy" = callPackage
    ({ mkDerivation, basic-prelude, blaze-builder, Cabal
     , case-insensitive, conduit, filepath, http-client
     , http-client-conduit, http-conduit, http-types
     , optparse-applicative, tar, text, transformers
     , unordered-containers, wai, warp, zlib, zlib-conduit
     }:
     mkDerivation {
       pname = "hackage-proxy";
       version = "0.3.0.1";
       sha256 = "1vicmj070nb76zcxfmkj4sv0rxrrl13r31psnsgb8azbmvs1s0yp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         basic-prelude blaze-builder Cabal case-insensitive conduit filepath
         http-client http-client-conduit http-conduit http-types
         optparse-applicative tar text transformers unordered-containers wai
         warp zlib zlib-conduit
       ];
       homepage = "http://github.com/snoyberg/hackage-proxy";
       description = "Provide a proxy for Hackage which modifies responses in some way. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hackage-server" = callPackage
    ({ mkDerivation, acid-state, aeson, alex, async, attoparsec
     , base16-bytestring, base64-bytestring, binary, blaze-builder
     , Cabal, cereal, crypto-api, csv, deepseq, filepath
     , happstack-server, happy, HaXml, hscolour, hslogger
     , HStringTemplate, HTTP, lifted-base, mime-mail, mtl, network
     , parsec, pureMD5, QuickCheck, random, rss, safecopy, snowball
     , split, stm, tar, text, time, tokenize, transformers
     , unordered-containers, vector, xhtml, xml, zlib
     }:
     mkDerivation {
       pname = "hackage-server";
       version = "0.5.0";
       sha256 = "1xsy2clsg53rhxgkb9vlan7dw7xqphm8gr1ajl8kq5ymfahnyd1i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         acid-state aeson async attoparsec base16-bytestring
         base64-bytestring binary blaze-builder Cabal cereal crypto-api csv
         deepseq filepath happstack-server HaXml hscolour hslogger
         HStringTemplate HTTP lifted-base mime-mail mtl network parsec
         pureMD5 QuickCheck random rss safecopy snowball split stm tar text
         time tokenize transformers unordered-containers vector xhtml zlib
       ];
       testDepends = [
         aeson base64-bytestring Cabal filepath HTTP network random tar text
         unordered-containers vector xml zlib
       ];
       buildTools = [ alex happy ];
       description = "The Hackage web server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackage-sparks" = callPackage
    ({ mkDerivation, download, filepath, hsparklines, parsedate
     , tagsoup
     }:
     mkDerivation {
       pname = "hackage-sparks";
       version = "0.5.1";
       sha256 = "0b43vd1b18ksivxr7cfymzwcgs8rhwib2prn86wmwhghyx8a4qnw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ download filepath hsparklines parsedate tagsoup ];
       homepage = "http://code.haskell.org/~dons/code/hackage-sparks";
       description = "Generate sparkline graphs of hackage statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackage2hwn" = callPackage
    ({ mkDerivation, download, feed, tagsoup }:
     mkDerivation {
       pname = "hackage2hwn";
       version = "0.5.1";
       sha256 = "0vbp7c1g7dx119xxsn0f0fhk14l35jxmg7zdaqr1vcjhprj3nh6q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ download feed tagsoup ];
       homepage = "http://code.haskell.org/~dons/code/hackage2hwn";
       description = "Convert Hackage RSS feeds to wiki format for publishing on Haskell.org";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackage2twitter" = callPackage
    ({ mkDerivation, feed, feed2twitter }:
     mkDerivation {
       pname = "hackage2twitter";
       version = "0.2.1";
       sha256 = "131hl59imxhql3hfp8m9363fgsgdywz1p8idrybncipyblwpsjgq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ feed feed2twitter ];
       homepage = "http://github.com/tomlokhorst/hackage2twitter";
       description = "Send new Hackage releases to Twitter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackager" = callPackage
    ({ mkDerivation, Cabal, filepath, mtl }:
     mkDerivation {
       pname = "hackager";
       version = "1.0.1";
       sha256 = "03vnqrvb1iby58gnd6hrx1c5q3zvfy3szp8qwp10c9s4cdddxyvy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath mtl ];
       homepage = "https://github.com/dterei/Hackager";
       description = "Hackage testing tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hackernews" = callPackage
    ({ mkDerivation, aeson, attoparsec, either, HsOpenSSL, hspec
     , http-streams, io-streams, text, time, transformers
     }:
     mkDerivation {
       pname = "hackernews";
       version = "0.3.1.0";
       sha256 = "1j081s9gpgwggaljf7xpgskdm4qzcqzd9p2yd76kg9ih4hhfvmw9";
       buildDepends = [
         aeson attoparsec either HsOpenSSL http-streams io-streams text time
         transformers
       ];
       testDepends = [ hspec transformers ];
       description = "API for Hacker News";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hackertyper" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hackertyper";
       version = "0.1.0.1";
       sha256 = "17c77f687874bfwahmzcz2v6k8z9p4fv555r5r1f38snsdi825gf";
       isLibrary = false;
       isExecutable = true;
       homepage = "https://github.com/fgaz/hackertyper";
       description = "\"Hack\" like a programmer in movies and games!";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hackport" = callPackage
    ({ mkDerivation, deepseq, extensible-exceptions, filepath, HTTP
     , HUnit, MissingH, mtl, network, network-uri, parsec, regex-compat
     , tar, time, xml, zlib
     }:
     mkDerivation {
       pname = "hackport";
       version = "0.4.4";
       sha256 = "02mif1k12aq2incn8rjgn48c7rpjmxlgncyr5l7w1k1mav0p02hd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         deepseq extensible-exceptions filepath HTTP MissingH mtl network
         network-uri parsec regex-compat tar time xml zlib
       ];
       testDepends = [
         deepseq extensible-exceptions filepath HUnit mtl time xml
       ];
       description = "Hackage and Portage integration tool";
       license = "GPL";
     }) {};

  "hactor" = callPackage
    ({ mkDerivation, monad-control, mtl, resourcet, stm, stm-chans
     , transformers-base
     }:
     mkDerivation {
       pname = "hactor";
       version = "1.2.0.0";
       sha256 = "0jgnifwgfxapi8l0ds56xr7h66jprn1ynpwmvhafbyk84ymznf8y";
       buildDepends = [
         monad-control mtl resourcet stm stm-chans transformers-base
       ];
       homepage = "https://github.com/Forkk/hactor";
       description = "Lightweight Erlang-style actors for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hactors" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "hactors";
       version = "0.0.3.1";
       sha256 = "0nxcl3v9gnnyjzdpk30m2pmrhwcva9rky2dxrj4nnkr67ajm2dj0";
       buildDepends = [ stm ];
       homepage = "https://github.com/treep/hactors";
       description = "Practical actors for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haddock" = callPackage
    ({ mkDerivation, Cabal, filepath, haddock-api }:
     mkDerivation {
       pname = "haddock";
       version = "2.15.0";
       sha256 = "1vay0v0a02xj2m40w71vmjadlm6pzv309r1jhr61xv1wnj88i75w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haddock-api ];
       testDepends = [ Cabal filepath ];
       preCheck = "unset GHC_PACKAGE_PATH";
       homepage = "http://www.haskell.org/haddock/";
       description = "A documentation-generation tool for Haskell libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haddock-api" = callPackage
    ({ mkDerivation, Cabal, deepseq, filepath, ghc-paths
     , haddock-library, xhtml
     }:
     mkDerivation {
       pname = "haddock-api";
       version = "2.15.0";
       sha256 = "17h5h40ddn0kiqnz6rmz9p0jqvng11lq3xm6lnizwix9kcwl843b";
       buildDepends = [
         Cabal deepseq filepath ghc-paths haddock-library xhtml
       ];
       homepage = "http://www.haskell.org/haddock/";
       description = "A documentation-generation tool for Haskell libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haddock-leksah" = callPackage
    ({ mkDerivation, Cabal, filepath, ghc-paths }:
     mkDerivation {
       pname = "haddock-leksah";
       version = "2.6.0";
       sha256 = "1a56nihkxybldk55g69v2aw6r4ipa9x86i0jr19fd23zxvancs8h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath ghc-paths ];
       homepage = "http://www.haskell.org/haddock/";
       description = "A documentation-generation tool for Haskell libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haddock-library" = callPackage
    ({ mkDerivation, base-compat, deepseq, hspec, QuickCheck }:
     mkDerivation {
       pname = "haddock-library";
       version = "1.1.1";
       sha256 = "0sjnmbmq1pss9ikcqnhvpf57rv78lzi1r99ywpmmvj1gyva2s31m";
       buildDepends = [ deepseq ];
       testDepends = [ base-compat deepseq hspec QuickCheck ];
       homepage = "http://www.haskell.org/haddock/";
       description = "Library exposing some functionality of Haddock";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haddocset" = callPackage
    ({ mkDerivation, Cabal, conduit, conduit-extra, exceptions
     , haddock-api, mtl, optparse-applicative, resourcet, sqlite-simple
     , system-fileio, system-filepath, tagsoup, text, transformers
     }:
     mkDerivation {
       pname = "haddocset";
       version = "0.3.1";
       sha256 = "1jlgscidw0h70243r3032cgqwz8dpsjjndaci5wm4kq9qy63mbwj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal conduit conduit-extra exceptions haddock-api mtl
         optparse-applicative resourcet sqlite-simple system-fileio
         system-filepath tagsoup text transformers
       ];
       homepage = "https://github.com/philopon/haddocset";
       description = "Generate docset of Dash by Haddock haskell documentation tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hadoop-formats" = callPackage
    ({ mkDerivation, attoparsec, filepath, snappy, text, vector }:
     mkDerivation {
       pname = "hadoop-formats";
       version = "0.2.1.1";
       sha256 = "1w3869jz3mxhzdik5fwaha7dn9rhjg5w8g0qnznd4x45cnzxv5ga";
       buildDepends = [ attoparsec text vector ];
       testDepends = [ filepath text vector ];
       extraLibraries = [ snappy ];
       homepage = "http://github.com/jystic/hadoop-formats";
       description = "Read/write file formats commonly used by Hadoop";
       license = stdenv.lib.licenses.asl20;
     }) { inherit (pkgs) snappy; };

  "hadoop-rpc" = callPackage
    ({ mkDerivation, attoparsec, cereal, exceptions, hashable, network
     , protobuf, socks, stm, text, transformers, unordered-containers
     , vector, xmlhtml
     }:
     mkDerivation {
       pname = "hadoop-rpc";
       version = "0.1.1.1";
       sha256 = "0a7m9xisdg79q2paxas7b2z4jp9npcx5nlbj3zz4wviy9hgi3j6y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec cereal exceptions hashable network protobuf socks stm
         text transformers unordered-containers vector xmlhtml
       ];
       homepage = "http://github.com/jystic/hadoop-rpc";
       description = "Use the Hadoop RPC interface from Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "hadoop-tools" = callPackage
    ({ mkDerivation, attoparsec, boxes, configurator, exceptions
     , filepath, hadoop-rpc, optparse-applicative, protobuf
     , regex-pcre-builtin, split, stm, tasty, tasty-hunit
     , tasty-quickcheck, text, time, transformers, vector
     }:
     mkDerivation {
       pname = "hadoop-tools";
       version = "0.5";
       sha256 = "0pl6y3x8y91m53sjxwkbar7dfyflrg621f7da9iyrmvzaxq2rqc7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec boxes configurator exceptions filepath hadoop-rpc
         optparse-applicative protobuf regex-pcre-builtin split stm text
         time transformers vector
       ];
       testDepends = [
         attoparsec hadoop-rpc tasty tasty-hunit tasty-quickcheck vector
       ];
       homepage = "http://github.com/jystic/hadoop-tools";
       description = "Fast command line tools for working with Hadoop";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "haeredes" = callPackage
    ({ mkDerivation, cmdargs, dns, doctest, filemanip, iproute
     , MissingH, parallel-io
     }:
     mkDerivation {
       pname = "haeredes";
       version = "0.4.3";
       sha256 = "0m6d75kgf40m3vnh148v2ysfhplspqbbqs8jha29ascap8xz7n47";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs dns iproute MissingH parallel-io ];
       testDepends = [ doctest filemanip ];
       homepage = "http://michael.orlitzky.com/code/haeredes.php";
       description = "Confirm delegation of NS and MX records";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "haggis" = callPackage
    ({ mkDerivation, blaze-builder, convertible, filemanip, filepath
     , HDBC, HDBC-sqlite3, hquery, MissingH, network
     , optparse-applicative, pandoc, pandoc-types, parsec, rss, split
     , text, time, xmlhtml
     }:
     mkDerivation {
       pname = "haggis";
       version = "0.1.2.1";
       sha256 = "09mqs4y26w7f4729gvrpv9mh431xpdngas14ad86bbjf2ncvggjg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder convertible filemanip filepath HDBC HDBC-sqlite3
         hquery MissingH network optparse-applicative pandoc pandoc-types
         parsec rss split text time xmlhtml
       ];
       homepage = "http://github.com/tych0/haggis";
       description = "A static site generator with blogging/comments support";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haha" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "haha";
       version = "0.3.1.1";
       sha256 = "1vfsy6ks9rnynwvavakj90662vxgvk7y0vwpdga2k2fc8nkqjf10";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ time ];
       description = "A simple library for creating animated ascii art on ANSI terminals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hailgun" = callPackage
    ({ mkDerivation, aeson, email-validate, exceptions, filepath
     , http-client, http-client-tls, http-types, tagsoup, text, time
     , transformers
     }:
     mkDerivation {
       pname = "hailgun";
       version = "0.4.0.0";
       sha256 = "0f833chxrc3ac9f2sc1cwszz0pdhg7yz4ni5fq5x647vm5wifhcj";
       buildDepends = [
         aeson email-validate exceptions filepath http-client
         http-client-tls http-types tagsoup text time transformers
       ];
       description = "Mailgun REST api interface for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hailgun-send" = callPackage
    ({ mkDerivation, configurator, hailgun, text }:
     mkDerivation {
       pname = "hailgun-send";
       version = "0.1.1.1";
       sha256 = "1cxvzg5bfwsdly9k24izwnk5gf9vvzisaj3m6ng647bm1fc598c6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ configurator hailgun text ];
       description = "A program to send emails throught the Mailgun api";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hails" = callPackage
    ({ mkDerivation, authenticate, base64-bytestring, binary
     , blaze-builder, bson, conduit, conduit-extra, cookie, exceptions
     , failure, filepath, ghc-paths, hint, http-conduit, http-types
     , HUnit, lio, mongoDB, mtl, network, network-uri, parsec
     , QuickCheck, quickcheck-instances, quickcheck-lio-instances
     , resourcet, SHA, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers, wai
     , wai-app-static, wai-extra, wai-test, warp
     }:
     mkDerivation {
       pname = "hails";
       version = "0.11.2.0";
       sha256 = "0s16hrkvbnpqdpykwwq0i0530lq4v2zpc2bx7b8ykf7isnwvjzhf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         authenticate base64-bytestring binary blaze-builder bson conduit
         conduit-extra cookie exceptions failure filepath ghc-paths hint
         http-conduit http-types lio mongoDB mtl network network-uri parsec
         resourcet SHA text time transformers wai wai-app-static wai-extra
         warp
       ];
       testDepends = [
         bson http-types HUnit lio mongoDB QuickCheck quickcheck-instances
         quickcheck-lio-instances test-framework test-framework-hunit
         test-framework-quickcheck2 text time wai wai-test
       ];
       description = "Multi-app web platform framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hails-bin" = callPackage
    ({ mkDerivation, bson, ghc-paths, hails, iterIO, iterio-server
     , mongoDB, mtl
     }:
     mkDerivation {
       pname = "hails-bin";
       version = "0.1.1.1";
       sha256 = "006qy5mkhh8zqy9mrpwjiym7klqma49zglwpjmx2ikmkkq9qnfvr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bson ghc-paths hails iterIO iterio-server mongoDB mtl
       ];
       description = "Dynamic launcher of Hails applications";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "hairy" = callPackage
    ({ mkDerivation, aeson, data-default, heroku, hspec, http-types
     , monad-logger, mtl, persistent, persistent-postgresql
     , persistent-template, scotty, text, time, transformers, wai
     , wai-extra, warp
     }:
     mkDerivation {
       pname = "hairy";
       version = "0.1.3";
       sha256 = "19kgygj9d3m56xcfc1zm0ki2ncgifrrsrf90bvp9bykyixycplap";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson data-default heroku http-types monad-logger mtl persistent
         persistent-postgresql persistent-template scotty text time
         transformers wai wai-extra warp
       ];
       testDepends = [
         hspec http-types mtl persistent scotty time wai wai-extra
       ];
       homepage = "https://github.com/tfausak/hairy";
       description = "A JSON REST API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hakaru" = callPackage
    ({ mkDerivation, aeson, Cabal, cassava, hmatrix, HUnit, integration
     , logfloat, math-functions, monad-loops, mwc-random, parallel
     , parsec, primitive, QuickCheck, random, statistics, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     , transformers, vector, zlib
     }:
     mkDerivation {
       pname = "hakaru";
       version = "0.1.4";
       sha256 = "033m28jckpqgc4izmyf4h60riy29mcvfhyw340z604miqg7ss2hf";
       buildDepends = [
         aeson cassava hmatrix integration logfloat math-functions
         monad-loops mwc-random parallel parsec primitive random statistics
         text transformers vector zlib
       ];
       testDepends = [
         Cabal hmatrix HUnit logfloat math-functions monad-loops mwc-random
         primitive QuickCheck random statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "http://indiana.edu/~ppaml/";
       description = "A probabilistic programming embedded DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hake" = callPackage
    ({ mkDerivation, filepath, mtl, regexpr, time, yjtools }:
     mkDerivation {
       pname = "hake";
       version = "1.3.8.1";
       sha256 = "0h0y466b664xyxi1hr8c7il4cslrmb1hyhsjzhvs55l33zb7591b";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl regexpr time yjtools ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/hake/index.xhtml";
       description = "make tool. ruby : rake = haskell : hake";
       license = "GPL";
     }) {};

  "hakismet" = callPackage
    ({ mkDerivation, HTTP, network }:
     mkDerivation {
       pname = "hakismet";
       version = "0.1";
       sha256 = "1ddmnzan16vn0fbp1fgsidahayihhr0vw8saypdqq7lnhqw8j9d4";
       buildDepends = [ HTTP network ];
       homepage = "https://code.reaktor42.de/projects/hakismet";
       description = "Akismet spam protection library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hako" = callPackage
    ({ mkDerivation, haskell-src-meta, parsec, QuickCheck, text
     , transformers
     }:
     mkDerivation {
       pname = "hako";
       version = "1.0.0";
       sha256 = "1gcw15522yh0aa7xa793gda45qmq8my15id4ybivv3n16pcr7prm";
       buildDepends = [ haskell-src-meta parsec text transformers ];
       testDepends = [ QuickCheck ];
       description = "A mako-like quasi-quoter template library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hakyll" = callPackage
    ({ mkDerivation, binary, blaze-html, blaze-markup, cmdargs
     , cryptohash, data-default, deepseq, filepath, fsnotify
     , http-conduit, http-types, HUnit, lrucache, mtl, network
     , network-uri, pandoc, pandoc-citeproc, parsec, QuickCheck, random
     , regex-base, regex-tdfa, snap-core, snap-server, system-filepath
     , tagsoup, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, utillinux
     }:
     mkDerivation {
       pname = "hakyll";
       version = "4.6.1.1";
       sha256 = "1y1bc25ivj6sgq9909qgwsm54dn6sdisd1znkk9r5x9c7ajv6gaa";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary blaze-html blaze-markup cmdargs cryptohash data-default
         deepseq filepath fsnotify http-conduit http-types lrucache mtl
         network network-uri pandoc pandoc-citeproc parsec random regex-base
         regex-tdfa snap-core snap-server system-filepath tagsoup text time
       ];
       testDepends = [
         binary blaze-html blaze-markup cmdargs cryptohash data-default
         deepseq filepath fsnotify http-conduit http-types HUnit lrucache
         mtl network network-uri pandoc pandoc-citeproc parsec QuickCheck
         random regex-base regex-tdfa snap-core snap-server system-filepath
         tagsoup test-framework test-framework-hunit
         test-framework-quickcheck2 text time utillinux
       ];
       homepage = "http://jaspervdj.be/hakyll";
       description = "A static website compiler library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hakyll-agda" = callPackage
    ({ mkDerivation, Agda, filepath, hakyll, mtl, pandoc, transformers
     , xhtml
     }:
     mkDerivation {
       pname = "hakyll-agda";
       version = "0.1.9";
       sha256 = "1fh0901r140p3lvw54q8d6x17zhbvpik5bsx2hifa8q2g5bnxnxd";
       buildDepends = [
         Agda filepath hakyll mtl pandoc transformers xhtml
       ];
       homepage = "https://github.com/bitonic/hakyll-agda";
       description = "Wrapper to integrate literate Agda files with Hakyll";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hakyll-blaze-templates" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, hakyll }:
     mkDerivation {
       pname = "hakyll-blaze-templates";
       version = "0.1.1.0";
       sha256 = "11dl3rqls2yxkmycx63xr1cix4adk6b29sbwr4v5n48bqamr7p1j";
       buildDepends = [ blaze-html blaze-markup hakyll ];
       description = "Blaze templates for Hakyll";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hakyll-contrib" = callPackage
    ({ mkDerivation, filepath, hakyll, pandoc }:
     mkDerivation {
       pname = "hakyll-contrib";
       version = "0.1.0.1";
       sha256 = "0w23laiw6a5hxfq5hjq8vn3k7fx5l4yb9p8qcbm62zlycza1ci14";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath hakyll pandoc ];
       homepage = "http://jaspervdj.be/hakyll";
       description = "Extra modules for the hakyll website compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hakyll-contrib-hyphenation" = callPackage
    ({ mkDerivation, hakyll, hyphenation, split, tagsoup }:
     mkDerivation {
       pname = "hakyll-contrib-hyphenation";
       version = "0.1.0.3";
       sha256 = "0mkbsivifggi64k97ssxb0dskzwf7h0sny4m8gmkdsvwqjhfdjam";
       buildDepends = [ hakyll hyphenation split tagsoup ];
       homepage = "https://bitbucket.org/rvlm/hakyll-contrib-hyphenation";
       description = "automatic hyphenation for Hakyll";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hakyll-contrib-links" = callPackage
    ({ mkDerivation, binary, hakyll, pandoc, pandoc-types, parsec
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hakyll-contrib-links";
       version = "0.2.0.0";
       sha256 = "0gzg88pcqxwj4qwr2qj24csjljvxcz3v9iclhz5f9g8dx41rkiy5";
       buildDepends = [ binary hakyll pandoc pandoc-types parsec ];
       testDepends = [
         binary QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "A hakyll library that helps maintain a separate links database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hakyll-convert" = callPackage
    ({ mkDerivation, binary, cmdargs, feed, filepath, hakyll, text
     , time, xml
     }:
     mkDerivation {
       pname = "hakyll-convert";
       version = "0.1.0.0";
       sha256 = "1dvif26avp6fczhlg8pi591wp8d1z3kvjr745r5p17lzwpwy1rx3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cmdargs feed filepath hakyll text time xml
       ];
       homepage = "http://github.com/kowey/hakyll-convert";
       description = "Convert from other blog engines to Hakyll";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hakyll-elm" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, Elm, hakyll, mtl }:
     mkDerivation {
       pname = "hakyll-elm";
       version = "0.2.1";
       sha256 = "0bgwcxarsa40aylvg4cc7ha5y87xklkc4ifwd17l69l4xbb4iqpk";
       buildDepends = [ blaze-html blaze-markup Elm hakyll mtl ];
       homepage = "https://github.com/maxsnew/hakyll-elm";
       description = "Hakyll wrapper for the Elm compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "halberd" = callPackage
    ({ mkDerivation, Cabal, haskell-names, haskell-packages
     , haskell-src-exts, HUnit, mtl, safe, split, syb, tagged
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "halberd";
       version = "0.1.2.9";
       sha256 = "1d8r1cz9q9mgw1abz8b8n6lnnc19g223hv3igznxfldbws7d6zrj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal haskell-names haskell-packages haskell-src-exts mtl safe syb
         tagged
       ];
       testDepends = [
         Cabal haskell-names haskell-packages haskell-src-exts HUnit mtl
         split tagged test-framework test-framework-hunit
       ];
       homepage = "http://github.com/haskell-suite/halberd/";
       description = "A tool to generate missing import statements for Haskell modules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "half" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "half";
       version = "0.2.0.1";
       sha256 = "0lwh5bv8pnp9fzq64z1fg1i4fv8h2lcchs1298agq881hcay19qw";
       homepage = "http://github.com/ekmett/half";
       description = "Half-precision floating-point";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "halfs" = callPackage
    ({ mkDerivation, cereal, filepath, fingertree, HFuse, mtl
     , QuickCheck, random, time
     }:
     mkDerivation {
       pname = "halfs";
       version = "2.0";
       sha256 = "1k47q0vp0cmvmxz28hmv8dgniz9ks7h0wjjmdkjgvb77p8jj2akd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal filepath fingertree HFuse mtl QuickCheck random time
       ];
       description = "The HAskelL File System (\"halfs\" -- intended for use on the HaLVM)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "halipeto" = callPackage
    ({ mkDerivation, HaXml, pandoc }:
     mkDerivation {
       pname = "halipeto";
       version = "2.4.1";
       sha256 = "1anyf6mh13rmj5a0lsayrcxzvm3zk0a2943pzkgz06y3aqgmcbdb";
       buildDepends = [ HaXml pandoc ];
       homepage = "http://github.com/peti/halipeto";
       description = "Haskell Static Web Page Generator";
       license = "GPL";
     }) {};

  "haltavista" = callPackage
    ({ mkDerivation, hint }:
     mkDerivation {
       pname = "haltavista";
       version = "0.1.0.1";
       sha256 = "0l2qlibfxj8n7jqqqrbswx3fgislxz39075bhip07qx55193dx2f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hint ];
       description = "looks for functions given a set of example input/outputs";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "hamid" = callPackage
    ({ mkDerivation, HCodecs, newtype }:
     mkDerivation {
       pname = "hamid";
       version = "0.10";
       sha256 = "19792k9pwpkqwqznxm00nbq22swnayz7fv60ly0wsw5zmf1g6wv8";
       buildDepends = [ HCodecs newtype ];
       description = "Binding to the OS level Midi services (fork of system-midi)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hamlet" = callPackage
    ({ mkDerivation, shakespeare }:
     mkDerivation {
       pname = "hamlet";
       version = "1.2.0";
       sha256 = "0rla3ap3malk8j6mh07fr2aqvbscpy743wrfq3skgjv3j4jlpjfi";
       buildDepends = [ shakespeare ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "Haml-like template files that are compile-time checked (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hampp" = callPackage
    ({ mkDerivation, filepath, Glob, preprocessor-tools }:
     mkDerivation {
       pname = "hampp";
       version = "0.2.1";
       sha256 = "0y7lsh16xrlgsgfsqw00ldcdcjwsy8cziw8p3g753k9m23can4wl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath Glob preprocessor-tools ];
       description = "Haskell macro preprocessor";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hamtmap" = callPackage
    ({ mkDerivation, deepseq, hashable }:
     mkDerivation {
       pname = "hamtmap";
       version = "0.3";
       sha256 = "04fr1wjlbmr0c9cp9ybdcirlgayw843klxi0lwl9b9pzwzn0glfl";
       buildDepends = [ deepseq hashable ];
       homepage = "https://github.com/exclipy/pdata";
       description = "A purely functional and persistent hash map";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hamusic" = callPackage
    ({ mkDerivation, filepath, haskore, HaXml, musicxml, non-negative
     }:
     mkDerivation {
       pname = "hamusic";
       version = "0.1.2.1";
       sha256 = "1gfzydgnf8fffsl2f189gy81pb13dbf81i1a83laqsck6dhp60in";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath haskore HaXml musicxml non-negative ];
       homepage = "https://troglodita.di.uminho.pt/svn/musica/work/HaMusic";
       description = "Library to handle abstract music";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "handa-gdata" = callPackage
    ({ mkDerivation, base64-bytestring, binary, case-insensitive
     , cmdargs, data-default, filepath, GenericPretty, HTTP
     , http-conduit, json, network, pureMD5, random, regex-posix
     , resourcet, split, time, unix-compat, utf8-string, xml
     }:
     mkDerivation {
       pname = "handa-gdata";
       version = "0.7.0.2";
       sha256 = "0h75qj05hpdyl9x54rcb3sqzzzyby57g2aihjgawif2zg7wif7a7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base64-bytestring binary case-insensitive cmdargs data-default
         filepath GenericPretty HTTP http-conduit json network pureMD5
         random regex-posix resourcet split time unix-compat utf8-string xml
       ];
       homepage = "http://code.google.com/p/hgdata";
       description = "Library and command-line utility for accessing Google services and APIs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "handa-geodata" = callPackage
    ({ mkDerivation, aeson, scientific }:
     mkDerivation {
       pname = "handa-geodata";
       version = "0.2.0.1";
       sha256 = "0x0ix66wcpv172rxk9daifirnrcbblkjlvlg762z4i7qhipjfi2n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson scientific ];
       homepage = "http://code.bwbush.io/handa-geodata/";
       description = "Geographic and Geometric Data";
       license = stdenv.lib.licenses.mit;
     }) {};

  "handle-like" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "handle-like";
       version = "0.1.0.2";
       sha256 = "1cn7423962fg21m75ww5gpg2kwbn1fb7y76hgfq9n6hhbnz8nd4m";
       description = "HandleLike class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hangman" = callPackage
    ({ mkDerivation, mtl, random, utility-ht }:
     mkDerivation {
       pname = "hangman";
       version = "1.0.3";
       sha256 = "0k86z27qiaz967hsdnb3sac5ybmnyzd4d2gxzvdngw8rcvcq3biy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl random utility-ht ];
       description = "Hangman implementation in Haskell written in two hours";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hans" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, cereal, fingertree, HTTP
     , monadLib, random, time
     }:
     mkDerivation {
       pname = "hans";
       version = "2.4.0.0";
       sha256 = "1sjvjx27hll04i0g0744zlvlq4vd7q0299czg9bnihvsds6rr84n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-html blaze-markup cereal fingertree HTTP monadLib random time
       ];
       description = "IPv4 Network Stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hans-pcap" = callPackage
    ({ mkDerivation, hans, pcap }:
     mkDerivation {
       pname = "hans-pcap";
       version = "0.1.0.0";
       sha256 = "1cbk3gipnh43k7lw6islxm51alk0d5ibl37xqcw8db6208jvcllh";
       buildDepends = [ hans pcap ];
       homepage = "https://github.com/tolysz/hans-pcap";
       description = "PCAP driver for HaNS";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hapistrano" = callPackage
    ({ mkDerivation, either, filepath, lens, time, transformers }:
     mkDerivation {
       pname = "hapistrano";
       version = "0.1.0.2";
       sha256 = "172hdvs8rnxwv3dy56024f4yc9f9hbs03wz3hfpdcqfj0a9lix65";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ either filepath lens time transformers ];
       description = "A deployment library for Haskell applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "happindicator" = callPackage
    ({ mkDerivation, appindicator, glib, gtk, gtk2hs-buildtools, mtl }:
     mkDerivation {
       pname = "happindicator";
       version = "0.0.4";
       sha256 = "1d0ycpxmlz2ab8dzys7i6ihc3rbs43d0l5l2mxvshqbpj3j73643";
       buildDepends = [ glib gtk mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ appindicator ];
       description = "Binding to the appindicator library";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "happindicator3" = callPackage
    ({ mkDerivation, appindicator, glib, gtk3, text }:
     mkDerivation {
       pname = "happindicator3";
       version = "0.2.1";
       sha256 = "09h3077s61krg814aw2whgc869m6ff96rrxfk6rjpjy71lkmcl92";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ glib gtk3 text ];
       pkgconfigDepends = [ appindicator ];
       homepage = "https://github.com/mlacorte/happindicator3";
       description = "Binding to the appindicator library";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "happraise" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "happraise";
       version = "0.1";
       sha256 = "1vcbfil9wxhk7vrmrmkn094rb281h4a3mrzpw5gl1842dpp5hp1g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "A small program for counting the comments in haskell source";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happs-hsp" = callPackage
    ({ mkDerivation, HAppS-Server, hsp, mtl, plugins }:
     mkDerivation {
       pname = "happs-hsp";
       version = "0.1";
       sha256 = "0l1gb0qhhmld77qyz8qclbqxnv0hvyvjhav78690z50kvpjpqrxx";
       buildDepends = [ HAppS-Server hsp mtl plugins ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happs-hsp-template" = callPackage
    ({ mkDerivation, filepath, HAppS-Server, hinotify, hsp, mtl
     , network, plugins, RJson
     }:
     mkDerivation {
       pname = "happs-hsp-template";
       version = "0.2";
       sha256 = "0591ipk9zzzznmhz5wpp3qk7fkirhcp801qnk399jsms66fc8378";
       buildDepends = [
         filepath HAppS-Server hinotify hsp mtl network plugins RJson
       ];
       description = "Utilities for using HSP templates in HAppS applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happs-tutorial" = callPackage
    ({ mkDerivation, DebugTraceHelpers, filepath, happstack
     , happstack-data, happstack-helpers, happstack-ixset
     , happstack-server, happstack-state, hscolour, HStringTemplate
     , HStringTemplateHelpers, HTTP, mtl, parsec, pureMD5, safe, syb
     }:
     mkDerivation {
       pname = "happs-tutorial";
       version = "0.9.5";
       sha256 = "1pkk78npgrr6dar00n93j6fbbkjam6198lkxp3q4zpdqspz4qypn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         DebugTraceHelpers filepath happstack happstack-data
         happstack-helpers happstack-ixset happstack-server happstack-state
         hscolour HStringTemplate HStringTemplateHelpers HTTP mtl parsec
         pureMD5 safe syb
       ];
       description = "A Happstack Tutorial that is its own web 2.0-type demo.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack" = callPackage
    ({ mkDerivation, happstack-server }:
     mkDerivation {
       pname = "happstack";
       version = "7.0.2";
       sha256 = "1dfmfyrynggf1ff6364kb9a53rm64zhirx6ispnhykwdf60zbm6r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ happstack-server ];
       homepage = "http://happstack.com";
       description = "The haskell application server stack + code generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-auth" = callPackage
    ({ mkDerivation, convertible, happstack, happstack-data
     , happstack-ixset, happstack-server, happstack-state, mtl, random
     }:
     mkDerivation {
       pname = "happstack-auth";
       version = "0.2.1.1";
       sha256 = "0mfd2r88681dskn1l1gcbam8rvaqsry09zavywkm4kvmw8912vy4";
       buildDepends = [
         convertible happstack happstack-data happstack-ixset
         happstack-server happstack-state mtl random
       ];
       homepage = "http://n-sch.de/happstack-auth";
       description = "A Happstack Authentication Suite";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-authenticate" = callPackage
    ({ mkDerivation, acid-state, aeson, authenticate, blaze-html, fb
     , happstack-server, http-conduit, http-types, ixset, mtl
     , pwstore-purehaskell, QuickCheck, reform, reform-blaze
     , reform-happstack, safecopy, text, time, unordered-containers
     , web-routes, web-routes-happstack
     }:
     mkDerivation {
       pname = "happstack-authenticate";
       version = "0.10.15";
       sha256 = "0l52bw2cg33sz45bzinqlb98hi1lnby6r9i45wlf3w4rlk9vcasw";
       buildDepends = [
         acid-state aeson authenticate blaze-html fb happstack-server
         http-conduit http-types ixset mtl pwstore-purehaskell QuickCheck
         reform reform-blaze reform-happstack safecopy text time
         unordered-containers web-routes web-routes-happstack
       ];
       homepage = "http://www.happstack.com/";
       description = "Happstack Authentication Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-clientsession" = callPackage
    ({ mkDerivation, cereal, clientsession, happstack-server
     , monad-control, mtl, safecopy, transformers-base
     }:
     mkDerivation {
       pname = "happstack-clientsession";
       version = "7.2.7";
       sha256 = "1zwdcnsdq9nb88wf0mc8vh4wkw5kl5r39mmhq098ny3wpvwnp7lx";
       buildDepends = [
         cereal clientsession happstack-server monad-control mtl safecopy
         transformers-base
       ];
       homepage = "http://happstack.com";
       description = "client-side session data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-contrib" = callPackage
    ({ mkDerivation, happstack-data, happstack-ixset, happstack-server
     , happstack-state, happstack-util, HTTP, HUnit, mtl, network, syb
     }:
     mkDerivation {
       pname = "happstack-contrib";
       version = "0.2.1";
       sha256 = "0cqdfnjcmghw3wwny2brw51qbkvi8ps2crl8382sqwqq9gkw0l75";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         happstack-data happstack-ixset happstack-server happstack-state
         happstack-util HTTP HUnit mtl network syb
       ];
       homepage = "http://happstack.com";
       description = "Web related tools and services";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-data" = callPackage
    ({ mkDerivation, binary, mtl, syb, syb-with-class
     , syb-with-class-instances-text, text, time
     }:
     mkDerivation {
       pname = "happstack-data";
       version = "6.0.1";
       sha256 = "0v2ln4mdnild72p02mzjn8mn5srvjixsjqjgkdqzshvxjnnm95l8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary mtl syb syb-with-class syb-with-class-instances-text text
         time
       ];
       homepage = "http://happstack.com";
       description = "Happstack data manipulation libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-dlg" = callPackage
    ({ mkDerivation, applicative-extras, formlets, happstack-server
     , mtl, random, time, xhtml
     }:
     mkDerivation {
       pname = "happstack-dlg";
       version = "0.1.2";
       sha256 = "1zm8f224r0nwpykvil8s05lcswrw31iigcw9arnf4j362y03n2qp";
       buildDepends = [
         applicative-extras formlets happstack-server mtl random time xhtml
       ];
       homepage = "http://patch-tag.com/r/cdsmith/happstack-dlg";
       description = "Cross-request user interactions for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-facebook" = callPackage
    ({ mkDerivation, applicative-extras, filepath, happstack
     , happstack-data, happstack-hsp, happstack-ixset, happstack-server
     , happstack-state, happstack-util, harp, hsp, hsx, html, HTTP, json
     , mtl, network, random, RJson, syb, text, time, trhsx, utf8-string
     , web-routes, web-routes-mtl
     }:
     mkDerivation {
       pname = "happstack-facebook";
       version = "0.30";
       sha256 = "1rfd2rkizviq7pv6lmhkp0dmwwk2m25kz9vzczk3ycm57mk7ql8c";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         applicative-extras filepath happstack happstack-data happstack-hsp
         happstack-ixset happstack-server happstack-state happstack-util
         harp hsp hsx html HTTP json mtl network random RJson syb text time
         utf8-string web-routes web-routes-mtl
       ];
       buildTools = [ trhsx ];
       homepage = "http://src.seereason.com/happstack-facebook/";
       description = "A package for building Facebook applications using Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-fastcgi" = callPackage
    ({ mkDerivation, cgi, fastcgi, happstack-server, mtl, utf8-string
     }:
     mkDerivation {
       pname = "happstack-fastcgi";
       version = "0.1.5";
       sha256 = "0rvb041nx2f8azvfy1yysisjqrmsfbxnccn992v5q7zhlglcvj8h";
       buildDepends = [ cgi fastcgi happstack-server mtl utf8-string ];
       description = "Happstack extension for use with FastCGI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-fay" = callPackage
    ({ mkDerivation, aeson, fay, happstack-fay-ajax, happstack-server
     , mtl
     }:
     mkDerivation {
       pname = "happstack-fay";
       version = "0.2.0";
       sha256 = "1mwx7ki35s6x3ypxl8sv611a2h4zxwd77ij95bydf5azzz9l6ys5";
       buildDepends = [
         aeson fay happstack-fay-ajax happstack-server mtl
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using Fay with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-fay-ajax" = callPackage
    ({ mkDerivation, fay-base, fay-jquery }:
     mkDerivation {
       pname = "happstack-fay-ajax";
       version = "0.2.0";
       sha256 = "0zdkvvmywnfvqg5jdvf29qczzxmprvspxj0r1vj46fd6vld53j4j";
       buildDepends = [ fay-base fay-jquery ];
       homepage = "http://www.happstack.com/";
       description = "Support for using Fay with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-foundation" = callPackage
    ({ mkDerivation, acid-state, happstack-hsp, happstack-server, hsp
     , lifted-base, monad-control, mtl, reform, reform-happstack
     , reform-hsp, safecopy, text, web-routes, web-routes-happstack
     , web-routes-hsp, web-routes-th
     }:
     mkDerivation {
       pname = "happstack-foundation";
       version = "0.5.6";
       sha256 = "0ncnmqwpqnpywbkg87ykj498b35kziziad7lh4rmwxqmclcjqara";
       buildDepends = [
         acid-state happstack-hsp happstack-server hsp lifted-base
         monad-control mtl reform reform-happstack reform-hsp safecopy text
         web-routes web-routes-happstack web-routes-hsp web-routes-th
       ];
       homepage = "http://www.happstack.com/";
       description = "Glue code for using Happstack with acid-state, web-routes, reform, and HSP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-hamlet" = callPackage
    ({ mkDerivation, happstack-server, shakespeare, text }:
     mkDerivation {
       pname = "happstack-hamlet";
       version = "7.0.4";
       sha256 = "1l12gyyqzblb9psk6692r9xw640jxzyxqldfyg2yrzz8y0zi649a";
       buildDepends = [ happstack-server shakespeare text ];
       homepage = "http://www.happstack.com/";
       description = "Support for Hamlet HTML templates in Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-heist" = callPackage
    ({ mkDerivation, blaze-builder, either, filepath, happstack-server
     , heist, mtl, text
     }:
     mkDerivation {
       pname = "happstack-heist";
       version = "7.2.4";
       sha256 = "1ax1fyw9788iilmczqr6s1ryh2h9x2f6n9c8mqxjmq58zg1lc2d3";
       buildDepends = [
         blaze-builder either filepath happstack-server heist mtl text
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using Heist templates in Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-helpers" = callPackage
    ({ mkDerivation, DebugTraceHelpers, filepath, happstack-data
     , happstack-ixset, happstack-server, happstack-state, hscolour, HSH
     , HStringTemplate, HStringTemplateHelpers, HTTP, MissingH, mtl
     , network, parsec, PBKDF2, pureMD5, random, safe, syb, text
     , utf8-string
     }:
     mkDerivation {
       pname = "happstack-helpers";
       version = "0.56";
       sha256 = "0yrspdcgxj2izivwm7fy8msfbzlpdn3zv0j1z6b1smzydcbad202";
       buildDepends = [
         DebugTraceHelpers filepath happstack-data happstack-ixset
         happstack-server happstack-state hscolour HSH HStringTemplate
         HStringTemplateHelpers HTTP MissingH mtl network parsec PBKDF2
         pureMD5 random safe syb text utf8-string
       ];
       homepage = "http://patch-tag.com/r/tphyahoo/HAppSHelpers/home";
       description = "Convenience functions for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-hsp" = callPackage
    ({ mkDerivation, happstack-server, harp, hsp, hsx2hs, mtl, syb
     , text, utf8-string
     }:
     mkDerivation {
       pname = "happstack-hsp";
       version = "7.3.3";
       sha256 = "0yzf8l79pv3a6avq9impkb9ga4c6ka187lbi184jjczqbzzfs8gv";
       buildDepends = [
         happstack-server harp hsp hsx2hs mtl syb text utf8-string
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using HSP templates in Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-hstringtemplate" = callPackage
    ({ mkDerivation, happstack-server, hslogger, HStringTemplate, mtl
     }:
     mkDerivation {
       pname = "happstack-hstringtemplate";
       version = "7.0.4";
       sha256 = "1pcj6vixzrbdmqi2yxcxhjnj5rdwlyg4nzcjkgks01ilgpg7fsf4";
       buildDepends = [ happstack-server hslogger HStringTemplate mtl ];
       homepage = "http://www.happstack.com/";
       description = "Support for using HStringTemplate in Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-ixset" = callPackage
    ({ mkDerivation, happstack-data, happstack-util, mtl, syb
     , syb-with-class
     }:
     mkDerivation {
       pname = "happstack-ixset";
       version = "6.0.1";
       sha256 = "1hnhn0iyfw5rknz17p7m1p3rrngr77zv3lkni8d35q50bzzyw8ni";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         happstack-data happstack-util mtl syb syb-with-class
       ];
       homepage = "http://happstack.com";
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-jmacro" = callPackage
    ({ mkDerivation, base64-bytestring, cereal, digest
     , happstack-server, jmacro, text, utf8-string, wl-pprint-text
     }:
     mkDerivation {
       pname = "happstack-jmacro";
       version = "7.0.9";
       sha256 = "005naz3zxl01vpz8w4n66dbd8sj94gazpj16rxf3li7zh0pixpsg";
       buildDepends = [
         base64-bytestring cereal digest happstack-server jmacro text
         utf8-string wl-pprint-text
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using JMacro with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-lite" = callPackage
    ({ mkDerivation, happstack-server, mtl, text }:
     mkDerivation {
       pname = "happstack-lite";
       version = "7.3.5";
       sha256 = "1gkzkmg1ad5k9hb4gix2afq1k4j996qpp8mm1jzqk03a5njdpb4b";
       buildDepends = [ happstack-server mtl text ];
       homepage = "http://www.happstack.com/";
       description = "Happstack minus the useless stuff";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-monad-peel" = callPackage
    ({ mkDerivation, happstack-server, monad-peel, mtl, transformers }:
     mkDerivation {
       pname = "happstack-monad-peel";
       version = "0.1";
       sha256 = "0v6lshy572pvzhgqphyrhw8w2wsgxp9mqz8p3lrxmcp3i7sgqbry";
       buildDepends = [ happstack-server monad-peel mtl transformers ];
       description = "monad-peel instances for Happstack types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-plugins" = callPackage
    ({ mkDerivation, happstack-server, mtl, plugins-auto, th-lift }:
     mkDerivation {
       pname = "happstack-plugins";
       version = "7.0.2";
       sha256 = "07zh0gk77rbd1akzax29l7d6412sx5ghjhz640d6cbzxs39nlaif";
       buildDepends = [ happstack-server mtl plugins-auto th-lift ];
       homepage = "http://happstack.com";
       description = "The haskell application server stack + reload";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-server" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-html
     , extensible-exceptions, filepath, hslogger, html, HUnit
     , monad-control, mtl, network, network-uri, parsec, sendfile, syb
     , system-filepath, text, threads, time, time-compat, transformers
     , transformers-base, utf8-string, xhtml, zlib
     }:
     mkDerivation {
       pname = "happstack-server";
       version = "7.3.9";
       sha256 = "10js2kmxw5lyy1h5xyz7qx852d29cl48qxyvadc4bdad6w06gdlz";
       buildDepends = [
         base64-bytestring blaze-html extensible-exceptions filepath
         hslogger html monad-control mtl network network-uri parsec sendfile
         syb system-filepath text threads time time-compat transformers
         transformers-base utf8-string xhtml zlib
       ];
       testDepends = [ HUnit parsec zlib ];
       homepage = "http://happstack.com";
       description = "Web related tools and services";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-server-tls" = callPackage
    ({ mkDerivation, cryptopp, extensible-exceptions, happstack-server
     , hslogger, HsOpenSSL, network, openssl, sendfile, time
     }:
     mkDerivation {
       pname = "happstack-server-tls";
       version = "7.1.4";
       sha256 = "1b4yg2grr5m356yscsvad5adq0dl9a40ry0xgvz402lwfriwpj9w";
       buildDepends = [
         extensible-exceptions happstack-server hslogger HsOpenSSL network
         sendfile time
       ];
       extraLibraries = [ cryptopp openssl ];
       homepage = "http://www.happstack.com/";
       description = "extend happstack-server with https:// support (TLS/SSL)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-state" = callPackage
    ({ mkDerivation, binary, extensible-exceptions, filepath
     , happstack-data, happstack-util, hslogger, mtl, random, stm, syb
     }:
     mkDerivation {
       pname = "happstack-state";
       version = "6.1.4";
       sha256 = "1xfp0546z70sfda0z7w7ns4jhgcbx3vmnz4vsnckzhgflzmdixq9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary extensible-exceptions filepath happstack-data happstack-util
         hslogger mtl random stm syb
       ];
       homepage = "http://happstack.com";
       description = "Event-based distributed state";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-static-routing" = callPackage
    ({ mkDerivation, happstack-server, list-tries, transformers }:
     mkDerivation {
       pname = "happstack-static-routing";
       version = "0.4.0";
       sha256 = "1dpi7nmax447ilagsjdpvnbj6xh27s7bcp69c8y39cs6bmjg42v1";
       buildDepends = [ happstack-server list-tries transformers ];
       homepage = "https://github.com/scrive/happstack-static-routing";
       description = "Support for static URL routing with overlap detection for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-util" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, hslogger, mtl
     , network, parsec, random, time, unix-compat
     }:
     mkDerivation {
       pname = "happstack-util";
       version = "6.0.3";
       sha256 = "0hqssd5wzir6rxn46q8r3hdp3nl7v5m7w322j39120xpg2bhiphh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions filepath hslogger mtl network parsec random
         time unix-compat
       ];
       homepage = "http://happstack.com";
       description = "Web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happstack-yui" = callPackage
    ({ mkDerivation, boomerang, happstack-jmacro, happstack-server, hsp
     , interpolatedstring-perl6, jmacro, mtl, text, web-routes
     , web-routes-boomerang, web-routes-happstack, web-routes-th
     }:
     mkDerivation {
       pname = "happstack-yui";
       version = "7373.5.3";
       sha256 = "178r3jqxmrdp0glp9p4baw8x7zk0w8j4m5l173rjnz9yxn53nyni";
       buildDepends = [
         boomerang happstack-jmacro happstack-server hsp
         interpolatedstring-perl6 jmacro mtl text web-routes
         web-routes-boomerang web-routes-happstack web-routes-th
       ];
       homepage = "http://hub.darcs.net/dag/yui/browse/happstack-yui";
       description = "Utilities for using YUI3 with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happy" = callPackage
    ({ mkDerivation, mtl, perl }:
     mkDerivation {
       pname = "happy";
       version = "1.19.4";
       sha256 = "0vcklr1y6yjf8z4wip4al2zw4qlfxcahbdxwpf6c9y31dkv9kr3b";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       buildTools = [ perl ];
       homepage = "http://www.haskell.org/happy/";
       description = "Happy is a parser generator for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happy-meta" = callPackage
    ({ mkDerivation, happy, haskell-src-meta, mtl }:
     mkDerivation {
       pname = "happy-meta";
       version = "0.2.0.7";
       sha256 = "12599233lh0ffmvlim0gs5jzg8lly1g11i1cg44lb37bz3l7psh9";
       buildDepends = [ haskell-src-meta mtl ];
       buildTools = [ happy ];
       description = "Quasi-quoter for Happy parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "happybara" = callPackage
    ({ mkDerivation, aeson, filepath, http-types, lifted-base
     , monad-control, mtl, text, time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "happybara";
       version = "0.0.1";
       sha256 = "1lp2awvj077d16gppir6nv9fx6d9g1k7w6j01bxkffy3q5x04xrv";
       buildDepends = [
         aeson filepath http-types lifted-base monad-control mtl text time
         transformers transformers-base
       ];
       homepage = "https://github.com/cstrahan/happybara";
       description = "Acceptance test framework for web applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "happybara-webkit" = callPackage
    ({ mkDerivation, aeson, case-insensitive, data-default, filepath
     , happybara, http-types, lifted-base, monad-control, mtl, network
     , text, time, transformers, transformers-base, vector, word8
     }:
     mkDerivation {
       pname = "happybara-webkit";
       version = "0.0.1";
       sha256 = "17446wkyljwd7nq6mhsj2v411zb9wsz833sczm4nzcigywvhx4fw";
       buildDepends = [
         aeson case-insensitive data-default filepath happybara http-types
         lifted-base monad-control mtl network text time transformers
         transformers-base vector word8
       ];
       homepage = "https://github.com/cstrahan/happybara/happybara-webkit";
       description = "WebKit Happybara driver";
       license = stdenv.lib.licenses.mit;
     }) {};

  "happybara-webkit-server" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "happybara-webkit-server";
       version = "0.0.1";
       sha256 = "0vh9ig9mvg12qgysk7gbqwiib3m2ciwi10asb1i0x25xjp585shi";
       buildDepends = [ filepath ];
       homepage = "https://github.com/cstrahan/happybara/happybara-webkit-server";
       description = "WebKit Server binary for Happybara (taken from capybara-webkit)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "harchive" = callPackage
    ({ mkDerivation, binary, network, openssl, parsec, sqlite, zlib }:
     mkDerivation {
       pname = "harchive";
       version = "0.2";
       sha256 = "10485indn9sszq3514gs547phb0kpikm8m6ykq1ns2kp0pmkgz9m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary network parsec zlib ];
       extraLibraries = [ openssl sqlite ];
       homepage = "http://www.davidb.org/darcs/harchive/";
       description = "Networked content addressed backup and restore software";
       license = "GPL";
     }) { inherit (pkgs) sqlite; };

  "hark" = callPackage
    ({ mkDerivation, filepath, mtl, regex-pcre }:
     mkDerivation {
       pname = "hark";
       version = "0.2";
       sha256 = "1wxwxx3l4zvb1jr19lckamb0gxywsq1f4n4ncb373vqdnwnrr8x4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl regex-pcre ];
       homepage = "http://code.google.com/p/hark/";
       description = "A Gentoo package query tool";
       license = "GPL";
     }) {};

  "haroonga" = callPackage
    ({ mkDerivation, bindings-DSL, groonga, monad-control, resourcet
     , transformers
     }:
     mkDerivation {
       pname = "haroonga";
       version = "0.1.5.0";
       sha256 = "16xmhsngpknlc3g3z4mxb9c4rllnsap1fvcj9nf4yr4mafx96b11";
       buildDepends = [
         bindings-DSL monad-control resourcet transformers
       ];
       pkgconfigDepends = [ groonga ];
       description = "Low level bindings for Groonga";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "harp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "harp";
       version = "0.4";
       sha256 = "0fk3prqai1ynm5wdfsn9f700i9r499jc2z9fbsgy81k1rci2mrxh";
       homepage = "http://www.cs.chalmers.se/~d00nibro/harp/";
       description = "HaRP allows pattern-matching with regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "harpy" = callPackage
    ({ mkDerivation, disassembler, mtl, parsec }:
     mkDerivation {
       pname = "harpy";
       version = "0.5.0.0";
       sha256 = "11h235j9348i01qcmvc389khl8xp5azj3y31g75cs59kiblz1bk7";
       buildDepends = [ disassembler mtl parsec ];
       homepage = "http://code.haskell.org/harpy/";
       description = "Runtime code generation for x86 machine code";
       license = "GPL";
     }) {};

  "has" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "has";
       version = "0.5.0.1";
       sha256 = "0zydwhr2ac66knmrlf0b9vsys61w6370g9rid2gag2dvmy7xqp2s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck ];
       homepage = "http://github.com/nonowarn/has";
       description = "Entity based records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "has-th" = callPackage
    ({ mkDerivation, has }:
     mkDerivation {
       pname = "has-th";
       version = "0.1";
       sha256 = "0yyrfd8mgxwyfgwcg61q7yj2cq2zj6zlk1l340y4vzj71r53qgc4";
       buildDepends = [ has ];
       homepage = "http://github.com/chrisdone/has-th";
       description = "Template Haskell function for Has records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hascal" = callPackage
    ({ mkDerivation, HUnit, numbers }:
     mkDerivation {
       pname = "hascal";
       version = "2.0.0.1";
       sha256 = "1nq383fg2cn82rbmnp6kgzyk42fgp9xnqj84ypz0kf42954n4h1l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ numbers ];
       testDepends = [ HUnit ];
       homepage = "http://darcsden.com/mekeor/hascal";
       description = "A minimalistic but extensible and precise calculator";
       license = "GPL";
     }) {};

  "hascat" = callPackage
    ({ mkDerivation, hascat-lib, hascat-setup, hascat-system, HaXml
     , haxr, html, HTTP, network
     }:
     mkDerivation {
       pname = "hascat";
       version = "0.2";
       sha256 = "04z9q3l2hwf7lii8d3cxbh7zh6cqbbmy07yv5bal4lvrnd1wqia7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         hascat-lib hascat-setup hascat-system HaXml haxr html HTTP network
       ];
       description = "Hascat Web Server";
       license = "unknown";
     }) {};

  "hascat-lib" = callPackage
    ({ mkDerivation, HaXml, html, HTTP, mtl, network, parsec, plugins
     , xhtml
     }:
     mkDerivation {
       pname = "hascat-lib";
       version = "0.2";
       sha256 = "0l2cixgnyv2xhbpvkzrrn1wxikx7gcmwpkwagkfzx27iy33xkrqj";
       buildDepends = [
         HaXml html HTTP mtl network parsec plugins xhtml
       ];
       description = "Hascat Package";
       license = "unknown";
     }) {};

  "hascat-setup" = callPackage
    ({ mkDerivation, hascat-lib, hascat-system, plugins }:
     mkDerivation {
       pname = "hascat-setup";
       version = "0.2";
       sha256 = "058abyr70yr2130nbi64zhigglw207dh5anyxzw19c1qk4zmwsyi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hascat-lib hascat-system plugins ];
       description = "Hascat Installation helper";
       license = "unknown";
     }) {};

  "hascat-system" = callPackage
    ({ mkDerivation, hascat-lib, HaXml, HTTP, mtl, network, parsec
     , plugins
     }:
     mkDerivation {
       pname = "hascat-system";
       version = "0.2";
       sha256 = "1fabn71llrlxs5xlcpzkkvzjv7zibxlna0jvh6rkrz6pqyp1nd94";
       buildDepends = [
         hascat-lib HaXml HTTP mtl network parsec plugins
       ];
       description = "Hascat System Package";
       license = "unknown";
     }) {};

  "hash" = callPackage
    ({ mkDerivation, bifunctors, data-default, doctest, filepath
     , generic-deriving, hashable, lens, transformers
     }:
     mkDerivation {
       pname = "hash";
       version = "0.2.0.1";
       sha256 = "1ka6izpkz6gs4ag3xvnslxywi9344w3mh9rl968vq6ck203pv2rx";
       buildDepends = [
         bifunctors data-default generic-deriving hashable lens transformers
       ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/analytics/hash/";
       description = "Hashing tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashable" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "hashable";
       version = "1.2.3.0";
       sha256 = "02akgpwjzj2w5jnn31xp6yvgs4xmyircm8wcbq9v0icza6yb11qi";
       buildDepends = [ text ];
       testDepends = [
         HUnit QuickCheck random test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "http://github.com/tibbe/hashable";
       description = "A class for types that can be converted to a hash value";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashable-extras" = callPackage
    ({ mkDerivation, bifunctors, doctest, filepath, generic-deriving
     , hashable, transformers
     }:
     mkDerivation {
       pname = "hashable-extras";
       version = "0.2.0.1";
       sha256 = "09y2m0wpim7sl7n9qnkr0miwfsbvb1q8lm6shpcq0jxzxknbag7s";
       buildDepends = [
         bifunctors generic-deriving hashable transformers
       ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/analytics/hashable-extras/";
       description = "Higher-rank Hashable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashable-generics" = callPackage
    ({ mkDerivation, hashable, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hashable-generics";
       version = "1.1.8";
       sha256 = "1l5i4lasz32hsjvm9fbf7p9fy7s6bjy868w7rmpxci40qkz7ffhq";
       buildDepends = [ hashable ];
       testDepends = [
         hashable QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/wowus/hashable-generics";
       description = "Automatically generates Hashable instances with GHC.Generics.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashed-storage" = callPackage
    ({ mkDerivation, binary, dataenc, extensible-exceptions, filepath
     , mmap, mtl, zlib
     }:
     mkDerivation {
       pname = "hashed-storage";
       version = "0.5.11";
       sha256 = "0s8mnayxlvwrrii2l63b372yi5g08br6gpbgz2256d8y128mwjvk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dataenc extensible-exceptions filepath mmap mtl zlib
       ];
       description = "Hashed file storage support code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashmap" = callPackage
    ({ mkDerivation, deepseq, hashable }:
     mkDerivation {
       pname = "hashmap";
       version = "1.3.0.1";
       sha256 = "16scl1rbq0f18mggrj4lbhgkz7kzshsw9a523rjd8cjkdjz1ijwr";
       buildDepends = [ deepseq hashable ];
       homepage = "http://git.auryn.cz/haskell/hashmap/";
       description = "Persistent containers Map and Set based on hashing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashring" = callPackage
    ({ mkDerivation, hashable, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hashring";
       version = "0.0.0";
       sha256 = "05q9iay0ygr79x8yikgbi99v74kagyrd68zvjx8qakfzqgs9a19j";
       buildDepends = [ hashable ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/mkscrg/hashring";
       description = "Efficient consistent hashing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashtables" = callPackage
    ({ mkDerivation, hashable, primitive, vector }:
     mkDerivation {
       pname = "hashtables";
       version = "1.2.0.1";
       sha256 = "1z7hkd1lqb901i3wahg4ly8k0xrsv8292rkm3b7s463bf477179j";
       buildDepends = [ hashable primitive vector ];
       homepage = "http://github.com/gregorycollins/hashtables";
       description = "Mutable hash tables in the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hashtables-plus" = callPackage
    ({ mkDerivation, hashable, hashtables, loch-th, placeholders }:
     mkDerivation {
       pname = "hashtables-plus";
       version = "0.2.0";
       sha256 = "0g9jmc15g36iy0wmmsj74qwybh509j4lf8jzv3dws7c2j24kc7l7";
       buildDepends = [ hashable hashtables loch-th placeholders ];
       homepage = "https://github.com/nikita-volkov/hashtables-plus";
       description = "Extensions for a \"hashtables\" library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hasim" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "hasim";
       version = "0.1.2";
       sha256 = "03wn142r0sh7adfghjqwb2mgq4rgkqs8nq2rx2jq717dr2xp987n";
       buildDepends = [ mtl ];
       homepage = "http://huygens.functor.nl/hasim/";
       description = "Process-Based Discrete Event Simulation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hask" = callPackage
    ({ mkDerivation, constraints, reflection, tagged, transformers
     , void
     }:
     mkDerivation {
       pname = "hask";
       version = "0";
       sha256 = "1c87jxafxpnlyblhdif4br61wqvnad0s6hvfhmzhx9y1jri3rb39";
       editedCabalFile = "09h0sr60vwkjnjdfawg8d8shz8vh3r7q7n9vgwfs3fkzbajcpaq4";
       buildDepends = [ constraints reflection tagged transformers void ];
       homepage = "http://github.com/ekmett/hask";
       description = "Categories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hask-home" = callPackage
    ({ mkDerivation, Cabal, hmarkup, hsemail, network, parsec
     , regex-compat, xhtml
     }:
     mkDerivation {
       pname = "hask-home";
       version = "2009.3.18";
       sha256 = "128hkd1yycjvbnvwjd2r2mxhjdnmfkghyf0fcslh9fxprqgrhk18";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal hmarkup hsemail network parsec regex-compat xhtml
       ];
       homepage = "http://gregheartsfield.com/hask-home";
       description = "Generate homepages for cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskades" = callPackage
    ({ mkDerivation, errors, haskell-src, text, text-format }:
     mkDerivation {
       pname = "haskades";
       version = "0.2.1";
       sha256 = "19cglzgzxbg65qr7m68gnc6y45b7n0wl98pgd9jrk20sblrhc6p6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ errors haskell-src text text-format ];
       homepage = "http://github.com/singpolyma/haskades";
       description = "Utility to generate bindings for BlackBerry Cascades";
       license = "unknown";
     }) {};

  "haskakafka" = callPackage
    ({ mkDerivation, c2hs, either-unwrap, hspec, rdkafka, regex-posix
     , temporary
     }:
     mkDerivation {
       pname = "haskakafka";
       version = "1.0.0";
       sha256 = "0j1vii11lp91gydw3h0hb2b3lb85n9cji9m9rvb1d7svs91nhhk7";
       buildDepends = [ temporary ];
       testDepends = [ either-unwrap hspec regex-posix ];
       buildTools = [ c2hs ];
       extraLibraries = [ rdkafka ];
       homepage = "http://github.com/cosbynator/haskakafka";
       description = "Kafka bindings for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskanoid" = callPackage
    ({ mkDerivation, freenect, hcwiid, IfElse, MissingH, mtl, SDL
     , SDL-image, SDL-mixer, SDL-ttf, transformers, vector, Yampa
     }:
     mkDerivation {
       pname = "haskanoid";
       version = "0.1.3";
       sha256 = "11hwnjw01bra1xcp71kn2sdlk2a46vfv6sblymgf56mcqnj9pkra";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         freenect hcwiid IfElse MissingH mtl SDL SDL-image SDL-mixer SDL-ttf
         transformers vector Yampa
       ];
       homepage = "http://github.com/ivanperez-keera/haskanoid";
       description = "A breakout game written in Yampa using SDL";
       license = "unknown";
     }) {};

  "haskarrow" = callPackage
    ({ mkDerivation, cmdargs, cpphs, her-lexer, split }:
     mkDerivation {
       pname = "haskarrow";
       version = "0.0";
       sha256 = "01l90qningjlb4wn02avjy9lmi4ry4yxzw0a9sd29qbzfpnf3viy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs cpphs her-lexer split ];
       description = "A dialect of haskell with order of execution based on dependency resolution";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "haskbot-core" = callPackage
    ({ mkDerivation, aeson, connection, hspec, http-conduit, http-types
     , monads-tf, stm, text, wai, warp
     }:
     mkDerivation {
       pname = "haskbot-core";
       version = "0.1";
       sha256 = "0alqjgg2gvb9610s2b4fil5frknn5j8d6r558bfp1n6a0d51pz74";
       buildDepends = [
         aeson connection http-conduit http-types monads-tf stm text wai
         warp
       ];
       testDepends = [
         aeson connection hspec http-conduit http-types monads-tf stm text
         wai warp
       ];
       homepage = "https://github.com/jonplussed/haskbot-core";
       description = "Easily-extensible chatbot for Slack messaging service";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskdeep" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, base16-bytestring
     , cereal, conduit, crypto-api, crypto-conduit, cryptohash
     , cryptohash-cryptoapi, filesystem-conduit, optparse-applicative
     , regex-tdfa, regex-tdfa-text, system-fileio, system-filepath, text
     , time
     }:
     mkDerivation {
       pname = "haskdeep";
       version = "0.2.0.0";
       sha256 = "1kfrnhcx4805aimb16ji5s9hpyfc113y8m3ajq2wws7phy401r5l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec attoparsec-conduit base16-bytestring cereal conduit
         crypto-api crypto-conduit cryptohash cryptohash-cryptoapi
         filesystem-conduit optparse-applicative regex-tdfa regex-tdfa-text
         system-fileio system-filepath text time
       ];
       homepage = "https://github.com/maurotrb/haskdeep";
       description = "Computes and audits file hashes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskdogs" = callPackage
    ({ mkDerivation, Cabal, filepath, HSH }:
     mkDerivation {
       pname = "haskdogs";
       version = "0.3.2";
       sha256 = "0vl3c66ki9j9ncs2rapdn80kbfk0l3y97qwfraqlnjycdl10sm6r";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath HSH ];
       homepage = "http://github.com/ierton/haskdogs";
       description = "Generate ctags file for haskell project directory and it's deps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskeem" = callPackage
    ({ mkDerivation, haskeline, mtl, network, parsec, random }:
     mkDerivation {
       pname = "haskeem";
       version = "0.7.16";
       sha256 = "0fmglaiq2axpb9f4yyk53fpppc1ysqglqgjxhy78yl3r8mik836n";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskeline mtl network parsec random ];
       homepage = "http://www.korgwal.com/haskeem/";
       description = "A small scheme interpreter";
       license = "GPL";
     }) {};

  "haskeline" = callPackage
    ({ mkDerivation, filepath, terminfo, transformers, utf8String }:
     mkDerivation {
       pname = "haskeline";
       version = "0.7.1.3";
       sha256 = "1bwyfn7y9mi18g7zxz8wxjkld51azlfbxypxbiqdinpm2fdl63mi";
       buildDepends = [ filepath terminfo transformers utf8String ];
       configureFlags = "-fterminfo";
       homepage = "http://trac.haskell.org/haskeline";
       description = "A command-line interface for user input, written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskeline-class" = callPackage
    ({ mkDerivation, haskeline, mtl }:
     mkDerivation {
       pname = "haskeline-class";
       version = "0.6.2";
       sha256 = "0xgdq2xgw2ccyfzkj5n36s5n6km5l947d2iy4y1qms8kbc05zmfl";
       buildDepends = [ haskeline mtl ];
       homepage = "http://community.haskell.org/~aslatter/code/haskeline-class";
       description = "Class interface for working with Haskeline";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-aliyun" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, basic-prelude
     , blaze-builder, case-insensitive, conduit, Crypto, data-default
     , http-conduit, http-types, lifted-base, monad-control, resourcet
     , safe, system-filepath, text, time, transformers
     , transformers-base, vector, xml2json
     }:
     mkDerivation {
       pname = "haskell-aliyun";
       version = "0.1.0.0";
       sha256 = "1id1l7arf3yq9mym6ds58k5wins57k71v8fgzyhxsg81657vh74a";
       buildDepends = [
         aeson base64-bytestring basic-prelude blaze-builder
         case-insensitive conduit Crypto data-default http-conduit
         http-types lifted-base monad-control resourcet safe system-filepath
         text time transformers transformers-base vector xml2json
       ];
       homepage = "https://github.com/yihuang/haskell-aliyun/";
       description = "haskell client of aliyun service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-awk" = callPackage
    ({ mkDerivation, doctest, easy-file, exceptions, filepath
     , haskell-src-exts, hint, hspec, HUnit, MonadCatchIO-mtl, mtl
     , network, stringsearch, temporary, test-framework
     , test-framework-hunit, time, transformers
     }:
     mkDerivation {
       pname = "haskell-awk";
       version = "1.1";
       sha256 = "0ic21rfm35jp7476pm6ggkp4faqsn9rhvzb58b497ilgj9wzv1dp";
       editedCabalFile = "162nlnqs99bz6h0idgv372rp2jz87qv0kp39sbvy5z58ax6fk96x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         easy-file exceptions filepath haskell-src-exts hint
         MonadCatchIO-mtl mtl network stringsearch time transformers
       ];
       testDepends = [
         doctest easy-file exceptions filepath haskell-src-exts hint hspec
         HUnit mtl network stringsearch temporary test-framework
         test-framework-hunit time transformers
       ];
       description = "Transform text from the command-line using Haskell expressions";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "haskell-bcrypt" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskell-bcrypt";
       version = "0.3.1";
       sha256 = "1w8crppmm02qw03n59s7dnqfhmqwmd44sj8qm38bf90fabl1wa7d";
       homepage = "http://www.github.com/zbskii/haskell-bcrypt";
       description = "A bcrypt implementation for haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskell-brainfuck" = callPackage
    ({ mkDerivation, mtl, parsec, QuickCheck, tasty, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "haskell-brainfuck";
       version = "0.1.0.1";
       sha256 = "12yhnlcif0jj9pmi3a098f1swvnww45rg2rpn6g82bkjzmd4sjr8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       testDepends = [ mtl QuickCheck tasty tasty-quickcheck tasty-th ];
       description = "BrainFuck interpreter";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskell-cnc" = callPackage
    ({ mkDerivation, extensible-exceptions, HSH, HUnit, MissingH, mtl
     , random, time
     }:
     mkDerivation {
       pname = "haskell-cnc";
       version = "0.1.3.200";
       sha256 = "0x1kjdxbayq6z85w9fw6c4mpixzl60332wxgx4nh0ih9235jfdhd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions HSH HUnit MissingH mtl random time
       ];
       homepage = "http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/";
       description = "Library for parallel programming in the Intel Concurrent Collections paradigm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-coffee" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskell-coffee";
       version = "0.1.0.1";
       sha256 = "0g95vhqga7hq6w6x993d29wpphcqidmm0vzni93blqka7yfc7ybb";
       description = "Simple CoffeeScript API";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "haskell-compression" = callPackage
    ({ mkDerivation, bimap, boolean-list }:
     mkDerivation {
       pname = "haskell-compression";
       version = "0.1.1";
       sha256 = "0d0rfkl6ladsl0s033ny390nk5qkiwddg84di0d8hgxblqsxj11m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bimap boolean-list ];
       homepage = "codekinder.com";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-course-preludes" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "haskell-course-preludes";
       version = "0.0.0.4";
       sha256 = "1r0vhaxcsszrcqnw70gz8xpfrqddmxf9kpka63gix1bjic4alzjn";
       buildDepends = [ deepseq ];
       description = "Small modules for a Haskell course in which Haskell is taught by implementing Prelude functionality";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskell-docs" = callPackage
    ({ mkDerivation, aeson, Cabal, filepath, ghc-paths, haddock
     , monad-loops, text, unordered-containers
     }:
     mkDerivation {
       pname = "haskell-docs";
       version = "4.2.2";
       sha256 = "0w52kzwjzd5jl8v55rjy5550cy2fcyj9j5b7b33vbwjyh06gfrk1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson Cabal filepath ghc-paths haddock monad-loops text
         unordered-containers
       ];
       homepage = "http://github.com/chrisdone/haskell-docs";
       description = "A program to find and display the docs and type of a name";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-formatter" = callPackage
    ({ mkDerivation, directory-tree, doctest, filemanip, filepath
     , haskell-src-exts, hlint, optparse-applicative, scientific, tasty
     , tasty-hunit, text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "haskell-formatter";
       version = "0.1.0";
       sha256 = "1qdn77k4pj3dyv2c1px7jv64x4rzgz4wqc1i94fsl9z63pb0xrv7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath haskell-src-exts optparse-applicative scientific text
         unordered-containers yaml
       ];
       testDepends = [
         directory-tree doctest filemanip filepath hlint tasty tasty-hunit
       ];
       homepage = "https://github.com/evolutics/haskell-formatter";
       description = "Haskell source code formatter";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "haskell-ftp" = callPackage
    ({ mkDerivation, basic-prelude, case-insensitive, conduit
     , lifted-base, monad-control, network, network-conduit
     , process-conduit, system-filepath, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "haskell-ftp";
       version = "0.1.0.1";
       sha256 = "0736kh5q63qgvq23k5w06ds9538cwymk64i5wdycxh35lz64qaip";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         basic-prelude case-insensitive conduit lifted-base monad-control
         network network-conduit process-conduit system-filepath text
         transformers transformers-base
       ];
       homepage = "https://github.com/yihuang/haskell-ftp";
       description = "A Haskell ftp server with configurable backend";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-generate" = callPackage
    ({ mkDerivation, doctest, filepath, haskell-src-exts, transformers
     }:
     mkDerivation {
       pname = "haskell-generate";
       version = "0.2.2";
       sha256 = "1wdfs28p195szg6jxq0qbyj4jdbqnsp9frgjnp25mzf14y9i1yid";
       buildDepends = [ haskell-src-exts transformers ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/bennofs/haskell-generate/";
       description = "haskell-generate";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-in-space" = callPackage
    ({ mkDerivation, HGL, random }:
     mkDerivation {
       pname = "haskell-in-space";
       version = "0.1.1";
       sha256 = "1rcz5s3xa0f9yalyqb540l47bzql8p18y2mmax1zr92m7sh7m274";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HGL random ];
       homepage = "http://www.informatik.uni-bremen.de/~cxl/lehre/pi3.ws01/asteroids/";
       description = "'Asteroids' arcade games";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-lexer" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskell-lexer";
       version = "1.0";
       sha256 = "11jv30msg4rym73lk6j21ky2510c3av8qxk5p4z63j4m283w9l46";
       description = "A fully compliant Haskell 98 lexer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-modbus" = callPackage
    ({ mkDerivation, cereal, hspec }:
     mkDerivation {
       pname = "haskell-modbus";
       version = "0.3.2";
       sha256 = "08bcw7g84509rak9xqn2g4pr1mk3a2clikgfdiafrsr7lff16gyf";
       buildDepends = [ cereal ];
       testDepends = [ cereal hspec ];
       homepage = "http://www.github.com/jhickner/haskell-modbus";
       description = "A cereal-based parser for the Modbus protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-mpi" = callPackage
    ({ mkDerivation, c2hs, cereal, extensible-exceptions, mpi }:
     mkDerivation {
       pname = "haskell-mpi";
       version = "1.2.1";
       sha256 = "1d3xlwz3sx1m7iyf67cfr1vsp3w4iz9mmqvmvdiblj4569hxblr5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cereal extensible-exceptions ];
       buildTools = [ c2hs ];
       extraLibraries = [ mpi ];
       homepage = "http://github.com/bjpop/haskell-mpi";
       description = "Distributed parallel programming in Haskell using MPI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-names" = callPackage
    ({ mkDerivation, aeson, Cabal, data-lens-light, filemanip, filepath
     , haskell-packages, haskell-src-exts, hse-cpp, mtl, pretty-show
     , tagged, tasty, tasty-golden, transformers, traverse-with-class
     , type-eq, uniplate, utf8-string
     }:
     mkDerivation {
       pname = "haskell-names";
       version = "0.5.0";
       sha256 = "07fwdnhiqz6w323iw4xspar8m6sc6mv85i5f2vzbb5y8mrv352zr";
       buildDepends = [
         aeson Cabal data-lens-light filepath haskell-packages
         haskell-src-exts hse-cpp mtl tagged transformers
         traverse-with-class type-eq uniplate
       ];
       testDepends = [
         aeson Cabal filemanip filepath haskell-packages haskell-src-exts
         hse-cpp mtl pretty-show tagged tasty tasty-golden
         traverse-with-class uniplate utf8-string
       ];
       homepage = "http://documentup.com/haskell-suite/haskell-names";
       description = "Name resolution library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-neo4j-client" = callPackage
    ({ mkDerivation, aeson, Cabal, data-default, hashable, HTTP
     , http-conduit, http-types, HUnit, lifted-base, monad-control, mtl
     , QuickCheck, resourcet, scientific, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, text, transformers, transformers-base
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "haskell-neo4j-client";
       version = "0.3.0.9";
       sha256 = "1qi7azm0j4r310dhyh2xhchw78brkagkig1wdjz9l8wazw0niqzn";
       buildDepends = [
         aeson data-default hashable HTTP http-conduit http-types
         lifted-base monad-control mtl resourcet scientific text
         transformers transformers-base unordered-containers vector
       ];
       testDepends = [
         aeson Cabal data-default hashable HTTP http-conduit http-types
         HUnit lifted-base monad-control mtl QuickCheck resourcet scientific
         test-framework test-framework-hunit test-framework-quickcheck2
         test-framework-th text transformers transformers-base
         unordered-containers vector
       ];
       homepage = "https://github.com/asilvestre/haskell-neo4j-rest-client";
       description = "A Haskell neo4j client";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskell-openflow" = callPackage
    ({ mkDerivation, cereal, network, network-info }:
     mkDerivation {
       pname = "haskell-openflow";
       version = "0.0.0.1";
       sha256 = "1zrzkvw4i7jaz74g63k1yj1v2i9lsxgr8zj2b6p3srag1dwgnmkd";
       buildDepends = [ cereal network network-info ];
       homepage = "https://github.com/brooksbp/haskell-openflow";
       description = "OpenFlow protocol in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-packages" = callPackage
    ({ mkDerivation, aeson, Cabal, deepseq, filepath, haskell-src-exts
     , hse-cpp, mtl, optparse-applicative, tagged, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "haskell-packages";
       version = "0.2.4.3";
       sha256 = "0s1z5zzl53nmjnrlf1czri634h8fksbgkqvvz8hpwa60wsaf4dxn";
       buildDepends = [
         aeson Cabal deepseq filepath haskell-src-exts hse-cpp mtl
         optparse-applicative tagged transformers transformers-compat
       ];
       homepage = "http://documentup.com/haskell-suite/haskell-packages";
       description = "Haskell suite library for package management and integration with Cabal";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskell-pdf-presenter" = callPackage
    ({ mkDerivation, cairo, filepath, glib, gtk, poppler, time, zlib }:
     mkDerivation {
       pname = "haskell-pdf-presenter";
       version = "0.2.5";
       sha256 = "11y3n7ldnlx8vq2qb42kn8fg6ikq42x28bm46ivydx7h3z0zf5s3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo filepath glib gtk poppler time zlib ];
       homepage = "http://michaeldadams.org/projects/haskell-pdf-presenter/";
       description = "Tool for presenting PDF-based presentations";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "haskell-platform-test" = callPackage
    ({ mkDerivation, alex, Cabal, cgi, deepseq, extensible-exceptions
     , fgl, filepath, GLUT, happy, haskell-src, html, HTTP, HUnit, mtl
     , network, OpenGL, parallel, parsec, QuickCheck, random, regex-base
     , regex-compat, regex-posix, stm, syb, time, xhtml, zlib
     }:
     mkDerivation {
       pname = "haskell-platform-test";
       version = "2010.2.0.0";
       sha256 = "0ki6mppxk9a6lm0miagr4mpsbjx66gizc3qxl5vfp7wvbc977bwk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal cgi deepseq extensible-exceptions fgl filepath GLUT
         haskell-src html HTTP HUnit mtl network OpenGL parallel parsec
         QuickCheck random regex-base regex-compat regex-posix stm syb time
         xhtml zlib
       ];
       buildTools = [ alex happy ];
       homepage = "http://code.haskell.org/~dons/code/haskell-platform-test";
       description = "A test system for the Haskell Platform environment";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-plot" = callPackage
    ({ mkDerivation, Chart, Chart-cairo, Chart-gtk, colour
     , data-default, lens, math-functions, vector
     }:
     mkDerivation {
       pname = "haskell-plot";
       version = "0.1.0.0";
       sha256 = "0dwa2kz3sbnhc99kzhspf4hhid9q0c8irq8m9vr95l9kbq45avpi";
       buildDepends = [
         Chart Chart-cairo Chart-gtk colour data-default lens math-functions
         vector
       ];
       homepage = "https://github.com/kaizhang/haskell-plot";
       description = "A library for generating 2D plots painlessly";
       license = "GPL";
     }) {};

  "haskell-qrencode" = callPackage
    ({ mkDerivation, qrencode }:
     mkDerivation {
       pname = "haskell-qrencode";
       version = "1.0.4";
       sha256 = "1cq6fpz4vsx1kfnxnxnqz0pi5nzfg86s76vd0hcqvyqxnqbcd8hj";
       extraLibraries = [ qrencode ];
       homepage = "https://github.com/jamessanders/haskell-qrencode";
       description = "Haskell bindings for libqrencode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-reflect" = callPackage
    ({ mkDerivation, hint, MonadCatchIO-mtl, mtl, parsec, transformers
     }:
     mkDerivation {
       pname = "haskell-reflect";
       version = "0.9";
       sha256 = "116vs8p9j0py3rxh0m53nanwsa99ga0lg9z3avn5r0clmpak9zyn";
       buildDepends = [ hint MonadCatchIO-mtl mtl parsec transformers ];
       description = "Reflect Haskell types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskell-spacegoo" = callPackage
    ({ mkDerivation, aeson, conduit, mtl, network-conduit, pretty-show
     , text, vector, vector-space
     }:
     mkDerivation {
       pname = "haskell-spacegoo";
       version = "0.2";
       sha256 = "1qa9nh0c38az7ssssziz0hdbdd8i78sp6yv00393v9mrycj4f2qi";
       buildDepends = [
         aeson conduit mtl network-conduit pretty-show text vector
         vector-space
       ];
       description = "Client API for Rocket Scissor Spacegoo";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskell-src" = callPackage
    ({ mkDerivation, happy, syb }:
     mkDerivation {
       pname = "haskell-src";
       version = "1.0.1.6";
       sha256 = "1vscvbsly7k0zqb7fi6bm38dfacyl8qgmv0h25fqkn95c0v5dif7";
       buildDepends = [ syb ];
       buildTools = [ happy ];
       description = "Support for manipulating Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-src-exts" = callPackage
    ({ mkDerivation, cpphs, filepath, happy, mtl, smallcheck, syb
     , tasty, tasty-golden, tasty-smallcheck
     }:
     mkDerivation {
       pname = "haskell-src-exts";
       version = "1.16.0.1";
       sha256 = "1h8gjw5g92rvvzadqzpscg73x7ajvs1wlphrh27afim3scdd8frz";
       buildDepends = [ cpphs ];
       testDepends = [
         filepath mtl smallcheck syb tasty tasty-golden tasty-smallcheck
       ];
       buildTools = [ happy ];
       homepage = "https://github.com/haskell-suite/haskell-src-exts";
       description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-src-exts-qq" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, syb }:
     mkDerivation {
       pname = "haskell-src-exts-qq";
       version = "0.6.1";
       sha256 = "0cblv8fk369236szwzwmyaxaa8fkwia5r50zz5ghfbglb2xvwsmn";
       buildDepends = [ haskell-src-exts haskell-src-meta syb ];
       description = "A quasiquoter for haskell-src-exts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-src-meta" = callPackage
    ({ mkDerivation, haskell-src-exts, syb, th-orphans, uniplate }:
     mkDerivation {
       pname = "haskell-src-meta";
       version = "0.6.0.8";
       sha256 = "1fv228n9zbqa52aif7pkylrqgz2n63xhxly9f828i18xf02rmxnk";
       buildDepends = [ haskell-src-exts syb th-orphans uniplate ];
       description = "Parse source to template-haskell abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-src-meta-mwotton" = callPackage
    ({ mkDerivation, haskell-src-exts, syb }:
     mkDerivation {
       pname = "haskell-src-meta-mwotton";
       version = "0.1.0";
       sha256 = "04f0p3jxmvw1kqygvxihdr4dirapi6bdv2w213c2s771xbnx88nn";
       buildDepends = [ haskell-src-exts syb ];
       description = "Parse source to template-haskell abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-token-utils" = callPackage
    ({ mkDerivation, Diff, dual-tree, ghc-mod, ghc-paths, ghc-syb-utils
     , haskell-src-exts, hspec, HUnit, monoid-extras, mtl, QuickCheck
     , rosezipper, semigroups, syb, uniplate
     }:
     mkDerivation {
       pname = "haskell-token-utils";
       version = "0.0.0.6";
       sha256 = "14nzlw9vqnp70xcwan6mjsr318p2sky5nsyqxw5iivggy7qspp9r";
       buildDepends = [
         dual-tree ghc-paths ghc-syb-utils haskell-src-exts monoid-extras
         mtl rosezipper semigroups syb
       ];
       testDepends = [
         Diff dual-tree ghc-mod ghc-paths ghc-syb-utils haskell-src-exts
         hspec HUnit monoid-extras mtl QuickCheck rosezipper semigroups syb
         uniplate
       ];
       homepage = "https://github.com/alanz/haskell-token-utils";
       description = "Utilities to tie up tokens to an AST";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "haskell-type-exts" = callPackage
    ({ mkDerivation, haskell-src-exts }:
     mkDerivation {
       pname = "haskell-type-exts";
       version = "0.1.0";
       sha256 = "051lsg9j3dgkr2akannfaddawdhybvsnm6x6xafmdmwn31v73z98";
       buildDepends = [ haskell-src-exts ];
       homepage = "http://code.haskell.org/haskell-type-exts";
       description = "A type checker for Haskell/haskell-src-exts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-typescript" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskell-typescript";
       version = "0.1.0.0";
       sha256 = "0fv533nac6dlawgffr1kvn4xpv63hdcb4wgyqbbg2s6dg9a2hw38";
       description = "Simple TypeScript API";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "haskell-tyrant" = callPackage
    ({ mkDerivation, binary, network }:
     mkDerivation {
       pname = "haskell-tyrant";
       version = "0.4";
       sha256 = "1pqh1v0klpi8iq882l5gk0fsf87kabq6rw1wjwkiq6fvw8cc1l97";
       buildDepends = [ binary network ];
       homepage = "https://github.com/PeterScott/haskell-tyrant";
       description = "Haskell implementation of the Tokyo Tyrant binary protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell-updater" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "haskell-updater";
       version = "1.2.3";
       sha256 = "1mssan40pp22751h1hvrib17w8czqlaqwgs2wzkc1pbzh4x73syf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://haskell.org/haskellwiki/Gentoo#haskell-updater";
       description = "Rebuild Haskell dependencies in Gentoo";
       license = "GPL";
     }) {};

  "haskell-xmpp" = callPackage
    ({ mkDerivation, HaXml, html, mtl, network, polyparse, random
     , regex-compat, stm, utf8-string
     }:
     mkDerivation {
       pname = "haskell-xmpp";
       version = "1.0.2";
       sha256 = "1z4x4mn0vry8mwq6ily668ignmf4s9m92fmga15dr83y7aq5wd59";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         HaXml html mtl network polyparse random regex-compat stm
         utf8-string
       ];
       homepage = "http://patch-tag.com/r/adept/haskell-xmpp/home";
       description = "Haskell XMPP (eXtensible Message Passing Protocol, a.k.a. Jabber) library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell2010" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskell2010";
       version = "1.1.2.0";
       sha256 = "1s0avb08b5iwaym42jz783mk1az9kmjf3zmhfag0kzdw10qcnz4m";
       homepage = "http://www.haskell.org/onlinereport/haskell2010/";
       description = "Compatibility with Haskell 2010";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell98" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "haskell98";
       version = "2.0.0.3";
       sha256 = "1450bgkn7gasj6cmkxn4afs828fc9slrrp2lqsqs3jlryr94cpdx";
       buildDepends = [ time ];
       homepage = "http://www.haskell.org/definition/";
       description = "Compatibility with Haskell 98";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskell98libraries" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "haskell98libraries";
       version = "2.0.0.2";
       sha256 = "1dcjwkvggvwrs8lv2pcxcz2kcz179nbca9q16mbk90qnznysr8i8";
       buildDepends = [ time ];
       homepage = "http://www.haskell.org/definition/";
       description = "Compatibility with Haskell 98";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb" = callPackage
    ({ mkDerivation, mtl, time }:
     mkDerivation {
       pname = "haskelldb";
       version = "2.2.4";
       sha256 = "0f8c9bz25wzsc65czv0chxk93w947824axl7p821fljlrykcm45y";
       buildDepends = [ mtl time ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "A library of combinators for generating and executing SQL statements";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-connect-hdbc" = callPackage
    ({ mkDerivation, haskelldb, HDBC }:
     mkDerivation {
       pname = "haskelldb-connect-hdbc";
       version = "0.1.0.0";
       sha256 = "1l9ifff33xbgdr6fahnzz00nb7va2r0i3pncjd1j8bbnyya1w2kl";
       buildDepends = [ haskelldb HDBC ];
       homepage = "http://twitter.com/khibino";
       description = "Bracketed HDBC session for HaskellDB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-connect-hdbc-catchio-mtl" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-connect-hdbc, HDBC
     , MonadCatchIO-mtl, mtl
     }:
     mkDerivation {
       pname = "haskelldb-connect-hdbc-catchio-mtl";
       version = "0.1.0.0";
       sha256 = "1ssg96r7cphakis5c494m5lc3m5ksn1w03k554p0qx2kl1g885xw";
       buildDepends = [
         haskelldb haskelldb-connect-hdbc HDBC MonadCatchIO-mtl mtl
       ];
       homepage = "http://twitter.com/khibino";
       description = "Bracketed HaskellDB HDBC session using MonadCatchIO-mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-connect-hdbc-catchio-tf" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-connect-hdbc, HDBC
     , MonadCatchIO-transformers, transformers
     }:
     mkDerivation {
       pname = "haskelldb-connect-hdbc-catchio-tf";
       version = "0.1.0.0";
       sha256 = "16qab88ryli9jbinw9frhhzl0ph09dinzx40x9cr9a3db7wvphw4";
       buildDepends = [
         haskelldb haskelldb-connect-hdbc HDBC MonadCatchIO-transformers
         transformers
       ];
       homepage = "http://twitter.com/khibino";
       description = "Bracketed HaskellDB HDBC session using MonadCatchIO-transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-connect-hdbc-catchio-transformers" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-connect-hdbc, HDBC
     , MonadCatchIO-transformers, transformers
     }:
     mkDerivation {
       pname = "haskelldb-connect-hdbc-catchio-transformers";
       version = "0.1.0.0";
       sha256 = "0hbb6klc4azz6f5wi39l5736xq0b7wgja35fk9vmmn0lnf6iv5j7";
       buildDepends = [
         haskelldb haskelldb-connect-hdbc HDBC MonadCatchIO-transformers
         transformers
       ];
       homepage = "http://twitter.com/khibino";
       description = "Bracketed HaskellDB HDBC session using MonadCatchIO-transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-connect-hdbc-lifted" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-connect-hdbc, HDBC
     , lifted-base, monad-control, transformers-base
     }:
     mkDerivation {
       pname = "haskelldb-connect-hdbc-lifted";
       version = "0.1.0.0";
       sha256 = "1ysnha7bmrd3accrnbswr17nv6j4pj1mbshcphjkhdffcvxb82wa";
       buildDepends = [
         haskelldb haskelldb-connect-hdbc HDBC lifted-base monad-control
         transformers-base
       ];
       homepage = "http://twitter.com/khibino";
       description = "Bracketed HaskellDB HDBC session using lifted-base";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-dynamic" = callPackage
    ({ mkDerivation, haskelldb, mtl, plugins }:
     mkDerivation {
       pname = "haskelldb-dynamic";
       version = "1.0.0";
       sha256 = "0wdiywxjara2fwb1d548f9s0vcjxm1c38v4s05xqm5bz141l7a6a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb mtl plugins ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the dynamically loaded drivers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-flat" = callPackage
    ({ mkDerivation, haskelldb, mtl }:
     mkDerivation {
       pname = "haskelldb-flat";
       version = "1.0.1";
       sha256 = "0f75am17zfpbxhg951gnjqmdfgi1q7byhw1xv1rz4k36kcg623x1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "An experimental HaskellDB back-end in pure Haskell (no SQL)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hdbc" = callPackage
    ({ mkDerivation, convertible, haskelldb, HDBC, mtl }:
     mkDerivation {
       pname = "haskelldb-hdbc";
       version = "2.2.2";
       sha256 = "06vzzya6k1l74bm5ky7cbn6ch1wx5j5phnhi49bw17y3q632vd3f";
       buildDepends = [ convertible haskelldb HDBC mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hdbc-mysql" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hdbc, HDBC, HDBC-mysql, mtl
     }:
     mkDerivation {
       pname = "haskelldb-hdbc-mysql";
       version = "0.1.1";
       sha256 = "0nn8jjrsi62xqws00izh3qi2shlxa58l37q91x1xnd9fig7j0ai2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hdbc HDBC HDBC-mysql mtl ];
       description = "HaskellDB support for the HDBC MySQL driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hdbc-odbc" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hdbc, HDBC, HDBC-odbc, mtl }:
     mkDerivation {
       pname = "haskelldb-hdbc-odbc";
       version = "2.1.2";
       sha256 = "1y87iiil6k9ycsni70kvfcq50fiws8aqnhmk4018f6k6q1bx7q6p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hdbc HDBC HDBC-odbc mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HDBC ODBC driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hdbc-postgresql" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hdbc, HDBC, HDBC-postgresql
     , mtl, postgresql
     }:
     mkDerivation {
       pname = "haskelldb-hdbc-postgresql";
       version = "2.1.2";
       sha256 = "08cv3y22zvf0pf1cs57vrma3vp3b5fzzs6nsnvcnfnzsvacanh7g";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         haskelldb haskelldb-hdbc HDBC HDBC-postgresql mtl
       ];
       extraLibraries = [ postgresql ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HDBC PostgreSQL driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hdbc-sqlite3" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hdbc, HDBC, HDBC-sqlite3, mtl
     }:
     mkDerivation {
       pname = "haskelldb-hdbc-sqlite3";
       version = "2.1.2";
       sha256 = "0qdp2lzhk8ywb9pmppvvmwqkaagvrnyjiglahy6mb7rdfq89bas6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hdbc HDBC HDBC-sqlite3 mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HDBC SQLite driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hsql" = callPackage
    ({ mkDerivation, haskelldb, hsql, mtl }:
     mkDerivation {
       pname = "haskelldb-hsql";
       version = "1.0.0";
       sha256 = "0j1aqix21pqcsw7skl897pd1ir6hg836g4zb2h5338h4gih6blx0";
       buildDepends = [ haskelldb hsql mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for HSQL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hsql-mysql" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hsql, hsql, hsql-mysql, mtl
     }:
     mkDerivation {
       pname = "haskelldb-hsql-mysql";
       version = "1.0.0";
       sha256 = "09rlrv9jb2hw7jypglfqhgfx3b0bcp68iq2wk4jfqw74m4d34xkm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hsql hsql hsql-mysql mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HSQL MySQL driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hsql-odbc" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hsql, hsql, hsql-odbc, mtl }:
     mkDerivation {
       pname = "haskelldb-hsql-odbc";
       version = "1.0.0";
       sha256 = "18r7b4x43729c9l34gvbhgw2fwgq7llcb6cfwcp077f9ia0kgn6a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hsql hsql hsql-odbc mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HSQL ODBC driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hsql-oracle" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hsql, hsql, hsql-oracle, mtl
     }:
     mkDerivation {
       pname = "haskelldb-hsql-oracle";
       version = "1.0.0";
       sha256 = "0j26gm9bibnj2jl5fs3sf2m8b5gl05brf55bzxnxa1cb78dgbpx9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hsql hsql hsql-oracle mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HSQL Oracle driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hsql-postgresql" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hsql, hsql, hsql-postgresql
     , mtl
     }:
     mkDerivation {
       pname = "haskelldb-hsql-postgresql";
       version = "1.0.0";
       sha256 = "1d1vgw9q95h864gfv0n2gmdvnvkxjg4pdjmfpfj899xx1s0a0vsv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         haskelldb haskelldb-hsql hsql hsql-postgresql mtl
       ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HSQL PostgreSQL driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hsql-sqlite" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hsql, hsql, hsql-sqlite, mtl
     }:
     mkDerivation {
       pname = "haskelldb-hsql-sqlite";
       version = "1.0.0";
       sha256 = "0hs8ympicys4p6lpfcvny3c183v4s25lk990yb4fzrpv0hy3bhhw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hsql hsql hsql-sqlite mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HSQL SQLite driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-hsql-sqlite3" = callPackage
    ({ mkDerivation, haskelldb, haskelldb-hsql, hsql, hsql-sqlite3, mtl
     }:
     mkDerivation {
       pname = "haskelldb-hsql-sqlite3";
       version = "1.0.0";
       sha256 = "11xlr2f7203wxg17696yjqgyzckavqjazc9brmdqpbrnplaqdrc5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskelldb haskelldb-hsql hsql hsql-sqlite3 mtl ];
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for the HSQL SQLite3 driver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-th" = callPackage
    ({ mkDerivation, haskelldb, mtl }:
     mkDerivation {
       pname = "haskelldb-th";
       version = "2.1.0";
       sha256 = "12whvz0qy9lqk1frfl5px9lhr1nwy519vj2z9c3g8nqjzscwzayb";
       buildDepends = [ haskelldb mtl ];
       homepage = "http://trac.haskell.org/haskelldb-th";
       description = "Template Haskell utilities for HaskellDB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskelldb-wx" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskelldb-wx";
       version = "1.0.0";
       sha256 = "01652m0bym80400navqlpdv5n0gfgnfzd1d0857f3kd13ksqk2hy";
       homepage = "https://github.com/m4dc4p/haskelldb";
       description = "HaskellDB support for WXHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskellscrabble" = callPackage
    ({ mkDerivation, errors, filepath, HUnit, mtl, parsec, QuickCheck
     , random, safe, semigroups, split, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "haskellscrabble";
       version = "0.1.0.2";
       sha256 = "1f0vdkgjyqwk1lkbn86gbnzbv1r021l0808aw57plb9jmmpn0m4s";
       buildDepends = [
         errors mtl parsec QuickCheck random safe semigroups split
         transformers unordered-containers
       ];
       testDepends = [
         filepath HUnit QuickCheck random semigroups test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://www.github.com/happy0/haskellscrabble";
       description = "A scrabble library capturing the core game logic of scrabble";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "haskelm" = callPackage
    ({ mkDerivation, aeson, binary, Elm, haskell-src-exts
     , haskell-src-meta, mtl, parsec, shakespeare, split, temporary
     , text, th-desugar, unordered-containers, vector
     }:
     mkDerivation {
       pname = "haskelm";
       version = "0.1.12.0";
       sha256 = "1bzp79fcq6gxy8pvspw4q71iakzvrbdwr3vjahd698ymfbj5ji8y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson binary haskell-src-exts haskell-src-meta mtl parsec split
         temporary text th-desugar unordered-containers vector
       ];
       testDepends = [
         aeson binary Elm haskell-src-exts haskell-src-meta mtl parsec
         shakespeare split temporary text th-desugar unordered-containers
         vector
       ];
       homepage = "http://github.com/JoeyEremondi/haskelm";
       description = "Elm to Haskell translation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskgame" = callPackage
    ({ mkDerivation, SDL, SDL-ttf }:
     mkDerivation {
       pname = "haskgame";
       version = "0.0.6";
       sha256 = "061dhk7d9d8mnb1rs7077q383sqlby8s31ips8jjadkkhyxi5lvz";
       buildDepends = [ SDL SDL-ttf ];
       homepage = "http://haskell.org/haskellwiki/HaskGame";
       description = "Haskell game library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskheap" = callPackage
    ({ mkDerivation, aeson, http-conduit, http-types, network, text
     , time, unordered-containers
     }:
     mkDerivation {
       pname = "haskheap";
       version = "0.1.2";
       sha256 = "1c2fgqq2i3s2v0xi04y8y6li41ilvi50zlf2ba843my9s3i8njqr";
       buildDepends = [
         aeson http-conduit http-types network text time
         unordered-containers
       ];
       homepage = "https://github.com/Raynes/haskheap";
       description = "Haskell bindings to refheap";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskhol-core" = callPackage
    ({ mkDerivation, deepseq, parsec }:
     mkDerivation {
       pname = "haskhol-core";
       version = "1.0.0";
       sha256 = "0akcs3jlf1bqxck9jb1vc654fi2kcn71ckqymsqwpl6bj7w057vc";
       buildDepends = [ deepseq parsec ];
       homepage = "haskhol.org";
       description = "The core logical system of HaskHOL, an EDSL for HOL theorem proving";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskintex" = callPackage
    ({ mkDerivation, binary, filepath, haskell-src-exts, HaTeX, hint
     , parsec, text, transformers
     }:
     mkDerivation {
       pname = "haskintex";
       version = "0.5.0.2";
       sha256 = "1qfqslr8pxks3qmfarmscgvc0q8zn72prqyk5xhmfvkf6q35pmfn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary filepath haskell-src-exts HaTeX hint parsec text
         transformers
       ];
       homepage = "http://daniel-diaz.github.io/projects/haskintex";
       description = "Haskell Evaluation inside of LaTeX code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haskmon" = callPackage
    ({ mkDerivation, aeson, http-streams, io-streams, time, vector }:
     mkDerivation {
       pname = "haskmon";
       version = "0.1.1.0";
       sha256 = "1xsp0jd7n5rbky4giy3dik2hcsnkzwlj2mdr8v3ahr17cqj3sm74";
       buildDepends = [ aeson http-streams io-streams time vector ];
       description = "A haskell wrapper for PokeAPI.co (www.pokeapi.co)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haskoin" = callPackage
    ({ mkDerivation, aeson, async, binary, byteable, cryptohash
     , deepseq, either, HUnit, json-rpc, mtl, pbkdf, QuickCheck, split
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text
     }:
     mkDerivation {
       pname = "haskoin";
       version = "0.1.0.2";
       sha256 = "0l3h2wvi56k0dcfjambqyjrd45hb7bj0brp8nzrrcfn7fbpyjg8c";
       buildDepends = [
         aeson binary byteable cryptohash deepseq either json-rpc mtl pbkdf
         split text
       ];
       testDepends = [
         aeson async binary byteable cryptohash deepseq either HUnit
         json-rpc mtl pbkdf QuickCheck split test-framework
         test-framework-hunit test-framework-quickcheck2 text
       ];
       homepage = "http://github.com/haskoin/haskoin";
       description = "Implementation of the Bitcoin protocol";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "haskoin-crypto" = callPackage
    ({ mkDerivation, binary, byteable, cryptohash, haskoin-util, HUnit
     , mtl, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "haskoin-crypto";
       version = "0.0.1.1";
       sha256 = "00argpj3qkaj8dcxbd46xsi1abjgr394li6ygyvna55508r1hd79";
       buildDepends = [
         binary byteable cryptohash haskoin-util mtl QuickCheck
       ];
       testDepends = [
         binary byteable cryptohash haskoin-util HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/plaprade/haskoin-crypto";
       description = "Implementation of Bitcoin cryptographic primitives";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "haskoin-protocol" = callPackage
    ({ mkDerivation, binary, haskoin-crypto, haskoin-util, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "haskoin-protocol";
       version = "0.0.1.1";
       sha256 = "0r15csyylg5vd95z0spl5wkv6r8w7lpi983alsvlnkhv4dqnrg2v";
       buildDepends = [ binary haskoin-crypto haskoin-util QuickCheck ];
       testDepends = [
         binary haskoin-crypto haskoin-util HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/plaprade/haskoin-protocol";
       description = "Implementation of the Bitcoin network protocol messages";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "haskoin-script" = callPackage
    ({ mkDerivation, binary, haskoin-crypto, haskoin-protocol
     , haskoin-util, HUnit, mtl, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "haskoin-script";
       version = "0.0.1";
       sha256 = "18lw5hxwvj4ichw1k4a35hjih7h0hd24khvl4m0yf2cq12m2gl11";
       buildDepends = [
         binary haskoin-crypto haskoin-protocol haskoin-util mtl QuickCheck
       ];
       testDepends = [
         binary haskoin-crypto haskoin-protocol haskoin-util HUnit mtl
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/plaprade/haskoin-script";
       description = "Implementation of Bitcoin script parsing and evaluation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "haskoin-util" = callPackage
    ({ mkDerivation, binary, either, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "haskoin-util";
       version = "0.0.1.1";
       sha256 = "0hh3vavqsp8pafw4nrv9py1kqcc1yx52zr80xsqzqjlsxq04fgfw";
       buildDepends = [ binary either mtl QuickCheck ];
       testDepends = [
         binary either HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/plaprade/haskoin-util";
       description = "Utility functions for the Network.Haskoin project";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "haskoin-wallet" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, binary, conduit, either
     , haskoin-crypto, haskoin-protocol, haskoin-script, haskoin-util
     , HUnit, mtl, persistent, persistent-sqlite, persistent-template
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, unordered-containers
     , vector, yaml
     }:
     mkDerivation {
       pname = "haskoin-wallet";
       version = "0.0.1";
       sha256 = "18q110q93qc00mqzprs5wprzrl0jfw5fjpli73n99knqb127aq5s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty binary conduit either haskoin-crypto
         haskoin-protocol haskoin-script haskoin-util mtl persistent
         persistent-sqlite persistent-template QuickCheck text time
         unordered-containers vector yaml
       ];
       testDepends = [
         aeson aeson-pretty binary conduit either haskoin-crypto
         haskoin-protocol haskoin-script haskoin-util HUnit mtl persistent
         persistent-sqlite persistent-template QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text time
         unordered-containers vector yaml
       ];
       homepage = "http://github.com/plaprade/haskoin-wallet";
       description = "Implementation of a Bitcoin hierarchical deterministric wallet (BIP32)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "haskoon" = callPackage
    ({ mkDerivation, cgi, fastcgi, filepath, hslogger, hsp, hsx, MaybeT
     , MissingH, mtl, network, regex-posix, safe, utf8-string
     }:
     mkDerivation {
       pname = "haskoon";
       version = "0.3.1.1";
       sha256 = "1rf5w1mvpsiqim1h5hh6s2cxzh3c5gm1k3n6z4h2ryc1s7m2bl9l";
       buildDepends = [
         cgi fastcgi filepath hslogger hsp hsx MaybeT MissingH mtl network
         regex-posix safe utf8-string
       ];
       description = "Web Application Abstraction";
       license = "LGPL";
     }) {};

  "haskoon-httpspec" = callPackage
    ({ mkDerivation, bidispec, haskoon, hslogger, HTTP, httpspec, mtl
     , network
     }:
     mkDerivation {
       pname = "haskoon-httpspec";
       version = "0.5.0.1";
       sha256 = "059hywia5fa15j2dpbzvnvjzv55bzgivy3ddxcrdskd85zx7lx6z";
       buildDepends = [
         bidispec haskoon hslogger HTTP httpspec mtl network
       ];
       description = "Integrating HttpSpec with Haskoon";
       license = "LGPL";
     }) {};

  "haskoon-salvia" = callPackage
    ({ mkDerivation, cgi, fclabels, haskoon, hslogger, HTTP, monads-fd
     , mtl, network, salvia, salvia-protocol, transformers
     }:
     mkDerivation {
       pname = "haskoon-salvia";
       version = "0.4.0.2";
       sha256 = "0d0s0zd9gr3xbssyk62l7w507prjnyak81czhnd6fgbfqx82d6hk";
       buildDepends = [
         cgi fclabels haskoon hslogger HTTP monads-fd mtl network salvia
         salvia-protocol transformers
       ];
       description = "Integrating HttpSpec with Haskoon";
       license = "LGPL";
     }) {};

  "haskore" = callPackage
    ({ mkDerivation, data-accessor, event-list, haskell-src
     , markov-chain, midi, non-negative, parsec, random, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "haskore";
       version = "0.2.0.5";
       sha256 = "0zvr7hwxnv01g626617yv7f0vwpmyqvlwbyc6yhb2mrlfqwdgbd0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor event-list haskell-src markov-chain midi non-negative
         parsec random transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Haskore";
       description = "The Haskore Computer Music System";
       license = "GPL";
     }) {};

  "haskore-realtime" = callPackage
    ({ mkDerivation, data-accessor, event-list, haskore, midi
     , non-negative, transformers, utility-ht
     }:
     mkDerivation {
       pname = "haskore-realtime";
       version = "0.2";
       sha256 = "0fhlfivp44py93gjlqrp370cjkvi0g79p156vayylds128hgpi5f";
       buildDepends = [
         data-accessor event-list haskore midi non-negative transformers
         utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Haskore/";
       description = "Routines for realtime playback of Haskore songs";
       license = "GPL";
     }) {};

  "haskore-supercollider" = callPackage
    ({ mkDerivation, data-accessor, event-list, haskore
     , haskore-realtime, hosc, hsc3, non-negative, opensoundcontrol-ht
     , random, supercollider-ht, transformers, utility-ht
     }:
     mkDerivation {
       pname = "haskore-supercollider";
       version = "0.3";
       sha256 = "04rzbk1v8ay569npd8i1xv3aqx55jn8p6cvqpi6774afaxvb0qxy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor event-list haskore haskore-realtime hosc hsc3
         non-negative opensoundcontrol-ht random supercollider-ht
         transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/SuperCollider";
       description = "Haskore back-end for SuperCollider";
       license = "GPL";
     }) {};

  "haskore-synthesizer" = callPackage
    ({ mkDerivation, data-accessor, event-list, haskore, non-negative
     , numeric-prelude, random, synthesizer-core, utility-ht
     }:
     mkDerivation {
       pname = "haskore-synthesizer";
       version = "0.0.3.1";
       sha256 = "0bdfn8s7gj39i3rr3xvi9xchi8zczqimb5gnkg0225m2zcfgvmy8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor event-list haskore non-negative numeric-prelude
         random synthesizer-core utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Music rendering coded in Haskell";
       license = "GPL";
     }) {};

  "haskore-vintage" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "haskore-vintage";
       version = "0.2";
       sha256 = "1dpqs7xv3hvhla94v60q0fxfzgr4l3l69s7xc45rh712r9iws66n";
       homepage = "http://haskell.org/haskore/";
       description = "The February 2000 version of Haskore";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hasktags" = callPackage
    ({ mkDerivation, filepath, json, utf8-string }:
     mkDerivation {
       pname = "hasktags";
       version = "0.69.0";
       sha256 = "1bba6w5h5a5frc899cdlxcyshiqdni6lcqby618akr1917ih1qh8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath json utf8-string ];
       homepage = "http://github.com/MarcWeber/hasktags";
       description = "Produces ctags \"tags\" and etags \"TAGS\" files for Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haslo" = callPackage
    ({ mkDerivation, mtl, QuickCheck, time, wtk }:
     mkDerivation {
       pname = "haslo";
       version = "0.1.3";
       sha256 = "0iizdi98w4k9kdizg9xwm2aca6mnn30frp15f8kyak3i194sk3kl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl QuickCheck time wtk ];
       description = "Loan calculator engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hasloGUI" = callPackage
    ({ mkDerivation, convertible, gtk, haslo, lenses, mtl, QuickCheck
     , time, wtk, wtk-gtk
     }:
     mkDerivation {
       pname = "hasloGUI";
       version = "0.1";
       sha256 = "03avp9yn7ag1dc1wzk07sxkj3krqsrg3n44qcynxw9n1fmvk54lx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         convertible gtk haslo lenses mtl QuickCheck time wtk wtk-gtk
       ];
       description = "Loan calculator Gtk GUI. Based on haslo (Haskell Loan) library.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hasparql-client" = callPackage
    ({ mkDerivation, HTTP, monads-fd, network, xml }:
     mkDerivation {
       pname = "hasparql-client";
       version = "0.1";
       sha256 = "1ln0kdm40y6l8sncrjl0mj9bpd30ffg3msaxyd6fq520ypyws9pm";
       buildDepends = [ HTTP monads-fd network xml ];
       homepage = "https://github.com/lhpaladin/HaSparql-Client";
       description = "This package enables to write SPARQL queries to remote endpoints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haspell" = callPackage
    ({ mkDerivation, aspell }:
     mkDerivation {
       pname = "haspell";
       version = "1.1.0";
       sha256 = "08ihdjgjvr8mgxxw62xwymj1lyl33r6w3mhy9chlw7ijcsy44y21";
       extraLibraries = [ aspell ];
       homepage = "https://github.com/otters/haspell";
       description = "Haskell bindings to aspell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hasql" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, ex-pool, hasql-backend
     , hasql-postgres, HTF, list-t, loch-th, mmorph, monad-control
     , mtl-prelude, placeholders, safe, text, time, transformers
     , transformers-base, vector
     }:
     mkDerivation {
       pname = "hasql";
       version = "0.4.0";
       sha256 = "1y4fs0pa8kbgjdkwp47p03gizj878dyil32zyxhapharmvajhp37";
       buildDepends = [
         attoparsec base-prelude ex-pool hasql-backend list-t loch-th mmorph
         monad-control placeholders safe text time transformers
         transformers-base vector
       ];
       testDepends = [
         base-prelude hasql-backend hasql-postgres HTF mtl-prelude
       ];
       homepage = "https://github.com/nikita-volkov/hasql";
       description = "A minimalistic general high level API for relational databases";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hasql-backend" = callPackage
    ({ mkDerivation, base-prelude, list-t, text, vector }:
     mkDerivation {
       pname = "hasql-backend";
       version = "0.2.2";
       sha256 = "0zyzcdp5w9mf26ysb2p20hjw7153vs6gvz9pvb6frpv1dz58zbx0";
       buildDepends = [ base-prelude list-t text vector ];
       homepage = "https://github.com/nikita-volkov/hasql-backend";
       description = "API for backends of \"hasql\"";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hasql-postgres" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, either, hashable
     , hashtables, hasql, hasql-backend, HTF, list-t, loch-th, mmorph
     , mtl-prelude, placeholders, postgresql-binary, postgresql-libpq
     , QuickCheck, quickcheck-instances, SafeSemaphore, scientific
     , slave-thread, text, time, transformers, uuid, vector
     }:
     mkDerivation {
       pname = "hasql-postgres";
       version = "0.8.0";
       sha256 = "1d6gcd00fvk91hx0bf45srgkj7i86zpxr63cll3msdn1rwc993q0";
       buildDepends = [
         attoparsec base-prelude either hashable hashtables hasql-backend
         list-t loch-th mmorph placeholders postgresql-binary
         postgresql-libpq scientific text time transformers uuid vector
       ];
       testDepends = [
         attoparsec base-prelude either hashable hashtables hasql
         hasql-backend HTF list-t loch-th mmorph mtl-prelude placeholders
         postgresql-binary postgresql-libpq QuickCheck quickcheck-instances
         SafeSemaphore scientific slave-thread text time transformers uuid
         vector
       ];
       homepage = "https://github.com/nikita-volkov/hasql-postgres";
       description = "A \"PostgreSQL\" backend for the \"hasql\" library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hasql-postgres-options" = callPackage
    ({ mkDerivation, base-prelude, hasql-postgres, optparse-applicative
     }:
     mkDerivation {
       pname = "hasql-postgres-options";
       version = "0.1.1";
       sha256 = "185iy3cg9z99qd6545waglkh5lc0rw52cm26hd6926564vs60ifq";
       buildDepends = [
         base-prelude hasql-postgres optparse-applicative
       ];
       homepage = "https://github.com/nikita-volkov/hasql-postgres-options";
       description = "An \"optparse-applicative\" parser for \"hasql-postgres\"";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hastache" = callPackage
    ({ mkDerivation, blaze-builder, filepath, HUnit, ieee754, mtl, syb
     , text, transformers, utf8-string
     }:
     mkDerivation {
       pname = "hastache";
       version = "0.6.0";
       sha256 = "1z609mhsc875ba3k6mlmlqpmqlwgxpav2asnf83yzq1q7bfs0cxh";
       buildDepends = [
         blaze-builder filepath ieee754 mtl syb text transformers
         utf8-string
       ];
       testDepends = [ HUnit mtl syb text ];
       homepage = "http://github.com/lymar/hastache";
       description = "Haskell implementation of Mustache templates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hastache-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, hastache, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "hastache-aeson";
       version = "0.1.0.0";
       sha256 = "0b69ppgs0s8zjkrycz5iyd1wa92wr9wln3dvgzf736pbfhsgv2qi";
       buildDepends = [
         aeson attoparsec hastache text unordered-containers vector
       ];
       homepage = "https://github.com/proger/hastache-aeson";
       description = "render hastache templates using aeson values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haste" = callPackage
    ({ mkDerivation, curl, filepath, mtl }:
     mkDerivation {
       pname = "haste";
       version = "0.1.1";
       sha256 = "1vz36i74l1nnm34nn1rj3v8kprqa2piz3j5f58cccg2gvxl0abnj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ curl filepath mtl ];
       description = "A universal pastebin tool, written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haste-compiler" = callPackage
    ({ mkDerivation, binary, blaze-builder, bzlib, data-binary-ieee754
     , data-default, either, filepath, ghc-paths, HTTP, monads-tf, mtl
     , network, network-uri, random, shellmate, system-fileio, tar
     , transformers, utf8-string, websockets
     }:
     mkDerivation {
       pname = "haste-compiler";
       version = "0.4.3";
       sha256 = "1wkb6a1jwmpjr0jlz5fjq652jz6a6agg0a5pfazyfpdznvd4mm62";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary blaze-builder bzlib data-binary-ieee754 data-default either
         filepath ghc-paths HTTP monads-tf mtl network network-uri random
         shellmate system-fileio tar transformers utf8-string websockets
       ];
       configureFlags = "-fportable";
       homepage = "http://haste-lang.org/";
       description = "Haskell To ECMAScript compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haste-markup" = callPackage
    ({ mkDerivation, filepath, haste-lib }:
     mkDerivation {
       pname = "haste-markup";
       version = "0.0.1.0";
       sha256 = "02rqm4qjaww2c622bqd1bb2mjb73w2s7d7pwvz94x03npxkf4hn1";
       buildDepends = [ filepath haste-lib ];
       homepage = "http://github.com/ajnsit/haste-markup";
       description = "A port of blaze-markup and blaze-html to Haste";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haste-perch" = callPackage
    ({ mkDerivation, haste-compiler, transformers }:
     mkDerivation {
       pname = "haste-perch";
       version = "0.1.0.5";
       sha256 = "1s4z2xsmmfsv2wyfpv7qqxn7wj57gi9dnzs1j7x9qn2g1gwn4jrn";
       buildDepends = [ haste-compiler transformers ];
       homepage = "https://github.com/agocorona/haste-perch";
       description = "Create, navigate and modify the DOM tree with composable syntax, with the haste compiler";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hat" = callPackage
    ({ mkDerivation, filepath, haskeline, haskell-src-exts, random }:
     mkDerivation {
       pname = "hat";
       version = "2.8.0.0";
       sha256 = "06qb34g2kxsldkgpw02xs7cknhj6igfwgjxi2fxyr2856y8laj0j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath haskeline haskell-src-exts random ];
       homepage = "http://projects.haskell.org/hat/";
       description = "The Haskell tracer, generating and viewing Haskell execution traces";
       license = "unknown";
     }) {};

  "hatex-guide" = callPackage
    ({ mkDerivation, blaze-html, filepath, HaTeX, parsec, text, time
     , transformers
     }:
     mkDerivation {
       pname = "hatex-guide";
       version = "1.3.1.0";
       sha256 = "11wi053g9kybw0qa3wdfccyy0ka3xnnghgamaaf220r8hz49g25y";
       buildDepends = [
         blaze-html filepath HaTeX parsec text time transformers
       ];
       description = "HaTeX User's Guide";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hath" = callPackage
    ({ mkDerivation, cmdargs, dns, MissingH, parallel-io, split, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "hath";
       version = "0.2.2";
       sha256 = "12f1mij7yv8zd3v3l4jhh51harddp4angvvz5bc96y7mm16543ys";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs dns MissingH parallel-io split tasty tasty-hunit
         tasty-quickcheck
       ];
       testDepends = [
         cmdargs dns MissingH parallel-io split tasty tasty-hunit
         tasty-quickcheck
       ];
       description = "Hath manipulates network blocks in CIDR notation";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hatt" = callPackage
    ({ mkDerivation, ansi-wl-pprint, cmdargs, haskeline, parsec
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hatt";
       version = "1.5.0.3";
       sha256 = "0dgjia07v489wlk23hg84d1043rh71hl9yg7vdcih2jcj8pn00z4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint cmdargs haskeline parsec QuickCheck
       ];
       testDepends = [ test-framework test-framework-quickcheck2 ];
       homepage = "http://extralogical.net/projects/hatt";
       description = "A truth table generator for classical propositional logic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hawitter" = callPackage
    ({ mkDerivation, base64-string, clock, gconf, glade, gtk, hoauth
     , HTTP, json, mtl, network, parsec, regex-base, regex-tdfa, SHA
     , time, utf8-string
     }:
     mkDerivation {
       pname = "hawitter";
       version = "0.4";
       sha256 = "10qg24qkh17l9zqn47g64cg6hp48x7bjbcwigj35zpqcq71s9dxc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base64-string clock gconf glade gtk hoauth HTTP json mtl network
         parsec regex-base regex-tdfa SHA time utf8-string
       ];
       homepage = "http://d.hatena.ne.jp/xanxys/20100321/1269137834";
       description = "A twitter client for GTK+. Beta version.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haxl" = callPackage
    ({ mkDerivation, aeson, filepath, hashable, HUnit, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "haxl";
       version = "0.1.0.0";
       sha256 = "1spkcvsy0p3ksxapaz93db09y2jsswr5k6qs6cvxmwxxhbnswv36";
       buildDepends = [
         aeson filepath hashable HUnit text time unordered-containers vector
       ];
       testDepends = [ aeson hashable HUnit text unordered-containers ];
       homepage = "https://github.com/facebook/Haxl";
       description = "A Haskell library for efficient, concurrent, and concise data access";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haxl-facebook" = callPackage
    ({ mkDerivation, aeson, async, conduit, data-default, fb, hashable
     , haxl, http-client-tls, http-conduit, resourcet, text, time
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "haxl-facebook";
       version = "0.1.0.0";
       sha256 = "0m8dycsh51sfrxhmajsaydgima4r0nc60yklv9w26302i176j2aq";
       buildDepends = [
         aeson async conduit data-default fb hashable haxl http-client-tls
         http-conduit resourcet text time transformers
       ];
       testDepends = [
         aeson async conduit data-default fb hashable haxl http-client-tls
         http-conduit resourcet text time transformers unordered-containers
         vector
       ];
       homepage = "https://github.com/facebook/Haxl";
       description = "An example Haxl data source for accessing the Facebook Graph API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haxparse" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, data-default, mtl
     , optparse-applicative, parsec, split, transformers, utf8-string
     , zlib
     }:
     mkDerivation {
       pname = "haxparse";
       version = "0.3.1.0";
       sha256 = "12ksmhmk1yns8znh9srqm53q4by8dibdvkd9qhbihiwdyz137y6j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary data-binary-ieee754 data-default mtl optparse-applicative
         parsec split transformers utf8-string zlib
       ];
       homepage = "https://github.com/joelteon/haxparse";
       description = "Readable HaxBall replays";
       license = stdenv.lib.licenses.mit;
     }) {};

  "haxr" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, HaXml, HTTP, mtl
     , network, network-uri, time, utf8-string
     }:
     mkDerivation {
       pname = "haxr";
       version = "3000.10.3.1";
       sha256 = "0alvrsk85f1l79hfa9shagjckp4sx835l9734ab2izfv50mxx7gm";
       editedCabalFile = "060r24v3x8idc07ji22z7aq53h2mw3k2vv8kyn7k4q5f4b8q26li";
       buildDepends = [
         base64-bytestring blaze-builder HaXml HTTP mtl network network-uri
         time utf8-string
       ];
       homepage = "http://www.haskell.org/haskellwiki/HaXR";
       description = "XML-RPC client and server library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haxr-th" = callPackage
    ({ mkDerivation, haxr }:
     mkDerivation {
       pname = "haxr-th";
       version = "3000.5";
       sha256 = "1h1g4r7c5k3rja49ip4m21f2sscn06xjxharnlyazvvs6mzfysif";
       buildDepends = [ haxr ];
       homepage = "http://www.haskell.org/haxr/";
       description = "Automatic deriving of XML-RPC structs for Haskell records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "haxy" = callPackage
    ({ mkDerivation, data-default-class, hostname, HTTP, http-server
     , mtl, url
     }:
     mkDerivation {
       pname = "haxy";
       version = "1.0";
       sha256 = "1fzdxk0vl7pd3k1dgxli6f721lfvwpb2zl354fl0zy5gimiky7fs";
       buildDepends = [
         data-default-class hostname HTTP http-server mtl url
       ];
       homepage = "http://github.com/achudnov/haxy";
       description = "A simple HTTP proxy server library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hayland" = callPackage
    ({ mkDerivation, data-flags, time, wayland-client, wayland-cursor
     , wayland-egl, wayland-server, xml
     }:
     mkDerivation {
       pname = "hayland";
       version = "0.1.0.1";
       sha256 = "0dpisbqfsay8lwpfihw5fmpzi2ajc8qshsawbr4r6x8indy4kdy0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-flags time xml ];
       testDepends = [ xml ];
       extraLibraries = [
         wayland-client wayland-cursor wayland-egl wayland-server
       ];
       description = "Haskell bindings for the C Wayland library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hayoo-cli" = callPackage
    ({ mkDerivation, aeson, http-conduit, http-types
     , optparse-applicative, pandoc, url
     }:
     mkDerivation {
       pname = "hayoo-cli";
       version = "0.1.0.4";
       sha256 = "05wfxpkpxma3ynla3wdgzq0raxqwg21fsa01qqpsh1ib7v462ls0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson http-conduit http-types optparse-applicative pandoc url
       ];
       homepage = "https://github.com/Gonzih/hayoo-cli";
       description = "Hayoo CLI";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hback" = callPackage
    ({ mkDerivation, cairo, filepath, glade, gtk, svgcairo, time }:
     mkDerivation {
       pname = "hback";
       version = "0.0.3";
       sha256 = "01wx4dls0ccl0q09hvydjhj0lfpqfd32z76rjgc89p5889czkm5j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo filepath glade gtk svgcairo time ];
       homepage = "http://hback.googlecode.com/";
       description = "N-back memory game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hbayes" = callPackage
    ({ mkDerivation, binary, boxes, filepath, gamma, HUnit, mtl
     , mwc-random, parsec, QuickCheck, random, split, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "hbayes";
       version = "0.5";
       sha256 = "1zhjhham5jyfwll8sp3kprp92l4whqfyys4jfl81gpb5igpgz039";
       buildDepends = [
         binary boxes filepath gamma HUnit mtl mwc-random parsec QuickCheck
         random split statistics test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       homepage = "http://www.alpheccar.org";
       description = "Bayesian Networks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hbb" = callPackage
    ({ mkDerivation, ghc-mod, ghc-paths, libhbb }:
     mkDerivation {
       pname = "hbb";
       version = "0.4.0.2";
       sha256 = "1whnsbv04b9hr3dc6a3xzv270q7ygk8x4i20mb092fr98klbk9wn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ghc-mod ghc-paths libhbb ];
       homepage = "https://bitbucket.org/bhris/hbb";
       description = "Haskell Busy Bee, a backend for text editors";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "hbcd" = callPackage
    ({ mkDerivation, Decimal, digits, split }:
     mkDerivation {
       pname = "hbcd";
       version = "1.0";
       sha256 = "1glld44m6h8yfh5h63w9q5isy238j0j312ycx43va1xa80x5r4dq";
       buildDepends = [ Decimal digits split ];
       description = "Packed binary-coded decimal (BCD) serialization";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hbeanstalk" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, network }:
     mkDerivation {
       pname = "hbeanstalk";
       version = "0.2.4";
       sha256 = "13xcia1nnayhr22zi1wzgn8qs403ib4n2zikpxd3xnzy33yrgbzy";
       buildDepends = [ attoparsec blaze-builder network ];
       homepage = "http://github.com/scsibug/hbeanstalk/";
       description = "Client for the beanstalkd workqueue service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hbeat" = callPackage
    ({ mkDerivation, mtl, OpenGL, SDL, SDL-mixer, SDL_mixer }:
     mkDerivation {
       pname = "hbeat";
       version = "0.1.2";
       sha256 = "1lgsjwwpimvgczzgg2lvnf08hhcsnk5is52rm2lbmilky8ayhxjp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl OpenGL SDL SDL-mixer ];
       extraLibraries = [ SDL SDL_mixer ];
       homepage = "http://www.dockerz.net/software/hbeat.html";
       description = "A simple step sequencer GUI";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) SDL; };

  "hblas" = callPackage
    ({ mkDerivation, blas, HUnit, lapack, primitive, storable-complex
     , tasty, tasty-hunit, vector
     }:
     mkDerivation {
       pname = "hblas";
       version = "0.3.2.1";
       sha256 = "05c2mqhwjq0r8jyaj0cncaxn4n5x27dd8z6lv8g8cdc7r749q59y";
       buildDepends = [ primitive storable-complex vector ];
       testDepends = [ HUnit tasty tasty-hunit vector ];
       extraLibraries = [ blas lapack ];
       homepage = "http://github.com/wellposed/hblas/";
       description = "Human friendly BLAS and Lapack bindings for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) blas; };

  "hblock" = callPackage
    ({ mkDerivation, aeson, blaze-markup, cereal, deepseq, hashable
     , path-pieces, safecopy, text, unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "hblock";
       version = "0.1.0.1";
       sha256 = "1ng906bsx1nrn583h768pgghg6sysx560dxrpxbxc7xv7f6g8b1s";
       buildDepends = [
         aeson blaze-markup cereal deepseq hashable path-pieces safecopy
         text unordered-containers uuid vector
       ];
       description = "A mutable vector that provides indexation on the datatype fields it stores";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hbro" = callPackage
    ({ mkDerivation, classy-prelude, cond, data-default, dyre, errors
     , glib, gtk3, hslogger, integer-simple, lens, lifted-async
     , lifted-base, monad-control, mtl, network-uri, pango, parsec, safe
     , semigroups, stm, system-fileio, text, time, transformers
     , transformers-base, webkitgtk3, zeromq4-haskell
     }:
     mkDerivation {
       pname = "hbro";
       version = "1.2.0.0";
       sha256 = "1cjg35rx9j7cg36ln2sbzdaiz4sqblgcc13k5giklrw4qfp0vccy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         classy-prelude cond data-default dyre errors glib gtk3 hslogger
         integer-simple lens lifted-async lifted-base monad-control mtl
         network-uri pango parsec safe semigroups stm system-fileio text
         time transformers transformers-base webkitgtk3 zeromq4-haskell
       ];
       homepage = "https://bitbucket.org/k0ral/hbro";
       description = "Minimal KISS-compliant browser";
       license = "unknown";
     }) {};

  "hbro-contrib" = callPackage
    ({ mkDerivation, classy-prelude, glib, gtk3, hbro, monad-control
     , mtl, network-uri, pango, parsec, safe, system-fileio, text, time
     , transformers-base, webkitgtk3
     }:
     mkDerivation {
       pname = "hbro-contrib";
       version = "1.2.0.0";
       sha256 = "1hall154r07jribdipp68mf71yrdw77bm7h48scm127950z4y0rz";
       buildDepends = [
         classy-prelude glib gtk3 hbro monad-control mtl network-uri pango
         parsec safe system-fileio text time transformers-base webkitgtk3
       ];
       homepage = "https://bitbucket.org/k0ral/hbro-contrib";
       description = "Third-party extensions to hbro";
       license = "unknown";
     }) {};

  "hburg" = callPackage
    ({ mkDerivation, filepath, mtl }:
     mkDerivation {
       pname = "hburg";
       version = "1.1.2";
       sha256 = "03gd0hgms5hmjvd1j533357h0gh7mh16vmlbbgdhzad1igq1lcfv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl ];
       homepage = "http://www.bytelabs.org/hburg.html";
       description = "Haskell Bottom Up Rewrite Generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hcc" = callPackage
    ({ mkDerivation, language-c }:
     mkDerivation {
       pname = "hcc";
       version = "0.0.0";
       sha256 = "04aczl9mh1gb25kggh2jj043az61gzzhxqfg9gb3lcjr5krrnh4p";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ language-c ];
       homepage = "http://tomahawkins.org";
       description = "A toy C compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hcg-minus" = callPackage
    ({ mkDerivation, colour }:
     mkDerivation {
       pname = "hcg-minus";
       version = "0.15";
       sha256 = "04g0f4sr7904w3ynyl0gnbyi2sl0z7ziv5q15mfb6c7h0zl25d5r";
       buildDepends = [ colour ];
       homepage = "http://rd.slavepianos.org/t/hcg-minus";
       description = "haskell cg (minus)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hcg-minus-cairo" = callPackage
    ({ mkDerivation, cairo, colour, filepath, hcg-minus, utf8-string }:
     mkDerivation {
       pname = "hcg-minus-cairo";
       version = "0.15";
       sha256 = "002gh8adqzhcjfnqkbcnpzz8qiqbj9zkbk6jj11dnnxjigc4l2q9";
       buildDepends = [ cairo colour filepath hcg-minus utf8-string ];
       homepage = "http://rd.slavepianos.org/t/hcg-minus-cairo";
       description = "haskell cg (minus) (cairo rendering)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hcheat" = callPackage
    ({ mkDerivation, mps }:
     mkDerivation {
       pname = "hcheat";
       version = "2010.1.16";
       sha256 = "1fwgnp15kha9qb7iagd8n5ahjjhg194wbva5i436mb57fn86pya2";
       buildDepends = [ mps ];
       homepage = "http://github.com/nfjinjing/hcheat/";
       description = "A collection of code cheatsheet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hchesslib" = callPackage
    ({ mkDerivation, attoparsec, hlint, hspec, QuickCheck, text }:
     mkDerivation {
       pname = "hchesslib";
       version = "0.1.0.0";
       sha256 = "10785d9n87ddln1rvr19wnvcj401x3b53psdcf8vrwfaq930kjrv";
       buildDepends = [ attoparsec text ];
       testDepends = [ attoparsec hlint hspec QuickCheck text ];
       homepage = "https://github.com/nablaa/hchesslib";
       description = "Chess library";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "hcltest" = callPackage
    ({ mkDerivation, dlist, doctest, either, filepath, free, lens
     , mmorph, monad-control, mtl, optparse-applicative, random-shuffle
     , split, stm, tagged, tasty, temporary, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "hcltest";
       version = "0.3.6";
       sha256 = "145l3kfxi1slngcmh4dnn09hhpr5v6s5nppk0i5a5jzxpp2yx6sd";
       buildDepends = [
         dlist either filepath free lens mmorph monad-control mtl
         optparse-applicative random-shuffle split stm tagged tasty
         temporary text transformers transformers-base
       ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/bennofs/hcltest/";
       description = "A testing library for command line applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hcron" = callPackage
    ({ mkDerivation, mtl, random, stm, time }:
     mkDerivation {
       pname = "hcron";
       version = "0.0.0.3";
       sha256 = "0ckq98aj6fgdgpwyy6ssydp4jazhhfshnalv71h2xx1z80m1ynq7";
       buildDepends = [ mtl random stm time ];
       homepage = "http://github.com/tbh/hcron";
       description = "A simple job scheduler, which just runs some IO action at a given time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hcube" = callPackage
    ({ mkDerivation, HaskellForMaths, QuickCheck, text }:
     mkDerivation {
       pname = "hcube";
       version = "0.1.1";
       sha256 = "1h1g05a8wnk2q65mm4mwywxhygr7fs0150q8ml33ik59mcc5v7fr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HaskellForMaths QuickCheck text ];
       description = "Virtual Rubik's cube of arbitrary size";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hcwiid" = callPackage
    ({ mkDerivation, bluetooth, cwiid }:
     mkDerivation {
       pname = "hcwiid";
       version = "0.0.5";
       sha256 = "0dn19kkd1da9yk6yk8mmpz927d1gsjyip9v4dibsvc1w4v49n94x";
       extraLibraries = [ bluetooth cwiid ];
       homepage = "https://github.com/ivanperez-keera/hcwiid";
       description = "Library to interface with the wiimote";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "hdaemonize" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, hsyslog, mtl }:
     mkDerivation {
       pname = "hdaemonize";
       version = "0.5.0.0";
       sha256 = "15dyaa9rbmsjp3sg9yxg1i90kfy9rvlzmwg5kl8kwal69ajzjjgv";
       buildDepends = [ extensible-exceptions filepath hsyslog mtl ];
       homepage = "http://github.com/madhadron/hdaemonize";
       description = "Library to handle the details of writing daemons for UNIX";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdaemonize-buildfix" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, hsyslog, mtl }:
     mkDerivation {
       pname = "hdaemonize-buildfix";
       version = "0.4.5";
       sha256 = "15k4z77caa5y1jix4llqdmqpx0j7iv9nx5lk3vc5hs8vl2ax86f6";
       buildDepends = [ extensible-exceptions filepath hsyslog mtl ];
       homepage = "http://github.com/madhadron/hdaemonize";
       description = "Library to handle the details of writing daemons for UNIX";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdbc-postgresql-hstore" = callPackage
    ({ mkDerivation, attoparsec, HDBC, text }:
     mkDerivation {
       pname = "hdbc-postgresql-hstore";
       version = "0.0.1.1";
       sha256 = "034zsmqgavh4ns69f6j4a1afyqbd1b7h35macmf20vzxj0j0bawj";
       buildDepends = [ attoparsec HDBC text ];
       homepage = "http://bitbucket.com/dpwiz/hdbc-postgresql-hstore";
       description = "Manipulate data in PostgreSQL \"hstore\" columns";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hdbc-tuple" = callPackage
    ({ mkDerivation, convertible, HDBC, typical }:
     mkDerivation {
       pname = "hdbc-tuple";
       version = "0.0.1";
       sha256 = "155darl83c1b3gjkh7x8pwpj6v4nqfb389ix9vr39j7qw1pkjwdd";
       buildDepends = [ convertible HDBC typical ];
       description = "Type save tuples for HDBC";
       license = "GPL";
     }) {};

  "hdbi" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, Decimal, deepseq
     , derive, hspec-expectations, HUnit, QuickCheck
     , quickcheck-assertions, quickcheck-instances, stm, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , uuid
     }:
     mkDerivation {
       pname = "hdbi";
       version = "1.3.0";
       sha256 = "0z8ivqs79lkqr2bji6nc5djd29ajag5r7d7caja482ksfq75wdc2";
       buildDepends = [
         attoparsec blaze-builder Decimal deepseq stm text time uuid
       ];
       testDepends = [
         attoparsec blaze-builder Decimal deepseq derive hspec-expectations
         HUnit QuickCheck quickcheck-assertions quickcheck-instances stm
         test-framework test-framework-hunit test-framework-quickcheck2 text
         time uuid
       ];
       homepage = "https://github.com/s9gf4ult/hdbi";
       description = "Haskell Database Independent interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdbi-conduit" = callPackage
    ({ mkDerivation, conduit, hdbi, hdbi-sqlite, QuickCheck
     , quickcheck-assertions, resourcet, test-framework
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "hdbi-conduit";
       version = "1.3.0";
       sha256 = "1wrc38m8451vslvnmd4p128x9885dbjx5hzc566s06dw8wshfdgj";
       buildDepends = [ conduit hdbi resourcet transformers ];
       testDepends = [
         conduit hdbi hdbi-sqlite QuickCheck quickcheck-assertions resourcet
         test-framework test-framework-quickcheck2 transformers
       ];
       homepage = "https://github.com/s9gf4ult/hdbi-conduit";
       description = "Conduit glue for HDBI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdbi-postgresql" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, Decimal, derive, hdbi
     , hdbi-tests, HUnit, ieee754, mtl, postgresql-libpq
     , postgresql-simple, QuickCheck, quickcheck-assertions
     , quickcheck-instances, safe, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, uuid
     }:
     mkDerivation {
       pname = "hdbi-postgresql";
       version = "1.3.0";
       sha256 = "1fjcp3ldc54bm8gj8l9ifjvdxx6h6lsswjspmwnzwfh1ahfrbg1x";
       buildDepends = [
         attoparsec blaze-builder hdbi mtl postgresql-libpq
         postgresql-simple safe text time uuid
       ];
       testDepends = [
         attoparsec blaze-builder Decimal derive hdbi hdbi-tests HUnit
         ieee754 mtl postgresql-libpq postgresql-simple QuickCheck
         quickcheck-assertions quickcheck-instances safe test-framework
         test-framework-hunit test-framework-quickcheck2 text time uuid
       ];
       homepage = "https://github.com/s9gf4ult/hdbi-postgresql";
       description = "PostgreSQL driver for hdbi";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdbi-sqlite" = callPackage
    ({ mkDerivation, blaze-builder, direct-sqlite, hdbi, hdbi-tests
     , test-framework, text
     }:
     mkDerivation {
       pname = "hdbi-sqlite";
       version = "1.3.0";
       sha256 = "03vf5xv14hb6rwwaiv997a7j3s5rgp81cb60v0n013l20dqh1g04";
       buildDepends = [ blaze-builder direct-sqlite hdbi text ];
       testDepends = [
         blaze-builder direct-sqlite hdbi hdbi-tests test-framework text
       ];
       homepage = "https://github.com/s9gf4ult/hdbi-sqlite";
       description = "SQlite driver for HDBI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdbi-tests" = callPackage
    ({ mkDerivation, Decimal, hdbi, HUnit, ieee754, QuickCheck
     , quickcheck-assertions, quickcheck-instances, stm, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , uuid
     }:
     mkDerivation {
       pname = "hdbi-tests";
       version = "1.3.0";
       sha256 = "0rvrjcv890flsmq8v6bpgh8kvg0ix3x2n149kdg7xviy26liyjg5";
       buildDepends = [
         Decimal hdbi HUnit ieee754 QuickCheck quickcheck-assertions
         quickcheck-instances stm test-framework test-framework-hunit
         test-framework-quickcheck2 text time uuid
       ];
       homepage = "https://github.com/s9gf4ult/hdbi-tests";
       description = "test suite for testing HDBI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdevtools" = callPackage
    ({ mkDerivation, Cabal, cmdargs, filepath, ghc-paths, network, syb
     , time
     }:
     mkDerivation {
       pname = "hdevtools";
       version = "0.1.0.6";
       sha256 = "1plpkdhjv2493zy7fdn3a6cwdava0yrqqkzyn3wddi9f70xd62ak";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal cmdargs filepath ghc-paths network syb time
       ];
       homepage = "https://github.com/bitc/hdevtools/";
       description = "Persistent GHC powered background server for FAST haskell development tools";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hdf" = callPackage
    ({ mkDerivation, fgl, fgl-visualize, filepath, hosc, hsc3
     , murmur-hash, split, transformers
     }:
     mkDerivation {
       pname = "hdf";
       version = "0.15";
       sha256 = "11nf9wlymdhydf0bhh9gdl0cdn0i4mbvx3hfdcmnxfvag5jmfbkk";
       buildDepends = [
         fgl fgl-visualize filepath hosc hsc3 murmur-hash split transformers
       ];
       homepage = "http://rd.slavepianos.org/t/hdf";
       description = "HDF: Uniform Rate Audio Signal Processing in Haskell";
       license = "GPL";
     }) {};

  "hdigest" = callPackage
    ({ mkDerivation, cgi, Crypto, network, parsec, random, time }:
     mkDerivation {
       pname = "hdigest";
       version = "1.0";
       sha256 = "1wm9j8ncjfb0gscdz4zmkymrzykc6rqbcx7988r207l5s9q3043f";
       buildDepends = [ cgi Crypto network parsec random time ];
       description = "Server-side HTTP Digest (RFC2617) in the CGI monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdirect" = callPackage
    ({ mkDerivation, happy }:
     mkDerivation {
       pname = "hdirect";
       version = "0.21.0";
       sha256 = "1v7yx9k0kib6527k49hf3s4jvdda7a0wgv09qhyjk6lyriyi3ny2";
       isLibrary = true;
       isExecutable = true;
       buildTools = [ happy ];
       homepage = "http://www.haskell.org/hdirect/";
       description = "An IDL compiler for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdis86" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "hdis86";
       version = "0.2";
       sha256 = "0qr8d4qbvkncv4im0iwwdr9khvkyy4ky8wnwxri1jqhylcq8vdks";
       buildDepends = [ QuickCheck ];
       homepage = "https://github.com/kmcallister/hdis86";
       description = "Interface to the udis86 disassembler for x86 and x86-64 / AMD64";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdiscount" = callPackage
    ({ mkDerivation, markdown }:
     mkDerivation {
       pname = "hdiscount";
       version = "0.1.0.0";
       sha256 = "0z6kpsk57gjqwpvs5v6ikiirnyyg26mbrxx827bb1v27lhsy7py0";
       extraLibraries = [ markdown ];
       homepage = "https://github.com/jamwt/hdiscount";
       description = "Haskell bindings to the Discount markdown library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) markdown; };

  "hdm" = callPackage
    ({ mkDerivation, vty }:
     mkDerivation {
       pname = "hdm";
       version = "0.0.1";
       sha256 = "1qgq4bwq2ip315j43f0pyhxah033bjrj3wrmvnzmc62s8k2rfvgh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ vty ];
       description = "a small display manager";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hdocs" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, filepath, ghc-paths
     , haddock-api, MonadCatchIO-transformers, mtl, network, text
     , transformers
     }:
     mkDerivation {
       pname = "hdocs";
       version = "0.4.1.0";
       sha256 = "1k0608y3lr0z96cim5m1n0df7fz5qms1h5h9ff5ia3qrscic33pr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty filepath ghc-paths haddock-api
         MonadCatchIO-transformers mtl network text transformers
       ];
       testDepends = [ mtl ];
       homepage = "https://github.com/mvoidex/hdocs";
       description = "Haskell docs tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdph" = callPackage
    ({ mkDerivation, cereal, deepseq, hdph-closure, mtl, network
     , network-info, network-multicast, network-transport
     , network-transport-tcp, random, time
     }:
     mkDerivation {
       pname = "hdph";
       version = "0.0.1";
       sha256 = "116499cr0pcc1gg7aniprlcp9vp8s61b4vk7rcm673nw3lay496a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal deepseq hdph-closure mtl network network-info
         network-multicast network-transport network-transport-tcp random
         time
       ];
       homepage = "https://github.com/PatrickMaier/HdpH";
       description = "Haskell distributed parallel Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hdph-closure" = callPackage
    ({ mkDerivation, cereal, deepseq }:
     mkDerivation {
       pname = "hdph-closure";
       version = "0.0.1";
       sha256 = "0rcmp5i7jvpghg8nql5wlidbyjs79cxxmdb6bq3xxk806gdj66d8";
       buildDepends = [ cereal deepseq ];
       homepage = "https://github.com/PatrickMaier/HdpH";
       description = "Explicit closures in Haskell distributed parallel Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "heap" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "heap";
       version = "1.0.1";
       sha256 = "1fjnjbq88m32y80pwp3ly6nc21fnz0v54wvpkzdblrx92azlykz3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck ];
       description = "Heaps in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "heaps" = callPackage
    ({ mkDerivation, doctest, filepath }:
     mkDerivation {
       pname = "heaps";
       version = "0.3.1";
       sha256 = "1h0p097zc1wjinhdhy4ssav7jpicc85074d926nmnhdgz9vaajwj";
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/heaps/";
       description = "Asymptotically optimal Brodal/Okasaki heaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "heapsort" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "heapsort";
       version = "0.1.0";
       sha256 = "0fzws9fjhqsygsbwj7nvj786j16264vqvqzc97dr73y72538k9qa";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck ];
       homepage = "http://wiki.cs.pdx.edu/bartforge/heapsort";
       description = "Heapsort of MArrays as a demo of imperative programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hebrew-time" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "hebrew-time";
       version = "0.1.1";
       sha256 = "0ckridxf4rvhhp0k1mckbbbpzfs32l4mwg7n9mrmsggldpl7x6f7";
       buildDepends = [ time ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://github.com/snoyberg/hebrew-time";
       description = "Hebrew dates and prayer times";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hecc" = callPackage
    ({ mkDerivation, cereal, crypto-api, hF2 }:
     mkDerivation {
       pname = "hecc";
       version = "0.4.1.0";
       sha256 = "0yh3zbqfcqh7mn04q0hqqqrimkdvbw36r38aii0rfz7k6rrdm17b";
       buildDepends = [ cereal crypto-api hF2 ];
       description = "Elliptic Curve Cryptography for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hedis" = callPackage
    ({ mkDerivation, attoparsec, BoundedChan, bytestring-lexing, HUnit
     , mtl, network, resource-pool, test-framework, test-framework-hunit
     , time, vector
     }:
     mkDerivation {
       pname = "hedis";
       version = "0.6.5";
       sha256 = "1kn8i49yxms1bpjwpy4m8vyycgi755zvy4zc66w068nmnd1kiykh";
       buildDepends = [
         attoparsec BoundedChan bytestring-lexing mtl network resource-pool
         time vector
       ];
       testDepends = [
         HUnit mtl test-framework test-framework-hunit time
       ];
       homepage = "https://github.com/informatikr/hedis";
       description = "Client library for the Redis datastore: supports full command set, pipelining";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hedis-pile" = callPackage
    ({ mkDerivation, binary, hedis, hedis-tags, HUnit, lifted-base
     , string-conversions, test-framework, test-framework-hunit
     , transformers
     }:
     mkDerivation {
       pname = "hedis-pile";
       version = "0.6.3";
       sha256 = "0awwga4hvmfkkkqy68g4ja51szjifs1z20rav0kmbn3gn978248n";
       buildDepends = [
         binary hedis hedis-tags string-conversions transformers
       ];
       testDepends = [
         binary hedis HUnit lifted-base string-conversions test-framework
         test-framework-hunit transformers
       ];
       homepage = "https://github.com/akaspin/hedis-pile";
       description = "Caching mandatory data with Redis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hedis-simple" = callPackage
    ({ mkDerivation, either, hedis, mtl }:
     mkDerivation {
       pname = "hedis-simple";
       version = "0.1.0.0";
       sha256 = "1dq7rpqg35caqj664q2ndqgd59mq7cfjahkaka5mlk1k5yjvz7av";
       buildDepends = [ either hedis mtl ];
       homepage = "http://github.com/sanetracker/hedis-simple";
       description = "A simplified API for hedis";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hedis-tags" = callPackage
    ({ mkDerivation, hedis, HUnit, lifted-base, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "hedis-tags";
       version = "0.2.3";
       sha256 = "0d9jr26366xjjcc39ma36bs944d11xpw5izww9pw3lajsgdr0d1s";
       buildDepends = [ hedis ];
       testDepends = [
         hedis HUnit lifted-base test-framework test-framework-hunit
         transformers
       ];
       homepage = "https://github.com/akaspin/hedis-tags";
       description = "Tags for hedis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hedn" = callPackage
    ({ mkDerivation, attoparsec, deepseq, hspec, HUnit, mtl, QuickCheck
     , stringsearch, text, time, utf8-string, vector
     }:
     mkDerivation {
       pname = "hedn";
       version = "0.1.8.1";
       sha256 = "12r7ndjq59q9pdnhziq7af4jkp2mgpq7qhnnzgv6w1z8v893b9r1";
       buildDepends = [
         attoparsec deepseq mtl stringsearch text time utf8-string vector
       ];
       testDepends = [ hspec HUnit QuickCheck text time vector ];
       homepage = "https://bitbucket.org/dpwiz/hedn";
       description = "EDN parsing and encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "heist" = callPackage
    ({ mkDerivation, aeson, attoparsec, blaze-builder, blaze-html
     , directory-tree, dlist, errors, filepath, hashable, map-syntax
     , MonadCatchIO-transformers, mtl, random, text, time, transformers
     , unordered-containers, vector, xmlhtml
     }:
     mkDerivation {
       pname = "heist";
       version = "0.14.0.1";
       sha256 = "1nhksdn95v35ymml3kgm70axjl4vkjfvj1wvlcm1a1frlnbk993w";
       buildDepends = [
         aeson attoparsec blaze-builder blaze-html directory-tree dlist
         errors filepath hashable map-syntax MonadCatchIO-transformers mtl
         random text time transformers unordered-containers vector xmlhtml
       ];
       homepage = "http://snapframework.com/";
       description = "An Haskell template system supporting both HTML5 and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "heist-aeson" = callPackage
    ({ mkDerivation, aeson, blaze-builder, heist, monads-fd, text
     , vector, xmlhtml
     }:
     mkDerivation {
       pname = "heist-aeson";
       version = "0.5";
       sha256 = "1m0rwrb0gzsajnp5h0w7cf10jf6fram4mjkmny5hk0h5xwcn19dc";
       buildDepends = [
         aeson blaze-builder heist monads-fd text vector xmlhtml
       ];
       description = "Use JSON directly from Heist templates";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "heist-async" = callPackage
    ({ mkDerivation, heist, text, xmlhtml }:
     mkDerivation {
       pname = "heist-async";
       version = "0.6.0.0";
       sha256 = "16ab3cfs6fj66ssf6ypmx2yddq5an115wlmwybk3va0a7kbp58ll";
       buildDepends = [ heist text xmlhtml ];
       homepage = "http://github.com/dbp/heist-async";
       description = "Adding support for asynchronous updates (\"AJAX\") with heist";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "helics" = callPackage
    ({ mkDerivation, bytestring-show, data-default-class
     , newrelic-collector-client, newrelic-common, newrelic-transaction
     , time
     }:
     mkDerivation {
       pname = "helics";
       version = "0.5.0.1";
       sha256 = "0kqmqyf22fjcbsqlbyxmg6238im8kp6baip3v8f7hibkpgyfqip1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bytestring-show data-default-class time ];
       extraLibraries = [
         newrelic-collector-client newrelic-common newrelic-transaction
       ];
       homepage = "https://github.com/philopon/helics";
       description = "New Relic® agent SDK wrapper for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "helics-wai" = callPackage
    ({ mkDerivation, data-default-class, helics, vault, wai }:
     mkDerivation {
       pname = "helics-wai";
       version = "0.5.0";
       sha256 = "1d1kaik2aj0vnln4nbj958d7ay7adb6l62fx606y7xlp7zyhysr4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-default-class helics vault wai ];
       homepage = "https://github.com/philopon/helics";
       description = "New Relic® agent SDK wrapper for wai";
       license = stdenv.lib.licenses.mit;
     }) {};

  "helisp" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "helisp";
       version = "0.1";
       sha256 = "1j495j3kc43d34aviln6jrab3ydzsp1hrnk079p53mcnx2rpjz81";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://www.codersbase.com/index.php/Helisp";
       description = "An incomplete Elisp compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "helium" = callPackage
    ({ mkDerivation, filepath, lvmlib, mtl, network, parsec, Top
     , transformers, wl-pprint
     }:
     mkDerivation {
       pname = "helium";
       version = "1.8";
       sha256 = "0nhpkilxhkp0q9flq6ap8lhync21v8bz5jvb6j79flcvb0vh74rq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath lvmlib mtl network parsec Top transformers wl-pprint
       ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/Helium/WebHome";
       description = "The Helium Compiler";
       license = "GPL";
     }) {};

  "hell" = callPackage
    ({ mkDerivation, conduit, conduit-extra, data-default, filepath
     , ghc-paths, haskeline, monad-extras, mtl, pdfinfo, process-extras
     , resourcet, shell-conduit, split, text, time, transformers
     , utf8-string
     }:
     mkDerivation {
       pname = "hell";
       version = "2.1";
       sha256 = "1kdxkk994g38bl2kcxcs0p9wn1rankn0jw14nlvy9z9appgxalnl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         conduit conduit-extra data-default filepath ghc-paths haskeline
         monad-extras mtl pdfinfo process-extras resourcet shell-conduit
         split text time transformers utf8-string
       ];
       description = "A Haskell shell based on shell-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hellage" = callPackage
    ({ mkDerivation, hellnet, hjpath, hjson, HTTP, Lucu, mtl, network
     , regex-pcre, safe, stm, tar, utf8-string, zlib
     }:
     mkDerivation {
       pname = "hellage";
       version = "0.1.1";
       sha256 = "1gqz042qycwhka6fyma6fb104mi8wd22nsbywrini3m3nib5ci75";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         hellnet hjpath hjson HTTP Lucu mtl network regex-pcre safe stm tar
         utf8-string zlib
       ];
       homepage = "http://bitcheese.net/wiki/hellnet/hellage";
       description = "Distributed hackage mirror";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hellnet" = callPackage
    ({ mkDerivation, Crypto, filepath, hjpath, hjson, HTTP, Lucu, mtl
     , network, parsec, random, regex-posix, RSA, safe, time, uri
     , utf8-string
     }:
     mkDerivation {
       pname = "hellnet";
       version = "0.1.1";
       sha256 = "0fb4r9nb39l1qr7xczgkx5i93cv4rqrin0fl22qq4h12ajvrp6m6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Crypto filepath hjpath hjson HTTP Lucu mtl network parsec random
         regex-posix RSA safe time uri utf8-string
       ];
       homepage = "http://bitcheese.net/wiki/hellnet/hspawn";
       description = "Simple, distributed, anonymous data sharing network";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hello" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hello";
       version = "1.0.0.2";
       sha256 = "1x6q7frbrc4jdfx1qhxrydmdp5k7mm3lx504d7rhg6z2m6ibbh57";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://www.haskell.org/hello/";
       description = "Hello World, an example package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "helm" = callPackage
    ({ mkDerivation, cairo, cpu, elerea, filepath, HUnit, mtl, pango
     , random, sdl2, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers
     }:
     mkDerivation {
       pname = "helm";
       version = "0.7.0";
       sha256 = "0847vfah8dblgd7pvvmdipzvwai4g14whv7y4v1i5qnigbxmdm8a";
       buildDepends = [
         cairo cpu elerea filepath mtl pango random sdl2 text time
         transformers
       ];
       testDepends = [
         cairo elerea HUnit sdl2 test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "http://github.com/switchface/helm";
       description = "A functionally reactive game engine";
       license = stdenv.lib.licenses.mit;
     }) {};

  "help-esb" = callPackage
    ({ mkDerivation, aeson, MissingH, network, network-uri, text, uuid
     }:
     mkDerivation {
       pname = "help-esb";
       version = "0.1.6";
       sha256 = "0fy0dygx3hdkbdip7gppk25akjar0p2px0s5q7sl1lmzgkcl1016";
       buildDepends = [ aeson MissingH network network-uri text uuid ];
       homepage = "https://github.com/helpdotcom/help-esb.hs";
       description = "A Haskell client for the Help.com team's ESB.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hemkay" = callPackage
    ({ mkDerivation, binary, hemkay-core, portaudio }:
     mkDerivation {
       pname = "hemkay";
       version = "0.2.0";
       sha256 = "16f1nzpi20j7fza1rs1b89mhyni4162q2x4l3ixrnd82yjmcmc1l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary hemkay-core portaudio ];
       description = "A module music mixer and player";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hemkay-core" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "hemkay-core";
       version = "0.1.4";
       sha256 = "0br41879jynw3dzb2hlb07m55zmzgyim6gi8i48bzimbi70c9z89";
       buildDepends = [ binary ];
       description = "A device independent module music mixer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hemokit" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, cairo, cipher-aes
     , conduit, deepseq, deepseq-generics, gtk, hidapi, hspec, HUnit
     , mtl, network-simple, optparse-applicative, pretty-show, robot
     , split, svgcairo, text, time, transformers, vector, vector-fftw
     , websockets, xhb
     }:
     mkDerivation {
       pname = "hemokit";
       version = "0.6.4";
       sha256 = "1ww013c0bb612yh2v968nvv7b3b1sv1r9ryrpsb670lwmds886g2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring cairo cipher-aes conduit deepseq
         deepseq-generics gtk hidapi mtl network-simple optparse-applicative
         pretty-show robot split svgcairo text time transformers vector
         vector-fftw websockets xhb
       ];
       testDepends = [ hspec HUnit vector ];
       homepage = "https://github.com/nh2/haskell-hemokit";
       description = "Haskell port of the Emokit EEG project";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hen" = callPackage
    ({ mkDerivation, bitset, exceptions, mtl, QuickCheck, tasty
     , tasty-quickcheck, transformers, uuid, xenctrl
     }:
     mkDerivation {
       pname = "hen";
       version = "0.1.3";
       sha256 = "1ri6brxmc2m09jx2r9p47lgpfn8zkxy147hyyw3x2pw3g6cgsill";
       buildDepends = [ bitset exceptions mtl transformers uuid ];
       testDepends = [
         bitset exceptions mtl QuickCheck tasty tasty-quickcheck
         transformers uuid
       ];
       extraLibraries = [ xenctrl ];
       homepage = "https://github.com/selectel/hen";
       description = "Haskell bindings to Xen hypervisor interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "henet" = callPackage
    ({ mkDerivation, bitset, network, typesafe-endian }:
     mkDerivation {
       pname = "henet";
       version = "1.3.9.3";
       sha256 = "0pm5lnn7rc647ic404c8bmki9wfrkc0mdmmkng50vv0bm2d7z5aq";
       buildDepends = [ bitset network typesafe-endian ];
       description = "Bindings and high level interface for to ENet v1.3.9";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hepevt" = callPackage
    ({ mkDerivation, lha }:
     mkDerivation {
       pname = "hepevt";
       version = "0.5";
       sha256 = "0b7syzfzbcznjb98hi4k8bp46ss08s9qg2763bnnm1b10i7km23z";
       buildDepends = [ lha ];
       description = "HEPEVT parser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "her-lexer" = callPackage
    ({ mkDerivation, mtl, split }:
     mkDerivation {
       pname = "her-lexer";
       version = "0.1.1";
       sha256 = "1hbx48r8zdmyr5qjf0b3pagmamj8pibsp7ca7bxdgk4jz8pxv2my";
       buildDepends = [ mtl split ];
       homepage = "http://personal.cis.strath.ac.uk/~conor/pub/she";
       description = "A lexer for Haskell source code";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "her-lexer-parsec" = callPackage
    ({ mkDerivation, her-lexer, parsec, transformers }:
     mkDerivation {
       pname = "her-lexer-parsec";
       version = "0.0.0";
       sha256 = "1gkcd9ikaxjirxh8haq8b9a372n1dlaq63n9xzq9gsyazkxz7lgn";
       buildDepends = [ her-lexer parsec transformers ];
       description = "Parsec frontend to \"her-lexer\" for Haskell source code";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "herbalizer" = callPackage
    ({ mkDerivation, indents, mtl, parsec, regex-posix }:
     mkDerivation {
       pname = "herbalizer";
       version = "0.4.9";
       sha256 = "1gm1ya1p1i734sxadbmj1zn6mbq1gssmzp897h5xjgb8vsa2fxs6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ indents mtl parsec regex-posix ];
       homepage = "https://github.com/danchoi/herbalizer";
       description = "HAML to ERB translator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "here" = callPackage
    ({ mkDerivation, haskell-src-meta, mtl, parsec }:
     mkDerivation {
       pname = "here";
       version = "1.2.6";
       sha256 = "1c7b0a5a42ki8ndvc2k35jnsj433f1nv1j40vviasxksm7acbwif";
       buildDepends = [ haskell-src-meta mtl parsec ];
       homepage = "https://github.com/tmhedberg/here";
       description = "Here docs & interpolated strings via quasiquotation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "heredoc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "heredoc";
       version = "0.2.0.0";
       sha256 = "0h0g2f7yscwl1ba1yn3jnz2drvd6ns9m910hwlmq3kdq3k39y3f9";
       homepage = "http://hackage.haskell.org/package/heredoc";
       description = "multi-line string / here document using QuasiQuotes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hermit" = callPackage
    ({ mkDerivation, alex, ansi-terminal, data-default, happy
     , haskeline, kure, marked-pretty, mtl, operational, stm, temporary
     , terminfo, transformers
     }:
     mkDerivation {
       pname = "hermit";
       version = "0.6.0.0";
       sha256 = "19ry542k5ffr2vb075ylx2l35bn5sdclvz1byhj5bfdvz4rji09l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal data-default haskeline kure marked-pretty mtl
         operational stm temporary terminfo transformers
       ];
       buildTools = [ alex happy ];
       description = "Haskell Equational Reasoning Model-to-Implementation Tunnel";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hermit-syb" = callPackage
    ({ mkDerivation, hermit, syb }:
     mkDerivation {
       pname = "hermit-syb";
       version = "0.1.0.0";
       sha256 = "1970n7q88q76dnp2h7h8r1d6psq0d9pdvrim556rqiv8smwi661x";
       buildDepends = [ hermit syb ];
       description = "HERMIT plugin for optimizing Scrap-Your-Boilerplate traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "heroku" = callPackage
    ({ mkDerivation, hspec, network, network-uri, text }:
     mkDerivation {
       pname = "heroku";
       version = "0.1.2.1";
       sha256 = "1j6frr1m3934401qlp2kksd3nfr83y6wq5k02dxi9gs0qr9f7p5h";
       buildDepends = [ network-uri text ];
       testDepends = [ hspec network text ];
       homepage = "https://github.com/gregwebs/haskell-heroku";
       description = "helpers for deploying to Heroku";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "herringbone" = callPackage
    ({ mkDerivation, http-types, mtl, process-listlike, system-fileio
     , system-filepath, text, time, transformers, unix-compat
     }:
     mkDerivation {
       pname = "herringbone";
       version = "0.1.1";
       sha256 = "1xpdz24dinm56z4gx51frw19j2169ms9jvasg8xixi944q34hwmk";
       buildDepends = [
         http-types mtl process-listlike system-fileio system-filepath text
         time transformers unix-compat
       ];
       description = "A library for compiling and serving static web assets";
       license = stdenv.lib.licenses.mit;
     }) {};

  "herringbone-embed" = callPackage
    ({ mkDerivation, file-embed, herringbone, system-fileio
     , system-filepath, text
     }:
     mkDerivation {
       pname = "herringbone-embed";
       version = "0.1.1";
       sha256 = "02i0k29fg0nb4ax0yaw6bnrnb0v0rk2fy7lckd5f5bny557mk1h6";
       buildDepends = [
         file-embed herringbone system-fileio system-filepath text
       ];
       description = "Embed preprocessed web assets in your executable with Template Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "herringbone-wai" = callPackage
    ({ mkDerivation, herringbone, http-types, system-fileio
     , system-filepath, text, time, wai, wai-app-static
     }:
     mkDerivation {
       pname = "herringbone-wai";
       version = "0.1.1";
       sha256 = "1kw0n89qqazyap9w315pa6k4smnw1pf8s82grbm8z9d9xyhk980f";
       buildDepends = [
         herringbone http-types system-fileio system-filepath text time wai
         wai-app-static
       ];
       description = "Wai adapter for the Herringbone web asset preprocessor";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hesql" = callPackage
    ({ mkDerivation, filepath, haskell-src, HDBC, HDBC-postgresql
     , hssqlppp, parsec
     }:
     mkDerivation {
       pname = "hesql";
       version = "0.8";
       sha256 = "1xxmm5b3n8wj548lmf7hp05g7qwy0sq7mkh0g98n7z1iqdmfamwa";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath haskell-src HDBC HDBC-postgresql hssqlppp parsec
       ];
       description = "Haskell's embedded SQL";
       license = "GPL";
     }) {};

  "hetero-map" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hetero-map";
       version = "0.21";
       sha256 = "1fnzj37kya5gqjchm3yq0709ay50n0spb24x5rxkxfbl0yy2nzk7";
       homepage = "http://github.com/luqui/hetero-map";
       description = "Pure heterogeneous maps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hetris" = callPackage
    ({ mkDerivation, curses, hscurses, random }:
     mkDerivation {
       pname = "hetris";
       version = "0.2";
       sha256 = "0sj0grykzb7xq7iz0nj27c4fzhcr9f0yshfcq81xq2wdmg09j8yx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hscurses random ];
       extraLibraries = [ curses ];
       homepage = "http://web.comlab.ox.ac.uk/oucl/work/ian.lynagh/Hetris/";
       description = "Text Tetris";
       license = "GPL";
     }) {};

  "heukarya" = callPackage
    ({ mkDerivation, deepseq, parallel, random, text }:
     mkDerivation {
       pname = "heukarya";
       version = "0.2.0.2";
       sha256 = "1ycfy29crdj8ch07wm77lfpg656vm2vl34mdqvsxfxijdxb23cxg";
       buildDepends = [ deepseq parallel random text ];
       homepage = "https://github.com/t3476/heukarya";
       description = "A genetic programming based on tree structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hevolisa" = callPackage
    ({ mkDerivation, cairo, filepath }:
     mkDerivation {
       pname = "hevolisa";
       version = "0.0.1";
       sha256 = "1ys7xqdrnvwn6z2vgmh49zhfxj73pdmscblqcjk6qrwmpb2xha2s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo filepath ];
       description = "Genetic Mona Lisa problem in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hevolisa-dph" = callPackage
    ({ mkDerivation, cairo, dph-seq, filepath }:
     mkDerivation {
       pname = "hevolisa-dph";
       version = "0.0.1";
       sha256 = "0jsynxd33r7d5s5vn204z4wdgm4cq6qyjs7afa77p94ni5m2p3kb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo dph-seq filepath ];
       description = "Genetic Mona Lisa problem in Haskell - using Data Parallel Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hex" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hex";
       version = "0.1.2";
       sha256 = "1v31xiaivrrn0q2jz8919wvkjplv1kxna5ajhsj701fqxm1i5vhj";
       description = "Convert strings into hexadecimal and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexdump" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hexdump";
       version = "0.1";
       sha256 = "012hknn9qhwr3hn3dbyd9s7vvaz4i3bvimmxkb1jyfckw3wjcnhc";
       description = "A library for forming hexdumps";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hexif" = callPackage
    ({ mkDerivation, binary, filepath }:
     mkDerivation {
       pname = "hexif";
       version = "0.2.0.0";
       sha256 = "1asv5vs694mcifffvm5a4gsplpz7frk3p3zr9lqqv1f172ql9lql";
       buildDepends = [ binary filepath ];
       homepage = "http://www.github.com/hansroland/hexif";
       description = "Reading Exif data form a JPEG file with Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexpat" = callPackage
    ({ mkDerivation, deepseq, List, text, transformers, utf8-string }:
     mkDerivation {
       pname = "hexpat";
       version = "0.20.7";
       sha256 = "03r5j54a250f01km6i8qja1h1k512ds2bp7r0yk2jpbbar2y7c08";
       buildDepends = [ deepseq List text transformers utf8-string ];
       homepage = "http://haskell.org/haskellwiki/Hexpat/";
       description = "XML parser/formatter based on expat";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexpat-iteratee" = callPackage
    ({ mkDerivation, extensible-exceptions, hexpat, iteratee, List
     , parallel, transformers
     }:
     mkDerivation {
       pname = "hexpat-iteratee";
       version = "0.6";
       sha256 = "10cqgrrqg518lhr9mk6gq48fgc0sjzwiakm2amhqgfflva3q0nqn";
       buildDepends = [
         extensible-exceptions hexpat iteratee List parallel transformers
       ];
       homepage = "http://haskell.org/haskellwiki/Hexpat/";
       description = "Chunked XML parsing using iteratees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexpat-lens" = callPackage
    ({ mkDerivation, deepseq, hexpat, hexpat-tagsoup, lens }:
     mkDerivation {
       pname = "hexpat-lens";
       version = "0.1.2";
       sha256 = "1k4ixqwpsa4mnywd1fcfrmy2dbcpkna0hg0sxjlfp0qbhy1ik7v7";
       buildDepends = [ deepseq hexpat hexpat-tagsoup lens ];
       description = "Lenses for Hexpat";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hexpat-pickle" = callPackage
    ({ mkDerivation, extensible-exceptions, hexpat, text, utf8-string
     }:
     mkDerivation {
       pname = "hexpat-pickle";
       version = "0.6";
       sha256 = "1k01s49mz4xxfbw1b7ab0ian2m0d7w5awbwf4jyz5ykgxg11kz9m";
       buildDepends = [ extensible-exceptions hexpat text utf8-string ];
       homepage = "http://code.haskell.org/hexpat-pickle/";
       description = "XML picklers based on hexpat, source-code-similar to those of the HXT package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexpat-pickle-generic" = callPackage
    ({ mkDerivation, hexpat, QuickCheck, test-framework
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "hexpat-pickle-generic";
       version = "0.1.7";
       sha256 = "0l0h5n1afkg8zjq28h7aidsskdzf1i5lnz9jlq0hblwa9wamamis";
       buildDepends = [ hexpat text ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Picklers for de/serialising Generic data types to and from XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexpat-tagsoup" = callPackage
    ({ mkDerivation, hexpat, tagsoup }:
     mkDerivation {
       pname = "hexpat-tagsoup";
       version = "0.1";
       sha256 = "0481446ba5m0h8lxmp216gzll0wr77mhk6hvm087749fwjj597aj";
       buildDepends = [ hexpat tagsoup ];
       description = "Parse (possibly malformed) HTML to hexpat tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexpr" = callPackage
    ({ mkDerivation, data-ref, either, mtl, parsec, transformers }:
     mkDerivation {
       pname = "hexpr";
       version = "0.0.0.0";
       sha256 = "0wpmbzxdl63r2p398101ywzfs7b4p4x8ds4zzqbhvhs2r0fsg5wv";
       buildDepends = [ data-ref either mtl parsec transformers ];
       homepage = "https://github.com/Zankoku-Okuno/hexpr/";
       description = "A framework for symbolic, homoiconic languages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hexquote" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "hexquote";
       version = "0.1";
       sha256 = "0fr0sn2k12yvbbwmldqkmwgg0qk6bfd6811h2dgpq77821y62hq8";
       buildDepends = [ parsec ];
       description = "Hexadecimal ByteString literals, with placeholders that bind variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hfann" = callPackage
    ({ mkDerivation, doublefann, fann }:
     mkDerivation {
       pname = "hfann";
       version = "0.4.2";
       sha256 = "09pr24riz63irvykn6csbnm28z35ikwzg52ksah1p7zrywmgq9as";
       isLibrary = true;
       isExecutable = true;
       extraLibraries = [ doublefann ];
       pkgconfigDepends = [ fann ];
       description = "Haskell binding to the FANN library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hfd" = callPackage
    ({ mkDerivation, haskeline, iteratee, MissingH
     , MonadCatchIO-transformers, network, transformers
     }:
     mkDerivation {
       pname = "hfd";
       version = "0.0.2";
       sha256 = "1n60h76hzkb4avnsl6lybq7ya4p4ghcdlplyml7fqwg7i20cak54";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         haskeline iteratee MissingH MonadCatchIO-transformers network
         transformers
       ];
       description = "Flash debugger";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hfiar" = callPackage
    ({ mkDerivation, eprocess, mtl, wx, wxcore }:
     mkDerivation {
       pname = "hfiar";
       version = "2.1.1";
       sha256 = "1jsq33cdpdd52yriky989vd8wlafi9dq1bxzild7sjw1mql69d71";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ eprocess mtl wx wxcore ];
       homepage = "http://github.com/elbrujohalcon/hfiar";
       description = "Four in a Row in Haskell!!";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hflags" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "hflags";
       version = "0.4";
       sha256 = "17zzx273kmnwwazmmns78cllz3l7wad1gi7hizgcxi68j04blhd4";
       buildDepends = [ text ];
       homepage = "http://github.com/errge/hflags";
       description = "Command line flag parser, very similar to Google's gflags";
       license = "unknown";
     }) {};

  "hfoil" = callPackage
    ({ mkDerivation, gloss, haskeline, hmatrix, HTTP, MissingH
     , transformers
     }:
     mkDerivation {
       pname = "hfoil";
       version = "0.1.2";
       sha256 = "0q52xj7bajs8kn66cg7vfgbxp66nwnfl832csrz3bygi9vhv8kxw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         gloss haskeline hmatrix HTTP MissingH transformers
       ];
       description = "Hess-Smith panel code for inviscid 2-d airfoil analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hfov" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hfov";
       version = "1.0.2";
       sha256 = "04qwmjxm06akvpakc5imcx0ls9zlsz74s4r9p7xzj0q5fv20z09l";
       homepage = "https://github.com/nornagon/hfov";
       description = "Field-of-view calculation for low-resolution 2D raster grids";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hfractal" = callPackage
    ({ mkDerivation, colour, data-accessor, data-accessor-template, gd
     , GLUT, OpenGL, OpenGLRaw
     }:
     mkDerivation {
       pname = "hfractal";
       version = "0.4.2.5";
       sha256 = "060qx7wmqhlavamxxyzjyn2ar1cigvfw5ww7c0r70ns54xm0rw5z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         colour data-accessor data-accessor-template gd GLUT OpenGL
         OpenGLRaw
       ];
       homepage = "http://github.com/cmh/Hfractal";
       description = "OpenGL fractal renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hfsevents" = callPackage
    ({ mkDerivation, cereal, mtl, text }:
     mkDerivation {
       pname = "hfsevents";
       version = "0.1.5";
       sha256 = "0hp9jjj59smfcs51d9zjhyvgdbn46l0rl0jr98wbzg3qya0vwj5k";
       buildDepends = [ cereal mtl text ];
       homepage = "http://github.com/luite/hfsevents";
       description = "File/folder watching for OS X";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hfusion" = callPackage
    ({ mkDerivation, haskell-src, mtl, syb }:
     mkDerivation {
       pname = "hfusion";
       version = "0.0.6.1";
       sha256 = "05pisic8s6n2jqymyd2qjifr8kr824v3mflng1a0y4rp8pvbaj7r";
       buildDepends = [ haskell-src mtl syb ];
       homepage = "http://www.fing.edu.uy/inco/proyectos/fusion";
       description = "A library for fusing a subset of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hg-buildpackage" = callPackage
    ({ mkDerivation, HSH, hslogger, MissingH, network, parsec
     , regex-compat, regex-posix
     }:
     mkDerivation {
       pname = "hg-buildpackage";
       version = "1.0.4";
       sha256 = "0csibld3wrxi4jp35qqhfm17sw9fd5sca5rs9yd7i7l4jvsmfqhq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         HSH hslogger MissingH network parsec regex-compat regex-posix
       ];
       description = "Tools to help manage Debian packages with Mercurial";
       license = "GPL";
     }) {};

  "hgal" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "hgal";
       version = "2.0.0.2";
       sha256 = "17qw8izy54042g56mp3hdbmqcyk95cdarg58xggniwd85q2l5dpi";
       buildDepends = [ mtl ];
       description = "library for computation automorphism group and canonical labelling of a graph";
       license = "GPL";
     }) {};

  "hgalib" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "hgalib";
       version = "0.2";
       sha256 = "08a8lmh1rg3d1rmpfhcc2fzyc0kybqhzahx4hrvfrqjw7czcnmrw";
       buildDepends = [ mtl ];
       description = "Haskell Genetic Algorithm Library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hgdbmi" = callPackage
    ({ mkDerivation, HUnit, parsec, stm, temporary, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "hgdbmi";
       version = "0.2";
       sha256 = "1gfmpk9a909vc8khf40lr32l3srqqrfbcprp28dp6g02id1xmck4";
       buildDepends = [ parsec stm ];
       testDepends = [
         HUnit temporary test-framework test-framework-hunit
       ];
       homepage = "https://github.com/copton/hgdbmi";
       description = "GDB Machine Interface: program-driven control of GDB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hgen" = callPackage
    ({ mkDerivation, filepath, hylolib, mtl, random }:
     mkDerivation {
       pname = "hgen";
       version = "1.4.0";
       sha256 = "190zm0lkr2ymq91ka84a3v2lhxjv9yl43abqcyxj6c3cjqym9ib5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath hylolib mtl random ];
       homepage = "http://www.glyc.dc.uba.ar/intohylo/hgen.php";
       description = "Random generation of modal and hybrid logic formulas";
       license = "GPL";
     }) {};

  "hgeometric" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hgeometric";
       version = "0.0.2.2";
       sha256 = "0l460mmbla7354dldil0d7qzba7dp4jhhsna0s27gdd9aad4flsd";
       homepage = "ftp://ftp.cs.man.ac.uk/pub/toby/gpc/";
       description = "A geometric library with bindings to GPC";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hgeometry" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hgeometry";
       version = "0.1.1.1";
       sha256 = "04czprwf74cyghi5c0mj5iyxdxc0wln6wxvknfvb7ns739mg2019";
       description = "Geometry types in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hgettext" = callPackage
    ({ mkDerivation, Cabal, filepath, haskell-src-exts, setlocale
     , uniplate
     }:
     mkDerivation {
       pname = "hgettext";
       version = "0.1.30";
       sha256 = "1pgzyd1nqzl7g88pcw7sncija5sd2k4zif9d8qfw96cw6m6kli96";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath haskell-src-exts setlocale uniplate
       ];
       homepage = "https://github.com/vasylp/hgettext";
       description = "Bindings to libintl.h (gettext, bindtextdomain)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hgithub" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring
     , case-insensitive, cmdargs, http-enumerator, text
     }:
     mkDerivation {
       pname = "hgithub";
       version = "0.1.0";
       sha256 = "05dxbz9z457b5nl0wsv95pgah9b74agdfwziqf7x79j5q2qqjc2l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base64-bytestring case-insensitive cmdargs
         http-enumerator text
       ];
       homepage = "https://github.com/noteed/hgithub";
       description = "Haskell bindings to the GitHub API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hgl-example" = callPackage
    ({ mkDerivation, HGL, HTam, random, utility-ht }:
     mkDerivation {
       pname = "hgl-example";
       version = "0.0.2";
       sha256 = "0bigji3i3311wlphxa0g8lkls0i4cn05d2m57fcrdfan8rayjwxr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HGL HTam random utility-ht ];
       homepage = "http://code.haskell.org/~thielema/hgl-example/";
       description = "Various animations generated using HGL";
       license = "GPL";
     }) {};

  "hgom" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, wl-pprint }:
     mkDerivation {
       pname = "hgom";
       version = "0.6";
       sha256 = "0amdfdp1xmh506lgfbb4war2spfb4gqls864q18psmvshcwlpsmv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec wl-pprint ];
       homepage = "http://github.com/polux/hgom";
       description = "An haskell port of the java version of gom";
       license = "GPL";
     }) {};

  "hgopher" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "hgopher";
       version = "0.1.0.0";
       sha256 = "0j6ybi8f5csa9rpbpy8dc9p6l6vf2qh2zk589a9nqj2phllz7mwf";
       buildDepends = [ network ];
       description = "Gopher server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hharp" = callPackage
    ({ mkDerivation, harp }:
     mkDerivation {
       pname = "hharp";
       version = "0.1.0.0";
       sha256 = "1n2pi90yr9dmxp5iirp6hm8inliwpl3pnhgx7xnn4zl0z21bjgb5";
       extraLibraries = [ harp ];
       homepage = "http://www.harphttp.org";
       description = "Binding to libharp";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) harp; };

  "hi" = callPackage
    ({ mkDerivation, doctest, filepath, hspec, HUnit, parsec, split
     , template, temporary-rc, text, time
     }:
     mkDerivation {
       pname = "hi";
       version = "0.0.8.2";
       sha256 = "0h94wjxdr6g6n3rvkn1xsjqr49p9fgidmraifvz5mzryn6rmd18r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath parsec split template temporary-rc text time
       ];
       testDepends = [
         doctest filepath hspec HUnit parsec split template temporary-rc
         text time
       ];
       homepage = "https://github.com/fujimura/hi";
       description = "Generate scaffold for cabal project";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hiccup" = callPackage
    ({ mkDerivation, HUnit, mtl, parsec, random, readline, time }:
     mkDerivation {
       pname = "hiccup";
       version = "0.40";
       sha256 = "1skzr5ipxz61zrndwifkngw70zdf2yh5f8qpbmfzaq0bscrzdxg5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HUnit mtl parsec random readline time ];
       homepage = "http://hiccup.googlecode.com/";
       description = "Relatively efficient Tcl interpreter with support for basic operations";
       license = "GPL";
     }) {};

  "hichi" = callPackage
    ({ mkDerivation, mtl, network }:
     mkDerivation {
       pname = "hichi";
       version = "0.0.1";
       sha256 = "1f5cqqw9zn1nji0k2vp0ln1fdbzv9iwjqiaw9vd77kz9pz7p0kvq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl network ];
       description = "haskell robot for IChat protocol";
       license = "GPL";
     }) {};

  "hidapi" = callPackage
    ({ mkDerivation, deepseq-generics, udev }:
     mkDerivation {
       pname = "hidapi";
       version = "0.1.3";
       sha256 = "0ql6avpwi2m89rrglj9zk3fyi8vl91xswagqv8h24b2xgm7pw5i0";
       buildDepends = [ deepseq-generics ];
       extraLibraries = [ udev ];
       homepage = "https://github.com/vahokif/haskell-hidapi";
       description = "Haskell bindings to HIDAPI";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) udev; };

  "hieraclus" = callPackage
    ({ mkDerivation, HUnit, mtl, multiset }:
     mkDerivation {
       pname = "hieraclus";
       version = "0.1.2.1";
       sha256 = "11fjfmdjzvid0352d346p5xf44bl7dn8bd8pms5pi34xysdyr7pg";
       buildDepends = [ HUnit mtl multiset ];
       description = "Automated clustering of arbitrary elements in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hierarchical-clustering" = callPackage
    ({ mkDerivation, hspec, HUnit, QuickCheck }:
     mkDerivation {
       pname = "hierarchical-clustering";
       version = "0.4.4";
       sha256 = "1hm47fccji8dn70477ww7s6846mxrmgr5n056c11dh9azz5jl5x2";
       testDepends = [ hspec HUnit QuickCheck ];
       description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hierarchical-clustering-diagrams" = callPackage
    ({ mkDerivation, diagrams-cairo, diagrams-lib
     , hierarchical-clustering, hspec, HUnit
     }:
     mkDerivation {
       pname = "hierarchical-clustering-diagrams";
       version = "0.3";
       sha256 = "0yq3sh6xn3p1jzp3w33zv1sx7yhv9v2ddcqd27cl3rm6lhph81jc";
       buildDepends = [ diagrams-lib hierarchical-clustering ];
       testDepends = [
         diagrams-cairo diagrams-lib hierarchical-clustering hspec HUnit
       ];
       description = "Draw diagrams of dendrograms made by hierarchical-clustering";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hierarchical-exceptions" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hierarchical-exceptions";
       version = "1.0.1";
       sha256 = "1yzhw7kgz5iljm8ndh5kyr18367cl6l120m1gkn5x9hpsh9mlamm";
       description = "Template Haskell functions to easily create exception hierarchies";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "hiernotify" = callPackage
    ({ mkDerivation, filepath, mtl, stm, timers-updatable }:
     mkDerivation {
       pname = "hiernotify";
       version = "2011.4.12";
       sha256 = "1imgwi6b0cn9y4y7vgqsyfgsyxjvsl1wkmqmrf51jkfqasnqsqh5";
       buildDepends = [ filepath mtl stm timers-updatable ];
       homepage = "http://github.com/paolino/hiernotify";
       description = "Notification library for a filesystem hierarchy";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "highWaterMark" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "highWaterMark";
       version = "0.1.1";
       sha256 = "1bwvhrzvrf004lypf0zrx6q6k6fn5qwvlk45vppmnv65v9vq519p";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://www.cs.mu.oz.au/~bjpop/code.html";
       description = "Memory usage statistics";
       license = "GPL";
     }) {};

  "higher-leveldb" = callPackage
    ({ mkDerivation, cereal, data-default, hspec, leveldb-haskell
     , lifted-base, monad-control, mtl, resourcet, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "higher-leveldb";
       version = "0.2.0.0";
       sha256 = "1al8l96ysmcjx3g93ryfr939jqhjqk8g5bvww5gj9mx6pdkqrcm3";
       buildDepends = [
         cereal data-default leveldb-haskell lifted-base monad-control mtl
         resourcet transformers transformers-base
       ];
       testDepends = [
         cereal hspec leveldb-haskell lifted-base monad-control mtl
         resourcet transformers transformers-base
       ];
       homepage = "https://github.com/jeremyjh/higher-leveldb";
       description = "A rich monadic API for working with leveldb databases";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "higherorder" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "higherorder";
       version = "0.0";
       sha256 = "06cqhk9jalyps4v9w6wmpy9jdj3piwsp0wl3fvkzwa5iydlyvisz";
       editedCabalFile = "0nflwfx4gng0kk2lxfsrrk10sgjln7jq4zl3ydv8i0n4m472b1y5";
       description = "Some higher order functions for Bool and []";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "highlight-versions" = callPackage
    ({ mkDerivation, ansi-terminal, Cabal, hackage-db }:
     mkDerivation {
       pname = "highlight-versions";
       version = "0.1.3.4";
       sha256 = "0gizqvn9a36hsvxvq9b76hbwpl3x0fgwba2l105d5ypzig9wss99";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ansi-terminal Cabal hackage-db ];
       description = "Highlight package versions which differ from the latest version on Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "highlighter" = callPackage
    ({ mkDerivation, blaze-html, filepath, mtl, pcre-light, text }:
     mkDerivation {
       pname = "highlighter";
       version = "0.2.2";
       sha256 = "1x381ngd2gg2ff2rj7dyqmhy1achly2wbssjhsrcm0p6sxqab21x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ blaze-html filepath mtl pcre-light text ];
       description = "source code highlighting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "highlighting-kate" = callPackage
    ({ mkDerivation, blaze-html, Diff, filepath, mtl, parsec
     , regex-pcre, utf8-string
     }:
     mkDerivation {
       pname = "highlighting-kate";
       version = "0.5.11";
       sha256 = "0jfgz4cyn6fylfrsk1yi0fykir8mhxdniq80h7hy5i2xv7qwf5vw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-html filepath mtl parsec regex-pcre utf8-string
       ];
       testDepends = [ blaze-html Diff filepath ];
       prePatch = "sed -i -e 's|regex-pcre-builtin >= .*|regex-pcre|' highlighting-kate.cabal";
       homepage = "http://github.com/jgm/highlighting-kate";
       description = "Syntax highlighting";
       license = "GPL";
     }) {};

  "hills" = callPackage
    ({ mkDerivation, filepath, optparse-applicative, text, transformers
     }:
     mkDerivation {
       pname = "hills";
       version = "0.1.1.0";
       sha256 = "0fankar6p0m6n1ffis4ww5x9dqdbjh9py63jirbimpdcrzcxcym5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath optparse-applicative text transformers ];
       homepage = "http://www.bubblycloud.com/hills/";
       description = "Generate STL models from SRTM elevation data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "himerge" = callPackage
    ({ mkDerivation, glib, gtk, mozembed, parallel }:
     mkDerivation {
       pname = "himerge";
       version = "0.20";
       sha256 = "0ivrl5wymqzwcn7vyr3anychlk35003ksxsvr463qz768vbcql00";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ glib gtk mozembed parallel ];
       homepage = "http://www.haskell.org/himerge";
       description = "Haskell Graphical User Interface for Emerge";
       license = "GPL";
     }) {};

  "himg" = callPackage
    ({ mkDerivation, gtk, HTTP, http-conduit, network, temporary }:
     mkDerivation {
       pname = "himg";
       version = "0.1.0.0";
       sha256 = "09ya9966fn3ss7xxc1cd0izb5js35gwr2r1km881w4455sknl093";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ gtk HTTP http-conduit network temporary ];
       homepage = "http://github.com/Fuuzetsu/himg";
       description = "Simple gtk2hs image viewer. Point it at an image and fire away.";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "himpy" = callPackage
    ({ mkDerivation, aeson, attoparsec, binary, cereal, MissingH
     , NetSNMP, network, protobuf, regex-posix, stm, text, type-level
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "himpy";
       version = "0.5.0";
       sha256 = "0rpgvv9hq8ai6imhsbfw95igfyqnnzdgx9mw6cpd8ch5kb6wfqig";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec binary cereal MissingH NetSNMP network protobuf
         regex-posix stm text type-level unordered-containers vector
       ];
       homepage = "https://github.com/pyr/himpy";
       description = "multithreaded snmp poller for riemann";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hindent" = callPackage
    ({ mkDerivation, data-default, haskell-src-exts, hspec, monad-loops
     , mtl, text
     }:
     mkDerivation {
       pname = "hindent";
       version = "4.0";
       sha256 = "1l4dhp55ps92zvz2nmhs1j4hfsbs0r5f2b7idjcy8ibng8sgb361";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-default haskell-src-exts monad-loops mtl text
       ];
       testDepends = [
         data-default haskell-src-exts hspec monad-loops mtl text
       ];
       description = "Extensible Haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hinduce-associations-apriori" = callPackage
    ({ mkDerivation, deepseq, hinduce-missingh, parallel, vector }:
     mkDerivation {
       pname = "hinduce-associations-apriori";
       version = "0.0.0.0";
       sha256 = "002ca2mxrmyvg1w5rr1n7ksc89qxqznasq0cw5grfr5h22pxs57z";
       buildDepends = [ deepseq hinduce-missingh parallel vector ];
       homepage = "https://github.com/roberth/hinduce-associations-apriori";
       description = "Apriori algorithm for association rule mining";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hinduce-classifier" = callPackage
    ({ mkDerivation, hinduce-missingh, layout }:
     mkDerivation {
       pname = "hinduce-classifier";
       version = "0.0.0.1";
       sha256 = "1cdx916xkpsy2ilsmmdkyqax2gb0cx6sgkydvjbiw7qibd76ylza";
       buildDepends = [ hinduce-missingh layout ];
       description = "Interface and utilities for classifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hinduce-classifier-decisiontree" = callPackage
    ({ mkDerivation, convertible, hinduce-classifier, hinduce-missingh
     , layout
     }:
     mkDerivation {
       pname = "hinduce-classifier-decisiontree";
       version = "0.0.0.1";
       sha256 = "1hdz4lbbpy2yc5j7chkagjvslsakmv3hbz2s7lpz0isfq7ls9idl";
       buildDepends = [
         convertible hinduce-classifier hinduce-missingh layout
       ];
       description = "Decision Tree Classifiers for hInduce";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hinduce-examples" = callPackage
    ({ mkDerivation, convertible, csv, hinduce-associations-apriori
     , hinduce-classifier, hinduce-classifier-decisiontree
     , hinduce-missingh, layout, vector
     }:
     mkDerivation {
       pname = "hinduce-examples";
       version = "0.0.0.2";
       sha256 = "17jnrc8iji5byqbd08llwk0mw9yi1dq3biaszqp9jyinf50hcb4w";
       buildDepends = [
         convertible csv hinduce-associations-apriori hinduce-classifier
         hinduce-classifier-decisiontree hinduce-missingh layout vector
       ];
       description = "Example data for hInduce";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hinduce-missingh" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hinduce-missingh";
       version = "0.0.0.0";
       sha256 = "1606fz8qhvwqidi798y3mxlmbmwn8yp3a4cl59j4i8s05vgbaj9z";
       homepage = "https://github.com/roberth/hinduce-missingh";
       description = "Utility functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hinotify" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hinotify";
       version = "0.3.7";
       sha256 = "0i7mxg9ilzcgijda6j3ya5xnpbxa3wm9xswdfif95jim9w82sw0b";
       homepage = "https://github.com/kolmodin/hinotify.git";
       description = "Haskell binding to inotify";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hinquire" = callPackage
    ({ mkDerivation, bifunctors, QuickCheck, test-framework
     , test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "hinquire";
       version = "0.1.1";
       sha256 = "1mm0qi1y2qkiknb5s2jbgc3zljda52mi4mmh0fh7z8ck5rnng1x1";
       buildDepends = [
         bifunctors QuickCheck test-framework test-framework-quickcheck2
         test-framework-th
       ];
       testDepends = [
         bifunctors QuickCheck test-framework test-framework-quickcheck2
         test-framework-th
       ];
       homepage = "https://github.com/joneshf/hinquire";
       description = "Generate armet style query strings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hinstaller" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "hinstaller";
       version = "2008.2.16";
       sha256 = "1ldfqx98w7inpj76xyi0drh2lykfjfq9r34hlbcw7mv4bgxp4l8c";
       buildDepends = [ Cabal filepath ];
       homepage = "http://www.wellquite.org/hinstaller/";
       description = "Installer wrapper for Haskell applications";
       license = "LGPL";
     }) {};

  "hint" = callPackage
    ({ mkDerivation, exceptions, extensible-exceptions, filepath
     , ghc-mtl, ghc-paths, HUnit, mtl, random, utf8-string
     }:
     mkDerivation {
       pname = "hint";
       version = "0.4.2.1";
       sha256 = "0nc545y1v3s1897f3ims7m37wnn288xyz1zb9sxqs6immdxyly0g";
       buildDepends = [
         exceptions extensible-exceptions filepath ghc-mtl ghc-paths mtl
         random utf8-string
       ];
       testDepends = [
         exceptions extensible-exceptions filepath HUnit mtl
       ];
       homepage = "http://hub.darcs.net/jcpetruzza/hint";
       description = "Runtime Haskell interpreter (GHC API wrapper)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hint-server" = callPackage
    ({ mkDerivation, eprocess, exceptions, hint, monad-loops, mtl }:
     mkDerivation {
       pname = "hint-server";
       version = "1.4.0";
       sha256 = "0iirk76n9j4iwll44gs4spnssv2kkxrw4ypp228gap5h4pyimvx5";
       buildDepends = [ eprocess exceptions hint monad-loops mtl ];
       description = "A server process that runs hint";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hinvaders" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "hinvaders";
       version = "0.1";
       sha256 = "01v5szci7kbp3w2jsdcnzv9j3lbcl5bvn9ipcvp3v2xvfjik110h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://www.cs.mu.oz.au/~bjpop/code.html";
       description = "Space Invaders";
       license = "GPL";
     }) {};

  "hinze-streams" = callPackage
    ({ mkDerivation, Stream }:
     mkDerivation {
       pname = "hinze-streams";
       version = "1.0";
       sha256 = "137jjwcs3a9n2zybkqqfdy2m1a2ahpdcmficwfmn7ykdz487xcsq";
       buildDepends = [ Stream ];
       homepage = "http://code.haskell.org/~dons/code/hinze-streams";
       description = "Streams and Unique Fixed Points";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hipe" = callPackage
    ({ mkDerivation, hgeometry, hxt, parsec, split, text, text-format
     }:
     mkDerivation {
       pname = "hipe";
       version = "0.2.0.0";
       sha256 = "1y8awzmvrvixlba1ndvw5rwm8i38lj1yf4mcfm6h7pmmvpdvr5ah";
       buildDepends = [ hgeometry hxt parsec split text text-format ];
       homepage = "http://fstaals.net/software/hipe";
       description = "Support for reading and writing ipe7 files (http://ipe7.sourceforge.net)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hips" = callPackage
    ({ mkDerivation, functors, mtl }:
     mkDerivation {
       pname = "hips";
       version = "0.1";
       sha256 = "0m3ribabhpdkwavhywjpc8iqqa9bbdl19d7g3agm4f402gd3rmvr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ functors mtl ];
       homepage = "http://closure.ath.cx/hips";
       description = "an IPS patcher";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hircules" = callPackage
    ({ mkDerivation, gtk, mtl, network, time, utf8-string }:
     mkDerivation {
       pname = "hircules";
       version = "0.4.1";
       sha256 = "1i291m3i3c082nsgg7mx2xx2a0q97kdmyashz26i4varqkwhz7qx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk mtl network time utf8-string ];
       description = "IRC client";
       license = "GPL";
     }) {};

  "hirt" = callPackage
    ({ mkDerivation, attoparsec, cmdargs, csv, hlbfgsb, hmatrix
     , mwc-random, numeric-extras, random, statistics, text, text-format
     , vector, vector-space
     }:
     mkDerivation {
       pname = "hirt";
       version = "0.0.1.1";
       sha256 = "0scn4gljgx0ig2fr4rfavk6k3pcychpxlasffd6gp2k1v3sb850v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec cmdargs csv hlbfgsb hmatrix mwc-random numeric-extras
         random statistics text text-format vector vector-space
       ];
       homepage = "https://people.ksp.sk/~ivan/hirt";
       description = "Calculates IRT 2PL and 3PL models";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hissmetrics" = callPackage
    ({ mkDerivation, conduit, http-conduit, http-types, text, time }:
     mkDerivation {
       pname = "hissmetrics";
       version = "0.5.1";
       sha256 = "1rz0yxng4szhmjj1n6d36ljv3388ch8nih09yjrxk4l83zd6hc6d";
       buildDepends = [ conduit http-conduit http-types text time ];
       homepage = "https://github.com/prowdsponsor/hissmetrics";
       description = "Unofficial API bindings to KISSmetrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hist-pl" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, cmdargs, hist-pl-dawg
     , hist-pl-fusion, hist-pl-lexicon, hist-pl-lmf, hist-pl-transliter
     , morfeusz, pipes, polimorf, text
     }:
     mkDerivation {
       pname = "hist-pl";
       version = "0.3.2";
       sha256 = "01c6k3f432yhcvcz7k4w29z7kbvhxlcnh57z1m47qbkymm5b4y7b";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty cmdargs hist-pl-dawg hist-pl-fusion
         hist-pl-lexicon hist-pl-lmf hist-pl-transliter morfeusz pipes
         polimorf text
       ];
       homepage = "https://github.com/kawu/hist-pl/tree/master/umbrella";
       description = "Umbrella package for the historical dictionary of Polish";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hist-pl-dawg" = callPackage
    ({ mkDerivation, binary, dawg, text, text-binary }:
     mkDerivation {
       pname = "hist-pl-dawg";
       version = "0.2.1";
       sha256 = "1ghhwabi46dimzfk79nkcnk8s4rlcyvqfcpr8ay7sfy7xns2ahjg";
       buildDepends = [ binary dawg text text-binary ];
       homepage = "https://github.com/kawu/hist-pl/tree/master/dawg";
       description = "A generic, DAWG-based dictionary";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hist-pl-fusion" = callPackage
    ({ mkDerivation, binary, dawg, hist-pl-dawg, hist-pl-lexicon
     , polimorf, text, text-binary
     }:
     mkDerivation {
       pname = "hist-pl-fusion";
       version = "0.5.3";
       sha256 = "0ism9qw3g0x0r40qm6v0gj1b2fj5zdnfik7b4h0b0dqyi08m6sq3";
       buildDepends = [
         binary dawg hist-pl-dawg hist-pl-lexicon polimorf text text-binary
       ];
       homepage = "https://github.com/kawu/hist-pl/tree/master/fusion";
       description = "Merging historical dictionary with PoliMorf";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hist-pl-lexicon" = callPackage
    ({ mkDerivation, binary, dawg, filepath, hist-pl-dawg
     , hist-pl-types, pipes, text, transformers
     }:
     mkDerivation {
       pname = "hist-pl-lexicon";
       version = "0.6.1";
       sha256 = "1baq1a5l44q56msp2y2m9hyd5v841jkxm0cdlgi816fmc0768cqk";
       buildDepends = [
         binary dawg filepath hist-pl-dawg hist-pl-types pipes text
         transformers
       ];
       homepage = "https://github.com/kawu/hist-pl/tree/master/lexicon";
       description = "A binary representation of the historical dictionary of Polish";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hist-pl-lmf" = callPackage
    ({ mkDerivation, hist-pl-types, polysoup, text }:
     mkDerivation {
       pname = "hist-pl-lmf";
       version = "0.1.0";
       sha256 = "146vz15fig8k1wcvcw7fg64abxvg1nyarvhigz9jkzf5yngkzwvm";
       buildDepends = [ hist-pl-types polysoup text ];
       homepage = "https://github.com/kawu/hist-pl/tree/master/lmf";
       description = "LMF parsing for the historical dictionary of Polish";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hist-pl-transliter" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "hist-pl-transliter";
       version = "0.1.1";
       sha256 = "146ywyh67a0hasgcpfmffrj8w1kg6anksaa3mm9f80k83shqhvrb";
       buildDepends = [ parsec ];
       homepage = "https://github.com/kawu/hist-pl/tree/master/transliter";
       description = "A simple EDSL for transliteration rules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hist-pl-types" = callPackage
    ({ mkDerivation, binary, text, text-binary }:
     mkDerivation {
       pname = "hist-pl-types";
       version = "0.1.0";
       sha256 = "0i13aj1xcwap0k3w48vyiiganbvj93zydawmw3gw7m0kr6nl5l9v";
       buildDepends = [ binary text text-binary ];
       homepage = "https://github.com/kawu/hist-pl/tree/master/types";
       description = "Types in the historical dictionary of Polish";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "histogram-fill" = callPackage
    ({ mkDerivation, deepseq, monad-primitive, primitive, vector }:
     mkDerivation {
       pname = "histogram-fill";
       version = "0.8.3.0";
       sha256 = "0k9qfrjf7zdxx8iw9yqy6lvn2p3c2mpzfbbx713rripf6y531m3g";
       buildDepends = [ deepseq monad-primitive primitive vector ];
       homepage = "https://github.com/Shimuuar/histogram-fill/";
       description = "Library for histograms creation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "histogram-fill-binary" = callPackage
    ({ mkDerivation, binary, histogram-fill, vector }:
     mkDerivation {
       pname = "histogram-fill-binary";
       version = "0.6.2.1";
       sha256 = "0bv70h1q8h50x3sr8ia6855vw0rrbvnzlnnh45k4i1dfadj6zsi2";
       buildDepends = [ binary histogram-fill vector ];
       homepage = "https://github.com/Shimuuar/histogram-fill/";
       description = "Binary instances for histogram-fill package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "histogram-fill-cereal" = callPackage
    ({ mkDerivation, cereal, histogram-fill, vector }:
     mkDerivation {
       pname = "histogram-fill-cereal";
       version = "0.6.2.0";
       sha256 = "17bnn6cb64333ak0qh841192jh2zwxg73rbc3zh5agp00wi23ism";
       buildDepends = [ cereal histogram-fill vector ];
       homepage = "http://bitbucket.org/Shimuuar/histogram-fill-cereal/";
       description = "Library for histograms creation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "historian" = callPackage
    ({ mkDerivation, filepath, regex-compat, regex-posix }:
     mkDerivation {
       pname = "historian";
       version = "0.0.1";
       sha256 = "1lgajnq092jk4izy86qcw71ghxz6b8mprm4ha3ybrm5i2rlh12r6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath regex-compat regex-posix ];
       description = "Extract the interesting bits from shell history";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hit" = callPackage
    ({ mkDerivation, attoparsec, bytedump, cryptohash, hourglass, HUnit
     , mtl, parsec, patience, QuickCheck, random, system-fileio
     , system-filepath, test-framework, test-framework-quickcheck2
     , unix-compat, vector, zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "hit";
       version = "0.6.2";
       sha256 = "07lfjbn48v8ykkyj15diy4a9kpgzc93gv0l1rdfcacl3f26a97hs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec cryptohash hourglass mtl parsec patience random
         system-fileio system-filepath unix-compat vector zlib zlib-bindings
       ];
       testDepends = [
         bytedump hourglass HUnit QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hit";
       description = "Git operations in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hjpath" = callPackage
    ({ mkDerivation, hjson, parsec }:
     mkDerivation {
       pname = "hjpath";
       version = "3.0.1";
       sha256 = "0wmzxwi24q7r0yxnalzqnn3k0bzf7wc4ql26dv94pvzir156kahj";
       buildDepends = [ hjson parsec ];
       homepage = "http://bitcheese.net/wiki/code/hjpath";
       description = "XPath-like syntax for querying JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hjs" = callPackage
    ({ mkDerivation, mtl, parsec, regex-compat }:
     mkDerivation {
       pname = "hjs";
       version = "0.2.1";
       sha256 = "0gk4misxbkc2x8hh7ynrj1ma91fs0h6q702w6r0kjq136fh48zhi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec regex-compat ];
       homepage = "http://www.haskell.org/haskellwiki/Libraries_and_tools/HJS";
       description = "JavaScript Parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hjsmin" = callPackage
    ({ mkDerivation, blaze-builder, Cabal, HUnit, language-javascript
     , optparse-applicative, QuickCheck, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "hjsmin";
       version = "0.1.4.7";
       sha256 = "1gw9is6piqrqxnrwp8v3vij90icmym58rxqnnklrcjfi3ai7y58f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder language-javascript optparse-applicative text
       ];
       testDepends = [
         blaze-builder Cabal HUnit language-javascript QuickCheck
         test-framework test-framework-hunit text
       ];
       homepage = "http://github.com/alanz/hjsmin";
       description = "Haskell implementation of a javascript minifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hjson" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "hjson";
       version = "1.3.2";
       sha256 = "1r59g5ypqjsldflsddg7pzpa6j8jps5nwm4h9cwiw7qk734rjik8";
       buildDepends = [ parsec ];
       description = "JSON parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hjson-query" = callPackage
    ({ mkDerivation, hjson }:
     mkDerivation {
       pname = "hjson-query";
       version = "1.0.2";
       sha256 = "0sj86rm5pz0q9079f5kjnpz51dxvvq72waaf8h64jzrrhkpz8mlx";
       buildDepends = [ hjson ];
       description = "library for querying from JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hlatex" = callPackage
    ({ mkDerivation, base-unicode-symbols, derive, filepath, frquotes
     , mtl, transformers, uniplate, utf8-string
     }:
     mkDerivation {
       pname = "hlatex";
       version = "0.3";
       sha256 = "03v8law4yfm63f44zyiqngjmpismk8clqisq4sl4gcp1yc1hn704";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols derive filepath frquotes mtl transformers
         uniplate utf8-string
       ];
       description = "A library to build valid LaTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hlbfgsb" = callPackage
    ({ mkDerivation, gfortran, HUnit, test-framework
     , test-framework-hunit, vector
     }:
     mkDerivation {
       pname = "hlbfgsb";
       version = "0.0.1.0";
       sha256 = "0nar59rbi5zr6gi2k0f49f09fnxcmshnq9bb2dh973a4y3gcw6dx";
       buildDepends = [ vector ];
       testDepends = [ HUnit test-framework test-framework-hunit vector ];
       buildTools = [ gfortran ];
       extraLibraries = [ gfortran ];
       homepage = "http://people.ksp.sk/~ivan/hlbfgsb";
       description = "Haskell binding to L-BFGS-B version 3.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hlcm" = callPackage
    ({ mkDerivation, bytestring-csv, parallel }:
     mkDerivation {
       pname = "hlcm";
       version = "0.2.2";
       sha256 = "14yqc02kfp2c9i22inma29cprqz9k8yx6c7m90kwimv4psv8766a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bytestring-csv parallel ];
       homepage = "http://membres-liglab.imag.fr/termier/HLCM/hlcm.html";
       description = "Fast algorithm for mining closed frequent itemsets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hledger" = callPackage
    ({ mkDerivation, cmdargs, csv, filepath, haskeline, hledger-lib
     , HUnit, mtl, parsec, pretty-show, regexpr, safe, shakespeare
     , shakespeare-text, split, tabular, test-framework
     , test-framework-hunit, text, time, transformers, utf8-string
     , wizards
     }:
     mkDerivation {
       pname = "hledger";
       version = "0.23.3";
       sha256 = "10qrjwfmpddba6m3n5f527l77g3xf9d8fyxyhrl5593g6bgq9v7m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs filepath haskeline hledger-lib HUnit mtl parsec pretty-show
         regexpr safe shakespeare shakespeare-text split tabular text time
         utf8-string wizards
       ];
       testDepends = [
         cmdargs csv filepath haskeline hledger-lib HUnit mtl parsec
         pretty-show regexpr safe shakespeare shakespeare-text split tabular
         test-framework test-framework-hunit text time transformers wizards
       ];
       homepage = "http://hledger.org";
       description = "The main command-line interface for the hledger accounting tool";
       license = "GPL";
     }) {};

  "hledger-chart" = callPackage
    ({ mkDerivation, Chart, cmdargs, colour, hledger, hledger-lib
     , HUnit, safe, time
     }:
     mkDerivation {
       pname = "hledger-chart";
       version = "0.16.1";
       sha256 = "1yk563032ir98gqdvxazjjl1alg6q1pflzawh11pr3zrdnriracn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Chart cmdargs colour hledger hledger-lib HUnit safe time
       ];
       homepage = "http://hledger.org";
       description = "A pie chart image generator for the hledger accounting tool";
       license = "GPL";
     }) {};

  "hledger-diff" = callPackage
    ({ mkDerivation, hledger-lib, time }:
     mkDerivation {
       pname = "hledger-diff";
       version = "0.2.0";
       sha256 = "0g4rz6567w7xr8qdkl100lmb77mfs452gsk6hsmgh15faw8fa0yn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hledger-lib time ];
       homepage = "https://github.com/gebner/hledger-diff";
       description = "Compares the transactions in two ledger files";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hledger-interest" = callPackage
    ({ mkDerivation, Cabal, hledger-lib, mtl, time }:
     mkDerivation {
       pname = "hledger-interest";
       version = "1.4.3";
       sha256 = "1nj50zi4p6rs0nl4656rr0vkbh7kdi49z1l53nypfqs3rmjgicsn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal hledger-lib mtl time ];
       homepage = "http://github.com/peti/hledger-interest";
       description = "computes interest for a given account";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hledger-irr" = callPackage
    ({ mkDerivation, Cabal, hledger-lib, statistics, time }:
     mkDerivation {
       pname = "hledger-irr";
       version = "0.1.1.4";
       sha256 = "0nqd8br86d71dpwq7p8956q74pgqdimid42xikp9zvf632x2s8ax";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal hledger-lib statistics time ];
       description = "computes the internal rate of return of an investment";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hledger-lib" = callPackage
    ({ mkDerivation, cmdargs, csv, filepath, HUnit, mtl, parsec
     , pretty-show, regex-tdfa, regexpr, safe, split, test-framework
     , test-framework-hunit, time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "hledger-lib";
       version = "0.23.3";
       sha256 = "0in61wrkbdllghdkxmwwn2b2k2g9w7kqijwl58szfx9h7w8g3dbi";
       buildDepends = [
         cmdargs csv filepath HUnit mtl parsec pretty-show regex-tdfa
         regexpr safe split time transformers utf8-string
       ];
       testDepends = [
         cmdargs csv filepath HUnit mtl parsec pretty-show regex-tdfa
         regexpr safe split test-framework test-framework-hunit time
         transformers
       ];
       homepage = "http://hledger.org";
       description = "Core data types, parsers and utilities for the hledger accounting tool";
       license = "GPL";
     }) {};

  "hledger-vty" = callPackage
    ({ mkDerivation, cmdargs, hledger, hledger-lib, HUnit, safe, time
     , vty
     }:
     mkDerivation {
       pname = "hledger-vty";
       version = "0.16.1";
       sha256 = "10aq9apxz6nrzvvynha0wkhy34dn8dybizr8assni6rns8ylh188";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs hledger hledger-lib HUnit safe time vty ];
       homepage = "http://hledger.org";
       description = "A curses-style console interface for the hledger accounting tool";
       license = "GPL";
     }) {};

  "hledger-web" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, clientsession, cmdargs
     , conduit-extra, data-default, filepath, hamlet, hjsmin, hledger
     , hledger-lib, hspec, http-client, http-conduit, HUnit, json
     , network-conduit, parsec, regexpr, safe, shakespeare
     , shakespeare-text, text, time, transformers, wai, wai-extra
     , wai-handler-launch, warp, yaml, yesod, yesod-core, yesod-static
     , yesod-test
     }:
     mkDerivation {
       pname = "hledger-web";
       version = "0.23.3";
       sha256 = "1d51gcyj5k4djllf0f2mny9l5i6gfh8cc3pgvjl8mxqi6ky6xarq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-html blaze-markup clientsession cmdargs conduit-extra
         data-default filepath hamlet hjsmin hledger hledger-lib http-client
         http-conduit HUnit json network-conduit parsec regexpr safe
         shakespeare shakespeare-text text time transformers wai wai-extra
         wai-handler-launch warp yaml yesod yesod-core yesod-static
       ];
       testDepends = [ hspec yesod yesod-test ];
       homepage = "http://hledger.org";
       description = "A web interface for the hledger accounting tool";
       license = "GPL";
     }) {};

  "hlibev" = callPackage
    ({ mkDerivation, ev, network }:
     mkDerivation {
       pname = "hlibev";
       version = "0.4.0";
       sha256 = "0416w0k5ahnj57gc6n15ihpsyznmm36s1sjkycl35l7s8bxdldyw";
       buildDepends = [ network ];
       extraLibraries = [ ev ];
       homepage = "http://github.com/aycanirican/hlibev";
       description = "FFI interface to libev";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hlibfam" = callPackage
    ({ mkDerivation, fam }:
     mkDerivation {
       pname = "hlibfam";
       version = "0.2";
       sha256 = "10rxwfq2ppmqs3kjb8cq6l04g0qsxqy7w7ri7dj013kiz7rzk1yd";
       extraLibraries = [ fam ];
       description = "FFI interface to libFAM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hlibgit2" = callPackage
    ({ mkDerivation, bindings-DSL, git, openssl, zlib }:
     mkDerivation {
       pname = "hlibgit2";
       version = "0.18.0.13";
       sha256 = "1bslg51kkhnwm48kxaad4izq3xmzv6dpqy10a5kh16vr5zy3w5hz";
       buildDepends = [ bindings-DSL zlib ];
       testDepends = [ git ];
       extraLibraries = [ openssl ];
       description = "Low-level bindings to libgit2";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hlint" = callPackage
    ({ mkDerivation, ansi-terminal, cmdargs, cpphs, extra, filepath
     , haskell-src-exts, hscolour, transformers, uniplate
     }:
     mkDerivation {
       pname = "hlint";
       version = "1.9.13";
       sha256 = "1cj487l3jvrp43acwk3ihc5mzyqwxxa0nqahad27sd3bbmx86p4a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cmdargs cpphs extra filepath haskell-src-exts
         hscolour transformers uniplate
       ];
       homepage = "http://community.haskell.org/~ndm/hlint/";
       description = "Source code suggestions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hlogger" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "hlogger";
       version = "0.0.3.0";
       sha256 = "1q3jsnxy7x0lv7wqfv9hlqnr22661k4agbb8yjbhj32fxyjqrn4f";
       buildDepends = [ time ];
       homepage = "http://www.pontarius.org/sub-projects/hlogger/";
       description = "Simple, concurrent, extendable and easy-to-use logging library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hlongurl" = callPackage
    ({ mkDerivation, curl, json, regex-base, regex-posix }:
     mkDerivation {
       pname = "hlongurl";
       version = "0.9.3";
       sha256 = "1njj7cvj9zjy0gghkr33bzwsv6lj27xvf56kicsr0pyyn76wplv5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ curl json regex-base regex-posix ];
       description = "Library and utility interfacing to longurl.org";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hls" = callPackage
    ({ mkDerivation, hcg-minus, hps }:
     mkDerivation {
       pname = "hls";
       version = "0.15";
       sha256 = "0h32fyvnqkxx8c9vfpdjvnqaxkvr8b15myjavxmnm6kwh7v2796l";
       buildDepends = [ hcg-minus hps ];
       homepage = "http://rd.slavepianos.org/t/hls";
       description = "Haskell Lindenmayer Systems";
       license = "GPL";
     }) {};

  "hly" = callPackage
    ({ mkDerivation, filepath, hmt }:
     mkDerivation {
       pname = "hly";
       version = "0.15";
       sha256 = "192szfq39g3fdcdsxj4bsi13bfha8gjbqbixav3iywmdsgxp1hj8";
       buildDepends = [ filepath hmt ];
       homepage = "http://rd.slavepianos.org/t/hly";
       description = "Haskell LilyPond";
       license = "GPL";
     }) {};

  "hmark" = callPackage
    ({ mkDerivation, random, safe, tokyocabinet-haskell, utf8-string }:
     mkDerivation {
       pname = "hmark";
       version = "1.0.0";
       sha256 = "0wk69qy1zq5wdmiw7pjrglcypqfm79fzl9yay67s0mvl2k5l0ms4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ random safe tokyocabinet-haskell utf8-string ];
       homepage = "http://bitcheese.net/wiki/code/hmark";
       description = "A tool and library for Markov chains based text generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmarkup" = callPackage
    ({ mkDerivation, mtl, network, parsec, xhtml }:
     mkDerivation {
       pname = "hmarkup";
       version = "3000.0.1";
       sha256 = "0p6f1jd1b01dvzffiac17f8z0l403f54vrph8k9b3549lpjfh452";
       buildDepends = [ mtl network parsec xhtml ];
       description = "Simple wikitext-like markup format implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix" = callPackage
    ({ mkDerivation, binary, blas, deepseq, liblapack, random, split
     , storable-complex, vector
     }:
     mkDerivation {
       pname = "hmatrix";
       version = "0.16.1.1";
       sha256 = "1iph799ra5xjbrana3q93pkrpk7db09f51pyr4s4r9bz2pvm04k0";
       buildDepends = [
         binary deepseq random split storable-complex vector
       ];
       extraLibraries = [ blas liblapack ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numeric Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) blas; };

  "hmatrix-banded" = callPackage
    ({ mkDerivation, hmatrix, lapack, transformers }:
     mkDerivation {
       pname = "hmatrix-banded";
       version = "0.0";
       sha256 = "05jgm3hnlylnfhavcicjbhbxq929whm6mapggfwbxkzajhh0paaj";
       buildDepends = [ hmatrix transformers ];
       extraLibraries = [ lapack ];
       homepage = "http://code.haskell.org/~thielema/hmatrix-banded/";
       description = "HMatrix interface to LAPACK functions for banded matrices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix-csv" = callPackage
    ({ mkDerivation, cassava, hmatrix, vector }:
     mkDerivation {
       pname = "hmatrix-csv";
       version = "0.1.0.0";
       sha256 = "07v9cwqfvvirsis0wmh9zbms6b5023khxf2jb561899cvqaw9f17";
       buildDepends = [ cassava hmatrix vector ];
       homepage = "https://github.com/grtlr/hmatrix-csv";
       description = "CSV encoding and decoding for hmatrix";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix-glpk" = callPackage
    ({ mkDerivation, glpk, hmatrix }:
     mkDerivation {
       pname = "hmatrix-glpk";
       version = "0.4.0.2";
       sha256 = "0ixsybmhm3fiwb3kgxm0bgnbbxkgv0k42k8phd7k78mhhsd5jmng";
       buildDepends = [ hmatrix ];
       extraLibraries = [ glpk ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Linear Programming based on GLPK";
       license = "GPL";
     }) {};

  "hmatrix-gsl" = callPackage
    ({ mkDerivation, gsl, hmatrix, random, vector }:
     mkDerivation {
       pname = "hmatrix-gsl";
       version = "0.16.0.2";
       sha256 = "1l865v2vpjl7f5741z58m9gw1ksskgzfm5gzp9pxiqazsgb2h5ym";
       buildDepends = [ hmatrix random vector ];
       pkgconfigDepends = [ gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numerical computation";
       license = "GPL";
     }) {};

  "hmatrix-gsl-stats" = callPackage
    ({ mkDerivation, binary, hmatrix, storable-complex }:
     mkDerivation {
       pname = "hmatrix-gsl-stats";
       version = "0.2";
       sha256 = "1xwl2qgji2ib0gml9hqljzwd4wrqfjpvnzm3iq2g7kcwwfg1q0dm";
       buildDepends = [ binary hmatrix storable-complex ];
       homepage = "http://code.haskell.org/hmatrix-gsl-stats";
       description = "GSL Statistics interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix-mmap" = callPackage
    ({ mkDerivation, hmatrix, mmap }:
     mkDerivation {
       pname = "hmatrix-mmap";
       version = "0.0.5";
       sha256 = "03z1f1xqw4hqh41q6hh8p103cl7dg9hqcawqlinapfmkvw5mzy8d";
       buildDepends = [ hmatrix mmap ];
       homepage = "http://github.com/alanfalloon/hmatrix-mmap";
       description = "Memory map Vector from disk into memory efficiently";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix-nipals" = callPackage
    ({ mkDerivation, hmatrix }:
     mkDerivation {
       pname = "hmatrix-nipals";
       version = "0.2";
       sha256 = "0afmpwfi4hqz5bpcsm579mcvz1dx7vxqmqj2rb6axnw9512xyarj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hmatrix ];
       homepage = "http://github.com/alanfalloon/hmatrix-nipals";
       description = "NIPALS method for Principal Components Analysis on large data-sets";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "hmatrix-quadprogpp" = callPackage
    ({ mkDerivation, hmatrix, QuadProgpp, vector }:
     mkDerivation {
       pname = "hmatrix-quadprogpp";
       version = "0.2.0.1";
       sha256 = "1r03svlxzk4r4fw5brrixjf3dlfdvr2b7f80075ynm9ajzzpfirr";
       buildDepends = [ hmatrix vector ];
       extraLibraries = [ QuadProgpp ];
       description = "Bindings to the QuadProg++ quadratic programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix-repa" = callPackage
    ({ mkDerivation, hmatrix, repa, vector }:
     mkDerivation {
       pname = "hmatrix-repa";
       version = "0.1.2.1";
       sha256 = "0xx02kll13c2zw5x13p9746av2yhgpybfxi508qgi84drfa8caa8";
       buildDepends = [ hmatrix repa vector ];
       homepage = "http://code.haskell.org/hmatrix-repa";
       description = "Adaptors for interoperability between hmatrix and repa";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix-special" = callPackage
    ({ mkDerivation, gsl, hmatrix, hmatrix-gsl }:
     mkDerivation {
       pname = "hmatrix-special";
       version = "0.3.0.1";
       sha256 = "1ziqzbfrk7xyah5n0cys1ccnmj2z91wxdamanv3y5v717zhdrqix";
       buildDepends = [ hmatrix hmatrix-gsl ];
       extraLibraries = [ gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Interface to GSL special functions";
       license = "GPL";
     }) {};

  "hmatrix-static" = callPackage
    ({ mkDerivation, haskell-src-meta, hmatrix, parsec, tfp }:
     mkDerivation {
       pname = "hmatrix-static";
       version = "0.3.0.2";
       sha256 = "1qjxj8k4cracinyyjpk0nr3c5n119v39kpxig78c11cjhvhm3zgi";
       buildDepends = [ haskell-src-meta hmatrix parsec tfp ];
       homepage = "http://code.haskell.org/hmatrix-static/";
       description = "hmatrix with vector and matrix sizes encoded in types";
       license = "GPL";
     }) {};

  "hmatrix-svdlibc" = callPackage
    ({ mkDerivation, hmatrix }:
     mkDerivation {
       pname = "hmatrix-svdlibc";
       version = "0.3.1";
       sha256 = "0mi41n31i4bjnqjnsmqs4mbrprg3sx4vx4wqixgyp3qk0jm6lijm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hmatrix ];
       homepage = "http://github.com/bgamari/hmatrix-svdlibc";
       description = "SVDLIBC bindings for HMatrix";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmatrix-syntax" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, hmatrix }:
     mkDerivation {
       pname = "hmatrix-syntax";
       version = "0.1.2.1";
       sha256 = "0qy5dx480hf9i03d16kylg2l8dsj10lzwfbik5ijqa4x3h7h038b";
       buildDepends = [ haskell-src-exts haskell-src-meta hmatrix ];
       homepage = "http://github.com/reinerp/hmatrix-syntax";
       description = "MATLAB-like syntax for hmatrix vectors and matrices";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hmatrix-tests" = callPackage
    ({ mkDerivation, hmatrix, hmatrix-gsl, HUnit, QuickCheck, random }:
     mkDerivation {
       pname = "hmatrix-tests";
       version = "0.4.1.0";
       sha256 = "0jrq9719japf9a7v14xbwqj4fs8y14wkji13jhyn00x1xpp4nkh3";
       buildDepends = [ hmatrix hmatrix-gsl HUnit QuickCheck random ];
       testDepends = [ HUnit QuickCheck random ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Tests for hmatrix";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmeap" = callPackage
    ({ mkDerivation, bytestring-lexing, delimited-text, parsec }:
     mkDerivation {
       pname = "hmeap";
       version = "0.15";
       sha256 = "19hip2xzlsgj1fd8y4l4zhn4lcj8n8qyrayn6idzvlskx4vca0bh";
       buildDepends = [ bytestring-lexing delimited-text parsec ];
       homepage = "http://rd.slavepianos.org/t/hmeap";
       description = "Haskell Meapsoft Parser";
       license = "GPL";
     }) {};

  "hmeap-utils" = callPackage
    ({ mkDerivation, bytestring-lexing, delimited-text, gnuplot
     , hmatrix, hmeap, hosc, hsc3, parsec
     }:
     mkDerivation {
       pname = "hmeap-utils";
       version = "0.14";
       sha256 = "1dnmvzy7vkx2rfbkkqapfpql8h0gm9sq0333r90hy5nsyl9hhbq8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bytestring-lexing delimited-text gnuplot hmatrix hmeap hosc hsc3
         parsec
       ];
       homepage = "http://slavepianos.org/rd/?t=hmeap-utils";
       description = "Haskell Meapsoft Parser Utilities";
       license = "GPL";
     }) {};

  "hmemdb" = callPackage
    ({ mkDerivation, binary, monad-stm, stm, transformers }:
     mkDerivation {
       pname = "hmemdb";
       version = "0.4.0.0";
       sha256 = "0zdz9nkianzviy0rn7fvzs01ymnz89p25kiis64rfvj3zwxk535w";
       buildDepends = [ binary monad-stm stm transformers ];
       description = "In-memory relational database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmidi" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "hmidi";
       version = "0.2.1.0";
       sha256 = "143w042krxayn2xbn3ag3mkfd9j4075adrjqs651hh3mbr8s9725";
       buildDepends = [ stm ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Binding to the OS level MIDI services";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmk" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, pcre-light }:
     mkDerivation {
       pname = "hmk";
       version = "0.9.7.3";
       sha256 = "08cq1lk1nkhkcjjjvkzy4xrr0gx6j2lpsv2vmj25kg6j9j33ilxh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec pcre-light ];
       homepage = "http://www.github.com/mboes/hmk";
       description = "A make alternative based on Plan9's mk";
       license = "GPL";
     }) {};

  "hmm" = callPackage
    ({ mkDerivation, data-memocombinators, list-extras, logfloat }:
     mkDerivation {
       pname = "hmm";
       version = "0.2.1.1";
       sha256 = "08gdicnhls8y180il2k51zrcra1acw8m1qw0s2nz5w57mhfnxq31";
       buildDepends = [ data-memocombinators list-extras logfloat ];
       homepage = "https://github.com/mikeizbicki/hmm";
       description = "A hidden markov model library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmp3" = callPackage
    ({ mkDerivation, binary, curses, mersenne-random, pcre-light, zlib
     }:
     mkDerivation {
       pname = "hmp3";
       version = "1.5.2.1";
       sha256 = "0kfqzydilajcpaazpbhmpv3h18n3lx839wxmcbjlzvjc78ajblb3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary mersenne-random pcre-light zlib ];
       extraLibraries = [ curses ];
       homepage = "http://www.cse.unsw.edu.au/~dons/hmp3.html";
       description = "An ncurses mp3 player written in Haskell";
       license = "GPL";
     }) {};

  "hmpfr" = callPackage
    ({ mkDerivation, mpfr }:
     mkDerivation {
       pname = "hmpfr";
       version = "0.3.3.5";
       sha256 = "00gqrmfwg7hk21iyfbma8h4ahpxgj21wi9fcxjdms506ahk7rwf4";
       extraLibraries = [ mpfr ];
       homepage = "http://code.google.com/p/hmpfr/";
       description = "Haskell binding to the MPFR library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hmt" = callPackage
    ({ mkDerivation, colour, data-ordlist, filepath, lazy-csv, logict
     , multiset-comb, parsec, permutation, primes, safe, split
     , utf8-string
     }:
     mkDerivation {
       pname = "hmt";
       version = "0.15";
       sha256 = "051kgsh9nl5f1nw8a24x7ds18g6ppzbhk3d9lf74nvvnccnzg3a9";
       buildDepends = [
         colour data-ordlist filepath lazy-csv logict multiset-comb parsec
         permutation primes safe split utf8-string
       ];
       homepage = "http://rd.slavepianos.org/t/hmt";
       description = "Haskell Music Theory";
       license = "GPL";
     }) {};

  "hmt-diagrams" = callPackage
    ({ mkDerivation, cairo, colour, filepath, hcg-minus
     , hcg-minus-cairo, hmt, html-minimalist, xml
     }:
     mkDerivation {
       pname = "hmt-diagrams";
       version = "0.15";
       sha256 = "1g64b31bz31x0kiivazn20s22y2w7dz9f2gw5cnfkcnjd20k7glm";
       buildDepends = [
         cairo colour filepath hcg-minus hcg-minus-cairo hmt html-minimalist
         xml
       ];
       homepage = "http://rd.slavepianos.org/t/hmt-diagrams";
       description = "Haskell Music Theory Diagrams";
       license = "GPL";
     }) {};

  "hmumps" = callPackage
    ({ mkDerivation, haskeline, mtl, parsec, QuickCheck, regex-compat
     , syb, text
     }:
     mkDerivation {
       pname = "hmumps";
       version = "0.1.1";
       sha256 = "06bixsd7vzfj0gwv0b2880p4xx3f9j7y1snindlnlcfr1qdp9jn2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         haskeline mtl parsec QuickCheck regex-compat syb text
       ];
       description = "Interpreter for the MUMPS langugae";
       license = "GPL";
     }) {};

  "hnetcdf" = callPackage
    ({ mkDerivation, c2hs, either, errors, filepath, hmatrix, HUnit
     , netcdf, QuickCheck, repa, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers, vector
     }:
     mkDerivation {
       pname = "hnetcdf";
       version = "0.2.2.0";
       sha256 = "1v1z6xvzmnhsvmxvncrf6bb2bf2map0kqwjn1myqm3pf1zpiqrxj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         either errors filepath hmatrix repa transformers vector
       ];
       testDepends = [
         errors hmatrix HUnit netcdf QuickCheck repa test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       buildTools = [ c2hs ];
       extraLibraries = [ netcdf ];
       homepage = "https://github.com/ian-ross/hnetcdf";
       description = "Haskell NetCDF library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hnn" = callPackage
    ({ mkDerivation, binary, hmatrix, mwc-random, random, vector
     , vector-binary-instances, zlib
     }:
     mkDerivation {
       pname = "hnn";
       version = "0.2.0.0";
       sha256 = "13i2rs1ab7kh2mzf34hckkihpbrxpxzwfcdd529zd7dynhd3psjw";
       buildDepends = [
         binary hmatrix mwc-random random vector vector-binary-instances
         zlib
       ];
       homepage = "http://github.com/alpmestan/hnn";
       description = "A reasonably fast and simple neural network library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hnop" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hnop";
       version = "0.1";
       sha256 = "0sfw9gmcn7qclgsgzqm9zalyxhz0mig91fabcfq3g0r98krgjnr2";
       isLibrary = false;
       isExecutable = true;
       license = stdenv.lib.licenses.unfree;
     }) {};

  "hoauth" = callPackage
    ({ mkDerivation, binary, crypto-pubkey-types, curl, dataenc
     , entropy, mtl, random, RSA, SHA, time, utf8-string
     }:
     mkDerivation {
       pname = "hoauth";
       version = "0.3.5";
       sha256 = "06vk3dv2dby7wadxg4qq2bzy10hl8ix2x4vpxggwd13xy3kpzjqp";
       buildDepends = [
         binary crypto-pubkey-types curl dataenc entropy mtl random RSA SHA
         time utf8-string
       ];
       description = "A Haskell implementation of OAuth 1.0a protocol.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoauth2" = callPackage
    ({ mkDerivation, aeson, bytestring-show, http-conduit, http-types
     , monad-control, mtl, random, text, transformers
     }:
     mkDerivation {
       pname = "hoauth2";
       version = "0.4.3";
       sha256 = "1qmhk9h3rwp29dsjqbgsma4zgzdd6cw1jcryzd17rk32biiiylvg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson bytestring-show http-conduit http-types monad-control mtl
         random text transformers
       ];
       homepage = "https://github.com/freizl/hoauth2";
       description = "hoauth2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hobbes" = callPackage
    ({ mkDerivation, filemanip, filepath, fsnotify, system-filepath
     , text
     }:
     mkDerivation {
       pname = "hobbes";
       version = "0.2.2";
       sha256 = "1pri63d59q918jv1hdp2ib06m6lzw9a2b6bjyn86b2qrrx2512xd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filemanip filepath fsnotify system-filepath text
       ];
       homepage = "http://github.com/jhickner/hobbes";
       description = "A small file watcher for OSX";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hobbits" = callPackage
    ({ mkDerivation, deepseq, haskell-src-exts, haskell-src-meta, mtl
     , syb, tagged, th-expand-syns, transformers, type-equality
     }:
     mkDerivation {
       pname = "hobbits";
       version = "1.1.1";
       sha256 = "0q668jvlpqs7y3l27fk9m96aa8rzhdkz8jf0whifdb2gahlhx9hs";
       buildDepends = [
         deepseq haskell-src-exts haskell-src-meta mtl syb tagged
         th-expand-syns transformers type-equality
       ];
       description = "A library for canonically representing terms with binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoe" = callPackage
    ({ mkDerivation, cmdargs, hint, mtl }:
     mkDerivation {
       pname = "hoe";
       version = "0.2";
       sha256 = "089iwvgz50mhdch1anag66g0wqya0sm5jhp2h32dfsi0hlrp34f7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs hint mtl ];
       homepage = "http://github.com/tanakh/hoe";
       description = "Haskell One-liner Evaluator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hofix-mtl" = callPackage
    ({ mkDerivation, mtl, star-to-star }:
     mkDerivation {
       pname = "hofix-mtl";
       version = "1.0";
       sha256 = "1xlsddrdv56n7ww7a377jwz43xkkckl5zygghwxs9k88wxzskvvd";
       buildDepends = [ mtl star-to-star ];
       description = "defining @mtl@-ready monads as * -> * fixed-points";
       license = "unknown";
     }) {};

  "hog" = callPackage
    ({ mkDerivation, cmdargs, filepath, irc, network, time }:
     mkDerivation {
       pname = "hog";
       version = "0.1.1";
       sha256 = "0mmp7ymmzvhpwmwjjnin9493a81vijai7hcyqwv9wrfhdjnykb1d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs filepath irc network time ];
       description = "Simple IRC logger bot";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hogg" = callPackage
    ({ mkDerivation, HUnit, mtl, random, time }:
     mkDerivation {
       pname = "hogg";
       version = "0.4.1.2";
       sha256 = "0djgbgahhrfdpxknqfjqkqwzy7ra3d7mnxyv6n76kpldalhihklw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit mtl random time ];
       homepage = "http://www.kfish.org/software/hogg/";
       description = "Library and tools to manipulate the Ogg container format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hogre" = callPackage
    ({ mkDerivation, cgen, cgen-hs, grgen, OGRE, OgreMain }:
     mkDerivation {
       pname = "hogre";
       version = "0.1.5";
       sha256 = "0ndgnflcj885ylxf8q8l71cykrpm4j6svzqxlpdynf054safq174";
       buildDepends = [ cgen ];
       buildTools = [ cgen cgen-hs grgen ];
       extraLibraries = [ OgreMain ];
       pkgconfigDepends = [ OGRE ];
       homepage = "http://anttisalonen.github.com/hogre";
       description = "Haskell binding to a subset of OGRE";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hogre-examples" = callPackage
    ({ mkDerivation, hogre, OgreMain }:
     mkDerivation {
       pname = "hogre-examples";
       version = "0.1.4";
       sha256 = "10zq4qch5bs0aawvs0zg3yyz41lykg1jrna5jqxlrvbq0wfz2s5g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hogre ];
       extraLibraries = [ OgreMain ];
       homepage = "http://github.com/anttisalonen/hogre-examples";
       description = "Examples for using Hogre";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hois" = callPackage
    ({ mkDerivation, OIS, X11 }:
     mkDerivation {
       pname = "hois";
       version = "0.1.0.0";
       sha256 = "0awb7dfa77y7n88ljkcdxs63g37qyc5xkr0j7lqwzx23q83a5c4k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ X11 ];
       extraLibraries = [ OIS ];
       description = "OIS bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoist-error" = callPackage
    ({ mkDerivation, either, mtl }:
     mkDerivation {
       pname = "hoist-error";
       version = "0.1.0.2";
       sha256 = "1485adrlm52jm5afcwa7qnfy4b1679nqjhhlsjp264wqmm0h9l0z";
       editedCabalFile = "12kszqrw8241lnzpvx2qwiwabd6w3wnb6d2kqvgr152wp73hh2wh";
       buildDepends = [ either mtl ];
       description = "Some convenience facilities for hoisting errors into a monad";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hold-em" = callPackage
    ({ mkDerivation, random, safe }:
     mkDerivation {
       pname = "hold-em";
       version = "0.1.0.0";
       sha256 = "1j2ql6izsd85skd6l9j1qfg7pj5rf513096s9bkvqip9bb4ibr4r";
       buildDepends = [ random safe ];
       description = "An engine for Texas hold'em Poker";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hole" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hole";
       version = "0.1.1";
       sha256 = "05ba87wk9b5i5b4gsfvsj16rv91dqsmzyys6b5fkssrxh2ika36c";
       description = "Higher kinded type removal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "holey-format" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "holey-format";
       version = "2.1.0";
       sha256 = "13f6f647ykssqgdqw4fp7gnr2ardxbcn41ksgs15v5dx1n1xvan1";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "holy-project" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, Cabal, filepath, hastache
     , http-conduit, HUnit, lens, lens-aeson, QuickCheck, random
     , smallcheck, split, syb, tasty, tasty-hunit, tasty-quickcheck
     , tasty-smallcheck, text, time
     }:
     mkDerivation {
       pname = "holy-project";
       version = "0.1.1.1";
       sha256 = "0vb4mlz6gb01aadm2b8kgvgnrwwvl6q4ndx6xldi0xi3rm22xkwj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ansi-terminal Cabal filepath hastache http-conduit HUnit lens
         lens-aeson QuickCheck random smallcheck split syb tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck text time
       ];
       testDepends = [
         Cabal HUnit QuickCheck smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "http://github.com/yogsototh/holy-project";
       description = "Start your Haskell project with cabal, git and tests";
       license = stdenv.lib.licenses.mit;
     }) {};

  "homeomorphic" = callPackage
    ({ mkDerivation, mtl, QuickCheck }:
     mkDerivation {
       pname = "homeomorphic";
       version = "0.1";
       sha256 = "1wm15bdz02sjgpz2n266xd50q3p6mncnv8mhimky6ps1kmzb5r6c";
       buildDepends = [ mtl QuickCheck ];
       homepage = "http://www-users.cs.york.ac.uk/~ndm/homeomorphic/";
       description = "Homeomorphic Embedding Test";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hommage" = callPackage
    ({ mkDerivation, random, time }:
     mkDerivation {
       pname = "hommage";
       version = "0.0.6";
       sha256 = "053zv30ghm7c9idb6za44zasnn88g85z4bzbdpfpixlkvcm4sbck";
       buildDepends = [ random time ];
       description = "Haskell Offline Music Manipulation And Generation EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hommage-ds" = callPackage
    ({ mkDerivation, DirectSound, hommage }:
     mkDerivation {
       pname = "hommage-ds";
       version = "0.0.5";
       sha256 = "0gnwpzs6kwhf2wm0nqcgwqa1pp7xwbnqh337pr62w40i76g252v4";
       buildDepends = [ DirectSound hommage ];
       homepage = "substitut-fuer-feinmotorik/projects/haskellommage";
       description = "DirectSound extension (Windows) for the Hommage sound library";
       license = "GPL";
     }) {};

  "honi" = callPackage
    ({ mkDerivation, freenect, hspec, HUnit, OpenNI2, text }:
     mkDerivation {
       pname = "honi";
       version = "0.1.0.0";
       sha256 = "0g1w1i78a93d10zgdy9ixkflblx9xixa493hh2cc8jzznqsp5yfi";
       buildDepends = [ text ];
       testDepends = [ freenect hspec HUnit OpenNI2 ];
       extraLibraries = [ freenect OpenNI2 ];
       description = "OpenNI 2 binding";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) freenect; };

  "honk" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "honk";
       version = "1.2.0.0";
       sha256 = "0aql3rqhx7jj1k0csx5rhb5kqsf1r28rvr7rl9axzkc9imz53wvx";
       homepage = "http://lfairy.github.io/honk/";
       description = "Cross-platform interface to the PC speaker";
       license = "unknown";
     }) {};

  "hoobuddy" = callPackage
    ({ mkDerivation, aeson, Cabal, filepath, hoogle, monad-loops, yaml
     }:
     mkDerivation {
       pname = "hoobuddy";
       version = "0.1.0.0";
       sha256 = "0yqlcyydms9946qpl3db4nqdmh9h6f075bz71j0c148x2vkcwjga";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson Cabal filepath hoogle monad-loops yaml ];
       homepage = "http://github.com/gilligan/hoobuddy";
       description = "Simple tool for fetching and merging hoogle data";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hood" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hood";
       version = "0.2";
       sha256 = "16p6jr9mkd1qv725655awcx623samrkcswlpml0kvhbm1i5kfmcn";
       homepage = "http://www.ittc.ku.edu/csdl/fpg/Hood";
       description = "Debugging by observing in place";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hood-off" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hood-off";
       version = "0.2";
       sha256 = "15rj6qfyhihzc5svl3dwkn387x7bbkl5am7h0kj5jjj8hv2q1pnc";
       description = "Dummy package to disable Hood without having to remove all the calls to observe";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoodie" = callPackage
    ({ mkDerivation, astar, hfov, monad-loops, mtl, ncurses, random }:
     mkDerivation {
       pname = "hoodie";
       version = "0.1.0.0";
       sha256 = "1q3wpsqz833vypqnd7ljiraiyn1klxid35mh5vyizldk3i0qqf6w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ astar hfov monad-loops mtl ncurses random ];
       description = "A small, toy roguelike";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hoodle" = callPackage
    ({ mkDerivation, cmdargs, configurator, dyre, filepath, hoodle-core
     , mtl
     }:
     mkDerivation {
       pname = "hoodle";
       version = "0.3";
       sha256 = "01wz7bwdr3i43ikaiaq8vpn6b0clxjnjyaw6nl6zaq489dhj6fv5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs configurator dyre filepath hoodle-core mtl
       ];
       homepage = "http://ianwookim.org/hoodle";
       description = "Executable for hoodle";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hoodle-builder" = callPackage
    ({ mkDerivation, blaze-builder, double-conversion, hoodle-types
     , lens, strict, text
     }:
     mkDerivation {
       pname = "hoodle-builder";
       version = "0.3";
       sha256 = "0mj58g7kfr5hpqv6idjb24d3gdh25z5x2ym62c6ckm5g3f4x3jm9";
       buildDepends = [
         blaze-builder double-conversion hoodle-types lens strict text
       ];
       description = "text builder for hoodle file format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoodle-core" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base64-bytestring
     , binary, cairo, cereal, configurator, coroutine-object, dbus, Diff
     , dyre, either, errors, filepath, fsnotify, gd, gtk, hoodle-builder
     , hoodle-parser, hoodle-render, hoodle-types, lens, libX11, libXi
     , monad-loops, mtl, network, network-info, network-simple, pango
     , poppler, pureMD5, stm, strict, svgcairo, system-filepath, text
     , time, transformers, transformers-free, unordered-containers, uuid
     , vector, xournal-parser
     }:
     mkDerivation {
       pname = "hoodle-core";
       version = "0.14";
       sha256 = "1njkjxcbnwh9b7mg0xcqkc0clfz64n5h9jqf3323npyw8bhw34b8";
       buildDepends = [
         aeson aeson-pretty attoparsec base64-bytestring binary cairo cereal
         configurator coroutine-object dbus Diff dyre either errors filepath
         fsnotify gd gtk hoodle-builder hoodle-parser hoodle-render
         hoodle-types lens monad-loops mtl network network-info
         network-simple pango poppler pureMD5 stm strict svgcairo
         system-filepath text time transformers transformers-free
         unordered-containers uuid vector xournal-parser
       ];
       extraLibraries = [ libX11 libXi ];
       homepage = "http://ianwookim.org/hoodle";
       description = "Core library for hoodle";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hoodle-extra" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base64-bytestring
     , binary, cmdargs, conduit, either, filepath, hoodle-parser
     , hoodle-types, http-conduit, lens, monad-loops, mtl
     , network-simple, pureMD5, resourcet, text, time, transformers
     , unordered-containers, xournal-parser
     }:
     mkDerivation {
       pname = "hoodle-extra";
       version = "0.1";
       sha256 = "1mqx4qia457n8v4pdyd8mc8h7ybzx5asxm2d4p9ws5g2q4ybmshy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty attoparsec base64-bytestring binary cmdargs
         conduit either filepath hoodle-parser hoodle-types http-conduit
         lens monad-loops mtl network-simple pureMD5 resourcet text time
         transformers unordered-containers xournal-parser
       ];
       homepage = "http://ianwookim.org/hoodle";
       description = "extra hoodle tools";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hoodle-parser" = callPackage
    ({ mkDerivation, attoparsec, either, hoodle-types, lens, mtl
     , strict, text, transformers, xournal-types
     }:
     mkDerivation {
       pname = "hoodle-parser";
       version = "0.3";
       sha256 = "1ihpmkhjzsf8w4ygljx2agx31xblc0ch4y8m9pwj7rnnjj1sw15i";
       buildDepends = [
         attoparsec either hoodle-types lens mtl strict text transformers
         xournal-types
       ];
       homepage = "http://ianwookim.org/hoodle";
       description = "Hoodle file parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoodle-publish" = callPackage
    ({ mkDerivation, attoparsec, cairo, cmdargs, coroutine-object
     , directory-tree, filepath, gtk, hoodle-parser, hoodle-render
     , hoodle-types, HTTP, io-streams, lens, mtl, network
     , pdf-toolbox-core, pdf-toolbox-document, poppler, transformers
     , uuid
     }:
     mkDerivation {
       pname = "hoodle-publish";
       version = "0.1";
       sha256 = "13753yhv9vlpbjjigciqingjxwm4vhv8lmam8qyqykrmd33ygj31";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec cairo cmdargs coroutine-object directory-tree filepath
         gtk hoodle-parser hoodle-render hoodle-types HTTP io-streams lens
         mtl network pdf-toolbox-core pdf-toolbox-document poppler
         transformers uuid
       ];
       homepage = "http://ianwookim.org/hoodle";
       description = "publish hoodle files as a static web site";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hoodle-render" = callPackage
    ({ mkDerivation, base64-bytestring, cairo, filepath, gd, gtk
     , hoodle-types, lens, monad-loops, mtl, poppler, stm, strict
     , svgcairo, transformers, unordered-containers, uuid
     }:
     mkDerivation {
       pname = "hoodle-render";
       version = "0.4";
       sha256 = "06ds0fzw11a10m927y2jvmgbsjy7cxdpppb6ifxkg173csp92a2d";
       buildDepends = [
         base64-bytestring cairo filepath gd gtk hoodle-types lens
         monad-loops mtl poppler stm strict svgcairo transformers
         unordered-containers uuid
       ];
       description = "Hoodle file renderer";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hoodle-types" = callPackage
    ({ mkDerivation, cereal, lens, mtl, strict, text, uuid }:
     mkDerivation {
       pname = "hoodle-types";
       version = "0.3";
       sha256 = "0n9plj6hhsc5482pl7sw4gw7py8r6cn0cl7hg35g2qxdxnzapifm";
       buildDepends = [ cereal lens mtl strict text uuid ];
       description = "Data types for programs for hoodle file format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoogle" = callPackage
    ({ mkDerivation, aeson, binary, blaze-builder, Cabal
     , case-insensitive, cmdargs, conduit, deepseq, filepath
     , haskell-src-exts, http-types, parsec, QuickCheck, random
     , resourcet, safe, shake, tagsoup, temporary, text, time
     , transformers, uniplate, vector, vector-algorithms, wai, warp
     }:
     mkDerivation {
       pname = "hoogle";
       version = "4.2.36";
       sha256 = "1h65pl0jfki2pcrywak9mh3hfi3wziffhb2q0xp6r4v01536zifv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson binary blaze-builder Cabal case-insensitive cmdargs conduit
         deepseq filepath haskell-src-exts http-types parsec QuickCheck
         random resourcet safe shake tagsoup text time transformers uniplate
         vector vector-algorithms wai warp
       ];
       testDepends = [ filepath temporary ];
       testTarget = "--test-option=--no-net";
       homepage = "http://www.haskell.org/hoogle/";
       description = "Haskell API Search";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoogle-index" = callPackage
    ({ mkDerivation, Cabal, errors, filepath, hoogle
     , optparse-applicative, temporary, transformers
     }:
     mkDerivation {
       pname = "hoogle-index";
       version = "0.3.3";
       sha256 = "1dl92i2hrgs47lvkc5kg0hww6h6s94z9ml8fil8g0rcg9jm1643c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal errors filepath hoogle optparse-applicative temporary
         transformers
       ];
       homepage = "http://github.com/bgamari/hoogle-index";
       description = "Easily generate Hoogle indices for installed packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hooks-dir" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "hooks-dir";
       version = "0.1.1.0";
       sha256 = "0gwdqpml8kn8xxxaq628d4way29k2f31f5av49fx7qj150h5qs5b";
       buildDepends = [ text ];
       homepage = "https://github.com/ibotty/hooks-dir";
       description = "run executables in a directory as hooks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoopl" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hoopl";
       version = "3.10.0.1";
       sha256 = "1wahcngdmb3ixny0havrddkmrhs02rzlf1d1l7g8f6pzg051mr11";
       homepage = "http://ghc.cs.tufts.edu/hoopl/";
       description = "A library to support dataflow analysis and optimization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hoovie" = callPackage
    ({ mkDerivation, blaze-builder, configurator, enumerator
     , file-embed, filepath, HDBC, HDBC-sqlite3, mtl, network
     , network-info, network-multicast, regex-compat, snap-core
     , snap-server, text, time, transformers, xml
     }:
     mkDerivation {
       pname = "hoovie";
       version = "0.1.1";
       sha256 = "1g486kj7pwfvdr0a0mpfjxv9hifrkbp7120hxcfyrhx2zjmmc449";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-builder configurator enumerator file-embed filepath HDBC
         HDBC-sqlite3 mtl network network-info network-multicast
         regex-compat snap-core snap-server text time transformers xml
       ];
       homepage = "https://bitbucket.org/pvdbrand/hoovie";
       description = "Haskell Media Server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hopencc" = callPackage
    ({ mkDerivation, c2hs, opencc, QuickCheck, utf8-string }:
     mkDerivation {
       pname = "hopencc";
       version = "0.1.0.0";
       sha256 = "1ygldh3r09qzpws28mnmhm3ai7h162gsafdc7nwl2f10kjnpjhyw";
       buildDepends = [ utf8-string ];
       testDepends = [ QuickCheck ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ opencc ];
       homepage = "https://github.com/MnO2/hopencc";
       description = "Haskell binding to libopencc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hopencl" = callPackage
    ({ mkDerivation, c2hs, HUnit, OpenCL, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hopencl";
       version = "0.2.1";
       sha256 = "1kdrjr1y5wfq8bb31bkh360pvgb7ryhn9awnqszbq5d4wdwplqk8";
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       buildTools = [ c2hs ];
       extraLibraries = [ OpenCL ];
       homepage = "https://github.com/merijn/hopencl";
       description = "Haskell bindings for OpenCL";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) OpenCL; };

  "hopenpgp-tools" = callPackage
    ({ mkDerivation, aeson, alex, ansi-wl-pprint, attoparsec
     , base16-bytestring, cereal, cereal-conduit, conduit, conduit-extra
     , crypto-pubkey, cryptohash, errors, fgl, graphviz, happy, hOpenPGP
     , ixset, lens, monad-loops, openpgp-asciiarmor
     , optparse-applicative, resourcet, text, time, transformers
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "hopenpgp-tools";
       version = "0.13";
       sha256 = "07w46jcdx573p4jii6xvgz1y8xm4iab89jg8jh0645pja5zv8nsz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson ansi-wl-pprint attoparsec base16-bytestring cereal
         cereal-conduit conduit conduit-extra crypto-pubkey cryptohash
         errors fgl graphviz hOpenPGP ixset lens monad-loops
         openpgp-asciiarmor optparse-applicative resourcet text time
         transformers unordered-containers yaml
       ];
       buildTools = [ alex happy ];
       homepage = "http://floss.scru.org/hopenpgp-tools";
       description = "hOpenPGP-based command-line tools";
       license = "unknown";
     }) {};

  "hopenssl" = callPackage
    ({ mkDerivation, mtl, openssl }:
     mkDerivation {
       pname = "hopenssl";
       version = "1.6.2";
       sha256 = "0b9xdm7jgkadx53vwszjnisyblzsqk99s3zqppgp0iqqf9955s4w";
       buildDepends = [ mtl ];
       extraLibraries = [ openssl ];
       homepage = "http://github.com/peti/hopenssl";
       description = "FFI bindings to OpenSSL's EVP digest interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hopfield" = callPackage
    ({ mkDerivation, deepseq, erf, exact-combinatorics, hmatrix, hspec
     , HUnit, JuicyPixels, MagickCore, MagickWand, monad-loops
     , MonadRandom, optparse-applicative, parallel, probability
     , QuickCheck, random, random-fu, rvar, split, vector
     }:
     mkDerivation {
       pname = "hopfield";
       version = "0.1.0.2";
       sha256 = "1cpr3540fdrqr39p6xhb64iz2fz8mzryd19515c55522s7xjk1zw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         deepseq erf exact-combinatorics hmatrix JuicyPixels monad-loops
         MonadRandom optparse-applicative parallel probability QuickCheck
         random random-fu rvar split vector
       ];
       testDepends = [
         erf exact-combinatorics hspec HUnit MonadRandom parallel QuickCheck
         random vector
       ];
       extraLibraries = [ MagickCore MagickWand ];
       homepage = "https://github.com/imperialhopfield/hopfield";
       description = "Hopfield Networks, Boltzmann Machines and Clusters";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hopfield-networks" = callPackage
    ({ mkDerivation, matrix, MonadRandom, QuickCheck, split
     , test-framework, test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "hopfield-networks";
       version = "0.1.0.0";
       sha256 = "1d3jcjk6s7raack7rvm1jzyh2fvaha6xy7k97fmq4cx22fzb48sd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ matrix MonadRandom QuickCheck split vector ];
       testDepends = [
         matrix MonadRandom QuickCheck test-framework
         test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/ajtulloch/hopfield-networks";
       description = "Hopfield Networks for unsupervised learning in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hopfli" = callPackage
    ({ mkDerivation, hspec, QuickCheck, zlib }:
     mkDerivation {
       pname = "hopfli";
       version = "0.2.1.0";
       sha256 = "1rx5kvacnzm3qmc0z8n9fhrcrac059akzh9ccq0qswl7w9m4iby3";
       buildDepends = [ zlib ];
       testDepends = [ hspec QuickCheck zlib ];
       homepage = "https://github.com/ananthakumaran/hopfli";
       description = "zlib compatible compression using Zopfli Compression Algorithm";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "hoq" = callPackage
    ({ mkDerivation, alex, bifunctors, filepath, happy, mtl, readline
     , void
     }:
     mkDerivation {
       pname = "hoq";
       version = "0.3";
       sha256 = "0h9cq1qzai1kbzc77bjlm0dbkrasfj0d21ydrh86kv9jd6gr7gb7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bifunctors filepath mtl readline void ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/valis/hoq";
       description = "A language based on homotopy type theory with an interval type";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "hosc" = callPackage
    ({ mkDerivation, binary, blaze-builder, data-binary-ieee754
     , network, QuickCheck, test-framework, test-framework-quickcheck2
     , time, transformers
     }:
     mkDerivation {
       pname = "hosc";
       version = "0.15";
       sha256 = "1yp25n159p69r32y3x7iwc55l5q9qaamj2vyl1473x8ras5afdcf";
       buildDepends = [
         binary blaze-builder data-binary-ieee754 network time transformers
       ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://rd.slavepianos.org/t/hosc";
       description = "Haskell Open Sound Control";
       license = "GPL";
     }) {};

  "hosc-json" = callPackage
    ({ mkDerivation, aeson, attoparsec, bifunctors, hosc, json, text
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "hosc-json";
       version = "0.15";
       sha256 = "0sask4nr5njf9grzigldflrbp7460z55fsam1pc3wcnsa575hxhi";
       buildDepends = [
         aeson attoparsec bifunctors hosc json text unordered-containers
         utf8-string vector
       ];
       homepage = "http://rd.slavepianos.org/t/hosc-json";
       description = "Haskell Open Sound Control JSON Serialisation";
       license = "GPL";
     }) {};

  "hosc-utils" = callPackage
    ({ mkDerivation, cgi, haskeline, hosc, hosc-json, hsc3, json, text
     , transformers, utf8-string, websockets, www-minus
     }:
     mkDerivation {
       pname = "hosc-utils";
       version = "0.15";
       sha256 = "0zk59ig52vqym4n47yl9jgv21gszcwwbc0qc9ff0080allp6ddml";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cgi haskeline hosc hosc-json hsc3 json text transformers
         utf8-string websockets www-minus
       ];
       homepage = "http://rd.slavepianos.org/?t=hosc-utils";
       description = "Haskell Open Sound Control Utilities";
       license = "GPL";
     }) {};

  "hostname" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hostname";
       version = "1.0";
       sha256 = "0p6gm4328946qxc295zb6vhwhf07l1fma82vd0siylnsnsqxlhwv";
       description = "A very simple package providing a cross-platform means of determining the hostname";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hostname-validate" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "hostname-validate";
       version = "1.0.0";
       sha256 = "0my8g4kqf9mz7ii79ff53rwkx3yv9kkn4jbm60q4b7g1rzhb3bvz";
       buildDepends = [ attoparsec ];
       description = "Validate hostnames e.g. localhost or foo.co.uk.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hosts-server" = callPackage
    ({ mkDerivation, attoparsec, data-default, dns, iproute, network }:
     mkDerivation {
       pname = "hosts-server";
       version = "0.1.1";
       sha256 = "1g5kga58c5iqm3svs2d0d2akkibxjnh0hc1jjhjf7dzxghg2paqy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ attoparsec data-default dns iproute network ];
       homepage = "https://github.com/yihuang/hosts-server";
       description = "An dns server which is extremely easy to config";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hothasktags" = callPackage
    ({ mkDerivation, cmdargs, cpphs, filepath, haskell-src-exts }:
     mkDerivation {
       pname = "hothasktags";
       version = "0.3.2";
       sha256 = "12gq3ni7w75wcvahx3yzpmgw8zl7bamswipfzr9a97j5hmi2h766";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs cpphs filepath haskell-src-exts ];
       homepage = "http://github.com/luqui/hothasktags";
       description = "Generates ctags for Haskell, incorporating import lists and qualified imports";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hotswap" = callPackage
    ({ mkDerivation, plugins }:
     mkDerivation {
       pname = "hotswap";
       version = "0.1.9.13";
       sha256 = "1c614gvwypfqaj4gqsdimqq40i34w393vikq5hhy3d4qll2qp8hv";
       buildDepends = [ plugins ];
       homepage = "https://github.com/mikeplus64/hotswap";
       description = "Simple code hotswapping";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hourglass" = callPackage
    ({ mkDerivation, deepseq, mtl, tasty, tasty-hunit, tasty-quickcheck
     , time
     }:
     mkDerivation {
       pname = "hourglass";
       version = "0.2.6";
       sha256 = "029fmx5r6krj7y7mn4b4m2lpaa3iw6vhyznrib5lhf469i1jp9m3";
       buildDepends = [ deepseq ];
       testDepends = [
         deepseq mtl tasty tasty-hunit tasty-quickcheck time
       ];
       homepage = "https://github.com/vincenthz/hs-hourglass";
       description = "simple performant time related library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hp2any-core" = callPackage
    ({ mkDerivation, attoparsec, filepath, network, time }:
     mkDerivation {
       pname = "hp2any-core";
       version = "0.11.2";
       sha256 = "1gmw9bggw8hsp6pi0xgrryf0sqjb1aaxbwh85q5h72h4ixskwn1y";
       buildDepends = [ attoparsec filepath network time ];
       homepage = "http://www.haskell.org/haskellwiki/Hp2any";
       description = "Heap profiling helper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hp2any-graph" = callPackage
    ({ mkDerivation, filepath, freeglut, GLUT, hp2any-core, mesa
     , network, OpenGL, parseargs
     }:
     mkDerivation {
       pname = "hp2any-graph";
       version = "0.5.4.2";
       sha256 = "1yj1miqn265pxq2dfhx87s20vjnnxmsl3d9xdy88cbzglpx2v9il";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath GLUT hp2any-core network OpenGL parseargs
       ];
       extraLibraries = [ freeglut mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Hp2any";
       description = "Real-time heap graphing utility and profile stream server with a reusable graphing module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hp2any-manager" = callPackage
    ({ mkDerivation, cairo, filepath, glade, glib, gtk, gtkglext
     , hp2any-core, hp2any-graph, OpenGL, time
     }:
     mkDerivation {
       pname = "hp2any-manager";
       version = "0.4.6";
       sha256 = "143j3ylvzyq1s2l357vzqrwdcgg6rqhnmv0awb3nvm66c9smaarv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo filepath glade glib gtk gtkglext hp2any-core hp2any-graph
         OpenGL time
       ];
       homepage = "http://www.haskell.org/haskellwiki/Hp2any";
       description = "A utility to visualise and compare heap profiles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hp2html" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "hp2html";
       version = "0.2";
       sha256 = "11v0w5406d9lql5jaj2kwrvdgai9y76kbdlwpjnn2wjn36b8hdwa";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "A tool for converting GHC heap-profiles to HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hp2pretty" = callPackage
    ({ mkDerivation, attoparsec, filepath, floatshow, mtl }:
     mkDerivation {
       pname = "hp2pretty";
       version = "0.5";
       sha256 = "1kjfvp29s8wwdwpkqx47qpqy5ybl1ynx42idraarngcv8i9bzfgm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ attoparsec filepath floatshow mtl ];
       homepage = "http://gitorious.org/hp2pretty";
       description = "generate pretty graphs from heap profiles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpaco" = callPackage
    ({ mkDerivation, aeson, cmdargs, filepath, hpaco-lib, strict
     , utf8-string, yaml
     }:
     mkDerivation {
       pname = "hpaco";
       version = "0.28.0.5";
       sha256 = "03h634wwyj4d5ycvn7nmm94qcxwq9vayd7d9l44hqhka1ach4sx9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson cmdargs filepath hpaco-lib strict utf8-string yaml
       ];
       homepage = "https://bitbucket.org/tdammers/hpaco";
       description = "Modular template compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpaco-lib" = callPackage
    ({ mkDerivation, aeson, data-variant, file-embed, filepath, mtl
     , parsec, safe, split, strict, transformers
     }:
     mkDerivation {
       pname = "hpaco-lib";
       version = "0.28.0.5";
       sha256 = "1n6lmkip1is6y4x5vivqv30if5di8cy35l6fs2kyg8wjxcqcsyqm";
       buildDepends = [
         aeson data-variant file-embed filepath mtl parsec safe split strict
         transformers
       ];
       homepage = "https://bitbucket.org/tdammers/hpaco";
       description = "Modular template compiler library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpage" = callPackage
    ({ mkDerivation, Cabal, cabal-macosx, eprocess, filepath, FindBin
     , haskell-src-exts, hint, hint-server, monad-loops, mtl, time, wx
     , wxcore
     }:
     mkDerivation {
       pname = "hpage";
       version = "0.12.2";
       sha256 = "0sl2qh3l5vbijln2al7vmvxm4zhn3qsz8axvprs6jxjfbndmk78j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal cabal-macosx eprocess filepath FindBin haskell-src-exts hint
         hint-server monad-loops mtl time wx wxcore
       ];
       homepage = "http://haskell.hpage.com";
       description = "A scrapbook for Haskell developers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpapi" = callPackage
    ({ mkDerivation, papi }:
     mkDerivation {
       pname = "hpapi";
       version = "0.0.1.0";
       sha256 = "0n07nr6mm9ssf632h30s6bqxsgvlfzpr39dhdl7vwrfyj2jvdg2s";
       extraLibraries = [ papi ];
       description = "Binding for the PAPI library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpaste" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, blaze-markup, cgi
     , ConfigFile, css, Diff, download-curl, feed, filepath
     , haskell-src-exts, HJScript, hlint, hscolour, mime-mail, MissingH
     , MonadCatchIO-transformers, mtl, named-formlet, network
     , postgresql-simple, safe, snap-app, snap-core, snap-server, text
     , time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "hpaste";
       version = "1.2.0";
       sha256 = "1p8dfqm93598zcnz1ksj8px6l8i7kfn9514d68gx7qxvd4xw0fnm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-html blaze-markup cgi ConfigFile css Diff
         download-curl feed filepath haskell-src-exts HJScript hlint
         hscolour mime-mail MissingH MonadCatchIO-transformers mtl
         named-formlet network postgresql-simple safe snap-app snap-core
         snap-server text time transformers utf8-string
       ];
       homepage = "http://hpaste.org/";
       description = "Haskell paste web site";
       license = "GPL";
     }) {};

  "hpasteit" = callPackage
    ({ mkDerivation, filepath, http-conduit, http-types, lifted-base
     , network, optparse-applicative, safe, utf8-string
     }:
     mkDerivation {
       pname = "hpasteit";
       version = "0.3.3";
       sha256 = "1jj5q1gpnajnafikwf9jmayvaimi5486fvi90fk8q4b3lg7z9awm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath http-conduit http-types lifted-base network
         optparse-applicative safe utf8-string
       ];
       homepage = "http://github.com/parcs/hpasteit";
       description = "A command-line client for hpaste.org";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpc" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "hpc";
       version = "0.6.0.1";
       sha256 = "00fn4kyghf6nqnn24nrjagkgjmwnq40s94jf47v9fbhllvqbq952";
       buildDepends = [ time ];
       description = "Code Coverage Library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpc-coveralls" = callPackage
    ({ mkDerivation, aeson, async, cmdargs, curl, HUnit, regex-posix
     , safe, split
     }:
     mkDerivation {
       pname = "hpc-coveralls";
       version = "0.6.1";
       sha256 = "0xafdwm80p12gzw23hadv1kg792lmq2lngzs6m4fac5sj0r6a973";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson async cmdargs curl regex-posix safe split ];
       testDepends = [ HUnit ];
       homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
       description = "Coveralls.io support for Haskell.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpc-strobe" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "hpc-strobe";
       version = "0.1";
       sha256 = "1fgw4pf72684mi7s5pqvfj75s8y004rxf3ww377kyrlw1mb7405c";
       buildDepends = [ filepath ];
       description = "Hpc-generated strobes for a running Haskell program";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hpc-tracer" = callPackage
    ({ mkDerivation, network, parsec }:
     mkDerivation {
       pname = "hpc-tracer";
       version = "0.3.1";
       sha256 = "1mahyall1p96nc8z270002cdk8is9ahrd0zn0663w36ic158i3li";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network parsec ];
       description = "Tracer with AJAX interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hplayground" = callPackage
    ({ mkDerivation, data-default, haste-compiler, haste-perch
     , monads-tf, transformers
     }:
     mkDerivation {
       pname = "hplayground";
       version = "0.1.2.3";
       sha256 = "11khylc73hsg8p64jz5ykdnpix7f5qv3zk2kf0n42yync290jc9w";
       buildDepends = [
         data-default haste-compiler haste-perch monads-tf transformers
       ];
       homepage = "https://github.com/agocorona/hplayground";
       description = "monadic, reactive Formlets running in the Web browser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hplaylist" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "hplaylist";
       version = "0.2";
       sha256 = "01xkpsb8fjlifdz6fckwfawj1s5c4rs4slizcdr1hpij6mcdcg6y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "Application for managing playlist files on a music player";
       license = "GPL";
     }) {};

  "hpodder" = callPackage
    ({ mkDerivation, ConfigFile, filepath, HaXml, HDBC, HDBC-sqlite3
     , hslogger, MissingH, mtl, network, parsec
     }:
     mkDerivation {
       pname = "hpodder";
       version = "1.1.6";
       sha256 = "0gi94phkqxffxf3sq5al3cmn3zhc9vz6jql4hjsvz5nbhpdjhwda";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile filepath HaXml HDBC HDBC-sqlite3 hslogger MissingH mtl
         network parsec
       ];
       homepage = "http://software.complete.org/hpodder";
       description = "Podcast Aggregator (downloader)";
       license = "GPL";
     }) {};

  "hpqtypes" = callPackage
    ({ mkDerivation, exceptions, HUnit, lifted-base, monad-control, mtl
     , postgresql, QuickCheck, random, resource-pool, test-framework
     , test-framework-hunit, text, time, transformers, transformers-base
     , vector
     }:
     mkDerivation {
       pname = "hpqtypes";
       version = "1.2.4";
       sha256 = "05qcp5v0fn5m5cc0jag5hnxa7r0wshmrl7qwgdm973cr0wlcvm6k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         exceptions HUnit lifted-base monad-control mtl QuickCheck random
         resource-pool test-framework test-framework-hunit text time
         transformers transformers-base vector
       ];
       extraLibraries = [ postgresql ];
       description = "Haskell bindings to libpqtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hprotoc" = callPackage
    ({ mkDerivation, alex, binary, filepath, haskell-src-exts, mtl
     , parsec, protocol-buffers, protocol-buffers-descriptor
     , utf8-string
     }:
     mkDerivation {
       pname = "hprotoc";
       version = "2.0.17";
       sha256 = "1mfmbggjnpmdpv6a9yhwyplf4g1n45s089qjwhvy1p6drn4mk3hp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary filepath haskell-src-exts mtl parsec protocol-buffers
         protocol-buffers-descriptor utf8-string
       ];
       buildTools = [ alex ];
       homepage = "http://code.haskell.org/protocol-buffers/";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hprotoc-fork" = callPackage
    ({ mkDerivation, alex, binary, filepath, haskell-src-exts, mtl
     , parsec, protocol-buffers-descriptor-fork, protocol-buffers-fork
     , utf8-string
     }:
     mkDerivation {
       pname = "hprotoc-fork";
       version = "2.0.16.1";
       sha256 = "1fbpdi4mcc66z3ina01dkqxhy8slcjs4irh03ll2msp6p5vdqw9r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary filepath haskell-src-exts mtl parsec
         protocol-buffers-descriptor-fork protocol-buffers-fork utf8-string
       ];
       buildTools = [ alex ];
       homepage = "http://darcs.factisresearch.com/pub/protocol-buffers-fork/";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hps" = callPackage
    ({ mkDerivation, filepath, hcg-minus, random }:
     mkDerivation {
       pname = "hps";
       version = "0.15";
       sha256 = "0kmmrjg93rr6cjmg5n821p00qr4m3q46nnyfhql2s2nf20p7kprh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath hcg-minus random ];
       homepage = "http://rd.slavepianos.org/?t=hps";
       description = "Haskell Postscript";
       license = "GPL";
     }) {};

  "hps-cairo" = callPackage
    ({ mkDerivation, cairo, gtk, hps, random }:
     mkDerivation {
       pname = "hps-cairo";
       version = "0.11";
       sha256 = "1xyk0q6qiqcqd849km86jns4bcfmyrvikg0zw44929wlmlbf0hg7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo gtk hps random ];
       homepage = "http://slavepianos.org/rd/?t=hps-cairo";
       description = "Cairo rendering for the haskell postscript library";
       license = "GPL";
     }) {};

  "hps-kmeans" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "hps-kmeans";
       version = "0.1.0.0";
       sha256 = "0w1yyrv4k7fi016084j4k1lh6jgxg5502r83zszr9cjc6rraj8fc";
       buildDepends = [ vector ];
       homepage = "http://stathacking.com/hps-kmeans";
       description = "A nice implementation of the k-Means algorithm";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hpuz" = callPackage
    ({ mkDerivation, c2hs, parsec }:
     mkDerivation {
       pname = "hpuz";
       version = "1.1.2";
       sha256 = "04k9hdbc3ipn9z0qzzpm6xsiv0bkr1v48sfs2haapawd49bw7rhk";
       buildDepends = [ parsec ];
       buildTools = [ c2hs ];
       homepage = "https://github.com/ccasin/hpuz";
       description = "Haskell bindings for libpuz";
       license = "unknown";
     }) {};

  "hpygments" = callPackage
    ({ mkDerivation, aeson, process-extras }:
     mkDerivation {
       pname = "hpygments";
       version = "0.1.3";
       sha256 = "1hb9yslb94ynzlphsp0i4f547zqxblrj49hqy4d7zivdqp38lqla";
       buildDepends = [ aeson process-extras ];
       homepage = "https://github.com/davidlazar/hpygments";
       description = "Highlight source code using Pygments";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hpylos" = callPackage
    ({ mkDerivation, EEConfig, GLUT, OpenGL }:
     mkDerivation {
       pname = "hpylos";
       version = "1.0";
       sha256 = "1vdpy9x3bg43zj9rcrnkz0jfsd9mrp4k5y2hn6jb2ar2bvq0iwha";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ EEConfig GLUT OpenGL ];
       homepage = "http://sourceforge.net/projects/hpylos/";
       description = "AI of Pylos game with GLUT interface";
       license = "GPL";
     }) {};

  "hpyrg" = callPackage
    ({ mkDerivation, lens, optparse-applicative, parsec, text }:
     mkDerivation {
       pname = "hpyrg";
       version = "0.1.0.0";
       sha256 = "00ddyiznx07qkh3s4qjls39x991fqxvdw2bj245ypbxpxsk9fvsw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ lens optparse-applicative parsec text ];
       description = "pyrg utility done right";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hquantlib" = callPackage
    ({ mkDerivation, hmatrix, hmatrix-special, HUnit, mersenne-random
     , parallel, QuickCheck, statistics, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time, vector
     }:
     mkDerivation {
       pname = "hquantlib";
       version = "0.0.2.4";
       sha256 = "1jj4m74d07hkz8mbj732sqhwsprp0hn6rz75a01amf8h91c7aws5";
       buildDepends = [
         hmatrix hmatrix-special mersenne-random parallel statistics time
         vector
       ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/paulrzcz/hquantlib.git";
       description = "HQuantLib is a port of essencial parts of QuantLib to Haskell";
       license = "LGPL";
     }) {};

  "hquery" = callPackage
    ({ mkDerivation, filepath, HUnit, parsec, test-framework
     , test-framework-hunit, text, xmlhtml
     }:
     mkDerivation {
       pname = "hquery";
       version = "0.1.1.0";
       sha256 = "0phlbbvkifw65ndjb4nc8ar0xx6z4sqn8xj41bg8qgr31ffpcjf8";
       buildDepends = [ parsec text xmlhtml ];
       testDepends = [
         filepath HUnit parsec test-framework test-framework-hunit text
         xmlhtml
       ];
       description = "A query language for transforming HTML5";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hranker" = callPackage
    ({ mkDerivation, HCL, NonEmpty }:
     mkDerivation {
       pname = "hranker";
       version = "0.1.1";
       sha256 = "0hg2qjjr5pcnx62382r3d3rqvb3z7h1926lpym68869n4s19wz7d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HCL NonEmpty ];
       description = "Basic utility for ranking a list of items";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hricket" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hricket";
       version = "0.5";
       sha256 = "1zhp9w0rki3chb27jbzvwifsgcjxzczn3q7hh7g3d0akfbg1v47f";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://github.com/Raynes/Hricket";
       description = "A Cricket scoring application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hruby" = callPackage
    ({ mkDerivation, aeson, attoparsec, QuickCheck, scientific, stm
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "hruby";
       version = "0.2.8";
       sha256 = "1gwz8fncwrga8qpin2799pfr5x34k01fvav8g3d9n6ibn24ah7f0";
       buildDepends = [
         aeson attoparsec scientific stm text unordered-containers vector
       ];
       testDepends = [ aeson attoparsec QuickCheck text vector ];
       description = "Embed Ruby in your Haskell program";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-GeoIP" = callPackage
    ({ mkDerivation, deepseq, GeoIP }:
     mkDerivation {
       pname = "hs-GeoIP";
       version = "0.3";
       sha256 = "135bl4cjijq6mr485waz7aaxgkaji2fsdjhdy4v4756q6ahzcpwf";
       buildDepends = [ deepseq ];
       extraLibraries = [ GeoIP ];
       homepage = "http://github.com/ozataman/hs-GeoIP";
       description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-bibutils" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "hs-bibutils";
       version = "5.0";
       sha256 = "18gchn62g2cqzyj1nr8wd5i6smhq739g00cblkllj1jkni33ch2l";
       buildDepends = [ syb ];
       homepage = "http://gorgias.mine.nu/repos/hs-bibutils/";
       description = "Haskell bindings to bibutils, the bibliography conversion utilities";
       license = "GPL";
     }) {};

  "hs-blake2" = callPackage
    ({ mkDerivation, b2, bytestring-arbitrary, QuickCheck, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "hs-blake2";
       version = "0.0.2";
       sha256 = "0i0yqci0z5gqmpgb0gk76grcd8mn7xql6gjalm78z6cl84vzsgh4";
       testDepends = [
         b2 bytestring-arbitrary QuickCheck tasty tasty-quickcheck
       ];
       extraLibraries = [ b2 ];
       homepage = "https://github.com/tsuraan/hs-blake2";
       description = "A cryptohash-inspired library for blake2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-captcha" = callPackage
    ({ mkDerivation, gd, random }:
     mkDerivation {
       pname = "hs-captcha";
       version = "1.0";
       sha256 = "02dd7kli8nm01jxs0p8imqvbdr4yzqizi6bwyyr228p3wscbdsn8";
       buildDepends = [ gd random ];
       homepage = "http://www.dankna.com/software/";
       description = "Generate images suitable for use as CAPTCHAs in online web-form security";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-carbon" = callPackage
    ({ mkDerivation, deepseq, HUnit, mtl, parallel, random }:
     mkDerivation {
       pname = "hs-carbon";
       version = "0.1.0.0";
       sha256 = "0i6jzqqlayxi1aqkrsdlb9kbj6ysj2qxr0rbmdw66zr5hinm345v";
       buildDepends = [ deepseq mtl parallel random ];
       testDepends = [ HUnit ];
       description = "A Haskell framework for parallel monte carlo simulations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hs-carbon-examples" = callPackage
    ({ mkDerivation, deepseq, gloss, hs-carbon, monad-loops, mtl
     , tf-random
     }:
     mkDerivation {
       pname = "hs-carbon-examples";
       version = "0.0.0.1";
       sha256 = "1hcg6z3slzry4lkxnv5bllmlfsr50hcyxmpz3qhsb487j9r76c2z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         deepseq gloss hs-carbon monad-loops mtl tf-random
       ];
       description = "Example Monte Carlo simulations implemented with Carbon";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hs-cdb" = callPackage
    ({ mkDerivation, bytestring-mmap, filepath, mtl }:
     mkDerivation {
       pname = "hs-cdb";
       version = "0.1.1";
       sha256 = "07pkz35mmk7qaa9ahfxmj4dddja23ksn7dm1fp8g9v8z8d9r9zl0";
       buildDepends = [ bytestring-mmap filepath mtl ];
       homepage = "http://github.com/adamsmasher/hs-cdb";
       description = "A library for reading CDB (Constant Database) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-dotnet" = callPackage
    ({ mkDerivation, ole32, oleaut32 }:
     mkDerivation {
       pname = "hs-dotnet";
       version = "0.4.0";
       sha256 = "1l2h1zv63c25k80gljnan3vg2r25a4b7byf5yryj3cjwa9xcg457";
       extraLibraries = [ ole32 oleaut32 ];
       description = "Pragmatic .NET interop for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-excelx" = callPackage
    ({ mkDerivation, mtl, text, time, xml-conduit, zip-archive }:
     mkDerivation {
       pname = "hs-excelx";
       version = "0.6.0.0";
       sha256 = "12hpfad8wn4r811md6269w10inx6nbipryhn8vdhbbcj9mmda3l5";
       buildDepends = [ mtl text time xml-conduit zip-archive ];
       description = "HS-Excelx provides basic read-only access to Excel 2007 and 2010 documents in XLSX format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-ffmpeg" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hs-ffmpeg";
       version = "0.3.4";
       sha256 = "0j52drd3pb6ssgngfqxdsvvjjnx11nsmxwjsin6cmbv0nifpyq51";
       homepage = "http://patch-tag.com/r/VasylPasternak/hs-ffmpeg";
       description = "Bindings to FFMPEG library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-fltk" = callPackage
    ({ mkDerivation, fltk, fltk_images }:
     mkDerivation {
       pname = "hs-fltk";
       version = "0.2.5";
       sha256 = "0nbxfy219mz0k27d16r3ir7hk0j450gxba9wrvrz1j17mr3gvqzx";
       extraLibraries = [ fltk fltk_images ];
       homepage = "http://www.cs.helsinki.fi/u/ekarttun/hs-fltk/";
       description = "Binding to GUI library FLTK";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-gchart" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "hs-gchart";
       version = "0.4.1";
       sha256 = "0nmykgdzkqidxv51bhlcn4zax4zfw26s4l65z3a3405si2s5x459";
       buildDepends = [ mtl ];
       homepage = "http://github.com/deepakjois/hs-gchart";
       description = "Haskell wrapper for the Google Chart API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-gen-iface" = callPackage
    ({ mkDerivation, Cabal, filepath, haskell-names, haskell-packages
     , haskell-src-exts, hse-cpp, mtl, tagged
     }:
     mkDerivation {
       pname = "hs-gen-iface";
       version = "0.5.0";
       sha256 = "1mvzpn7zpk5ffyyqh214yd315dcis8zmm9p4m5099bqhfr735kws";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal filepath haskell-names haskell-packages haskell-src-exts
         hse-cpp mtl tagged
       ];
       description = "Utility to generate haskell-names interface files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hs-gizapp" = callPackage
    ({ mkDerivation, filepath, parsec }:
     mkDerivation {
       pname = "hs-gizapp";
       version = "0.1.0.3";
       sha256 = "1j7ws3jm52n910p08432k60w09971bpcz4j5w48a305nz1dbkscm";
       buildDepends = [ filepath parsec ];
       description = "Haskell wrapper around the GIZA++ toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-java" = callPackage
    ({ mkDerivation, binary, binary-state, control-monad-exception
     , data-binary-ieee754, data-default, filepath, Glob, LibZip
     , MissingH, mtl, parsec, utf8-string
     }:
     mkDerivation {
       pname = "hs-java";
       version = "0.3.4";
       sha256 = "1qv6zwp9fws9s6502d9afwwbsh025xfpw4vsq8wgh2i0gvlskzq7";
       buildDepends = [
         binary binary-state control-monad-exception data-binary-ieee754
         data-default filepath Glob LibZip MissingH mtl parsec utf8-string
       ];
       description = "Java .class files assembler/disassembler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-json-rpc" = callPackage
    ({ mkDerivation, aeson, HTTP, network, text }:
     mkDerivation {
       pname = "hs-json-rpc";
       version = "0.0.0.1";
       sha256 = "0qlzylkplcb0bvh7pd8mwmc0pg69jjh8229a1hg3rhaix08mmj3c";
       buildDepends = [ aeson HTTP network text ];
       homepage = "http://patch-tag.com/r/Azel/hs-json-rpc";
       description = "JSON-RPC client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-logo" = callPackage
    ({ mkDerivation, cmdargs, colour, diagrams-core, diagrams-lib
     , diagrams-svg, HUnit, mtl, parsec, parsec-numbers, QuickCheck
     , random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hs-logo";
       version = "0.5.1";
       sha256 = "0ypr4jpc12f771g3gsahbj0yjzd0ns8mmwjl90knwg267d712i13";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs colour diagrams-core diagrams-lib diagrams-svg mtl parsec
         parsec-numbers random
       ];
       testDepends = [
         cmdargs colour diagrams-core diagrams-lib diagrams-svg HUnit mtl
         parsec parsec-numbers QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://deepakjois.github.com/hs-logo";
       description = "Logo interpreter written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-mesos" = callPackage
    ({ mkDerivation, lens, managed, mesos, protobuf, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "hs-mesos";
       version = "0.20.2.0";
       sha256 = "1vnfmb5mnp3wsbd7s1ls6rz0ywlirykdx7dclkxcc3rh1y0mxp1n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ lens managed ];
       testDepends = [
         lens managed QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       extraLibraries = [ mesos protobuf ];
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) protobuf; };

  "hs-nombre-generator" = callPackage
    ({ mkDerivation, HandsomeSoup, hxt, random }:
     mkDerivation {
       pname = "hs-nombre-generator";
       version = "0.2.1.0";
       sha256 = "1bk278ni5bk8qcc8mbb7h26g9k5hcdl4h1ilrh8prc0kvngz8g4w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HandsomeSoup hxt random ];
       description = "Name generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hs-pgms" = callPackage
    ({ mkDerivation, glib, gtk, MonadPrompt, mtl, random }:
     mkDerivation {
       pname = "hs-pgms";
       version = "0.1.0.1";
       sha256 = "064sk0g8mzkqm80hfxg03qn6g1awydlw15ylikk3rs4wf7fclw30";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ glib gtk MonadPrompt mtl random ];
       description = "Programmer's Mine Sweeper in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-php-session" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hs-php-session";
       version = "0.0.9.3";
       sha256 = "1xwdikiqy2dxyzr6wx51wy51vifsvshblx7kkhfqd7izjf87ww8f";
       homepage = "https://github.com/elblake/hs-php-session";
       description = "PHP session and values serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-pkg-config" = callPackage
    ({ mkDerivation, data-default-class, text }:
     mkDerivation {
       pname = "hs-pkg-config";
       version = "0.1.0.0";
       sha256 = "16660pp64m5n38xl4576iikbxk6g9xpmisbsmahs79fc14y3c1i9";
       buildDepends = [ data-default-class text ];
       homepage = "https://github.com/trskop/hs-pkg-config";
       description = "Create pkg-config configuration files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-pkpass" = callPackage
    ({ mkDerivation, aeson, attoparsec, conduit, filesystem-conduit
     , random, shakespeare-text, shelly, system-filepath, text, time
     , transformers, unordered-containers, uuid, zip-archive
     }:
     mkDerivation {
       pname = "hs-pkpass";
       version = "0.4";
       sha256 = "01jcl2ia8p29gg5yazpxm6cdxyskl6z895lmgh888qkf9jlzf5mf";
       buildDepends = [
         aeson attoparsec conduit filesystem-conduit random shakespeare-text
         shelly system-filepath text time transformers unordered-containers
         uuid zip-archive
       ];
       homepage = "https://github.com/tazjin/hs-pkpass";
       description = "A library for Passbook pass creation & signing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-twitter" = callPackage
    ({ mkDerivation, HTTP, json, mime, network, random, utf8-string }:
     mkDerivation {
       pname = "hs-twitter";
       version = "0.2.8";
       sha256 = "1r8bd5q7d5mxmd6012mpp1yx353wzib174xd9v0mvkbb009b4mph";
       buildDepends = [ HTTP json mime network random utf8-string ];
       description = "Haskell binding to the Twitter API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs-twitterarchiver" = callPackage
    ({ mkDerivation, HTTP, json, mtl, network }:
     mkDerivation {
       pname = "hs-twitterarchiver";
       version = "0.2";
       sha256 = "077mc8dn2f6x3s29pm80qi7mj6s2crdhky0vygzfqd8v23gmhqcg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP json mtl network ];
       homepage = "https://github.com/deepakjois/hs-twitterarchiver";
       description = "Commandline Twitter feed archiver";
       license = "GPL";
     }) {};

  "hs-vcard" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "hs-vcard";
       version = "0.1";
       sha256 = "0qb7gsbki3ciqddxp9j46rnx64vv622n2p9vidv1b000wbmmrz15";
       buildDepends = [ time ];
       homepage = "http://qrcard.us/";
       description = "Implements the RFC 2426 vCard 3.0 spec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs2048" = callPackage
    ({ mkDerivation, doctest, Glob, hlint, hspec, HUnit, QuickCheck
     , random, regex-compat
     }:
     mkDerivation {
       pname = "hs2048";
       version = "0.1.0";
       sha256 = "1hm9lwhq1b8i04gl3z2iw6g67slrjcrymp2fxxvykxgkff6dmkps";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ random ];
       testDepends = [
         doctest Glob hlint hspec HUnit QuickCheck random regex-compat
       ];
       homepage = "https://github.com/tfausak/hs2048";
       description = "A 2048 clone in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hs2bf" = callPackage
    ({ mkDerivation, filepath, haskell-src, mtl }:
     mkDerivation {
       pname = "hs2bf";
       version = "0.6.2";
       sha256 = "1lx0px0gicwry5i4rwgzz6jasjhp24f620w2iby9xpbvn6h3zflm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath haskell-src mtl ];
       homepage = "http://www.xanxys.net/hs2bf/";
       description = "Haskell to Brainfuck compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hs2dot" = callPackage
    ({ mkDerivation, haskell-src, haskell-src-exts, split }:
     mkDerivation {
       pname = "hs2dot";
       version = "0.1.4";
       sha256 = "0pfbclqpndlnxnvs630q8x272q13z9dfp35gp9dj6m527x78fapx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src haskell-src-exts split ];
       homepage = "http://www.github.com/finnsson/hs2graphviz";
       description = "Generate graphviz-code from Haskell-code";
       license = "unknown";
     }) {};

  "hsConfigure" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "hsConfigure";
       version = "0.1.0.2";
       sha256 = "199sza2jh3d5046yyb141b0jwh1m1p68hv4x3b5xz6vw9dzfbw3c";
       editedCabalFile = "00jwlii1w8smc5b0hn8lhiynld3v35hr0fwizm07xq4ryzmn8cmb";
       buildDepends = [ filepath ];
       homepage = "http://github.com/YoshikuniJujo/hsConfigure/wiki";
       description = "By using this package, you can make application configurable";
       license = "LGPL";
     }) {};

  "hsSqlite3" = callPackage
    ({ mkDerivation, bindings-sqlite3, mtl, utf8-string }:
     mkDerivation {
       pname = "hsSqlite3";
       version = "0.1";
       sha256 = "0wmsswccwcz2zd3zap0wsapzbya72cxdyzhlcch4akvwqcl9hz6a";
       buildDepends = [ bindings-sqlite3 mtl utf8-string ];
       description = "Sqlite3 bindings";
       license = "LGPL";
     }) {};

  "hsXenCtrl" = callPackage
    ({ mkDerivation, dlist, mtl, xenctrl }:
     mkDerivation {
       pname = "hsXenCtrl";
       version = "0.2.0";
       sha256 = "0zxmlyckp9c0i5s8vi62d3qvnilh8kl093ckqr7dchgmki4az7rp";
       buildDepends = [ dlist mtl ];
       extraLibraries = [ xenctrl ];
       homepage = "http://haskell.org/haskellwiki/HsXenCtrl";
       description = "FFI bindings to the Xen Control library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsay" = callPackage
    ({ mkDerivation, HTTP }:
     mkDerivation {
       pname = "hsay";
       version = "1.0.0";
       sha256 = "01mjlknqrn7s8xxcvyshw12iaals57q1dzfbxd96wypd4irnzhjn";
       editedCabalFile = "1a7irsaq9k5qgj39a4kbihlffqz2ns3vrb1cyimri9mx4qlkfb6z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP ];
       description = "(ab)Use Google Translate as a speech synthesiser";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hsb2hs" = callPackage
    ({ mkDerivation, filepath, preprocessor-tools }:
     mkDerivation {
       pname = "hsb2hs";
       version = "0.2";
       sha256 = "013n3l80449wxmbfmcidg8mdjk4nkxv7s3jcbfy5g4jps6gsg1fx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath preprocessor-tools ];
       description = "Preprocesses a file, adding blobs from files as string literals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsbackup" = callPackage
    ({ mkDerivation, cmdargs, filepath, hashed-storage, strict, time }:
     mkDerivation {
       pname = "hsbackup";
       version = "0.1.1";
       sha256 = "1g1lb43f7cdm5fjmdd64n9vl2nxlm8jpng94hyyldwv8a6x7555z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs filepath hashed-storage strict time ];
       description = "simple utility for rolling filesystem backups";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsbencher" = callPackage
    ({ mkDerivation, async, data-default, filepath, GenericPretty
     , HUnit, io-streams, mtl, random, test-framework
     , test-framework-hunit, text, time
     }:
     mkDerivation {
       pname = "hsbencher";
       version = "1.20.0.3";
       sha256 = "1qnj4zhq6j4cvnxcparm2xr9qc6l9q7j72h4dr5jz04lz8c2fkcl";
       buildDepends = [
         async data-default filepath GenericPretty io-streams mtl random
         time
       ];
       testDepends = [
         HUnit test-framework test-framework-hunit text time
       ];
       description = "Launch and gather data from Haskell and non-Haskell benchmarks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsbencher-codespeed" = callPackage
    ({ mkDerivation, data-default, filepath, hsbencher, HTTP
     , http-conduit, http-types, json, mtl, network, resourcet, time
     }:
     mkDerivation {
       pname = "hsbencher-codespeed";
       version = "0.1";
       sha256 = "1mq2d5sl0r6maw3sajqs3mcwmc37kr6pkf6qplpl5hskv8i3i7ni";
       buildDepends = [
         data-default filepath hsbencher HTTP http-conduit http-types json
         mtl network resourcet time
       ];
       description = "Backend for uploading benchmark data to CodeSpeed";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsbencher-fusion" = callPackage
    ({ mkDerivation, criterion, csv, data-default, filepath
     , handa-gdata, hsbencher, http-conduit, mtl, network, statistics
     , text, time
     }:
     mkDerivation {
       pname = "hsbencher-fusion";
       version = "0.3.3";
       sha256 = "0vp1biv5jwac3bhj7qxl8x3bw73436qn284fippmlr6f54c15yw8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         criterion csv data-default filepath handa-gdata hsbencher
         http-conduit mtl network statistics text time
       ];
       description = "Backend for uploading benchmark data to Google Fusion Tables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsc2hs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hsc2hs";
       version = "0.67.20120610";
       sha256 = "0kfvpsapgslxywpmqba5vcx79xmbj87dwg8fjjjk517x28wisivz";
       isLibrary = false;
       isExecutable = true;
       description = "A preprocessor that helps with writing Haskell bindings to C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsc3" = callPackage
    ({ mkDerivation, binary, data-default, data-ordlist, filepath
     , hashable, hosc, network, random, safe, split, transformers
     }:
     mkDerivation {
       pname = "hsc3";
       version = "0.15";
       sha256 = "1rmxl1wcly74bjkw79zw9ydmiclk5716w75b4nz8xkqraijiafrg";
       buildDepends = [
         binary data-default data-ordlist filepath hashable hosc network
         random safe split transformers
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3";
       description = "Haskell SuperCollider";
       license = "GPL";
     }) {};

  "hsc3-auditor" = callPackage
    ({ mkDerivation, filepath, hmt, hosc, hsc3, hsc3-sf-hsndfile }:
     mkDerivation {
       pname = "hsc3-auditor";
       version = "0.15";
       sha256 = "02p4y06p08mizdrbvl52364szksrwnx28s992prw8b2ilav11563";
       buildDepends = [ filepath hmt hosc hsc3 hsc3-sf-hsndfile ];
       homepage = "http://rd.slavepianos.org/t/hsc3-auditor";
       description = "Haskell SuperCollider Auditor";
       license = "GPL";
     }) {};

  "hsc3-cairo" = callPackage
    ({ mkDerivation, cairo, gtk, hosc, hsc3, split }:
     mkDerivation {
       pname = "hsc3-cairo";
       version = "0.14";
       sha256 = "1f62mfjssky7igbp1nx2zf1azbih76m65xydnf5akp8pim7nzmis";
       buildDepends = [ cairo gtk hosc hsc3 split ];
       homepage = "http://rd.slavepianos.org/?t=hsc3-cairo";
       description = "haskell supercollider cairo drawing";
       license = "GPL";
     }) {};

  "hsc3-data" = callPackage
    ({ mkDerivation, bifunctors, Glob, hcg-minus, hmt, hsc3-lang
     , hsc3-plot, hsc3-sf-hsndfile, safe, split, SVGPath, xml
     }:
     mkDerivation {
       pname = "hsc3-data";
       version = "0.15";
       sha256 = "0321rnajfiwldwwpns78im842hypykc1js7flnasld7al6m7487d";
       buildDepends = [
         bifunctors Glob hcg-minus hmt hsc3-lang hsc3-plot hsc3-sf-hsndfile
         safe split SVGPath xml
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3-data";
       description = "haskell supercollider data";
       license = "GPL";
     }) {};

  "hsc3-db" = callPackage
    ({ mkDerivation, hsc3, safe }:
     mkDerivation {
       pname = "hsc3-db";
       version = "0.15";
       sha256 = "0sj3hq0d8dl4m6fn75lvyr78sg283p6y13lg8yi2yrgz74kn4zbl";
       buildDepends = [ hsc3 safe ];
       homepage = "http://rd.slavepianos.org/t/hsc3-db";
       description = "Haskell SuperCollider Unit Generator Database";
       license = "GPL";
     }) {};

  "hsc3-dot" = callPackage
    ({ mkDerivation, filepath, hsc3 }:
     mkDerivation {
       pname = "hsc3-dot";
       version = "0.15";
       sha256 = "1ck2g15zw23smry1xvn9ida8ln57vnvkxvr3khhp5didwisgm90m";
       buildDepends = [ filepath hsc3 ];
       homepage = "http://rd.slavepianos.org/t/hsc3-dot";
       description = "haskell supercollider graph drawing";
       license = "GPL";
     }) {};

  "hsc3-forth" = callPackage
    ({ mkDerivation, filepath, hashable, hosc, hsc3, hsc3-db, hsc3-dot
     , mtl
     }:
     mkDerivation {
       pname = "hsc3-forth";
       version = "0.15";
       sha256 = "0b3q6w1r12wv1fl05armkrprlkx2s7n08mimkxxndsd9kl6zl8lw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath hashable hosc hsc3 hsc3-db hsc3-dot mtl
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3-forth";
       description = "FORTH SUPERCOLLIDER";
       license = "GPL";
     }) {};

  "hsc3-graphs" = callPackage
    ({ mkDerivation, binary, cairo, data-default, filepath, hashable
     , hls, hmt, hosc, hps, hsc3, hsc3-cairo, hsc3-lang, hsc3-sf
     , hsc3-unsafe, hsc3-utils, hsharc, MonadRandom, primes, random
     , random-shuffle, sc3-rdu, she, split
     }:
     mkDerivation {
       pname = "hsc3-graphs";
       version = "0.15";
       sha256 = "1d59gl0shwkwi9581j7x7yy1j63acns9ccpwin4y5lwk0k5x6s38";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cairo data-default filepath hashable hls hmt hosc hps hsc3
         hsc3-cairo hsc3-lang hsc3-sf hsc3-unsafe hsc3-utils hsharc
         MonadRandom primes random random-shuffle sc3-rdu she split
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3-graphs";
       description = "Haskell SuperCollider Graphs";
       license = "GPL";
     }) {};

  "hsc3-lang" = callPackage
    ({ mkDerivation, bifunctors, data-default, data-ordlist, dlist
     , hashable, hmatrix-special, hosc, hsc3, MonadRandom, random
     , random-shuffle, split, transformers, vector
     }:
     mkDerivation {
       pname = "hsc3-lang";
       version = "0.15";
       sha256 = "09qn9kb8h40cwhnjf4pl70i2vi7cn4pa4wkdwjbn07hrdpvxgihf";
       buildDepends = [
         bifunctors data-default data-ordlist dlist hashable hmatrix-special
         hosc hsc3 MonadRandom random random-shuffle split transformers
         vector
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3-lang";
       description = "Haskell SuperCollider Language";
       license = "GPL";
     }) {};

  "hsc3-lisp" = callPackage
    ({ mkDerivation, filepath, hashable, hosc, hsc3, hsc3-dot
     , husk-scheme, mtl, safe
     }:
     mkDerivation {
       pname = "hsc3-lisp";
       version = "0.15";
       sha256 = "1k45ipivvlfymvh6rzxsv1kfvd11spsn3skmsswg2vd76bcgh20x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath hashable hosc hsc3 hsc3-dot husk-scheme mtl safe
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3-lisp";
       description = "LISP SUPERCOLLIDER";
       license = "GPL";
     }) {};

  "hsc3-plot" = callPackage
    ({ mkDerivation, filepath, hosc, hsc3, hsc3-lang, split, statistics
     , vector
     }:
     mkDerivation {
       pname = "hsc3-plot";
       version = "0.15";
       sha256 = "1v5n4k54qp8ifwka2bhrq9w1kfzd3ldzhqyhvkcgl0z46xcf7lk3";
       buildDepends = [
         filepath hosc hsc3 hsc3-lang split statistics vector
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3-plot";
       description = "Haskell SuperCollider Plotting";
       license = "GPL";
     }) {};

  "hsc3-process" = callPackage
    ({ mkDerivation, data-default, filepath, hosc, hsc3, time
     , time-compat, transformers
     }:
     mkDerivation {
       pname = "hsc3-process";
       version = "0.10.0";
       sha256 = "1h769akpd5gsmmlzmhya3dh56rhpf4fkj0vl6zngahc5hl4s7qxc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-default filepath hosc hsc3 time time-compat transformers
       ];
       homepage = "https://github.com/kaoskorobase/hsc3-process";
       description = "Create and control scsynth processes";
       license = "GPL";
     }) {};

  "hsc3-rec" = callPackage
    ({ mkDerivation, hsc3 }:
     mkDerivation {
       pname = "hsc3-rec";
       version = "0.14.1";
       sha256 = "0m814vr41i0mm0c001vbih9i93048niljv3z8czaz32wysa8xpfl";
       buildDepends = [ hsc3 ];
       homepage = "http://rd.slavepianos.org/?t=hsc3-rec";
       description = "Haskell SuperCollider Record Variants";
       license = "GPL";
     }) {};

  "hsc3-rw" = callPackage
    ({ mkDerivation, haskell-src-exts, parsec, polyparse, split, syb
     , transformers
     }:
     mkDerivation {
       pname = "hsc3-rw";
       version = "0.15";
       sha256 = "1jcnw0a1nf4wwf5bz61bkpwd3jfgccfxmcqq06vy43pc98223z8p";
       buildDepends = [
         haskell-src-exts parsec polyparse split syb transformers
       ];
       homepage = "http://rd.slavepianos.org/?t=hsc3-rw";
       description = "hsc3 re-writing";
       license = "GPL";
     }) {};

  "hsc3-server" = callPackage
    ({ mkDerivation, bitset, data-default, failure, hashtables, hosc
     , hsc3, hsc3-process, lifted-base, ListZipper, monad-control
     , QuickCheck, random, resourcet, test-framework
     , test-framework-quickcheck2, transformers, transformers-base
     }:
     mkDerivation {
       pname = "hsc3-server";
       version = "0.9.2";
       sha256 = "1lq4y57d555jb0yi10n4j69h4whwsm5h2k6j4r7f9avds5ahh6s2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bitset data-default failure hashtables hosc hsc3 hsc3-process
         lifted-base ListZipper monad-control random resourcet transformers
         transformers-base
       ];
       testDepends = [
         failure QuickCheck random test-framework test-framework-quickcheck2
         transformers
       ];
       homepage = "https://github.com/kaoskorobase/hsc3-server";
       description = "SuperCollider server resource management and synchronization";
       license = "GPL";
     }) {};

  "hsc3-sf" = callPackage
    ({ mkDerivation, hosc }:
     mkDerivation {
       pname = "hsc3-sf";
       version = "0.15";
       sha256 = "1dg3gqhvi2rshfqnw7i89bd4bvqjvbk4f9g17x18swyrvgkz9wr7";
       buildDepends = [ hosc ];
       homepage = "http://rd.slavepianos.org/t/hsc3-sf";
       description = "Haskell SuperCollider SoundFile";
       license = "GPL";
     }) {};

  "hsc3-sf-hsndfile" = callPackage
    ({ mkDerivation, hsc3-sf, hsndfile, hsndfile-vector, vector }:
     mkDerivation {
       pname = "hsc3-sf-hsndfile";
       version = "0.15";
       sha256 = "11ksss2g8a7lqpjqvdwj4j9y3kdc8algc9mhlyjmj38mgg4raa2i";
       buildDepends = [ hsc3-sf hsndfile hsndfile-vector vector ];
       homepage = "http://rd.slavepianos.org/t/hsc3-sf-hsndfile";
       description = "Haskell SuperCollider SoundFile";
       license = "GPL";
     }) {};

  "hsc3-unsafe" = callPackage
    ({ mkDerivation, hsc3 }:
     mkDerivation {
       pname = "hsc3-unsafe";
       version = "0.14";
       sha256 = "0kywqx7x10hqzhq8by0f62aznrnq4y3013cxkccx1r0naajpz3yj";
       buildDepends = [ hsc3 ];
       homepage = "http://rd.slavepianos.org/?t=hsc3-unsafe";
       description = "Unsafe Haskell SuperCollider";
       license = "GPL";
     }) {};

  "hsc3-utils" = callPackage
    ({ mkDerivation, filepath, hashable, hosc, hsc3, hsc3-dot, hsc3-rw
     , hsc3-sf
     }:
     mkDerivation {
       pname = "hsc3-utils";
       version = "0.15";
       sha256 = "1pvg2z6n2r7jhwgwx9rv4q94jdj2ql3kgjh4smjq4xafnzzlyrix";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath hashable hosc hsc3 hsc3-dot hsc3-rw hsc3-sf
       ];
       homepage = "http://rd.slavepianos.org/t/hsc3-utils";
       description = "Haskell SuperCollider Utilities";
       license = "GPL";
     }) {};

  "hscamwire" = callPackage
    ({ mkDerivation, camwire_1394, dc1394_control, raw1394, time }:
     mkDerivation {
       pname = "hscamwire";
       version = "0.2.1";
       sha256 = "0alnwc170hd2dyq718nvfq5dsbnyp29j3z49w2w5k59pi9pnqybc";
       buildDepends = [ time ];
       extraLibraries = [ camwire_1394 dc1394_control raw1394 ];
       description = "Haskell bindings to IIDC1394 cameras, via Camwire";
       license = "LGPL";
     }) {};

  "hscassandra" = callPackage
    ({ mkDerivation, cassandra-thrift, mtl, network, Thrift }:
     mkDerivation {
       pname = "hscassandra";
       version = "0.0.7";
       sha256 = "06jr17karspq3qpan9iqh0zk2w3b2d7ghdvl8wd4hjz73yacw6f4";
       buildDepends = [ cassandra-thrift mtl network Thrift ];
       homepage = "https://github.com/necrobious/hscassandra";
       description = "cassandra database interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hscd" = callPackage
    ({ mkDerivation, aeson, HTTP }:
     mkDerivation {
       pname = "hscd";
       version = "0.0.3";
       sha256 = "1wjf3gba1gfbd54d0r4xpkfq7lyvyamhfw21wnsnqsl4hvp335jr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson HTTP ];
       homepage = "https://bitbucket.org/sebasmagri/hscd";
       description = "Command line client and library for SoundCloud.com";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsclock" = callPackage
    ({ mkDerivation, cairo, glib, gtk }:
     mkDerivation {
       pname = "hsclock";
       version = "1.0";
       sha256 = "0g853fq9vv33nga05rhls6hk5h4gaby8mws0i8yq2iday6j576nf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo glib gtk ];
       homepage = "http://haskell.org/gtk2hs/archives/2006/01/26/cairo-eye-candy/";
       description = "An elegant analog clock using Haskell, GTK and Cairo";
       license = "GPL";
     }) {};

  "hscolour" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hscolour";
       version = "1.20.3";
       sha256 = "15ix93sw4p7g5ln2halcgqppdc0i0vmkzcjzxvqzkk9yp9pq3nrs";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://code.haskell.org/~malcolm/hscolour/";
       description = "Colourise Haskell code";
       license = "GPL";
     }) {};

  "hscope" = callPackage
    ({ mkDerivation, cereal, cpphs, deepseq, haskell-src-exts, mtl
     , pure-cdb, test-simple, uniplate, Unixutils, vector
     }:
     mkDerivation {
       pname = "hscope";
       version = "0.4.1";
       sha256 = "1m5mp45pvf64pnpc3lsig382177vfc232bbm9g3a8q58jrwridy7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cereal cpphs deepseq haskell-src-exts mtl pure-cdb uniplate vector
       ];
       testDepends = [ mtl test-simple Unixutils ];
       homepage = "https://github.com/bosu/hscope";
       description = "cscope like browser for Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hscrtmpl" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "hscrtmpl";
       version = "1.2";
       sha256 = "1ipk44lc2bdh9yhn30b2hkkymyp2srgsqgfdsy8xbxa8frlabhhg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ time ];
       homepage = "http://ui3.info/darcs/hscrtmpl/";
       description = "Haskell shell script template";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hscurses" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "hscurses";
       version = "1.4.1.2";
       sha256 = "1r3njcwad8d4vn17s5g69iw3rhjz9hbhv49wkqqpndck5080fh7l";
       buildDepends = [ mtl ];
       homepage = "https://github.com/skogsbaer/hscurses";
       description = "NCurses bindings for Haskell";
       license = "LGPL";
     }) {};

  "hscurses-fish-ex" = callPackage
    ({ mkDerivation, hscurses, random, safe }:
     mkDerivation {
       pname = "hscurses-fish-ex";
       version = "1.3.1";
       sha256 = "1s7b2v3cl0nl2b55agn5wkvxn30f2bgp6mznkn33148vlbya1mzs";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hscurses random safe ];
       homepage = "http://ui3.info/darcs/hscurses-fish-ex/";
       description = "hscurses swimming fish example";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsdev" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, Cabal, deepseq
     , filepath, ghc-mod, ghc-paths, haddock-api, haskell-src-exts
     , hdocs, HTTP, monad-loops, MonadCatchIO-transformers, mtl, network
     , regex-posix, regexpr, scientific, text, time, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "hsdev";
       version = "0.1.2.5";
       sha256 = "0nsj5j5f7iwb3svxw037hiwdg40vyxzbl2pvyrl3c8g8q1vi10ff";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty attoparsec Cabal deepseq filepath ghc-mod
         ghc-paths haddock-api haskell-src-exts hdocs HTTP monad-loops
         MonadCatchIO-transformers mtl network regex-posix regexpr
         scientific text time transformers unordered-containers vector
       ];
       homepage = "https://github.com/mvoidex/hsdev";
       description = "Haskell development library and tool with support of autocompletion, symbol info, go to declaration, find references etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsdif" = callPackage
    ({ mkDerivation, hosc }:
     mkDerivation {
       pname = "hsdif";
       version = "0.14";
       sha256 = "1wxms6z8mpyf4l1qqxi6gvscls3mwlj5aq6g3ldashzrmb7pcimm";
       buildDepends = [ hosc ];
       homepage = "http://rd.slavepianos.org/?t=hsdif";
       description = "Haskell SDIF";
       license = "GPL";
     }) {};

  "hsdip" = callPackage
    ({ mkDerivation, cairo, HUnit, parsec }:
     mkDerivation {
       pname = "hsdip";
       version = "0.1";
       sha256 = "0hqwpcf2bcrj36wg02mxd2zdg07dqh4b5mv9yn295xp64snrdw84";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo HUnit parsec ];
       homepage = "http://neugierig.org/software/darcs/hsdip/";
       description = "hsdip - a Diplomacy parser/renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsdns" = callPackage
    ({ mkDerivation, adns, network }:
     mkDerivation {
       pname = "hsdns";
       version = "1.6.1";
       sha256 = "0s63acjy1n75k7gjm4kam7v5d4a5kn0aw178mygkqwr5frflghb4";
       buildDepends = [ network ];
       extraLibraries = [ adns ];
       homepage = "http://github.com/peti/hsdns";
       description = "Asynchronous DNS Resolver";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hsdns-cache" = callPackage
    ({ mkDerivation, hsdns, network, SafeSemaphore, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "hsdns-cache";
       version = "1.0.4";
       sha256 = "1f0822kly602izwzxfi46w668k0jybn3khfacnxmc1744jpqr89i";
       buildDepends = [
         hsdns network SafeSemaphore text time unordered-containers
       ];
       homepage = "https://github.com/bazqux/hsdns-cache";
       description = "Caching asynchronous DNS resolver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hse-cpp" = callPackage
    ({ mkDerivation, cpphs, haskell-src-exts }:
     mkDerivation {
       pname = "hse-cpp";
       version = "0.1";
       sha256 = "0f1bgi1hnpnry1pm7jhi626afdvymzy7k0a70n07n41js46pjxd0";
       buildDepends = [ cpphs haskell-src-exts ];
       description = "Preprocess+parse haskell code";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hsebaysdk" = callPackage
    ({ mkDerivation, aeson, conduit, conduit-extra, http-conduit
     , http-types, resourcet, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "hsebaysdk";
       version = "0.2.0.0";
       sha256 = "0xgg4ibk2dl768znvk881py6xisdah83nr12c8dxvzawx2c2a9s2";
       buildDepends = [
         aeson conduit conduit-extra http-conduit http-types resourcet text
         time transformers unordered-containers
       ];
       homepage = "https://github.com/creichert/hsebaysdk";
       description = "Haskell eBay SDK";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsemail" = callPackage
    ({ mkDerivation, doctest, hspec, mtl, parsec }:
     mkDerivation {
       pname = "hsemail";
       version = "1.7.7";
       sha256 = "16wqrpzi5njv26za1rckn74jsqmyswndb6k38yz1567h1y4w7ai5";
       buildDepends = [ mtl parsec ];
       testDepends = [ doctest hspec parsec ];
       homepage = "http://github.com/peti/hsemail";
       description = "Internet Message Parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsemail-ns" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "hsemail-ns";
       version = "1.3.2";
       sha256 = "03d0pnsba7yj5x7zrg8b80kxsnqn5g40vd2i717s1dnn3bd3vz4s";
       buildDepends = [ mtl parsec ];
       homepage = "http://patch-tag.com/r/hsemail-ns/home";
       description = "Internet Message Parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsenv" = callPackage
    ({ mkDerivation, Cabal, file-embed, filepath, http-streams
     , io-streams, mtl, safe, split
     }:
     mkDerivation {
       pname = "hsenv";
       version = "0.5";
       sha256 = "1kjj9p8x6369g9ah9h86xlyvcm4jkahvlz2pvj1m73javbgyyf03";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal file-embed filepath http-streams io-streams mtl safe split
       ];
       homepage = "https://github.com/tmhedberg/hsenv";
       description = "Virtual Haskell Environment builder";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hserv" = callPackage
    ({ mkDerivation, cmdargs, wai-app-static, warp }:
     mkDerivation {
       pname = "hserv";
       version = "0.1.0.3";
       sha256 = "1dvnkd3nwgdz9hq8zafvmn75hczsiflbf05j10nmrj8imhyh70j3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs wai-app-static warp ];
       homepage = "http://github.com/rejuvyesh/hserv";
       description = "Simple http server in haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hsexif" = callPackage
    ({ mkDerivation, binary, hspec, HUnit, iconv, text, time }:
     mkDerivation {
       pname = "hsexif";
       version = "0.6.0.1";
       sha256 = "17vxm7vh8l7bnf5kcw4igkrjwwfzn0byjamaim70095al0ndvrjy";
       buildDepends = [ binary iconv text time ];
       testDepends = [ binary hspec HUnit iconv text time ];
       homepage = "https://github.com/emmanueltouzery/hsexif";
       description = "EXIF handling library in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsfacter" = callPackage
    ({ mkDerivation, language-puppet, text }:
     mkDerivation {
       pname = "hsfacter";
       version = "0.2.1";
       sha256 = "1j7pny0yjpx5qw2d9br723dyic4v09k1qbvrham57p9qxn9m5b0q";
       buildDepends = [ language-puppet text ];
       homepage = "http://lpuppet.banquise.net";
       description = "A small and ugly library that emulates the output of the puppet facter program";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hsfcsh" = callPackage
    ({ mkDerivation, hdaemonize, hslogger, network }:
     mkDerivation {
       pname = "hsfcsh";
       version = "0.0.1";
       sha256 = "1fc1fk33wslfkpb83c3ax251h60d5zn2qiqyw81v19wd5r2a6kqc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hdaemonize hslogger network ];
       homepage = "https://github.com/Yuras/hsfcsh";
       description = "Incremental builder for flash";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsfilt" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hsfilt";
       version = "0.1.0.0";
       sha256 = "063k5f64734wvrl45nrp1yvh3bf51w3dzzf3jj4fmj1gjp07zy48";
       isLibrary = false;
       isExecutable = true;
       description = "Z-decoder";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hsgnutls" = callPackage
    ({ mkDerivation, gcrypt, gnutls, mtl }:
     mkDerivation {
       pname = "hsgnutls";
       version = "0.2.3.2";
       sha256 = "1nd3z8kb4qjaj0hic9b305c15a7g6sfx6dixz8pspvqg1x84cjnm";
       buildDepends = [ mtl ];
       extraLibraries = [ gcrypt gnutls ];
       homepage = "http://www.cs.helsinki.fi/u/ekarttun/hsgnutls";
       description = "Library wrapping the GnuTLS API";
       license = "LGPL";
     }) { inherit (pkgs) gnutls; };

  "hsgnutls-yj" = callPackage
    ({ mkDerivation, gcrypt, gnutls, mtl }:
     mkDerivation {
       pname = "hsgnutls-yj";
       version = "0.2.3.3";
       sha256 = "05dn7kvjxk2pnzv040hyw71nvr83jvdvajq4a9v76kcyjhhwiv0w";
       buildDepends = [ mtl ];
       extraLibraries = [ gcrypt gnutls ];
       homepage = "http://www.cs.helsinki.fi/u/ekarttun/hsgnutls";
       description = "Library wrapping the GnuTLS API";
       license = "LGPL";
     }) { inherit (pkgs) gnutls; };

  "hsgsom" = callPackage
    ({ mkDerivation, random, stm, time }:
     mkDerivation {
       pname = "hsgsom";
       version = "0.2.0";
       sha256 = "1043lavrimaxmscayg4knx7ly0yc0gsb729pg72g897hc455r2dn";
       buildDepends = [ random stm time ];
       description = "An implementation of the GSOM clustering algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsgtd" = callPackage
    ({ mkDerivation, ansi-terminal, haskeline, mtl }:
     mkDerivation {
       pname = "hsgtd";
       version = "0.2";
       sha256 = "0rsi54zhznqdycjkbkdblbfcx7lbvwdwvw0zlxqspyiz2px6lqc6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ansi-terminal haskeline mtl ];
       homepage = "http://www.mlesniak.com/haskell/gettings-things-done-in-haskell/";
       description = "Console-based gettings-things-done application";
       license = "GPL";
     }) {};

  "hsharc" = callPackage
    ({ mkDerivation, xml }:
     mkDerivation {
       pname = "hsharc";
       version = "0.14";
       sha256 = "1mzi074iiz48pcy6rvgqz6ckm0zx115kmvax60bx9bfcanw686vf";
       buildDepends = [ xml ];
       homepage = "http://rd.slavepianos.org/?t=hsharc";
       description = "Haskell SHARC bindings";
       license = "GPL";
     }) {};

  "hsignal" = callPackage
    ({ mkDerivation, binary, hmatrix, hmatrix-gsl, hmatrix-gsl-stats
     , hstatistics, mtl, storable-complex
     }:
     mkDerivation {
       pname = "hsignal";
       version = "0.2.6.1";
       sha256 = "013sswmhvww16kbfmm9mmb1iabzmd41jfq06ppl5fjs5amqlinsk";
       buildDepends = [
         binary hmatrix hmatrix-gsl hmatrix-gsl-stats hstatistics mtl
         storable-complex
       ];
       homepage = "http://code.haskell.org/hsignal";
       description = "Signal processing and EEG data analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsimport" = callPackage
    ({ mkDerivation, attoparsec, cmdargs, dyre, filepath
     , haskell-src-exts, lens, mtl, split, tasty, tasty-golden, text
     }:
     mkDerivation {
       pname = "hsimport";
       version = "0.6.4";
       sha256 = "07v7sm98a0vzfk1xx8mf6l2ybf3rwx4ml2wxp1rlw5w1aapffsfw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec cmdargs dyre haskell-src-exts lens mtl split text
       ];
       testDepends = [ filepath haskell-src-exts tasty tasty-golden ];
       description = "A command line program for extending the import list of a Haskell source file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsini" = callPackage
    ({ mkDerivation, HUnit, mtl, parsec, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th
     }:
     mkDerivation {
       pname = "hsini";
       version = "0.3.1";
       sha256 = "06cys4i1nsic13dkp5jgammm3qykzizlnp6wdka2vl699rvnzaaf";
       buildDepends = [ mtl parsec ];
       testDepends = [
         HUnit mtl parsec QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th
       ];
       description = "Package for user configuration files (INI)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hskeleton" = callPackage
    ({ mkDerivation, Cabal }:
     mkDerivation {
       pname = "hskeleton";
       version = "0.1.1";
       sha256 = "0f06xir28rzpwphk14gkpww8l7gbws4habhm26915idpnd4bva2w";
       buildDepends = [ Cabal ];
       description = "Skeleton for new Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hslackbuilder" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "hslackbuilder";
       version = "0.0.2";
       sha256 = "0j4wkw6hqajgwzik8flfzs2m5rlmy9blm98n5ym56svjypshl55q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://code.haskell.org/~arossato/hslackbuilder";
       description = "HSlackBuilder automatically generates slackBuild scripts from a cabal package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hslibsvm" = callPackage
    ({ mkDerivation, svm }:
     mkDerivation {
       pname = "hslibsvm";
       version = "2.89.0.1";
       sha256 = "00smw10j2ipw10133qc38famar5r6rkswj7bhvb9hdj2rrdyx6sf";
       extraLibraries = [ svm ];
       description = "A FFI binding to libsvm";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) svm; };

  "hslinks" = callPackage
    ({ mkDerivation, Cabal, hint, MemoTrie, regex-compat }:
     mkDerivation {
       pname = "hslinks";
       version = "0.6.1";
       sha256 = "1dqicdvklkczn216qxb7gnjjgvgmr0s6iljyb33qhmmabrx5a7x1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal hint MemoTrie regex-compat ];
       description = "Resolves links to Haskell identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hslogger" = callPackage
    ({ mkDerivation, mtl, network, time }:
     mkDerivation {
       pname = "hslogger";
       version = "1.2.6";
       sha256 = "0yqw7824bn8vb9iynx8lkgswxd0nz484k4bvcwd02wvakbbfawkk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl network time ];
       homepage = "http://software.complete.org/hslogger";
       description = "Versatile logging framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hslogger-template" = callPackage
    ({ mkDerivation, hslogger, mtl }:
     mkDerivation {
       pname = "hslogger-template";
       version = "2.0.2";
       sha256 = "0qkyclj9fajvzbfcs0ik8ncy66x916r40jd85r4wi5nh482i7sp3";
       buildDepends = [ hslogger mtl ];
       description = "Automatic generation of hslogger functions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hslogger4j" = callPackage
    ({ mkDerivation, hslogger }:
     mkDerivation {
       pname = "hslogger4j";
       version = "0.2";
       sha256 = "0mypcdj8npygj9g8d276rhr2wagk96zc4rjimwx2ylw4qm0scv5n";
       buildDepends = [ hslogger ];
       homepage = "http://hslogger4j.googlecode.com/";
       description = "DEPRECATED hslogger handlers for log4j's XMLLayout";
       license = "LGPL";
     }) {};

  "hslogstash" = callPackage
    ({ mkDerivation, aeson, attoparsec, blaze-builder, conduit
     , data-default, hedis, hspec, http-conduit, http-types, iconv, lens
     , network, network-conduit, parallel-io, QuickCheck, split, stm
     , stm-chans, stm-conduit, stm-firehose, text, text-format, time
     , transformers, unordered-containers, vector, wai
     }:
     mkDerivation {
       pname = "hslogstash";
       version = "0.3.7.1";
       sha256 = "040564f4wxmdhglziahava5cbyhvwbiw1ifi1g3cfb9zna2xl8p6";
       buildDepends = [
         aeson attoparsec blaze-builder conduit data-default hedis
         http-conduit http-types iconv lens network network-conduit
         parallel-io stm stm-chans stm-conduit stm-firehose text text-format
         time transformers unordered-containers vector wai
       ];
       testDepends = [ conduit hspec QuickCheck split stm transformers ];
       homepage = "https://github.com/bartavelle/hslogstash";
       description = "A library to work with, or as, a logstash server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hslua" = callPackage
    ({ mkDerivation, lua, mtl }:
     mkDerivation {
       pname = "hslua";
       version = "0.3.13";
       sha256 = "02j3hrzq3dgcv4bvf4xz14qxvzlb0vlxrf7lk9wqwdy43b978mz9";
       buildDepends = [ mtl ];
       pkgconfigDepends = [ lua ];
       configureFlags = "-fsystem-lua";
       description = "A Lua language interpreter embedding in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hsmagick" = callPackage
    ({ mkDerivation, bzip2, filepath, freetype2, GraphicsMagick, jasper
     , lcms, libjpeg, libpng, libxml2, tiff, wmflite, zlib
     }:
     mkDerivation {
       pname = "hsmagick";
       version = "0.5";
       sha256 = "1bfzbwddss0m0z4jf7i0b06pmxy9rvknpqnzhf0v5jggv5nr442p";
       buildDepends = [ filepath ];
       extraLibraries = [ bzip2 jasper libjpeg libpng tiff wmflite zlib ];
       pkgconfigDepends = [ freetype2 GraphicsMagick lcms libxml2 ];
       homepage = "https://github.com/vincentg/hsmagick";
       description = "FFI bindings for the GraphicsMagick library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) freetype2 zlib; };

  "hsmtpclient" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "hsmtpclient";
       version = "1.0";
       sha256 = "08gbrwrc85in34nrgjm0zr5sjz2zbjc7hk2zlpvk1dq8x62a6wsg";
       buildDepends = [ network ];
       homepage = "http://code.google.com/p/hsmtpclient/";
       description = "Simple SMTP Client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsndfile" = callPackage
    ({ mkDerivation, c2hs, libsndfile }:
     mkDerivation {
       pname = "hsndfile";
       version = "0.7.1";
       sha256 = "1254r811sspd7h8a4yr4ff3a6c39ywp1zjrkxbsczpxbyg9bdnv2";
       buildTools = [ c2hs ];
       extraLibraries = [ libsndfile ];
       homepage = "http://haskell.org/haskellwiki/Hsndfile";
       description = "Haskell bindings for libsndfile";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "hsndfile-storablevector" = callPackage
    ({ mkDerivation, hsndfile, storablevector }:
     mkDerivation {
       pname = "hsndfile-storablevector";
       version = "0.5.2";
       sha256 = "1n7jw14pnixiv1z50lb7yzwyyl3yd3gdfg5w0gx0m52pnmqiav9z";
       buildDepends = [ hsndfile storablevector ];
       homepage = "http://haskell.org/haskellwiki/Hsndfile";
       description = "Haskell bindings for libsndfile (Data.StorableVector interface)";
       license = stdenv.lib.licenses.lgpl2;
     }) {};

  "hsndfile-vector" = callPackage
    ({ mkDerivation, hsndfile, vector }:
     mkDerivation {
       pname = "hsndfile-vector";
       version = "0.5.2";
       sha256 = "1598bf87llbiri1qh8zirhbsd94c9vhd41lf9vialqrykbmi3zig";
       buildDepends = [ hsndfile vector ];
       homepage = "http://haskell.org/haskellwiki/Hsndfile";
       description = "Haskell bindings for libsndfile (Data.Vector interface)";
       license = stdenv.lib.licenses.lgpl2;
     }) {};

  "hsnock" = callPackage
    ({ mkDerivation, HUnit, parsec, QuickCheck, readline
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hsnock";
       version = "0.5.1";
       sha256 = "1hh4lyrd2ki79q6pfz62icp3igzyljwa5bz8ba9vk4kxxawrnbhw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec readline ];
       testDepends = [
         HUnit parsec QuickCheck readline test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/mrdomino/hsnock/";
       description = "Nock 5K interpreter";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hsnoise" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "hsnoise";
       version = "0.0.2";
       sha256 = "0f8xpmzmg71l7qn1vjvzncsx8r7vfpzvlnlq0029ixf64gshbmzl";
       buildDepends = [ vector ];
       homepage = "https://github.com/colinhect/hsnoise";
       description = "A coherent 3d noise library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsns" = callPackage
    ({ mkDerivation, network, pcap }:
     mkDerivation {
       pname = "hsns";
       version = "0.5.3";
       sha256 = "0r3z9h5l4hxbjfcqsfk67jp2r964wgvrisk352lpx550vwd6chbf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network pcap ];
       description = "a miniature network sniffer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsnsq" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, attoparsec-binary
     , hostname, hslogger, mtl, network, pipes, pipes-attoparsec
     , pipes-network, stm, stm-chans, text
     }:
     mkDerivation {
       pname = "hsnsq";
       version = "0.1.2.0";
       sha256 = "0chmcyfar29rnsni47yx286a308rll098lxrr1zhyi7kxvh9j4fb";
       buildDepends = [
         aeson async attoparsec attoparsec-binary hostname hslogger mtl
         network pipes pipes-attoparsec pipes-network stm stm-chans text
       ];
       homepage = "https://github.com/gamelost/hsnsq";
       description = "Haskell NSQ client";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "hsntp" = callPackage
    ({ mkDerivation, mtl, network, random }:
     mkDerivation {
       pname = "hsntp";
       version = "0.1";
       sha256 = "0pw5l6z1yjjvcxgw71i00gfnjdqcvg09bsacazq9ahvnwsn4aayd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl network random ];
       homepage = "http://www.cs.helsinki.fi/u/ekarttun/util/";
       description = "Libraries to use SNTP protocol and small client/server implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsoptions" = callPackage
    ({ mkDerivation, HUnit, parsec, QuickCheck, regex-compat
     , regex-posix, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "hsoptions";
       version = "1.0.0.0";
       sha256 = "1c4sigmagwbs3g5pj3as4f930mvba090p7cjq4cy8hbmv6cz0fn1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec regex-compat regex-posix ];
       testDepends = [
         HUnit parsec QuickCheck regex-compat regex-posix test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/josercruz01/hsoptions";
       description = "Haskell library that supports command-line flag processing";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "hsp" = callPackage
    ({ mkDerivation, mtl, text }:
     mkDerivation {
       pname = "hsp";
       version = "0.10.0";
       sha256 = "1ayfywgrlmzivsq6lirmgvl65x1shf8041lzw2yh245rkmd91lsf";
       buildDepends = [ mtl text ];
       homepage = "http://hub.darcs.net/nibro/hsp";
       description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsp-cgi" = callPackage
    ({ mkDerivation, harp, hsp, network }:
     mkDerivation {
       pname = "hsp-cgi";
       version = "0.4.4";
       sha256 = "0m1xylqzmi2c1c92zk5bq6232id9fmjlx4s88ic2fvf5a389n11n";
       buildDepends = [ harp hsp network ];
       homepage = "http://code.google.com/p/hsp";
       description = "Facilitates running Haskell Server Pages web pages as CGI programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsparklines" = callPackage
    ({ mkDerivation, dataenc, gd }:
     mkDerivation {
       pname = "hsparklines";
       version = "0.1.0";
       sha256 = "10za4f07a5agg3zgy32fdz02vg9fl344qswhzj5mnx8wpnxmr3y6";
       buildDepends = [ dataenc gd ];
       homepage = "http://www.jasani.org/search/label/hsparklines";
       description = "Sparklines for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsparql" = callPackage
    ({ mkDerivation, HTTP, http-types, HUnit, MissingH, mtl, network
     , rdf4h, test-framework, test-framework-hunit, text, wai, warp, xml
     }:
     mkDerivation {
       pname = "hsparql";
       version = "0.2.5";
       sha256 = "1rhkl5l414w6pp3q3x0pkahghyagq3fwlny61vn0rpxlyihcin42";
       buildDepends = [ HTTP MissingH mtl network rdf4h text xml ];
       testDepends = [
         http-types HUnit rdf4h test-framework test-framework-hunit text wai
         warp
       ];
       homepage = "https://github.com/robstewart57/hsparql";
       description = "A SPARQL query generator and DSL, and a client to query a SPARQL server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hspear" = callPackage
    ({ mkDerivation, bytestring-lexing, split, utf8-string, zlib }:
     mkDerivation {
       pname = "hspear";
       version = "0.14";
       sha256 = "1h3av9mpgsqfdrd817fz0isqrxn3lxmjyanw33dk9jax136ivi1h";
       buildDepends = [ bytestring-lexing split utf8-string zlib ];
       homepage = "http://rd.slavepianos.org/?t=hspear";
       description = "Haskell Spear Parser";
       license = "GPL";
     }) {};

  "hspec" = callPackage
    ({ mkDerivation, hspec-core, hspec-discover, hspec-expectations
     , hspec-meta, HUnit, QuickCheck, stringbuilder, transformers
     }:
     mkDerivation {
       pname = "hspec";
       version = "2.1.2";
       sha256 = "04n34g7gbmbkyqzp9by4qdcf87m1gasmc2hnm8i0dqpcnssv05py";
       buildDepends = [
         hspec-core hspec-discover hspec-expectations HUnit QuickCheck
         transformers
       ];
       testDepends = [ hspec-core hspec-meta stringbuilder ];
       doCheck = false;
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, hspec, hspec-expectations, text }:
     mkDerivation {
       pname = "hspec-attoparsec";
       version = "0.1.0.1";
       sha256 = "12246p4k0axv6w5jxnid9hyl4cbl3vmd46b7xxli7nq2iw79nl8v";
       buildDepends = [ attoparsec hspec-expectations text ];
       testDepends = [ attoparsec hspec hspec-expectations text ];
       homepage = "http://github.com/alpmestan/hspec-attoparsec";
       description = "Utility functions for testing your attoparsec parsers with hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hspec-checkers" = callPackage
    ({ mkDerivation, checkers, hspec }:
     mkDerivation {
       pname = "hspec-checkers";
       version = "0.1.0";
       sha256 = "043qzgjp9ch9wqm269dd87jn8wk5c90q25098hnz8ilv5pnywk6d";
       buildDepends = [ checkers hspec ];
       testDepends = [ checkers hspec ];
       description = "Allows to use checkers properties from hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hspec-contrib" = callPackage
    ({ mkDerivation, hspec, hspec-core, HUnit, QuickCheck }:
     mkDerivation {
       pname = "hspec-contrib";
       version = "0.2.0";
       sha256 = "0p6jh3j84cq66gfp2pk957ha4ds7797vfbfri9lsg9gd4998dwkq";
       buildDepends = [ hspec-core HUnit ];
       testDepends = [ hspec hspec-core HUnit QuickCheck ];
       homepage = "http://hspec.github.io/";
       description = "Contributed functionality for Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-core" = callPackage
    ({ mkDerivation, ansi-terminal, async, deepseq, hspec-expectations
     , hspec-meta, HUnit, QuickCheck, quickcheck-io, random, setenv
     , silently, tf-random, time, transformers
     }:
     mkDerivation {
       pname = "hspec-core";
       version = "2.1.2";
       sha256 = "1mvsfr175g5dbk1xz48d0p4lv4gvv4z3ss3n2s7d2h83i25bmjvh";
       buildDepends = [
         ansi-terminal async deepseq hspec-expectations HUnit QuickCheck
         quickcheck-io random setenv tf-random time transformers
       ];
       testDepends = [
         ansi-terminal async deepseq hspec-expectations hspec-meta HUnit
         QuickCheck quickcheck-io random setenv silently tf-random time
         transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-discover" = callPackage
    ({ mkDerivation, filepath, hspec-meta }:
     mkDerivation {
       pname = "hspec-discover";
       version = "2.1.2";
       sha256 = "0zv215br94agvg8dbz0f5az5cahgnw8gdx0z84zlrpjxkzf3rb19";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath ];
       testDepends = [ filepath hspec-meta ];
       homepage = "http://hspec.github.io/";
       description = "Automatically discover and run Hspec tests";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-expectations" = callPackage
    ({ mkDerivation, hspec, HUnit, markdown-unlit, silently }:
     mkDerivation {
       pname = "hspec-expectations";
       version = "0.6.1";
       sha256 = "0rr1dn39daxi4kqnbz3k21slxpscz939bx16161rr1zp4v7m1lzj";
       buildDepends = [ HUnit ];
       testDepends = [ hspec HUnit markdown-unlit silently ];
       homepage = "https://github.com/sol/hspec-expectations#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-expectations-lens" = callPackage
    ({ mkDerivation, hspec, hspec-expectations, HUnit, lens, silently
     }:
     mkDerivation {
       pname = "hspec-expectations-lens";
       version = "0.3.0.0";
       sha256 = "1v6j4z3gv41jlhbi8ngx7h6d78l1fazvd3bw3c67zsnlgqrvl1x5";
       buildDepends = [ hspec hspec-expectations HUnit lens ];
       testDepends = [ hspec lens silently ];
       homepage = "http://supki.github.io/hspec-expectations-lens/";
       description = "Hspec expectations for the lens stuff";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hspec-expectations-lifted" = callPackage
    ({ mkDerivation, hspec, hspec-expectations, transformers }:
     mkDerivation {
       pname = "hspec-expectations-lifted";
       version = "0.5.0";
       sha256 = "0c3fxgwxjwqgwpnlxlbp2amhk44m34iq2lxs1rxkp3vjwkqi2m8b";
       buildDepends = [ hspec-expectations transformers ];
       testDepends = [ hspec ];
       description = "A version of hspec-expectations generalized to MonadIO";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-expectations-pretty" = callPackage
    ({ mkDerivation, deepseq, hspec-expectations, wl-pprint-extras
     , wl-pprint-terminfo
     }:
     mkDerivation {
       pname = "hspec-expectations-pretty";
       version = "0.1";
       sha256 = "1x8xpc9b2m33sqwf7j643wjzja956m4vcdvaqrwlpxwqn887sxn5";
       buildDepends = [
         deepseq hspec-expectations wl-pprint-extras wl-pprint-terminfo
       ];
       homepage = "https://github.com/hspec/hspec-expectations#readme";
       description = "hspec-expectations with pretty printing on failure";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-experimental" = callPackage
    ({ mkDerivation, hspec, hspec-meta, HUnit, QuickCheck }:
     mkDerivation {
       pname = "hspec-experimental";
       version = "0.1.0";
       sha256 = "197c9x25r41xmaq84xqhi0kizxi7as7jn7k9klj7pq9fmd9hcg7m";
       buildDepends = [ hspec HUnit QuickCheck ];
       testDepends = [ hspec-meta ];
       description = "An experimental DSL for testing on top of Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-jenkins" = callPackage
    ({ mkDerivation, blaze-markup, hspec }:
     mkDerivation {
       pname = "hspec-jenkins";
       version = "0.1.1";
       sha256 = "16aql0fyssc16z85isskccq93dj5i1pydblnf2q1np7z6pl1azy2";
       buildDepends = [ blaze-markup hspec ];
       homepage = "https://github.com/worksap-ate/hspec-jenkins";
       description = "Jenkins-friendly XML formatter for Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-laws" = callPackage
    ({ mkDerivation, hspec, markdown-unlit, QuickCheck }:
     mkDerivation {
       pname = "hspec-laws";
       version = "0.0.0";
       sha256 = "15mcspn20znjxjsjqivrfvpndjd2i3kic5nyij13lfwyd3p2al0j";
       buildDepends = [ hspec QuickCheck ];
       testDepends = [ hspec markdown-unlit QuickCheck ];
       description = "Document and test laws for standard type classes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-meta" = callPackage
    ({ mkDerivation, ansi-terminal, async, deepseq, filepath
     , hspec-expectations, HUnit, QuickCheck, quickcheck-io, random
     , setenv, time, transformers
     }:
     mkDerivation {
       pname = "hspec-meta";
       version = "2.0.0";
       sha256 = "0x1k2d4nycglzn9l4i32xrampr9fgzjpp4j1jyy7pj89cfl8jc8f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal async deepseq filepath hspec-expectations HUnit
         QuickCheck quickcheck-io random setenv time transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A version of Hspec which is used to test Hspec itself";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-server" = callPackage
    ({ mkDerivation, hspec, hspec-core, HUnit, regex-posix, temporary
     , transformers
     }:
     mkDerivation {
       pname = "hspec-server";
       version = "0.1.0.0";
       sha256 = "04kq9g8hwllzz4rcn42jw62wvhp6dbs71hagfb5wls4a9ijn15jm";
       buildDepends = [
         hspec hspec-core HUnit regex-posix temporary transformers
       ];
       testDepends = [ hspec ];
       description = "Test Framework for Server's status";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hspec-shouldbe" = callPackage
    ({ mkDerivation, hspec, test-shouldbe }:
     mkDerivation {
       pname = "hspec-shouldbe";
       version = "0.0.0";
       sha256 = "09fp3cl7mshn1812f1v7mvbcmgibbwy6ai7g1f0ndy5ipbam0yi5";
       buildDepends = [ hspec test-shouldbe ];
       description = "Convenience wrapper and utilities for hspec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-smallcheck" = callPackage
    ({ mkDerivation, hspec, QuickCheck, smallcheck }:
     mkDerivation {
       pname = "hspec-smallcheck";
       version = "0.3.0";
       sha256 = "1yybyrbbj0fv62cf8nh851rgbb8phyhpsm57mzn7s5vqz7lf7dxw";
       buildDepends = [ hspec smallcheck ];
       testDepends = [ hspec QuickCheck smallcheck ];
       homepage = "http://hspec.github.io/";
       description = "SmallCheck support for the Hspec testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-snap" = callPackage
    ({ mkDerivation, aeson, digestive-functors, HandsomeSoup, hspec
     , hspec-core, hxt, lens, mtl, snap, snap-core, snap-extras, text
     , transformers
     }:
     mkDerivation {
       pname = "hspec-snap";
       version = "0.3.2.1";
       sha256 = "07xidrydb38zj7scw7wa9w80ligq8bplxnh90ngwwmk7ifphlxyd";
       buildDepends = [
         digestive-functors HandsomeSoup hspec hspec-core hxt lens mtl snap
         snap-core text transformers
       ];
       testDepends = [
         aeson digestive-functors HandsomeSoup hspec hspec-core hxt lens mtl
         snap snap-core snap-extras text transformers
       ];
       homepage = "https://github.com/dbp/hspec-snap";
       description = "A library for testing with Hspec and the Snap Web Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hspec-test-framework" = callPackage
    ({ mkDerivation, hspec, hspec-contrib, hspec-core, HUnit
     , QuickCheck
     }:
     mkDerivation {
       pname = "hspec-test-framework";
       version = "0.1.0";
       sha256 = "13rlyn4yibajj469hzvw6hmvm3lyra11fl73g49zc3nvcial5ldv";
       buildDepends = [ hspec hspec-contrib hspec-core HUnit QuickCheck ];
       homepage = "http://hspec.github.io/";
       description = "Run test-framework tests with Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-test-framework-th" = callPackage
    ({ mkDerivation, hspec-test-framework, HUnit
     , language-haskell-extract
     }:
     mkDerivation {
       pname = "hspec-test-framework-th";
       version = "0.1.0";
       sha256 = "1apzvrbyksz5jai0i6x5y8lz1rpi2px5x9rwirhm1flbzvpdypma";
       buildDepends = [ hspec-test-framework language-haskell-extract ];
       testDepends = [ hspec-test-framework HUnit ];
       homepage = "http://hspec.github.io/";
       description = "Run test-framework tests with Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-wai" = callPackage
    ({ mkDerivation, case-insensitive, hspec, hspec-core
     , hspec-expectations, http-types, QuickCheck, text, transformers
     , wai, wai-extra
     }:
     mkDerivation {
       pname = "hspec-wai";
       version = "0.6.2";
       sha256 = "0nia4hz41g4264mn4s5j8dn9dh0xhdf1gym92wvjmy43rhj3qpzb";
       buildDepends = [
         case-insensitive hspec-core hspec-expectations http-types text
         transformers wai wai-extra
       ];
       testDepends = [
         case-insensitive hspec hspec-core hspec-expectations http-types
         QuickCheck text transformers wai wai-extra
       ];
       description = "Experimental Hspec support for testing WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-wai-json" = callPackage
    ({ mkDerivation, aeson, aeson-qq, hspec, hspec-wai }:
     mkDerivation {
       pname = "hspec-wai-json";
       version = "0.6.0";
       sha256 = "0r9p8v3cynyx5gnan86cc0l5hrmnm3mx7w2kkc1npv6zq0cj1bgq";
       buildDepends = [ aeson aeson-qq hspec-wai ];
       testDepends = [ hspec hspec-wai ];
       description = "Testing JSON APIs with hspec-wai";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec-webdriver" = callPackage
    ({ mkDerivation, data-default, hashable, hspec, hspec-core, HUnit
     , lifted-base, stm, text, transformers, unordered-containers
     , webdriver
     }:
     mkDerivation {
       pname = "hspec-webdriver";
       version = "1.0.1";
       sha256 = "14fdmlvdpkq2f05kjdwiz48m4mrlzgq3dr7k19ljpv2rvcjv6lr9";
       buildDepends = [
         data-default hashable hspec hspec-core HUnit lifted-base stm text
         transformers unordered-containers webdriver
       ];
       homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
       description = "Write end2end web application tests using webdriver and hspec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspec2" = callPackage
    ({ mkDerivation, hspec, hspec-discover }:
     mkDerivation {
       pname = "hspec2";
       version = "0.6.1";
       sha256 = "0zlvm7r46q8yhgx2kx9mfrf6x2f5amdbi3a59fh69dsqs4lbgmf4";
       editedCabalFile = "0zqh0f7d89aw3ib7mx2wlkpc166f3zipgka4m54y2shcz3rbl7nl";
       buildDepends = [ hspec hspec-discover ];
       homepage = "http://hspec.github.io/";
       description = "Alpha version of Hspec 2.0";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hspr-sh" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hspr-sh";
       version = "0.3";
       sha256 = "1qnqg2gg93l5dp2nyvvaq7n58gsnljvbafbhfpvys48g5ry2dk7a";
       homepage = "http://www.cs.chalmers.se/~d00nibro/hsp/";
       description = "Session handler for HSP";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hspread" = callPackage
    ({ mkDerivation, binary, extensible-exceptions, network }:
     mkDerivation {
       pname = "hspread";
       version = "0.3.3";
       sha256 = "1z7v5awagmhxyz4cl020s4gk4yxp0i62z3hqm9kwf73b3b69x2kf";
       buildDepends = [ binary extensible-exceptions network ];
       description = "A client library for the spread toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hspresent" = callPackage
    ({ mkDerivation, vty }:
     mkDerivation {
       pname = "hspresent";
       version = "0.2.2";
       sha256 = "0x4f3y8l8vj1498bnw4fxw9nzf7q2y4vjys72j73h50c7hr83j07";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ vty ];
       description = "A terminal presentation tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsprocess" = callPackage
    ({ mkDerivation, easy-file, filepath, hint, hspec, HUnit
     , MonadCatchIO-mtl, QuickCheck, stringsearch, test-framework
     , test-framework-hunit, time
     }:
     mkDerivation {
       pname = "hsprocess";
       version = "0.3";
       sha256 = "1g47g3i8fgknzyf7pp7g1mk2bfn7r7igm0c6j2v9fnahhrpj4a5z";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         easy-file filepath hint MonadCatchIO-mtl stringsearch time
       ];
       testDepends = [
         hspec HUnit QuickCheck test-framework test-framework-hunit
       ];
       description = "The Haskell Stream Processor command line utility";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hsql" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hsql";
       version = "1.8.2";
       sha256 = "0i53n42ynq22fzlz4kpmri4q4abmi4dz8bz0izn307is1pmk4bby";
       description = "Database access from Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsql-mysql" = callPackage
    ({ mkDerivation, Cabal, hsql, mysqlclient }:
     mkDerivation {
       pname = "hsql-mysql";
       version = "1.8.3";
       sha256 = "0834jr5jrr1m7ap93wvmb5ir0906f7f7xx52x21i1l1jfpan34j9";
       editedCabalFile = "1aqlpx6fjyp2pyjxz0bs5qrvvj1105g4lgm94g7hlcbfrcgbgfz1";
       buildDepends = [ Cabal hsql ];
       extraLibraries = [ mysqlclient ];
       description = "MySQL driver for HSQL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsql-odbc" = callPackage
    ({ mkDerivation, hsql, odbc }:
     mkDerivation {
       pname = "hsql-odbc";
       version = "1.8.2";
       sha256 = "0lz9zjy1xgjjbabbi2hcrvsnfid6c78y2cb2703qjwr93xy54f1f";
       buildDepends = [ hsql ];
       extraLibraries = [ odbc ];
       description = "A Haskell Interface to ODBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsql-postgresql" = callPackage
    ({ mkDerivation, hsql, postgresql }:
     mkDerivation {
       pname = "hsql-postgresql";
       version = "1.8.2";
       sha256 = "0yj0jalpapjvpxmc79yd6bn93ax13pp87dipbg2c9mxf3p38jc9z";
       buildDepends = [ hsql ];
       extraLibraries = [ postgresql ];
       description = "A Haskell Interface to PostgreSQL via the PQ library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsql-sqlite3" = callPackage
    ({ mkDerivation, hsql, sqlite }:
     mkDerivation {
       pname = "hsql-sqlite3";
       version = "1.8.2";
       sha256 = "15f7f4f4k1afrpmkw2k6lyx1b81hlwvwv660yh0vm2vz269mxycl";
       buildDepends = [ hsql ];
       extraLibraries = [ sqlite ];
       description = "SQLite3 driver for HSQL";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) sqlite; };

  "hsqml" = callPackage
    ({ mkDerivation, c2hs, filepath, Qt5Core, Qt5Gui, Qt5Qml, Qt5Quick
     , Qt5Widgets, QuickCheck, tagged, text, transformers
     }:
     mkDerivation {
       pname = "hsqml";
       version = "0.3.2.1";
       sha256 = "1hz9j592kj1jihsb7gahy3rj4zyma204hsikijwxqs6nr02vx3hr";
       buildDepends = [ filepath tagged text transformers ];
       testDepends = [ QuickCheck tagged text ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ Qt5Core Qt5Gui Qt5Qml Qt5Quick Qt5Widgets ];
       homepage = "http://www.gekkou.co.uk/software/hsqml/";
       description = "Haskell binding for Qt Quick";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsqml-demo-morris" = callPackage
    ({ mkDerivation, deepseq, hsqml, OddWord, text }:
     mkDerivation {
       pname = "hsqml-demo-morris";
       version = "0.3.1.0";
       sha256 = "0zkjcll4hgsv1ji4rd48fx95hn90vl9vvdzxbirqfaf40xai58md";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ deepseq hsqml OddWord text ];
       homepage = "http://www.gekkou.co.uk/software/hsqml/";
       description = "HsQML-based implementation of Nine Men's Morris";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsqml-demo-notes" = callPackage
    ({ mkDerivation, hsqml, sqlite-simple, text }:
     mkDerivation {
       pname = "hsqml-demo-notes";
       version = "0.3.2.0";
       sha256 = "0d754caiip1hgzhw2lc09bqyk7g3zqlyr3y51fa76v4dl7d0maxj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hsqml sqlite-simple text ];
       homepage = "http://www.gekkou.co.uk/software/hsqml/";
       description = "Sticky notes example program implemented in HsQML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsqml-demo-samples" = callPackage
    ({ mkDerivation, hsqml, OpenGL, OpenGLRaw, text }:
     mkDerivation {
       pname = "hsqml-demo-samples";
       version = "0.3.2.0";
       sha256 = "017yqpk5kivcm070lqlmb5ml19hrghc22h5h2svk4mwszscf65fc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hsqml OpenGL OpenGLRaw text ];
       homepage = "http://www.gekkou.co.uk/software/hsqml/";
       description = "HsQML sample programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsqml-morris" = callPackage
    ({ mkDerivation, deepseq, hsqml, OddWord, tagged }:
     mkDerivation {
       pname = "hsqml-morris";
       version = "0.2.0.0";
       sha256 = "1qisi1r8lljgkwc9v5p3nqq6b78vdn9wyydsp31dxqnbd1lyg5ax";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ deepseq hsqml OddWord tagged ];
       homepage = "http://www.gekkou.co.uk/";
       description = "HsQML-based implementation of Nine Men's Morris";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsshellscript" = callPackage
    ({ mkDerivation, c2hs, parsec, random }:
     mkDerivation {
       pname = "hsshellscript";
       version = "3.3.2";
       sha256 = "0rc78yx82gy7a3dxl1mn9hrj1cqhq51zq6w4nf11rzgn6106zdln";
       buildDepends = [ parsec random ];
       buildTools = [ c2hs ];
       homepage = "http://www.volker-wysk.de/hsshellscript/";
       description = "Haskell for Unix shell scripting tasks";
       license = "LGPL";
     }) {};

  "hssourceinfo" = callPackage
    ({ mkDerivation, filepath, regexpr }:
     mkDerivation {
       pname = "hssourceinfo";
       version = "0.0.2";
       sha256 = "07g1wsm4131ymp4ym33fx8yfs0bsqn9as65lkyg21ajc0dz2j1qa";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath regexpr ];
       description = "get haskell source code info";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hssqlppp" = callPackage
    ({ mkDerivation, groom, HUnit, mtl, parsec, syb, test-framework
     , test-framework-hunit, transformers, uniplate
     }:
     mkDerivation {
       pname = "hssqlppp";
       version = "0.4.2";
       sha256 = "083mczqb5ca52ly88xhmd8244q8j1iyf0kkxmgp4w13w6sa5lwzl";
       buildDepends = [ mtl parsec syb transformers uniplate ];
       testDepends = [
         groom HUnit mtl parsec syb test-framework test-framework-hunit
         transformers uniplate
       ];
       homepage = "http://jakewheat.github.com/hssqlppp/";
       description = "SQL parser and type checker";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hstatistics" = callPackage
    ({ mkDerivation, hmatrix, hmatrix-gsl-stats, random, vector }:
     mkDerivation {
       pname = "hstatistics";
       version = "0.2.5.2";
       sha256 = "08bkffx3d87c3cb3zp0gdj10cw1cb2m55lbqkh6b6lvxjy26igvp";
       buildDepends = [ hmatrix hmatrix-gsl-stats random vector ];
       homepage = "http://code.haskell.org/hstatistics";
       description = "Statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hstats" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hstats";
       version = "0.3";
       sha256 = "04v03gha4p0i9ymjladmzpw8mwk72s60aihk50k2ixqja976y9hj";
       homepage = "http://github.com/unmarshal/hstats/";
       description = "Statistical Computing in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hstatsd" = callPackage
    ({ mkDerivation, mtl, network, text }:
     mkDerivation {
       pname = "hstatsd";
       version = "0.1";
       sha256 = "092q52yyb1xdji1y72bdcgvp8by2w1z9j717sl1gmh2p89cpjrs4";
       buildDepends = [ mtl network text ];
       homepage = "https://github.com/mokus0/hstatsd";
       description = "Quick and dirty statsd interface";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hstest" = callPackage
    ({ mkDerivation, filepath, ghc-paths, HUnit, mtl, QuickCheck
     , random
     }:
     mkDerivation {
       pname = "hstest";
       version = "0.0.1";
       sha256 = "0afvl5b82alnbdj0l26scg1qy7rln94qk9an252p83zlg5nd16gd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ghc-paths HUnit mtl QuickCheck random ];
       homepage = "http://bitbucket.org/dave4420/hstest/wiki/Home";
       description = "Runs tests via QuickCheck1 and HUnit; like quickCheck-script but uses GHC api";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hstidy" = callPackage
    ({ mkDerivation, haskell-src-exts }:
     mkDerivation {
       pname = "hstidy";
       version = "0.2";
       sha256 = "1hjsdxl0vn42n5kfiq42yvrr3j31sjy9g7iwjlnj2x72jff79vxs";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src-exts ];
       homepage = "http://code.haskell.org/~morrow/code/haskell/hstidy";
       description = "Takes haskell source on stdin, parses it, then prettyprints it to stdout";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hstorchat" = callPackage
    ({ mkDerivation, attoparsec, hsqml, HUnit, network, QuickCheck
     , random, safecopy, socks, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "hstorchat";
       version = "0.1.1.0";
       sha256 = "1d87s6f6qgq7sbqzdgidnn3gxz9panhdk2mfhd7263hb9mrq1k3c";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec hsqml network random safecopy socks tagged text
       ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Distributed instant messaging over Tor";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "hstradeking" = callPackage
    ({ mkDerivation, aeson, attoparsec, case-insensitive, conduit
     , configurator, hoauth, http-conduit, lifted-base, numbers
     , resourcet, RSA, safe, text, time, transformers, vector
     }:
     mkDerivation {
       pname = "hstradeking";
       version = "0.1.0";
       sha256 = "10wyvfha6vngrj8h8i9dx1skyz3c4g1pcx13cafix5cpim6dr64w";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec case-insensitive conduit configurator hoauth
         http-conduit lifted-base numbers resourcet RSA safe text time
         transformers vector
       ];
       description = "Tradeking API bindings for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hstyle" = callPackage
    ({ mkDerivation, cmdargs, filepath, haskell-src-exts, syb, text
     , vector
     }:
     mkDerivation {
       pname = "hstyle";
       version = "0.2.0.3";
       sha256 = "1a63i54zd9ls1lii4p2qzpds3q8xbcl8w8b6m53ix3n6ikpa4n35";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs filepath haskell-src-exts syb text vector
       ];
       description = "Checks Haskell source code for style compliance";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hstzaar" = callPackage
    ({ mkDerivation, cairo, filepath, glade, gtk, parallel, QuickCheck
     , random, xml
     }:
     mkDerivation {
       pname = "hstzaar";
       version = "0.9.3";
       sha256 = "1hjf5n7m5d9bnj1rwnsf2pvs6vcfvv2hf53a6pbyb63c4rgqzk2m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo filepath glade gtk parallel QuickCheck random xml
       ];
       homepage = "http://www.dcc.fc.up.pt/~pbv/stuff/hstzaar";
       description = "A two player abstract strategy game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsubconvert" = callPackage
    ({ mkDerivation, cmdargs, general-prelude, gitlib, hslogger, lens
     , mtl, parallel-io, regex-posix, stringable, svndump, system-fileio
     , system-filepath, text, text-format, time, transformers
     }:
     mkDerivation {
       pname = "hsubconvert";
       version = "0.0.2";
       sha256 = "1sl7dxqi47x937wivdlx5yg6a4niczcz22xs3flvgsrxbx1ahy9w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs general-prelude gitlib hslogger lens mtl parallel-io
         regex-posix stringable svndump system-fileio system-filepath text
         text-format time transformers
       ];
       homepage = "https://github.com/jwiegley/hsubconvert";
       description = "One-time, faithful conversion of Subversion repositories to Git";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hswip" = callPackage
    ({ mkDerivation, mtl, ncurses, readline, swipl }:
     mkDerivation {
       pname = "hswip";
       version = "0.3";
       sha256 = "11nlpnfjnypz76m2padkz7ppjdir1vz3bp65s9wzphvnsmp3a681";
       buildDepends = [ mtl ];
       extraLibraries = [ ncurses readline swipl ];
       description = "embedding prolog in haskell";
       license = "GPL";
     }) { inherit (pkgs) ncurses readline; };

  "hsx" = callPackage
    ({ mkDerivation, haskell-src-exts, mtl, utf8-string }:
     mkDerivation {
       pname = "hsx";
       version = "0.10.5";
       sha256 = "046428y16h6za41lwqkp5pnqfd74zw8jiz8xw7j7sq0rhylg134v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskell-src-exts mtl utf8-string ];
       homepage = "http://patch-tag.com/r/nibro/hsx";
       description = "HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsx-jmacro" = callPackage
    ({ mkDerivation, happstack-hsp, hsp, jmacro, mtl, text
     , wl-pprint-text
     }:
     mkDerivation {
       pname = "hsx-jmacro";
       version = "7.3.6";
       sha256 = "1fr60b57z2ri2pfs890xvrzrh4n75p2j4nmb7b819cf4rhgshgnh";
       buildDepends = [
         happstack-hsp hsp jmacro mtl text wl-pprint-text
       ];
       homepage = "http://www.happstack.com/";
       description = "hsp+jmacro support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsx-xhtml" = callPackage
    ({ mkDerivation, hsx, mtl }:
     mkDerivation {
       pname = "hsx-xhtml";
       version = "0.4.4";
       sha256 = "1051fh4yjnsax60v4rfh5r87n660ygq033gmg710nm3gw57ihkl2";
       buildDepends = [ hsx mtl ];
       homepage = "http://code.google.com/hsp";
       description = "XHTML utilities to use together with HSX";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsx2hs" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, mtl
     , utf8-string
     }:
     mkDerivation {
       pname = "hsx2hs";
       version = "0.13.2";
       sha256 = "1xszshj94vwh9mxm1h4pvj7x0jivid065f1gqf1l4crd4d4488mc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         haskell-src-exts haskell-src-meta mtl utf8-string
       ];
       homepage = "http://hub.darcs.net/nibro/hsx2hs";
       description = "HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsyscall" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hsyscall";
       version = "0.4";
       sha256 = "0ysi317vwgksaq78k31sb8s34rjjhl4w8ncvycfsmmdnv7cdg2ld";
       homepage = "http://github.com/aycanirican/hsyscall";
       description = "FFI to syscalls";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hsyslog" = callPackage
    ({ mkDerivation, doctest }:
     mkDerivation {
       pname = "hsyslog";
       version = "2.0";
       sha256 = "02v698grn43bvikqhqiz9ys8x2amngdmhvl3i0ar9203p2x8q3pq";
       testDepends = [ doctest ];
       homepage = "http://github.com/peti/hsyslog";
       description = "FFI interface to syslog(3) from POSIX.1-2001";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hszephyr" = callPackage
    ({ mkDerivation, com_err, mtl, time, zephyr }:
     mkDerivation {
       pname = "hszephyr";
       version = "0.1";
       sha256 = "0lgzricdq2vijmsqrwg93amxslmdwzj17c4ppmws3pcb54xj2fsr";
       buildDepends = [ mtl time ];
       extraLibraries = [ com_err zephyr ];
       description = "Simple libzephyr bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "htags" = callPackage
    ({ mkDerivation, filepath, haskell-src, mtl }:
     mkDerivation {
       pname = "htags";
       version = "1.0.1";
       sha256 = "064ddzligzqimdhprgpgl1j0gf4xv53anaisx3fc88as104q8zjk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath haskell-src mtl ];
       description = "A Haskell98 parsing tags program similar to ctags";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "htar" = callPackage
    ({ mkDerivation, bzlib, filepath, tar, zlib }:
     mkDerivation {
       pname = "htar";
       version = "0.4";
       sha256 = "1yxp3kql8viavx5vwxcm5gqilsq82bspx42c45n4ix13h0z2ww5m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bzlib filepath tar zlib ];
       description = "Command-line tar archive utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "htiled" = callPackage
    ({ mkDerivation, base64-bytestring, filepath, hxt, split, zlib }:
     mkDerivation {
       pname = "htiled";
       version = "0.1.2.0";
       sha256 = "1g0fak4iwjii5zvn79hcdydrp4vs5c0nwwbf7v2m2gajw1r34fg9";
       buildDepends = [ base64-bytestring filepath hxt split zlib ];
       description = "Import from the Tiled map editor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "htime" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "htime";
       version = "0.3";
       sha256 = "0pqk91iycqvy3iq86i0b54bpp9cd720z463q6cwbvc9yzk5bf7zz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ time ];
       description = "Timing utility for the command line";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "html" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "html";
       version = "1.0.1.2";
       sha256 = "0q9hmfii62kc82ijlg238fxrzxhsivn42x5wd6ffcr9xldg4jd8c";
       description = "HTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "html-conduit" = callPackage
    ({ mkDerivation, conduit, conduit-extra, hspec, HUnit, resourcet
     , system-filepath, tagstream-conduit, text, transformers
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "html-conduit";
       version = "1.1.1.1";
       sha256 = "1bsr0fsy7k606m477c4rxdh7j71nyrp86f1lg9wlwnbm31vrhw00";
       buildDepends = [
         conduit conduit-extra resourcet system-filepath tagstream-conduit
         text transformers xml-conduit xml-types
       ];
       testDepends = [ hspec HUnit xml-conduit ];
       homepage = "https://github.com/snoyberg/xml";
       description = "Parse HTML documents using xml-conduit datatypes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "html-kure" = callPackage
    ({ mkDerivation, hxt, kure }:
     mkDerivation {
       pname = "html-kure";
       version = "0.2";
       sha256 = "022m9lm642g7as0a5qkgmmamsh51kgx9nk6y01wgq24ln65injmr";
       buildDepends = [ hxt kure ];
       homepage = "www.ittc.ku.edu/csdl/fpg/software/html-kure";
       description = "HTML rewrite engine, using KURE";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "html-minimalist" = callPackage
    ({ mkDerivation, xml }:
     mkDerivation {
       pname = "html-minimalist";
       version = "0.15";
       sha256 = "06qhjb8c1x9wab77g493bbqqm068alkc4vn7c6dj810gdgxwgw5j";
       buildDepends = [ xml ];
       homepage = "http://rd.slavepianos.org/t/html-minimalist";
       description = "Minimalist haskell html library";
       license = "GPL";
     }) {};

  "html-rules" = callPackage
    ({ mkDerivation, lens, mtl, tagsoup, transformers }:
     mkDerivation {
       pname = "html-rules";
       version = "0.1.0.1";
       sha256 = "1k0jqx1mlcar6z8ggrz3fv1nzilkwdxvg3gvsb3pg7nvbkhz5lpw";
       buildDepends = [ lens mtl tagsoup transformers ];
       homepage = "http://github.com/kylcarte/html-rules/";
       description = "Perform traversals of HTML structures using sets of rules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "html-truncate" = callPackage
    ({ mkDerivation, tagsoup }:
     mkDerivation {
       pname = "html-truncate";
       version = "0.3.0.0";
       sha256 = "1d66kdg81774b8isw1mfkl54sgmaz0n04n6shd5jjz18sjwyxp14";
       buildDepends = [ tagsoup ];
       homepage = "https://github.com/mruegenberg/html-truncate";
       description = "A HTML truncator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "html2hamlet" = callPackage
    ({ mkDerivation, ascii, blaze-builder, cmdargs, hamlet
     , http-enumerator, network, text, xmlhtml
     }:
     mkDerivation {
       pname = "html2hamlet";
       version = "0.1.0";
       sha256 = "1nh6whpc9xdlmkw4n3lfi8xgfbgvb0lz7dry25j5fgxgvpsa0g9d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ascii blaze-builder cmdargs hamlet http-enumerator network text
         xmlhtml
       ];
       homepage = "http://github.com/tanakh/html2hamlet";
       description = "HTML to Hamlet converter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "htodo" = callPackage
    ({ mkDerivation, HDBC, HDBC-sqlite3 }:
     mkDerivation {
       pname = "htodo";
       version = "0.0.4";
       sha256 = "0av34wypj47h4aifwqjjdwihb5b5jly5hcr32jq64ld94b7r4l2m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HDBC HDBC-sqlite3 ];
       homepage = "http://github.com/pirapira/htodo";
       description = "A todo application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "htrace" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "htrace";
       version = "0.1";
       sha256 = "0ar1w9p6ppag2vp8kw6byirhfdfs4r639pjh5icnyiiliz6jkvlx";
       description = "Hierarchical tracing for debugging of lazy evaluation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hts" = callPackage
    ({ mkDerivation, hmt, xml }:
     mkDerivation {
       pname = "hts";
       version = "0.15";
       sha256 = "0l09skjsds4p9kdwrwrxg8hdd1ja7m2zmggf23dfimzm1jsij6y2";
       buildDepends = [ hmt xml ];
       homepage = "http://rd.slavepianos.org/t/hts";
       description = "Haskell Music Typesetting";
       license = "GPL";
     }) {};

  "htsn" = callPackage
    ({ mkDerivation, cmdargs, configurator, filepath, hdaemonize
     , hslogger, htsn-common, hxt, MissingH, network, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "htsn";
       version = "0.1.1";
       sha256 = "123h3x22652xfnc1szvclnhfnr5wb5ndx8ahyvramvgjr1mmxpp5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs configurator filepath hdaemonize hslogger htsn-common hxt
         MissingH network tasty tasty-hunit
       ];
       testDepends = [
         cmdargs configurator filepath hdaemonize hslogger htsn-common hxt
         MissingH network tasty tasty-hunit
       ];
       description = "Parse XML files from The Sports Network feed";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "htsn-common" = callPackage
    ({ mkDerivation, ansi-terminal, hslogger, transformers }:
     mkDerivation {
       pname = "htsn-common";
       version = "0.0.2";
       sha256 = "0ywp0683mna16znsqn6h6k5iihpzhj909hivgmlvfzkrn6plvc15";
       buildDepends = [ ansi-terminal hslogger transformers ];
       description = "Display/logging facilities used by both htsn and htsn-import";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "htsn-import" = callPackage
    ({ mkDerivation, cmdargs, configurator, doctest, filepath
     , groundhog, groundhog-postgresql, groundhog-sqlite, groundhog-th
     , hslogger, htsn-common, hxt, MissingH, split, tasty, tasty-hunit
     , time, transformers, tuple
     }:
     mkDerivation {
       pname = "htsn-import";
       version = "0.2.0";
       sha256 = "1k8563jaqkdx3i8h0hslbw1vkdc3ff1ip5xg621fzsqs9fpxz29j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs configurator filepath groundhog groundhog-postgresql
         groundhog-sqlite groundhog-th hslogger htsn-common hxt MissingH
         split tasty tasty-hunit time transformers tuple
       ];
       testDepends = [
         cmdargs configurator doctest filepath groundhog
         groundhog-postgresql groundhog-sqlite groundhog-th hslogger
         htsn-common hxt MissingH split tasty tasty-hunit time transformers
         tuple
       ];
       description = "Import XML files from The Sports Network into an RDBMS";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "http-accept" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "http-accept";
       version = "0.2";
       sha256 = "1ivwkwr9jgbf6m2dv4gaw5vxrz2vm5wzz65ncl5jpma6wimwh4ii";
       homepage = "https://github.com/singpolyma/http-accept";
       description = "Functions for working with HTTP Accept headers";
       license = "unknown";
     }) {};

  "http-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, http-types }:
     mkDerivation {
       pname = "http-attoparsec";
       version = "0.1.1";
       sha256 = "12l892fix11mrvm10awwvv31y59q5rb6gb0sqjp6l4p4ym9ngqa3";
       buildDepends = [ attoparsec http-types ];
       homepage = "https://github.com/tlaitinen/http-attoparsec";
       description = "Attoparsec parsers for http-types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-client" = callPackage
    ({ mkDerivation, async, base64-bytestring, blaze-builder
     , case-insensitive, cookie, data-default-class, deepseq, exceptions
     , filepath, hspec, http-types, mime-types, monad-control, network
     , network-uri, publicsuffixlist, random, streaming-commons, text
     , time, transformers, zlib
     }:
     mkDerivation {
       pname = "http-client";
       version = "0.4.6.1";
       sha256 = "1z4vk055knjslfy20yi2agc328y4844zi3x05ncpjxsq5a0aibwb";
       buildDepends = [
         base64-bytestring blaze-builder case-insensitive cookie
         data-default-class deepseq exceptions filepath http-types
         mime-types network network-uri publicsuffixlist random
         streaming-commons text time transformers
       ];
       testDepends = [
         async base64-bytestring blaze-builder case-insensitive deepseq
         hspec http-types monad-control network streaming-commons text time
         transformers zlib
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "An HTTP client engine, intended as a base layer for more user-friendly packages";
       license = stdenv.lib.licenses.mit;
     }) {};

  "http-client-auth" = callPackage
    ({ mkDerivation, base64-string, blaze-builder, case-insensitive
     , conduit, crypto-conduit, http-client, http-conduit, pureMD5
     , resourcet, transformers, utf8-string
     }:
     mkDerivation {
       pname = "http-client-auth";
       version = "0.1.0.1";
       sha256 = "07scawz138qffcgw5lyxbxmwdm0czhylqy1rzm0ff59n8amr46j4";
       buildDepends = [
         base64-string blaze-builder case-insensitive conduit crypto-conduit
         http-client http-conduit pureMD5 resourcet transformers utf8-string
       ];
       description = "HTTP authorization (both basic and digest) done right";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-client-conduit" = callPackage
    ({ mkDerivation, http-client }:
     mkDerivation {
       pname = "http-client-conduit";
       version = "0.3.0";
       sha256 = "0k2vq9y7kfbkhcsszjr74ahq5nw5z7dbzjhw1ixbigcr56axsd19";
       buildDepends = [ http-client ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "Frontend support for using http-client with conduit (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "http-client-lens" = callPackage
    ({ mkDerivation, http-client, http-types, lens, network }:
     mkDerivation {
       pname = "http-client-lens";
       version = "0.1.0";
       sha256 = "1n5q3wprhp8kwwq2n1v06l1a9k9p3z96rxv3kr6bbwga9lsb3jip";
       buildDepends = [ http-client http-types lens network ];
       homepage = "http://github.com/reinh/http-client-lens";
       description = "Optics for http-client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-client-multipart" = callPackage
    ({ mkDerivation, http-client }:
     mkDerivation {
       pname = "http-client-multipart";
       version = "0.3.0.0";
       sha256 = "18za6s3658hgm95rrygghrz0b643c7nkzaimb14v2hv82w3k9crg";
       buildDepends = [ http-client ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "Generate multipart uploads for http-client. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "http-client-openssl" = callPackage
    ({ mkDerivation, HsOpenSSL, hspec, http-client, http-types, network
     }:
     mkDerivation {
       pname = "http-client-openssl";
       version = "0.2.0.1";
       sha256 = "1mg2gn51ixb68wd8mm66kcj4627q6gj64810wsa1axy3jmk5qym3";
       buildDepends = [ HsOpenSSL http-client network ];
       testDepends = [ HsOpenSSL hspec http-client http-types ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the OpenSSL library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "http-client-request-modifiers" = callPackage
    ({ mkDerivation, exceptions, http-client, http-media, http-types
     , network, network-uri
     }:
     mkDerivation {
       pname = "http-client-request-modifiers";
       version = "0.1";
       sha256 = "1bd6r24gh0nxfj040q3x39nqnpkdqkri1wdlg3jf2h61cb5gli5r";
       buildDepends = [
         exceptions http-client http-media http-types network network-uri
       ];
       homepage = "https://github.com/spl/http-client-request-modifiers";
       description = "Convenient monadic HTTP request modifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-client-tls" = callPackage
    ({ mkDerivation, connection, data-default-class, hspec, http-client
     , http-types, network, tls
     }:
     mkDerivation {
       pname = "http-client-tls";
       version = "0.2.2";
       sha256 = "0a01r05h5fxswyn6k6cgqgak4scqjan72hyy5wbdqzzhl4rmh7j5";
       buildDepends = [
         connection data-default-class http-client network tls
       ];
       testDepends = [ hspec http-client http-types ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the connection package and tls library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "http-common" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, case-insensitive
     , mtl, network, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "http-common";
       version = "0.7.2.0";
       sha256 = "0w83qz35aaxc2k3qqpamh8anqxr7w3vym5qh40w1a8n4x00pm960";
       buildDepends = [
         base64-bytestring blaze-builder case-insensitive mtl network text
         transformers unordered-containers
       ];
       homepage = "http://research.operationaldynamics.com/projects/http-streams/";
       description = "Common types for HTTP clients and servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-conduit" = callPackage
    ({ mkDerivation, blaze-builder, case-insensitive, conduit
     , conduit-extra, connection, cookie, data-default-class, hspec
     , http-client, http-client-tls, http-types, HUnit, lifted-base
     , monad-control, mtl, network, resourcet, streaming-commons, text
     , time, transformers, utf8-string, wai, wai-conduit, warp, warp-tls
     }:
     mkDerivation {
       pname = "http-conduit";
       version = "2.1.5";
       sha256 = "0vk2an6h3h7a5klk9xrf3apfm6xdmqm418yrr7pb56b7w5sfq003";
       buildDepends = [
         conduit http-client http-client-tls http-types lifted-base
         monad-control mtl resourcet transformers
       ];
       testDepends = [
         blaze-builder case-insensitive conduit conduit-extra connection
         cookie data-default-class hspec http-client http-types HUnit
         lifted-base network streaming-commons text time transformers
         utf8-string wai wai-conduit warp warp-tls
       ];
       homepage = "http://www.yesodweb.com/book/http-conduit";
       description = "HTTP client package with conduit interface and HTTPS support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-conduit-browser" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, case-insensitive
     , certificate, conduit, cookie, data-default, failure, hspec
     , http-conduit, http-types, HUnit, lifted-base, monad-control
     , network, network-conduit, resourcet, socks, text, time, tls
     , transformers, wai, warp
     }:
     mkDerivation {
       pname = "http-conduit-browser";
       version = "1.9.0.2";
       sha256 = "05jbxqigld9bg26gfl37c3axcxjjhm0hwp63yy8rphqp0yr4z5lc";
       buildDepends = [
         case-insensitive certificate conduit cookie data-default failure
         http-conduit http-types lifted-base monad-control network resourcet
         socks time tls transformers
       ];
       testDepends = [
         base64-bytestring blaze-builder case-insensitive certificate
         conduit cookie data-default failure hspec http-conduit http-types
         HUnit lifted-base monad-control network network-conduit resourcet
         socks text time tls transformers wai warp
       ];
       homepage = "https://github.com/exbb2/http-conduit-browser";
       description = "Browser interface to the http-conduit package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-conduit-downloader" = callPackage
    ({ mkDerivation, conduit, connection, data-default, HsOpenSSL
     , http-client, http-conduit, http-types, lifted-base, mtl, network
     , network-uri, resourcet, time, zlib
     }:
     mkDerivation {
       pname = "http-conduit-downloader";
       version = "1.0.22";
       sha256 = "0bvm8hbhs4vq9zy04wz6nawg0px398jv9by3cvj80lgyzwbaxgn3";
       buildDepends = [
         conduit connection data-default HsOpenSSL http-client http-conduit
         http-types lifted-base mtl network network-uri resourcet time zlib
       ];
       homepage = "https://github.com/bazqux/http-conduit-downloader";
       description = "HTTP downloader tailored for web-crawler needs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-date" = callPackage
    ({ mkDerivation, attoparsec, doctest, hspec, time }:
     mkDerivation {
       pname = "http-date";
       version = "0.0.4";
       sha256 = "1pbm066i1cpa3z2kfsqpva0qixnx87s76dpafz3wf6dkaqj8n8i5";
       buildDepends = [ attoparsec ];
       testDepends = [ doctest hspec time ];
       description = "HTTP Date parser/formatter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-encodings" = callPackage
    ({ mkDerivation, HTTP, iconv, mime, mtl, parsec, text, utf8-string
     , zlib
     }:
     mkDerivation {
       pname = "http-encodings";
       version = "0.9.3";
       sha256 = "0b29zqa2ybja73jip83qn1xhiinn1k64b6dmc39ccp48ip1xdnvn";
       buildDepends = [
         HTTP iconv mime mtl parsec text utf8-string zlib
       ];
       homepage = "http://github.com/achudnov/http-encodings";
       description = "A library for encoding and decoding bodies of HTTP messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-enumerator" = callPackage
    ({ mkDerivation, asn1-data, attoparsec, attoparsec-enumerator
     , base64-bytestring, blaze-builder, blaze-builder-enumerator
     , case-insensitive, certificate, cprng-aes, data-default
     , enumerator, failure, http-types, monad-control, network, tls
     , tls-extra, transformers, utf8-string, zlib-enum
     }:
     mkDerivation {
       pname = "http-enumerator";
       version = "0.7.3.3";
       sha256 = "10w2ppgb4kjl3h77iq7j9qh3gcl6a0fvbpidi2njd4pfhrq4lgs6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         asn1-data attoparsec attoparsec-enumerator base64-bytestring
         blaze-builder blaze-builder-enumerator case-insensitive certificate
         cprng-aes data-default enumerator failure http-types monad-control
         network tls tls-extra transformers utf8-string zlib-enum
       ];
       homepage = "http://github.com/snoyberg/http-enumerator";
       description = "HTTP client package with enumerator interface and HTTPS support. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-kit" = callPackage
    ({ mkDerivation, case-insensitive, hspec, http-types, QuickCheck
     , quickcheck-instances
     }:
     mkDerivation {
       pname = "http-kit";
       version = "0.5.1";
       sha256 = "1swnvsbaabk946pys9q9kr0bgdvalnznd59dw981sg7cywqdcz28";
       buildDepends = [ case-insensitive http-types ];
       testDepends = [ hspec http-types QuickCheck quickcheck-instances ];
       description = "A low-level HTTP library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "http-link-header" = callPackage
    ({ mkDerivation, attoparsec, errors, hspec, hspec-attoparsec
     , network-uri, QuickCheck, text
     }:
     mkDerivation {
       pname = "http-link-header";
       version = "0.1.0";
       sha256 = "1lcl0ylj8lq0i2b806k1yqvzbv9dg1m4ka9bmvmhz4z78kiahck1";
       buildDepends = [ attoparsec errors network-uri text ];
       testDepends = [ hspec hspec-attoparsec QuickCheck text ];
       homepage = "https://github.com/myfreeweb/http-link-header";
       description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "http-media" = callPackage
    ({ mkDerivation, Cabal, cabal-test-quickcheck, QuickCheck
     , utf8-string
     }:
     mkDerivation {
       pname = "http-media";
       version = "0.4.0";
       sha256 = "14nvdlcail0xpzfjalk22s8wcss4xqsj1gfvpc13zvlfgyc2qyvr";
       buildDepends = [ utf8-string ];
       testDepends = [
         Cabal cabal-test-quickcheck QuickCheck utf8-string
       ];
       homepage = "http://github.com/zmthy/http-media";
       description = "Processing HTTP Content-Type and Accept headers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "http-monad" = callPackage
    ({ mkDerivation, explicit-exception, HTTP, lazyio, network, parsec
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "http-monad";
       version = "0.1.1";
       sha256 = "127fy54km9js02kp5ws9pyg2d1qc2ar1342g1w2p3h8086il6mp7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         explicit-exception HTTP lazyio network parsec transformers
         utility-ht
       ];
       description = "Monad abstraction for HTTP allowing lazy transfer and non-I/O simulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-proxy" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder
     , blaze-builder-conduit, bytestring-lexing, case-insensitive
     , conduit, http-conduit, http-types, lifted-base, network
     , resourcet, tls, transformers, wai
     }:
     mkDerivation {
       pname = "http-proxy";
       version = "0.0.12";
       sha256 = "0k6qmr3xrky1w90if2jvzc9bgifxifxkwbymw8zndgxs976zpdig";
       buildDepends = [
         base64-bytestring blaze-builder blaze-builder-conduit
         bytestring-lexing case-insensitive conduit http-conduit http-types
         lifted-base network resourcet tls transformers wai
       ];
       homepage = "https://github.com/erikd/http-proxy";
       description = "A library for writing HTTP and HTTPS proxies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-querystring" = callPackage
    ({ mkDerivation, doctest, hspec, http-types, QuickCheck }:
     mkDerivation {
       pname = "http-querystring";
       version = "1.0";
       sha256 = "0n21x8w9pggyp5lbgww70g7860k6n35csq669s9gvrmv1n22k7m6";
       buildDepends = [ http-types ];
       testDepends = [ doctest hspec http-types QuickCheck ];
       homepage = "https://github.com/worksap-ate/http-querystring";
       description = "The HTTP query builder";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-reverse-proxy" = callPackage
    ({ mkDerivation, async, blaze-builder, case-insensitive, conduit
     , conduit-extra, data-default-class, hspec, http-client
     , http-conduit, http-types, lifted-base, monad-control, network
     , resourcet, streaming-commons, text, transformers, wai, wai-logger
     , warp, word8
     }:
     mkDerivation {
       pname = "http-reverse-proxy";
       version = "0.4.1.2";
       sha256 = "1gggn5l08g7mxbka0h7h8w687y3awbm19395fi6wvis76isyz8wy";
       buildDepends = [
         async blaze-builder case-insensitive conduit conduit-extra
         data-default-class http-client http-types lifted-base monad-control
         network resourcet streaming-commons text transformers wai
         wai-logger word8
       ];
       testDepends = [
         blaze-builder conduit conduit-extra hspec http-conduit http-types
         lifted-base network resourcet streaming-commons transformers wai
         warp
       ];
       homepage = "https://github.com/fpco/http-reverse-proxy";
       description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-server" = callPackage
    ({ mkDerivation, HTTP, mime, network, text, url, utf8-string }:
     mkDerivation {
       pname = "http-server";
       version = "1.0.4";
       sha256 = "1sillnp37njlkgvg4r4lxcc9m91v8xhar0f1mz7vnj8a97490l4q";
       buildDepends = [ HTTP mime network text url utf8-string ];
       homepage = "http://code.galois.com/";
       description = "A library for writing Haskell web servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-shed" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "http-shed";
       version = "0.1";
       sha256 = "0asb499rkxr3jzyv5abiqcjx7jdsxkqndcaiqrlx7sfb6f3rccdv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network ];
       description = "A simple websever with an interact style API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-streams" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base64-bytestring
     , blaze-builder, case-insensitive, HsOpenSSL, hspec
     , hspec-expectations, http-common, HUnit, io-streams
     , MonadCatchIO-transformers, mtl, network, network-uri
     , openssl-streams, snap-core, snap-server, system-fileio
     , system-filepath, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "http-streams";
       version = "0.7.2.4";
       sha256 = "1hs2d5qiq5vq6qjxxx061w1iigr05chkv28xvlvxfz0wc7nlipzz";
       buildDepends = [
         aeson attoparsec base64-bytestring blaze-builder case-insensitive
         HsOpenSSL http-common io-streams mtl network network-uri
         openssl-streams text transformers unordered-containers
       ];
       testDepends = [
         aeson aeson-pretty attoparsec base64-bytestring blaze-builder
         case-insensitive HsOpenSSL hspec hspec-expectations http-common
         HUnit io-streams MonadCatchIO-transformers mtl network network-uri
         openssl-streams snap-core snap-server system-fileio system-filepath
         text transformers unordered-containers
       ];
       homepage = "http://research.operationaldynamics.com/projects/http-streams/";
       description = "An HTTP client using io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-test" = callPackage
    ({ mkDerivation, aeson, http-client, lens, lens-aeson, mtl, tasty
     , tasty-hunit, text, time, wreq
     }:
     mkDerivation {
       pname = "http-test";
       version = "0.2.4";
       sha256 = "06y7nikmyr9jrcrnsqy63p1zv1nv0z1h1bmbryr4dkh5pisfmr83";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson http-client lens lens-aeson mtl tasty tasty-hunit text time
         wreq
       ];
       homepage = "https://github.com/openbrainsrc/http-test";
       description = "Test framework for HTTP APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-types" = callPackage
    ({ mkDerivation, blaze-builder, case-insensitive, doctest, hspec
     , QuickCheck, quickcheck-instances, text
     }:
     mkDerivation {
       pname = "http-types";
       version = "0.8.5";
       sha256 = "0d282sf3xyk5makhnwfm2k9mgw1fkh07kasmy85fiwjkc1447ciw";
       buildDepends = [ blaze-builder case-insensitive text ];
       testDepends = [
         blaze-builder doctest hspec QuickCheck quickcheck-instances text
       ];
       homepage = "https://github.com/aristidb/http-types";
       description = "Generic HTTP types for Haskell (for both client and server code)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http-wget" = callPackage
    ({ mkDerivation, failure, transformers }:
     mkDerivation {
       pname = "http-wget";
       version = "0.6.2.3";
       sha256 = "1sbg4gpx8ikaxb15wflm7fnjnkr32fj07bva62z54dsm630s37fx";
       buildDepends = [ failure transformers ];
       homepage = "http://github.com/snoyberg/http-wget/tree/master";
       description = "Provide a simple HTTP client interface by wrapping the wget command line tool. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "http2" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, attoparsec-binary
     , blaze-builder, doctest, filepath, hex, hspec, PSQueue, text
     , unordered-containers, vector, word8
     }:
     mkDerivation {
       pname = "http2";
       version = "0.6.0";
       sha256 = "1brsvq1v24p8ayfnmq2as47xx4lj5hyg1yqvdf9j6126ad31cacg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty attoparsec attoparsec-binary blaze-builder
         filepath hex PSQueue text unordered-containers vector word8
       ];
       testDepends = [
         aeson aeson-pretty attoparsec attoparsec-binary blaze-builder
         doctest filepath hex hspec PSQueue text unordered-containers vector
         word8
       ];
       description = "HTTP/2.0 library including HPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "httpd-shed" = callPackage
    ({ mkDerivation, network, network-uri }:
     mkDerivation {
       pname = "httpd-shed";
       version = "0.4.0.3";
       sha256 = "064jy1mqhnf1hvq6s04wlhmp916rd522x58djb9qixv13vc8gzxh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network network-uri ];
       description = "A simple web-server with an interact style API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "https-everywhere-rules" = callPackage
    ({ mkDerivation, attoparsec, errors, functor-infix, hspec
     , http-client, https-everywhere-rules-raw, lens, network, pipes
     , string-conversions, taggy-lens, text, text-icu
     }:
     mkDerivation {
       pname = "https-everywhere-rules";
       version = "0.1.0";
       sha256 = "170ynbjv8dz221rs26i4d0kwkv3h4ljmx5azslc9jj9lzgb42knp";
       buildDepends = [
         attoparsec errors functor-infix http-client
         https-everywhere-rules-raw lens network pipes string-conversions
         taggy-lens text text-icu
       ];
       testDepends = [
         attoparsec errors functor-infix hspec http-client
         https-everywhere-rules-raw lens network pipes string-conversions
         taggy-lens text text-icu
       ];
       homepage = "https://github.com/fmap/https-everywhere-rules";
       description = "High-level access to HTTPS Everywhere rulesets";
       license = stdenv.lib.licenses.mit;
     }) {};

  "https-everywhere-rules-raw" = callPackage
    ({ mkDerivation, filepath, functor-infix, text }:
     mkDerivation {
       pname = "https-everywhere-rules-raw";
       version = "4.0";
       sha256 = "0zm3znn42nzh9dlpjjn38nsz8rsb0gzl5rv6ngii1vfq534sddy6";
       buildDepends = [ filepath functor-infix text ];
       homepage = "https://github.com/fmap/https-everywhere-rules-raw";
       description = "Low-level (i.e. XML) access to HTTPS Everywhere rulesets.";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "httpspec" = callPackage
    ({ mkDerivation, bidispec, cgi, encoding, filepath, HTTP, hxt
     , hxthelper, MissingH, mtl, network, safe
     }:
     mkDerivation {
       pname = "httpspec";
       version = "0.3.0.1";
       sha256 = "1vghkrs72cja9x2lqshh6nhsdp8f68s3wh7zljn86011h4widd5v";
       buildDepends = [
         bidispec cgi encoding filepath HTTP hxt hxthelper MissingH mtl
         network safe
       ];
       description = "Specification of HTTP request/response generators and parsers";
       license = "LGPL";
     }) {};

  "htune" = callPackage
    ({ mkDerivation, alsa-pcm, carray, fft, gloss }:
     mkDerivation {
       pname = "htune";
       version = "0.2";
       sha256 = "1il1d8b7xyv59f7xim337zyh88s1qchsrdhrgmv322hqf73n6rh2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ alsa-pcm carray fft gloss ];
       description = "harmonic analyser and tuner for musical instruments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "htzaar" = callPackage
    ({ mkDerivation, OpenGL, random, SDL }:
     mkDerivation {
       pname = "htzaar";
       version = "0.0.2";
       sha256 = "12g41q821yh43nslb96jpqyb58k1lz6g0a6vmqw202m0hv94npdb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ OpenGL random SDL ];
       homepage = "http://tomahawkins.org";
       description = "A two player abstract strategy game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hub" = callPackage
    ({ mkDerivation, fgl, filepath, hexpat, regex-compat, utf8-string
     }:
     mkDerivation {
       pname = "hub";
       version = "1.3.0";
       sha256 = "0bl78xssp35403r2knkwhbd6fi872p7w4zl6y8gyw219cmbj4j77";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ fgl filepath hexpat regex-compat utf8-string ];
       homepage = "http://justhub.org";
       description = "For multiplexing GHC installations and providing development sandboxes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hubigraph" = callPackage
    ({ mkDerivation, haxr, mtl }:
     mkDerivation {
       pname = "hubigraph";
       version = "0.3.2";
       sha256 = "19mxblqy3bchhrk725x4kmpa9hidjzj0d0sqhx34smqw7v36x814";
       buildDepends = [ haxr mtl ];
       homepage = "http://ooxo.org/hubigraph/";
       description = "A haskell wrap for Ubigraph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hubris" = callPackage
    ({ mkDerivation, Cabal, ghc-paths, hint, mtl, ruby }:
     mkDerivation {
       pname = "hubris";
       version = "0.0.3";
       sha256 = "135q3nzchncbkx4bpx7p1glwnc9aw5j77f3xnr0d6llfba1bw79l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal ghc-paths hint mtl ];
       extraLibraries = [ ruby ];
       description = "Support library for Hubris, the Ruby <=> Haskell bridge";
       license = "unknown";
     }) {};

  "huffman" = callPackage
    ({ mkDerivation, fingertree }:
     mkDerivation {
       pname = "huffman";
       version = "1.0.1";
       sha256 = "191llv4s64jrh8cma43r5z740avd5picja5fr45l4mi2gwmkx4s3";
       buildDepends = [ fingertree ];
       description = "Pure Haskell implementation of the Huffman encoding algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hugs2yc" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, uniplate, ycextra, yhccore
     }:
     mkDerivation {
       pname = "hugs2yc";
       version = "0.1.1";
       sha256 = "1bmcdjwh08q84ijx7hdfraz0wqq0wwgf5pj0jlmdq5rbpb9c547a";
       buildDepends = [ filepath mtl parsec uniplate ycextra yhccore ];
       homepage = "http://www.haskell.org/haskellwiki/Yhc";
       description = "Hugs Front-end to Yhc Core";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hulk" = callPackage
    ({ mkDerivation, aeson, case-insensitive, cmdargs, ConfigFile
     , Crypto, fastirc, filepath, monad-extras, mtl, network, split
     , strict, text, time, utf8-string
     }:
     mkDerivation {
       pname = "hulk";
       version = "0.2.0";
       sha256 = "0vq0sb11kiiry67bh5ish1cwj8sf6rgf70p1zrm462zsqgv9wkk2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson case-insensitive cmdargs ConfigFile Crypto fastirc filepath
         monad-extras mtl network split strict text time utf8-string
       ];
       description = "IRC server written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hums" = callPackage
    ({ mkDerivation, blaze-builder, case-insensitive, ConfigFile
     , filepath, HaXml, http-types, hxt, MissingH, mtl, network
     , system-fileio, system-filepath, system-uuid, text, transformers
     , unordered-containers, wai, warp
     }:
     mkDerivation {
       pname = "hums";
       version = "0.7.0";
       sha256 = "1wb9bn83lrn6cpp0gkpc7v40m9wlx8i8zqijm4dmd23zzmrlrxhr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-builder case-insensitive ConfigFile filepath HaXml http-types
         hxt MissingH mtl network system-fileio system-filepath system-uuid
         text transformers unordered-containers wai warp
       ];
       description = "Haskell UPnP Media Server";
       license = "GPL";
     }) {};

  "hunit-gui" = callPackage
    ({ mkDerivation, cairo, gtk, HUnit }:
     mkDerivation {
       pname = "hunit-gui";
       version = "0.1.4";
       sha256 = "0wzy2gjxpqr0j2cfnl88ixccm8dv3z9cql1zpzr4ph6g37dc9w60";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo gtk HUnit ];
       homepage = "http://patch-tag.com/r/kwallmar/hunit_gui/home";
       description = "A GUI testrunner for HUnit";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hunit-parsec" = callPackage
    ({ mkDerivation, HUnit, parsec }:
     mkDerivation {
       pname = "hunit-parsec";
       version = "0.3";
       sha256 = "089l8n1yjcf6sypr76r8p0djwpcqaa5xdk1d0m2k9piig9fnzr40";
       buildDepends = [ HUnit parsec ];
       description = "An HUnit Testable instance for Parsec parser unit tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hunit-rematch" = callPackage
    ({ mkDerivation, hspec, HUnit, rematch }:
     mkDerivation {
       pname = "hunit-rematch";
       version = "0.1.0.1";
       sha256 = "1xj5f6l8nfanbf0xdwl2j2na45w5h0spi9a8pxqgpxx2rak145gs";
       buildDepends = [ HUnit rematch ];
       testDepends = [ hspec HUnit rematch ];
       homepage = "github.com/tcrayford/rematch";
       description = "HUnit support for rematch";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hunp" = callPackage
    ({ mkDerivation, filepath, monads-fd, parsec, pcre-light, split }:
     mkDerivation {
       pname = "hunp";
       version = "0.1";
       sha256 = "0k07dbqrlnhg3a4yk25gc665z43hcl57kblr20mzryw0cf9zdsci";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath monads-fd parsec pcre-light split ];
       homepage = "http://github.com/skorpan/hunp/tree/master";
       description = "Unpacker tool with DWIM";
       license = "GPL";
     }) {};

  "hurdle" = callPackage
    ({ mkDerivation, kangaroo }:
     mkDerivation {
       pname = "hurdle";
       version = "0.4.0";
       sha256 = "13hg6v7vk72yiy0qhwm1f3ksm85vf56a3g5mm62kpbb0lcxvvqwf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ kangaroo ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Extract function names from Windows DLLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "husk-scheme" = callPackage
    ({ mkDerivation, filepath, ghc-paths, haskeline, knob, mtl, parsec
     , time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "husk-scheme";
       version = "3.18";
       sha256 = "05m5ppcksy7yp5lx4k94y1khzg3vbfi8yjslpymbz6cj060mfpbp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath ghc-paths haskeline knob mtl parsec time transformers
         utf8-string
       ];
       homepage = "http://justinethier.github.com/husk-scheme";
       description = "R5RS Scheme interpreter, compiler, and library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "husk-scheme-libs" = callPackage
    ({ mkDerivation, husk-scheme, json, mtl, transformers }:
     mkDerivation {
       pname = "husk-scheme-libs";
       version = "0.0.1";
       sha256 = "18c8ww2f7bgxbh33agcrpb36xgjn7zs509ji7q968hnwqnx9vgcj";
       buildDepends = [ husk-scheme json mtl transformers ];
       homepage = "http://justinethier.github.com/husk-scheme";
       description = "Extra libraries for the husk Scheme platform";
       license = stdenv.lib.licenses.mit;
     }) {};

  "husky" = callPackage
    ({ mkDerivation, mtl, parsec, readline, time }:
     mkDerivation {
       pname = "husky";
       version = "0.4";
       sha256 = "136sskjkb4nwsqdmgyly207zv4kv27bxf633p2wl869wcr6kkdbg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec readline time ];
       homepage = "http://github.com/markusle/husky/tree/master";
       description = "A simple command line calculator";
       license = "GPL";
     }) {};

  "huzzy" = callPackage
    ({ mkDerivation, easyplot }:
     mkDerivation {
       pname = "huzzy";
       version = "0.1.5.5";
       sha256 = "0i8h380nszd7hk7x6l7qx0ri6k12551li2m77gspzakcf47l6ldp";
       buildDepends = [ easyplot ];
       description = "Fuzzy logic library with support for T1, IT2, GT2";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hwall-auth-iitk" = callPackage
    ({ mkDerivation, haskeline, http-conduit, http-types, mtl
     , regex-compat
     }:
     mkDerivation {
       pname = "hwall-auth-iitk";
       version = "0.1.0.1";
       sha256 = "0ibxdyg9r5n3dc8szhb8fvdjsbgpbwdah2aahn0kagi1zxw24fl2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         haskeline http-conduit http-types mtl regex-compat
       ];
       description = "Initial version of firewall Authentication for IITK network";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hweblib" = callPackage
    ({ mkDerivation, attoparsec, HUnit, mtl, text, transformers }:
     mkDerivation {
       pname = "hweblib";
       version = "0.6.3";
       sha256 = "03dmx5irlsyb3b9zg2r6nz947sslizkn0nlk65ldb5n4m8my33hy";
       buildDepends = [ attoparsec mtl text transformers ];
       testDepends = [ attoparsec HUnit mtl transformers ];
       homepage = "http://github.com/aycanirican/hweblib";
       description = "Haskell Web Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hws" = callPackage
    ({ mkDerivation, html, mtl, network, regex-compat, text }:
     mkDerivation {
       pname = "hws";
       version = "1.1.0.1";
       sha256 = "0d0f0bwbfcmbm1jx6m90qxxjad2adz5k0k51i4jh5ylrfa9xfs7r";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ html mtl network regex-compat text ];
       description = "Simple Haskell Web Server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hx" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hx";
       version = "0.4";
       sha256 = "04wkgql6gs9glmp9kj5awis5b15vmwgkyqzi814k9514k3c7c1rb";
       description = "Haskell extras (missing utility functions)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hxmppc" = callPackage
    ({ mkDerivation, fclabels, network, network-protocol-xmpp, text
     , transformers, xml-types
     }:
     mkDerivation {
       pname = "hxmppc";
       version = "0.2.3";
       sha256 = "1fri1xcs95ynkf471hrkai0k8kvxhx77ra07yripycnlpa9fcwj9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         fclabels network network-protocol-xmpp text transformers xml-types
       ];
       description = "Haskell XMPP (Jabber Client) Command Line Interface (CLI)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hxournal" = callPackage
    ({ mkDerivation, cairo, cmdargs, configurator, Diff
     , double-conversion, dyre, fclabels, filepath, gtk, monad-coroutine
     , mtl, poppler, strict, time, transformers, TypeCompose
     , xournal-builder, xournal-parser, xournal-render, xournal-types
     }:
     mkDerivation {
       pname = "hxournal";
       version = "0.6.6.1";
       sha256 = "1fk4cgk4ncf5v7k8hankwb49ablfcxj1rcw64ka6pz3jrz4sablq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo cmdargs configurator Diff double-conversion dyre fclabels
         filepath gtk monad-coroutine mtl poppler strict time transformers
         TypeCompose xournal-builder xournal-parser xournal-render
         xournal-types
       ];
       homepage = "http://ianwookim.org/hxournal";
       description = "A pen notetaking program written in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hxt" = callPackage
    ({ mkDerivation, binary, deepseq, filepath, HUnit
     , hxt-charproperties, hxt-regex-xmlschema, hxt-unicode, mtl
     , network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt";
       version = "9.3.1.9";
       sha256 = "1f0dri6v821cd7d3jkylnmx0y73z7yrnirl3x4jfcx8arscc27q9";
       buildDepends = [
         binary deepseq filepath HUnit hxt-charproperties
         hxt-regex-xmlschema hxt-unicode mtl network-uri parsec
       ];
       configureFlags = "-fnetwork-uri";
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "A collection of tools for processing XML with Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hxt-binary" = callPackage
    ({ mkDerivation, binary, bzlib, deepseq, hxt }:
     mkDerivation {
       pname = "hxt-binary";
       version = "0.0.2";
       sha256 = "1hbby0lcb9kis05zsf5rgyisa1qwryvv8zf91q9fi0j0d7s3rasw";
       buildDepends = [ binary bzlib deepseq hxt ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Serialisation and deserialisation of HXT XmlTrees";
       license = "unknown";
     }) {};

  "hxt-cache" = callPackage
    ({ mkDerivation, binary, deepseq, filepath, hxt, SHA, time }:
     mkDerivation {
       pname = "hxt-cache";
       version = "9.1.0";
       sha256 = "16205mp6kilq3s6y08sz45nl23cpwnnbb83v561nais4clc99m7y";
       buildDepends = [ binary deepseq filepath hxt SHA time ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Cache for HXT XML Documents and other binary data";
       license = "unknown";
     }) {};

  "hxt-charproperties" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hxt-charproperties";
       version = "9.2.0.0";
       sha256 = "01v3j0cg9pkp18iy4s8s582qqq98r4l9jzr84x5sa2rva4cg0gpi";
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Character properties and classes for XML and Unicode";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hxt-css" = callPackage
    ({ mkDerivation, hxt, parsec, split }:
     mkDerivation {
       pname = "hxt-css";
       version = "0.1.0.1";
       sha256 = "0z8qswykx0k965n2mfp87b6h8fixrydvjg98d8h37bclfsqzj15w";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hxt parsec split ];
       homepage = "https://github.com/redneb/hxt-css";
       description = "CSS selectors for HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hxt-curl" = callPackage
    ({ mkDerivation, curl, hxt, parsec }:
     mkDerivation {
       pname = "hxt-curl";
       version = "9.1.1";
       sha256 = "0dbm71ja9g0asj221vlpdvlhz1ipv3z0x2g4zmv5f03dcs97c11b";
       buildDepends = [ curl hxt parsec ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "LibCurl interface for HXT";
       license = "unknown";
     }) {};

  "hxt-expat" = callPackage
    ({ mkDerivation, hexpat, hxt }:
     mkDerivation {
       pname = "hxt-expat";
       version = "9.1.1";
       sha256 = "1mi2f2i31nqjqzwl82iypm1qngrpxp7lz506pjgqfbn840yc9n8h";
       buildDepends = [ hexpat hxt ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Expat parser for HXT";
       license = "unknown";
     }) {};

  "hxt-extras" = callPackage
    ({ mkDerivation, hxt }:
     mkDerivation {
       pname = "hxt-extras";
       version = "0.4.1";
       sha256 = "1bv8kcra2vgjbp7k0yczlrfbjh7ib2xixaqpnnd60hq84878nzb1";
       buildDepends = [ hxt ];
       homepage = "http://code.google.com/p/hxt-extras/";
       description = "Extra functions for HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hxt-filter" = callPackage
    ({ mkDerivation, filepath, HTTP, HUnit, hxt, network, parsec }:
     mkDerivation {
       pname = "hxt-filter";
       version = "8.4.2";
       sha256 = "0jxiph7c59dc2fy5c2ygii1xlcmh8s5zb8c0hwvjkj0hzfjznra0";
       buildDepends = [ filepath HTTP HUnit hxt network parsec ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "A collection of tools for processing XML with Haskell (Filter variant)";
       license = "unknown";
     }) {};

  "hxt-http" = callPackage
    ({ mkDerivation, HTTP, hxt, network, parsec }:
     mkDerivation {
       pname = "hxt-http";
       version = "9.1.5";
       sha256 = "172y08zx9q4qvdi7k9hg9qahp6qjs24r663il6fmynaw7szsiib9";
       buildDepends = [ HTTP hxt network parsec ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Interface to native Haskell HTTP package HTTP";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hxt-pickle-utils" = callPackage
    ({ mkDerivation, hxt, mtl }:
     mkDerivation {
       pname = "hxt-pickle-utils";
       version = "0.1.0.2";
       sha256 = "06v4935lljcyyx4a5v0z4id3fz4v28aghsrzr94k6diibpnwcdz2";
       buildDepends = [ hxt mtl ];
       homepage = "https://github.com/silkapp/hxt-pickle-utils";
       description = "Utility functions for using HXT picklers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hxt-regex-xmlschema" = callPackage
    ({ mkDerivation, HUnit, hxt-charproperties, parsec, text }:
     mkDerivation {
       pname = "hxt-regex-xmlschema";
       version = "9.2.0";
       sha256 = "0pcbyvc71173ad0zkgpdpyyljngrk4p1jjjaw5wbwcvm4ijh44g3";
       buildDepends = [ hxt-charproperties parsec text ];
       testDepends = [ HUnit parsec text ];
       homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
       description = "A regular expression library for W3C XML Schema regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hxt-relaxng" = callPackage
    ({ mkDerivation, hxt, hxt-charproperties, hxt-regex-xmlschema
     , network, parsec
     }:
     mkDerivation {
       pname = "hxt-relaxng";
       version = "9.1.5.1";
       sha256 = "16jzsk9gkrqnq1d1n5nm0w6b4viq7938zlis26mm975x6s12i1w6";
       buildDepends = [
         hxt hxt-charproperties hxt-regex-xmlschema network parsec
       ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "The HXT RelaxNG validator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hxt-tagsoup" = callPackage
    ({ mkDerivation, hxt, hxt-charproperties, hxt-unicode, tagsoup }:
     mkDerivation {
       pname = "hxt-tagsoup";
       version = "9.1.3";
       sha256 = "1rp499j6w3h9xfxqyw2fn05ffq3z0wg1r9h2c205m37mb8visq77";
       buildDepends = [ hxt hxt-charproperties hxt-unicode tagsoup ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "TagSoup parser for HXT";
       license = "unknown";
     }) {};

  "hxt-unicode" = callPackage
    ({ mkDerivation, hxt-charproperties }:
     mkDerivation {
       pname = "hxt-unicode";
       version = "9.0.2.2";
       sha256 = "1iljbk7f7d4wkl592bp0vw807683sqdxfnigindkrvr9p1xvwg8r";
       buildDepends = [ hxt-charproperties ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hxt-xpath" = callPackage
    ({ mkDerivation, filepath, hxt, parsec }:
     mkDerivation {
       pname = "hxt-xpath";
       version = "9.1.2.1";
       sha256 = "0r9xzxwdqaj0arz9pv6f272dz73m83agbln9q9bclmgqys6l0kr9";
       buildDepends = [ filepath hxt parsec ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "The XPath modules for HXT";
       license = "unknown";
     }) {};

  "hxt-xslt" = callPackage
    ({ mkDerivation, filepath, hxt, hxt-xpath, parsec }:
     mkDerivation {
       pname = "hxt-xslt";
       version = "9.1.1";
       sha256 = "0klyqxgq46dca8ia3xygd194hw8p51a4iz8746zz4kifjc1fyprs";
       buildDepends = [ filepath hxt hxt-xpath parsec ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "The XSLT modules for HXT";
       license = "unknown";
     }) {};

  "hxthelper" = callPackage
    ({ mkDerivation, encoding, hxt, mtl }:
     mkDerivation {
       pname = "hxthelper";
       version = "0.2.2";
       sha256 = "1il21mqmvvfdny5ksnyixj1wqhabvxqhccd6vj4dbzlvvf5yb6k1";
       buildDepends = [ encoding hxt mtl ];
       description = "Helper functions for HXT";
       license = "LGPL";
     }) {};

  "hxweb" = callPackage
    ({ mkDerivation, cgi, fastcgi, libxml, mtl, xslt }:
     mkDerivation {
       pname = "hxweb";
       version = "0.1";
       sha256 = "0faiyflyhmn2y0bs920qgm9xkj9i69lzxhsg4rxffal989gi32z8";
       buildDepends = [ cgi fastcgi libxml mtl xslt ];
       description = "Minimal webframework using fastcgi, libxml2 and libxslt";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hyahtzee" = callPackage
    ({ mkDerivation, HUnit, random }:
     mkDerivation {
       pname = "hyahtzee";
       version = "0.2";
       sha256 = "0zv9ycgf9sii59q86s04m6krjyjgmrqaxz4lyvwa58b7a886wcmv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HUnit random ];
       homepage = "http://github.com/DamienCassou/HYahtzee";
       description = "A Yahtzee game implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hyakko" = callPackage
    ({ mkDerivation, aeson, blaze-html, cmdargs, filepath
     , highlighting-kate, mtl, pandoc, regex-pcre-builtin, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "hyakko";
       version = "0.6.6";
       sha256 = "1y0b5rxgiaygy0y42s2rnnw87br4d73nbjii9gpbf80rlvhdjagw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson blaze-html cmdargs filepath highlighting-kate mtl pandoc
         regex-pcre-builtin text unordered-containers
       ];
       homepage = "http://sourrust.github.io/hyakko/";
       description = "Literate-style Documentation Generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "hybrid" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "hybrid";
       version = "2.0";
       sha256 = "05v69csnz7g9ikymnrmzjqhdwlrfsb44pbv8mzddgk6my9ddlb9w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://repos.mine.nu/davve/darcs/hybrid";
       description = "A implementation of a type-checker for Lambda-H";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hybrid-vectors" = callPackage
    ({ mkDerivation, deepseq, primitive, vector }:
     mkDerivation {
       pname = "hybrid-vectors";
       version = "0.1.2";
       sha256 = "1scx1xr9rqdpxc1kj5zgf8w1ld1mj68hxr3nl1p352wspvpgd3qf";
       buildDepends = [ deepseq primitive vector ];
       homepage = "http://github.com/ekmett/hybrid-vectors";
       description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hydra-hs" = callPackage
    ({ mkDerivation, hmatrix, sixense_x64 }:
     mkDerivation {
       pname = "hydra-hs";
       version = "1.0.0.2";
       sha256 = "18sxqangnl3gbb77dsg036ymsjj6w7zws2v43qnp3cfi0ksjxx8s";
       buildDepends = [ hmatrix ];
       extraLibraries = [ sixense_x64 ];
       homepage = "https://github.com/mruegenberg/hydra-hs";
       description = "Haskell binding to the Sixense SDK for the Razer Hydra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hydra-print" = callPackage
    ({ mkDerivation, async, filepath, HUnit, io-streams, mtl, ncurses
     , QuickCheck, random, semigroups, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, text, time, transformers
     }:
     mkDerivation {
       pname = "hydra-print";
       version = "0.1.0.3";
       sha256 = "16cgp3a475pzy0zasvfv3cvkvgc84g6p960sykk7y4aki0n3769i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async filepath io-streams mtl ncurses random semigroups text time
         transformers
       ];
       testDepends = [
         async HUnit io-streams mtl ncurses QuickCheck random semigroups
         test-framework test-framework-hunit test-framework-quickcheck2
         test-framework-th text time transformers
       ];
       homepage = "https://github.com/rrnewton/hydra-print";
       description = "NCurses interface to view multiple ByteString streams in parallel";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hydrogen-data" = callPackage
    ({ mkDerivation, hydrogen-prelude, hydrogen-syntax, hydrogen-util
     , nicify, parsec, uuid
     }:
     mkDerivation {
       pname = "hydrogen-data";
       version = "0.7.1";
       sha256 = "15yzjd1qb4i3jgw0jfs8nbnc1s6mnwl8lr8lm6ffyk92n5w0ahq1";
       buildDepends = [
         hydrogen-prelude hydrogen-syntax hydrogen-util nicify parsec uuid
       ];
       homepage = "https://github.com/scravy/hydrogen-data";
       description = "Hydrogen Data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hydrogen-prelude" = callPackage
    ({ mkDerivation, cereal, filepath, hashable, hydrogen-version
     , random, regex-base, regex-tdfa, strict, time, transformers, uuid
     }:
     mkDerivation {
       pname = "hydrogen-prelude";
       version = "0.7.1";
       sha256 = "17hm0dgnxfc87prnral9gwg7aaz5a9n4ymmdxaa6044k95y45704";
       buildDepends = [
         cereal filepath hashable hydrogen-version random regex-base
         regex-tdfa strict time transformers uuid
       ];
       homepage = "https://github.com/scravy/hydrogen-prelude";
       description = "Hydrogen Prelude";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hydrogen-syntax" = callPackage
    ({ mkDerivation, hydrogen-prelude, hydrogen-util, nicify, parsec
     , uuid
     }:
     mkDerivation {
       pname = "hydrogen-syntax";
       version = "0.7.1";
       sha256 = "1pvj3yy9dg3kj202sp0fzkpgjnh6bbawqpn6d4l8hmyakymw5k7m";
       buildDepends = [
         hydrogen-prelude hydrogen-util nicify parsec uuid
       ];
       homepage = "https://github.com/scravy/hydrogen-syntax";
       description = "Hydrogen Syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hydrogen-util" = callPackage
    ({ mkDerivation, hydrogen-prelude, parsec, time }:
     mkDerivation {
       pname = "hydrogen-util";
       version = "0.7.1";
       sha256 = "0g00ip9jncbb35b2z31iw96p118rkppfpabnypr4xg0p9s1k4naj";
       buildDepends = [ hydrogen-prelude parsec time ];
       homepage = "https://github.com/scravy/hydrogen-util";
       description = "Hydrogen Tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hydrogen-version" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hydrogen-version";
       version = "1.1";
       sha256 = "1qpsxl2pmcqgn4f1pdra7jg3sv2yfgkcm02s51y7f82sqsihj51m";
       homepage = "https://github.com/scravy/hydrogen-version";
       description = "Hydrogen Version type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hyena" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, mtl, network
     , network-bytestring
     }:
     mkDerivation {
       pname = "hyena";
       version = "0.1.0.1";
       sha256 = "0899lw0vyvcw03ph4w717rxach2ncb69xfn9387j7fl0s01ch0ji";
       buildDepends = [
         extensible-exceptions filepath mtl network network-bytestring
       ];
       homepage = "http://github.com/tibbe/hyena";
       description = "Simple web application server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hylolib" = callPackage
    ({ mkDerivation, mtl, QuickCheck, random, uniplate }:
     mkDerivation {
       pname = "hylolib";
       version = "1.4.0";
       sha256 = "160k8lp6r2rbgj7qz3msa5sd5yxkdb5rjlhwd5lqbcxw2sry0vj2";
       buildDepends = [ mtl QuickCheck random uniplate ];
       description = "Tools for hybrid logics related programs";
       license = "GPL";
     }) {};

  "hylotab" = callPackage
    ({ mkDerivation, hylolib, mtl }:
     mkDerivation {
       pname = "hylotab";
       version = "1.2.1";
       sha256 = "0xynx72xpb84g19gnsgq00gwj3ycfgk5qgd9j949b6k3fqr3n71w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hylolib mtl ];
       homepage = "http://www.glyc.dc.uba.ar/intohylo/hylotab.php";
       description = "Tableau based theorem prover for hybrid logics";
       license = "GPL";
     }) {};

  "hyloutils" = callPackage
    ({ mkDerivation, hylolib, mtl, uniplate }:
     mkDerivation {
       pname = "hyloutils";
       version = "1.0";
       sha256 = "1pn14f3hjcxa5bww0pg2irqmbvfs7f3vfwl8z87jmxfyydgffgnh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hylolib mtl uniplate ];
       description = "Very small programs for hybrid logics";
       license = "GPL";
     }) {};

  "hyperdrive" = callPackage
    ({ mkDerivation, bytestring-lexing, extensible-exceptions, mtl
     , network, pipes
     }:
     mkDerivation {
       pname = "hyperdrive";
       version = "0.1";
       sha256 = "0hvgxsrq1aws5c97w1lrk87d74kn8796vmclkdxhajfammj6ccz9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bytestring-lexing extensible-exceptions mtl network pipes
       ];
       description = "a fast, trustworthy HTTP(s) server built";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hyperloglog" = callPackage
    ({ mkDerivation, approximate, binary, bits, bytes, cereal
     , cereal-vector, comonad, deepseq, distributive, doctest, filepath
     , generic-deriving, hashable, hashable-extras, lens, reflection
     , safecopy, semigroupoids, semigroups, simple-reflect, siphash
     , tagged, vector
     }:
     mkDerivation {
       pname = "hyperloglog";
       version = "0.3";
       sha256 = "1agywf7142d02m8pza84pzw908g1fjgc6799w7h93mwq63c0708m";
       buildDepends = [
         approximate binary bits bytes cereal cereal-vector comonad deepseq
         distributive generic-deriving hashable hashable-extras lens
         reflection safecopy semigroupoids semigroups siphash tagged vector
       ];
       testDepends = [
         doctest filepath generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/analytics/hyperloglog";
       description = "An approximate streaming (constant space) unique object counter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hyperpublic" = callPackage
    ({ mkDerivation, aeson, attoparsec, http-enumerator, http-types }:
     mkDerivation {
       pname = "hyperpublic";
       version = "0.1.1";
       sha256 = "07jz89x0daps5rkmccjprrbkwn5mzdskp2yv8asfnmcyir36lmzd";
       buildDepends = [ aeson attoparsec http-enumerator http-types ];
       homepage = "https://github.com/mkscrg/hyperpublic-haskell";
       description = "A thin wrapper for the Hyperpublic API";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "hyphenate" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "hyphenate";
       version = "0.1";
       sha256 = "0pnp5d1a0hwn6jm8v6i7yygd831q2bvsz6qb9n8db8n17lfxikx4";
       homepage = "http://www.alpheccar.org";
       description = "Text hyphenation algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hyphenation" = callPackage
    ({ mkDerivation, doctest, filepath, unordered-containers }:
     mkDerivation {
       pname = "hyphenation";
       version = "0.4";
       sha256 = "06na4y568v3plsyvgcqmra1crv10fcfal419fjjv300vkaafbyxb";
       buildDepends = [ unordered-containers ];
       testDepends = [ doctest filepath unordered-containers ];
       homepage = "http://github.com/ekmett/hyphenation";
       description = "Configurable Knuth-Liang hyphenation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hzk" = callPackage
    ({ mkDerivation, resource-pool, tasty, tasty-hunit, time
     , zookeeper_mt
     }:
     mkDerivation {
       pname = "hzk";
       version = "2.1.0";
       sha256 = "1jcvha3wzf6wka1zpmsvg1j48jl85v1s4p0mryfhjqz7l9h3wkac";
       buildDepends = [ resource-pool time ];
       testDepends = [
         resource-pool tasty tasty-hunit time zookeeper_mt
       ];
       extraLibraries = [ zookeeper_mt ];
       homepage = "http://github.com/dgvncsz0f/hzk";
       description = "Haskell client library for Apache Zookeeper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "hzulip" = callPackage
    ({ mkDerivation, aeson, async, conduit, exceptions, hspec
     , http-client, http-client-tls, http-types, lens, lens-aeson, mtl
     , raw-strings-qq, scotty, stm, stm-conduit, text, transformers
     }:
     mkDerivation {
       pname = "hzulip";
       version = "1.1.1.1";
       sha256 = "1gxywjng4mv0g13yap2a0i62l8wlbncj8ajj87ca6p8aikrd6cm1";
       buildDepends = [
         aeson conduit exceptions http-client http-client-tls http-types
         lens lens-aeson mtl stm stm-conduit text transformers
       ];
       testDepends = [
         aeson async conduit exceptions hspec http-client http-client-tls
         http-types lens lens-aeson mtl raw-strings-qq scotty stm
         stm-conduit text transformers
       ];
       homepage = "https://github.com/yamadapc/hzulip";
       description = "A haskell wrapper for the Zulip API";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "i18n" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, utf8-string }:
     mkDerivation {
       pname = "i18n";
       version = "0.3";
       sha256 = "0l1z9acg1nnxs66w70vyhlj3wx2xg7w0lja59yp5awmh98815q1p";
       buildDepends = [ filepath mtl parsec utf8-string ];
       description = "Internationalization for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iCalendar" = callPackage
    ({ mkDerivation, base64-bytestring, case-insensitive, data-default
     , mime, mtl, network, network-uri, parsec, text, time
     }:
     mkDerivation {
       pname = "iCalendar";
       version = "0.4.0.2";
       sha256 = "0a6kj6ih8dpzvld7hjvjp6gcf4f2y81x6bx17z6wgzwdj9fv7jry";
       buildDepends = [
         base64-bytestring case-insensitive data-default mime mtl network
         network-uri parsec text time
       ];
       homepage = "http://github.com/tingtun/iCalendar";
       description = "iCalendar data types, parser, and printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iException" = callPackage
    ({ mkDerivation, interleavableIO, mtl }:
     mkDerivation {
       pname = "iException";
       version = "0.0.1";
       sha256 = "0g9hh7v5m194wyj9c5vzsjjc10fia60c9p8si778yky4chvfvj7p";
       buildDepends = [ interleavableIO mtl ];
       description = "Version of Control.Exception using InterleavableIO.";
       license = "unknown";
     }) {};

  "iban" = callPackage
    ({ mkDerivation, HUnit, iso3166-country-codes, tasty, tasty-hunit
     , text, unordered-containers
     }:
     mkDerivation {
       pname = "iban";
       version = "0.1.1.0";
       sha256 = "0rg4h2as5n324zf9y6jllz28s4wj687vdiqvrbnzlavl2kbx96vl";
       buildDepends = [ iso3166-country-codes text unordered-containers ];
       testDepends = [ HUnit tasty tasty-hunit text ];
       homepage = "https://github.com/ibotty/iban";
       description = "Validate and generate IBANs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iconv" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "iconv";
       version = "0.4.1.2";
       sha256 = "0sd7by7idcnw368mdc1rs3j4xwbzdvgvkd5p1bwgw7wcd272c142";
       description = "String encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ideas" = callPackage
    ({ mkDerivation, cgi, filepath, parsec, QuickCheck, random, time
     , uniplate, wl-pprint
     }:
     mkDerivation {
       pname = "ideas";
       version = "1.2";
       sha256 = "13mj1xa1bpr0bj9id00vcm6fnai7cf2289s6gs52rmkbnhkp998m";
       buildDepends = [
         cgi filepath parsec QuickCheck random time uniplate wl-pprint
       ];
       homepage = "http://ideas.cs.uu.nl/www/";
       description = "Feedback services for intelligent tutoring systems";
       license = "GPL";
     }) {};

  "ideas-math" = callPackage
    ({ mkDerivation, ideas, parsec, QuickCheck, random }:
     mkDerivation {
       pname = "ideas-math";
       version = "1.1";
       sha256 = "1wvxkav9c7d2na9wkzkl4pxhwihlw6iqdjga7gbjy7pmqn8xja51";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ideas parsec QuickCheck random ];
       homepage = "http://ideas.cs.uu.nl/www/";
       description = "Interactive domain reasoner for logic and mathematics";
       license = "GPL";
     }) {};

  "idempotent" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "idempotent";
       version = "0.1.2";
       sha256 = "18jwk65mm50lqnbx9px4c8aa2x7n5dkrazzpzvdwq7cy4q614bj0";
       testDepends = [ hspec QuickCheck ];
       homepage = "https://github.com/prophile/idempotent";
       description = "Idempotent monoids";
       license = stdenv.lib.licenses.mit;
     }) {};

  "identifiers" = callPackage
    ({ mkDerivation, binary, cereal, deepseq, hashable, ListLike
     , QuickCheck, test-framework, test-framework-quickcheck2, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "identifiers";
       version = "0.4.0.0";
       sha256 = "0lk58c465a77mshz1b8rdgpidkgr73xbh9q0hij5dqw8d32h958f";
       buildDepends = [
         binary cereal deepseq hashable ListLike text unordered-containers
       ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Numeric identifiers for values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "idiii" = callPackage
    ({ mkDerivation, data-accessor, filepath, HUnit, MissingH
     , polyparse, text, utf8-string
     }:
     mkDerivation {
       pname = "idiii";
       version = "0.1.3.3";
       sha256 = "11595aj56sjwk28grh6ldsbk5c6kgrirsc2xglfixw82vj7viw8h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor MissingH polyparse text utf8-string
       ];
       testDepends = [
         data-accessor filepath HUnit MissingH polyparse text utf8-string
       ];
       description = "ID3v2 (tagging standard for MP3 files) library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "idna" = callPackage
    ({ mkDerivation, punycode, stringprep, text }:
     mkDerivation {
       pname = "idna";
       version = "0.3.0";
       sha256 = "04w2mp9wa4mzdz4njx47j081jia8y000b46cw8vmx44fx8gv1zwp";
       buildDepends = [ punycode stringprep text ];
       description = "Implements IDNA (RFC 3490)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "idna2008" = callPackage
    ({ mkDerivation, punycode, split }:
     mkDerivation {
       pname = "idna2008";
       version = "0.0.1.0";
       sha256 = "1pd62pr1hyk565mxc15f5lxyms58bywcqll5ya6cnzw20lv4lzlz";
       buildDepends = [ punycode split ];
       description = "Converts Unicode hostnames into ASCII";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "idris" = callPackage
    ({ mkDerivation, annotated-wl-pprint, ansi-terminal, ansi-wl-pprint
     , base64-bytestring, binary, blaze-html, blaze-markup, boehmgc
     , cheapskate, deepseq, filepath, fingertree, gmp, happy, haskeline
     , lens, libffi, mtl, network, optparse-applicative, parsers, split
     , text, time, transformers, trifecta, unordered-containers
     , utf8-string, vector, vector-binary-instances, xml, zlib
     }:
     mkDerivation {
       pname = "idris";
       version = "0.9.15.1";
       sha256 = "0r31jcqs9kgknm66v7bbcgj9md7z49sgvn0nhk1dwg8jj2rmfll8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         annotated-wl-pprint ansi-terminal ansi-wl-pprint base64-bytestring
         binary blaze-html blaze-markup cheapskate deepseq filepath
         fingertree haskeline lens libffi mtl network optparse-applicative
         parsers split text time transformers trifecta unordered-containers
         utf8-string vector vector-binary-instances xml zlib
       ];
       buildTools = [ happy ];
       extraLibraries = [ boehmgc gmp ];
       configureFlags = "-fgmp -fffi";
       homepage = "http://www.idris-lang.org/";
       description = "Functional Programming Language with Dependent Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ieee" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ieee";
       version = "0.7";
       sha256 = "0ckhmy10l4kchr5bg1hlygrj86ij0wrj3r8in9g3c3jhh00dx3km";
       homepage = "http://github.com/patperry/hs-ieee";
       description = "Utilities for dealing with IEEE floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ieee-utils" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ieee-utils";
       version = "0.4.0";
       sha256 = "0548m1xjvzf65kkklmqjr2f5h85zdfpvxmdbx5rcg33zi8aiqfgk";
       description = "ieee-utils";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ieee-utils-tempfix" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ieee-utils-tempfix";
       version = "0.4.0.1";
       sha256 = "0x0mkvnf3q4yfh7bi7hv6364gy0l57syzy9xgzyax8z94zh465c3";
       description = "ieee-utils";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ieee754" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ieee754";
       version = "0.7.4";
       sha256 = "1pxbkfa21mvc869n18nn7r29hcinxdbsnk68nlldzld8f6m13g1h";
       homepage = "http://github.com/patperry/hs-ieee754";
       description = "Utilities for dealing with IEEE floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ieee754-parser" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "ieee754-parser";
       version = "0.1";
       sha256 = "06pyzjd9imcnrffc0h4dwq46llkb9cmfk1nygmjgfz0y0f9481iv";
       buildDepends = [ binary ];
       license = "GPL";
     }) {};

  "iff" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "iff";
       version = "0.0.5";
       sha256 = "1qy19d39zkf79z2j3mvimcnr48vpka5zj05g46fl4f9hz9xjiv16";
       buildDepends = [ binary ];
       homepage = "http://code.haskell.org/~thielema/iff/";
       description = "Constructing and dissecting IFF files";
       license = "GPL";
     }) {};

  "ifscs" = callPackage
    ({ mkDerivation, failure, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "ifscs";
       version = "0.2.0.0";
       sha256 = "1675j66kmlfcwd8g0wanx4jfs3vnnvz8hpazskzng6ghvp4bam1q";
       buildDepends = [ failure ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       description = "An inductive-form set constraint solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ig" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring, conduit
     , conduit-extra, crypto-api, cryptohash, cryptohash-cryptoapi
     , data-default, http-conduit, http-types, lifted-base
     , monad-control, resourcet, text, time, transformers
     , transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "ig";
       version = "0.2.1";
       sha256 = "0kl44fv3djcrr87gqpcdbsvqiliwxz2iw5fd07h8xrvmls3b1lgj";
       buildDepends = [
         aeson attoparsec base16-bytestring conduit conduit-extra crypto-api
         cryptohash cryptohash-cryptoapi data-default http-conduit
         http-types lifted-base monad-control resourcet text time
         transformers transformers-base unordered-containers
       ];
       homepage = "https://github.com/prowdsponsor/ig";
       description = "Bindings to Instagram's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ige-mac-integration" = callPackage
    ({ mkDerivation, glib, gtk, gtk2hs-buildtools, ige-mac-integration
     , mtl
     }:
     mkDerivation {
       pname = "ige-mac-integration";
       version = "0.1.0.1";
       sha256 = "1949c5v3157xlwcmddawc79iagxlgy4l08skpkldi45amyy3jqn6";
       buildDepends = [ glib gtk mtl ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ ige-mac-integration ];
       homepage = "http://www.haskell.org/gtk2hs/";
       description = "Bindings for the Gtk/OS X integration library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) ige-mac-integration; };

  "igraph" = callPackage
    ({ mkDerivation, c2hs, hashable, igraph, unordered-containers }:
     mkDerivation {
       pname = "igraph";
       version = "0.1.1";
       sha256 = "098b1y1iwmlpi3kspq4cd82cs0bbxvygghssjr986664lgv06hsd";
       buildDepends = [ hashable unordered-containers ];
       buildTools = [ c2hs ];
       extraLibraries = [ igraph ];
       homepage = "http://giorgidze.github.com/igraph/";
       description = "Bindings to the igraph C library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) igraph; };

  "igrf" = callPackage
    ({ mkDerivation, ad, polynomial }:
     mkDerivation {
       pname = "igrf";
       version = "0.2.0.0";
       sha256 = "04ipbhry1v3cpkflshqa9sp46px0k6g67n8apvdqykk5fsssdpm1";
       editedCabalFile = "0kqyrvv7wnr35nlyip14g1shjb8zfqg7x4vm0qqhc57vc6s6qqbx";
       buildDepends = [ ad polynomial ];
       homepage = "https://github.com/dmcclean/igrf";
       description = "International Geomagnetic Reference Field";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ihaskell" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, cereal, classy-prelude
     , cmdargs, filepath, ghc-parser, ghc-paths, haskeline
     , haskell-src-exts, here, hlint, hspec, HTTP, HUnit, MissingH
     , mono-traversable, mtl, parsec, random, setenv, shelly, split, stm
     , strict, system-argv0, system-filepath, tar, text, transformers
     , unordered-containers, utf8-string, uuid, vector, zeromq4-haskell
     }:
     mkDerivation {
       pname = "ihaskell";
       version = "0.4.3.0";
       sha256 = "1k6i56cdzv5ikci20brq7qj07nqdpzkfj7xr69lh1gvx7xb24ida";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring cereal classy-prelude cmdargs filepath
         ghc-parser ghc-paths haskeline haskell-src-exts here hlint hspec
         HTTP HUnit MissingH mono-traversable mtl parsec random shelly split
         stm strict system-argv0 system-filepath tar text transformers
         unordered-containers utf8-string uuid vector zeromq4-haskell
       ];
       testDepends = [
         aeson base64-bytestring cereal classy-prelude cmdargs filepath
         ghc-parser ghc-paths haskeline haskell-src-exts here hlint hspec
         HTTP HUnit MissingH mono-traversable mtl parsec random setenv
         shelly split stm strict system-argv0 system-filepath tar text
         transformers unordered-containers utf8-string uuid vector
         zeromq4-haskell
       ];
       homepage = "http://gibiansky.github.io/IHaskell/";
       description = "A Haskell backend kernel for the IPython project";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ihaskell-aeson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, classy-prelude, here
     , ihaskell
     }:
     mkDerivation {
       pname = "ihaskell-aeson";
       version = "0.1.0.0";
       sha256 = "0pficg9df5396caic44hc7kxlj0qrd7lq6knkck8sn9xhakpr1m1";
       buildDepends = [ aeson aeson-pretty classy-prelude here ihaskell ];
       homepage = "http://www.github.com/gibiansky/IHaskell-Display";
       description = "IHaskell display instances for Aeson";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ihaskell-blaze" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, classy-prelude, ihaskell
     }:
     mkDerivation {
       pname = "ihaskell-blaze";
       version = "0.1.0.0";
       sha256 = "0sxh3sg90sjj4fnirki9gym3dznrwk85jdh034qwg9fqyk4sxn82";
       buildDepends = [ blaze-html blaze-markup classy-prelude ihaskell ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell display instances for blaze-html types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ihaskell-charts" = callPackage
    ({ mkDerivation, Chart, Chart-cairo, classy-prelude
     , data-default-class, ihaskell
     }:
     mkDerivation {
       pname = "ihaskell-charts";
       version = "0.1.0.0";
       sha256 = "0qh04p49ckmx7qrb7swa8bqr69sas1i4k1ki8iwmfaggxghp5pnj";
       buildDepends = [
         Chart Chart-cairo classy-prelude data-default-class ihaskell
       ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell display instances for charts types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ihaskell-diagrams" = callPackage
    ({ mkDerivation, classy-prelude, diagrams, diagrams-cairo
     , diagrams-lib, ihaskell
     }:
     mkDerivation {
       pname = "ihaskell-diagrams";
       version = "0.1.0.0";
       sha256 = "18k6abmq3xfkvc5mmbmam9qccr1kix530zil736xncpbyja2a5a8";
       buildDepends = [
         classy-prelude diagrams diagrams-cairo diagrams-lib ihaskell
       ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell display instances for diagram types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ihaskell-display" = callPackage
    ({ mkDerivation, classy-prelude, ihaskell }:
     mkDerivation {
       pname = "ihaskell-display";
       version = "0.1.0.0";
       sha256 = "1cbfhv9kg33dj28mn6mhhi363pz9jr2kw4ph64ga1fiawlj563l0";
       buildDepends = [ classy-prelude ihaskell ];
       homepage = "http://www.github.com/gibiansky/IHaskell";
       description = "IHaskell display instances for basic types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ihaskell-magic" = callPackage
    ({ mkDerivation, base64-bytestring, classy-prelude, ihaskell, magic
     , text, utf8-string
     }:
     mkDerivation {
       pname = "ihaskell-magic";
       version = "0.1.0.0";
       sha256 = "0p4r5vkpvrznwhwwhhmhmgyw8n0qfm4b9pwy0mv3iwa805ffafnd";
       buildDepends = [
         base64-bytestring classy-prelude ihaskell magic text utf8-string
       ];
       homepage = "http://www.github.com/gibiansky/IHaskell";
       description = "IHaskell display instances for bytestrings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ihttp" = callPackage
    ({ mkDerivation, attoparsec, contstuff, enumerator, netlines
     , network
     }:
     mkDerivation {
       pname = "ihttp";
       version = "0.3.0";
       sha256 = "1rcv92cdy3g9v3qgr3zvjjj0c4d7k99n7ya0mym0bjj79wj4r5zm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec contstuff enumerator netlines network
       ];
       description = "Incremental HTTP iteratee";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "illuminate" = callPackage
    ({ mkDerivation, alex, filemanip, filepath, hscolour, html
     , utf8-string, xhtml
     }:
     mkDerivation {
       pname = "illuminate";
       version = "0.1";
       sha256 = "16ijh2sadbayh3ldiagjq67xilhyv55qhqmmz8a73lbnlq3cphk5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filemanip filepath hscolour html utf8-string xhtml
       ];
       buildTools = [ alex ];
       homepage = "http://github.com/jgm/illuminate";
       description = "A fast syntax highlighting library built with alex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "image-type" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "image-type";
       version = "0.1.0.0";
       sha256 = "0xr55c5g4jn1y83qy7bqa5ww9r73vw9clgln9ld893vypmb91wks";
       editedCabalFile = "1wl2sv2g7iwxldk582h1z6a2b3ks4wzk8rx8bflcxwlh6s4kq0s7";
       homepage = "https://github.com/Icelandjack/Image-type";
       description = "Determine the type of an image by reading the first bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "imagefilters" = callPackage
    ({ mkDerivation, gd }:
     mkDerivation {
       pname = "imagefilters";
       version = "0.1";
       sha256 = "1n7awx8wsm6z0sp54jri3sp403n14wzr08vjj4a422q1lf306l3y";
       buildDepends = [ gd ];
       homepage = "https://github.com/tchannel/imagefilters";
       description = "Image Filters (contrast, brightness, gaussian blur, etc)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "imagemagick" = callPackage
    ({ mkDerivation, HUnit, ImageMagick, lifted-base, MagickWand
     , MonadCatchIO-transformers, QuickCheck, resourcet, system-filepath
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, transformers, vector
     }:
     mkDerivation {
       pname = "imagemagick";
       version = "0.0.3.5";
       sha256 = "0vwmx86wpxr1f5jrwlqpvrb94dbrm0jjdqq6bppfnfyppd3s1mmq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         MonadCatchIO-transformers resourcet system-filepath text
         transformers vector
       ];
       testDepends = [
         HUnit ImageMagick lifted-base MagickWand QuickCheck resourcet
         system-filepath test-framework test-framework-hunit
         test-framework-quickcheck2 text transformers vector
       ];
       pkgconfigDepends = [ ImageMagick MagickWand ];
       description = "bindings to imagemagick library";
       license = "unknown";
     }) {};

  "imagepaste" = callPackage
    ({ mkDerivation, HTTP, json, mtl, network, regex-posix, tagsoup
     , transformers, vcs-revision
     }:
     mkDerivation {
       pname = "imagepaste";
       version = "0.2.0.1";
       sha256 = "1k512mw4a2hm6nzz2sn00rmkf7fb7mj4a2lk1klr1wmlchwimvpv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         HTTP json mtl network regex-posix tagsoup transformers vcs-revision
       ];
       homepage = "https://bitbucket.org/balta2ar/imagepaste";
       description = "Command-line image paste utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "imagesize-conduit" = callPackage
    ({ mkDerivation, conduit, conduit-extra, hspec, resourcet }:
     mkDerivation {
       pname = "imagesize-conduit";
       version = "1.0.0.4";
       sha256 = "0hhmjbdqdljfy3khzpg2xq6kgxa9x89jvpci7lf413pc1lpg4cw7";
       editedCabalFile = "0gaas69df3m6q6yanzhzyv4smqkar4svs6yzy7vcvq9aayk6x6ls";
       buildDepends = [ conduit conduit-extra ];
       testDepends = [ conduit conduit-extra hspec resourcet ];
       homepage = "http://github.com/silkapp/imagesize-conduit";
       description = "Determine the size of some common image formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "imapget" = callPackage
    ({ mkDerivation, HaskellNet, HsOpenSSL, network, text }:
     mkDerivation {
       pname = "imapget";
       version = "0.0.3";
       sha256 = "0h6kbh3z78xm1rjphyv7zkjc5knd7v9agss0b9rzarm1z4qd2q5v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HaskellNet HsOpenSSL network text ];
       description = "Downloads email from imap SSL servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "imbib" = callPackage
    ({ mkDerivation, bibtex, ConfigFile, curl, download-curl, filepath
     , glib, gnomevfs, gtk, mtl, parsec, split, utf8-string
     }:
     mkDerivation {
       pname = "imbib";
       version = "1.0.0";
       sha256 = "0x31wjd6maqixr3rbangaph0s5skp18fmb8xgm1a6jsky8k367vz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bibtex ConfigFile curl download-curl filepath glib gnomevfs gtk mtl
         parsec split utf8-string
       ];
       description = "Minimalistic reference manager";
       license = "GPL";
     }) {};

  "imgurder" = callPackage
    ({ mkDerivation, curl, hxt, hxt-xpath, url }:
     mkDerivation {
       pname = "imgurder";
       version = "1.2";
       sha256 = "156a3fq274112j3a6lqiprwhgrcrjp3izix2z1s9bbx3c04pwrjx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ curl hxt hxt-xpath url ];
       description = "Uploader for Imgur";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "imm" = callPackage
    ({ mkDerivation, async, case-insensitive, cond, data-default, dyre
     , feed, filepath, hslogger, http-conduit, http-types, lens
     , mime-mail, monad-control, mtl, network, network-uri, opml, random
     , resourcet, text, text-icu, time, timerep, tls, transformers
     , transformers-base, utf8-string, xdg-basedir, xml
     }:
     mkDerivation {
       pname = "imm";
       version = "0.6.0.3";
       sha256 = "0fhqb36xj2xr1hhfrhk1npms9lnvbh6fmvki9mmm3gqs06hb925l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async case-insensitive cond data-default dyre feed filepath
         hslogger http-conduit http-types lens mime-mail monad-control mtl
         network network-uri opml random resourcet text text-icu time
         timerep tls transformers transformers-base utf8-string xdg-basedir
         xml
       ];
       description = "Retrieve RSS/Atom feeds and write one mail per new item in a maildir";
       license = "unknown";
     }) {};

  "immortal" = callPackage
    ({ mkDerivation, lifted-base, monad-control, stm, tasty
     , tasty-hunit, transformers, transformers-base
     }:
     mkDerivation {
       pname = "immortal";
       version = "0.2";
       sha256 = "1si9zh309xh29qrxkhb0shwisjrsja2d9lpj17dwlzn0gv0i1672";
       buildDepends = [ lifted-base monad-control transformers-base ];
       testDepends = [ lifted-base stm tasty tasty-hunit transformers ];
       homepage = "https://github.com/feuerbach/immortal";
       description = "Spawn threads that never die (unless told to do so)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "imparse" = callPackage
    ({ mkDerivation, ascetic, compilation, indents, MissingH, parsec
     , richreports, split, staticanalysis, text, uxadt
     }:
     mkDerivation {
       pname = "imparse";
       version = "0.0.0.3";
       sha256 = "15bpz985d39az15jn8hd6wcil7ivsi3vcnxi5lcfs34i848rs9fg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ascetic compilation indents MissingH parsec richreports split
         staticanalysis text uxadt
       ];
       description = "Multi-platform parser analyzer and generator";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "implicit" = callPackage
    ({ mkDerivation, blaze-builder, blaze-markup, blaze-svg, deepseq
     , filepath, JuicyPixels, mtl, optparse-applicative, parallel
     , parsec, storable-endian, text, unordered-containers, vector-space
     }:
     mkDerivation {
       pname = "implicit";
       version = "0.0.3";
       sha256 = "0zsd25gd0c4sp1ipjnsbn1gbdl6s0y2vy8n4nwn3dxgrv75cd1l9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-markup blaze-svg deepseq filepath JuicyPixels
         mtl optparse-applicative parallel parsec storable-endian text
         unordered-containers vector-space
       ];
       homepage = "https://github.com/colah/ImplicitCAD";
       description = "Math-inspired programmatic 2&3D CAD: CSG, bevels, and shells; gcode export..";
       license = "GPL";
     }) {};

  "implicit-params" = callPackage
    ({ mkDerivation, data-default-class }:
     mkDerivation {
       pname = "implicit-params";
       version = "0.2.1";
       sha256 = "1da01fnwxf1350ywawvl58qf479q2rz81wi9s8lvw2n3d75qpn8i";
       buildDepends = [ data-default-class ];
       homepage = "http://github.com/duairc/implicit-params";
       description = "Named and unnamed implicit parameters with defaults";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "improve" = callPackage
    ({ mkDerivation, mtl, yices }:
     mkDerivation {
       pname = "improve";
       version = "0.4.0";
       sha256 = "0z8w7lgk263ickb4l3ajhvy1bjq38bbiiw6c048a3yn4h8kpg67a";
       buildDepends = [ mtl yices ];
       homepage = "http://github.com/tomahawkins/improve/wiki/ImProve";
       description = "An imperative, verifiable programming language for high assurance applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "inc-ref" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "inc-ref";
       version = "0.3.0.0";
       sha256 = "0hr25bdwq2a1mj74wb8dvb95jyfqx13rz0h4makyb5kqlhxz40xl";
       buildDepends = [ stm ];
       homepage = "https://github.com/jfischoff/inc-ref";
       description = "A STM reference useful for incremental computing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "inch" = callPackage
    ({ mkDerivation, filepath, IndentParser, mtl, parsec, presburger }:
     mkDerivation {
       pname = "inch";
       version = "0.2.0";
       sha256 = "05f25yza05ib0xnkpfimhrb3nqyp5km85r1j9n6yh9k0cwdagndi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath IndentParser mtl parsec presburger ];
       testDepends = [ filepath IndentParser mtl parsec presburger ];
       homepage = "https://github.com/adamgundry/inch/";
       description = "A type-checker for Haskell with integer constraints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "include-file" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "include-file";
       version = "0.1.0.1";
       sha256 = "18rzxhblr77vzhkjyyi85fkbrpy897jm04l97zf39v0bf3v5wskh";
       buildDepends = [ random ];
       description = "Inclusion of files in executables at compile-time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "incremental-parser" = callPackage
    ({ mkDerivation, checkers, monoid-subclasses, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "incremental-parser";
       version = "0.2.3.3";
       sha256 = "0d1d05xf03glq770psykp1ip2z296spyrgs2g8nvigk6af2zy7nn";
       buildDepends = [ monoid-subclasses ];
       testDepends = [
         checkers monoid-subclasses QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://patch-tag.com/r/blamario/incremental-parser/wiki/";
       description = "Generic parser library capable of providing partial results from partial input";
       license = "GPL";
     }) {};

  "incremental-sat-solver" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "incremental-sat-solver";
       version = "0.1.7";
       sha256 = "1kic3q19lli8yd28szrngpfsqi50wc47k6597ay24zmiikhx4c2v";
       buildDepends = [ mtl ];
       homepage = "http://github.com/sebfisch/incremental-sat-solver";
       description = "Simple, Incremental SAT Solving as a Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "increments" = callPackage
    ({ mkDerivation, beamable, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "increments";
       version = "0.1.0.2";
       sha256 = "1v7jcgmbrkgdwmf3l5vhhfmsz1ylnhs0p18zyli0qk56xllj99s3";
       buildDepends = [ beamable ];
       testDepends = [
         beamable QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "type classes for incremental updates to data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "indentation" = callPackage
    ({ mkDerivation, mtl, parsec, parsers, trifecta }:
     mkDerivation {
       pname = "indentation";
       version = "0.2.0.0";
       sha256 = "1gn6v6l2d3a6nilkr4zg9ci9z9wh5027k2cdkd8hg5w964cccgs1";
       buildDepends = [ mtl parsec parsers trifecta ];
       homepage = "https://bitbucket.org/mdmkolbe/indentation";
       description = "Indentation sensitive parsing combinators for Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "indentparser" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "indentparser";
       version = "0.1";
       sha256 = "141bzmhdk5x2bzjx9g7hcf5p07h4q2vzzxlda8vf3dcgxgpdc7aw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://www.cse.iitk.ac.in/users/ppk/code/HASKELL/indentparser";
       description = "A parser for indentation based structures";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "indents" = callPackage
    ({ mkDerivation, concatenative, mtl, parsec }:
     mkDerivation {
       pname = "indents";
       version = "0.3.3";
       sha256 = "16lz21bp9j14xilnq8yym22p3saxvc9fsgfcf5awn2a6i6n527xn";
       buildDepends = [ concatenative mtl parsec ];
       homepage = "http://patch-tag.com/r/salazar/indents";
       description = "indentation sensitive parser-combinators for parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "index-core" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "index-core";
       version = "1.0.1";
       sha256 = "01d7025js5a3373a8ixl3clvmd0blpkly6js3ggnp26p4h5ilhv4";
       description = "Indexed Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "indexed" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "indexed";
       version = "0.1";
       sha256 = "1dx5pyi5psjd2l26hc3wfsapnywdl0kqpw98b3jwc0xq4406ax12";
       homepage = "https://github.com/reinerp/indexed";
       description = "Haskell98 indexed functors, monads, comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "indexed-do-notation" = callPackage
    ({ mkDerivation, haskell-src-meta, indexed }:
     mkDerivation {
       pname = "indexed-do-notation";
       version = "0.1";
       sha256 = "10yvbhjjzg19lyw9ynn2j1cyms2k4hxly5hmw0ad416f8zxmisf9";
       buildDepends = [ haskell-src-meta indexed ];
       homepage = "https://github.com/fumieval/indexed-do-notation";
       description = "Do notation for indexed monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "indexed-extras" = callPackage
    ({ mkDerivation, bifunctors, indexed, mtl, pointed }:
     mkDerivation {
       pname = "indexed-extras";
       version = "0.1.1";
       sha256 = "0mhzk2smcli5mk6ghcxpbnq58adryf42s50qmqrj72sxsfd7a09r";
       buildDepends = [ bifunctors indexed mtl pointed ];
       homepage = "https://github.com/reinerp/indexed-extras";
       description = "Indexed functors, monads and comonads that require extensions to Haskell98";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "indexed-free" = callPackage
    ({ mkDerivation, indexed }:
     mkDerivation {
       pname = "indexed-free";
       version = "0.3.1";
       sha256 = "1172vxhyzyf061mnlb8dndnvycjk3shxhiqd8hdz42ipv223admx";
       buildDepends = [ indexed ];
       homepage = "https://github.com/fumieval/indexed-free";
       description = "indexed monads for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "indian-language-font-converter" = callPackage
    ({ mkDerivation, gtk, HDBC, HDBC-sqlite3 }:
     mkDerivation {
       pname = "indian-language-font-converter";
       version = "0.2";
       sha256 = "1dw0fy3v2hfvlaw371af2c288v4p0wyg43h88clswids3nh1lpn8";
       buildDepends = [ gtk HDBC HDBC-sqlite3 ];
       description = "Indian Language Font Converter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "infer-upstream" = callPackage
    ({ mkDerivation, ansi-wl-pprint, github, optparse-applicative
     , parsec, text
     }:
     mkDerivation {
       pname = "infer-upstream";
       version = "0.1.1.0";
       sha256 = "11v8njjinjqzqfa5hggj0r1gki3hz6y7cxj5qfnzxa77hdav10fa";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint github optparse-applicative parsec text
       ];
       homepage = "https://github.com/silky/infer-upstream";
       description = "Find the repository from where a given repo was forked";
       license = stdenv.lib.licenses.mit;
     }) {};

  "infinite-search" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "infinite-search";
       version = "0.12";
       sha256 = "18sf9798nna155xix71lw68k19r7ayk9kmppjzd76yxa61r38g41";
       homepage = "http://github.com/luqui/infinite-search";
       description = "Exhaustively searchable infinite sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "infinity" = callPackage
    ({ mkDerivation, binary, Cabal, filepath, irc, plugins }:
     mkDerivation {
       pname = "infinity";
       version = "0.3";
       sha256 = "1d2l6a4ngawm7zqgfwxd19rh3zwihivbgns39q44yjh1d5v0azab";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary Cabal filepath irc plugins ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "infix" = callPackage
    ({ mkDerivation, haskell-src }:
     mkDerivation {
       pname = "infix";
       version = "0.1.1";
       sha256 = "156lcw4bvav9w41vggfjk84z41ppam31880wpislxwcsvc9jrd6q";
       buildDepends = [ haskell-src ];
       homepage = "http://www.cs.mu.oz.au/~bjpop/code.html";
       description = "Infix expression re-parsing (for HsParser library)";
       license = "GPL";
     }) {};

  "inflections" = callPackage
    ({ mkDerivation, HUnit, parsec, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "inflections";
       version = "0.1.0.7";
       sha256 = "0hf0s23x5fp763lfq8a4q3jp4d9k886sz56lrav915sz13v8rddz";
       buildDepends = [ parsec ];
       testDepends = [
         HUnit parsec QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/stackbuilders/inflections-hs";
       description = "Inflections library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "inflist" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "inflist";
       version = "0.0.1";
       sha256 = "0srw75ds7hic0sjs2fnj0hsqsygzvppgy17y8qmsjz9z14ryqncw";
       buildDepends = [ QuickCheck ];
       testDepends = [ QuickCheck ];
       homepage = "https://bitbucket.org/eegg/inflist";
       description = "An infinite list type and operations thereon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "influxdb" = callPackage
    ({ mkDerivation, aeson, attoparsec, data-default-class, dlist
     , exceptions, http-client, HUnit, mtl, mwc-random, network-uri
     , retry, scientific, tagged, tasty, tasty-hunit, tasty-quickcheck
     , tasty-th, text, time, vector
     }:
     mkDerivation {
       pname = "influxdb";
       version = "0.9.0";
       sha256 = "061qcb221qxbmvsss0zaan3x1dmk9icx5hlry8g9qj96js318zr3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec data-default-class dlist exceptions http-client
         mtl mwc-random network-uri retry scientific tagged text time vector
       ];
       testDepends = [
         http-client HUnit mtl tasty tasty-hunit tasty-quickcheck tasty-th
         text vector
       ];
       homepage = "https://github.com/maoe/influxdb-haskell";
       description = "Haskell client library for InfluxDB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "informative" = callPackage
    ({ mkDerivation, csv, highlighting-kate, http-conduit, monad-logger
     , pandoc, persistent, persistent-postgresql, shakespeare, text
     , time, yesod, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "informative";
       version = "0.1.0.5";
       sha256 = "1jc9hf90a22b7g58paqgwzxyjv89lmsqlpbjh39h79w6gm6a89xs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         csv highlighting-kate http-conduit monad-logger pandoc persistent
         persistent-postgresql shakespeare text time yesod yesod-auth
         yesod-core yesod-form
       ];
       homepage = "http://doomanddarkness.eu/pub/informative";
       description = "A yesod subsite serving a wiki";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "ini" = callPackage
    ({ mkDerivation, attoparsec, text, unordered-containers }:
     mkDerivation {
       pname = "ini";
       version = "0.2.2";
       sha256 = "1g2dpx3cb06750qdv1ynfw7yj6r72jzzn0xxiwa7a33ncskhd8ig";
       buildDepends = [ attoparsec text unordered-containers ];
       description = "Quick and easy configuration files in the INI format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "inject" = callPackage
    ({ mkDerivation, attoparsec, hspec, hspec-expectations, text }:
     mkDerivation {
       pname = "inject";
       version = "0.1.0";
       sha256 = "0rm81xkxfwbm98ywcwjnh1l9qkah3xma59l8z5l37b458hayxjqq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec text ];
       testDepends = [ attoparsec hspec hspec-expectations text ];
       description = "A minimalistic template engine";
       license = stdenv.lib.licenses.mit;
     }) {};

  "inject-function" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "inject-function";
       version = "0.2.1.0";
       sha256 = "1iw82rzw2w3y40zndz3mxpa7k5ds8zs87ccvp228s4zva0mp5ddl";
       homepage = "https://github.com/skypers/inject-function";
       description = "Monadic functions with injected parameters";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "inquire" = callPackage
    ({ mkDerivation, aether, text }:
     mkDerivation {
       pname = "inquire";
       version = "0.1";
       sha256 = "18qcjdwgn7a1lrdnqnh6sh1bzii0nvb5jv56qq5kri8m6qwc9wl8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aether text ];
       description = "Console client for encyclopedias";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "inserts" = callPackage
    ({ mkDerivation, attoparsec, dlist }:
     mkDerivation {
       pname = "inserts";
       version = "0.1.1";
       sha256 = "1ncm75rhsxc4bd8swd2vwmb5pl872wpy01989lwdhdpypawhax6y";
       buildDepends = [ attoparsec dlist ];
       homepage = "http://github.com/tel/inserts";
       description = "Stupid simple bytestring templates";
       license = stdenv.lib.licenses.mit;
     }) {};

  "inspection-proxy" = callPackage
    ({ mkDerivation, async, cmdargs, pipes, pipes-network }:
     mkDerivation {
       pname = "inspection-proxy";
       version = "0.1.0.3";
       sha256 = "09mk2wd4bs31zhz0x8z3ajlk734r0rp5k07g0mfdy4bsvi2hdqiy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ async cmdargs pipes pipes-network ];
       description = "A simple proxy for debugging plaintext protocols communication";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "instant-generics" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "instant-generics";
       version = "0.4.1";
       sha256 = "1jcs6spa3g8mazgpivn61gz4c740ks19rkz9sh24ns6n4q53zdvq";
       buildDepends = [ syb ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/InstantGenerics";
       description = "Generic programming library with a sum of products view";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "instant-zipper" = callPackage
    ({ mkDerivation, instant-generics, mtl }:
     mkDerivation {
       pname = "instant-zipper";
       version = "0.0.0";
       sha256 = "0gd5hzlm5rlmzba2dl37al711vp1nn2b30d36rvb2j8y90y8c44c";
       buildDepends = [ instant-generics mtl ];
       description = "Heterogenous Zipper in Instant Generics";
       license = "GPL";
     }) {};

  "instinct" = callPackage
    ({ mkDerivation, mersenne-random, vector }:
     mkDerivation {
       pname = "instinct";
       version = "0.1.0";
       sha256 = "0wh95zjdv9j1n3ccg2j08av43qnb9vmiyvqvyi70p47dr481npl8";
       buildDepends = [ mersenne-random vector ];
       description = "Fast artifical neural networks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "instrument-chord" = callPackage
    ({ mkDerivation, music-diatonic }:
     mkDerivation {
       pname = "instrument-chord";
       version = "0.1.0.9";
       sha256 = "0gq79i1mqpbyvxm8cfpr2b8h0knbc6f2m3b3mnm0p3yvi2d642nb";
       buildDepends = [ music-diatonic ];
       homepage = "https://github.com/xpika/chord";
       description = "Render Instrument Chords";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "int-cast" = callPackage
    ({ mkDerivation, nats, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "int-cast";
       version = "0.1.1.0";
       sha256 = "1snzggbb2z6rczym0xmbfmi59cdyf49qvjbfqchp8sr7b6dgn0vz";
       testDepends = [
         nats QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/hvr/int-cast";
       description = "Checked conversions between integral types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "integer-gmp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "integer-gmp";
       version = "0.5.1.0";
       sha256 = "04nklslbl336vd73lqfw7mvmlkd2wa19qwq3j14admzk3k5a0j3j";
       description = "Integer library based on GMP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "integer-pure" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "integer-pure";
       version = "1.0";
       sha256 = "0lrhf6mw90bfph3hbyxv3n7g2n2xnjfq4qnhyhw4ml76k4yybmxa";
       homepage = "http://projects.haskell.org/~malcolm/integer-pure";
       description = "A pure-Haskell implementation of arbitrary-precision Integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "integration" = callPackage
    ({ mkDerivation, parallel }:
     mkDerivation {
       pname = "integration";
       version = "0.2.0.1";
       sha256 = "1pwykd7jjy1d7inf747mpz2bh7ygakmlb90xi57dwm8h249knbmk";
       buildDepends = [ parallel ];
       homepage = "https://github.com/ekmett/integration";
       description = "Fast robust numeric integration via tanh-sinh quadrature";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "intel-aes" = callPackage
    ({ mkDerivation, cereal, crypto-api, DRBG, intel_aes, largeword
     , random, rdtsc, split, tagged, time
     }:
     mkDerivation {
       pname = "intel-aes";
       version = "0.2.1.1";
       sha256 = "11cy9dlynlz9mgbs4w4xfjb9dx05dklfjl3gg2130si8q2kk3cm9";
       buildDepends = [
         cereal crypto-api DRBG largeword random rdtsc split tagged time
       ];
       extraLibraries = [ intel_aes ];
       homepage = "https://github.com/rrnewton/intel-aes/wiki";
       description = "Hardware accelerated AES encryption and Random Number Generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "interleavableGen" = callPackage
    ({ mkDerivation, haskell-src, hint, mtl }:
     mkDerivation {
       pname = "interleavableGen";
       version = "0.0.1";
       sha256 = "10clafccpg8xciqhj2hzbi4kixzprgp733396qf531nwakvnqpp2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src hint mtl ];
       description = "Generates a version of a module using InterleavableIO";
       license = "unknown";
     }) {};

  "interleavableIO" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "interleavableIO";
       version = "0.0.1";
       sha256 = "19jdrfr6n6yzvj1i8r7hhr3k6zkkbrs6pizqcbzhb0nvzzshmqa8";
       buildDepends = [ mtl ];
       description = "Use other Monads in functions that asks for an IO Monad";
       license = "unknown";
     }) {};

  "interleave" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "interleave";
       version = "1.0";
       sha256 = "062ixqbrrmamwv3fj6vpfcxy35p37i1wpmsxk1gl9n06n0lg9a8c";
       description = "Combinators for supporting interleaving of different behaviours";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "interlude" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "interlude";
       version = "0.1.2";
       sha256 = "1yiv24n0mfjzbpm9p6djllhwck3brjz9adzyp6k4fpk430304k7s";
       homepage = "http://malde.org/~ketil/";
       description = "Replaces some Prelude functions for enhanced error reporting";
       license = "GPL";
     }) {};

  "intern" = callPackage
    ({ mkDerivation, hashable, text, unordered-containers }:
     mkDerivation {
       pname = "intern";
       version = "0.9.1.3";
       sha256 = "1629m3an18m3nqxq40mg9cn0c6rma1wm3jr7kn6kqpw4xq53zvvp";
       buildDepends = [ hashable text unordered-containers ];
       homepage = "http://github.com/ekmett/intern/";
       description = "Efficient hash-consing for arbitrary data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "internetmarke" = callPackage
    ({ mkDerivation, explicit-exception, HPDF, parsec, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "internetmarke";
       version = "0.0.3";
       sha256 = "1gn6vvrnhck9f9hzs8igdg20gvrvjnba00bj191paw02kpzbgx7z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         explicit-exception HPDF parsec transformers utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/internetmarke/";
       description = "Shell command for constructing custom stamps for German Post";
       license = "GPL";
     }) {};

  "interpol" = callPackage
    ({ mkDerivation, haskell-src-exts, HUnit, regex-posix, syb
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "interpol";
       version = "0.2.3";
       sha256 = "11awkl6rgy33yl4qcnf7ns464c87xjk9hqcf10z8shjjbaadbz43";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ haskell-src-exts regex-posix syb ];
       testDepends = [
         haskell-src-exts HUnit regex-posix syb test-framework
         test-framework-hunit
       ];
       homepage = "https://github.com/scvalex/interpol";
       description = "GHC preprocessor and library to enable variable interpolation in strings";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "interpolate" = callPackage
    ({ mkDerivation, haskell-src-meta, hspec, QuickCheck
     , quickcheck-instances, text
     }:
     mkDerivation {
       pname = "interpolate";
       version = "0.1.0";
       sha256 = "0wlc10qd1bq3xj64a3yq2gzds9kas9zyylkm9kxd46gy35fns6id";
       buildDepends = [ haskell-src-meta ];
       testDepends = [
         haskell-src-meta hspec QuickCheck quickcheck-instances text
       ];
       description = "String interpolation done right";
       license = stdenv.lib.licenses.mit;
     }) {};

  "interpolatedstring-perl6" = callPackage
    ({ mkDerivation, haskell-src-meta, text }:
     mkDerivation {
       pname = "interpolatedstring-perl6";
       version = "0.9.0";
       sha256 = "15hzmni3wfdgjl0vyk5mcld61ba99wdax87s7wkz2s8bsyxkbq9n";
       buildDepends = [ haskell-src-meta text ];
       description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "interpolatedstring-qq" = callPackage
    ({ mkDerivation, haskell-src-meta-mwotton }:
     mkDerivation {
       pname = "interpolatedstring-qq";
       version = "0.2";
       sha256 = "1bqn9gqc43r158hyk35x8avsiqyd43vlpw2jkhpdfmr2wx29jprq";
       buildDepends = [ haskell-src-meta-mwotton ];
       description = "QuasiQuoter for Ruby-style multi-line interpolated strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "interpolatedstring-qq-mwotton" = callPackage
    ({ mkDerivation, haskell-src-meta-mwotton }:
     mkDerivation {
       pname = "interpolatedstring-qq-mwotton";
       version = "0.1.1";
       sha256 = "1cwhy4jwbl50nglfw0wfmdr3rrg33dqskw0wq06prx14x22yshbk";
       buildDepends = [ haskell-src-meta-mwotton ];
       description = "DO NOT USE THIS. interpolatedstring-qq works now.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "interpolation" = callPackage
    ({ mkDerivation, QuickCheck, utility-ht }:
     mkDerivation {
       pname = "interpolation";
       version = "0.0";
       sha256 = "0l6i6gz555sq2kzffmlidh14wjg2hzvd7qc7b4sv532qbmlrhixv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ utility-ht ];
       testDepends = [ QuickCheck utility-ht ];
       homepage = "http://code.haskell.org/~thielema/interpolation/";
       description = "piecewise linear and cubic Hermite interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "intervals" = callPackage
    ({ mkDerivation, distributive, doctest, filepath }:
     mkDerivation {
       pname = "intervals";
       version = "0.7.0.1";
       sha256 = "02qb44ga2yfsymkfixy3fdp943r2flwrsaqhb0pjddr3ixzm4ap9";
       buildDepends = [ distributive ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/intervals";
       description = "Interval Arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "intricacy" = callPackage
    ({ mkDerivation, binary, cryptohash, filepath, hscurses, mtl
     , network-fancy, SDL, SDL-gfx, SDL-ttf, stm, time, transformers
     , vector
     }:
     mkDerivation {
       pname = "intricacy";
       version = "0.3.1";
       sha256 = "02dafhkvlbizj16rxay9mv9fjncxixmw9npvkyqglrhcqfnyzrqq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary cryptohash filepath hscurses mtl network-fancy SDL SDL-gfx
         SDL-ttf stm time transformers vector
       ];
       homepage = "http://mbays.freeshell.org/intricacy";
       description = "A game of competitive puzzle-design";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "intset" = callPackage
    ({ mkDerivation, bits-extras, deepseq, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "intset";
       version = "0.1.1.0";
       sha256 = "044nw8z2ga46mal9pr64vsc714n4dibx0k2lwgnrkk49729c7lk0";
       buildDepends = [ bits-extras deepseq ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/pxqr/intset";
       description = "Pure, mergeable, succinct Int sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "invariant" = callPackage
    ({ mkDerivation, contravariant }:
     mkDerivation {
       pname = "invariant";
       version = "0.1.1";
       sha256 = "077jhn2fspnjkr8p3sh6draidqpk6wpism73rz8172acd4jjg4fz";
       buildDepends = [ contravariant ];
       description = "Haskell 98 invariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "invertible-syntax" = callPackage
    ({ mkDerivation, partial-isomorphisms }:
     mkDerivation {
       pname = "invertible-syntax";
       version = "0.2.1";
       sha256 = "0kyi7gq0a792v4lwmpq8i56vzwk6g7cjc3lbpxch47jsqv8lfhbp";
       buildDepends = [ partial-isomorphisms ];
       homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
       description = "Invertible syntax descriptions for both parsing and pretty printing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-capture" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "io-capture";
       version = "0.3";
       sha256 = "03kjjsz1i1viwngmq9mvkzd43490g93mbkcvgjvcway2z5prv06f";
       description = "capture IO action's stdout and stderr";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-choice" = callPackage
    ({ mkDerivation, hspec, lifted-base, monad-control, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "io-choice";
       version = "0.0.5";
       sha256 = "19nr8kxcg98510cqgjn4c9sd8i9yz8fv4ryqg6lzzgpwqzkvx5ph";
       buildDepends = [
         lifted-base monad-control transformers transformers-base
       ];
       testDepends = [ hspec lifted-base monad-control transformers ];
       description = "Choice for IO and lifted IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-manager" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "io-manager";
       version = "0.1.0.2";
       sha256 = "0f21h36z2ls0d6g31pcf4kcyfninaxws8w159zy33bwa19saf2mz";
       isLibrary = true;
       isExecutable = true;
       description = "Skeleton library around the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-memoize" = callPackage
    ({ mkDerivation, async }:
     mkDerivation {
       pname = "io-memoize";
       version = "1.1.1.0";
       sha256 = "0ga85wdvz67jjx8qh6f687kfikcrfmp7winn13v6na7vlaqs2ly7";
       buildDepends = [ async ];
       homepage = "https://github.com/DanBurton/io-memoize";
       description = "Memoize IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-reactive" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "io-reactive";
       version = "0.1.1";
       sha256 = "09iq8c86ql0hmzdf7i82lpdqa6nn6r0zy9lgryd6chkxd0kcpgvn";
       isLibrary = true;
       isExecutable = true;
       description = "An API for generating TIMBER style reactive objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-storage" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "io-storage";
       version = "0.3";
       sha256 = "1ga9bd7iri6vlsxnjx765yy3bxc4lbz644wyw88yzvpjgz6ga3cs";
       homepage = "http://github.com/willdonnelly/io-storage";
       description = "A key-value store in the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-streams" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, deepseq, filepath
     , HUnit, mtl, network, primitive, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , transformers, vector, zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "io-streams";
       version = "1.2.1.1";
       sha256 = "1pvrscyw7wcv910p8d9j4a9jdm0vm7m74g5kgzpc5hnxdfibhqj1";
       buildDepends = [
         attoparsec blaze-builder network primitive text time transformers
         vector zlib-bindings
       ];
       testDepends = [
         attoparsec blaze-builder deepseq filepath HUnit mtl network
         primitive QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text time transformers vector zlib
         zlib-bindings
       ];
       configureFlags = "-fNoInteractiveTests";
       description = "Simple, composable, and easy-to-use stream I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "io-throttle" = callPackage
    ({ mkDerivation, SafeSemaphore, threads }:
     mkDerivation {
       pname = "io-throttle";
       version = "0.1.0";
       sha256 = "043plb9n606hkbdjddgk9kg12fzzs7ry063ckiky4zymy2vprcj9";
       editedCabalFile = "0vm1c6ncb6ckchrmyhk201b2mc3s3z8p59cy49sf6xjza4r3b463";
       buildDepends = [ SafeSemaphore threads ];
       homepage = "http://github.com/rodrigosetti/io-throttle";
       description = "Limit number of IO actions started per second";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ioctl" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "ioctl";
       version = "0.0.1";
       sha256 = "0rwh7mlwdd24ndzz4b4vd5b5daz9cga47m9nz6g75m03iyy237qs";
       buildDepends = [ network ];
       description = "Type-safe I/O control package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "iotransaction" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "iotransaction";
       version = "0.1";
       sha256 = "0ylwrim2wfx3v03syd8v0iwf9kbw9154wlxsp8wc1d3n6sz7p1cc";
       homepage = "https://bitbucket.org/dshearer/iotransaction/";
       description = "Supports the automatic undoing of IO operations when an exception is thrown";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ip6addr" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "ip6addr";
       version = "0.3.3";
       sha256 = "1kpyqrxg55h02x7dysr02g8z4sn9f60w8l46sgvcrj045507wagw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://www.cybervisible.fr/ip6addr";
       description = "Command-line tools to deal with IPv6 Addresses text representation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ipatch" = callPackage
    ({ mkDerivation, darcs, filepath, hashed-storage }:
     mkDerivation {
       pname = "ipatch";
       version = "0.1.1";
       sha256 = "19yf0b82ifplja05if38llfs38mzmxxald89jc2yzqzzkvws9ldq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ darcs filepath hashed-storage ];
       homepage = "http://darcs.nomeata.de/ipatch";
       description = "interactive patch editor";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "ipc" = callPackage
    ({ mkDerivation, binary, dlist, mtl, network, network-bytestring
     , stm
     }:
     mkDerivation {
       pname = "ipc";
       version = "0.0.5";
       sha256 = "0d1w62181s21ks63548i3jdfk4k1rg0hssnhkm97ymkrlcz6w68d";
       buildDepends = [ binary dlist mtl network network-bytestring stm ];
       description = "High level inter-process communication library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ipcvar" = callPackage
    ({ mkDerivation, binary, hspec }:
     mkDerivation {
       pname = "ipcvar";
       version = "0.0.1";
       sha256 = "085p03xk29wk03yfshpjvzkf2z79byhp9yy81vra1aci9nkgjr3n";
       buildDepends = [ binary ];
       testDepends = [ hspec ];
       description = "Simple inter-process communication through IPCVars";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ipopt-hs" = callPackage
    ({ mkDerivation, ad, ansi-wl-pprint, c2hs, criterion, ipopt, lens
     , linear, mtl, nlopt, random-shuffle, Rlang-QQ, splines
     , uu-parsinglib, vector, vector-space
     }:
     mkDerivation {
       pname = "ipopt-hs";
       version = "0.4.2.0";
       sha256 = "1lp0prql6f487zp08rj5hkdsf4al6qlzzfjpxildwmwsgajnw942";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ad ansi-wl-pprint criterion lens linear mtl random-shuffle Rlang-QQ
         splines uu-parsinglib vector vector-space
       ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ ipopt nlopt ];
       description = "haskell binding to ipopt and nlopt including automatic differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ipprint" = callPackage
    ({ mkDerivation, Extra, haskell-src }:
     mkDerivation {
       pname = "ipprint";
       version = "0.5";
       sha256 = "0h75k21blbnzvp5l20qsima557dx6zfrww79y7qsqf04pbd81j7s";
       buildDepends = [ Extra haskell-src ];
       description = "Tiny helper for pretty-printing values in ghci console";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iproute" = callPackage
    ({ mkDerivation, appar, byteorder, doctest, hspec, network
     , QuickCheck, safe
     }:
     mkDerivation {
       pname = "iproute";
       version = "1.3.1";
       sha256 = "1l3asv8q1jiwsvpq6kkigrzpm3pjbm03gpc4rbhn6kpi6z9h8cdp";
       buildDepends = [ appar byteorder network ];
       testDepends = [
         appar byteorder doctest hspec network QuickCheck safe
       ];
       homepage = "http://www.mew.org/~kazu/proj/iproute/";
       description = "IP Routing Table";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iptables-helpers" = callPackage
    ({ mkDerivation, mtl, parsec, QuickCheck, safe, syb, utf8-string }:
     mkDerivation {
       pname = "iptables-helpers";
       version = "0.5.0";
       sha256 = "13xv7g349ssgbz9c0g8q77hf52gp0v7nw9q665l697237jbvl57j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec QuickCheck safe syb utf8-string ];
       description = "iptables rules parser/printer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iptadmin" = callPackage
    ({ mkDerivation, augeas, blaze-html, blaze-markup, ConfigFile
     , file-embed, filepath, happstack-server, happstack-server-tls
     , hdaemonize, hsyslog, iptables-helpers, mtl, network, pam, parsec
     , random, safe, time, utf8-string
     }:
     mkDerivation {
       pname = "iptadmin";
       version = "1.3.4";
       sha256 = "1ksnypq95xaybsb3vvhmabrh8l3c2c3mcqz83a61md9c1vw3n94m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         augeas blaze-html blaze-markup ConfigFile file-embed filepath
         happstack-server happstack-server-tls hdaemonize hsyslog
         iptables-helpers mtl network pam parsec random safe time
         utf8-string
       ];
       homepage = "http://iptadmin.117.su";
       description = "web-interface for iptables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ipython-kernel" = callPackage
    ({ mkDerivation, aeson, cereal, text, uuid, zeromq4-haskell }:
     mkDerivation {
       pname = "ipython-kernel";
       version = "0.1.0.0";
       sha256 = "048zc62rci4784djsp9m607zy2z3ybh0zm7211j8j8j1z96nz2x5";
       buildDepends = [ aeson cereal text uuid zeromq4-haskell ];
       homepage = "http://github.com/gibiansky/IHaskell";
       description = "A library for creating kernels for IPython frontends";
       license = stdenv.lib.licenses.mit;
     }) {};

  "irc" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "irc";
       version = "0.6.0.1";
       sha256 = "0524phrxjv0i5qabrf4sj0zpcvkdvcivv1lg46591pmvndfhpyn4";
       buildDepends = [ attoparsec ];
       description = "A small library for parsing IRC messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "irc-bytestring" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "irc-bytestring";
       version = "0.1";
       sha256 = "09n4y93x74wblbz89s1hwzmanwwi72cj0baz72485svarg55kid7";
       buildDepends = [ attoparsec ];
       homepage = "https://github.com/kallisti-dev/irc-bytestring";
       description = "serialization and parsing of IRC messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "irc-conduit" = callPackage
    ({ mkDerivation, async, conduit, conduit-extra, connection, irc
     , irc-ctcp, network-conduit-tls, text, time, tls, transformers
     , x509-validation
     }:
     mkDerivation {
       pname = "irc-conduit";
       version = "0.1.1.2";
       sha256 = "1ib75a7dp9f6v7zl51a5z1pvv0vpll6czf5i8zad7ajn3q9d4z3p";
       buildDepends = [
         async conduit conduit-extra connection irc irc-ctcp
         network-conduit-tls text time tls transformers x509-validation
       ];
       homepage = "https://github.com/barrucadu/irc-conduit";
       description = "Streaming IRC message library using conduits";
       license = "unknown";
     }) {};

  "irc-ctcp" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "irc-ctcp";
       version = "0.1.2.1";
       sha256 = "1bpn9i9mqmhiif6mhw6q9nzy5cwx1x1yh81216gkqc5gi43gsc5s";
       editedCabalFile = "1khd5naw7jb1mn7s3c8gnccpmf5qx51yagr7i57v6cnkrbvjzs93";
       buildDepends = [ text ];
       homepage = "https://github.com/barrucadu/irc-ctcp";
       description = "A CTCP encoding and decoding library for IRC clients";
       license = "unknown";
     }) {};

  "ircbot" = callPackage
    ({ mkDerivation, filepath, irc, mtl, network, parsec, random
     , SafeSemaphore, stm, time
     }:
     mkDerivation {
       pname = "ircbot";
       version = "0.6.1";
       sha256 = "0zmn2qplq08kg439afycrggd54szf6b6rajd6lhsgnvhwk356vhb";
       buildDepends = [
         filepath irc mtl network parsec random SafeSemaphore stm time
       ];
       homepage = "http://hub.darcs.net/stepcut/ircbot";
       description = "A library for writing irc bots";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ircbouncer" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ircbouncer";
       version = "0.2.0";
       sha256 = "1bn0m9x89pqknz8gn8gk9is6w6px4hznp3fqqb5dxwssmmjm99zm";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ireal" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "ireal";
       version = "0.1";
       sha256 = "0qphr5fr118549wr09aq6yf4v7f346pdv0w8ga7a1svq3ckkyp5d";
       editedCabalFile = "1xrfnrd066q6sl3q657jza5098606z1xz4i6yw1yfl8rma0vjdxg";
       buildDepends = [ QuickCheck ];
       description = "Real numbers and intervals with not so inefficient exact arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ironforge" = callPackage
    ({ mkDerivation, antisplice, chatty, chatty-utils, mtl
     , transformers
     }:
     mkDerivation {
       pname = "ironforge";
       version = "0.1.0.34";
       sha256 = "0f5hhncn1svv7kh8jl1jcscm9686401b0cvln5lv6gf3yij15107";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ antisplice chatty chatty-utils mtl transformers ];
       description = "A technical demo for Antisplice";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "is" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "is";
       version = "0.2";
       sha256 = "1ihrrpypdjhsr42nd9chyq730kllx239igjpa12m14458lnrcb2h";
       description = "Pattern predicates using TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "isdicom" = callPackage
    ({ mkDerivation, doctest, filepath, QuickCheck }:
     mkDerivation {
       pname = "isdicom";
       version = "0.0.2";
       sha256 = "05f99nv4ydals0x1y39mswm3437s6bisdk63bgfzb89sgh0p9w1p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/isdicom";
       description = "An executable and library to determine if a file is a DICOM file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "isevaluated" = callPackage
    ({ mkDerivation, vacuum }:
     mkDerivation {
       pname = "isevaluated";
       version = "0.3.0.2";
       sha256 = "10f09br33xy5ldl924kfnnlc5ilwq44hd17s2qdf9jm75q4sa7d5";
       buildDepends = [ vacuum ];
       description = "Check whether a value has been evaluated";
       license = stdenv.lib.licenses.mit;
     }) {};

  "isiz" = callPackage
    ({ mkDerivation, gtk3 }:
     mkDerivation {
       pname = "isiz";
       version = "0.0.1";
       sha256 = "0k0nyiicz87lvay95vligf563k1dgx93zds0f0kzqxn20miq480s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk3 ];
       description = "A program to show the size of image and whether suitable for wallpaper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "islink" = callPackage
    ({ mkDerivation, unordered-containers }:
     mkDerivation {
       pname = "islink";
       version = "0.1.0.0";
       sha256 = "1mxfs8k0znc7v2iynjnhr4k5c9as4ip37ybvxnvjfqy4dld9rgyg";
       buildDepends = [ unordered-containers ];
       homepage = "https://github.com/redneb/islink";
       description = "Check if an HTML element is a link";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ismtp" = callPackage
    ({ mkDerivation, contstuff, dnscache, enumerator, lifted-base
     , monad-control, netlines, network, vector
     }:
     mkDerivation {
       pname = "ismtp";
       version = "4.0.2";
       sha256 = "0skyrp497p0gfh39j1ng7ahpbzfykfvykq720akafgnapgsfxkhm";
       buildDepends = [
         contstuff dnscache enumerator lifted-base monad-control netlines
         network vector
       ];
       description = "Advanced ESMTP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iso3166-country-codes" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "iso3166-country-codes";
       version = "0.20130302.4";
       sha256 = "1mifah3bjhvja524ssj58f9hag6yx3lah8qlavvgvz9xlhlpxz19";
       description = "A datatype for ISO 3166 country codes";
       license = "LGPL";
     }) {};

  "iso639" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "iso639";
       version = "0.1.0.2";
       sha256 = "011k1k1g7ywk2y5b2sbaghw1mfainijbb3x6m7n5s040gy0kh9ar";
       homepage = "https://github.com/HugoDaniel/iso639";
       description = "ISO-639-1 language codes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iso8583-bitmaps" = callPackage
    ({ mkDerivation, binary, parsec, syb, th-lift }:
     mkDerivation {
       pname = "iso8583-bitmaps";
       version = "0.1.0.0";
       sha256 = "0w6m8ygpy1g95zvmbzq9402rxh4dj48i5bhcdzc4s0kig239gzqd";
       buildDepends = [ binary parsec syb th-lift ];
       description = "Parse and merge ISO 8583-style bitmaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iso8601-time" = callPackage
    ({ mkDerivation, hspec, HUnit, time }:
     mkDerivation {
       pname = "iso8601-time";
       version = "0.1.2";
       sha256 = "1cjq5rckhzqpi8iayx2xnqgdng3qldpd1rssv080paqlikiqx0c1";
       buildDepends = [ time ];
       testDepends = [ hspec HUnit time ];
       homepage = "https://github.com/nh2/iso8601-time";
       description = "Convert to/from the ISO 8601 time format";
       license = stdenv.lib.licenses.mit;
     }) {};

  "isohunt" = callPackage
    ({ mkDerivation, aeson, data-default, http-conduit, text
     , unordered-containers, uri, vector
     }:
     mkDerivation {
       pname = "isohunt";
       version = "0.1.3";
       sha256 = "189dmxczmr0kqh440ziyp6kxx6iza2yyq7cs05hic9w8lhpwa6pw";
       buildDepends = [
         aeson data-default http-conduit text unordered-containers uri
         vector
       ];
       homepage = "https://github.com/reinerp/isohunt";
       description = "Bindings to the isoHunt torrent search API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "itanium-abi" = callPackage
    ({ mkDerivation, boomerang, HUnit, test-framework
     , test-framework-hunit, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "itanium-abi";
       version = "0.1.0.0";
       sha256 = "19ywiim8jjkpj2f7agvq98j4p7l1bw8lp2lmgimwq3bz17nrawwk";
       buildDepends = [
         boomerang text transformers unordered-containers
       ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       description = "An implementation of name mangling/demangling for the Itanium ABI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iter-stats" = callPackage
    ({ mkDerivation, heap, HUnit, iteratee, ListLike, mtl, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "iter-stats";
       version = "0.1.0.3";
       sha256 = "08axxd7cqq39gjiib01mlvihqc0zgkp8nrx22mzdxfqf9v00ph9v";
       buildDepends = [ heap iteratee ListLike mtl ];
       testDepends = [
         heap HUnit iteratee ListLike mtl statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/JohnLato/iter-stats";
       description = "iteratees for statistical processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iterIO" = callPackage
    ({ mkDerivation, attoparsec, filepath, HsOpenSSL, ListLike, mtl
     , network, stringsearch, time, zlib
     }:
     mkDerivation {
       pname = "iterIO";
       version = "0.2.2";
       sha256 = "0cq0awzl249m9kzgs0hzs49r2v29q4dhq3sbd818izvyqzfzz4zm";
       buildDepends = [
         attoparsec filepath HsOpenSSL ListLike mtl network stringsearch
         time
       ];
       extraLibraries = [ zlib ];
       homepage = "http://www.scs.stanford.edu/~dm/iterIO";
       description = "Iteratee-based IO with pipe operators";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) zlib; };

  "iterable" = callPackage
    ({ mkDerivation, mtl, tagged, vector }:
     mkDerivation {
       pname = "iterable";
       version = "3.0";
       sha256 = "194718jpjwkv3ynlpgjlpvf0iqnj7dkd3zmci363gsa425i3vlbc";
       buildDepends = [ mtl tagged vector ];
       homepage = "https://github.com/BioHaskell/iterable";
       description = "API for hierarchical multilevel collections";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iteratee" = callPackage
    ({ mkDerivation, exceptions, HUnit, ListLike, monad-control, mtl
     , parallel, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers, transformers-base
     }:
     mkDerivation {
       pname = "iteratee";
       version = "0.8.9.6";
       sha256 = "1yc5fqqb8warvgld3cymka7d2wmjydvfin5jy7zaazb7alf14q1p";
       buildDepends = [
         exceptions ListLike monad-control parallel transformers
         transformers-base
       ];
       testDepends = [
         exceptions HUnit ListLike monad-control mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         transformers transformers-base
       ];
       homepage = "http://www.tiresiaspress.us/haskell/iteratee";
       description = "Iteratee-based I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iteratee-compress" = callPackage
    ({ mkDerivation, bzip2, iteratee, mtl, zlib }:
     mkDerivation {
       pname = "iteratee-compress";
       version = "0.3.3.1";
       sha256 = "1j5w3pfi8mx88wfg6fwrj5jccfp8spw0jwb4zh3yyzg1jacrpal4";
       buildDepends = [ iteratee mtl ];
       extraLibraries = [ bzip2 zlib ];
       description = "Enumeratees for compressing and decompressing streams";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) zlib; };

  "iteratee-mtl" = callPackage
    ({ mkDerivation, ListLike, MonadCatchIO-mtl, mtl }:
     mkDerivation {
       pname = "iteratee-mtl";
       version = "0.5.0.0";
       sha256 = "0a3f0m9lgc4ks18891a689bbb1c1kdrxswj42s5syvcq73y7v2h0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ListLike MonadCatchIO-mtl mtl ];
       homepage = "http://inmachina.net/~jwlato/haskell/iteratee";
       description = "Iteratee-based I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iteratee-parsec" = callPackage
    ({ mkDerivation, iteratee, ListLike, parsec, reference
     , transformers
     }:
     mkDerivation {
       pname = "iteratee-parsec";
       version = "0.0.6";
       sha256 = "1saffq3pl20fph6jdss6yzdgfaqxwb2183gb3qxj6cwsrblzz628";
       buildDepends = [ iteratee ListLike parsec reference transformers ];
       description = "Package allowing parsec parser initeratee";
       license = stdenv.lib.licenses.mit;
     }) {};

  "iteratee-stm" = callPackage
    ({ mkDerivation, iteratee, stm, stm-chans, transformers }:
     mkDerivation {
       pname = "iteratee-stm";
       version = "0.1.2";
       sha256 = "1916phr07ckvm571rspswqr93z22la0mkxghvzljr0vgd1zi4p0x";
       buildDepends = [ iteratee stm stm-chans transformers ];
       homepage = "http://www.tiresiaspress.us/~jwlato/haskell/iteratee-stm";
       description = "Concurrent iteratees using STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iterio-server" = callPackage
    ({ mkDerivation, filepath, iterIO, ListLike, monadIO, mtl, network
     , split, transformers
     }:
     mkDerivation {
       pname = "iterio-server";
       version = "0.3";
       sha256 = "1yz05y6i036irdbnsmhhr9lpcfk56ii6ls1fqdgh80h9giyi6c0n";
       buildDepends = [
         filepath iterIO ListLike monadIO mtl network split transformers
       ];
       homepage = "https://github.com/alevy/iterio-server";
       description = "Library for building servers with IterIO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivar-simple" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ivar-simple";
       version = "0.3";
       sha256 = "13if0mqgnc6lsx1acw6395milygqq18sm5vazfkxdhmppsqb91ch";
       description = "Write once concurrency primitives";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ivor" = callPackage
    ({ mkDerivation, binary, mtl, parsec }:
     mkDerivation {
       pname = "ivor";
       version = "0.1.14.1";
       sha256 = "0r9ykfkxpwsrhsvv691r361pf79a7y511hxy2mvd6ysz1441mych";
       buildDepends = [ binary mtl parsec ];
       homepage = "http://www.dcs.st-and.ac.uk/~eb/Ivor/";
       description = "Theorem proving library based on dependent type theory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory" = callPackage
    ({ mkDerivation, monadLib, parsec, th-lift }:
     mkDerivation {
       pname = "ivory";
       version = "0.1.0.0";
       sha256 = "1rn1akrsci0k5nbk4zipxznkdm0y3rvv9la5mnrr9mkj5zikj5sc";
       buildDepends = [ monadLib parsec th-lift ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "Safe embedded C programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory-backend-c" = callPackage
    ({ mkDerivation, cmdlib, filepath, ivory, ivory-opts
     , language-c-quote, mainland-pretty, monadLib, srcloc
     }:
     mkDerivation {
       pname = "ivory-backend-c";
       version = "0.1.0.1";
       sha256 = "12rcaanxl86wna05x1gdkpfj90azn1z74cs3kfk9cp5g3g230ii4";
       buildDepends = [
         cmdlib filepath ivory ivory-opts language-c-quote mainland-pretty
         monadLib srcloc
       ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "Ivory C backend";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory-bitdata" = callPackage
    ({ mkDerivation, ivory, ivory-backend-c, monadLib, parsec }:
     mkDerivation {
       pname = "ivory-bitdata";
       version = "0.2.0.0";
       sha256 = "03qqax98qr2qyidc71i81f70lbma1s2q5jikl3m4ni4wyj3gg1m3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ivory ivory-backend-c monadLib parsec ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "Ivory bit-data support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory-examples" = callPackage
    ({ mkDerivation, ivory, ivory-backend-c, ivory-opts
     , ivory-quickcheck, ivory-stdlib, mainland-pretty, monadLib
     , QuickCheck, wl-pprint
     }:
     mkDerivation {
       pname = "ivory-examples";
       version = "0.1.0.2";
       sha256 = "0jjcr72s616y8g4288fz506p1swrv06c2fmds28yd1rqc57g1mrm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ivory ivory-backend-c ivory-opts ivory-quickcheck ivory-stdlib
         mainland-pretty monadLib QuickCheck wl-pprint
       ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "Ivory examples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory-hw" = callPackage
    ({ mkDerivation, filepath, ivory, ivory-backend-c, ivory-bitdata }:
     mkDerivation {
       pname = "ivory-hw";
       version = "0.1.0.0";
       sha256 = "1sa0ayym7ng5q7i356n59p18qqpy9cr2xcsmgh96a7ni4srbrbsy";
       buildDepends = [ filepath ivory ivory-backend-c ivory-bitdata ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "Ivory hardware model (STM32F4)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory-opts" = callPackage
    ({ mkDerivation, dlist, fgl, filepath, ivory, monadLib }:
     mkDerivation {
       pname = "ivory-opts";
       version = "0.1.0.1";
       sha256 = "08ywjwkd37dld6h355r6a36h72s94gai7hs2r4hj5nk5pm7k4s5z";
       buildDepends = [ dlist fgl filepath ivory monadLib ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "Ivory compiler optimizations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory-quickcheck" = callPackage
    ({ mkDerivation, ivory, monadLib, QuickCheck, random }:
     mkDerivation {
       pname = "ivory-quickcheck";
       version = "0.1.0.0";
       sha256 = "0jbfpsmz8kq0h9gg5lm44pcdzhv8kv2rr554m4bic2bny94hnsjd";
       buildDepends = [ ivory monadLib QuickCheck random ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "QuickCheck driver for Ivory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivory-stdlib" = callPackage
    ({ mkDerivation, filepath, ivory }:
     mkDerivation {
       pname = "ivory-stdlib";
       version = "0.1.0.0";
       sha256 = "1a3d9916rgrznr5ci79ki918xg6xxd81krn8irv9wbp8h8ird2xq";
       buildDepends = [ filepath ivory ];
       homepage = "http://smaccmpilot.org/languages/ivory-introduction.html";
       description = "Ivory standard library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ivy-web" = callPackage
    ({ mkDerivation, invertible-syntax, partial-isomorphisms, snap
     , snap-core
     }:
     mkDerivation {
       pname = "ivy-web";
       version = "0.2";
       sha256 = "0m2wd8lh22nqyjiijw9ldl6l17fbkj7b4n0j5ymgrs3yx2mnnv1q";
       buildDepends = [
         invertible-syntax partial-isomorphisms snap snap-core
       ];
       homepage = "https://github.com/lilac/ivy-web/";
       description = "A lightweight web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ix-shapable" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ix-shapable";
       version = "0.1.0";
       sha256 = "08ljlzywnw0h8ijwb6yh4r8l6z7bbknwxv9cjq7lkfx7m2vgy1sh";
       description = "Reshape multi-dimensional arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ixdopp" = callPackage
    ({ mkDerivation, preprocessor-tools, syb }:
     mkDerivation {
       pname = "ixdopp";
       version = "0.1.3";
       sha256 = "1vknwznk42b33q4pmh6z620g761yf3cmsmrmhilgq42i5qhll4d4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ preprocessor-tools syb ];
       homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
       description = "A preprocessor for expanding \"ixdo\" notation for indexed monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ixmonad" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ixmonad";
       version = "0.57";
       sha256 = "1k8qfx9p6jw6gb4jsgq6y2bc6y6ah4h44gdgs0fxkrg371wyym7k";
       description = "Embeds effect systems into Haskell using parameteric effect monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ixset" = callPackage
    ({ mkDerivation, safecopy, syb, syb-with-class }:
     mkDerivation {
       pname = "ixset";
       version = "1.0.6";
       sha256 = "097f9fkm9a2n67bzagr9h2v7acdn8h1ayv9c83n7nv1dh157bpyv";
       buildDepends = [ safecopy syb syb-with-class ];
       homepage = "http://happstack.com";
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ixset-typed" = callPackage
    ({ mkDerivation, deepseq, HUnit, QuickCheck, safecopy, syb, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "ixset-typed";
       version = "0.3";
       sha256 = "0m6k5n755pfkx1grd5rbp1a9vlps6fdm25l91aa0wp5af1sakjmk";
       buildDepends = [ deepseq safecopy syb ];
       testDepends = [
         HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "iyql" = callPackage
    ({ mkDerivation, binary, filepath, haskeline, hoauth, mtl, parsec
     , time, utf8-string, xml
     }:
     mkDerivation {
       pname = "iyql";
       version = "0.0.7";
       sha256 = "1jb97jzm9w8z8jyswbcr3kdraam95by6bc1gpjddwn817dijf0q4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary filepath haskeline hoauth mtl parsec time utf8-string xml
       ];
       description = "CLI (command line interface) to YQL";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "j2hs" = callPackage
    ({ mkDerivation, bimap, filepath, hx, java-bridge
     , java-bridge-extras, java-reflect, mtl, named-records, split
     , strict, strings, syb, transformers
     }:
     mkDerivation {
       pname = "j2hs";
       version = "0.99.1";
       sha256 = "0fls5krx9l0c7g755b4yyksiki45hbb6v7m0y6nsmpd217rggkb2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bimap filepath hx java-bridge java-bridge-extras java-reflect mtl
         named-records split strict strings syb transformers
       ];
       description = "j2hs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jack" = callPackage
    ({ mkDerivation, enumset, event-list, explicit-exception, jack2
     , midi, non-negative, transformers
     }:
     mkDerivation {
       pname = "jack";
       version = "0.7.0.3";
       sha256 = "12ap7xcgzmp5zwmqkwsgxplh5li21m7xngijr4mhnn9y33xc1lrk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         enumset event-list explicit-exception midi non-negative
         transformers
       ];
       pkgconfigDepends = [ jack2 ];
       homepage = "http://www.haskell.org/haskellwiki/JACK";
       description = "Bindings for the JACK Audio Connection Kit";
       license = "GPL";
     }) {};

  "jack-bindings" = callPackage
    ({ mkDerivation, c2hs, jack2, mtl }:
     mkDerivation {
       pname = "jack-bindings";
       version = "0.1.1";
       sha256 = "1gmz2qiz7wzydj0rhswbfhwi0zbdcbps29l1lryzqxm8chfc9mbm";
       buildDepends = [ mtl ];
       buildTools = [ c2hs ];
       pkgconfigDepends = [ jack2 ];
       description = "DEPRECATED Bindings to the JACK Audio Connection Kit";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jackminimix" = callPackage
    ({ mkDerivation, hosc }:
     mkDerivation {
       pname = "jackminimix";
       version = "0.1";
       sha256 = "03ysmgg5f3dsimskqw5vpnrv5jg4gf1gd0khmf0s1ilfm1jc1nfd";
       buildDepends = [ hosc ];
       homepage = "http://www.renickbell.net/doku.php?id=jackminimix";
       description = "control JackMiniMix";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "jacobi-roots" = callPackage
    ({ mkDerivation, binary, doctest, vector }:
     mkDerivation {
       pname = "jacobi-roots";
       version = "0.2.0.4";
       sha256 = "1skpw2jm5g0lylc79n5fk37d3lrvhwb3cmn50wcy4i5nnjvfdijc";
       buildDepends = [ binary vector ];
       testDepends = [ doctest ];
       homepage = "http://github.com/ghorn/jacobi-roots";
       description = "Roots of two shifted Jacobi polynomials (Legendre and Radau) to double precision";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jail" = callPackage
    ({ mkDerivation, monads-fd, transformers }:
     mkDerivation {
       pname = "jail";
       version = "0.0.1.1";
       sha256 = "0wxz3w5r1zc571ibyqskwk27ba1dafwwpr10psbsg44fj7ii3vvz";
       buildDepends = [ monads-fd transformers ];
       description = "Jailed IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jailbreak-cabal" = callPackage
    ({ mkDerivation, Cabal }:
     mkDerivation {
       pname = "jailbreak-cabal";
       version = "1.1";
       sha256 = "0x0dkzfjsgqpjmldgami46ki9k7pgy7ll4slms0kdc89qryzp7dg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal ];
       homepage = "http://github.com/peti/jailbreak-cabal";
       description = "Strip version restrictions from build dependencies in Cabal files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jalaali" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "jalaali";
       version = "0.2.0";
       sha256 = "025ryrz87bii3401nq0bhyigzrs6lkippds6r4h0qzpq4pg8l7m0";
       homepage = "https://github.com/jalaali/jalaali-hs";
       description = "Convert Jalaali and Gregorian calendar systems to each other";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jalla" = callPackage
    ({ mkDerivation, c2hs, cblas, convertible, f77blas, HUnit, lapack
     , lapacke, mtl, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "jalla";
       version = "0.1.0.1";
       sha256 = "18nxlfr59ka4z45a5nn47lyqsbzfjsfgg1wm5irmncj1jmasjpq5";
       buildDepends = [ convertible mtl QuickCheck random ];
       testDepends = [
         HUnit QuickCheck random test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       buildTools = [ c2hs ];
       extraLibraries = [ cblas f77blas lapack lapacke ];
       homepage = "https://github.com/cgo/jalla";
       description = "Higher level functions for linear algebra. Wraps BLAS and LAPACKE.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jammittools" = callPackage
    ({ mkDerivation, boxes, filepath, property-list, temporary
     , transformers
     }:
     mkDerivation {
       pname = "jammittools";
       version = "0.3";
       sha256 = "0qwnqnz3s4bmgmhmy05x58znxz7vdr1bjbkd5lb6pzbi11grjipg";
       editedCabalFile = "1l0kq0admi17pmyq6d9rq2vyp8kzlr0f9pga3xf5lni7daz0lhmh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         boxes filepath property-list temporary transformers
       ];
       homepage = "https://github.com/mtolly/jammittools";
       description = "Export sheet music and audio from Windows/Mac app Jammit";
       license = "GPL";
     }) {};

  "jarfind" = callPackage
    ({ mkDerivation, binary, regex-tdfa, zip-archive }:
     mkDerivation {
       pname = "jarfind";
       version = "0.1.0.3";
       sha256 = "0cfxq8k0k8r3wf4siypb78rqx5c9m2cm899bpa0zz591hc0p6k0w";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary regex-tdfa zip-archive ];
       description = "Tool for searching java classes, members and fields in classfiles and JAR archives";
       license = "GPL";
     }) {};

  "java-bridge" = callPackage
    ({ mkDerivation, bimap, cpphs, filepath, hinduce-missingh, hint
     , mtl, multimap, named-records, names, split, strings, syb
     , transformers
     }:
     mkDerivation {
       pname = "java-bridge";
       version = "0.20130606.3";
       sha256 = "16nm5jn5y3rs3g1m524gn8xqxw13973cmpllmylh6qdpqcz47457";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bimap cpphs filepath hinduce-missingh hint mtl multimap
         named-records names split strings syb transformers
       ];
       description = "Bindings to the JNI and a high level interface generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "java-bridge-extras" = callPackage
    ({ mkDerivation, java-bridge, transformers }:
     mkDerivation {
       pname = "java-bridge-extras";
       version = "0.99";
       sha256 = "0wjxm0h5xlsab7iphcabb66c7gjxy7hyb502inlj5zxq1ic5ghzv";
       buildDepends = [ java-bridge transformers ];
       description = "Utilities for working with the java-bridge package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "java-character" = callPackage
    ({ mkDerivation, diet }:
     mkDerivation {
       pname = "java-character";
       version = "0.0.4";
       sha256 = "1ms8m95mara3pp7qdg8jn2ajbq3zj8pnbs1b9jhpxbdkl5220768";
       buildDepends = [ diet ];
       homepage = "https://github.com/tonymorris/java-character";
       description = "Functions to simulate Java's Character class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "java-reflect" = callPackage
    ({ mkDerivation, hx, java-bridge }:
     mkDerivation {
       pname = "java-reflect";
       version = "0.99";
       sha256 = "1vdfq3c8chqhss6jiy139yrm45mij4kjdwxf2wrsfm4064j0n3wc";
       buildDepends = [ hx java-bridge ];
       description = "Tools for reflecting on Java classes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "javasf" = callPackage
    ({ mkDerivation, binary, doctest, filepath, language-java-classfile
     , QuickCheck
     }:
     mkDerivation {
       pname = "javasf";
       version = "0.1.0";
       sha256 = "0k8si8rdhplfhfp5yq7rlkifj80401qyanfhv101h8amxg20m97w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary language-java-classfile ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/javasf";
       description = "A utility to print the SourceFile attribute of one or more Java class files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "javav" = callPackage
    ({ mkDerivation, doctest, filepath, QuickCheck }:
     mkDerivation {
       pname = "javav";
       version = "0.1.1";
       sha256 = "1kzhp9gim9jl78jw8gm9vzxciiz6m04pjamgx1pqbhkji3lkw55d";
       isLibrary = false;
       isExecutable = true;
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/javav";
       description = "A utility to print the target version of Java class files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jcdecaux-vls" = callPackage
    ({ mkDerivation, aeson, http-conduit, text, transformers }:
     mkDerivation {
       pname = "jcdecaux-vls";
       version = "0.1.0";
       sha256 = "11army6p19xmdils32nxf5zbjh4fcsp075x7h3v2hbc08n6fkj8s";
       buildDepends = [ aeson http-conduit text transformers ];
       homepage = "http://github.com/Herzult/jcdecaux-vls";
       description = "JCDecaux self-service bicycles API client";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jdi" = callPackage
    ({ mkDerivation, binary, mtl, network, transformers }:
     mkDerivation {
       pname = "jdi";
       version = "0.0.3";
       sha256 = "1jznizbnyg37lir155sq84dbsqcaavz061hj2a703w9x28s6pcnb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary mtl network transformers ];
       homepage = "https://github.com/VictorDenisov/jdi";
       description = "Implementation of Java Debug Interface";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "jespresso" = callPackage
    ({ mkDerivation, arrows, cmdargs, data-default-class, filepath
     , HTTP, http-encodings, hxt, hxt-tagsoup, language-ecmascript
     , network, random, tasty, tasty-golden, transformers
     }:
     mkDerivation {
       pname = "jespresso";
       version = "1.0";
       sha256 = "048n15lranfmi51p2nkx8rw7h76yhqmlcdgd6v1fswgdaipv0hya";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         arrows cmdargs data-default-class HTTP http-encodings hxt
         hxt-tagsoup language-ecmascript network random
       ];
       testDepends = [
         arrows filepath hxt tasty tasty-golden transformers
       ];
       homepage = "http://github.com/achudnov/jespresso";
       description = "Extract all JavaScript from an HTML page and consolidate it in one script";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jmacro" = callPackage
    ({ mkDerivation, aeson, haskell-src-exts, haskell-src-meta, mtl
     , parseargs, parsec, regex-posix, safe, syb, text
     , unordered-containers, vector, wl-pprint-text
     }:
     mkDerivation {
       pname = "jmacro";
       version = "0.6.9";
       sha256 = "1prplflikryw7scz75rbijn4dl1gdi6589yq5902n26xpaigqsp6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson haskell-src-exts haskell-src-meta mtl parseargs parsec
         regex-posix safe syb text unordered-containers vector
         wl-pprint-text
       ];
       description = "QuasiQuotation library for programmatic generation of Javascript code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jmacro-rpc" = callPackage
    ({ mkDerivation, aeson, attoparsec, blaze-html, contravariant
     , jmacro, mtl, scientific, split, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "jmacro-rpc";
       version = "0.3";
       sha256 = "1fkcky2f51764xcbbwnxpxyhk2mmnp364hf8njfcjsijanv938zw";
       buildDepends = [
         aeson attoparsec blaze-html contravariant jmacro mtl scientific
         split text unordered-containers vector
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro";
       description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jmacro-rpc-happstack" = callPackage
    ({ mkDerivation, aeson, blaze-html, happstack-server, jmacro
     , jmacro-rpc, mtl
     }:
     mkDerivation {
       pname = "jmacro-rpc-happstack";
       version = "0.3";
       sha256 = "0z24iqq0nmvm4x4fz4vl1rsccqnaynhmza502im967y7lials9wa";
       buildDepends = [
         aeson blaze-html happstack-server jmacro jmacro-rpc mtl
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Happstack backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jmacro-rpc-snap" = callPackage
    ({ mkDerivation, aeson, jmacro, jmacro-rpc, mtl, snap-core }:
     mkDerivation {
       pname = "jmacro-rpc-snap";
       version = "0.3";
       sha256 = "1syzx2lw4r8knsqhsvilp04wb8a718379cmn0nhjqlwhpaja9bj8";
       buildDepends = [ aeson jmacro jmacro-rpc mtl snap-core ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Snap backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jobqueue" = callPackage
    ({ mkDerivation, async, attoparsec, data-default, fast-logger, HDBC
     , HDBC-sqlite3, hslogger, hspec, hzk, lifted-base, monad-control
     , monad-logger, mtl, network, QuickCheck, regex-posix, split, stm
     , text, text-format, time, transformers-base
     }:
     mkDerivation {
       pname = "jobqueue";
       version = "0.1.4";
       sha256 = "17l1hcpc65jb0w0fw238hmm7ziy6qx0khi32zm5214pj71l09ldj";
       buildDepends = [
         attoparsec data-default fast-logger HDBC HDBC-sqlite3 hslogger hzk
         lifted-base monad-control monad-logger mtl network regex-posix
         split stm text text-format time transformers-base
       ];
       testDepends = [ async data-default hspec network QuickCheck stm ];
       homepage = "https://github.com/gree/haskell-jobqueue";
       description = "A job queue library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "join" = callPackage
    ({ mkDerivation, multisetrewrite, stm }:
     mkDerivation {
       pname = "join";
       version = "0.4";
       sha256 = "0bx9cvdhhw7z30qgxwpl0j23z18sx7xyin2y7bwxvg5ga737j8qx";
       buildDepends = [ multisetrewrite stm ];
       homepage = "http://sulzmann.blogspot.com/2008/12/parallel-join-patterns-with-guards-and.html";
       description = "Parallel Join Patterns with Guards and Propagation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "joinlist" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "joinlist";
       version = "0.3.0";
       sha256 = "0hjlyyylbh471696v9b1jckm7d4gfp1ka978sr1j0005d03gwv35";
       homepage = "http://code.google.com/p/copperbox/";
       description = "Join list - symmetric list type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jonathanscard" = callPackage
    ({ mkDerivation, HTTP, json, mtl, network, time }:
     mkDerivation {
       pname = "jonathanscard";
       version = "0.1.1";
       sha256 = "0zwd5mdwamyl6xlflhj0yvp9k5yfrxggvv49d3hriz9z15f5v5g8";
       buildDepends = [ HTTP json mtl network time ];
       homepage = "http://rawr.mschade.me/jonathanscard/";
       description = "An implementation of the Jonathan's Card API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jort" = callPackage
    ({ mkDerivation, gtk }:
     mkDerivation {
       pname = "jort";
       version = "1.0.0";
       sha256 = "1c1nr8pq4vyn4mvyqms2mq1sm42qgr2mrznn5rsv34rd1f75b2d3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk ];
       description = "JP's own ray tracer";
       license = "unknown";
     }) {};

  "jose" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, bifunctors
     , byteable, certificate, crypto-pubkey, crypto-pubkey-types
     , crypto-random, cryptohash, data-default-class, hspec, lens
     , network-uri, semigroups, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jose";
       version = "0.2.38.1";
       sha256 = "0nna2mrpmcs5dbcc2g8ml7ax8mr4xvg3bk5kcxhlvp1cgr5f26zx";
       buildDepends = [
         aeson attoparsec base64-bytestring bifunctors byteable certificate
         crypto-pubkey crypto-pubkey-types crypto-random cryptohash
         data-default-class lens network-uri semigroups text time
         unordered-containers vector
       ];
       testDepends = [
         aeson attoparsec base64-bytestring bifunctors byteable certificate
         crypto-pubkey crypto-pubkey-types crypto-random cryptohash
         data-default-class hspec lens network-uri semigroups text time
         unordered-containers vector
       ];
       homepage = "https://github.com/frasertweedale/hs-jose";
       description = "Javascript Object Signing and Encryption and JSON Web Token library";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "jose-jwt" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, byteable, cereal
     , cipher-aes, cprng-aes, crypto-cipher-types, crypto-numbers
     , crypto-pubkey, crypto-random, cryptohash, doctest, either, errors
     , hspec, HUnit, mtl, QuickCheck, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "jose-jwt";
       version = "0.2";
       sha256 = "1143sbniyzcpgxhjrb5nmmxynb9l446r5dyiyl5hnqlim129qwil";
       buildDepends = [
         aeson base64-bytestring byteable cereal cipher-aes
         crypto-cipher-types crypto-numbers crypto-pubkey crypto-random
         cryptohash errors mtl text time unordered-containers vector
       ];
       testDepends = [
         aeson base64-bytestring cipher-aes cprng-aes crypto-cipher-types
         crypto-pubkey crypto-random cryptohash doctest either hspec HUnit
         mtl QuickCheck text
       ];
       homepage = "http://github.com/tekul/jose-jwt";
       description = "JSON Object Signing and Encryption Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jpeg" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "jpeg";
       version = "0.0.1.1";
       sha256 = "1hnfapr21zpfyiywa4zzmwa518jzg73dnmaakrbvvpcmr4fvh9qx";
       buildDepends = [ mtl ];
       description = "A library for decoding JPEG files written in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "js-flot" = callPackage
    ({ mkDerivation, HTTP }:
     mkDerivation {
       pname = "js-flot";
       version = "0.8.3";
       sha256 = "0yjyzqh3qzhy5h3nql1fckw0gcfb0f4wj9pm85nafpfqp2kg58hv";
       testDepends = [ HTTP ];
       homepage = "https://github.com/ndmitchell/js-flot#readme";
       description = "Obtain minified flot code";
       license = stdenv.lib.licenses.mit;
     }) {};

  "js-good-parts" = callPackage
    ({ mkDerivation, wl-pprint }:
     mkDerivation {
       pname = "js-good-parts";
       version = "0.0.7";
       sha256 = "0i3r3xl8hi2a3d6hrj77vbfi54bkq4pidrjcz13vz4az9dvz6k75";
       buildDepends = [ wl-pprint ];
       homepage = "https://github.com/sseefried/js-good-parts.git";
       description = "Javascript: The Good Parts -- AST & Pretty Printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "js-jquery" = callPackage
    ({ mkDerivation, HTTP }:
     mkDerivation {
       pname = "js-jquery";
       version = "1.11.1";
       sha256 = "0k4hrpxsc48nanr2zw6jcirirsarlshycx7d5hzqqv9jfhy1i88d";
       testDepends = [ HTTP ];
       homepage = "https://github.com/ndmitchell/js-jquery#readme";
       description = "Obtain minified jQuery code";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jsaddle" = callPackage
    ({ mkDerivation, ghcjs-base, hslogger, lens, text, transformers }:
     mkDerivation {
       pname = "jsaddle";
       version = "0.2.0.2";
       sha256 = "14lxxcl45bzj6g44vr0iq8ndjkxbv4sismamyafymb8hbb24ida3";
       buildDepends = [ ghcjs-base lens text transformers ];
       testDepends = [ ghcjs-base hslogger lens text transformers ];
       description = "High level interface for webkit-javascriptcore";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jsaddle-hello" = callPackage
    ({ mkDerivation, ghcjs-dom, jsaddle, lens }:
     mkDerivation {
       pname = "jsaddle-hello";
       version = "1.0.0.0";
       sha256 = "07kgjp35vbwljhyz9i49fbvbj4d05gn8swzynb0hd02bbsl5i0dp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ghcjs-dom jsaddle lens ];
       homepage = "https://github.com/ghcjs/jsaddle-hello";
       description = "JSaddle Hello World, an example package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jsc" = callPackage
    ({ mkDerivation, glib, gtk3, hslogger, jmacro, lens, text
     , transformers, webkitgtk3, webkitgtk3-javascriptcore
     }:
     mkDerivation {
       pname = "jsc";
       version = "0.1.1.1";
       sha256 = "18mvpncvsfv4gv7lx00g8aixjmhzp0yklxaajx45v2hsx0azn8zc";
       buildDepends = [
         jmacro lens text transformers webkitgtk3 webkitgtk3-javascriptcore
       ];
       testDepends = [
         glib gtk3 hslogger jmacro lens text transformers webkitgtk3
         webkitgtk3-javascriptcore
       ];
       description = "High level interface for webkit-javascriptcore";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jsmw" = callPackage
    ({ mkDerivation, DOM, mtl, WebBits }:
     mkDerivation {
       pname = "jsmw";
       version = "0.1";
       sha256 = "1r36w2h5007qln56gnyyd7w6bcqiymn1jw287z0waf4fhpy02ygq";
       buildDepends = [ DOM mtl WebBits ];
       description = "Javascript Monadic Writer base package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json" = callPackage
    ({ mkDerivation, mtl, parsec, syb, text }:
     mkDerivation {
       pname = "json";
       version = "0.9";
       sha256 = "1r37hhhhc97sxqrcijss80c0380f36bh6f2y4navwih7r3a2ci8j";
       buildDepends = [ mtl parsec syb text ];
       description = "Support for serialising Haskell to and from JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-assertions" = callPackage
    ({ mkDerivation, aeson, indexed, indexed-free, lens, lens-aeson
     , text
     }:
     mkDerivation {
       pname = "json-assertions";
       version = "1.0.5";
       sha256 = "1vf6y8xbl48giq1p6d62294rfvfdw62l1q4dspy990ii0v5gkyck";
       buildDepends = [ aeson indexed indexed-free lens lens-aeson text ];
       homepage = "http://github.com/ocharles/json-assertions.git";
       description = "Test that your (Aeson) JSON encoding matches your expectations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-autotype" = callPackage
    ({ mkDerivation, aeson, filepath, GenericPretty, hashable, hflags
     , lens, MissingH, mtl, scientific, text, uniplate
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-autotype";
       version = "0.2.5.1";
       sha256 = "1l8xsj7lwkrpa9c637ml0n6rjn4i36ngab8lj4s4z2dvncpywi2d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson filepath GenericPretty hashable hflags lens MissingH mtl
         scientific text uniplate unordered-containers vector
       ];
       homepage = "https://github.com/mgajda/json-autotype";
       description = "Automatic type declaration for JSON input data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-b" = callPackage
    ({ mkDerivation, bytestring-nums, bytestring-trie
     , bytestringparser-temporary, utf8-string
     }:
     mkDerivation {
       pname = "json-b";
       version = "0.0.4";
       sha256 = "0wcvaswgffzvhfq7v5lqxp6xhxajaabbxkqpqxp5vwcv5slkiags";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bytestring-nums bytestring-trie bytestringparser-temporary
         utf8-string
       ];
       homepage = "http://github.com/jsnx/JSONb/";
       description = "JSON parser that uses byte strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-builder" = callPackage
    ({ mkDerivation, blaze-builder, blaze-textual, text
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "json-builder";
       version = "0.3";
       sha256 = "0k8b93bqi68c7nwq09cws8kfm84kd4k5lpy4z9ifks1jaiyj3vxm";
       buildDepends = [
         blaze-builder blaze-textual text unordered-containers utf8-string
         vector
       ];
       homepage = "http://github.com/lpsmith/json-builder";
       description = "Data structure agnostic JSON serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-enumerator" = callPackage
    ({ mkDerivation, blaze-builder, blaze-builder-enumerator
     , enumerator, json-types, text, transformers
     }:
     mkDerivation {
       pname = "json-enumerator";
       version = "0.0.1.2";
       sha256 = "08gwrm15pvvhhrkrncy6wr4fi5v55fdhc8byfrw5zd62hmx8xm9d";
       buildDepends = [
         blaze-builder blaze-builder-enumerator enumerator json-types text
         transformers
       ];
       homepage = "http://github.com/snoyberg/json-enumerator";
       description = "Pure-Haskell utilities for dealing with JSON with the enumerator package. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-extra" = callPackage
    ({ mkDerivation, aeson, data-default, unordered-containers, yaml }:
     mkDerivation {
       pname = "json-extra";
       version = "0.1.0.1";
       sha256 = "1wqn68brkjmix7xidcb7170ydpxwq1p48qqmm4w9ak0zkvm70fks";
       editedCabalFile = "0h87dgff9wf775vm643hs3fchb52x84ip3p1zy3q0pfb8wykq4bn";
       buildDepends = [ aeson data-default unordered-containers yaml ];
       homepage = "https://bitbucket.org/tdammers/json-extra";
       description = "Utility functions to extend Aeson";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "json-fu" = callPackage
    ({ mkDerivation, aeson, attoparsec, hashable, hspec, mtl, syb, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-fu";
       version = "0.1.1";
       sha256 = "098ps56igr12wm9hai3agh2hdmvd00rzpdd5lw0ffjivjxxfh829";
       buildDepends = [
         aeson attoparsec hashable mtl syb text time unordered-containers
         vector
       ];
       testDepends = [
         aeson attoparsec hashable hspec mtl syb text time
         unordered-containers vector
       ];
       description = "Generic JSON serialization / deserialization";
       license = stdenv.lib.licenses.mit;
     }) {};

  "json-python" = callPackage
    ({ mkDerivation, aeson, pureMD5, python }:
     mkDerivation {
       pname = "json-python";
       version = "0.4.0.1";
       sha256 = "0ga3clvmq20xlyx47bril651xg8rhq77s7nj6r1v836m3xwcb0y9";
       buildDepends = [ aeson pureMD5 ];
       pkgconfigDepends = [ python ];
       homepage = "http://stewart.guru";
       description = "Call python inline from haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "json-qq" = callPackage
    ({ mkDerivation, haskell-src-meta, parsec }:
     mkDerivation {
       pname = "json-qq";
       version = "0.4.1";
       sha256 = "0rpfv0i4jhjkq39xcs3b89ms0w4il4l7f385msqj93qzj76is7m6";
       buildDepends = [ haskell-src-meta parsec ];
       homepage = "http://github.com/finnsson/json-qq";
       description = "Json Quasiquatation library for Haskell";
       license = "unknown";
     }) {};

  "json-rpc" = callPackage
    ({ mkDerivation, aeson, async, conduit, conduit-extra, deepseq
     , hashable, mtl, QuickCheck, stm, stm-conduit, test-framework
     , test-framework-quickcheck2, text, unordered-containers
     }:
     mkDerivation {
       pname = "json-rpc";
       version = "0.2.1.1";
       sha256 = "0h6dkb1rgd6qxzcxvqvgwilmibkdbqpjvflijwf54fx2z687fjld";
       buildDepends = [
         aeson async conduit conduit-extra deepseq hashable mtl stm
         stm-conduit text unordered-containers
       ];
       testDepends = [
         aeson async conduit conduit-extra deepseq hashable mtl QuickCheck
         stm stm-conduit test-framework test-framework-quickcheck2 text
         unordered-containers
       ];
       homepage = "https://github.com/xenog/json-rpc";
       description = "Fully-featured JSON-RPC 2.0 library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "json-rpc-server" = callPackage
    ({ mkDerivation, aeson, HUnit, mtl, test-framework
     , test-framework-hunit, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-rpc-server";
       version = "0.1.3.0";
       sha256 = "11mcc9n902nzd4a8vpdqnpmplwdf9ypq4a7nhp6pc54d51xrkfm6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson mtl text unordered-containers vector ];
       testDepends = [
         aeson HUnit mtl test-framework test-framework-hunit text
         unordered-containers vector
       ];
       description = "JSON RPC 2.0 on the server side.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "json-schema" = callPackage
    ({ mkDerivation, aeson, aeson-utils, attoparsec, generic-aeson
     , generic-deriving, mtl, scientific, tagged, tasty, tasty-hunit
     , tasty-th, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-schema";
       version = "0.7.3.0";
       sha256 = "0jdhmzg1is8dnyz46r6w616xq0w1lypc9xz1c2mcimr9xb9r70zw";
       buildDepends = [
         aeson generic-aeson generic-deriving mtl scientific tagged text
         time unordered-containers vector
       ];
       testDepends = [
         aeson aeson-utils attoparsec generic-aeson tagged tasty tasty-hunit
         tasty-th text vector
       ];
       description = "Types and type classes for defining JSON schemas";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-sop" = callPackage
    ({ mkDerivation, aeson, generics-sop, lens-sop, tagged, text, time
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-sop";
       version = "0.1.0.3";
       sha256 = "1i23k96ncy0qb6fc3wb851zqck4qcf18vm569i0qinbxd8w9bgaq";
       buildDepends = [
         aeson generics-sop lens-sop tagged text time transformers
         unordered-containers vector
       ];
       description = "Generics JSON (de)serialization using generics-sop";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-tools" = callPackage
    ({ mkDerivation, aeson, attoparsec, tar, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "json-tools";
       version = "0.5.0";
       sha256 = "13iyhsq4010ypgmlsdkdk93w8dhg6v0cllsf0avfaxkdva9lrqkf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec tar text unordered-containers vector
       ];
       description = "A collection of JSON tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json-types" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "json-types";
       version = "0.1";
       sha256 = "088if9qv0didjyb6y1583viihjgc4nwr61qfjqdg9rzc2ya6vqdn";
       buildDepends = [ text ];
       description = "Basic types for representing JSON";
       license = stdenv.lib.licenses.mit;
     }) {};

  "json2" = callPackage
    ({ mkDerivation, blaze-builder, json2-types, mtl, parsec, time
     , utf8-string
     }:
     mkDerivation {
       pname = "json2";
       version = "0.8.3";
       sha256 = "1w7x67cykbnr2h8jjjqd5whf7pq7vwk7r9g1q1i9g25b9b49i7r8";
       buildDepends = [
         blaze-builder json2-types mtl parsec time utf8-string
       ];
       description = "Library provides support for JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json2-hdbc" = callPackage
    ({ mkDerivation, HDBC, json2, json2-types, time, utf8-string }:
     mkDerivation {
       pname = "json2-hdbc";
       version = "0.5.1";
       sha256 = "1flbh68ymm39ccw5h9fiwy35qarn8zkxljmnjgg6fd39j8zbc3dj";
       buildDepends = [ HDBC json2 json2-types time utf8-string ];
       description = "Support JSON for SQL Database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json2-types" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "json2-types";
       version = "0.1";
       sha256 = "0gr5mfi68hvk8wajw6wbimmwxd0rgjwqrg3mjyfppkr1nwkyfzpr";
       description = "Defined JSON data types and function for renders JSON to string";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "json2yaml" = callPackage
    ({ mkDerivation, aeson, yaml }:
     mkDerivation {
       pname = "json2yaml";
       version = "0.3.2.3";
       sha256 = "1ip9qgrzr59v3zxcj6l1dys0zbfj9s8fgdj4lv1grh7wbzdfz9dn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson yaml ];
       homepage = "http://github.com/snoyberg/json2yaml/tree/master";
       description = "Utility to convert a file from JSON to YAML format. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jsonresume" = callPackage
    ({ mkDerivation, aeson, text, time, unordered-containers }:
     mkDerivation {
       pname = "jsonresume";
       version = "0.1.0.1";
       sha256 = "14kv1cbjh1m9ri0vjj015hx6bx6l7jv71gpfa6n0fg21hh5fl7a4";
       buildDepends = [ aeson text time unordered-containers ];
       homepage = "https://github.com/dpwright/jsonresume.hs";
       description = "Parser and datatypes for the JSON Resume format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jsonrpc-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, conduit, conduit-extra, mtl
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "jsonrpc-conduit";
       version = "0.2.6";
       sha256 = "08mjwic7qbp241ydxiy5lm782igwd4ba27sii3csv4wdgdxgd3vy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec conduit conduit-extra mtl text transformers
         unordered-containers
       ];
       description = "JSON-RPC 2.0 server over a Conduit.";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "jsonsql" = callPackage
    ({ mkDerivation, aeson, attoparsec, HUnit, optparse-applicative
     , scientific, string-qq, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jsonsql";
       version = "0.1.0.1";
       sha256 = "1mr4xdwspza87kvaq4337k6hwzvrjxsr5bybdp1sv3x3fdg481ir";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec HUnit optparse-applicative scientific string-qq
         text unordered-containers vector
       ];
       homepage = "https://github.com/danchoi/jsonsql";
       description = "Interpolate JSON object values into SQL strings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jsontsv" = callPackage
    ({ mkDerivation, aeson, attoparsec, csv, optparse-applicative
     , scientific, string-qq, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jsontsv";
       version = "0.1.4.2";
       sha256 = "1m4k5cri4pr0ky4nsnfifyv80fsjmaxzcd5rf5zcfhnfkvvxxjmb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec csv optparse-applicative scientific string-qq text
         unordered-containers vector
       ];
       homepage = "https://github.com/danchoi/jsontsv";
       description = "JSON to TSV transformer";
       license = stdenv.lib.licenses.mit;
     }) {};

  "jspath" = callPackage
    ({ mkDerivation, bytestring-trie, JSONb, utf8-string }:
     mkDerivation {
       pname = "jspath";
       version = "0.1";
       sha256 = "072q6mipfaqf33w806chf2226zpay124lgph0wlgfdbhfd5118n7";
       buildDepends = [ bytestring-trie JSONb utf8-string ];
       description = "Extract substructures from JSON by following a path";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "judy" = callPackage
    ({ mkDerivation, hspec, Judy, QuickCheck }:
     mkDerivation {
       pname = "judy";
       version = "0.2.3";
       sha256 = "1acw072v0lj2jkc6lffcigl1miy1r4wv52qxk6qql0wdg5ydjcjh";
       testDepends = [ hspec QuickCheck ];
       extraLibraries = [ Judy ];
       homepage = "http://github.com/mwotton/judy";
       description = "Fast, scalable, mutable dynamic arrays, maps and hashes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jukebox" = callPackage
    ({ mkDerivation, alex, binary, filepath, hashable, minisat, mtl
     , unordered-containers
     }:
     mkDerivation {
       pname = "jukebox";
       version = "0.1.2";
       sha256 = "01gdb7wi65idws4q2bbxzna07s3y0wd4p7npawm7rdiyfp3pg92k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary filepath hashable minisat mtl unordered-containers
       ];
       buildTools = [ alex ];
       description = "A first-order reasoning toolbox";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jvm-parser" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, fgl, fingertree, zlib
     }:
     mkDerivation {
       pname = "jvm-parser";
       version = "0.2.1";
       sha256 = "0rhixf1syrnhql3aqlvl9hcylaiyhca1yvismdzalkhbz0qdgvir";
       buildDepends = [ binary data-binary-ieee754 fgl fingertree zlib ];
       description = "A parser for JVM bytecode files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "jwt" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, cryptohash, data-default
     , http-types, HUnit, network, network-uri, QuickCheck, scientific
     , semigroups, tasty, tasty-hunit, tasty-quickcheck, tasty-th, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jwt";
       version = "0.5.0";
       sha256 = "0445biw5rj4plbz4nbmzrn446dfsjnggzrrcn1m292g3dqp6gzgh";
       buildDepends = [
         aeson base64-bytestring cryptohash data-default http-types network
         network-uri scientific semigroups text time unordered-containers
         vector
       ];
       testDepends = [
         aeson base64-bytestring cryptohash data-default http-types HUnit
         network network-uri QuickCheck scientific semigroups tasty
         tasty-hunit tasty-quickcheck tasty-th text time
         unordered-containers vector
       ];
       homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
       description = "JSON Web Token (JWT) decoding and encoding";
       license = stdenv.lib.licenses.mit;
     }) {};

  "kan-extensions" = callPackage
    ({ mkDerivation, adjunctions, comonad, contravariant, distributive
     , free, mtl, pointed, semigroupoids, tagged, transformers
     }:
     mkDerivation {
       pname = "kan-extensions";
       version = "4.1.1";
       sha256 = "0g7z37c2jvhvq08ynnd5z2spp7w56vqhpg5biscj62rw7fzssnar";
       buildDepends = [
         adjunctions comonad contravariant distributive free mtl pointed
         semigroupoids tagged transformers
       ];
       homepage = "http://github.com/ekmett/kan-extensions/";
       description = "Kan extensions, Kan lifts, various forms of the Yoneda lemma, and (co)density (co)monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kangaroo" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "kangaroo";
       version = "0.4.0";
       sha256 = "1l7b71dhrxd2g3nbqg3h0n5dvgxr23av1cy1f0mvw347y91rx36x";
       homepage = "http://code.google.com/p/copperbox/";
       description = "Binary parsing with random access";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kansas-comet" = callPackage
    ({ mkDerivation, aeson, data-default, scotty, stm, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "kansas-comet";
       version = "0.3.1";
       sha256 = "0xbapi4clmkighxh0jb12zpzgrz9sqyfpwdkvrj6cdq6i6a22qx1";
       buildDepends = [
         aeson data-default scotty stm text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/ku-fpg/kansas-comet/";
       description = "A JavaScript push mechanism based on the comet idiom";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kansas-lava" = callPackage
    ({ mkDerivation, cmdargs, data-default, data-reify, dotgen
     , filepath, netlist, netlist-to-vhdl, random, sized-types, strict
     }:
     mkDerivation {
       pname = "kansas-lava";
       version = "0.2.4";
       sha256 = "0rsjlj558k57r1sfm12n9r9wn8r615bbrwgjhal07qhvy4qip4pg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs data-default data-reify dotgen filepath netlist
         netlist-to-vhdl random sized-types strict
       ];
       homepage = "http://ittc.ku.edu/csdl/fpg/Tools/KansasLava";
       description = "Kansas Lava is a hardware simulator and VHDL generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kansas-lava-cores" = callPackage
    ({ mkDerivation, ansi-terminal, data-default, kansas-lava, network
     , sized-types
     }:
     mkDerivation {
       pname = "kansas-lava-cores";
       version = "0.1.2";
       sha256 = "0bgwm0w74l3p0w9xgs3qsmflk3hk923hqp46bh6j9czfjs7my389";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal data-default kansas-lava network sized-types
       ];
       homepage = "http://ittc.ku.edu/csdl/fpg/Tools/KansasLava";
       description = "FPGA Cores Written in Kansas Lava";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kansas-lava-papilio" = callPackage
    ({ mkDerivation, ansi-terminal, data-default, filepath, kansas-lava
     , kansas-lava-cores, netlist, network, sized-types
     }:
     mkDerivation {
       pname = "kansas-lava-papilio";
       version = "0.1.0";
       sha256 = "0ikc6yfcv2fjx0szfmp92nrdhdfdivlc14a7w214i0q3vrncjkzm";
       buildDepends = [
         ansi-terminal data-default filepath kansas-lava kansas-lava-cores
         netlist network sized-types
       ];
       description = "Kansas Lava support files for the Papilio FPGA board";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kansas-lava-shake" = callPackage
    ({ mkDerivation, filepath, hastache, kansas-lava, shake, text }:
     mkDerivation {
       pname = "kansas-lava-shake";
       version = "0.1.1";
       sha256 = "0iqmz7kgnfpvmdjn29nnr1r0xwhb0j0pfmnclwlszhjsxcvsy627";
       buildDepends = [ filepath hastache kansas-lava shake text ];
       description = "Shake rules for building Kansas Lava projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "karakuri" = callPackage
    ({ mkDerivation, comonad, minioperational, mtl, transformers }:
     mkDerivation {
       pname = "karakuri";
       version = "0.1.1";
       sha256 = "0ys4kx4pq9xrb4gjg6syyim8mpfy3yzyyiw2mdc4vh9hmsny373c";
       buildDepends = [ comonad minioperational mtl transformers ];
       homepage = "https://github.com/fumieval/karakuri";
       description = "Good stateful automata";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "karver" = callPackage
    ({ mkDerivation, aeson, attoparsec, hspec, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "karver";
       version = "0.1.1";
       sha256 = "1n6q13i6j68siq36bli0hnf1ssny4ax71ai48da1x3z6996hbg06";
       buildDepends = [
         aeson attoparsec text unordered-containers vector
       ];
       testDepends = [
         aeson attoparsec hspec text unordered-containers vector
       ];
       description = "A simple template engine, inspired by jinja2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "katt" = callPackage
    ({ mkDerivation, aeson, ConfigFile, errors, filepath, lens, mtl
     , parsec, text, url, wreq, zip-archive
     }:
     mkDerivation {
       pname = "katt";
       version = "0.2.0.3";
       sha256 = "1hvi23r9wgz77w6wl9nhpvkcbajm5m8kmy87pjmfgifj60d9cmhg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ConfigFile errors filepath lens mtl parsec text url wreq
         zip-archive
       ];
       testDepends = [ mtl ];
       homepage = "https://github.com/davnils/katt";
       description = "Client for the Kattis judge system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kbq-gu" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "kbq-gu";
       version = "0.2";
       sha256 = "1skz1yllkwbpx4wd8w8q4zmqd3f62baaj5pja6dpqr2xviiv0j6g";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://tcana.info/rpoku";
       description = "Rpoku spoken word programming language";
       license = "GPL";
     }) {};

  "kd-tree" = callPackage
    ({ mkDerivation, lens, linear, vector, vector-algorithms }:
     mkDerivation {
       pname = "kd-tree";
       version = "0.1.0";
       sha256 = "0j9wlap9gx2szb5saa4pxm7mp2w132ki1p6mlcv0s0wy9rv6dnm7";
       buildDepends = [ lens linear vector vector-algorithms ];
       homepage = "http://github.com/bgamari/kd-tree";
       description = "A simple k-d tree implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kdesrc-build-extra" = callPackage
    ({ mkDerivation, ansi-terminal, cmdargs, MissingH, parsec }:
     mkDerivation {
       pname = "kdesrc-build-extra";
       version = "0.1.0.2";
       sha256 = "1n19jika26wgv7nhbbwnjjhmcbgqqag06k467r6q0s16ilp1p5nr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ansi-terminal cmdargs MissingH parsec ];
       description = "Build profiles for kdesrc-build";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "kdt" = callPackage
    ({ mkDerivation, deepseq, deepseq-generics, pqueue, QuickCheck }:
     mkDerivation {
       pname = "kdt";
       version = "0.2.2";
       sha256 = "1kj914xya5msw9hb2lqa36jf68pna8dfq21jbylq2m68k0ydcivi";
       buildDepends = [ deepseq deepseq-generics pqueue ];
       testDepends = [ deepseq deepseq-generics QuickCheck ];
       homepage = "https://github.com/giogadi/kdt";
       description = "Fast and flexible k-d trees for various types of point queries";
       license = stdenv.lib.licenses.mit;
     }) {};

  "keiretsu" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, async, conduit
     , conduit-extra, filepath, hslogger, network, optparse-applicative
     , text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "keiretsu";
       version = "0.4.4";
       sha256 = "0bwwsxav04dnipg5xvb8j4ncxbd5mw6r5gisn5avqjm34wr8y2b9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson ansi-terminal async conduit conduit-extra filepath hslogger
         network optparse-applicative text unordered-containers yaml
       ];
       description = "Multi-process orchestration for development and integration testing";
       license = "unknown";
     }) {};

  "keter" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, blaze-builder
     , case-insensitive, conduit, conduit-extra, data-default, filepath
     , fsnotify, hspec, http-client, http-conduit, http-reverse-proxy
     , http-types, lifted-base, mtl, network, network-conduit-tls
     , random, regex-tdfa, stm, system-fileio, system-filepath, tar
     , text, time, transformers, unix-compat, unordered-containers
     , vector, wai, wai-app-static, wai-extra, warp, warp-tls, yaml
     , zlib
     }:
     mkDerivation {
       pname = "keter";
       version = "1.3.6";
       sha256 = "00g34gazj3kk39nk34vzw88dy04rr3swb0hcl6k6gafwqrpv3i79";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson async attoparsec blaze-builder case-insensitive conduit
         conduit-extra data-default filepath fsnotify http-client
         http-conduit http-reverse-proxy http-types lifted-base mtl network
         network-conduit-tls random regex-tdfa stm system-fileio
         system-filepath tar text time transformers unix-compat
         unordered-containers vector wai wai-app-static wai-extra warp
         warp-tls yaml zlib
       ];
       testDepends = [ conduit hspec transformers ];
       homepage = "http://www.yesodweb.com/";
       description = "Web application deployment manager, focusing on Haskell web frameworks";
       license = stdenv.lib.licenses.mit;
     }) {};

  "kevin" = callPackage
    ({ mkDerivation, attoparsec, cprng-aes, damnpacket, data-default
     , exceptions, HTTP, lens, mtl, network, regex-pcre-builtin, stm
     , text, time, tls, tls-extra
     }:
     mkDerivation {
       pname = "kevin";
       version = "0.11.0";
       sha256 = "00hghd44h8d87kbf0j8ns78syz79a9sdwl454sb5n6ynq62fgwr1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec cprng-aes damnpacket data-default exceptions HTTP lens
         mtl network regex-pcre-builtin stm text time tls tls-extra
       ];
       description = "a dAmn ↔ IRC proxy";
       license = "GPL";
     }) {};

  "keyring" = callPackage
    ({ mkDerivation, udbus }:
     mkDerivation {
       pname = "keyring";
       version = "0.1.0.3";
       sha256 = "06sp308nwgk7cdpj0q7zinp05vy5fcgm7jrawhdmcvxka6l22yiy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ udbus ];
       homepage = "https://github.com/lunaryorn/haskell-keyring";
       description = "Keyring access";
       license = stdenv.lib.licenses.mit;
     }) {};

  "keys" = callPackage
    ({ mkDerivation, comonad, free, semigroupoids, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "keys";
       version = "3.10.1";
       sha256 = "007lbpfan5n1cgswsrzc4xjv0kjmjr9vn4lpqm3gwk3lnfpg8i4n";
       buildDepends = [
         comonad free semigroupoids semigroups transformers
       ];
       homepage = "http://github.com/ekmett/keys/";
       description = "Keyed functors and containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "keystore" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, ansi-wl-pprint, api-tools
     , asn1-encoding, asn1-types, base64-bytestring, byteable
     , cipher-aes, crypto-pubkey, crypto-random, filepath, lens, mtl
     , optparse-applicative, pbkdf, raw-strings-qq, regex-compat-tdfa
     , safe, setenv, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "keystore";
       version = "0.7.0.1";
       sha256 = "0hswqspbb0lmr33bz1d5f12fhs66i2ynynxii6qwcsrzjn77ps8j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty ansi-wl-pprint api-tools asn1-encoding
         asn1-types base64-bytestring byteable cipher-aes crypto-pubkey
         crypto-random filepath lens mtl optparse-applicative pbkdf
         raw-strings-qq regex-compat-tdfa safe setenv text time
         unordered-containers vector
       ];
       homepage = "http://github.com/cdornan/keystore";
       description = "Managing stores of secret things";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "keyvaluehash" = callPackage
    ({ mkDerivation, binary, derive, filepath, hashable, mmap
     , storable-record
     }:
     mkDerivation {
       pname = "keyvaluehash";
       version = "0.3.1.2";
       sha256 = "1gph4cfx1xqjzhzx6nl2sfgqa6mk6a272a65gk5j43yjfh4s17gl";
       buildDepends = [
         binary derive filepath hashable mmap storable-record
       ];
       description = "Pure Haskell key/value store implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kibro" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "kibro";
       version = "0.5.0";
       sha256 = "0yfyx4jyz0n3p2w6pca3nxc72s01240n3siy5sx883ldz706adls";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kicad-data" = callPackage
    ({ mkDerivation, ieee754, lens-family, parsec, parsec-numbers
     , pretty-compact, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "kicad-data";
       version = "0.1.0.0";
       sha256 = "02bgz21jw76kzn57z2a7njbwz366j5hpjimyn7dw05h3c64gf8h1";
       buildDepends = [
         ieee754 lens-family parsec parsec-numbers pretty-compact
       ];
       testDepends = [
         ieee754 lens-family parsec parsec-numbers pretty-compact QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/kasbah/haskell-kicad-data";
       description = "Parser and writer for KiCad files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "kickass-torrents-dump-parser" = callPackage
    ({ mkDerivation, cassava, hspec, hspec-expectations, string-qq
     , text, vector
     }:
     mkDerivation {
       pname = "kickass-torrents-dump-parser";
       version = "0.0.1";
       sha256 = "1bqv07v5sx0jaalnzyk703g08js6sb2snvpsk6ld5zr6iqm7k4wk";
       buildDepends = [ cassava text vector ];
       testDepends = [
         cassava hspec hspec-expectations string-qq text vector
       ];
       description = "Parses kat.ph torrent dumps";
       license = stdenv.lib.licenses.mit;
     }) {};

  "kickchan" = callPackage
    ({ mkDerivation, HUnit, primitive, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "kickchan";
       version = "0.1.0.4";
       sha256 = "1gmp8d2gm275mc379rhyhyfk7r2z8d1mhaz0nikbg4wpczhqf0n7";
       buildDepends = [ primitive vector ];
       testDepends = [
         HUnit primitive QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/JohnLato/kickchan";
       description = "Kick Channels: bounded channels with non-blocking writes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kif-parser" = callPackage
    ({ mkDerivation, cmdargs, hostname, parsec, twine }:
     mkDerivation {
       pname = "kif-parser";
       version = "0.0.3";
       sha256 = "1d8abd4l8mcgcfqmm06zmd7yxvfls1kqkphx64bi6mmqzy8lcx3k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs hostname parsec twine ];
       description = "Process KIF iOS test logs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kinds" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "kinds";
       version = "0.0.1.5";
       sha256 = "169f2b0nn7mkjws6c5sb3mih2p6snhfq42bkfds3zxz01y53v2g5";
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/kinds";
       description = "Emulation of subkinds and subkind polymorphism";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kit" = callPackage
    ({ mkDerivation, ansi-terminal, attoparsec, cabal-file-th, cmdargs
     , errors, filepath, Glob, mtl, text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "kit";
       version = "0.7.12";
       sha256 = "0557v1js7bzd9a00lq078csr66pdrr4kr9qiign2zwz03rrcaviw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal attoparsec cabal-file-th cmdargs errors filepath Glob
         mtl text unordered-containers yaml
       ];
       homepage = "http://github.com/nkpart/kit";
       description = "A dependency manager for Xcode (Objective-C) projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kmeans" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "kmeans";
       version = "0.1.2";
       sha256 = "1v9f6yzzb282x30wyk91f68dphxl5g2lnibmsqhvc9m4wznnxjzc";
       description = "K-means clustering algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kmeans-par" = callPackage
    ({ mkDerivation, hspec, metric, normaldistribution, parallel
     , QuickCheck, semigroups, vector
     }:
     mkDerivation {
       pname = "kmeans-par";
       version = "1.5.1";
       sha256 = "087z1r9fljvysgl940qpnrf7any80fy33shmn8hbmn2kwgczn69c";
       buildDepends = [ metric parallel semigroups vector ];
       testDepends = [
         hspec metric normaldistribution parallel QuickCheck semigroups
         vector
       ];
       description = "Sequential and parallel implementations of Lloyd's algorithm";
       license = stdenv.lib.licenses.mit;
     }) {};

  "kmeans-vector" = callPackage
    ({ mkDerivation, mtl, QuickCheck, vector }:
     mkDerivation {
       pname = "kmeans-vector";
       version = "0.3";
       sha256 = "0n957b7pcq3v8kf4507crbrd172mv9g14p5hmpalfjzlpb3b5ll1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl QuickCheck vector ];
       homepage = "http://github.com/alpmestan/kmeans-vector";
       description = "An implementation of the kmeans clustering algorithm based on the vector package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "knob" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "knob";
       version = "0.1.1";
       sha256 = "05qj7s04p5pbasivyxc06l0jbii250zjnvb3l1y2sfhglb7q8b4c";
       buildDepends = [ transformers ];
       homepage = "https://john-millikin.com/software/knob/";
       description = "Memory-backed handles";
       license = stdenv.lib.licenses.mit;
     }) {};

  "knots" = callPackage
    ({ mkDerivation, data-default, deepseq, mtl, parallel, vector, yap
     }:
     mkDerivation {
       pname = "knots";
       version = "0.1.0.0";
       sha256 = "1kqcfabbk308ph9i04d6sz9hrh2lcmqp7aml7av9h15hdhq77nf2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-default deepseq mtl parallel vector yap ];
       description = "Khovanov homology computations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "koellner-phonetic" = callPackage
    ({ mkDerivation, HUnit }:
     mkDerivation {
       pname = "koellner-phonetic";
       version = "0.0";
       sha256 = "0r7gbgvs49y1nyq5z5f2sb4sjfr847l1vrbih2f5975i3hd9c9kg";
       buildDepends = [ HUnit ];
       testDepends = [ HUnit ];
       description = "\"map German words to code representing pronunciation\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kontrakcja-templates" = callPackage
    ({ mkDerivation, hslogger, HStringTemplate, html, HUnit, MissingH
     , mtl, parsec, string-templates, syb, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "kontrakcja-templates";
       version = "0.1";
       sha256 = "020vcd04dxaxcd3bb9vwgw1qvxnz5gx590mjkbnnxrcjhl9yd9j8";
       buildDepends = [
         HStringTemplate html MissingH mtl parsec transformers utf8-string
       ];
       testDepends = [
         hslogger HStringTemplate HUnit MissingH mtl string-templates syb
         test-framework test-framework-hunit test-framework-quickcheck2 time
       ];
       description = "Utilities for working with many HStringTemplate templates from files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "koofr-client" = callPackage
    ({ mkDerivation, aeson, filepath, http-client, http-client-tls
     , http-types, mtl
     }:
     mkDerivation {
       pname = "koofr-client";
       version = "0.1.0.0";
       sha256 = "1bhpn33fqqf983di4jy8jsmylsghvkkvygid9z4hvjdqvb3djjrq";
       buildDepends = [
         aeson filepath http-client http-client-tls http-types mtl
       ];
       homepage = "https://github.com/edofic/koofr-api-hs";
       description = "Client to Koofr API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "korfu" = callPackage
    ({ mkDerivation, bio, simpleargs }:
     mkDerivation {
       pname = "korfu";
       version = "0.2";
       sha256 = "1mwndf83yl57bawc6vk8983qca3yhcdiczj6q7n1rgv8qphnw0wz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio simpleargs ];
       homepage = "http://blog.malde.org/";
       description = "The Korfu ORF Utility";
       license = "GPL";
     }) {};

  "kqueue" = callPackage
    ({ mkDerivation, c2hs, filepath, mtl, time }:
     mkDerivation {
       pname = "kqueue";
       version = "0.1.2.6";
       sha256 = "1q25ahsxsxrj8l99skymzssklj11d5prsa09b23dmbgc4qw28lg8";
       buildDepends = [ filepath mtl time ];
       buildTools = [ c2hs ];
       homepage = "http://github.com/hesselink/kqueue";
       description = "A binding to the kqueue event library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "krpc" = callPackage
    ({ mkDerivation, bencoding, data-default-class, hspec, lifted-base
     , monad-control, monad-logger, mtl, network, QuickCheck
     , quickcheck-instances, text, transformers
     }:
     mkDerivation {
       pname = "krpc";
       version = "0.6.1.0";
       sha256 = "0ldhg4ahhfp4jy3ijssfmcwfg68dggw3biqmc4my2qrcgd2mvx29";
       buildDepends = [
         bencoding data-default-class lifted-base monad-control monad-logger
         mtl network text transformers
       ];
       testDepends = [
         bencoding hspec monad-logger mtl network QuickCheck
         quickcheck-instances
       ];
       homepage = "https://github.com/cobit/krpc";
       description = "KRPC protocol implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ks-test" = callPackage
    ({ mkDerivation, gamma, random-fu, roots, vector }:
     mkDerivation {
       pname = "ks-test";
       version = "0.1";
       sha256 = "1xj9bnwiws3rnax3rlf67p8dh487w07xl99h81a9j1wjkqysldym";
       buildDepends = [ gamma random-fu roots vector ];
       description = "Kolmogorov distribution and Kolmogorov-Smirnov test";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "kure" = callPackage
    ({ mkDerivation, dlist, transformers }:
     mkDerivation {
       pname = "kure";
       version = "2.16.4";
       sha256 = "07qd3qhdwsi4hxlijnhqsziprsl3zmhj9271ha6iy79zcapwvpax";
       buildDepends = [ dlist transformers ];
       homepage = "http://www.ittc.ku.edu/csdl/fpg/software/kure.html";
       description = "Combinators for Strategic Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kure-your-boilerplate" = callPackage
    ({ mkDerivation, kure }:
     mkDerivation {
       pname = "kure-your-boilerplate";
       version = "0.1.3";
       sha256 = "0bfcmx1fz521vkc2lrbpyvaqcy4c29h5xp6wmyxvgrjjnq32ld1b";
       buildDepends = [ kure ];
       homepage = "http://ittc.ku.edu/~andygill/kure.php";
       description = "Generator for Boilerplate KURE Combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "kyotocabinet" = callPackage
    ({ mkDerivation, cereal, kyotocabinet }:
     mkDerivation {
       pname = "kyotocabinet";
       version = "0.1.3";
       sha256 = "1wzwmfmh2cx3c9blnhk7ibsimwsnnxz9jpcdfdkgy5rb28wvvkyz";
       buildDepends = [ cereal ];
       extraLibraries = [ kyotocabinet ];
       description = "Mid level bindings to Kyoto Cabinet";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) kyotocabinet; };

  "l-bfgs-b" = callPackage
    ({ mkDerivation, lbfgsb, vector }:
     mkDerivation {
       pname = "l-bfgs-b";
       version = "0.1.0.1";
       sha256 = "0ypzkq2rpbmdjfqba72pl3wf6d4wz0z5vmy84dq5m38ij5mlb4y7";
       buildDepends = [ vector ];
       extraLibraries = [ lbfgsb ];
       homepage = "http://nonempty.org/software/haskell-l-bfgs-b";
       description = "Bindings to L-BFGS-B, Fortran code for limited-memory quasi-Newton bound-constrained optimization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "labeled-graph" = callPackage
    ({ mkDerivation, labeled-tree }:
     mkDerivation {
       pname = "labeled-graph";
       version = "1.0.0.0";
       sha256 = "060nvnlh1h8vxi6k2hsz79fn4xypangdj5v4q0kc6abyf9garf7r";
       buildDepends = [ labeled-tree ];
       description = "Labeled graph structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "labeled-tree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "labeled-tree";
       version = "1.0.0.0";
       sha256 = "1cnnyic5z5y21hpxpmx66ph34mjyysckgiasmzg7yx202y2ih7s7";
       description = "Labeled tree structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "laborantin-hs" = callPackage
    ({ mkDerivation, aeson, async, cmdlib, hslogger, mtl, parsec
     , random, split, text, time, transformers, uuid
     }:
     mkDerivation {
       pname = "laborantin-hs";
       version = "0.1.5.2";
       sha256 = "18bgd9v4bh3wfh7p7xjzrsj130cppm6x55vzagcpn10cwqag41cs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson async cmdlib hslogger mtl parsec random split text time
         transformers uuid
       ];
       homepage = "https://github.com/lucasdicioccio/laborantin-hs";
       description = "an experiment management framework";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "labyrinth" = callPackage
    ({ mkDerivation, derive, HTF, HUnit, lens, monad-loops, MonadRandom
     , mtl, parsec, QuickCheck, random, safecopy, transformers
     }:
     mkDerivation {
       pname = "labyrinth";
       version = "0.5.0.0";
       sha256 = "1yi53vg248j8ww08z2a5v3agci84q3m2d37h9mdbprciryh3hfcl";
       buildDepends = [
         derive lens monad-loops MonadRandom mtl parsec random safecopy
         transformers
       ];
       testDepends = [
         derive HTF HUnit lens monad-loops MonadRandom mtl parsec QuickCheck
         random safecopy transformers
       ];
       homepage = "https://github.com/koterpillar/labyrinth";
       description = "A complicated turn-based game";
       license = stdenv.lib.licenses.mit;
     }) {};

  "labyrinth-server" = callPackage
    ({ mkDerivation, acid-state, aeson, derive, filepath, hamlet, HTF
     , http-types, HUnit, labyrinth, lens, mtl, parsec, QuickCheck
     , random, safecopy, shakespeare-css, shakespeare-js, text
     , transformers, unordered-containers, utf8-string, vector, wai
     , wai-test, wai-websockets, warp, websockets, yesod, yesod-static
     }:
     mkDerivation {
       pname = "labyrinth-server";
       version = "0.1.4.1";
       sha256 = "00mx8zmwqawp2hh1a0v4r26w7wsji0iz7jwsh83742wimir316aw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         acid-state aeson derive filepath hamlet labyrinth lens mtl parsec
         random safecopy shakespeare-css shakespeare-js text transformers
         unordered-containers utf8-string vector wai-websockets warp
         websockets yesod yesod-static
       ];
       testDepends = [
         acid-state aeson derive filepath hamlet HTF http-types HUnit
         labyrinth lens mtl parsec QuickCheck random safecopy
         shakespeare-css shakespeare-js text transformers
         unordered-containers utf8-string vector wai wai-test wai-websockets
         warp websockets yesod yesod-static
       ];
       homepage = "https://github.com/koterpillar/labyrinth-server";
       description = "A complicated turn-based game - Web server";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lagrangian" = callPackage
    ({ mkDerivation, ad, hmatrix, HUnit, nonlinear-optimization
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "lagrangian";
       version = "0.6.0.1";
       sha256 = "07jlmfynnq42syim9k7hks6zmkzq2i62slvwwik8w2rg07ran72v";
       buildDepends = [ ad hmatrix nonlinear-optimization vector ];
       testDepends = [
         ad hmatrix HUnit nonlinear-optimization test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "http://github.com/jfischoff/lagrangian";
       description = "Solve Lagrange multiplier problems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambda-ast" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lambda-ast";
       version = "0.0.12";
       sha256 = "07i0fw7hvkzky9rwrnh4b3i35crbv4mkj0w001dwkgsh1flzh95f";
       description = "Lambda Calculi Abstract Syntax Trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambda-bridge" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lambda-bridge";
       version = "0.1";
       sha256 = "0qiqw4av62fdf2b1qc64lvj84lkzcfpik7lvq81qk015pz58cbs3";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.ittc.ku.edu/csdl/fpg/Tools/LambdaBridge";
       description = "A bridge from Haskell (on a CPU) to VHDL on a FPGA";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambda-canvas" = callPackage
    ({ mkDerivation, GLUT, mtl, OpenGL, time }:
     mkDerivation {
       pname = "lambda-canvas";
       version = "0.1";
       sha256 = "14wl1w1sc0j1yjfad5v00346ccxp0grfs1677hnjqwisashdac92";
       buildDepends = [ GLUT mtl OpenGL time ];
       description = "Educational drawing canvas for FP explorers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lambda-devs" = callPackage
    ({ mkDerivation, binary, dimensional, distributed-process, HUnit
     , numtype, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "lambda-devs";
       version = "0.4.0";
       sha256 = "1j2j6clm35ffvdjlh7apydir06g7az40gsqvlcw8p4qbdk2z2vrh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary dimensional distributed-process numtype ];
       testDepends = [
         binary dimensional distributed-process HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/alios/lambda-devs";
       description = "a Paralell-DEVS implementaion based on distributed-process";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambda-placeholders" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lambda-placeholders";
       version = "0.0.0.0";
       sha256 = "0s3y55yqa5js1q3rfq8dgdip6rnjag4w5j5vdldghq9ax5yph3gd";
       homepage = "https://github.com/mmirman/lambda-placeholders";
       description = "A library to emulate laceholders similar to Scala";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambda-toolbox" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lambda-toolbox";
       version = "1.0.1";
       sha256 = "1m11gdwq4nma3231043h5szplmask5152y2r9ayyrpacczddcbim";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://scravy.de/blog/2012-02-20/a-lambda-toolbox-in-haskell.htm";
       description = "An application to work with the lambda calculus (for learning)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambda2js" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "lambda2js";
       version = "0.1";
       sha256 = "0490yswk7zsyc2lskyqkwa98xsaj5a2cgw4pyxbg5920lyjqb3n8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec ];
       homepage = "https://patch-tag.com/r/mkollar/lambda2js/";
       description = "Untyped Lambda calculus to JavaScript compiler";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "lambdaFeed" = callPackage
    ({ mkDerivation, html }:
     mkDerivation {
       pname = "lambdaFeed";
       version = "0.3.1";
       sha256 = "0gji0jix99qbldqkclymnwf5pnmiszy0qka9m2wq8kyi09f3y4h8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ html ];
       homepage = "http://www.cse.unsw.edu.au/~chak/haskell/lambdaFeed/";
       description = "RSS 2.0 feed generator";
       license = "GPL";
     }) {};

  "lambdabot" = callPackage
    ({ mkDerivation, arrows, binary, brainfuck, data-memocombinators
     , dependent-map, dependent-sum, dependent-sum-template, dice
     , edit-distance, filepath, haskeline, haskell-src-exts, hoogle
     , hslogger, hstatsd, HTTP, IOSpec, lifted-base, logict, misfortune
     , monad-control, MonadRandom, mtl, mueval, network, numbers, oeis
     , parsec, QuickCheck, random, random-fu, random-source, regex-tdfa
     , SafeSemaphore, show, split, syb, tagsoup, time, transformers
     , transformers-base, unlambda, utf8-string, vector-space, zlib
     }:
     mkDerivation {
       pname = "lambdabot";
       version = "4.3.0.1";
       sha256 = "19pkm4m2xk9ziai3ka4scxjavi0as8dmivz9q6vg3npmv0kyhkhb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         arrows binary brainfuck data-memocombinators dependent-map
         dependent-sum dependent-sum-template dice edit-distance filepath
         haskeline haskell-src-exts hoogle hslogger hstatsd HTTP IOSpec
         lifted-base logict misfortune monad-control MonadRandom mtl mueval
         network numbers oeis parsec QuickCheck random random-fu
         random-source regex-tdfa SafeSemaphore show split syb tagsoup time
         transformers transformers-base unlambda utf8-string vector-space
         zlib
       ];
       homepage = "http://haskell.org/haskellwiki/Lambdabot";
       description = "Lambdabot is a development tool and advanced IRC bot";
       license = "GPL";
     }) {};

  "lambdabot-utils" = callPackage
    ({ mkDerivation, binary, haskell-src, mtl, network, random
     , regex-compat, regex-posix, syb, tagsoup, utf8-string, zlib
     }:
     mkDerivation {
       pname = "lambdabot-utils";
       version = "4.2.2";
       sha256 = "0mmz9rn6vv8xnavmz66g164h1liir3rzg1n7lmbcsgwcyhm925d7";
       buildDepends = [
         binary haskell-src mtl network random regex-compat regex-posix syb
         tagsoup utf8-string zlib
       ];
       homepage = "http://haskell.org/haskellwiki/Lambdabot";
       description = "Utility libraries for the advanced IRC bot, Lambdabot";
       license = "GPL";
     }) {};

  "lambdacat" = callPackage
    ({ mkDerivation, cmdargs, dyre, glade, gtk, mtl, network, webkit }:
     mkDerivation {
       pname = "lambdacat";
       version = "0.1.1";
       sha256 = "18m7z0lmi26ib1n1wrql96wb5i229k8fk3iw4vavs9j59b4pz1br";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs dyre glade gtk mtl network webkit ];
       homepage = "http://github.com/baldo/lambdacat";
       description = "Webkit Browser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube" = callPackage
    ({ mkDerivation, editline, mtl }:
     mkDerivation {
       pname = "lambdacube";
       version = "2008.12.25";
       sha256 = "1qwwcbs7slddpjlz3dlyjr32xk66clcbxbnb6j1d5v5dz9mvjh3b";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ editline mtl ];
       description = "A simple lambda cube type checker";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube-bullet" = callPackage
    ({ mkDerivation, bullet, lambdacube-engine, mtl, vector }:
     mkDerivation {
       pname = "lambdacube-bullet";
       version = "0.2.1";
       sha256 = "1wnv8vgp100fdnx4g80d3gshbba9jni7rbjhhj8rx1mi0wcc1bcv";
       buildDepends = [ bullet lambdacube-engine mtl vector ];
       homepage = "http://www.haskell.org/haskellwiki/LambdaCubeEngine";
       description = "Example for combining LambdaCube and Bullet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube-core" = callPackage
    ({ mkDerivation, bytestring-trie, mtl, vector }:
     mkDerivation {
       pname = "lambdacube-core";
       version = "0.2.0";
       sha256 = "001nw31h61dawh036yk4w9b35aha6c6xdmsl4vdipnr3kwykgk9l";
       buildDepends = [ bytestring-trie mtl vector ];
       homepage = "http://lambdacube3d.wordpress.com/";
       description = "LambdaCube 3D IR";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube-edsl" = callPackage
    ({ mkDerivation, bytestring-trie, lambdacube-core, mtl, vector }:
     mkDerivation {
       pname = "lambdacube-edsl";
       version = "0.2.0";
       sha256 = "18lbkshc9wh7scb2bbvl565w6yryz7n1iy14r81cahnj7m68fj8m";
       buildDepends = [ bytestring-trie lambdacube-core mtl vector ];
       homepage = "http://lambdacube3d.wordpress.com/";
       description = "LambdaCube 3D EDSL definition";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube-engine" = callPackage
    ({ mkDerivation, binary, bitmap, bytestring-trie, filepath, mtl
     , OpenGLRaw, stb-image, uulib, vect, vector, vector-algorithms, xml
     , zip-archive
     }:
     mkDerivation {
       pname = "lambdacube-engine";
       version = "0.2.4";
       sha256 = "1xdp10nylndmfw16dywqrxj30g99rf9qbcx5qiglvzm1c1kxid3f";
       buildDepends = [
         binary bitmap bytestring-trie filepath mtl OpenGLRaw stb-image
         uulib vect vector vector-algorithms xml zip-archive
       ];
       homepage = "http://www.haskell.org/haskellwiki/LambdaCubeEngine";
       description = "3D rendering engine written entirely in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube-examples" = callPackage
    ({ mkDerivation, elerea, GLFW-b, lambdacube-engine, mtl }:
     mkDerivation {
       pname = "lambdacube-examples";
       version = "0.2.2";
       sha256 = "14l40ncbkblphmyn4prqiy2w70agcw830bpyawfdilf93bs340b9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ elerea GLFW-b lambdacube-engine mtl ];
       homepage = "http://www.haskell.org/haskellwiki/LambdaCubeEngine";
       description = "Examples for LambdaCube";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube-gl" = callPackage
    ({ mkDerivation, binary, bitmap, bytestring-trie, lambdacube-core
     , lambdacube-edsl, language-glsl, mtl, OpenGLRaw, prettyclass
     , vector
     }:
     mkDerivation {
       pname = "lambdacube-gl";
       version = "0.2.0";
       sha256 = "1r26gvpyfvk87wx1fpp6y5687q5y7pxzmjvm55r96m976200lz50";
       buildDepends = [
         binary bitmap bytestring-trie lambdacube-core lambdacube-edsl
         language-glsl mtl OpenGLRaw prettyclass vector
       ];
       homepage = "http://www.haskell.org/haskellwiki/LambdaCubeEngine";
       description = "OpenGL backend for LambdaCube graphics language (main package)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdacube-samples" = callPackage
    ({ mkDerivation, bytestring-trie, elerea, GLFW-b, lambdacube-core
     , lambdacube-edsl, lambdacube-gl, mtl, OpenGLRaw, stb-image, time
     , vect, vector
     }:
     mkDerivation {
       pname = "lambdacube-samples";
       version = "0.2.0";
       sha256 = "0zl9d524a81vg3h7f9cbfi34b0hw452bd30xmgvg9ayfwxa842d1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bytestring-trie elerea GLFW-b lambdacube-core lambdacube-edsl
         lambdacube-gl mtl OpenGLRaw stb-image time vect vector
       ];
       homepage = "http://lambdacube3d.wordpress.com/";
       description = "Samples for LambdaCube 3D";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lambdatwit" = callPackage
    ({ mkDerivation, acid-state, authenticate-oauth, case-insensitive
     , conduit, data-default, exceptions, hint, http-conduit, http-types
     , lens, MissingH, monad-control, monad-logger, mtl, mueval
     , network-uri, resourcet, safecopy, text, transformers
     , transformers-base, twitter-conduit, twitter-types, utf8-string
     }:
     mkDerivation {
       pname = "lambdatwit";
       version = "0.1.0.0";
       sha256 = "01mqmhnq70k3yg29z492x7d6mzpwlijdrrgf0zbz8c8mlgnm4ljx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         acid-state authenticate-oauth case-insensitive conduit data-default
         exceptions hint http-conduit http-types lens MissingH monad-control
         monad-logger mtl mueval network-uri resourcet safecopy text
         transformers transformers-base twitter-conduit twitter-types
         utf8-string
       ];
       homepage = "http://github.com/ashyisme/lambdatwit";
       description = "Lambdabot running as a twitter bot. Similar to the @fsibot f# bot.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lambdiff" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, enumerator, gtk
     , mtl
     }:
     mkDerivation {
       pname = "lambdiff";
       version = "0.1";
       sha256 = "0xlvz4r09vn1vdvs5wykry626hwcsg2zvdvl6jf6zrsq9331zcwy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec attoparsec-enumerator enumerator gtk mtl
       ];
       homepage = "https://github.com/jamwt/lambdiff.git";
       description = "Diff Viewer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lame-tester" = callPackage
    ({ mkDerivation, bifunctors, semigroups, tasty, tasty-hunit
     , validation
     }:
     mkDerivation {
       pname = "lame-tester";
       version = "1.2";
       sha256 = "1wa7h48a7hfb748i4chl2lpizrqmsdydg9vbwjf8gmy5cwlh816y";
       buildDepends = [ bifunctors semigroups validation ];
       testDepends = [ tasty tasty-hunit ];
       homepage = "http://github.com/TheBizzle";
       description = "A strange and unnecessary selective test-running library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-asn1" = callPackage
    ({ mkDerivation, parsec, syb }:
     mkDerivation {
       pname = "language-asn1";
       version = "0.5";
       sha256 = "14aiqk1l1d3bh7dcml4a85xg81583h3r30h5splw0lvcxmbggzp3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec syb ];
       homepage = "http://patch-tag.com/r/adept/language-asn1";
       description = "Parsing of ASN1 definitions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-bash" = callPackage
    ({ mkDerivation, parsec, transformers }:
     mkDerivation {
       pname = "language-bash";
       version = "0.6.0";
       sha256 = "07hb9hg4grmf01zlvfm583q9km4dxfgm4pkb9glihl3v7iqz21vs";
       buildDepends = [ parsec transformers ];
       homepage = "http://github.com/knrafto/language-bash/";
       description = "Parsing and pretty-printing Bash shell scripts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-boogie" = callPackage
    ({ mkDerivation, ansi-terminal, cmdargs, filepath, HUnit, lens, mtl
     , parsec, random, stream-monad, time, transformers
     }:
     mkDerivation {
       pname = "language-boogie";
       version = "0.2";
       sha256 = "166n9x3gil42w26r7p9d1jq6iy0yi9zacijkfmxj2gkkswyyb91x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cmdargs filepath HUnit lens mtl parsec random
         stream-monad time transformers
       ];
       homepage = "https://bitbucket.org/nadiapolikarpova/boogaloo";
       description = "Interpreter and language infrastructure for Boogie";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-c" = callPackage
    ({ mkDerivation, alex, filepath, happy, syb }:
     mkDerivation {
       pname = "language-c";
       version = "0.4.7";
       sha256 = "1r0jlncv6d6ai8kblrdq9gz8abx57b24y6hfh30xx20zdgccjvaz";
       buildDepends = [ filepath syb ];
       buildTools = [ alex happy ];
       homepage = "http://www.sivity.net/projects/language.c/";
       description = "Analysis and generation of C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-c-comments" = callPackage
    ({ mkDerivation, alex, language-c }:
     mkDerivation {
       pname = "language-c-comments";
       version = "0.3";
       sha256 = "1rmciff72zpcq7pvbbxlsg2339dbk00k18vxp35sz8haql0jnrf2";
       buildDepends = [ language-c ];
       buildTools = [ alex ];
       homepage = "http://github.com/ghulette/language-c-comments";
       description = "Extracting comments from C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-c-inline" = callPackage
    ({ mkDerivation, filepath, language-c-quote, mainland-pretty }:
     mkDerivation {
       pname = "language-c-inline";
       version = "0.7.7.0";
       sha256 = "10wj8dlsjimgln14y7b50pnnn865ln46v3xcqwr7ahjcl3icavg6";
       buildDepends = [ filepath language-c-quote mainland-pretty ];
       testDepends = [ language-c-quote ];
       homepage = "https://github.com/mchakravarty/language-c-inline/";
       description = "Inline C & Objective-C code in Haskell for language interoperability";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-c-quote" = callPackage
    ({ mkDerivation, alex, exception-mtl, exception-transformers
     , filepath, happy, haskell-src-meta, HUnit, mainland-pretty, mtl
     , srcloc, syb, symbol, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "language-c-quote";
       version = "0.10.1.3";
       sha256 = "0kbnqrplwb5w9jfljsrjxisnrnxbc0221hpznvq4m1ldx2mkrh1k";
       buildDepends = [
         exception-mtl exception-transformers filepath haskell-src-meta
         mainland-pretty mtl srcloc syb symbol
       ];
       testDepends = [
         HUnit srcloc symbol test-framework test-framework-hunit
       ];
       buildTools = [ alex happy ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-cil" = callPackage
    ({ mkDerivation, bool-extras }:
     mkDerivation {
       pname = "language-cil";
       version = "0.2.2";
       sha256 = "0b3yapn53bwaxia7b59kizzcxh1d3842as1cbkyzd096v8wsgwfa";
       buildDepends = [ bool-extras ];
       homepage = "https://github.com/tomlokhorst/language-cil";
       description = "Manipulating Common Intermediate Language AST";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-css" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "language-css";
       version = "0.0.3";
       sha256 = "1g0mh08rz44533473isrqbfn6hp12np9dxm85cn5xpx68jl9ni9g";
       description = "CSS 2.1 syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-dot" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "language-dot";
       version = "0.0.8";
       sha256 = "0cjjfm7mcsl0x5by7gvbsdrr92x88i8sadb4pz6qh618sgrci7ax";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       description = "A library for the analysis and creation of Graphviz DOT files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-ecmascript" = callPackage
    ({ mkDerivation, data-default-class, Diff, filepath, HUnit, mtl
     , parsec, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, testing-feat, uniplate, wl-pprint
     }:
     mkDerivation {
       pname = "language-ecmascript";
       version = "0.16.2";
       sha256 = "15jvq3wblx67hhvgblqzfdnks6x17hfnivifps5wfs9v1ljkiq1k";
       buildDepends = [
         data-default-class Diff mtl parsec QuickCheck testing-feat uniplate
         wl-pprint
       ];
       testDepends = [
         data-default-class Diff filepath HUnit mtl parsec QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         uniplate wl-pprint
       ];
       homepage = "http://github.com/jswebtools/language-ecmascript";
       description = "JavaScript parser and pretty-printer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-ecmascript-analysis" = callPackage
    ({ mkDerivation, HUnit, language-ecmascript, mtl, parsec
     , test-framework, test-framework-hunit, uniplate
     }:
     mkDerivation {
       pname = "language-ecmascript-analysis";
       version = "0.9";
       sha256 = "073dh69mwz3x4v9xwa14pf9y04darzw1r5kfiv43646zs7axjd4p";
       buildDepends = [ language-ecmascript parsec uniplate ];
       testDepends = [
         HUnit language-ecmascript mtl test-framework test-framework-hunit
         uniplate
       ];
       homepage = "http://github.com/jswebtools/language-ecmascript-analysis";
       description = "JavaScript analysis library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-eiffel" = callPackage
    ({ mkDerivation, alex, binary, deepseq, derive, hashable, lens, mtl
     , parsec, text, unordered-containers
     }:
     mkDerivation {
       pname = "language-eiffel";
       version = "0.1.2";
       sha256 = "1v3m31ffx4pmgq92ahvlyzsh9hjvrdsmyzhd61qxzgpn3z9zzlcm";
       buildDepends = [
         binary deepseq derive hashable lens mtl parsec text
         unordered-containers
       ];
       buildTools = [ alex ];
       homepage = "https://github.com/scottgw/language-eiffel";
       description = "Parser and pretty printer for the Eiffel language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-fortran" = callPackage
    ({ mkDerivation, alex, happy, haskell-src, parsec, syb }:
     mkDerivation {
       pname = "language-fortran";
       version = "0.2.7";
       sha256 = "0bj60vilvb13kw59nblhmi82kf103dxn3c94wz4hq2sdqyiwxrmx";
       buildDepends = [ haskell-src parsec syb ];
       buildTools = [ alex happy ];
       description = "Fortran lexer and parser, language support, and extensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-gcl" = callPackage
    ({ mkDerivation, bifunctors, parsers }:
     mkDerivation {
       pname = "language-gcl";
       version = "0.2";
       sha256 = "12yh49zh9wissms20rbvgzw5i5wlc8m1iqwkxg68f52g7mk6clrf";
       buildDepends = [ bifunctors parsers ];
       description = "Something similar to Dijkstra's guarded command language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "language-glsl" = callPackage
    ({ mkDerivation, HUnit, parsec, prettyclass, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "language-glsl";
       version = "0.1.1";
       sha256 = "06dc339a2cddzgjda3nzprgr0v2clbhlpl8j81m04i66bbj2l15y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec prettyclass ];
       testDepends = [
         HUnit parsec prettyclass test-framework test-framework-hunit
       ];
       description = "GLSL abstract syntax tree, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-go" = callPackage
    ({ mkDerivation, parsec, utf8-string }:
     mkDerivation {
       pname = "language-go";
       version = "0.8";
       sha256 = "1p545115x73q4mzfja50f4lxal97ydvz9r3wq6pvcqls2xgvxzvc";
       buildDepends = [ parsec utf8-string ];
       description = "A library for analysis and synthesis of Go code";
       license = "GPL";
     }) {};

  "language-guess" = callPackage
    ({ mkDerivation, cereal }:
     mkDerivation {
       pname = "language-guess";
       version = "0.1.2";
       sha256 = "0gdnkc1hb0mcn494vk9r7fw19hvaba807brwh6fna0sxyh2nx3p0";
       buildDepends = [ cereal ];
       description = "Guess at which language a text is written in using trigrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-haskell-extract" = callPackage
    ({ mkDerivation, regex-posix }:
     mkDerivation {
       pname = "language-haskell-extract";
       version = "0.2.4";
       sha256 = "1nxcs7g8a1sp91bzpy4cj6s31k5pvc3gvig04cbrggv5cvjidnhl";
       buildDepends = [ regex-posix ];
       homepage = "http://github.com/finnsson/template-helper";
       description = "Module to automatically extract functions from the local code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-java" = callPackage
    ({ mkDerivation, alex, cpphs, filepath, HUnit, mtl, parsec
     , QuickCheck, syb, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "language-java";
       version = "0.2.7";
       sha256 = "1519grsjw0f4skldxs563qz07mmj1cg72ma0plmvzpas7inkikyf";
       buildDepends = [ cpphs parsec syb ];
       testDepends = [
         filepath HUnit mtl QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       buildTools = [ alex ];
       homepage = "http://github.com/vincenthz/language-java";
       description = "Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-java-classfile" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, data-flags, deepseq
     , language-java, LibZip, mtl, parsec, utf8-string
     }:
     mkDerivation {
       pname = "language-java-classfile";
       version = "0.2.0";
       sha256 = "0pzlvzx5rv006mn88b15zvvrhf7h681xpl166368b92dc0x85gcf";
       buildDepends = [
         binary data-binary-ieee754 data-flags deepseq language-java LibZip
         mtl parsec utf8-string
       ];
       description = "Parser for Java .class files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-javascript" = callPackage
    ({ mkDerivation, alex, blaze-builder, Cabal, happy, HUnit, mtl
     , QuickCheck, test-framework, test-framework-hunit, utf8-light
     , utf8-string
     }:
     mkDerivation {
       pname = "language-javascript";
       version = "0.5.13";
       sha256 = "0h46wfh5xi3gbiaplx3ikmj7mfcwm1d37i5c9n3qfsmmkac29n2w";
       buildDepends = [ blaze-builder mtl utf8-string ];
       testDepends = [
         blaze-builder Cabal HUnit mtl QuickCheck test-framework
         test-framework-hunit utf8-light utf8-string
       ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/alanz/language-javascript";
       description = "Parser for JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-lua" = callPackage
    ({ mkDerivation, mtl, parsec, safe }:
     mkDerivation {
       pname = "language-lua";
       version = "0.4.5";
       sha256 = "1i0msb2hnv3r8bp444laczvv5315vilbygshn3x8nq7p9p7rsmq5";
       buildDepends = [ mtl parsec safe ];
       homepage = "http://github.com/osa1/language-lua";
       description = "Lua parser and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-mixal" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "language-mixal";
       version = "0.1";
       sha256 = "0fgjkx003bn0bi4z6rgg8yvsl8k8almydh2lajkyp6zi5348vcv5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://github.com/jtdaugherty/language-mixal/";
       description = "Parser, pretty-printer, and AST types for the MIXAL assembly language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-objc" = callPackage
    ({ mkDerivation, alex, filepath, happy, newtype, syb }:
     mkDerivation {
       pname = "language-objc";
       version = "0.4.2.8";
       sha256 = "0dqx8fzbh53kakbh62zmq3x4gx4p5zfwisi3z6n03mjyfv3wv6jv";
       buildDepends = [ filepath newtype syb ];
       buildTools = [ alex happy ];
       homepage = "http://www.tiresiaspress.us/haskell/language-objc";
       description = "Analysis and generation of Objective C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-openscad" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "language-openscad";
       version = "0.1.5";
       sha256 = "157qc3p2rj80z25g6j5cwfyzs82b3iwmxibrm80r3zmcx0ns0ha6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec ];
       homepage = "http://www.github.com/bgamari/language-openscad";
       description = "A simple parser for OpenSCAD";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-pig" = callPackage
    ({ mkDerivation, Cabal, HUnit, parsec, pretty-tree, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text
     }:
     mkDerivation {
       pname = "language-pig";
       version = "0.3.0.1";
       sha256 = "1lv8zm352him9rby1k0n90bklx8wlvr1w8anzmr54fmbd9ibx0f2";
       buildDepends = [ Cabal parsec pretty-tree ];
       testDepends = [
         Cabal HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       description = "Pig parser in haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "language-puppet" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec
     , base16-bytestring, case-insensitive, cryptohash, Diff, filecache
     , Glob, hashable, hruby, hslogger, hslua, hspec, http-conduit
     , http-types, HUnit, iconv, lens, lens-aeson, luautils, mtl
     , operational, optparse-applicative, parallel-io, parsec, parsers
     , pcre-utils, regex-pcre-builtin, scientific, split, stateWriter
     , stm, strict-base-types, temporary, text, time, transformers
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "language-puppet";
       version = "1.0.1";
       sha256 = "1bhhbr50xzb095nikfhc99sd5qmhzd81rg0z922x807r38kkdgnx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ansi-wl-pprint attoparsec base16-bytestring case-insensitive
         cryptohash Diff filecache Glob hashable hruby hslogger hslua hspec
         http-conduit http-types iconv lens lens-aeson luautils mtl
         operational optparse-applicative parallel-io parsec parsers
         pcre-utils regex-pcre-builtin scientific split stateWriter stm
         strict-base-types text time transformers unordered-containers
         vector yaml
       ];
       testDepends = [
         ansi-wl-pprint Glob hspec HUnit lens parsec parsers
         strict-base-types temporary text unordered-containers vector
       ];
       homepage = "http://lpuppet.banquise.net/";
       description = "Tools to parse and evaluate the Puppet DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-python" = callPackage
    ({ mkDerivation, alex, happy, monads-tf, transformers }:
     mkDerivation {
       pname = "language-python";
       version = "0.4.1";
       sha256 = "174rj38bc3q4ak08d11r476wswfgv936m5x980kar7jj8p26q163";
       buildDepends = [ monads-tf transformers ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/bjpop/language-python";
       description = "Parsing and pretty printing of Python code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-python-colour" = callPackage
    ({ mkDerivation, language-python, xhtml }:
     mkDerivation {
       pname = "language-python-colour";
       version = "0.1";
       sha256 = "1cspr1v0dm4lbjrb654n8lax9nvmj94a89cp3vqir8xccaxhggpz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ language-python xhtml ];
       homepage = "http://www.cs.mu.oz.au/~bjpop/";
       description = "Generate coloured XHTML for Python code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-sh" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, pcre-light }:
     mkDerivation {
       pname = "language-sh";
       version = "0.0.3.1";
       sha256 = "12yjynd1sib1mxx4jc28gs1k3r7kl1qv7xhanvn635dkcmswsd5k";
       buildDepends = [ filepath mtl parsec pcre-light ];
       homepage = "http://code.haskell.org/shsh/";
       description = "A package for parsing shell scripts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-slice" = callPackage
    ({ mkDerivation, HUnit, parsec, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "language-slice";
       version = "0.3.0.0";
       sha256 = "1d9g41z1nw327z5n7hj8gj0yfvmkj7hz7cpwhi4r32xa7x98hdzy";
       buildDepends = [ parsec transformers ];
       testDepends = [
         HUnit parsec QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       homepage = "https://github.com/paulkoerbitz/language-slice";
       description = "AST and parser for the ZeroC Slice language (Specification language for ICE)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-spelling" = callPackage
    ({ mkDerivation, bk-tree, criterion, ListLike, listlike-instances
     , random-shuffle, text, time, tst, vector
     }:
     mkDerivation {
       pname = "language-spelling";
       version = "0.3.2";
       sha256 = "05jgx1rcfb9aidrim2h9vr72c3m9hak2njkh04hkf4q3v1pv03ym";
       buildDepends = [
         bk-tree ListLike listlike-instances text tst vector
       ];
       testDepends = [ criterion random-shuffle time ];
       homepage = "https://github.com/bitonic/language-spelling";
       description = "Various tools to detect/correct mistakes in words";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "language-sqlite" = callPackage
    ({ mkDerivation, mtl, utf8-string }:
     mkDerivation {
       pname = "language-sqlite";
       version = "1.1";
       sha256 = "1mpbp56xgqx6j4mfla00kvr9q6mysncjw57mphvrz86ificjw93m";
       buildDepends = [ mtl utf8-string ];
       homepage = "http://dankna.com/software/";
       description = "Full parser and generator for SQL as implemented by SQLite3";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "language-typescript" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "language-typescript";
       version = "0.0.4";
       sha256 = "07lm3d4m7c6j2b5gywqm05189iwkh2zjiv5xwwmcw1fm2a63r2zd";
       buildDepends = [ parsec ];
       homepage = "http://github.com/paf31/language-typescript";
       description = "A library for working with TypeScript Definition files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "largeword" = callPackage
    ({ mkDerivation, binary, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "largeword";
       version = "1.2.3";
       sha256 = "1ldcsnnji6p84sn03j17pdcpg7vqn1xrhyn4wys0v5fyy0d383ln";
       buildDepends = [ binary ];
       testDepends = [
         binary HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/idontgetoutmuch/largeword";
       description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lat" = callPackage
    ({ mkDerivation, ansi-wl-pprint, cmdargs, filepath, haxr, HDBC
     , HDBC-sqlite3, hsini, HTTP, mtl, regex-compat, tagsoup, time
     }:
     mkDerivation {
       pname = "lat";
       version = "0.6";
       sha256 = "0snzcck07v3w1qcgw2j6w7g4ydm59cprf3cqivl9qbgsjljl3zxn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint cmdargs filepath haxr HDBC HDBC-sqlite3 hsini HTTP
         mtl regex-compat tagsoup time
       ];
       description = "Tool to track security alerts on LWN";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "latest-npm-version" = callPackage
    ({ mkDerivation, aeson, cmdargs, hspec, http-client, http-types
     , lens, network, pipes, pipes-attoparsec, pipes-bytestring
     , pipes-http, text, text-format, transformers
     }:
     mkDerivation {
       pname = "latest-npm-version";
       version = "0.3.1";
       sha256 = "0z6jl0i9d9r4nifyn2h6pk8s3ni5zfmbc4gpaqim3hzzbh6kqrn0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson cmdargs http-client http-types lens network pipes
         pipes-attoparsec pipes-bytestring pipes-http text text-format
         transformers
       ];
       testDepends = [
         aeson hspec http-client http-types lens network pipes
         pipes-attoparsec pipes-bytestring pipes-http text text-format
         transformers
       ];
       homepage = "https://github.com/passy/latest-npm-version";
       description = "Find the latest version of a package on npm";
       license = stdenv.lib.licenses.mit;
     }) {};

  "latex" = callPackage
    ({ mkDerivation, utility-ht }:
     mkDerivation {
       pname = "latex";
       version = "0.1.0.3";
       sha256 = "1linwqab6z2s91vdxr874vk7rg7gv1ckabsxwmlr80gnhdfgyhmp";
       buildDepends = [ utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/LaTeX";
       description = "Parse, format and process LaTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lattices" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lattices";
       version = "1.2.1.1";
       sha256 = "0ppqvc3w7v56zya43b3fqwis50c8b57hlighzmk8jphv39y3ilp6";
       description = "Fine-grained library for constructing and manipulating lattices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "launchpad-control" = callPackage
    ({ mkDerivation, hmidi, mtl, transformers }:
     mkDerivation {
       pname = "launchpad-control";
       version = "0.0.1.0";
       sha256 = "0lbrrm5wfi3vgmvba9rvbzq78idq6z98psjfh5scjp8hg0qbf8q2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hmidi mtl transformers ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "High and low-level interface to the Novation Launchpad midi controller";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lax" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lax";
       version = "0.1.0.3";
       sha256 = "12f0k2545nk50cvs3gd41dhsfls19xkhvn3avhmgx69y57mhalcy";
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/lax";
       description = "Lax arrows";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "layers" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "layers";
       version = "0.1";
       sha256 = "1yn8swgxb908wslcnh04919m9rzy47dxgawns89zw5v1gbq3wmdf";
       buildDepends = [ transformers ];
       homepage = "http://github.com/duairc/layers";
       description = "Modular type class machinery for monad transformer stacks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "layers-game" = callPackage
    ({ mkDerivation, cmdargs, composition, data-lens, Gamgine, GLFW-b
     , ListZipper, mtl, OpenGLRaw, pretty-show
     }:
     mkDerivation {
       pname = "layers-game";
       version = "0.4.3";
       sha256 = "1diisylvg78md3bcfx2jwh2w3sbp3ka76v93i5cjf54dv3fh97ax";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs composition data-lens Gamgine GLFW-b ListZipper mtl
         OpenGLRaw pretty-show
       ];
       description = "A prototypical 2d platform game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "layout" = callPackage
    ({ mkDerivation, convertible, hinduce-missingh }:
     mkDerivation {
       pname = "layout";
       version = "0.0.0.1";
       sha256 = "04075x2f646ifaw9pxi5s6avp1vis1j524w9a2m3apyrz583cj0g";
       buildDepends = [ convertible hinduce-missingh ];
       description = "Turn values into pretty text or markup";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "layout-bootstrap" = callPackage
    ({ mkDerivation, blaze-html, text }:
     mkDerivation {
       pname = "layout-bootstrap";
       version = "0.2.2";
       sha256 = "0rm0w5l4g865ais4rg3vdfx6fyzp1dginlhlabvqclbjwwzkiyqi";
       buildDepends = [ blaze-html text ];
       homepage = "https://bitbucket.org/dpwiz/layout-bootstrap";
       description = "Template and widgets for Bootstrap2 to use with Text.Blaze.Html5";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lazy-csv" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lazy-csv";
       version = "0.5";
       sha256 = "0xm5j3why2wfajcn7r8my63ranq2mm7jlj15dj153n2izgvd1dh0";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://code.haskell.org/lazy-csv";
       description = "Efficient lazy parsers for CSV (comma-separated values)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lazy-io" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lazy-io";
       version = "0.1.0";
       sha256 = "0fbvm8wwvp4xm4rq2mdfnrra7c88dps91j7ay2vn7iqmpdkcwly9";
       homepage = "https://github.com/kawu/lazy-io";
       description = "Lazy IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lazyarray" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lazyarray";
       version = "0.1.3";
       sha256 = "0bc2n7x8fydmzc84yb5zbdaca1r4qwpk7zlvbgcycycr87fk7p7n";
       description = "Efficient implementation of lazy monolithic arrays (lazy in indexes)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lazyio" = callPackage
    ({ mkDerivation, transformers, unsafe }:
     mkDerivation {
       pname = "lazyio";
       version = "0.1.0.1";
       sha256 = "16cl1yifcmfywqc7kgz9kmp0x6s4300ccgmcrzr4j4jgwcgl38bc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ transformers unsafe ];
       homepage = "http://www.haskell.org/haskellwiki/Lazy_IO";
       description = "Run IO actions lazily while respecting their order";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lazysmallcheck" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lazysmallcheck";
       version = "0.6";
       sha256 = "0lqggm75m1qd34lzqj3ibvnjwhjqvq16cab8zxm4yzn7j2sxzm4x";
       homepage = "http://www.cs.york.ac.uk/~mfn/lazysmallcheck/";
       description = "A library for demand-driven testing of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lazysplines" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lazysplines";
       version = "0.1";
       sha256 = "08zpr5bsqgfk3f5v8133zgdprl22n09l60b31xzadcdy50zmnif1";
       description = "Differential solving with lazy splines";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lbfgs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lbfgs";
       version = "0.0.3";
       sha256 = "1rsdaphlzjhgzvdsd3m90sk8yv32321ys3cqmahd2d0bycsaiskp";
       description = "L-BFGS optimization";
       license = "unknown";
     }) {};

  "lca" = callPackage
    ({ mkDerivation, doctest }:
     mkDerivation {
       pname = "lca";
       version = "0.2.4";
       sha256 = "0dj7qz5wnrgqipmxim8y8jwgkwn8skkqxbd2w2kiy9s380pfdbsi";
       testDepends = [ doctest ];
       homepage = "http://github.com/ekmett/lca/";
       description = "O(log n) persistent on-line lowest common ancestor calculation without preprocessing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lcs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lcs";
       version = "0.2";
       sha256 = "1w8z80vqb86zl6ap4nd87kpl91qms8310k1d8r6qrxg2skm6gnxl";
       homepage = "http://urchin.earth.li/~ian/cabal/lcs/";
       description = "Find longest common sublist of two lists";
       license = "unknown";
     }) {};

  "lda" = callPackage
    ({ mkDerivation, mtl, random-fu, random-source, rvar, vector }:
     mkDerivation {
       pname = "lda";
       version = "0.0.2";
       sha256 = "125y7syfpwg6356h4rq34k45h115ywbz9yisvd741jf6aij23is2";
       buildDepends = [ mtl random-fu random-source rvar vector ];
       homepage = "https://bitbucket.org/gchrupala/colada";
       description = "Online Latent Dirichlet Allocation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ldif" = callPackage
    ({ mkDerivation, cmdargs, filepath, HUnit, parsec, rosezipper }:
     mkDerivation {
       pname = "ldif";
       version = "0.0.13";
       sha256 = "0mf0cvjzgimrqf80g6hg75azv18930g5mrvjjxw70116mdpp718a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs filepath parsec rosezipper ];
       testDepends = [ HUnit ];
       homepage = "http://rampa.sk/static/ldif.html";
       description = "The LDAP Data Interchange Format (LDIF) tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "leaf" = callPackage
    ({ mkDerivation, blaze-html, filepath, pandoc, split }:
     mkDerivation {
       pname = "leaf";
       version = "1.0.1.1";
       sha256 = "1czk4d2xa2g7djdz669h1q6ciflzwxm4n05m9jv3d3z7r6fcch6z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ blaze-html filepath pandoc split ];
       homepage = "https://github.com/skypers/leaf";
       description = "A simple portfolio generator";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "leankit-api" = callPackage
    ({ mkDerivation, aeson, colour, curl, split }:
     mkDerivation {
       pname = "leankit-api";
       version = "0.4";
       sha256 = "14ax9w72cdmbsgy879mwwi2g0345xzfvivrq8b7ngkr8dyfp72r7";
       buildDepends = [ aeson colour curl split ];
       description = "LeanKit API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "leapseconds-announced" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "leapseconds-announced";
       version = "2012";
       sha256 = "1yfd53fqby42shmwzb2zzia4wwaaczhd9m789s2gs0bhv9ydmanh";
       buildDepends = [ time ];
       description = "Leap seconds announced at library release time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "learn" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "learn";
       version = "0.1.1";
       sha256 = "1i2rn4pmgbqxj0xsjqp5rh50lv6zgnblbjgwmqh5cxb3dsillvpj";
       description = "Learning Algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "learn-physics" = callPackage
    ({ mkDerivation, gloss, gnuplot, not-gloss, spatial-math
     , vector-space
     }:
     mkDerivation {
       pname = "learn-physics";
       version = "0.5";
       sha256 = "0bh7p0pp4pspb5m4bfab5z3sfrywlw59yc7w11sa6ax29q9r9faq";
       buildDepends = [
         gloss gnuplot not-gloss spatial-math vector-space
       ];
       description = "Haskell code for learning physics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "learn-physics-examples" = callPackage
    ({ mkDerivation, gloss, gnuplot, learn-physics, not-gloss
     , spatial-math
     }:
     mkDerivation {
       pname = "learn-physics-examples";
       version = "0.5.0.1";
       sha256 = "0fwmc7q59srasciijd7ws1bqay4cc7jhi1469my67kchg0n45q3k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         gloss gnuplot learn-physics not-gloss spatial-math
       ];
       description = "examples for learn-physics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "learning-hmm" = callPackage
    ({ mkDerivation, deepseq, hmatrix, random-fu, random-source, vector
     }:
     mkDerivation {
       pname = "learning-hmm";
       version = "0.3.0.1";
       sha256 = "1cwiv96d655bz591gw7hgciwlh801k661llfbzp5ilf5rirzy0g1";
       buildDepends = [ deepseq hmatrix random-fu random-source vector ];
       homepage = "https://github.com/mnacamura/learning-hmm";
       description = "Yet another library for hidden Markov models";
       license = stdenv.lib.licenses.mit;
     }) {};

  "leetify" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "leetify";
       version = "0.1.0.1";
       sha256 = "106pr7rlma67dqqyfhknh9fb6r37lsj00qjx1dq3xx7yxp368nvr";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://github.com/phaazon/leetify";
       description = "Leetify text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "leksah" = callPackage
    ({ mkDerivation, binary, binary-shared, blaze-html, Cabal, conduit
     , deepseq, executable-path, filepath, ghcjs-codemirror, ghcjs-dom
     , gio, glib, gtk3, gtksourceview3, hamlet, haskell-src-exts, hlint
     , hslogger, jsaddle, leksah-server, lens, ltk, monad-loops, mtl
     , network, network-uri, parsec, pretty-show, QuickCheck, regex-base
     , regex-tdfa, regex-tdfa-text, shakespeare, strict, text, time
     , transformers, utf8-string, vado, vcsgui, vcswrapper, webkitgtk3
     , webkitgtk3-javascriptcore
     }:
     mkDerivation {
       pname = "leksah";
       version = "0.14.3.0";
       sha256 = "066k2lnij26lamim3948hm2ck893pyg981zdiaqqn6y06n22imxq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary binary-shared blaze-html Cabal conduit deepseq
         executable-path filepath ghcjs-codemirror ghcjs-dom gio glib gtk3
         gtksourceview3 hamlet haskell-src-exts hlint hslogger jsaddle
         leksah-server lens ltk mtl network network-uri parsec pretty-show
         QuickCheck regex-base regex-tdfa regex-tdfa-text shakespeare strict
         text time transformers utf8-string vado vcsgui vcswrapper
         webkitgtk3 webkitgtk3-javascriptcore
       ];
       testDepends = [
         Cabal glib gtk3 gtksourceview3 hslogger leksah-server ltk
         monad-loops QuickCheck text transformers webkitgtk3
       ];
       homepage = "http://www.leksah.org";
       description = "Haskell IDE written in Haskell";
       license = "GPL";
     }) {};

  "leksah-server" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, binary
     , binary-shared, Cabal, conduit, conduit-extra, deepseq
     , executable-path, filepath, haddock, hslogger, HTTP, HUnit, ltk
     , network, network-uri, parsec, process-leksah, resourcet, strict
     , text, time, transformers
     }:
     mkDerivation {
       pname = "leksah-server";
       version = "0.14.3.0";
       sha256 = "0nw2cp5sff91grryizsm8ziv63075y0vfdmn29ksim2g5k81az0v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec attoparsec-conduit binary binary-shared Cabal conduit
         conduit-extra deepseq executable-path filepath haddock hslogger
         HTTP ltk network network-uri parsec process-leksah resourcet strict
         text time transformers
       ];
       testDepends = [
         conduit conduit-extra hslogger HUnit resourcet transformers
       ];
       homepage = "http://leksah.org";
       description = "Metadata collection for leksah";
       license = "GPL";
     }) {};

  "lens" = callPackage
    ({ mkDerivation, bifunctors, comonad, contravariant, deepseq
     , distributive, doctest, exceptions, filepath, free
     , generic-deriving, hashable, hlint, HUnit, mtl, nats, parallel
     , primitive, profunctors, QuickCheck, reflection, semigroupoids
     , semigroups, simple-reflect, split, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, text, transformers, transformers-compat
     , unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "lens";
       version = "4.6.0.1";
       sha256 = "099hhkca39zxfj9xavd2rafzgm2r4nm8clngcsgcrn1qsy8knvz2";
       buildDepends = [
         bifunctors comonad contravariant distributive exceptions filepath
         free hashable mtl parallel primitive profunctors reflection
         semigroupoids semigroups split tagged text transformers
         transformers-compat unordered-containers vector void
       ];
       testDepends = [
         deepseq doctest filepath generic-deriving hlint HUnit mtl nats
         parallel QuickCheck semigroups simple-reflect split test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         text transformers unordered-containers vector
       ];
       homepage = "http://github.com/ekmett/lens/";
       description = "Lenses, Folds and Traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, doctest, filepath
     , generic-deriving, lens, scientific, semigroups, simple-reflect
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "lens-aeson";
       version = "1.0.0.3";
       sha256 = "0wfbnazarwcza5dn3icsdvsmkyf9ki5lr5d5yidmgijhs63ak7ac";
       buildDepends = [
         aeson attoparsec lens scientific text unordered-containers vector
       ];
       testDepends = [
         doctest filepath generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/lens/lens-aeson/";
       description = "Law-abiding lenses for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-datetime" = callPackage
    ({ mkDerivation, lens, time }:
     mkDerivation {
       pname = "lens-datetime";
       version = "0.2.1";
       sha256 = "1wqks7ynw3njlizdd9hvgrc1xjxcgcfck9ppj1lgg8wr3l2myi72";
       buildDepends = [ lens time ];
       homepage = "http://github.com/nilcons/lens-datetime";
       description = "Lenses for Data.Time.* types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-family" = callPackage
    ({ mkDerivation, lens-family-core, mtl, transformers }:
     mkDerivation {
       pname = "lens-family";
       version = "1.2.0";
       sha256 = "0pbyx43ajx96nhcw4brml1r5azs1041k7nv4m94ak6x77n5sr4mb";
       buildDepends = [ lens-family-core mtl transformers ];
       description = "Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-family-core" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "lens-family-core";
       version = "1.2.0";
       sha256 = "0hxrbbc4azfafnr4ab2zxgic093wwg6gx5h1ggp4xks55d8rhraz";
       buildDepends = [ transformers ];
       description = "Haskell 98 Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-family-th" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lens-family-th";
       version = "0.4.0.0";
       sha256 = "02fc3kppb7y2c6j22wi2mzcxffj4k3dl3x09vjllqchfpfcpwbm5";
       homepage = "http://github.com/DanBurton/lens-family-th#readme";
       description = "Generate lens-family style lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-properties" = callPackage
    ({ mkDerivation, lens, QuickCheck, transformers }:
     mkDerivation {
       pname = "lens-properties";
       version = "4.0";
       sha256 = "07hjkcy90m1zph2bq5a7nw2f7xg0ndnkqml9zwh7vy35sb7512c6";
       buildDepends = [ lens QuickCheck transformers ];
       homepage = "http://github.com/ekmett/lens/";
       description = "QuickCheck properties for lens";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-sop" = callPackage
    ({ mkDerivation, fclabels, generics-sop, transformers }:
     mkDerivation {
       pname = "lens-sop";
       version = "0.1.0.2";
       sha256 = "1b56q8qsg3w5gzra7bjf76mqinv8vpjrb6any7c3wdpjgvssly56";
       buildDepends = [ fclabels generics-sop transformers ];
       description = "Computing lenses generically using generics-sop";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lens-text-encoding" = callPackage
    ({ mkDerivation, lens, text }:
     mkDerivation {
       pname = "lens-text-encoding";
       version = "0.1.0.0";
       sha256 = "1yxab87ci6gl0c5gsdd8pb780ai8lmxxa3fxkpl1shv1pw124fsv";
       buildDepends = [ lens text ];
       homepage = "http://github.com/iand675/text-lens-encoding";
       description = "Isomorphisms and prisms for text <=> bytestring conversions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lens-time" = callPackage
    ({ mkDerivation, lens, time }:
     mkDerivation {
       pname = "lens-time";
       version = "0.1.0.0";
       sha256 = "1hrp9d6qja7yc3zj68w3hylgflyfsvh79m8daw9030yjdxm525za";
       buildDepends = [ lens time ];
       description = "lens for Data.Time";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lenses" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "lenses";
       version = "0.1.6";
       sha256 = "0n2r7gjiq5vk6jjaxn7kr3g5gvn4y0gmdqpn9l0nfgqdnscmfbiv";
       buildDepends = [ mtl ];
       homepage = "http://github.com/jvranish/Lenses/tree/master";
       description = "Simple Functional Lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lensref" = callPackage
    ({ mkDerivation, monad-control, mtl, transformers }:
     mkDerivation {
       pname = "lensref";
       version = "0.2";
       sha256 = "0dj43hqrv198dgfnngq4l8kwnksqcm6nydcr1z1a5gqz5s99m4bn";
       buildDepends = [ monad-control mtl transformers ];
       homepage = "http://www.haskell.org/haskellwiki/LGtk";
       description = "References which can be joined and on which lenses can be applied";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "level-monad" = callPackage
    ({ mkDerivation, fmlist }:
     mkDerivation {
       pname = "level-monad";
       version = "0.4.1";
       sha256 = "1l5jyhpvbcj4fmyggp8bjy4gx9igcydply3yb1s23fxdcz0b638a";
       buildDepends = [ fmlist ];
       homepage = "http://github.com/sebfisch/level-monad";
       description = "Non-Determinism Monad for Level-Wise Search";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "leveldb-haskell" = callPackage
    ({ mkDerivation, async, data-default, exceptions, filepath, leveldb
     , mtl, QuickCheck, resourcet, snappy, tasty, tasty-quickcheck
     , temporary, transformers
     }:
     mkDerivation {
       pname = "leveldb-haskell";
       version = "0.6";
       sha256 = "1r76dvn8scnjfdw1i5cj3s5s1nqf2yib4jdydjnr8p6c8yvpp3z5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async data-default exceptions filepath resourcet transformers
       ];
       testDepends = [
         data-default exceptions mtl QuickCheck tasty tasty-quickcheck
         temporary transformers
       ];
       extraLibraries = [ leveldb snappy ];
       homepage = "http://github.com/kim/leveldb-haskell";
       description = "Haskell bindings to LevelDB";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) snappy; };

  "leveldb-haskell-fork" = callPackage
    ({ mkDerivation, async, data-default, filepath, hspec
     , hspec-expectations, hyperleveldb, mtl, QuickCheck, resourcet
     , transformers
     }:
     mkDerivation {
       pname = "leveldb-haskell-fork";
       version = "0.3.4.1";
       sha256 = "18wxws6lx65p4m78d6bvxailwna2av3imd53ymv5q5kwh0ndrw73";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async data-default filepath resourcet transformers
       ];
       testDepends = [
         data-default hspec hspec-expectations mtl QuickCheck transformers
       ];
       extraLibraries = [ hyperleveldb ];
       homepage = "http://github.com/kim/leveldb-haskell";
       description = "Haskell bindings to LevelDB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "levmar" = callPackage
    ({ mkDerivation, base-unicode-symbols, bindings-levmar, hmatrix
     , vector
     }:
     mkDerivation {
       pname = "levmar";
       version = "1.2.1.4";
       sha256 = "1h24admb7lgagfwr3j53jyns97whpr0xi2ra8lgbyfzbj3gpls2m";
       buildDepends = [
         base-unicode-symbols bindings-levmar hmatrix vector
       ];
       homepage = "https://github.com/basvandijk/levmar";
       description = "An implementation of the Levenberg-Marquardt algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "levmar-chart" = callPackage
    ({ mkDerivation, Chart, colour, data-accessor, levmar, random }:
     mkDerivation {
       pname = "levmar-chart";
       version = "0.2";
       sha256 = "0ws9d2ipk67ir4b31rd7vakyglhrr290k400zpb24ny3vvdgcwaj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Chart colour data-accessor levmar random ];
       description = "Plots the results of the Levenberg-Marquardt algorithm in a chart";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lgtk" = callPackage
    ({ mkDerivation, cairo, colour, diagrams-cairo, diagrams-lib
     , filepath, fsnotify, GLFW-b, groups, lens, lensref, monad-control
     , mtl, OpenGLRaw, operational, random, random-shuffle, semigroups
     , system-filepath, transformers, vector
     }:
     mkDerivation {
       pname = "lgtk";
       version = "0.8.0.4";
       sha256 = "1bph09i8znzv3c8sqbg2xbrdlpvlnx52psgyybwn0imqip81lmv5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo colour diagrams-cairo diagrams-lib filepath fsnotify GLFW-b
         groups lens lensref monad-control mtl OpenGLRaw operational random
         random-shuffle semigroups system-filepath transformers vector
       ];
       homepage = "http://www.haskell.org/haskellwiki/LGtk";
       description = "Lens GUI Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lha" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lha";
       version = "0.1.2";
       sha256 = "0a5h1d0sdnpy209k4zkmcrrxl4b000226hif098bqs9pngpbgki1";
       homepage = "https://github.com/bytbox/lha.hs";
       description = "Data structures for the Les Houches Accord";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lhae" = callPackage
    ({ mkDerivation, filepath, hgettext, mtl, parsec, setlocale
     , utf8-string, wx, wxcore
     }:
     mkDerivation {
       pname = "lhae";
       version = "0.0.3";
       sha256 = "120g8x0wbd5va2gqvkr5mx643g8r4hrfyqa68nm3apvfc9z7f8g3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath hgettext mtl parsec setlocale utf8-string wx wxcore
       ];
       homepage = "http://www.imn.htwk-leipzig.de/~abau/lhae";
       description = "Simple spreadsheet program";
       license = "GPL";
     }) {};

  "lhc" = callPackage
    ({ mkDerivation, ansi-wl-pprint, binary, bytestring-trie, Cabal
     , core, derive, digest, extensible-exceptions, filepath, HUnit, mtl
     , parallel, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck, time, xhtml
     }:
     mkDerivation {
       pname = "lhc";
       version = "0.10";
       sha256 = "1x50k6lx9p36qxl0qn9zfyqlkgsq3wdzvcv7l6sn920hg5scvcr3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint binary bytestring-trie Cabal core derive digest
         extensible-exceptions filepath HUnit mtl parallel QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck time
         xhtml
       ];
       homepage = "http://lhc.seize.it/";
       description = "LHC Haskell Compiler";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "lhe" = callPackage
    ({ mkDerivation, HaXml, lha }:
     mkDerivation {
       pname = "lhe";
       version = "0.5";
       sha256 = "08725r5i71ni9ip4qbc5fr111j256rsii936yvxbd7kbbw4ap2a9";
       buildDepends = [ HaXml lha ];
       description = "Parser and writer for Les-Houches event files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lhs2TeX-hl" = callPackage
    ({ mkDerivation, cmdargs, filepath, haskell-src-exts, syb
     , uu-parsinglib
     }:
     mkDerivation {
       pname = "lhs2TeX-hl";
       version = "0.1.4.5";
       sha256 = "1mm6ikiv6zj025yh5abq3f8mqkw9302mfzd01xcihbh74bsdpi9l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs filepath haskell-src-exts syb uu-parsinglib
       ];
       homepage = "http://spockz.github.com/lhs2texhl/";
       description = "Literate highlighter preprocessor for lhs2tex";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lhs2html" = callPackage
    ({ mkDerivation, filepath, Glob, nicify }:
     mkDerivation {
       pname = "lhs2html";
       version = "0.99999";
       sha256 = "1znqqgbg64r790c74ggzdffkgw9i8xg86wf9pk029q02fw67b7nb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath Glob nicify ];
       description = "Compile lhs in bird style to md, html, hs";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "lhs2tex" = callPackage
    ({ mkDerivation, filepath, mtl, regex-compat, texLive }:
     mkDerivation {
       pname = "lhs2tex";
       version = "1.18.1";
       sha256 = "0j4n7vkabsggn94gbwixy1vmckdck2nggdiqvk6n9nx164if5jnw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl regex-compat ];
       extraLibraries = [ texLive ];
       postInstall = ''
         mkdir -p "$out/share/doc/$name"
         cp doc/Guide2.pdf $out/share/doc/$name
         mkdir -p "$out/nix-support"
       '';
       homepage = "http://www.andres-loeh.de/lhs2tex/";
       description = "Preprocessor for typesetting Haskell sources with LaTeX";
       license = "GPL";
     }) {};

  "lhslatex" = callPackage
    ({ mkDerivation, filepath, regex-posix }:
     mkDerivation {
       pname = "lhslatex";
       version = "0.1.0.0";
       sha256 = "0kgmx160i1rylgzh23qlg8ds0sq64yk1i3rah8kmgwabpnvds7f7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath regex-posix ];
       homepage = "https://github.com/tvh/lhslatex";
       description = "Tool for using pdflatex with .lhs files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libGenI" = callPackage
    ({ mkDerivation, binary, HUnit, mtl, parsec, QuickCheck }:
     mkDerivation {
       pname = "libGenI";
       version = "0.16.1";
       sha256 = "1n37pccmx0466425zcbdfpgivsrnqzwsm0nwcjv8lkg8jxjxrwmz";
       buildDepends = [ binary HUnit mtl parsec QuickCheck ];
       homepage = "http://trac.loria.fr/~geni";
       description = "A natural language generator (specifically, an FB-LTAG surface realiser)";
       license = "GPL";
     }) {};

  "libarchive-conduit" = callPackage
    ({ mkDerivation, archive, conduit, resourcet, transformers }:
     mkDerivation {
       pname = "libarchive-conduit";
       version = "0.1.0.0";
       sha256 = "022fnxxwz44cjzcldk3yg1xs77xqnrvkr9bv6hi7kdy120dk4p04";
       buildDepends = [ conduit resourcet transformers ];
       extraLibraries = [ archive ];
       description = "Read many archive formats with libarchive and conduit";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) archive; };

  "libcspm" = callPackage
    ({ mkDerivation, deepseq, filepath, graph-wrapper, hashable
     , hashtables, mtl, test-framework, text, value-supply
     }:
     mkDerivation {
       pname = "libcspm";
       version = "1.0.0";
       sha256 = "1v8w8i871a0fjyjqb8hr4yk9wli5v7djfpyjgg14rjb26v6yq79v";
       buildDepends = [
         deepseq filepath graph-wrapper hashable hashtables mtl text
         value-supply
       ];
       testDepends = [ filepath mtl test-framework ];
       homepage = "https://github.com/tomgr/libcspm";
       description = "A library providing a parser, type checker and evaluator for CSPM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libexpect" = callPackage
    ({ mkDerivation, expect, tcl }:
     mkDerivation {
       pname = "libexpect";
       version = "0.3.2";
       sha256 = "0xpsc9a16biqg4z9b9wk9wqz6ypshw99xrksnxi8nlh3qn98lrsc";
       extraLibraries = [ expect tcl ];
       description = "Library for interacting with console applications via pseudoterminals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libffi" = callPackage
    ({ mkDerivation, libffi }:
     mkDerivation {
       pname = "libffi";
       version = "0.1";
       sha256 = "0g7jnhng3j7z5517aaqga0144aamibsbpgm3yynwyfzkq1kp0f28";
       pkgconfigDepends = [ libffi ];
       description = "A binding to libffi";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) libffi; };

  "libgit" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "libgit";
       version = "0.3.0";
       sha256 = "0k2287d84s0p73md1mfcyg1qy1l5ncgrvmkaa7607d8zlk9b8ci6";
       buildDepends = [ mtl ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "Simple Git Wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libgraph" = callPackage
    ({ mkDerivation, monads-tf, union-find }:
     mkDerivation {
       pname = "libgraph";
       version = "1.3";
       sha256 = "0lj7nm7wifdakm11qa7ff7apsk0r2i426vv5ykbwl36l64085jkf";
       buildDepends = [ monads-tf union-find ];
       homepage = "http://maartenfaddegon.nl";
       description = "Store and manipulate data in a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libhbb" = callPackage
    ({ mkDerivation, aeson, filepath, ghc-paths, hspec, mtl, syb, text
     , time, unordered-containers
     }:
     mkDerivation {
       pname = "libhbb";
       version = "0.4.1.0";
       sha256 = "17wycfnp1f288fxq3vd9c206gcard3n59s0a0myy0hkl6xy281s8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson filepath ghc-paths mtl syb text time unordered-containers
       ];
       testDepends = [ ghc-paths hspec mtl syb ];
       homepage = "https://bitbucket.org/bhris/libhbb";
       description = "Backend for text editors to provide better Haskell editing support";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "libjenkins" = callPackage
    ({ mkDerivation, async, attoparsec, doctest, filepath, free, hspec
     , hspec-expectations-lens, http-client, http-client-tls, http-types
     , lens, lifted-async, lifted-base, monad-control, mtl, network
     , network-uri, profunctors, text, transformers, xml-conduit
     }:
     mkDerivation {
       pname = "libjenkins";
       version = "0.7.0";
       sha256 = "1m7v5c2g9gi99ld0vqv7qyzb3hrlv44i97qh138vspv2zxvd103y";
       buildDepends = [
         attoparsec free http-client http-client-tls http-types lifted-async
         lifted-base monad-control mtl network network-uri profunctors text
         transformers
       ];
       testDepends = [
         async attoparsec doctest filepath free hspec
         hspec-expectations-lens http-client http-client-tls http-types lens
         lifted-async lifted-base monad-control mtl network network-uri
         profunctors text transformers xml-conduit
       ];
       description = "Jenkins API interface";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "liblastfm" = callPackage
    ({ mkDerivation, aeson, cereal, crypto-api, hspec
     , hspec-expectations-lens, http-client, http-client-tls, HUnit
     , lens, lens-aeson, network-uri, profunctors, pureMD5, semigroups
     , text, xml-conduit, xml-html-conduit-lens
     }:
     mkDerivation {
       pname = "liblastfm";
       version = "0.5.1";
       sha256 = "1bf508a1rqjb486wcwn0n36bm8lwnj3b4bg0826lp92zmaxiyxpy";
       buildDepends = [
         aeson cereal crypto-api http-client http-client-tls network-uri
         profunctors pureMD5 semigroups text xml-conduit
       ];
       testDepends = [
         aeson cereal crypto-api hspec hspec-expectations-lens http-client
         http-client-tls HUnit lens lens-aeson network-uri profunctors
         pureMD5 text xml-conduit xml-html-conduit-lens
       ];
       description = "Lastfm API interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "liblinear-enumerator" = callPackage
    ({ mkDerivation, bindings-DSL, enumerator, mtl, vector }:
     mkDerivation {
       pname = "liblinear-enumerator";
       version = "0.1.2";
       sha256 = "19x0y70fn2pr06qsz4z6s67sym7dw5x3qa3z6jf3nmwncsy64qi2";
       buildDepends = [ bindings-DSL enumerator mtl vector ];
       homepage = "http://github.com/NathanHowell/liblinear-enumerator";
       description = "liblinear iteratee";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libltdl" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "libltdl";
       version = "0.1.0.3";
       sha256 = "05a4l841w20l4a0wmbp93bb1vc4kmnbcv7pmnym5hrrd7daj2vzr";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.eecs.harvard.edu/~mainland/projects/libffi";
       description = "FFI interface to libltdl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libmpd" = callPackage
    ({ mkDerivation, attoparsec, data-default, filepath, hspec, mtl
     , network, QuickCheck, text, time, utf8-string
     }:
     mkDerivation {
       pname = "libmpd";
       version = "0.9.0.1";
       sha256 = "11smm8ai7053hljlxi5l2fkqxrqr1xrh6sxg2r0dlsvmmln7smrd";
       buildDepends = [
         attoparsec data-default filepath mtl network text time utf8-string
       ];
       testDepends = [
         attoparsec data-default filepath hspec mtl network QuickCheck text
         time utf8-string
       ];
       homepage = "http://github.com/vimus/libmpd-haskell#readme";
       description = "An MPD client library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "libnotify" = callPackage
    ({ mkDerivation, glib, gtk, notify }:
     mkDerivation {
       pname = "libnotify";
       version = "0.1.1.0";
       sha256 = "1wc19v14agadj7dzi81lm3qzk2x33apaj5ylmg7x232k56xzfvr0";
       buildDepends = [ glib gtk ];
       extraLibraries = [ notify ];
       description = "Bindings to libnotify library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "libnvvm" = callPackage
    ({ mkDerivation, c2hs, Cabal, cuda, HUnit, nvvm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "libnvvm";
       version = "1.0.0";
       sha256 = "00vblp869zyk8gr33b846rnvn9axlsbldhx1gkj14xgrlyambdmx";
       buildDepends = [ cuda ];
       testDepends = [ Cabal HUnit test-framework test-framework-hunit ];
       buildTools = [ c2hs ];
       extraLibraries = [ nvvm ];
       homepage = "https://github.com/nvidia-compiler-sdk/hsnvvm";
       description = "FFI binding to libNVVM, a compiler SDK component from NVIDIA";
       license = stdenv.lib.licenses.mit;
     }) {};

  "liboleg" = callPackage
    ({ mkDerivation, CC-delcont, mtl }:
     mkDerivation {
       pname = "liboleg";
       version = "2010.1.10.0";
       sha256 = "1lv0il1psy8bfdxc76ivc5nlwga4m475gys1g0ia3wacdksgs7a6";
       buildDepends = [ CC-delcont mtl ];
       homepage = "http://okmij.org/ftp/";
       description = "An evolving collection of Oleg Kiselyov's Haskell modules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libpq" = callPackage
    ({ mkDerivation, postgresql }:
     mkDerivation {
       pname = "libpq";
       version = "0.4.1";
       sha256 = "11s8zaxq7qwzqdgyfd3v7sk6vf5cq3wzv2j02g0gnri9w45wf2i7";
       extraLibraries = [ postgresql ];
       homepage = "http://github.com/tnarg/haskell-libpq";
       description = "libpq binding for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "librandomorg" = callPackage
    ({ mkDerivation, curl }:
     mkDerivation {
       pname = "librandomorg";
       version = "0.0.1.0";
       sha256 = "07xg59f48jw78mjbx83bz1rc2fxvdnlb08cdfd7hwkj43a127kxn";
       buildDepends = [ curl ];
       homepage = "https://github.com/supki/haskell-random.org";
       description = "Wrapper to Random.org API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "librato" = callPackage
    ({ mkDerivation, aeson, attoparsec, either, http-client
     , http-conduit, http-types, mtl, resourcet, text
     , unordered-containers, uri-templater, vector
     }:
     mkDerivation {
       pname = "librato";
       version = "0.2.0.1";
       sha256 = "1l0q8kx0v563glplz5blg5scnvwf1aak04w08abxkrbfdjq6a8z4";
       buildDepends = [
         aeson attoparsec either http-client http-conduit http-types mtl
         resourcet text unordered-containers uri-templater vector
       ];
       homepage = "https://github.com/SaneTracker/librato";
       description = "Bindings to the Librato API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "libssh2" = callPackage
    ({ mkDerivation, c2hs, libssh2, network, ssh2, syb, time }:
     mkDerivation {
       pname = "libssh2";
       version = "0.2.0.3";
       sha256 = "0xfdhszz4j98spmzwxwcjnm3kzjkg76bwszmky0lmx9zmqirzakw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network syb time ];
       buildTools = [ c2hs ];
       extraLibraries = [ ssh2 ];
       pkgconfigDepends = [ libssh2 ];
       homepage = "https://github.com/portnov/libssh2-hs";
       description = "FFI bindings to libssh2 SSH2 client library (http://libssh2.org/)";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) libssh2; };

  "libssh2-conduit" = callPackage
    ({ mkDerivation, conduit, libssh2, monad-control, stm, transformers
     }:
     mkDerivation {
       pname = "libssh2-conduit";
       version = "0.1";
       sha256 = "1zpcj6qwc4kpdcgdqlzspzwz99a990f3r5wpl13l54j8c1g0kc8h";
       buildDepends = [ conduit libssh2 monad-control stm transformers ];
       homepage = "http://redmine.iportnov.ru/projects/libssh2-hs";
       description = "Conduit wrappers for libssh2 FFI bindings (see libssh2 package)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libstackexchange" = callPackage
    ({ mkDerivation, aeson, attoparsec, data-default, http-conduit
     , profunctors, text
     }:
     mkDerivation {
       pname = "libstackexchange";
       version = "0.3.0.0";
       sha256 = "00v8hmk67dsb0j1bncc06fh46jkz4raf5a796l223mg6x0l3a828";
       buildDepends = [
         aeson attoparsec data-default http-conduit profunctors text
       ];
       homepage = "https://github.com/supki/libstackexchange";
       description = "StackExchange API interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "libsystemd-daemon" = callPackage
    ({ mkDerivation, HUnit, libsystemd-daemon, network, systemd-daemon
     , test-framework, test-framework-hunit, utf8-string
     }:
     mkDerivation {
       pname = "libsystemd-daemon";
       version = "0.1.0.1";
       sha256 = "1rmzyca7ry30d6wvhv3k30jaksa3iw8kzk1rwp6gwclxizsvwgf0";
       buildDepends = [ network utf8-string ];
       testDepends = [
         HUnit network test-framework test-framework-hunit
       ];
       extraLibraries = [ systemd-daemon ];
       pkgconfigDepends = [ libsystemd-daemon ];
       description = "Haskell bindings for libsystemd-daemon";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) libsystemd-daemon; };

  "libsystemd-journal" = callPackage
    ({ mkDerivation, hashable, hsyslog, pipes, pipes-safe, systemd
     , text, transformers, uniplate, unix-bytestring
     , unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "libsystemd-journal";
       version = "1.2.0";
       sha256 = "10gsqcy5f7m6f0giqhfcqspb17b3gyib4cpw5nrdl7hiah13hi7x";
       buildDepends = [
         hashable hsyslog pipes pipes-safe text transformers uniplate
         unix-bytestring unordered-containers uuid vector
       ];
       extraLibraries = [ systemd ];
       homepage = "http://github.com/ocharles/libsystemd-journal";
       description = "Haskell bindings to libsystemd-journal";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) systemd; };

  "libtagc" = callPackage
    ({ mkDerivation, glib, tag_c, taglib_c }:
     mkDerivation {
       pname = "libtagc";
       version = "0.12.0";
       sha256 = "1f7r82cfrkxrqcrxk92y6zhk79qwpack2g67crww5q8hs7438vja";
       buildDepends = [ glib ];
       extraLibraries = [ tag_c ];
       pkgconfigDepends = [ taglib_c ];
       homepage = "https://patch-tag.com/r/AndyStewart/libtagc/home";
       description = "Binding to TagLib C library";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "libvirt-hs" = callPackage
    ({ mkDerivation, c2hs, syb, virt }:
     mkDerivation {
       pname = "libvirt-hs";
       version = "0.1";
       sha256 = "0fgxvzzfw52s4hs838l0sr6lxln4bhqqhzzy6grww2fs27gjpb4c";
       buildDepends = [ syb ];
       buildTools = [ c2hs ];
       extraLibraries = [ virt ];
       homepage = "http://redmine.iportnov.ru/projects/libvirt-hs";
       description = "FFI bindings to libvirt virtualization API (http://libvirt.org)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libvorbis" = callPackage
    ({ mkDerivation, cpu }:
     mkDerivation {
       pname = "libvorbis";
       version = "0.1.0.0";
       sha256 = "1rl8hqbidxj34j3m8nwy32a9fnbzand726zvyljkgpjfkg1mfb2c";
       buildDepends = [ cpu ];
       homepage = "https://github.com/the-real-blackh/libvorbis";
       description = "Haskell binding for libvorbis, for decoding Ogg Vorbis audio files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libxml" = callPackage
    ({ mkDerivation, libxml2, mtl }:
     mkDerivation {
       pname = "libxml";
       version = "0.1.1";
       sha256 = "01zvk86kg726lf2vnlr7dxiz7g3xwi5a4ak9gcfbwyhynkzjmsfi";
       buildDepends = [ mtl ];
       extraLibraries = [ libxml2 ];
       description = "Binding to libxml2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "libxml-enumerator" = callPackage
    ({ mkDerivation, enumerator, libxml-sax, text, transformers
     , xml-types
     }:
     mkDerivation {
       pname = "libxml-enumerator";
       version = "0.5";
       sha256 = "0mqh454w1f3k75kcshdn848ynva938q6xm3a5yzcyf7nflzw75pg";
       buildDepends = [
         enumerator libxml-sax text transformers xml-types
       ];
       homepage = "http://john-millikin.com/software/libxml-enumerator/";
       description = "Enumerator-based API for libXML's SAX interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "libxml-sax" = callPackage
    ({ mkDerivation, libxml2, text, xml-types }:
     mkDerivation {
       pname = "libxml-sax";
       version = "0.7.5";
       sha256 = "0lbdq6lmiyrnzk6gkx09vvp928wj8qnqnqfzy14mfv0drj21f54r";
       buildDepends = [ text xml-types ];
       extraLibraries = [ libxml2 ];
       pkgconfigDepends = [ libxml2 ];
       homepage = "https://john-millikin.com/software/haskell-libxml/";
       description = "Bindings for the libXML2 SAX interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "libxslt" = callPackage
    ({ mkDerivation, libxml, xslt }:
     mkDerivation {
       pname = "libxslt";
       version = "0.1";
       sha256 = "1szz8zkm1w8dbfgix3ii896sc4vljgivcgx8j7vpny4ci9sfmn5a";
       buildDepends = [ libxml ];
       extraLibraries = [ xslt ];
       description = "Binding to libxslt";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) xslt; };

  "life" = callPackage
    ({ mkDerivation, GLUT, OpenGL, random }:
     mkDerivation {
       pname = "life";
       version = "0.1";
       sha256 = "0drsv1d0318yr7a0aa2j6kvsiyl8jj8h4z6wpdnrcyxw6z4qlssq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT OpenGL random ];
       homepage = "http://github.com/sproingie/haskell-cells/";
       description = "Conway's Life cellular automaton";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lifted-async" = callPackage
    ({ mkDerivation, async, HUnit, lifted-base, monad-control, mtl
     , tasty, tasty-hunit, tasty-th, transformers-base
     }:
     mkDerivation {
       pname = "lifted-async";
       version = "0.2.0.2";
       sha256 = "07sqgd3lxplfwrpys4jhz0068sx99765lpx8n4nj3k117z32slgf";
       buildDepends = [
         async lifted-base monad-control transformers-base
       ];
       testDepends = [
         async HUnit lifted-base monad-control mtl tasty tasty-hunit
         tasty-th
       ];
       homepage = "https://github.com/maoe/lifted-async";
       description = "Run lifted IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lifted-base" = callPackage
    ({ mkDerivation, HUnit, monad-control, test-framework
     , test-framework-hunit, transformers, transformers-base
     }:
     mkDerivation {
       pname = "lifted-base";
       version = "0.2.3.3";
       sha256 = "1n015i21pyh1ksrdiy105c9sw3gm3yvmlwv1sajy7nvpxb2xdjc3";
       buildDepends = [ monad-control transformers-base ];
       testDepends = [
         HUnit monad-control test-framework test-framework-hunit
         transformers transformers-base
       ];
       homepage = "https://github.com/basvandijk/lifted-base";
       description = "lifted IO operations from the base library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lifter" = callPackage
    ({ mkDerivation, bitmap, filepath, gloss, mtl, stb-image }:
     mkDerivation {
       pname = "lifter";
       version = "0.1";
       sha256 = "11c0j2mdrp4rvinl4iym9mfsqzh101yb5sf710vm8n7qih1fzcpc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bitmap filepath gloss mtl stb-image ];
       homepage = "http://icfpcontest2012.wordpress.com/";
       description = "A boulderdash-like game and solution validator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ligature" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "ligature";
       version = "0.1.0.0";
       sha256 = "03h30lbhppi9hmpsc8fhsrsad6w9sjs9n53lz76czz3iqaknkcrb";
       buildDepends = [ text ];
       description = "Expand ligatures in unicode text";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ligd" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ligd";
       version = "0.2";
       sha256 = "1hxfx514ar9hr9gqzzdgd7avfvlsvr7lv6hgza5k04b2xm73ysrp";
       homepage = "https://github.com/spl/ligd";
       description = "Lightweight Implementation of Generics and Dynamics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lighttpd-conf" = callPackage
    ({ mkDerivation, alex, happy, packedstring }:
     mkDerivation {
       pname = "lighttpd-conf";
       version = "0.4";
       sha256 = "085msb62wpqyc1sp4zbwbyn70k48p9k9cky9rxn93xm0gjsaydf8";
       buildDepends = [ packedstring ];
       buildTools = [ alex happy ];
       description = "Lighttpd configuration file tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lighttpd-conf-qq" = callPackage
    ({ mkDerivation, haskell-src-exts, lighttpd-conf }:
     mkDerivation {
       pname = "lighttpd-conf-qq";
       version = "0.5";
       sha256 = "1nd30inhh6wzq34rg76lq6m3wp0x3sc0l7jv37gw6dk3dnkwqh6q";
       buildDepends = [ haskell-src-exts lighttpd-conf ];
       description = "A QuasiQuoter for lighttpd configuration files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lilypond" = callPackage
    ({ mkDerivation, data-default, music-dynamics-literal
     , music-pitch-literal, prettify, semigroups, vector-space
     }:
     mkDerivation {
       pname = "lilypond";
       version = "1.8";
       sha256 = "188m2qvv3l30wdhl634dkqvbwxan2dab7ip6cwp5kx5rv19q6sm6";
       buildDepends = [
         data-default music-dynamics-literal music-pitch-literal prettify
         semigroups vector-space
       ];
       description = "Bindings to Lilypond";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "limp" = callPackage
    ({ mkDerivation, QuickCheck, tasty, tasty-quickcheck, tasty-th }:
     mkDerivation {
       pname = "limp";
       version = "0.3.2.0";
       sha256 = "0shc69jlzmn8b2pxdfav9lk9cbhxpd1cmsr36rwgyvyn5shiijy1";
       testDepends = [ QuickCheck tasty tasty-quickcheck tasty-th ];
       homepage = "https://github.com/amosr/limp";
       description = "representation of Integer Linear Programs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "limp-cbc" = callPackage
    ({ mkDerivation, c2hs, limp, vector }:
     mkDerivation {
       pname = "limp-cbc";
       version = "0.3.2.0";
       sha256 = "10cm2vwbjyzqpq2ras8viza0vy0r0hgrm84landlcgkbhfj71l79";
       buildDepends = [ limp vector ];
       testDepends = [ limp ];
       buildTools = [ c2hs ];
       homepage = "https://github.com/amosr/limp-cbc";
       description = "bindings for integer linear programming solver Coin/CBC";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lin-alg" = callPackage
    ({ mkDerivation, NumInstances, vector }:
     mkDerivation {
       pname = "lin-alg";
       version = "0.1.0.2";
       sha256 = "19123k967mql69my6c19mnvp4qwa4b3bgimmlbhipqdljykj7pqc";
       buildDepends = [ NumInstances vector ];
       description = "Low-dimensional matrices and vectors for graphics and physics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linda" = callPackage
    ({ mkDerivation, hmatrix, HUnit }:
     mkDerivation {
       pname = "linda";
       version = "0.1.2";
       sha256 = "0d58i69hvry9vzr4i7f1yhhm99808vqw238hfjc3sr51plc1is45";
       buildDepends = [ hmatrix HUnit ];
       description = "LINear Discriminant Analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "line2pdf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "line2pdf";
       version = "0.0.7";
       sha256 = "0x8kbjjd9i6gp0agdfsfgicj2z1g4jwj7axj4hq01c31wrzb6g95";
       isLibrary = true;
       isExecutable = true;
       description = "Simple command-line utility to convert text into PDF";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linear" = callPackage
    ({ mkDerivation, adjunctions, binary, distributive, doctest
     , filepath, hashable, HUnit, lens, reflection, semigroupoids
     , semigroups, simple-reflect, tagged, test-framework
     , test-framework-hunit, transformers, unordered-containers, vector
     , void
     }:
     mkDerivation {
       pname = "linear";
       version = "1.15.5";
       sha256 = "17fxz49zj6vklgfs583zpn7naqgp5mv2zsvmxrv80ym8r52mp5mi";
       buildDepends = [
         adjunctions binary distributive hashable lens reflection
         semigroupoids semigroups tagged transformers unordered-containers
         vector void
       ];
       testDepends = [
         binary doctest filepath HUnit lens simple-reflect test-framework
         test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/linear/";
       description = "Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linear-accelerate" = callPackage
    ({ mkDerivation, accelerate, lens, linear }:
     mkDerivation {
       pname = "linear-accelerate";
       version = "0.2";
       sha256 = "0433mzw2cswk86nmj3gnygn3d07yq0sbmv2ylxbw8ri35yddjap6";
       buildDepends = [ accelerate lens linear ];
       homepage = "http://github.com/ekmett/linear-accelerate/";
       description = "Instances to use linear vector spaces on accelerate backends";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linear-algebra-cblas" = callPackage
    ({ mkDerivation, ieee754, QuickCheck, storable-complex
     , test-framework, test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "linear-algebra-cblas";
       version = "0.1";
       sha256 = "1wsan17zrlg4kr9dwk23ggfvylignnmg4sa62krri45s925kvh3i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ieee754 QuickCheck storable-complex test-framework
         test-framework-quickcheck2 vector
       ];
       homepage = "http://github.com/cartazio/hs-cblas";
       description = "A linear algebra library with bindings to BLAS and LAPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linear-maps" = callPackage
    ({ mkDerivation, HUnit }:
     mkDerivation {
       pname = "linear-maps";
       version = "0.6.1";
       sha256 = "0671px94wvqg2yyc8qhjcwrv5k2ifwp5mrj7fkcwlwvg8w1bp19k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit ];
       description = "Finite maps for linear use";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linear-opengl" = callPackage
    ({ mkDerivation, distributive, lens, linear, OpenGL, OpenGLRaw
     , tagged
     }:
     mkDerivation {
       pname = "linear-opengl";
       version = "0.2.0.4";
       sha256 = "11pdif2w730jqknajr2si77a0z4v4k5spm5zdks642i25ya135ba";
       buildDepends = [
         distributive lens linear OpenGL OpenGLRaw tagged
       ];
       homepage = "http://www.github.com/bgamari/linear-opengl";
       description = "Isomorphisms between linear and OpenGL types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linear-vect" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "linear-vect";
       version = "0.1.1.0";
       sha256 = "0i6z10pgqcykkygl6kq63phx5hvwi2d84j2f5vw4nrnic59sm9jy";
       buildDepends = [ random ];
       homepage = "https://github.com/capsjac/linear-vect";
       description = "A low-dimensional linear algebra library, operating on the Num typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linearEqSolver" = callPackage
    ({ mkDerivation, sbv }:
     mkDerivation {
       pname = "linearEqSolver";
       version = "1.3";
       sha256 = "0bszi1k27ag4yk31zxkn3jk3cqh1xzdcscm4nb6k4n0psf0qm2rp";
       buildDepends = [ sbv ];
       homepage = "http://github.com/LeventErkok/linearEqSolver";
       description = "Use SMT solvers to solve linear systems over integers and rationals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linebreak" = callPackage
    ({ mkDerivation, hyphenation }:
     mkDerivation {
       pname = "linebreak";
       version = "1.0.0.3";
       sha256 = "1fds2mgsijfsc96dq95skn562iv2r341zr7v0qsz48y9fh97s3p7";
       buildDepends = [ hyphenation ];
       homepage = "http://ariis.it/static/articles/linebreak/page.html";
       description = "breaks strings to fit width";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linguistic-ordinals" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "linguistic-ordinals";
       version = "0.1.0.0";
       sha256 = "0adcdxf0lxc372j12fk87klyrgr3b42sas6f1smiyza4wicjp9h3";
       buildDepends = [ text ];
       homepage = "http://github.com/argiopetech/linguistic-ordinals";
       description = "Express Integral types as linguistic ordinals (1st, 2nd, 3rd, etc)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linkchk" = callPackage
    ({ mkDerivation, gtk, popenhs, regex-compat }:
     mkDerivation {
       pname = "linkchk";
       version = "0.0.2";
       sha256 = "0fzszn8nb5kglg4s5hk9k51vdkarlc08bdp67rbrj0cwfxpkn6wd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk popenhs regex-compat ];
       homepage = "http://www.haskell.org/~petersen/haskell/linkchk/";
       description = "linkchk is a network interface link ping monitor";
       license = "GPL";
     }) {};

  "linkcore" = callPackage
    ({ mkDerivation, extcore, filepath }:
     mkDerivation {
       pname = "linkcore";
       version = "0.4.1";
       sha256 = "0m1jwqa3vbiyzcdrn1h63dm0709j5xijm00j2x7dpwgn8k92iq81";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ extcore filepath ];
       description = "Combines multiple GHC Core modules into a single module";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linkedhashmap" = callPackage
    ({ mkDerivation, deepseq, hashable, mtl, tasty, tasty-hunit
     , unordered-containers
     }:
     mkDerivation {
       pname = "linkedhashmap";
       version = "0.3.0.0";
       sha256 = "151lfsqz5cp49jm2jcsiad1rd72hr84wbll1s3146b1s2lwwjky2";
       buildDepends = [ deepseq hashable unordered-containers ];
       testDepends = [
         deepseq hashable mtl tasty tasty-hunit unordered-containers
       ];
       homepage = "https://github.com/abasko/linkedhashmap";
       description = "Persistent LinkedHashMap data structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linklater" = callPackage
    ({ mkDerivation, aeson, hscolour, http-types, lens, text, wai, wreq
     }:
     mkDerivation {
       pname = "linklater";
       version = "2.0.0.3";
       sha256 = "0rqlzji8wfc0dxixh2h2k1fa9m18swla2679d5gdq7fzq5344ccd";
       buildDepends = [ aeson hscolour http-types lens text wai wreq ];
       homepage = "https://github.com/hlian/linklater";
       description = "The fast and fun way to write Slack.com bots";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-blkid" = callPackage
    ({ mkDerivation, blkid, monad-control, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "linux-blkid";
       version = "0.2.0.0";
       sha256 = "06f7zwb40zgps6503cyp65c68181gj3s9q1s6vh43y6najiimzqx";
       buildDepends = [ monad-control transformers transformers-base ];
       pkgconfigDepends = [ blkid ];
       description = "Linux libblkid";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "linux-cgroup" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "linux-cgroup";
       version = "0.1.1.2";
       sha256 = "0dd1ii1n6y9frilnkxikzahp9xrh3i334i7syvd8fyxp51dpzgy1";
       buildDepends = [ filepath ];
       description = "Very basic interface to the Linux CGroup Virtual Filesystem";
       license = stdenv.lib.licenses.mit;
     }) {};

  "linux-evdev" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "linux-evdev";
       version = "0.3";
       sha256 = "1cyy9z56pmlzvs5n0sz22322agb4kzmi8pmbvwsb24fcdk68k7rp";
       buildDepends = [ time ];
       description = "Bindings to Linux evdev input device interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-file-extents" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "linux-file-extents";
       version = "0.2.0.0";
       sha256 = "1l4vznam1a8vf3nixhbmw38rpzkvmbka0cbdfdsgfrpn03kxjz3c";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/redneb/linux-file-extents";
       description = "Retrieve file fragmentation information under Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-inotify" = callPackage
    ({ mkDerivation, hashable }:
     mkDerivation {
       pname = "linux-inotify";
       version = "0.2.0.1";
       sha256 = "1970v1zkbp45amylmg79bbdfhk8kg6vzxjznd76gfl5kff2cv12r";
       buildDepends = [ hashable ];
       description = "Thinner binding to the Linux Kernel's inotify interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-kmod" = callPackage
    ({ mkDerivation, libkmod }:
     mkDerivation {
       pname = "linux-kmod";
       version = "0.1.0.1";
       sha256 = "1vqbibp93fw6r03v5q2cisya6m12xb12rad11myxrkbn29rjmhws";
       pkgconfigDepends = [ libkmod ];
       homepage = "https://github.com/tensor5/linux-kmod";
       description = "Linux kernel modules support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-mount" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "linux-mount";
       version = "0.2.0.1";
       sha256 = "12bwrniaxg6gm347jdgbf535pdz4z57pkyiwa98c903y9q9ssnyi";
       homepage = "https://github.com/tensor5/linux-mount";
       description = "Mount and unmount filesystems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-namespaces" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "linux-namespaces";
       version = "0.1.2.0";
       sha256 = "0yznnp9rdz15drm79pvbqbrbk2nczbkmlf00pb7rki7w1l9njp2q";
       homepage = "https://github.com/redneb/hs-linux-namespaces";
       description = "Create new or enter an existing linux namespaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-perf" = callPackage
    ({ mkDerivation, binary, filepath, ghc-events, mtl }:
     mkDerivation {
       pname = "linux-perf";
       version = "0.3";
       sha256 = "18akjagbqw2fswrnp4ifzivwdwsbny28kvnm0hfc1ysyy9id8511";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary filepath ghc-events mtl ];
       homepage = "https://github.com/bjpop/haskell-linux-perf";
       description = "Read files generated by perf on Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linux-ptrace" = callPackage
    ({ mkDerivation, mmap, posix-waitpid }:
     mkDerivation {
       pname = "linux-ptrace";
       version = "0.1.2";
       sha256 = "0hzniy9vlycbsqkrr9xxdgnx070h5v6jz4gqx7rc60a3q0hqn43m";
       buildDepends = [ mmap posix-waitpid ];
       description = "Wrapping of Linux' ptrace(2)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "linux-xattr" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "linux-xattr";
       version = "0.1.1.0";
       sha256 = "0rpq5sm557gm227id2rfsffgr47lrj4d4kpzh194d74dx2qkg5g6";
       homepage = "https://github.com/tensor5/linux-xattr";
       description = "Read, set and list extended attributes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "linx-gateway" = callPackage
    ({ mkDerivation, binary, network, QuickCheck, test-framework
     , test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "linx-gateway";
       version = "0.1.0.2";
       sha256 = "0diacwvxpq2iyfzlcmdqrbfndhmlmgzq9hvxlyp12idlzwa9p1cq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary network time ];
       testDepends = [
         binary QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/kosmoskatten/linx-gateway";
       description = "Implementation of the Enea LINX gateway protocol";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lio" = callPackage
    ({ mkDerivation, hashable }:
     mkDerivation {
       pname = "lio";
       version = "0.11.5.0";
       sha256 = "10miy18x1898dcq58bnk0md3ymw9ckh9j26grsr6w3jqnvw69712";
       buildDepends = [ hashable ];
       description = "Labeled IO Information Flow Control Library";
       license = "GPL";
     }) {};

  "lio-eci11" = callPackage
    ({ mkDerivation, dclabel-eci11, filepath, mtl, SHA, time }:
     mkDerivation {
       pname = "lio-eci11";
       version = "0.2";
       sha256 = "11vl27kn0wdxndkwn3yvxd6kg9jv0lilxpvx2hkax37lq3x15rc8";
       buildDepends = [ dclabel-eci11 filepath mtl SHA time ];
       description = "Labeled IO library";
       license = "GPL";
     }) {};

  "lio-fs" = callPackage
    ({ mkDerivation, filepath, lio, SHA, xattr }:
     mkDerivation {
       pname = "lio-fs";
       version = "0.0.1.2";
       sha256 = "1zzxsr0kg3bxm2wzhsqw2irk5myzshgqhr3fxi062hzw2rh0nqn9";
       buildDepends = [ filepath lio SHA xattr ];
       description = "Labeled File System interface for LIO";
       license = "GPL";
     }) {};

  "lio-simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, cmdargs
     , conduit, filepath, http-types, lio, simple, simple-templates
     , text, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "lio-simple";
       version = "0.0.2.2";
       sha256 = "1nddiakk6b9biay6ijnc48dxcfgpi9vx4g6a8r9vz6cjh6mh0154";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base64-bytestring cmdargs conduit filepath
         http-types lio simple simple-templates text wai wai-extra warp
       ];
       homepage = "http://simple.cx";
       description = "LIO support for the Simple web framework";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "liquid-fixpoint" = callPackage
    ({ mkDerivation, ansi-terminal, attoparsec, bifunctors, cmdargs
     , deepseq, filemanip, filepath, hashable, intern, mtl, parsec, syb
     , text, text-format, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "liquid-fixpoint";
       version = "0.2.1.0";
       sha256 = "11l9750ldxcb5jq34dl0iggpi9dh1zwjnlzgmwg4qvsgcq8cakdf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal attoparsec bifunctors cmdargs deepseq filemanip
         filepath hashable intern mtl parsec syb text text-format
         transformers unordered-containers
       ];
       homepage = "https://github.com/ucsd-progsys/liquid-fixpoint";
       description = "Predicate Abstraction-based Horn-Clause/Implication Constraint Solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "liquidhaskell" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, bifunctors, cmdargs, cpphs
     , data-default, deepseq, Diff, filemanip, filepath, fingertree
     , ghc-paths, hashable, hscolour, intern, liquid-fixpoint, mtl
     , optparse-applicative, parsec, syb, tagged, tasty, tasty-hunit
     , tasty-rerun, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "liquidhaskell";
       version = "0.2.1.0";
       sha256 = "172ki1pr096jc1azs6hq1p6czjr2gxb0zafmlg9bicn4nwp2h7vy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ansi-terminal bifunctors cmdargs cpphs data-default deepseq
         Diff filemanip filepath fingertree ghc-paths hashable hscolour
         intern liquid-fixpoint mtl parsec syb text time
         unordered-containers vector
       ];
       testDepends = [
         filepath optparse-applicative tagged tasty tasty-hunit tasty-rerun
       ];
       homepage = "http://goto.ucsd.edu/liquidhaskell";
       description = "Liquid Types for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lispparser" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "lispparser";
       version = "0.3.1";
       sha256 = "1hj5fwmzxp2gw2gx86wa1fy36jmmh3sf8kd4acc8x0rghpmlw0w8";
       buildDepends = [ parsec ];
       description = "Simple parser for LISP S-expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "list-extras" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "list-extras";
       version = "0.4.1.3";
       sha256 = "16w10xgh2y76q8aj5pgw4zq5p2phjzf5g1bmkacrm8gbwkp4v71s";
       homepage = "http://code.haskell.org/~wren/";
       description = "Common not-so-common functions for lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "list-fusion-probe" = callPackage
    ({ mkDerivation, tasty, tasty-hunit }:
     mkDerivation {
       pname = "list-fusion-probe";
       version = "0.1.0.2";
       sha256 = "0rvj4qnbqs7m8zrrqwak508z26fa6ssirly1jzwh9sy5ksiyd6df";
       testDepends = [ tasty tasty-hunit ];
       description = "testing list fusion for success";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "list-grouping" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "list-grouping";
       version = "0.1.1";
       sha256 = "0w9f68cr4k0p8zl81y8ax19i6ypzks0y27hdlz71wwmgn5v2y63l";
       homepage = "http://coder.bsimmons.name/blog/2009/08/list-grouping-module-released/";
       description = "Functions for grouping a list into sublists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "list-mux" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "list-mux";
       version = "1.0";
       sha256 = "147zb156g79a5p1w0b9vcvjy5x7nsrhng5rgjqq3cy3xpbam4nys";
       homepage = "http://github.com/hellertime/list-mux";
       description = "List Multiplexing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "list-remote-forwards" = callPackage
    ({ mkDerivation, cmdargs, configurator, dns, doctest, filemanip
     , filepath, HDBC, HDBC-postgresql, HDBC-sqlite3, MissingH, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "list-remote-forwards";
       version = "0.0.1";
       sha256 = "1bq5244ys4xy3pfj72dq399x0g57q41lrllbd5hgvk9z0j92lxys";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs configurator dns filepath HDBC HDBC-postgresql HDBC-sqlite3
         MissingH tasty tasty-hunit tasty-quickcheck
       ];
       testDepends = [
         cmdargs configurator dns doctest filemanip filepath HDBC
         HDBC-postgresql HDBC-sqlite3 MissingH tasty tasty-hunit
         tasty-quickcheck
       ];
       description = "List all remote forwards for mail accounts stored in a SQL database";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "list-t" = callPackage
    ({ mkDerivation, base-prelude, HTF, mmorph, monad-control
     , mtl-prelude, transformers, transformers-base
     }:
     mkDerivation {
       pname = "list-t";
       version = "0.4.0";
       sha256 = "1n6mwkpbjn4b815gf60zia3cgpmp1a70hgq594lcqg0332a52vj6";
       buildDepends = [
         base-prelude mmorph monad-control transformers transformers-base
       ];
       testDepends = [ base-prelude HTF mtl-prelude ];
       homepage = "https://github.com/nikita-volkov/list-t";
       description = "ListT done right";
       license = stdenv.lib.licenses.mit;
     }) {};

  "list-tries" = callPackage
    ({ mkDerivation, binary, dlist }:
     mkDerivation {
       pname = "list-tries";
       version = "0.5.2";
       sha256 = "0lfl35i1k3nnv8q6bhwq4sr197fylin2hmxa4b96kfcc22xfzwy6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary dlist ];
       homepage = "http://iki.fi/matti.niemenmaa/list-tries/";
       description = "Tries and Patricia tries: finite sets and maps for list keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "listlike-instances" = callPackage
    ({ mkDerivation, ListLike, text, vector }:
     mkDerivation {
       pname = "listlike-instances";
       version = "0.2.3.1";
       sha256 = "0mkhnqn7wxspzxvivhaksxmxp7d6x9bazhl28nl9gck56bpa90sm";
       buildDepends = [ ListLike text vector ];
       homepage = "http://jwlato.webfactional.com/haskell/listlike-instances";
       description = "Extra instances of the ListLike class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lists" = callPackage
    ({ mkDerivation, list-extras, split }:
     mkDerivation {
       pname = "lists";
       version = "0.4.2";
       sha256 = "0qjziksh6gl6v8rzvqajkcbakbby5j3i4z2jk6w6zs89b93rwnln";
       buildDepends = [ list-extras split ];
       description = "Functions for dealing with lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lit" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, cheapskate, filepath
     , highlighting-kate, parsec, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "lit";
       version = "0.1.0.5";
       sha256 = "0xnbifi0g1kmxi88l9f77ypkgmdvhi69vy3fycbxwn926gc12v1r";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-html blaze-markup cheapskate filepath highlighting-kate
         parsec text time unordered-containers
       ];
       homepage = "https://github.com/cdosborn/lit";
       description = "A simple tool for literate programming";
       license = "GPL";
     }) {};

  "literals" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "literals";
       version = "1.0";
       sha256 = "06n4svp0qss78l8827qmppmd63877wq01d6w9xagd10vn3c4hs2j";
       description = "Non-overloaded functions for concrete literals";
       license = stdenv.lib.licenses.mit;
     }) {};

  "live-sequencer" = callPackage
    ({ mkDerivation, alsa-core, alsa-seq, cgi, concurrent-split
     , data-accessor, data-accessor-transformers, event-list
     , explicit-exception, filepath, html, httpd-shed, midi, midi-alsa
     , network, non-empty, non-negative, parsec, stm, stm-split, strict
     , transformers, utility-ht, wx, wxcore
     }:
     mkDerivation {
       pname = "live-sequencer";
       version = "0.0.4";
       sha256 = "04n8s2p772ylzfjpclbrq01im0j9rlp0xd37i8jshll7r51iz66l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         alsa-core alsa-seq cgi concurrent-split data-accessor
         data-accessor-transformers event-list explicit-exception filepath
         html httpd-shed midi midi-alsa network non-empty non-negative
         parsec stm stm-split strict transformers utility-ht wx wxcore
       ];
       homepage = "http://www.haskell.org/haskellwiki/Live-Sequencer";
       description = "Live coding of MIDI music";
       license = "GPL";
     }) {};

  "llrbtree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "llrbtree";
       version = "0.1.1";
       sha256 = "057bp1f1mpzlgg408b02x1bdzsixrrkcl1536nyvhp43rvxmgj61";
       description = "Purely functional sets and heaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llsd" = callPackage
    ({ mkDerivation, binary, cereal, dataenc, hexpat, mtl, network
     , parsec, random, text, time, utf8-string, uuid
     }:
     mkDerivation {
       pname = "llsd";
       version = "0.2.0.0";
       sha256 = "1v1yaaj02qk6z58kiz3g7dr9cik8141vv409cyxlzqv1k79rpzrg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cereal dataenc hexpat mtl network parsec random text time
         utf8-string uuid
       ];
       homepage = "http://wiki.secondlife.com/wiki/LLSD";
       description = "An implementation of the LLSD data system";
       license = stdenv.lib.licenses.mit;
     }) {};

  "llvm" = callPackage
    ({ mkDerivation, llvm-base, mtl, type-level }:
     mkDerivation {
       pname = "llvm";
       version = "3.2.0.2";
       sha256 = "11k1m80vg9x6fgiyh9gxzl1i2i0l0jw9hbn3gs1d1dd7avzl9mrr";
       buildDepends = [ llvm-base mtl type-level ];
       homepage = "https://github.com/bos/llvm";
       description = "Bindings to the LLVM compiler toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-analysis" = callPackage
    ({ mkDerivation, boomerang, deepseq, failure, fgl, filemanip
     , filepath, GenericPretty, graphviz, hashable, hoopl, HUnit, ifscs
     , itanium-abi, lens, llvm-base-types, llvm-data-interop, monad-par
     , temporary, test-framework, test-framework-hunit, text
     , transformers, uniplate, unordered-containers, vector
     }:
     mkDerivation {
       pname = "llvm-analysis";
       version = "0.3.0";
       sha256 = "0jck1c9wy11wjss6aji64jw927mrncwd2nmnq65zq85r5hha3m8k";
       buildDepends = [
         boomerang deepseq failure fgl filemanip filepath GenericPretty
         graphviz hashable hoopl HUnit ifscs itanium-abi lens
         llvm-base-types monad-par temporary test-framework
         test-framework-hunit text transformers uniplate
         unordered-containers vector
       ];
       testDepends = [
         filepath HUnit itanium-abi llvm-data-interop transformers uniplate
         unordered-containers
       ];
       description = "A Haskell library for analyzing LLVM bitcode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-base" = callPackage
    ({ mkDerivation, llvm, mtl }:
     mkDerivation {
       pname = "llvm-base";
       version = "3.2.0.2";
       sha256 = "1f76nb85hnidp06v6lbl4aasac4h7ff9r8i054m8cnby2vc59r4n";
       buildDepends = [ mtl ];
       extraLibraries = [ llvm ];
       homepage = "https://github.com/bos/llvm";
       description = "FFI bindings to the LLVM compiler toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) llvm; };

  "llvm-base-types" = callPackage
    ({ mkDerivation, c2hs, deepseq, dwarf, failure, GenericPretty
     , graphviz, hashable, regex-tdfa, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "llvm-base-types";
       version = "0.3.0";
       sha256 = "142xc7w250y0nx60qnm4gc5hrqjm1bxk0nhgsp669g5kvxqcd3bn";
       buildDepends = [
         deepseq dwarf failure GenericPretty graphviz hashable regex-tdfa
         text transformers unordered-containers vector
       ];
       buildTools = [ c2hs ];
       description = "The base types for a mostly pure Haskell LLVM analysis library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-base-util" = callPackage
    ({ mkDerivation, llvm-base }:
     mkDerivation {
       pname = "llvm-base-util";
       version = "3.0.1.0";
       sha256 = "07q6dvwkg7h6qkwq0a7719g82anipj2pk0xid5p24pvzssa9z22w";
       buildDepends = [ llvm-base ];
       homepage = "https://github.com/bos/llvm";
       description = "Utilities for bindings to the LLVM compiler toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-data-interop" = callPackage
    ({ mkDerivation, c2hs, data-default, deepseq, dwarf, hashable
     , hashtables, llvm-base-types, loch-th, mtl, text, transformers
     , unification-fd, unordered-containers, vector
     }:
     mkDerivation {
       pname = "llvm-data-interop";
       version = "0.3.0";
       sha256 = "08kflxb0qannp6nb2sizz0bhl850dl1sszl1hk9l28m21r2akdy1";
       buildDepends = [
         data-default deepseq dwarf hashable hashtables llvm-base-types
         loch-th mtl text transformers unification-fd unordered-containers
         vector
       ];
       buildTools = [ c2hs ];
       description = "A low-level data interoperability binding for LLVM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-extra" = callPackage
    ({ mkDerivation, cpuid, llvm-tf, tfp, transformers, unsafe
     , utility-ht
     }:
     mkDerivation {
       pname = "llvm-extra";
       version = "0.5";
       sha256 = "0zbzc5y0wd5wkyf1nnvafm5r6g6asrnnkn66qqin9awvz0prkmy4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cpuid llvm-tf tfp transformers unsafe utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/llvm-extra/";
       description = "Utility functions for the llvm interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-general" = callPackage
    ({ mkDerivation, HUnit, llvm-config, llvm-general-pure, mtl, parsec
     , QuickCheck, setenv, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers, transformers-compat
     , utf8-string
     }:
     mkDerivation {
       pname = "llvm-general";
       version = "3.4.4.2";
       sha256 = "02z2rli610n54ig8fbrdn9r4w2lm97qsawi9y21rfs836s4ibq55";
       buildDepends = [
         llvm-general-pure mtl parsec setenv transformers
         transformers-compat utf8-string
       ];
       testDepends = [
         HUnit llvm-general-pure mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
         transformers-compat
       ];
       buildTools = [ llvm-config ];
       doCheck = false;
       description = "General purpose LLVM bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-general-pure" = callPackage
    ({ mkDerivation, HUnit, mtl, parsec, QuickCheck, setenv
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "llvm-general-pure";
       version = "3.4.4.1";
       sha256 = "147s03km3gp4v5gk5fi179qrha962w3xm7rnaxia9xzvh1161j9g";
       buildDepends = [
         mtl parsec setenv transformers transformers-compat
       ];
       testDepends = [
         HUnit mtl QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       doCheck = false;
       description = "Pure Haskell LLVM functionality (no FFI)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-general-quote" = callPackage
    ({ mkDerivation, alex, happy, haskell-src-meta, HUnit
     , llvm-general-pure, mainland-pretty, mtl, split, srcloc, syb
     , symbol, tasty, tasty-hunit, th-lift
     }:
     mkDerivation {
       pname = "llvm-general-quote";
       version = "0.2.0.0";
       sha256 = "02j3npamy5s6ircfd9njg0y25asbpxl6fpsxjpxy7k4v1y6c3b75";
       buildDepends = [
         haskell-src-meta llvm-general-pure mainland-pretty mtl split srcloc
         syb symbol th-lift
       ];
       testDepends = [ HUnit llvm-general-pure tasty tasty-hunit ];
       buildTools = [ alex happy ];
       homepage = "https://github.com/tvh/llvm-general-quote";
       description = "QuasiQuoting llvm code for llvm-general";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-ht" = callPackage
    ({ mkDerivation, mtl, type-level }:
     mkDerivation {
       pname = "llvm-ht";
       version = "0.7.0.0";
       sha256 = "1yn8wyp2jjjdggvf1jz7iras4f7fg2dq57ramr5prvcapc6r5yn6";
       buildDepends = [ mtl type-level ];
       homepage = "http://darcs.serpentine.com/llvm/";
       description = "Bindings to the LLVM compiler toolkit with some custom extensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-pkg-config" = callPackage
    ({ mkDerivation, Cabal, explicit-exception, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "llvm-pkg-config";
       version = "0.0";
       sha256 = "1sfw901bhnwiam8mm7h50fb6rpqv7vs8j7bxdx6azcf02cmivx6w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal explicit-exception transformers utility-ht
       ];
       description = "Generate Pkg-Config configuration file for LLVM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-pretty" = callPackage
    ({ mkDerivation, monadLib }:
     mkDerivation {
       pname = "llvm-pretty";
       version = "0.3.0.0";
       sha256 = "0m6sg2bng9ihak3hkbzqabdif0m8bblr8cvwgsdhq2ss059vmnws";
       buildDepends = [ monadLib ];
       description = "A pretty printing library inspired by the llvm binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-pretty-bc-parser" = callPackage
    ({ mkDerivation, cereal, fgl, fgl-visualize, filepath, llvm-pretty
     , monadLib
     }:
     mkDerivation {
       pname = "llvm-pretty-bc-parser";
       version = "0.1.3.0";
       sha256 = "02js8y4ccy9jlp1j928kzn0gbahlffn0i6jg89bs5p1ffmgc9hwx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cereal fgl fgl-visualize llvm-pretty monadLib ];
       testDepends = [ filepath llvm-pretty ];
       description = "LLVM bitcode parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-tf" = callPackage
    ({ mkDerivation, llvm-base, tfp, transformers }:
     mkDerivation {
       pname = "llvm-tf";
       version = "3.0.2";
       sha256 = "1hm1yk5zmp9g8c6ddgpa4hyf9skj0ixra1d0wjnw2vylr48g0rj5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ llvm-base tfp transformers ];
       description = "Bindings to the LLVM compiler toolkit using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "llvm-tools" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, blaze-html
     , blaze-markup, conduit, filemanip, filepath, graphviz
     , llvm-analysis, llvm-data-interop, optparse-applicative
     , parallel-io, process-conduit, unordered-containers, xml
     }:
     mkDerivation {
       pname = "llvm-tools";
       version = "0.2.0.1";
       sha256 = "1nyp0sgdqsaa2f2v7xgmm3s8mf2a170mzz2h3wwsi163ggvxwvhd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec attoparsec-conduit blaze-html blaze-markup conduit
         filemanip filepath graphviz llvm-analysis llvm-data-interop
         optparse-applicative parallel-io process-conduit
         unordered-containers xml
       ];
       description = "Useful tools built on llvm-analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lmdb" = callPackage
    ({ mkDerivation, lmdb }:
     mkDerivation {
       pname = "lmdb";
       version = "0.2.1";
       sha256 = "1zrwgpj4c2h17zhbpg9ynniljadzdl3jqdxr926vjsl1j89lpkps";
       extraLibraries = [ lmdb ];
       homepage = "http://github.com/dmbarbour/haskell-lmdb";
       description = "Lightning MDB bindings";
       license = stdenv.lib.licenses.bsd2;
     }) { inherit (pkgs) lmdb; };

  "load-env" = callPackage
    ({ mkDerivation, hspec, HUnit, parsec }:
     mkDerivation {
       pname = "load-env";
       version = "0.1.0";
       sha256 = "1yvnb42i1pzmvs2mjfjl8crxyr6ghw00dhrv548pmks1q5md8z75";
       buildDepends = [ parsec ];
       testDepends = [ hspec HUnit parsec ];
       description = "Load environment variables from a file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loadavg" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "loadavg";
       version = "0.1";
       sha256 = "13q2yxqyzkh099jwz32plmdc71p4w2gkajx5bbi3fkvl2gylqlk6";
       description = "Load average parsing from /proc/loadavg and bindings to getloadavg (3)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "local-address" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "local-address";
       version = "0.0.1";
       sha256 = "1846lhs0jc8finxcp1hfgifzs7hwzzxvmmv03laxzl63p5h2k8x9";
       buildDepends = [ network ];
       homepage = "http://bitbucket.org/khibino/haskell-local-address";
       description = "Functions to get local interface address";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "local-search" = callPackage
    ({ mkDerivation, combinatorial-problems, erf, random }:
     mkDerivation {
       pname = "local-search";
       version = "0.0.7";
       sha256 = "0xrp34m2qfbz458g7bxdkp2lvsm0hskwxfcrm1d8n8g150ddn2xf";
       buildDepends = [ combinatorial-problems erf random ];
       homepage = "http://www.comp.leeds.ac.uk/sc06r2s/Projects/HaskellLocalSearch";
       description = "Generalised local search within Haskell, for applications in combinatorial optimisation";
       license = "GPL";
     }) {};

  "locators" = callPackage
    ({ mkDerivation, cereal, cryptohash, hspec, hspec-expectations
     , HUnit, QuickCheck
     }:
     mkDerivation {
       pname = "locators";
       version = "0.2.4.2";
       sha256 = "172fbxb51p09afsgp9g28zpbisxnf0wxdr3bwi6hwp40ac3363g4";
       buildDepends = [ cereal cryptohash ];
       testDepends = [
         cereal cryptohash hspec hspec-expectations HUnit QuickCheck
       ];
       description = "Human exchangable identifiers and locators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loch" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "loch";
       version = "0.2";
       sha256 = "1dwv4v76i1fd60rrr0bla3wjz62x9dcgpd48p8z11lsjgpqarld3";
       isLibrary = true;
       isExecutable = true;
       description = "Support for precise error locations in source files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loch-th" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "loch-th";
       version = "0.2.1";
       sha256 = "1kfrjsgzq6wl749n2wm1fhwwigjxcd9lww7whiwjrbmhiz5ism3p";
       homepage = "https://github.com/liskin/loch-th";
       description = "Support for precise error locations in source files (Template Haskell version)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lockfree-queue" = callPackage
    ({ mkDerivation, abstract-deque, abstract-deque-tests
     , atomic-primops, HUnit, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "lockfree-queue";
       version = "0.2.3";
       sha256 = "0y8ax6vcjnjm8g7ybn95wca74hm0g22fvgra06vj6l90pl93awyg";
       buildDepends = [ abstract-deque atomic-primops ];
       testDepends = [
         abstract-deque abstract-deque-tests atomic-primops HUnit
         test-framework test-framework-hunit
       ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Michael and Scott lock-free queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "log-domain" = callPackage
    ({ mkDerivation, binary, bytes, cereal, comonad, deepseq
     , distributive, doctest, filepath, generic-deriving, hashable
     , hashable-extras, safecopy, semigroupoids, semigroups
     , simple-reflect, vector
     }:
     mkDerivation {
       pname = "log-domain";
       version = "0.9.3";
       sha256 = "1l07pi7lnwyk3y747f7bgr1200p6apyfn7bch5v30kh7dy0wyi8m";
       buildDepends = [
         binary bytes cereal comonad deepseq distributive generic-deriving
         hashable hashable-extras safecopy semigroupoids semigroups vector
       ];
       testDepends = [
         doctest filepath generic-deriving semigroups simple-reflect
       ];
       homepage = "http://github.com/analytics/log-domain/";
       description = "Log-domain arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "log-effect" = callPackage
    ({ mkDerivation, extensible-effects, fast-logger, time }:
     mkDerivation {
       pname = "log-effect";
       version = "0.4.0.1";
       sha256 = "05rx54bsypisw6k8xm87a4rssyb0lwx7xavwamb1ciiwmvg3j14m";
       buildDepends = [ extensible-effects fast-logger time ];
       homepage = "https://github.com/ibotty/log-effect";
       description = "An extensible log effect using extensible-effects";
       license = stdenv.lib.licenses.mit;
     }) {};

  "log2json" = callPackage
    ({ mkDerivation, json, parsec }:
     mkDerivation {
       pname = "log2json";
       version = "0.1";
       sha256 = "0cidi9zkvqvdqpibr0jpnlk33kprmxwh016w0f86zg9cm3dfb5zf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ json parsec ];
       homepage = "https://github.com/haroldl/log2json";
       description = "Turn log file records into JSON";
       license = "GPL";
     }) {};

  "logfloat" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "logfloat";
       version = "0.12.1";
       sha256 = "1k13jjqv4df341hcj9hzrlisfx9wrsmyqvzi6ricx341d9z4ch05";
       homepage = "http://code.haskell.org/~wren/";
       description = "Log-domain floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "logging" = callPackage
    ({ mkDerivation, binary, fast-logger, hspec, lifted-base
     , monad-control, monad-logger, pcre-light, text, time, transformers
     , vector-space
     }:
     mkDerivation {
       pname = "logging";
       version = "2.1.0";
       sha256 = "15ad4g7zkbklawd98m6x838fr5383vkvq92y75f56j1kj17g7rrh";
       buildDepends = [
         binary fast-logger lifted-base monad-control monad-logger
         pcre-light text time transformers vector-space
       ];
       testDepends = [ hspec monad-logger ];
       description = "Simplified logging in IO for application writers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "logging-facade" = callPackage
    ({ mkDerivation, hspec, transformers }:
     mkDerivation {
       pname = "logging-facade";
       version = "0.0.0";
       sha256 = "0i7m4dpj7b556bfiahisvxcvdb1lv352zggjyrcr69iqnrac30z8";
       buildDepends = [ transformers ];
       testDepends = [ hspec ];
       description = "Simple logging abstraction that allows multiple backends";
       license = stdenv.lib.licenses.mit;
     }) {};

  "logging-facade-journald" = callPackage
    ({ mkDerivation, hspec, libsystemd-journal, logging-facade, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "logging-facade-journald";
       version = "0.0.0";
       sha256 = "151p7574v9mxiniwxa4lngm5g4viznw4kg9adnngc3pi5nnh1z7l";
       buildDepends = [
         libsystemd-journal logging-facade text unordered-containers
       ];
       testDepends = [
         hspec libsystemd-journal logging-facade text unordered-containers
       ];
       description = "Journald back-end for logging-facade";
       license = stdenv.lib.licenses.mit;
     }) {};

  "logic-TPTP" = callPackage
    ({ mkDerivation, alex, ansi-wl-pprint, happy, mtl, pointed
     , QuickCheck, syb, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "logic-TPTP";
       version = "0.4.2.0";
       sha256 = "1pqs0hr05b4jsnf73fqfgqng3h63dlswlx18142fbkv1bhphg8al";
       buildDepends = [
         ansi-wl-pprint mtl pointed QuickCheck syb transformers
         transformers-compat
       ];
       buildTools = [ alex happy ];
       description = "Import, export etc. for TPTP, a syntax for first-order logic";
       license = "GPL";
     }) {};

  "logic-classes" = callPackage
    ({ mkDerivation, applicative-extras, fgl, HUnit, mtl, PropLogic
     , safecopy, set-extra, syb, syb-with-class, text
     }:
     mkDerivation {
       pname = "logic-classes";
       version = "1.5";
       sha256 = "12rdq38wga5d4d2mw21rmdmgjg7vqhap0zl2f5wzn79hl7814rwz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         applicative-extras fgl HUnit mtl PropLogic safecopy set-extra syb
         syb-with-class text
       ];
       homepage = "http://src.seereason.com/logic-classes";
       description = "Framework for propositional and first order logic, theorem proving";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "logicst" = callPackage
    ({ mkDerivation, logict, transformers }:
     mkDerivation {
       pname = "logicst";
       version = "0.1.0.0";
       sha256 = "061x6g92334m2776xclh8mcbjind3l595pggc0g7yi4qzs31zbdc";
       buildDepends = [ logict transformers ];
       homepage = "http://github.com/sonyandy/logicst";
       description = "Backtracking mutable references in the ST and IO monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "logict" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "logict";
       version = "0.6.0.2";
       sha256 = "07hnirv6snnym2r7iijlfz00b60jpy2856zvqxh989q0in7bd0hi";
       buildDepends = [ mtl ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "A backtracking logic-programming monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lojban" = callPackage
    ({ mkDerivation, curl, HTTP, markov-chain, mtl, parsec, random
     , regex-compat, strict, tagsoup, xml
     }:
     mkDerivation {
       pname = "lojban";
       version = "0.3";
       sha256 = "0pd31g21db8yh1mrnmy7r60lr0dbpwlxpwc0hli3y1wcr4fisnx6";
       editedCabalFile = "1z0wdcylh38mn5jhwnp1rl7azadkw57df1m69jiax05ay74cjc4x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         curl HTTP markov-chain mtl parsec random regex-compat strict
         tagsoup xml
       ];
       description = "Useful utilities for the Lojban language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lojbanParser" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lojbanParser";
       version = "0.1.9.2";
       sha256 = "0axi63dvls9k87samaa0jihisfqyl92jbhmx1j9q73yjrn5wsk8j";
       isLibrary = true;
       isExecutable = true;
       description = "lojban parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lojbanXiragan" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lojbanXiragan";
       version = "0.3";
       sha256 = "1h7jmhs38v6mfas4nj22shm2dwphx46247sv3mia28xlzim3xdsp";
       isLibrary = true;
       isExecutable = true;
       description = "lojban to xiragan";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lojysamban" = callPackage
    ({ mkDerivation, lojbanParser, yjtools }:
     mkDerivation {
       pname = "lojysamban";
       version = "0.0.8.1";
       sha256 = "0c571fk7kz4szpba85d7bf5awak5bc25r59kyx3xvyvk011y9hhd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ lojbanParser yjtools ];
       homepage = "http://homepage3.nifty.com/salamander/myblog/lojysamban.html";
       description = "Prolog with lojban";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loli" = callPackage
    ({ mkDerivation, data-default, hack, hack-contrib, mps, mtl
     , template, utf8-string
     }:
     mkDerivation {
       pname = "loli";
       version = "2011.6.24";
       sha256 = "1m23dkxh2vah7d47arpqx5zdpwczm8k4jixzslmqbdizm9h933ja";
       buildDepends = [
         data-default hack hack-contrib mps mtl template utf8-string
       ];
       homepage = "http://github.com/nfjinjing/loli";
       description = "A minimum web dev DSL in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loop" = callPackage
    ({ mkDerivation, hspec, mtl }:
     mkDerivation {
       pname = "loop";
       version = "0.2.0";
       sha256 = "11ifqahlg9ky5klid1fhsyfvfb6w8yb0dsy43s0cxcmldbw3qv5x";
       testDepends = [ hspec mtl ];
       homepage = "https://github.com/nh2/loop";
       description = "Fast loops (for when GHC can't optimize forM_)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "loop-effin" = callPackage
    ({ mkDerivation, effin }:
     mkDerivation {
       pname = "loop-effin";
       version = "0.1.1.0";
       sha256 = "02x02m98ka1y8f1jjqwfwmsyx29g583gnr4jdm5syqxfr0dz6c52";
       buildDepends = [ effin ];
       homepage = "https://github.com/konn/loop-effin";
       description = "control-monad-loop port for effin";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loop-while" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "loop-while";
       version = "1.0.0";
       sha256 = "1yvw91gn1iyw72rbq455zzrbb3pq8ph9cv1c6800qzjyxx0694bd";
       buildDepends = [ mtl ];
       description = "A monad transformer supporting various styles of while loop";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loops" = callPackage
    ({ mkDerivation, primitive, tasty, tasty-quickcheck, transformers
     , vector
     }:
     mkDerivation {
       pname = "loops";
       version = "0.2.0.2";
       sha256 = "1syx22gp2zra2dhwvmm2np6c1lvqk622a62k4xxjd8y1fs2ckks7";
       buildDepends = [ primitive transformers vector ];
       testDepends = [ tasty tasty-quickcheck ];
       description = "Fast imperative-style loops";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "loopy" = callPackage
    ({ mkDerivation, cmdargs, filepath, GoogleChart, hmatrix, random }:
     mkDerivation {
       pname = "loopy";
       version = "0.0.1";
       sha256 = "0gyd7l4i3vzv7swyqfywzwhsdxq3j5869c2id6hz6nm7db47wyy6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs filepath GoogleChart hmatrix random ];
       homepage = "http://www.esc.cam.ac.uk/people/research-students/emily-king";
       description = "Find all biological feedback loops within an ecosystem graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lord" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, attoparsec-conduit
     , case-insensitive, conduit, conduit-extra, daemons, data-default
     , fast-logger, hspec, html-conduit, HTTP, http-conduit, http-types
     , HUnit, libmpd, optparse-applicative, resourcet, text
     , transformers, unordered-containers, utf8-string, wai-logger
     , xml-conduit, yaml
     }:
     mkDerivation {
       pname = "lord";
       version = "2.20140625";
       sha256 = "1yjz713kddrnwjm2i4xj2vsmx6ycamvas5h1k9vmdcnlnlmbi45a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ansi-terminal attoparsec-conduit case-insensitive conduit
         conduit-extra daemons data-default fast-logger html-conduit HTTP
         http-conduit http-types libmpd optparse-applicative resourcet text
         transformers unordered-containers utf8-string wai-logger
         xml-conduit yaml
       ];
       testDepends = [
         aeson ansi-terminal attoparsec-conduit case-insensitive conduit
         daemons data-default fast-logger hspec html-conduit HTTP
         http-conduit http-types HUnit libmpd optparse-applicative text
         transformers unordered-containers utf8-string wai-logger
         xml-conduit yaml
       ];
       homepage = "https://github.com/rnons/lord";
       description = "A command line interface to online radios";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "loris" = callPackage
    ({ mkDerivation, c2hs, loris, vector }:
     mkDerivation {
       pname = "loris";
       version = "0.3.1";
       sha256 = "19w1c3gsmy03y4a238yp844wgqcv9s53cwrcapv2yvn9xpchm2gq";
       buildDepends = [ vector ];
       buildTools = [ c2hs ];
       extraLibraries = [ loris ];
       homepage = "http://www.tiresiaspress.us/haskell/loris";
       description = "interface to Loris API";
       license = stdenv.lib.licenses.gpl2;
     }) { inherit (pkgs) loris; };

  "loshadka" = callPackage
    ({ mkDerivation, aeson, binary, cryptohash, hex, network, split }:
     mkDerivation {
       pname = "loshadka";
       version = "0.2";
       sha256 = "01jjbcgzpkh3mp729xahy2437hrg6wc2l1qnwcm069zrs3c1bdny";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson binary cryptohash hex network split ];
       homepage = "https://github.com/tvorcesky/loshadka";
       description = "Minecraft 1.7 server proxy that answers to queries when the server is offline";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lostcities" = callPackage
    ({ mkDerivation, mtl, wx, wxcore }:
     mkDerivation {
       pname = "lostcities";
       version = "0.2";
       sha256 = "1avlq28k0jcfbnd0pfww80ixz5lvpp4jkf20dybjl7pfqyhj3s9p";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl wx wxcore ];
       homepage = "http://www.ncc.up.pt/~pbv/stuff/lostcities";
       description = "An implementation of an adictive two-player card game";
       license = "GPL";
     }) {};

  "lrucache" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lrucache";
       version = "1.1.1.4";
       sha256 = "0w3b338wsf7c0acjxxfdjxsljfpsix67aihkl2jwnp5x71awf8qh";
       homepage = "http://github.com/chowells79/lrucache";
       description = "a simple, pure LRU cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ls-usb" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base-unicode-symbols, cmdtheline
     , text, usb, usb-id-database, vector
     }:
     mkDerivation {
       pname = "ls-usb";
       version = "0.1.1";
       sha256 = "08xaf27iirdxax7gjjjzvw4nv0qya6vz46826bzmp7f0i0rn88qk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint base-unicode-symbols cmdtheline text usb
         usb-id-database vector
       ];
       homepage = "https://github.com/roelvandijk/ls-usb";
       description = "List USB devices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lscabal" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "lscabal";
       version = "0.1.1";
       sha256 = "14j19jcmx20nhvb9a7im81j3wwkkx6lkb6b1kfizv8qkgnp0jd5j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://code.haskell.org/~dons/code/lscabal";
       description = "List exported modules from a set of .cabal files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lss" = callPackage
    ({ mkDerivation, attoparsec, filepath, hspec2, language-css
     , language-css-attoparsec, text, xmlhtml
     }:
     mkDerivation {
       pname = "lss";
       version = "0.1.0.0";
       sha256 = "1r890sya0db0xvs9cm5ghhr6x55hkqplirv95km6y7py7hj69cjr";
       buildDepends = [
         attoparsec filepath language-css language-css-attoparsec text
         xmlhtml
       ];
       testDepends = [
         attoparsec hspec2 language-css language-css-attoparsec text
       ];
       homepage = "https://github.com/dbp/lss";
       description = "Lexical Style Sheets - a language for writing styles that is focused around lexical (ie, static) scoping and re-use of large components";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lsystem" = callPackage
    ({ mkDerivation, uu-parsinglib, wx, wxcore }:
     mkDerivation {
       pname = "lsystem";
       version = "1.2";
       sha256 = "1wk41hsr7pp9azac3449xp0xv8kd31bwif3yw6cfw9jfg3g498xg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ uu-parsinglib wx wxcore ];
       description = "Paint an L-System Grammar";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ltk" = callPackage
    ({ mkDerivation, Cabal, filepath, glib, gtk3, mtl, parsec, text
     , transformers
     }:
     mkDerivation {
       pname = "ltk";
       version = "0.14.3.0";
       sha256 = "0f0xm5pg98yvccxlpqvhkwy8q9miyzr6n0aznqzc4qxf05dbi4s9";
       buildDepends = [
         Cabal filepath glib gtk3 mtl parsec text transformers
       ];
       homepage = "http://www.leksah.org";
       description = "Leksah tool kit";
       license = "GPL";
     }) {};

  "ltl" = callPackage
    ({ mkDerivation, vcd }:
     mkDerivation {
       pname = "ltl";
       version = "0.0.0";
       sha256 = "0h3jxngsdmakcr35zapxjaykjsqs44lxxk86d5i4rg0gi0i9qw3g";
       buildDepends = [ vcd ];
       homepage = "http://tomahawkins.org";
       description = "Using linear temporal logic (LTL) to verify embedded software and hardware";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lua-bytecode" = callPackage
    ({ mkDerivation, cereal, hashable, numeric-extras, vector }:
     mkDerivation {
       pname = "lua-bytecode";
       version = "0.1.0.0";
       sha256 = "1cwpixaxxkfd8n714c8w82z97h3h8bqqqnh2wsn22cll168rb6zl";
       buildDepends = [ cereal hashable numeric-extras vector ];
       description = "Library for loading Lua bytecode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "luachunk" = callPackage
    ({ mkDerivation, attoparsec, binary, custom-prelude, text }:
     mkDerivation {
       pname = "luachunk";
       version = "0.1.0.0";
       sha256 = "03a8adaz3m93wnfmrvsqbmc57h1d8h0a90spfj1cb7yrpz0pr3ck";
       buildDepends = [ attoparsec binary custom-prelude text ];
       description = "Library functions for reading and writing Lua chunks";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "luautils" = callPackage
    ({ mkDerivation, custom-prelude, hslua, monad-loops, QuickCheck
     , quickcheck-instances, test-framework, test-framework-quickcheck2
     , test-framework-th, text
     }:
     mkDerivation {
       pname = "luautils";
       version = "0.1.3";
       sha256 = "1y0a70sqykc003kazx6bddjp4l7pc6099iqg6w78k7wigzmkld7y";
       buildDepends = [ custom-prelude hslua monad-loops text ];
       testDepends = [
         hslua QuickCheck quickcheck-instances test-framework
         test-framework-quickcheck2 test-framework-th text
       ];
       description = "Helpers for Haskell integration with Lua";
       license = "GPL";
     }) {};

  "lub" = callPackage
    ({ mkDerivation, unamb }:
     mkDerivation {
       pname = "lub";
       version = "0.1.7";
       sha256 = "1dsm7cg0i930r5dn8591aabkl0p8b5l348pccdvi7p0g7asx451h";
       buildDepends = [ unamb ];
       homepage = "http://haskell.org/haskellwiki/lub";
       description = "information operators: least upper bound (lub) and greatest lower bound (glb)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lucid" = callPackage
    ({ mkDerivation, bifunctors, blaze-builder, hspec, HUnit, mtl
     , parsec, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "lucid";
       version = "2.5";
       sha256 = "0q6jkz4czjr4bdwjdv5yvkiq1dhkjcn3zc1y4xj5yrlbn93708zj";
       buildDepends = [
         blaze-builder mtl text transformers unordered-containers
       ];
       testDepends = [ bifunctors hspec HUnit mtl parsec text ];
       homepage = "https://github.com/chrisdone/lucid";
       description = "Clear to write, read and edit DSL for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lucienne" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-html, bson
     , compact-string-fix, feed, happstack, happstack-server, HTTP
     , mongoDB, mtl, network, SHA, text, time
     }:
     mkDerivation {
       pname = "lucienne";
       version = "0.0.2";
       sha256 = "1dcvax756cqpqg6rrrjrd4sfr3ggvqdiwp42rb8fdrsi3v2skwrj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base64-bytestring blaze-html bson compact-string-fix feed happstack
         happstack-server HTTP mongoDB mtl network SHA text time
       ];
       homepage = "http://www.imn.htwk-leipzig.de/~abau/lucienne";
       description = "Server side feed aggregator/reader";
       license = "GPL";
     }) {};

  "luhn" = callPackage
    ({ mkDerivation, digits, QuickCheck }:
     mkDerivation {
       pname = "luhn";
       version = "0.2";
       sha256 = "0ix7x28kmd3iarydl709vqd041h0qx6kv582c8ca54z8ag7lzynz";
       buildDepends = [ digits QuickCheck ];
       description = "An implementation of Luhn's check digit algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lui" = callPackage
    ({ mkDerivation, haskgame, MaybeT, mtl, SDL }:
     mkDerivation {
       pname = "lui";
       version = "0.0.6";
       sha256 = "081451gpm20z8zl3y1mjy9015a461g7q99w7sjnr8alvd3pbhd6v";
       buildDepends = [ haskgame MaybeT mtl SDL ];
       description = "Purely FunctionaL User Interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "luka" = callPackage
    ({ mkDerivation, air, libffi, objc }:
     mkDerivation {
       pname = "luka";
       version = "2012.8.29";
       sha256 = "00g7a80nlw1bgw6x2pqg1qn4786ra3bwbwbfm9b7iyhb101b7s9s";
       buildDepends = [ air libffi ];
       extraLibraries = [ objc ];
       homepage = "https://github.com/nfjinjing/luka";
       description = "Simple ObjectiveC runtime binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lushtags" = callPackage
    ({ mkDerivation, haskell-src-exts, text, vector }:
     mkDerivation {
       pname = "lushtags";
       version = "0.0.1";
       sha256 = "0325c064nsczypapvwdchx7x5n69jxjbyjs90ah7q5ydxbjl6w9c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src-exts text vector ];
       homepage = "https://github.com/bitc/lushtags";
       description = "Create ctags compatible tags files for Haskell programs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "luthor" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "luthor";
       version = "0.0.1";
       sha256 = "023kckpcdn6n5dyq0dip0132jp1w30hdx1qb5hbsd3js86j52a12";
       buildDepends = [ mtl parsec ];
       testDepends = [ mtl parsec ];
       homepage = "https://github.com/Zankoku-Okuno/luthor";
       description = "Tools for lexing and utilizing lexemes that integrate with Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lvish" = callPackage
    ({ mkDerivation, async, atomic-primops, bits-atomic, deepseq, HUnit
     , lattices, missing-foreign, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, text, time, transformers, vector
     }:
     mkDerivation {
       pname = "lvish";
       version = "1.1.4";
       sha256 = "1s7i1jxb6m7ivk4nd60dy8hn4wgfhv1gcamvv6hgjvcw6rxn4k44";
       editedCabalFile = "0xkfwxn9k68lcanqz2kcb5v0zn1j715c58h15dd4pigbs9xszc1q";
       buildDepends = [
         async atomic-primops bits-atomic deepseq lattices missing-foreign
         random transformers vector
       ];
       testDepends = [
         async atomic-primops bits-atomic deepseq HUnit lattices
         missing-foreign QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         text time transformers vector
       ];
       description = "Parallel scheduler, LVar data structures, and infrastructure to build more";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lvmlib" = callPackage
    ({ mkDerivation, filepath, parsec, wl-pprint }:
     mkDerivation {
       pname = "lvmlib";
       version = "1.1";
       sha256 = "1lr2qr817mb8qb7b3wvry9jpj3wjphj5s60rn3dyqibx8gny36bg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath parsec wl-pprint ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/Helium/WebHome";
       description = "The Lazy Virtual Machine (LVM)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lvmrun" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "lvmrun";
       version = "1.0";
       sha256 = "0wcf9brcvf4b7qcs51mngca3qxilk0x50h3dml28zg6lg93wwbfa";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://www.cs.uu.nl/wiki/bin/view/Helium/WebHome";
       description = "The Lazy Virtual Machine (LVM) Runtime System";
       license = "LGPL";
     }) {};

  "lxc" = callPackage
    ({ mkDerivation, bindings-lxc, mtl, transformers }:
     mkDerivation {
       pname = "lxc";
       version = "0.3.1.1";
       sha256 = "1mksram2nlb611b81yh5smvgr3dqxyabphrrpimspixwwl8173zr";
       buildDepends = [ bindings-lxc mtl transformers ];
       homepage = "https://github.com/fizruk/lxc";
       description = "High level Haskell bindings to LXC (Linux containers)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lye" = callPackage
    ({ mkDerivation, free, HCodecs, lens, parsers, transformers
     , trifecta
     }:
     mkDerivation {
       pname = "lye";
       version = "0.1.0.0";
       sha256 = "1pmlxvnlwdsb51pjrkak1sakfh3nyk5lia5pqmr7larlm1n3dx9m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ free HCodecs lens parsers transformers trifecta ];
       description = "A Lilypond-compiling music box";
       license = stdenv.lib.licenses.mit;
     }) {};

  "lz4" = callPackage
    ({ mkDerivation, cereal, hspec, HUnit, QuickCheck }:
     mkDerivation {
       pname = "lz4";
       version = "0.2.3.1";
       sha256 = "1wck0sl7m873pqnpmn95vrp9jbr7awjdp9rrkqgj0nd3l6z65k4q";
       buildDepends = [ cereal ];
       testDepends = [ hspec HUnit QuickCheck ];
       homepage = "http://github.com/mwotton/lz4hs";
       description = "LZ4 compression for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lzma-conduit" = callPackage
    ({ mkDerivation, bindings-DSL, conduit, HUnit, lzma, QuickCheck
     , resourcet, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "lzma-conduit";
       version = "1.1.1";
       sha256 = "1i1khkxpia5hp3f0p7h656yvbgwsxffpl2czxjbkiw6iz31rapwg";
       buildDepends = [ bindings-DSL conduit resourcet transformers ];
       testDepends = [
         conduit HUnit QuickCheck resourcet test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       extraLibraries = [ lzma ];
       homepage = "http://github.com/alphaHeavy/lzma-conduit";
       description = "Conduit interface for lzma/xz compression";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "lzma-enumerator" = callPackage
    ({ mkDerivation, bindings-DSL, enumerator, HUnit, lzma, mtl
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "lzma-enumerator";
       version = "0.1.3";
       sha256 = "0pzz8bf6310p23pmsa013i8vib0xsfvlkj7zp0w9xs2xsi4j7jk1";
       buildDepends = [ bindings-DSL enumerator mtl ];
       testDepends = [
         enumerator HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       extraLibraries = [ lzma ];
       homepage = "http://github.com/alphaHeavy/lzma-enumerator";
       description = "Enumerator interface for lzma/xz compression";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "maccatcher" = callPackage
    ({ mkDerivation, binary, parsec }:
     mkDerivation {
       pname = "maccatcher";
       version = "2.1.5";
       sha256 = "0z56rbfr8vijhjf3dcqd4kaxgx9bf3qgi9sm61yc3i6ra60w7byb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary parsec ];
       description = "Obtain the host MAC address on *NIX and Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "machinecell" = callPackage
    ({ mkDerivation, arrows, free, hspec, mtl, profunctors, QuickCheck
     }:
     mkDerivation {
       pname = "machinecell";
       version = "1.2.0";
       sha256 = "0c6dqwl8pd922afvbxirhipf5kcqksfmlb6rd8iycr8ix54962gb";
       buildDepends = [ arrows free mtl profunctors ];
       testDepends = [ hspec mtl profunctors QuickCheck ];
       homepage = "http://github.com/as-capabl/machinecell";
       description = "Arrow based stream transducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "machines" = callPackage
    ({ mkDerivation, comonad, doctest, filepath, free, mtl, pointed
     , profunctors, semigroups, transformers, void
     }:
     mkDerivation {
       pname = "machines";
       version = "0.4.1";
       sha256 = "1wripnvpzfdnf7i2aygjyh33cp7srkb5638snwyn700bjbi2j7gb";
       buildDepends = [
         comonad free mtl pointed profunctors semigroups transformers void
       ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/machines/";
       description = "Networked stream transducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "machines-directory" = callPackage
    ({ mkDerivation, filepath, machines, machines-io, transformers }:
     mkDerivation {
       pname = "machines-directory";
       version = "0.0.0.1";
       sha256 = "1npgh7f5czx6r3s05y48rs6xkrgpv3if38apwnbvi4ignmsfsvyx";
       buildDepends = [ filepath machines machines-io transformers ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "Directory (system) utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "machines-io" = callPackage
    ({ mkDerivation, chunked-data, machines, transformers }:
     mkDerivation {
       pname = "machines-io";
       version = "0.1.0.0";
       sha256 = "07ky1j9ihn493a8q2g1pc0ynam1mkzdi4hjs74kpfnlvl9x6ic7g";
       buildDepends = [ chunked-data machines transformers ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "IO utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "machines-process" = callPackage
    ({ mkDerivation, chunked-data, machines, machines-io }:
     mkDerivation {
       pname = "machines-process";
       version = "0.0.0.1";
       sha256 = "028m3mjq757h5v295idcyiffvf059nvycbflcv4zxjypz9smqj1r";
       buildDepends = [ chunked-data machines machines-io ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "Process (system) utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "macho" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "macho";
       version = "0.22";
       sha256 = "13i8bap38ha8j0259kw4gfx18jxc4860awp3s9rz16i4q2vik0v2";
       buildDepends = [ binary ];
       homepage = "http://github.com/erikcharlebois/macho";
       description = "Parser for Mach-O object format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "maclight" = callPackage
    ({ mkDerivation, filemanip, filepath, HUnit, optparse-applicative
     , parsec, strict, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "maclight";
       version = "0.1.0.0";
       sha256 = "0qf44jza8avq2yfsx2f0bdxbnda4lm3xq9qaivmslfbdfjy3mxv3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filemanip filepath optparse-applicative parsec strict
       ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "http://github.com/tych0/maclight";
       description = "Control screen and keyboard backlights on MACs under Linux";
       license = stdenv.lib.licenses.mit;
     }) {};

  "macosx-make-standalone" = callPackage
    ({ mkDerivation, data-lens, data-lens-template, deepseq, filepath
     , graph-visit, mtl, transformers
     }:
     mkDerivation {
       pname = "macosx-make-standalone";
       version = "0.1.0.1";
       sha256 = "04j5fpj4758bl8ksaqn4zz6dl8pg24ih65k1b0pg8qrar4275r14";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-lens data-lens-template deepseq filepath graph-visit mtl
         transformers
       ];
       homepage = "https://github.com/atzedijkstra/macosx-make-standalone";
       description = "Make a macosx app standalone deployable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mage" = callPackage
    ({ mkDerivation, curses, mtl, random }:
     mkDerivation {
       pname = "mage";
       version = "1.1.0";
       sha256 = "0fknvy48sanvq7vg5pxwbjsahpiby1hba5wf8w6rq2g3d0a1cjwz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl random ];
       extraLibraries = [ curses ];
       homepage = "http://www.scannedinavian.com/~shae/mage-1.0pre35.tar.gz";
       description = "Rogue-like";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "magic" = callPackage
    ({ mkDerivation, magic }:
     mkDerivation {
       pname = "magic";
       version = "1.1";
       sha256 = "10p0gjjjwr1dda7hahwrwn5njbfhl67arq3v3nf1jr3vymlkn75j";
       extraLibraries = [ magic ];
       description = "Interface to C file/magic library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) magic; };

  "magma" = callPackage
    ({ mkDerivation, deepseq, profunctors, semigroups }:
     mkDerivation {
       pname = "magma";
       version = "0.3.0.0";
       sha256 = "0bk4a9kw2jxvvz81ppj6qh3kk8cbknnqmg6vvkd0kpn70rcx0hnv";
       buildDepends = [ deepseq profunctors semigroups ];
       homepage = "https://github.com/cutsea110/magma";
       description = "magma is an algebraic structure consisting a set together with an binary operation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mahoro" = callPackage
    ({ mkDerivation, ConfigFile, curl, happstack-state, MissingH, mtl
     , network, regex-posix, tagsoup, utf8-string, XMPP
     }:
     mkDerivation {
       pname = "mahoro";
       version = "0.1.2";
       sha256 = "0fmhms0415wawd539ipdj47gf27h2jjq2gpzhb0s21r6z63ayp7f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile curl happstack-state MissingH mtl network regex-posix
         tagsoup utf8-string XMPP
       ];
       homepage = "http://kagami.touhou.ru/projects/show/mahoro";
       description = "ImageBoards to XMPP gate";
       license = "GPL";
     }) {};

  "maid" = callPackage
    ({ mkDerivation, air, air-th, data-default, filepath, hack2
     , hack2-contrib, hack2-handler-snap-server, moe, text
     }:
     mkDerivation {
       pname = "maid";
       version = "2014.10.14";
       sha256 = "1gss86263pzwvm14yx5lqzskrwc3z6521z9yp0mg8780qgr8h9sr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         air air-th data-default filepath hack2 hack2-contrib
         hack2-handler-snap-server moe text
       ];
       homepage = "https://github.com/nfjinjing/maid";
       description = "A simple static web server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mailbox-count" = callPackage
    ({ mkDerivation, cmdargs, configurator, doctest, filemanip
     , filepath, HDBC, HDBC-postgresql, HDBC-sqlite3, MissingH, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "mailbox-count";
       version = "0.0.2";
       sha256 = "1zd3vd0sj4pq8nhjn768rpfyn9a06a9c3j2fnhxsb9d800ilpvvf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs configurator filepath HDBC HDBC-postgresql HDBC-sqlite3
         MissingH tasty tasty-hunit
       ];
       testDepends = [
         cmdargs configurator doctest filemanip filepath HDBC
         HDBC-postgresql HDBC-sqlite3 MissingH tasty tasty-hunit
       ];
       description = "Count mailboxes in a SQL database";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mailchimp-subscribe" = callPackage
    ({ mkDerivation, aeson, http-client, http-client-tls, http-types
     , reflection, scotty, text, transformers, wai-extra
     }:
     mkDerivation {
       pname = "mailchimp-subscribe";
       version = "1.0";
       sha256 = "0c6sn7bpzw82iarpw40l88f58xrjl9gzdqx1xnbafzdyfhbrnzbi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson http-client http-client-tls http-types reflection scotty text
         transformers wai-extra
       ];
       homepage = "https://github.com/mietek/mailchimp-subscribe/";
       description = "MailChimp subscription request handler";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mailgun" = callPackage
    ({ mkDerivation, conduit, exceptions, failure, http-client
     , http-client-multipart, http-conduit, monad-control, network, text
     , transformers
     }:
     mkDerivation {
       pname = "mailgun";
       version = "0.1.0.4";
       sha256 = "01xcr0dwbkpryavk054y52fdk9qis4s6df8d0yxz05kdl8b5nczq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         conduit exceptions failure http-client http-client-multipart
         http-conduit monad-control network text transformers
       ];
       homepage = "https://github.com/AndrewRademacher/mailgun";
       description = "Connector to Rackspace's Mailgun Service";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mainland-pretty" = callPackage
    ({ mkDerivation, srcloc, text }:
     mkDerivation {
       pname = "mainland-pretty";
       version = "0.2.7";
       sha256 = "1g4s2xscj6dpkcghs5lws658ki0rhriivpdr5ilcycvr28k3l35q";
       buildDepends = [ srcloc text ];
       homepage = "http://www.eecs.harvard.edu/~mainland/";
       description = "Pretty printing designed for printing source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "majordomo" = callPackage
    ({ mkDerivation, cmdargs, monad-loops, threads, time
     , zeromq-haskell
     }:
     mkDerivation {
       pname = "majordomo";
       version = "0.1.6";
       sha256 = "1rjarfwjqlrq9cdgjv93v6jwg58984c0dwjk506svsr29ll0p1b1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs monad-loops threads time zeromq-haskell ];
       description = "Majordomo protocol for ZeroMQ";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "majority" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "majority";
       version = "1.1";
       sha256 = "1442xw8i9jgk3hqavqikks98qs9l3i37lk63xyzpdgnlkfqapzka";
       homepage = "https://github.com/niswegmann/majority";
       description = "Boyer-Moore Majority Vote Algorithm";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "make-hard-links" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "make-hard-links";
       version = "0.2";
       sha256 = "0bynbrn7fnnw7s6wafaji5yf21zjsrdmdfyb7m97bk77ss0gprq2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "Change duplicated files into hard-links";
       license = "GPL";
     }) {};

  "make-package" = callPackage
    ({ mkDerivation, async, configurator, filepath, github, haskeline
     , lens, lens-datetime, mtl, text, time
     }:
     mkDerivation {
       pname = "make-package";
       version = "1.2.0";
       sha256 = "1502pggc0gcmsj6fhzkjcrbqydaxz4qivsmv57jm6cxpbypkyin3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         async configurator filepath github haskeline lens lens-datetime mtl
         text time
       ];
       homepage = "https://github.com/Philonous/make-package";
       description = "Make a cabalized package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "makedo" = callPackage
    ({ mkDerivation, filepath, HSH }:
     mkDerivation {
       pname = "makedo";
       version = "0.1";
       sha256 = "0sc2fa45a046lw5x5z839gb1zk0d5nj663ghxajiclm6iw65kl2n";
       buildDepends = [ filepath HSH ];
       homepage = "http://darcsden.com/kowey/makedo";
       description = "Helper for writing redo scripts in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "managed" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "managed";
       version = "1.0.0";
       sha256 = "06nb71pd68m5l6a48sz5kkrdif74phbg3y6bn9ydd00y515b9gn5";
       buildDepends = [ transformers ];
       description = "A monad for managed values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "manatee" = callPackage
    ({ mkDerivation, binary, cairo, dbus-client, dbus-core, derive
     , filepath, gtk, gtk-serialized-event, manatee-core, mtl, stm, text
     , utf8-string
     }:
     mkDerivation {
       pname = "manatee";
       version = "0.2.2";
       sha256 = "1v44kml92i426hbinjmx00znyp7dwxa8qj0bmhb3hz0fwmgck1c3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cairo dbus-client dbus-core derive filepath gtk
         gtk-serialized-event manatee-core mtl stm text utf8-string
       ];
       description = "The Haskell/Gtk+ Integrated Live Environment";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-all" = callPackage
    ({ mkDerivation, manatee, manatee-browser, manatee-core
     , manatee-curl, manatee-editor, manatee-filemanager
     , manatee-imageviewer, manatee-ircclient, manatee-mplayer
     , manatee-pdfviewer, manatee-processmanager, manatee-reader
     , manatee-terminal, manatee-welcome
     }:
     mkDerivation {
       pname = "manatee-all";
       version = "0.2.2";
       sha256 = "1l3s22svds27q8hyh9nsawpc11crcll3vrcbfy6dvk64s04mwr21";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         manatee manatee-browser manatee-core manatee-curl manatee-editor
         manatee-filemanager manatee-imageviewer manatee-ircclient
         manatee-mplayer manatee-pdfviewer manatee-processmanager
         manatee-reader manatee-terminal manatee-welcome
       ];
       description = "Virtual package to install all Manatee packages";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-anything" = callPackage
    ({ mkDerivation, dataenc, dbus-client, dbus-core, filepath, gio
     , GoogleSuggest, gtk, manatee-core, mtl, network, proc, regex-tdfa
     , split, stm, text, utf8-string
     }:
     mkDerivation {
       pname = "manatee-anything";
       version = "0.0.8";
       sha256 = "1ag0272cv700yi7y539hz3r04hqfqq9mx3cacp4hix4wag25f0n8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         dataenc dbus-client dbus-core filepath gio GoogleSuggest gtk
         manatee-core mtl network proc regex-tdfa split stm text utf8-string
       ];
       description = "Multithread interactive input/search framework for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-browser" = callPackage
    ({ mkDerivation, binary, dbus-client, derive, filepath, gtk
     , manatee-core, mtl, stm, text, utf8-string, webkit
     }:
     mkDerivation {
       pname = "manatee-browser";
       version = "0.1.1";
       sha256 = "01blfcfynfbshznrz4arn89j7s063s7xhlkqnzbv42wqk04i083h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client derive filepath gtk manatee-core mtl stm text
         utf8-string webkit
       ];
       description = "Browser extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-core" = callPackage
    ({ mkDerivation, binary, Cabal, cairo, dataenc, dbus-client
     , dbus-core, derive, filepath, gconf, ghc-paths, gio, glib, gtk
     , gtk-serialized-event, gtksourceview2, haskell-src-exts, mtl
     , network, regex-tdfa, split, stm, text, time, utf8-string
     }:
     mkDerivation {
       pname = "manatee-core";
       version = "0.1.1";
       sha256 = "05s5cd43a395jgyh4i01wzzzwha9rx9vrflwyr6lpz5nqnfp755v";
       buildDepends = [
         binary Cabal cairo dataenc dbus-client dbus-core derive filepath
         gconf ghc-paths gio glib gtk gtk-serialized-event gtksourceview2
         haskell-src-exts mtl network regex-tdfa split stm text time
         utf8-string
       ];
       description = "The core of Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-curl" = callPackage
    ({ mkDerivation, binary, curl, dbus-client, dbus-core, derive
     , filepath, gio, glib, gtk, manatee-core, mtl, network, regex-tdfa
     , stm, text, utf8-string
     }:
     mkDerivation {
       pname = "manatee-curl";
       version = "0.1.1";
       sha256 = "0v525dcg6cs8mfrcbaxk9vx86gnd37c2z8gp9q8fck11616vckvn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary curl dbus-client dbus-core derive filepath gio glib gtk
         manatee-core mtl network regex-tdfa stm text utf8-string
       ];
       description = "Download Manager extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-editor" = callPackage
    ({ mkDerivation, binary, dbus-client, dbus-core, derive, filepath
     , gtk, gtksourceview2, manatee-core, regex-tdfa, stm, text
     }:
     mkDerivation {
       pname = "manatee-editor";
       version = "0.1.1";
       sha256 = "0rd6xjc1hmvfchwjh32ij4sa36z0v6b1k81gnx7278qqsscmgl9y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client dbus-core derive filepath gtk gtksourceview2
         manatee-core regex-tdfa stm text
       ];
       description = "Editor extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-filemanager" = callPackage
    ({ mkDerivation, binary, dbus-client, derive, filepath, gio, glib
     , gtk, manatee-core, mtl, stm, text, utf8-string
     }:
     mkDerivation {
       pname = "manatee-filemanager";
       version = "0.1.1";
       sha256 = "06zrhycpsnfi8r3a071p6qlrqidddv004h10zcglb9ryhw0sh2p1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client derive filepath gio glib gtk manatee-core mtl
         stm text utf8-string
       ];
       description = "File manager extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-imageviewer" = callPackage
    ({ mkDerivation, binary, dbus-client, derive, filepath, gio, glib
     , gtk, gtkimageview, manatee-core, regex-tdfa, stm, text
     , utf8-string
     }:
     mkDerivation {
       pname = "manatee-imageviewer";
       version = "0.1.1";
       sha256 = "0yn32xsckvw96kxskfhgcqg98rffl07hkwfjzyd7cm221hwd9s0g";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client derive filepath gio glib gtk gtkimageview
         manatee-core regex-tdfa stm text utf8-string
       ];
       description = "Image viewer extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-ircclient" = callPackage
    ({ mkDerivation, binary, Cabal, curl, dbus-client, dbus-core
     , derive, fastirc, filepath, GoogleTranslate, groom, gtk
     , gtksourceview2, manatee-core, MorseCode, mtl, nano-md5, network
     , regex-posix, split, stm, text, utf8-string
     }:
     mkDerivation {
       pname = "manatee-ircclient";
       version = "0.1.1";
       sha256 = "0l14r4mw5bwyjzs5m49sp3vdi2lzfgyjwhsb0q94l3937wb4abgy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary Cabal curl dbus-client dbus-core derive fastirc filepath
         GoogleTranslate groom gtk gtksourceview2 manatee-core MorseCode mtl
         nano-md5 network regex-posix split stm text utf8-string
       ];
       description = "IRC client extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-mplayer" = callPackage
    ({ mkDerivation, binary, dbus-client, dbus-core, derive, filepath
     , gio, gtk, libtagc, manatee-core, random, regex-tdfa, stm, text
     , time, utf8-string
     }:
     mkDerivation {
       pname = "manatee-mplayer";
       version = "0.1.1";
       sha256 = "1jg9ikshscpjyq73g125acqndd049ry8zw7h0gglsi63xbqpldz4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client dbus-core derive filepath gio gtk libtagc
         manatee-core random regex-tdfa stm text time utf8-string
       ];
       description = "Mplayer client extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-pdfviewer" = callPackage
    ({ mkDerivation, binary, cairo, dbus-client, derive, filepath, gtk
     , manatee-core, mtl, poppler, stm, text, utf8-string
     }:
     mkDerivation {
       pname = "manatee-pdfviewer";
       version = "0.1.1";
       sha256 = "0k00drrk7mpbc8ak5cwzx245xf968186dkc12cxp7n2h2mccb456";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cairo dbus-client derive filepath gtk manatee-core mtl
         poppler stm text utf8-string
       ];
       description = "PDF viewer extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-processmanager" = callPackage
    ({ mkDerivation, binary, dbus-client, derive, filepath, gtk
     , manatee-core, proc, stm, text
     }:
     mkDerivation {
       pname = "manatee-processmanager";
       version = "0.1.1";
       sha256 = "1zxkfil6anh2v692ky9l6gf40784y2czbx8853xmypnhnvgr95ll";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client derive filepath gtk manatee-core proc stm text
       ];
       description = "Process manager extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-reader" = callPackage
    ({ mkDerivation, binary, curl, dbus-client, derive, download-curl
     , feed, filepath, gtk, manatee-core, stm, text, utf8-string, webkit
     }:
     mkDerivation {
       pname = "manatee-reader";
       version = "0.1.1";
       sha256 = "07zkjg1q3gdqiw1pp0325pyvh84740mxvlf8k6sc6l1l258zpk90";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary curl dbus-client derive download-curl feed filepath gtk
         manatee-core stm text utf8-string webkit
       ];
       description = "Feed reader extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-template" = callPackage
    ({ mkDerivation, binary, dbus-client, dbus-core, derive, filepath
     , gtk, gtksourceview2, manatee-core, regex-tdfa, stm, text
     }:
     mkDerivation {
       pname = "manatee-template";
       version = "0.1.1";
       sha256 = "0lcd3g7gp3fl4xpc51wgk0q9q1lijgnfdla521h7nqz84wcdfbcy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client dbus-core derive filepath gtk gtksourceview2
         manatee-core regex-tdfa stm text
       ];
       description = "Template code to create Manatee application";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-terminal" = callPackage
    ({ mkDerivation, binary, dbus-client, derive, filepath, gtk
     , manatee-core, stm, text, vte
     }:
     mkDerivation {
       pname = "manatee-terminal";
       version = "0.1.1";
       sha256 = "1aj1pghad0jdm3biy9f4caahvpyby0ia3clrl8lg2rmp2j703wkd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client derive filepath gtk manatee-core stm text vte
       ];
       description = "Terminal Emulator extension for Manatee";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "manatee-welcome" = callPackage
    ({ mkDerivation, binary, dbus-client, dbus-core, derive, filepath
     , gtk, manatee-core, regex-tdfa, stm, text
     }:
     mkDerivation {
       pname = "manatee-welcome";
       version = "0.1.1";
       sha256 = "1vwj91i05rwgqmral4v2mmcmlrqy54h816j8vi6d0ivs1693p308";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dbus-client dbus-core derive filepath gtk manatee-core
         regex-tdfa stm text
       ];
       description = "Welcome module to help user play Manatee quickly";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mancala" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mancala";
       version = "0.1";
       sha256 = "1vsrp69qhndagzlw5fg9chi0hhphfbjmlvarypqi3g9fgrdghn46";
       isLibrary = false;
       isExecutable = true;
       homepage = "https://github.com/julianalucena/mancala";
       description = "Simple mancala game";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mandrill" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, blaze-html
     , email-validate, http-client, http-client-tls, http-types, lens
     , mtl, QuickCheck, raw-strings-qq, tasty, tasty-hunit
     , tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "mandrill";
       version = "0.1.1.0";
       sha256 = "12i7475r75n1azgpliyw8q1k6vhaksg7dasrn38x19czzg5mijq9";
       buildDepends = [
         aeson base64-bytestring blaze-html email-validate http-client
         http-client-tls http-types lens mtl QuickCheck text time
       ];
       testDepends = [
         aeson QuickCheck raw-strings-qq tasty tasty-hunit tasty-quickcheck
         text
       ];
       description = "Library for interfacing with the Mandrill JSON API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mandulia" = callPackage
    ({ mkDerivation, filepath, GLUT, hslua, time }:
     mkDerivation {
       pname = "mandulia";
       version = "0.7";
       sha256 = "1wrpzai3482c9g7zfacmjszi6h073ip00fbq17nyc22z2zw4908s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath GLUT hslua time ];
       homepage = "http://gitorious.org/maximus/mandulia";
       description = "A zooming visualisation of the Mandelbrot Set as many Julia Sets";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mangopay" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base16-bytestring
     , base64-bytestring, blaze-builder, case-insensitive, conduit
     , conduit-extra, connection, country-codes, data-default, HTF
     , http-conduit, http-types, HUnit, lifted-base, monad-control
     , monad-logger, resourcet, text, time, tls, transformers
     , transformers-base, unordered-containers, utf8-string, vector, wai
     , warp, x509-system
     }:
     mkDerivation {
       pname = "mangopay";
       version = "1.10.2";
       sha256 = "0lf5f47h4hiqsdr36z2hsq5lrx6xp0imwy6g7qq4zcs3fgz6fdsh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson async attoparsec base16-bytestring base64-bytestring
         blaze-builder case-insensitive conduit conduit-extra connection
         country-codes data-default http-conduit http-types HUnit
         lifted-base monad-control monad-logger resourcet text time tls
         transformers transformers-base unordered-containers utf8-string
         vector wai warp x509-system
       ];
       testDepends = [
         aeson async attoparsec base16-bytestring base64-bytestring
         blaze-builder case-insensitive conduit conduit-extra connection
         country-codes data-default HTF http-conduit http-types HUnit
         lifted-base monad-control monad-logger resourcet text time tls
         transformers transformers-base unordered-containers utf8-string
         vector wai warp x509-system
       ];
       homepage = "https://github.com/prowdsponsor/mangopay";
       description = "Bindings to the MangoPay API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "map-syntax" = callPackage
    ({ mkDerivation, deepseq, HUnit, mtl, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "map-syntax";
       version = "0.2";
       sha256 = "02v1dvq86qzbfbwbza4myj3a6a6a5p059fi5m3g548hmqk3v2p1r";
       buildDepends = [ mtl ];
       testDepends = [
         deepseq HUnit mtl QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       description = "Syntax sugar for defining maps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "marionetta" = callPackage
    ({ mkDerivation, gloss, mtl, splines, vector, vector-space }:
     mkDerivation {
       pname = "marionetta";
       version = "0.1.0.3";
       sha256 = "0k25m5q8p592xrg2qa0mvm3749gllrj4cmmx2h1k5hssan68bk9g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gloss mtl splines vector vector-space ];
       homepage = "https://github.com/paolino/marionetta";
       description = "A study of marionetta movements";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "markdown" = callPackage
    ({ mkDerivation, attoparsec, blaze-html, blaze-markup, conduit
     , conduit-extra, data-default, hspec, system-fileio
     , system-filepath, text, transformers, xss-sanitize
     }:
     mkDerivation {
       pname = "markdown";
       version = "0.1.13";
       sha256 = "1r04h641d9y8p88h59isrz9g42gq7vdykx3n8bhk499ici800134";
       buildDepends = [
         attoparsec blaze-html blaze-markup conduit conduit-extra
         data-default text transformers xss-sanitize
       ];
       testDepends = [
         blaze-html conduit conduit-extra hspec system-fileio
         system-filepath text transformers
       ];
       homepage = "https://github.com/snoyberg/markdown";
       description = "Convert Markdown to HTML, with XSS protection";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "markdown-kate" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, blaze-html
     , conduit, data-default, highlighting-kate, hspec, markdown
     , system-fileio, system-filepath, text, transformers, xss-sanitize
     }:
     mkDerivation {
       pname = "markdown-kate";
       version = "0.1.2.1";
       sha256 = "0zjqy163rxpjy0w3bn21j193qp04f7sdc8mfskaddqfks402h4i0";
       buildDepends = [
         attoparsec attoparsec-conduit blaze-html conduit data-default
         highlighting-kate text transformers xss-sanitize
       ];
       testDepends = [
         blaze-html conduit hspec markdown system-fileio system-filepath
         text transformers
       ];
       homepage = "https://github.com/joelteon/markdown-kate";
       description = "Convert Markdown to HTML, with XSS protection";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "markdown-pap" = callPackage
    ({ mkDerivation, monads-tf, papillon }:
     mkDerivation {
       pname = "markdown-pap";
       version = "0.0.1.10";
       sha256 = "0cq0s9yixkg98vhsgiv1xjia2cn0b4q6gjl1wv0q7yrm26anaqcq";
       buildDepends = [ monads-tf papillon ];
       description = "markdown parser with papillon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "markdown-unlit" = callPackage
    ({ mkDerivation, hspec, QuickCheck, silently, stringbuilder }:
     mkDerivation {
       pname = "markdown-unlit";
       version = "0.2.0.1";
       sha256 = "1bc3vcifv2xcddh8liq380c6sxarrs5pf21pfs9i4dx9rfl3hvhq";
       isLibrary = true;
       isExecutable = true;
       testDepends = [ hspec QuickCheck silently stringbuilder ];
       description = "Literate Haskell support for Markdown";
       license = stdenv.lib.licenses.mit;
     }) {};

  "markdown2svg" = callPackage
    ({ mkDerivation, binary-file, Cabal, filepath, markdown-pap
     , monads-tf, papillon, png-file, yjsvg
     }:
     mkDerivation {
       pname = "markdown2svg";
       version = "0.0.1.27";
       sha256 = "0sman1849sfr0d56kifpyb0ba9pqghvmyhr3gchcd13qimp80395";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary-file Cabal filepath markdown-pap monads-tf papillon png-file
         yjsvg
       ];
       description = "markdown to svg converter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "marked-pretty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "marked-pretty";
       version = "0.1";
       sha256 = "0xwymfwja9fh4wgqpqczi9zrn9bynxy069sfcg5d14zd5j54zy8w";
       isLibrary = true;
       isExecutable = true;
       description = "Pretty-printing library, with scoping, based on pretty-1.0.0.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "markov" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "markov";
       version = "0.1";
       sha256 = "1ka44rvrl9ppshbjmk95997cna670bqwjsharcr9qsalp6pchmdf";
       description = "Simple interpreter for Markov's normal algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "markov-chain" = callPackage
    ({ mkDerivation, random, transformers }:
     mkDerivation {
       pname = "markov-chain";
       version = "0.0.3.3";
       sha256 = "1y9fjsf6dg6a9ha75w2szq4gi5fhq89l1r7wqb20hmadkcjjplx8";
       buildDepends = [ random transformers ];
       homepage = "http://code.haskell.org/~thielema/markov-chain/";
       description = "Markov Chains for generating random sequences with a user definable behaviour";
       license = "GPL";
     }) {};

  "markov-processes" = callPackage
    ({ mkDerivation, assertions, bifunctors, memoize, MonadRandom
     , random
     }:
     mkDerivation {
       pname = "markov-processes";
       version = "0.0.2";
       sha256 = "1pd09fdy05l3drmpdd3rbid6g2vdyalrpc704xmacbp186hmnf38";
       buildDepends = [ bifunctors memoize MonadRandom random ];
       testDepends = [ assertions bifunctors memoize random ];
       description = "Hidden Markov processes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "markup" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, hspec, lucid, mtl, text
     , transformers, urlpath
     }:
     mkDerivation {
       pname = "markup";
       version = "0.0.3";
       sha256 = "0cnbfdaxazddh6chx79yb6dx6fchd0fw3ps7f7zk4nz7pk3fksg1";
       buildDepends = [
         blaze-html blaze-markup lucid mtl text transformers urlpath
       ];
       testDepends = [ hspec ];
       description = "Abstraction for markup languages";
       license = stdenv.lib.licenses.mit;
     }) {};

  "markup-preview" = callPackage
    ({ mkDerivation, cmdargs, glib, gtk, MissingH, mtl, pandoc
     , temporary, transformers, webkit
     }:
     mkDerivation {
       pname = "markup-preview";
       version = "0.2.0.2";
       sha256 = "1y4ha8wn2v7rw9v3sy0faxnmi0g623bnvyj05gha2nnxrzif9pdd";
       editedCabalFile = "0nz2jamp44a6h26xc1435gdhjfkdi7cb5spbfxh6b0ggxn3c5a1h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs glib gtk MissingH mtl pandoc temporary transformers webkit
       ];
       description = "A simple markup document preview (markdown, textile, reStructuredText)";
       license = "unknown";
     }) {};

  "marmalade-upload" = callPackage
    ({ mkDerivation, aeson, Cabal, data-default, exceptions, filepath
     , http-client, http-client-tls, http-types, keyring, mtl, network
     , optparse-applicative, shake, split, tasty, tasty-hunit, text
     , transformers, zip-archive
     }:
     mkDerivation {
       pname = "marmalade-upload";
       version = "0.10";
       sha256 = "0643l0xnm4rq6zfbbd01ps3z7qnw7crvpblg7n5rwigi0m1zl4n9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson Cabal data-default exceptions filepath http-client
         http-client-tls http-types keyring mtl network optparse-applicative
         shake split text transformers zip-archive
       ];
       testDepends = [
         aeson exceptions tasty tasty-hunit text transformers
       ];
       homepage = "https://github.com/lunaryorn/marmalade-upload";
       description = "Upload packages to Marmalade";
       license = stdenv.lib.licenses.mit;
     }) {};

  "marxup" = callPackage
    ({ mkDerivation, configurator, cubicbezier, dlist, filepath
     , glpk-hs, graphviz, labeled-tree, lens, mtl, parsek
     , polynomials-bernstein, text, typography-geometry, vector
     }:
     mkDerivation {
       pname = "marxup";
       version = "3.0.0.1";
       sha256 = "01yz9ry25k6kq1r8z3dbqj2xqm95wssfh2jhwarv3w3z65wa6x8n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         configurator cubicbezier dlist filepath glpk-hs graphviz
         labeled-tree lens mtl parsek polynomials-bernstein text
         typography-geometry vector
       ];
       description = "Markup language preprocessor for Haskell";
       license = "GPL";
     }) {};

  "masakazu-bot" = callPackage
    ({ mkDerivation, authenticate-oauth, conduit, datetime, lens
     , monad-logger, parsers, persistent, persistent-sqlite
     , persistent-template, regex-posix, text, transformers
     , twitter-conduit, twitter-types
     }:
     mkDerivation {
       pname = "masakazu-bot";
       version = "0.4.0.0";
       sha256 = "1p9d2vy3c7yh1w1aczh3f4886q0hldrpisnkk40w62cqvjg7sig7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         authenticate-oauth conduit datetime lens monad-logger parsers
         persistent persistent-sqlite persistent-template regex-posix text
         transformers twitter-conduit twitter-types
       ];
       homepage = "https://github.com/minamiyama1994/chomado-bot-on-haskell/tree/minamiyama1994";
       description = "@minamiyama1994_bot on haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mastermind" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "mastermind";
       version = "2010.7.25.1";
       sha256 = "0bxzjs19n2c7xd1v2hrzx6h1rrw6m8yax7kbcar0q766bv36qfmy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://wiki.github.com/paolino/mastermind";
       description = "console mastermind decypher";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "matchers" = callPackage
    ({ mkDerivation, parsec, pcre, prednote, text, time }:
     mkDerivation {
       pname = "matchers";
       version = "0.20.0.0";
       sha256 = "04qqvhvr0w93s4ha946gqwqqy6ii33k9pql9nigxjqzah6xc2ifa";
       buildDepends = [ parsec prednote text time ];
       extraLibraries = [ pcre ];
       homepage = "http://www.github.com/massysett/matchers";
       description = "Text matchers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "math-functions" = callPackage
    ({ mkDerivation, deepseq, erf, HUnit, ieee754, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "math-functions";
       version = "0.1.5.2";
       sha256 = "12cznf7gwia1ki7xhvlhk5p8d09zrdvfgn07pkp4sfrwsc4vijcy";
       buildDepends = [ deepseq erf vector vector-th-unbox ];
       testDepends = [
         HUnit ieee754 QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/bos/math-functions";
       description = "Special functions and Chebyshev polynomials";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mathblog" = callPackage
    ({ mkDerivation, ConfigFile, filepath, HStringTemplate, HUnit
     , pandoc, pandoc-types, SHA, test-framework, test-framework-hunit
     , time
     }:
     mkDerivation {
       pname = "mathblog";
       version = "0.5";
       sha256 = "01iyzrwscqirhcr4622d0n16mr4p54qbvg5m2a0ns36j59xfd79g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile filepath HStringTemplate HUnit pandoc pandoc-types SHA
         test-framework test-framework-hunit time
       ];
       description = "A program for creating and managing a static weblog with LaTeX math and function graphs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mathgenealogy" = callPackage
    ({ mkDerivation, binary, cmdargs, fgl, filepath, graphviz, HTTP
     , safe, tagsoup, text
     }:
     mkDerivation {
       pname = "mathgenealogy";
       version = "1.3.0";
       sha256 = "1gbk1bv5v7s4mbs3cr30zhfnm3zrhxhly3791mar5807bqw86q5v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary cmdargs fgl filepath graphviz HTTP safe tagsoup text
       ];
       description = "Discover your (academic) ancestors!";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "mathlink" = callPackage
    ({ mkDerivation, c2hs, ix-shapable, mtl }:
     mkDerivation {
       pname = "mathlink";
       version = "2.0.1.1";
       sha256 = "1agqbhl6r40swsvsllyx9vf9hc9a709wvg546rh6fn315waifqqk";
       buildDepends = [ ix-shapable mtl ];
       buildTools = [ c2hs ];
       homepage = "http://community.haskell.org/~TracyWadleigh/mathlink";
       description = "Write Mathematica packages in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "matlab" = callPackage
    ({ mkDerivation, Cabal, eng, filepath, matlab, mx }:
     mkDerivation {
       pname = "matlab";
       version = "0.1";
       sha256 = "0rrpsf0xah8as9khm1jiyrcaqc1r4ykpab2ldyx4d0szgmfb93c1";
       buildDepends = [ Cabal filepath ];
       buildTools = [ matlab ];
       extraLibraries = [ eng mx ];
       description = "Matlab bindings and interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "matrices" = callPackage
    ({ mkDerivation, primitive, vector }:
     mkDerivation {
       pname = "matrices";
       version = "0.2.0";
       sha256 = "07b56hddagqm9pq22wdw6rb61gykjq1840a5mazz857d5vbbpm2z";
       buildDepends = [ primitive vector ];
       description = "native matrix based on vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "matrix" = callPackage
    ({ mkDerivation, deepseq, loop, primitive, QuickCheck, tasty
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrix";
       version = "0.3.4.0";
       sha256 = "16a633llf7nh70s92cn8i8sdish9vryy4xh62rimvmn91ivvjay1";
       buildDepends = [ deepseq loop primitive vector ];
       testDepends = [ QuickCheck tasty tasty-quickcheck ];
       description = "A native implementation of matrix operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "matrix-market" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "matrix-market";
       version = "1.2";
       sha256 = "1hzpjkmwr24073mf9i13rx3n23ri0b5vmvwx8k9lxbrg1821hy28";
       homepage = "http://stat.stanford.edu/~patperry/code/matrix-market";
       description = "Read and write NIST Matrix Market files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "matrix-market-pure" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "matrix-market-pure";
       version = "0.2";
       sha256 = "05jjf5wnxhbafrca1qfzlrxvysy5bff22mzk45pia5b9gwdhygn1";
       homepage = "http://bitbucket.org/jetxee/hs-matrix-market";
       description = "Pure and composable reader and writer of the Matrix Market format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "matsuri" = callPackage
    ({ mkDerivation, ConfigFile, MissingH, mtl, network, split, time
     , vty, vty-ui, XMPP
     }:
     mkDerivation {
       pname = "matsuri";
       version = "0.0.4";
       sha256 = "15pjqyy9qs9bn2vfayl73h5maf01snv7rvq1acb3ly8pain36lh4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile MissingH mtl network split time vty vty-ui XMPP
       ];
       homepage = "http://kagami.touhou.ru/projects/show/matsuri";
       description = "ncurses XMPP client";
       license = "GPL";
     }) {};

  "maude" = callPackage
    ({ mkDerivation, filepath, process-extras, temporary, text, xml }:
     mkDerivation {
       pname = "maude";
       version = "0.6.1";
       sha256 = "0qadqpj5vzg84mqh29p6vr2ffih7y69ds0jdpxmr17am5bh3mhql";
       buildDepends = [ filepath process-extras temporary text xml ];
       homepage = "https://github.com/davidlazar/maude-hs";
       description = "An interface to the Maude rewriting system";
       license = stdenv.lib.licenses.mit;
     }) {};

  "maxent" = callPackage
    ({ mkDerivation, ad, hmatrix, lagrangian, nonlinear-optimization
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "maxent";
       version = "0.7";
       sha256 = "0vxfxlvcrmqcxplw6f2r7nljcam9iv92jy2nxa7x67ldyj7yxk28";
       buildDepends = [ ad lagrangian nonlinear-optimization vector ];
       testDepends = [
         ad hmatrix lagrangian nonlinear-optimization QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         vector
       ];
       homepage = "https://github.com/jfischoff/maxent";
       description = "Compute Maximum Entropy Distributions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "maximal-cliques" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "maximal-cliques";
       version = "0.1";
       sha256 = "1kjmjsvxf35sapqq7vhiyd5fc73wj1c0l11hvc41x7pkw87qm83v";
       buildDepends = [ vector ];
       description = "Enumerate all maximal cliques of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "maxsharing" = callPackage
    ({ mkDerivation, base-unicode-symbols, boxes
     , containers-unicode-symbols, HaLeX, IndentParser, mtl, parsec
     , uuagc, uuagc-cabal
     }:
     mkDerivation {
       pname = "maxsharing";
       version = "1.0.2";
       sha256 = "1a9z3bmdjl5mhn718bj8h95m4xlhiyimkz7z54d0dmcv6ryld4wx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols boxes containers-unicode-symbols HaLeX
         IndentParser mtl parsec uuagc uuagc-cabal
       ];
       homepage = "http://rochel.info/maxsharing/";
       description = "Maximal sharing of terms in the lambda calculus with letrec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "maybench" = callPackage
    ({ mkDerivation, benchpress, Cabal, filepath, mtl, time }:
     mkDerivation {
       pname = "maybench";
       version = "0.2.4.1";
       sha256 = "1iqfmvj9maa0f4gk66g0j1dv1prhac3vb0b225d9sw9bliwnb1br";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ benchpress Cabal filepath mtl time ];
       homepage = "http://code.google.com/p/maybench/";
       description = "Automated benchmarking tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mbox" = callPackage
    ({ mkDerivation, safe, text, time }:
     mkDerivation {
       pname = "mbox";
       version = "0.2";
       sha256 = "0n4f2jzbxqdyvd67zwp5wrdv6iym0n3yadm84rxriclkc3c6pzv0";
       buildDepends = [ safe text time ];
       description = "Read and write standard mailbox files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mbox-tools" = callPackage
    ({ mkDerivation, codec-mbox, fclabels, hsemail, mtl, parsec
     , pureMD5, random
     }:
     mkDerivation {
       pname = "mbox-tools";
       version = "0.2.0.4";
       sha256 = "1j0dl97skgbxq2gcd3w6jzsdd2yv1mw6z4fz61akcimzyn8c2lvh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         codec-mbox fclabels hsemail mtl parsec pureMD5 random
       ];
       homepage = "https://github.com/np/mbox-tools";
       description = "A collection of tools to process mbox files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mcmaster-gloss-examples" = callPackage
    ({ mkDerivation, gloss }:
     mkDerivation {
       pname = "mcmaster-gloss-examples";
       version = "2013";
       sha256 = "178f2n2r7m4jznkzhnqqslqf0czvz9h7cifhbdmvr1nihhgb532q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gloss ];
       homepage = "http://www.cas.mcmaster.ca/~anand/";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mcmc-samplers" = callPackage
    ({ mkDerivation, hakaru, hmatrix, mwc-random, primitive, statistics
     }:
     mkDerivation {
       pname = "mcmc-samplers";
       version = "0.1.1.1";
       sha256 = "0pqc6i86b5vdhfw93x220k0x7dcfs77s7az6avaw7fn2q6xl1qli";
       buildDepends = [ hakaru hmatrix mwc-random primitive statistics ];
       description = "Combinators for MCMC sampling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mcmc-synthesis" = callPackage
    ({ mkDerivation, MonadRandom }:
     mkDerivation {
       pname = "mcmc-synthesis";
       version = "0.1.2.2";
       sha256 = "14z1x9dqnjj391nrlngs9s887yqh3arc7kfgk0m3d89vrkc185vq";
       buildDepends = [ MonadRandom ];
       description = "MCMC applied to probabilistic program synthesis";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mcpi" = callPackage
    ({ mkDerivation, network, pipes, split, transformers }:
     mkDerivation {
       pname = "mcpi";
       version = "0.0.1.2";
       sha256 = "15ab4fl49nq398q49wz5fgphfb7xzbrf4j51rnd80qb30rm6xfl6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network pipes split transformers ];
       homepage = "https://github.com/DougBurke/hmcpi";
       description = "Connect to MineCraft running on a Raspberry PI";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "mdo" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mdo";
       version = "0.0.1";
       sha256 = "13i4lb74m69k6ij3rq0dqwghdazwmc60fs55prc1h3p7b0rz15mv";
       isLibrary = false;
       isExecutable = true;
       description = "Command-line tool to run a command on each of the items";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mecab" = callPackage
    ({ mkDerivation, mecab, text }:
     mkDerivation {
       pname = "mecab";
       version = "0.4.0";
       sha256 = "0z650y4fnxr4mk0i5s8axjbq14dcpgnrzkafbpg17vfhl2v5a3z3";
       buildDepends = [ text ];
       extraLibraries = [ mecab ];
       homepage = "http://github.com/tanakh/hsmecab";
       description = "A Haskell binding to MeCab";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) mecab; };

  "mecha" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mecha";
       version = "0.1.1";
       sha256 = "0y3rzif667kjaxmnf9d382lcbxf27y4ik02kisij125kc7yi6d21";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://tomahawkins.org";
       description = "A constructive solid geometry (CSG) modeling language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mediawiki" = callPackage
    ({ mkDerivation, HTTP, mime, network, utf8-string, xml }:
     mkDerivation {
       pname = "mediawiki";
       version = "0.2.6";
       sha256 = "1wfrhii7zqrw6rmskab40h9zliidi34kd4n07rdkvf8f8nypwg1r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HTTP mime network utf8-string xml ];
       description = "Interfacing with the MediaWiki API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mediawiki2latex" = callPackage
    ({ mkDerivation, blaze-html, directory-tree, file-embed, filepath
     , happstack-server, highlighting-kate, HTTP, http-conduit, hxt
     , hxt-http, mtl, network, parsec, split, temporary, text
     , transformers, url, utf8-string, utility-ht
     }:
     mkDerivation {
       pname = "mediawiki2latex";
       version = "7.9.0.1";
       sha256 = "0q708hh5280k5hknf1mh3nza7qvpszplcis90y0i78a2jd0x2r3w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-html directory-tree file-embed filepath happstack-server
         highlighting-kate HTTP http-conduit hxt hxt-http mtl network parsec
         split temporary text transformers url utf8-string utility-ht
       ];
       homepage = "http://sourceforge.net/projects/wb2pdf/";
       description = "Convert MediaWiki text to LaTeX";
       license = "GPL";
     }) {};

  "meep" = callPackage
    ({ mkDerivation, bifunctors, doctest, hspec
     , hspec-expectations-lens, lens, QuickCheck, semigroups
     }:
     mkDerivation {
       pname = "meep";
       version = "0.1.1.0";
       sha256 = "1rk5mrvmk07m5zdayfvxirak58d1bxwb04sgg0gcx07w8q8k4yyq";
       buildDepends = [ bifunctors lens semigroups ];
       testDepends = [
         bifunctors doctest hspec hspec-expectations-lens lens QuickCheck
         semigroups
       ];
       description = "A silly container";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mega-sdist" = callPackage
    ({ mkDerivation, conduit, http-conduit, http-types, network, shelly
     , system-fileio, system-filepath, tar, text, transformers
     , zlib-conduit
     }:
     mkDerivation {
       pname = "mega-sdist";
       version = "0.2.10.4";
       sha256 = "0x85l77q9zzi1gmcl9h3rrjbgyfynxqcczl636iah88wvdg7lplg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         conduit http-conduit http-types network shelly system-fileio
         system-filepath tar text transformers zlib-conduit
       ];
       homepage = "https://github.com/snoyberg/mega-sdist";
       description = "Handles uploading to Hackage from mega repos (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "meldable-heap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "meldable-heap";
       version = "2.0.3";
       sha256 = "1p75zjlls38sd1lma7w95mpmb9kdff19s2as6pz1ki1g20nnxdk3";
       homepage = "http://code.google.com/p/priority-queues/";
       description = "Asymptotically optimal, Coq-verified meldable heaps, AKA priority queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "melody" = callPackage
    ({ mkDerivation, either, HUnit, lens, mtl, parsec, ParsecTools
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "melody";
       version = "0.2";
       sha256 = "1sbwd1xmgh94ll3xm7ancjsaalk2mphnr1l331zix5s3kqvy6g6p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ either lens mtl parsec ParsecTools ];
       testDepends = [ HUnit mtl test-framework test-framework-hunit ];
       description = "A functional scripting language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "memcache" = callPackage
    ({ mkDerivation, binary, blaze-builder, network }:
     mkDerivation {
       pname = "memcache";
       version = "0.0.0";
       sha256 = "0bwnr28wn5anc2bcg2fwci3rgn2ykxp1gg58qg97d7lw1djmikwr";
       buildDepends = [ binary blaze-builder network ];
       homepage = "https://github.com/dterei/memcache-hs";
       description = "A memcached client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "memcached" = callPackage
    ({ mkDerivation, network, utf8-light }:
     mkDerivation {
       pname = "memcached";
       version = "0.2.1";
       sha256 = "1a6wzznhpz06c0y3wrjf5bskdd8myild8v0p0x1h0swhmy6di2yd";
       buildDepends = [ network utf8-light ];
       homepage = "http://github.com/olegkat/haskell-memcached";
       description = "haskell bindings for memcached";
       license = "unknown";
     }) {};

  "memcached-binary" = callPackage
    ({ mkDerivation, data-default-class, hspec, HUnit, network
     , resource-pool, storable-endian, time, unordered-containers
     }:
     mkDerivation {
       pname = "memcached-binary";
       version = "0.2.0";
       sha256 = "137vb065f744jq3avpraqryzspch78vc5krp0fw2zzcbk5cm92ad";
       buildDepends = [
         data-default-class network resource-pool storable-endian time
         unordered-containers
       ];
       testDepends = [ data-default-class hspec HUnit network ];
       homepage = "https://github.com/philopon/memcached-binary";
       description = "memcached client using binary protocol";
       license = stdenv.lib.licenses.mit;
     }) {};

  "memexml" = callPackage
    ({ mkDerivation, hxt }:
     mkDerivation {
       pname = "memexml";
       version = "0.0.2";
       sha256 = "07cmjx10wbpfcblnd23rzdkma04nyjcpd1g58gp0phajj6xj4i7a";
       editedCabalFile = "0givph35nw1flak8vzhpsfsiha18fspgswd783xz29rscjkjwwd1";
       buildDepends = [ hxt ];
       homepage = "https://github.com/eggzilla/memexml";
       description = "Library for reading Meme XML output";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "memo-sqlite" = callPackage
    ({ mkDerivation, direct-sqlite }:
     mkDerivation {
       pname = "memo-sqlite";
       version = "0.1";
       sha256 = "1gijza29wj79k8czfg4mghq7nqsbpyf1scnm9hmg2ykhnllpzvy3";
       buildDepends = [ direct-sqlite ];
       homepage = "https://gitorious.org/memo-sqlite";
       description = "memoize functions using SQLite3 database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "memoize" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "memoize";
       version = "0.6";
       sha256 = "15ya80la5azkpdnlnd7n6x1z9z2nixg0rakp1bj4xsk1ad1hn6x7";
       description = "A memoization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "memscript" = callPackage
    ({ mkDerivation, readline }:
     mkDerivation {
       pname = "memscript";
       version = "0.0.2.0";
       sha256 = "0vbmgvdjq4mxax39zr6anmb96pr2pgqlwmc4qbkrz2c7v8hg2mjb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ readline ];
       homepage = "http://hackage.haskell.org/cgi-bin/hackage-scripts/package/memscript";
       description = "Command line utility for memorizing scriptures or any other text";
       license = "GPL";
     }) {};

  "mersenne-random" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mersenne-random";
       version = "1.0.0.1";
       sha256 = "193qz3wn7lz18aywddr9qyn8v08ifv2yxwr68c67p5mn8vr8mvmw";
       homepage = "http://code.haskell.org/~dons/code/mersenne-random";
       description = "Generate high quality pseudorandom numbers using a SIMD Fast Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mersenne-random-pure64" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "mersenne-random-pure64";
       version = "0.2.0.4";
       sha256 = "0qh72ynfg1k4c70qxdzsa6f1x9wyxil2d9gi85c879wrc41k899h";
       buildDepends = [ random ];
       homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
       description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "messagepack" = callPackage
    ({ mkDerivation, attoparsec, cereal, QuickCheck, test-framework
     , test-framework-quickcheck2, test-framework-th, text
     }:
     mkDerivation {
       pname = "messagepack";
       version = "0.3.0";
       sha256 = "1icl40fh9glzr105aha3971gnbnzw528sgdia8kwlj751v3nnpa0";
       buildDepends = [ attoparsec cereal text ];
       testDepends = [
         cereal QuickCheck test-framework test-framework-quickcheck2
         test-framework-th text
       ];
       homepage = "https://github.com/rodrigosetti/messagepack";
       description = "Serialize instance for Message Pack Object";
       license = stdenv.lib.licenses.mit;
     }) {};

  "messagepack-rpc" = callPackage
    ({ mkDerivation, cereal, messagepack, network-simple, text }:
     mkDerivation {
       pname = "messagepack-rpc";
       version = "0.1.0.3";
       sha256 = "0g9lj3fb81gng3z4kdikwa9vgz73hjdqygzhcqd8fphcynv8j6m1";
       buildDepends = [ cereal messagepack network-simple text ];
       homepage = "http://github.com/rodrigosetti/messagepack-rpc";
       description = "Message Pack RPC over TCP";
       license = stdenv.lib.licenses.mit;
     }) {};

  "meta-misc" = callPackage
    ({ mkDerivation, loch-th }:
     mkDerivation {
       pname = "meta-misc";
       version = "0.1.0.3";
       sha256 = "0pxsg67r2z0f9zxr8m98sndlii0bixyxwgjkc31z5743ciw9ch0c";
       buildDepends = [ loch-th ];
       homepage = "https://github.com/bairyn/meta-misc";
       description = "Utility library providing miscellaneous meta-programming utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "meta-par" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par, deepseq, mtl
     , mwc-random, transformers, vector
     }:
     mkDerivation {
       pname = "meta-par";
       version = "0.3";
       sha256 = "012blwbwxac2wikiydvjsa4b7f866wws3g33bczv8dzcx3123ljn";
       buildDepends = [
         abstract-deque abstract-par deepseq mtl mwc-random transformers
         vector
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Provides the monad-par interface, but based on modular scheduler \"mix-ins\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "meta-par-accelerate" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par
     , abstract-par-accelerate, accelerate, meta-par, QuickCheck
     , transformers, vector
     }:
     mkDerivation {
       pname = "meta-par-accelerate";
       version = "0.3.5";
       sha256 = "0gl6bh2jqf697vl4cg88z39g6180bbha01h67qz46f1vcyvi0lwq";
       buildDepends = [
         abstract-deque abstract-par abstract-par-accelerate accelerate
         meta-par QuickCheck transformers vector
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Support for integrated Accelerate computations within Meta-par";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "metadata" = callPackage
    ({ mkDerivation, text, time }:
     mkDerivation {
       pname = "metadata";
       version = "0.2.0.0";
       sha256 = "148c7vgh8zxgy5fb0xflk0lzm5d233d1ynjncpiwi1bb9jzbdm3r";
       buildDepends = [ text time ];
       homepage = "http://github.com/cutsea110/metadata";
       description = "metadata library for semantic web";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "metamorphic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "metamorphic";
       version = "0.1.2.3";
       sha256 = "0pazw2kdsl8g4dax6bg0hfg7vp2nna6lrsnzdkixpins7ac95078";
       homepage = "http://github.com/technogeeky/metamorphic";
       description = "metamorphisms: ana . cata or understanding folds and unfolds";
       license = "unknown";
     }) {};

  "metaplug" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "metaplug";
       version = "0.1.1";
       sha256 = "086n9kqyi2jqki31jgylm0r63ahgvw3pf7mi5hln2m86a5x4ij4n";
       buildDepends = [ Cabal filepath ];
       description = "a tiny ghc api wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "metric" = callPackage
    ({ mkDerivation, data-default, edit-distance, hmatrix, QuickCheck
     , test-framework, test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "metric";
       version = "0.2.0";
       sha256 = "172drfn8p5yqyvka2jphhi1lfj5msv2xssa271lfb3w757br452d";
       buildDepends = [ data-default edit-distance hmatrix vector ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2 vector
       ];
       description = "Metric spaces";
       license = stdenv.lib.licenses.mit;
     }) {};

  "metrics" = callPackage
    ({ mkDerivation, ansi-terminal, async, lens, mtl, mwc-random
     , primitive, QuickCheck, text, time, unordered-containers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "metrics";
       version = "0.2.1.0";
       sha256 = "1q3j4ssij3v688yhn0zzs1bvyp21p0vnp2760qbvha1a7g0m8gif";
       buildDepends = [
         ansi-terminal lens mtl mwc-random primitive text time
         unordered-containers vector vector-algorithms
       ];
       testDepends = [ async lens mwc-random primitive QuickCheck ];
       description = "High-performance application metric tracking";
       license = stdenv.lib.licenses.mit;
     }) {};

  "metricsd-client" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "metricsd-client";
       version = "0.1";
       sha256 = "1q807wvmj1q605257jj60h0j2wal6ypjiad9wkjmv836p3mis5q9";
       buildDepends = [ network ];
       description = "Client for the metrics aggregator Metricsd";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "metronome" = callPackage
    ({ mkDerivation, data-lens, data-lens-template, hosc, stm }:
     mkDerivation {
       pname = "metronome";
       version = "0.1";
       sha256 = "0gx0g8s5w99mhvip1v1kj03dhij3fhig1b8myha0zdssf2x6vjwc";
       buildDepends = [ data-lens data-lens-template hosc stm ];
       description = "Time Synchronized execution";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mi" = callPackage
    ({ mkDerivation, haskell-src-meta, parsec, split }:
     mkDerivation {
       pname = "mi";
       version = "0.0.1";
       sha256 = "03virg707xxy330xq4g60fy1rvs1rq9w5p08yc5khzh64v1g3i2b";
       buildDepends = [ haskell-src-meta parsec split ];
       homepage = "https://github.com/matt76k/mi";
       description = "Multiple Instance for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "microbench" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "microbench";
       version = "0.1";
       sha256 = "05yphn77rxg7zqpn27292yvmah2634hqfx2mgfyp5yws5ickrvkg";
       buildDepends = [ time ];
       homepage = "http://neugierig.org/software/darcs/browse/?r=microbench;a=summary";
       description = "Microbenchmark Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "microformats2-types" = callPackage
    ({ mkDerivation, aeson, either, pandoc-types, text, time }:
     mkDerivation {
       pname = "microformats2-types";
       version = "0.2.0";
       sha256 = "064a2nbh2pgw27h82gwhc567rnffnx8h04n80x01f2j8zl5a3zws";
       buildDepends = [ aeson either pandoc-types text time ];
       homepage = "https://github.com/myfreeweb/microformats2-types";
       description = "Microformats 2 types for Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "microtimer" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "microtimer";
       version = "0.0.1.2";
       sha256 = "09w8jn6g8fq3zsp2ahdrzv33mvayh8vladmc2wf8pbmpmdii0kap";
       buildDepends = [ time ];
       homepage = "http://thoughtpolice.github.com/hs-microtimer";
       description = "A tiny library for benchmarking IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "midi" = callPackage
    ({ mkDerivation, binary, event-list, explicit-exception
     , monoid-transformer, non-negative, QuickCheck, random
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "midi";
       version = "0.2.1.3";
       sha256 = "0mqf6q7686zdxljkz3bqa2zhkgirqz5c1fkbd3n4wyipzhjc773a";
       buildDepends = [
         binary event-list explicit-exception monoid-transformer
         non-negative QuickCheck random transformers utility-ht
       ];
       testDepends = [
         event-list explicit-exception non-negative QuickCheck transformers
         utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/MIDI";
       description = "Handling of MIDI messages and files";
       license = "GPL";
     }) {};

  "midi-alsa" = callPackage
    ({ mkDerivation, alsa-seq, data-accessor, midi, utility-ht }:
     mkDerivation {
       pname = "midi-alsa";
       version = "0.2.1";
       sha256 = "13dc299d252nrll1vzp7pl1ncv0qw3xhz5b3kqnc8hb0g4mkkgpc";
       buildDepends = [ alsa-seq data-accessor midi utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/MIDI";
       description = "Convert between datatypes of the midi and the alsa packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "midimory" = callPackage
    ({ mkDerivation, alsa-core, alsa-seq, random, transformers, wx
     , wxcore
     }:
     mkDerivation {
       pname = "midimory";
       version = "0.0.0.2";
       sha256 = "13bfb2s6ybvspmmq427v55nb2csvcp4ijfgm9fvfh6cab2pm1dyz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         alsa-core alsa-seq random transformers wx wxcore
       ];
       homepage = "http://www.youtube.com/watch?v=cOlR73h2uII";
       description = "A Memory-like (Concentration, Pairs, ...) game for tones";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "midisurface" = callPackage
    ({ mkDerivation, alsa-core, alsa-seq, gtk, mtl, stm }:
     mkDerivation {
       pname = "midisurface";
       version = "0.1.0.0";
       sha256 = "0i1g1hqr1jjjnrrkfgp0i9zm5cm6aza1kzqy2z8hmbqjdvyv21fz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ alsa-core alsa-seq gtk mtl stm ];
       description = "A control midi surface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mighttpd" = callPackage
    ({ mkDerivation, c10k, filepath, hdaemonize, hslogger, network
     , parsec, time, webserver
     }:
     mkDerivation {
       pname = "mighttpd";
       version = "0.4.3";
       sha256 = "0xl6x4755x8sz2igqfp3mr5n29q7hb4v5b1mycah9vffk1bhi0yf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         c10k filepath hdaemonize hslogger network parsec time webserver
       ];
       homepage = "http://www.mew.org/~kazu/proj/mighttpd/";
       description = "Simple Web Server in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mighttpd2" = callPackage
    ({ mkDerivation, async, auto-update, blaze-builder, byteorder
     , case-insensitive, conduit, conduit-extra, filepath, hspec
     , http-client, http-date, http-types, io-choice, network, parsec
     , resourcet, streaming-commons, time, transformers, unix-time
     , unordered-containers, wai, wai-app-file-cgi, wai-logger, warp
     }:
     mkDerivation {
       pname = "mighttpd2";
       version = "3.2.4";
       sha256 = "0s150iwzvx1y1yfli9187lr23l3q0bxah48n27v2k0vvl0jsr69v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async auto-update blaze-builder byteorder case-insensitive conduit
         conduit-extra filepath http-client http-date http-types io-choice
         network parsec resourcet streaming-commons time transformers
         unix-time unordered-containers wai wai-app-file-cgi wai-logger warp
       ];
       testDepends = [ hspec http-client ];
       homepage = "http://www.mew.org/~kazu/proj/mighttpd/";
       description = "High performance web server on WAI/warp";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "miku" = callPackage
    ({ mkDerivation, air, air-th, data-default, hack2, hack2-contrib
     , mtl
     }:
     mkDerivation {
       pname = "miku";
       version = "2014.11.17";
       sha256 = "1zfvi7v05cdp94cdrwxxhwkzqyliaakl16klk9zb0byvsg32ns3n";
       buildDepends = [ air air-th data-default hack2 hack2-contrib mtl ];
       homepage = "https://github.com/nfjinjing/miku";
       description = "A minimum web dev DSL in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "milena" = callPackage
    ({ mkDerivation, cereal, digest, either, hspec, lens, mtl, network
     , QuickCheck, random, transformers
     }:
     mkDerivation {
       pname = "milena";
       version = "0.1.0.0";
       sha256 = "1ajd92pvzqkca9bg5labw40iafzc7fdjahf8jhhccgvayasdlk3r";
       buildDepends = [
         cereal digest either lens mtl network random transformers
       ];
       testDepends = [ hspec network QuickCheck ];
       description = "A Kafka client for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mime" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "mime";
       version = "0.4.0.1";
       sha256 = "1m987sqnns54qbsg68332mnrjkh71z6s83cma2kwavf0y305mrp0";
       buildDepends = [ text ];
       homepage = "https://github.com/GaloisInc/mime";
       description = "Working with MIME types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mime-directory" = callPackage
    ({ mkDerivation, base64-string, regex-pcre, time }:
     mkDerivation {
       pname = "mime-directory";
       version = "0.5.1";
       sha256 = "1f54rbznv52m4h72yazr397k1d9jyb1i524pfl3d494swvn9b05r";
       buildDepends = [ base64-string regex-pcre time ];
       homepage = "http://code.haskell.org/~mboes/mime-directory.git";
       description = "A library for parsing/printing the text/directory mime type";
       license = "LGPL";
     }) {};

  "mime-mail" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, filepath, hspec
     , random, sendmail ? "sendmail", text
     }:
     mkDerivation {
       pname = "mime-mail";
       version = "0.4.6";
       sha256 = "051mqpzypg4r6rd06qb75pl3nq9p68r1sl73r0pwl1imcp158aw6";
       buildDepends = [
         base64-bytestring blaze-builder filepath random text
       ];
       testDepends = [ blaze-builder hspec text ];
       configureFlags = "--ghc-option=-DMIME_MAIL_SENDMAIL_PATH=\"${sendmail}\"";
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Compose MIME email messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mime-mail-ses" = callPackage
    ({ mkDerivation, base64-bytestring, byteable, conduit, cryptohash
     , http-client, http-conduit, http-types, mime-mail, text, time
     , transformers, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "mime-mail-ses";
       version = "0.3.2";
       sha256 = "19jdmfwlak50sw75gba5a2c91rs8694b2y6wl8zxc3xx4bkq6ldz";
       buildDepends = [
         base64-bytestring byteable conduit cryptohash http-client
         http-conduit http-types mime-mail text time transformers
         xml-conduit xml-types
       ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Send mime-mail messages via Amazon SES";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mime-string" = callPackage
    ({ mkDerivation, base64-string, iconv, mtl, network }:
     mkDerivation {
       pname = "mime-string";
       version = "0.4";
       sha256 = "0v028cgqll918zdaa95myazlg7dnvb2cvvvm1iyyqw81grza3r61";
       buildDepends = [ base64-string iconv mtl network ];
       description = "MIME implementation for String's";
       license = "unknown";
     }) {};

  "mime-types" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "mime-types";
       version = "0.1.0.4";
       sha256 = "0bxhkwz8p7mhg5kspbpc5zm4k50pc0r5pzjr6807y88x8vjpvj2x";
       buildDepends = [ text ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Basic mime-type handling types and functions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mines" = callPackage
    ({ mkDerivation, mtl, random }:
     mkDerivation {
       pname = "mines";
       version = "0.1";
       sha256 = "16s98hwskycl2bqv1n2bnivh8w8q3xhhj687hk8flcg9s9ny4s8k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl random ];
       homepage = "http://finder.homelinux.org/haskell/Mines";
       description = "Minesweeper simulation using neural networks";
       license = "unknown";
     }) {};

  "minesweeper" = callPackage
    ({ mkDerivation, binary, binary-generic, cairo, filepath, glade
     , gtk, random, time
     }:
     mkDerivation {
       pname = "minesweeper";
       version = "0.9.2.1";
       sha256 = "1cbw136wl9rdcl4vbbz9i5w1mw33qhr0gzbww0qf63zfz2lg4gs2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary binary-generic cairo filepath glade gtk random time
       ];
       description = "Minesweeper game which is always solvable without guessing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "miniball" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "miniball";
       version = "0.1.0.2";
       sha256 = "16fdzbfspxqi0h7v6gn25n065anvk9zm28236qvfwbvr9l2ki172";
       buildDepends = [ vector ];
       homepage = "http://nonempty.org/software/haskell-miniball";
       description = "Bindings to Miniball, a smallest enclosing ball library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "minimal-configuration" = callPackage
    ({ mkDerivation, filepath, tconfig }:
     mkDerivation {
       pname = "minimal-configuration";
       version = "0.1.1";
       sha256 = "06r710l30kf5aaz2k446z9fhc6zshdsssp1zwri0572r1jryzd43";
       buildDepends = [ filepath tconfig ];
       description = "Minimal ini like configuration library with a few extras";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "minimorph" = callPackage
    ({ mkDerivation, HUnit, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "minimorph";
       version = "0.1.5.0";
       sha256 = "00dnvv0pap2xr74xwzldz89783iw320z7p1rdw0lwjjpbqa3v00g";
       buildDepends = [ text ];
       testDepends = [ HUnit test-framework test-framework-hunit text ];
       homepage = "http://darcsden.com/kowey/minimorph";
       description = "English spelling functions with an emphasis on simplicity";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "minimung" = callPackage
    ({ mkDerivation, GLUT }:
     mkDerivation {
       pname = "minimung";
       version = "0.1";
       sha256 = "0i825bd751adfj22lkgc929jlgxjj16i81k8qqkhqh7ib131kqlf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT ];
       description = "Shows how to run grabber on Mac OS X";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "minions" = callPackage
    ({ mkDerivation, ansi-terminal, MissingH, time }:
     mkDerivation {
       pname = "minions";
       version = "0.2.0.0";
       sha256 = "1r7c07pa9lr7h32y1mgxrlrj6a4sf8kfwc7vvvrr6bjfwr3m54vl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ansi-terminal MissingH time ];
       homepage = "http://github.com/jhickner/minions";
       description = "A fast parallel ssh tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "minioperational" = callPackage
    ({ mkDerivation, clean-unions, elevator, transformers }:
     mkDerivation {
       pname = "minioperational";
       version = "0.4.8.1";
       sha256 = "02nkgbpf1dky7h3n99j9m3101wyfahcdx5wk5vidvf9snl5vy1w9";
       buildDepends = [ clean-unions elevator transformers ];
       homepage = "https://github.com/fumieval/minioperational";
       description = "fast and simple operational monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "miniplex" = callPackage
    ({ mkDerivation, colock, mtl, network, stm }:
     mkDerivation {
       pname = "miniplex";
       version = "0.3.4";
       sha256 = "15rsg617wmh8cb0f2pkd5hyzrj96qjvar4p6nx21vlxr3b2plcg4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ colock mtl network stm ];
       description = "simple 1-to-N interprocess communication";
       license = "LGPL";
     }) {};

  "minirotate" = callPackage
    ({ mkDerivation, data-accessor, data-accessor-template, filepath
     , mtl, safe, split
     }:
     mkDerivation {
       pname = "minirotate";
       version = "0.1.2.2";
       sha256 = "15hgag1r0w6smilab7059z7bsn9i1czhdknma53rmj1ma2pd148y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-accessor data-accessor-template filepath mtl safe split
       ];
       homepage = "http://tener.github.com/haskell-minirotate/";
       description = "Minimalistic file rotation utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "minisat" = callPackage
    ({ mkDerivation, async, zlib }:
     mkDerivation {
       pname = "minisat";
       version = "0.1";
       sha256 = "039xksi6klcmkciyb8zq60g96i5nzjq7y47bgh3fvpxb02wha64a";
       buildDepends = [ async ];
       extraLibraries = [ zlib ];
       description = "A Haskell bundle of the Minisat SAT solver";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) zlib; };

  "ministg" = callPackage
    ({ mkDerivation, filepath, monads-tf, parsec, transformers, xhtml
     }:
     mkDerivation {
       pname = "ministg";
       version = "0.3";
       sha256 = "05ddhr50pbqy0yjgcw0wgfjxlkgapg0zppqqyxfy5apr68zd02mm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath monads-tf parsec transformers xhtml ];
       homepage = "http://www.haskell.org/haskellwiki/Ministg";
       description = "an interpreter for an operational semantics for the STG machine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "miniutter" = callPackage
    ({ mkDerivation, binary, HUnit, minimorph, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "miniutter";
       version = "0.4.4.1";
       sha256 = "1raq5dq6mx56ddyq5hnh9r2yflry6prcjf17p15ds1w5r8cp8yx1";
       buildDepends = [ binary minimorph text ];
       testDepends = [ HUnit test-framework test-framework-hunit text ];
       homepage = "https://github.com/Mikolaj/miniutter";
       description = "Simple English clause creation from arbitrary words";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mirror-tweet" = callPackage
    ({ mkDerivation, authenticate-oauth, conduit, lens, monad-logger
     , text, transformers, twitter-conduit
     }:
     mkDerivation {
       pname = "mirror-tweet";
       version = "0.1.0.0";
       sha256 = "07dz0c65xkb7kgr2rby7m3g5893rqsbyl2nmjhf4q2wqsypmiipa";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         authenticate-oauth conduit lens monad-logger text transformers
         twitter-conduit
       ];
       homepage = "https://github.com/minamiyama1994/mirror-tweet";
       description = "Tweet mirror";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "misfortune" = callPackage
    ({ mkDerivation, cereal, filepath, knob, monad-loops, random-fu
     , regex-base, regex-pcre, semigroups, text, utf8-string, vector
     }:
     mkDerivation {
       pname = "misfortune";
       version = "0.1.1.1";
       sha256 = "0knb31jxxn7zds13a90d4lir39386nwzd181mlzkrw5niw1zwmhb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal filepath knob monad-loops random-fu regex-base regex-pcre
         semigroups text utf8-string vector
       ];
       homepage = "https://github.com/mokus0/misfortune";
       description = "fortune-mod clone";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "missing-foreign" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "missing-foreign";
       version = "0.1.1";
       sha256 = "11f8pknbarlj956nmalqhd2v704z7d7xbi61hs1q8vb2p36kc6wy";
       description = "Convenience functions for FFI work";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "missing-py2" = callPackage
    ({ mkDerivation, anydbm, Cabal, HUnit, MissingH }:
     mkDerivation {
       pname = "missing-py2";
       version = "1.0.1";
       sha256 = "0daa310acml90r4f4qdjf3qns70gvx08mpjzw2h3v46vrwlacrmj";
       buildDepends = [ anydbm MissingH ];
       testDepends = [ anydbm Cabal HUnit MissingH ];
       homepage = "https://github.com/domdere/missing-py2";
       description = "Haskell interface to Python";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "mix-arrows" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mix-arrows";
       version = "1.2";
       sha256 = "0m70l09bmr8b95d87rpz4vdircdar2rsvnamr2g07542wx024931";
       description = "Mixing effects of one arrow into another one";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mixed-strategies" = callPackage
    ({ mkDerivation, simple-tabular }:
     mkDerivation {
       pname = "mixed-strategies";
       version = "0.1.0.0";
       sha256 = "0vsldq2j2avj98fcz2lbydf4y23iwydr4jsvpbcvwlvqavgz1rkc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ simple-tabular ];
       homepage = "http://wiki.cs.pdx.edu/bartforge/oms";
       description = "Find optimal mixed strategies for two-player games";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mkbndl" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "mkbndl";
       version = "0.2.1";
       sha256 = "1qzfmf92sx5vq5jxrqhln1a6y8kayrip36izf5m8hryymxd4dard";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "Makes an OS X .app bundle from a binary.";
       license = "GPL";
     }) {};

  "mkcabal" = callPackage
    ({ mkDerivation, extensible-exceptions, mtl, pcre-light, readline
     }:
     mkDerivation {
       pname = "mkcabal";
       version = "1.0.0";
       sha256 = "1cmawm49i01xxvzgf67cin6s9hihfc3ihr6s5hn2makasfxbnryc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ extensible-exceptions mtl pcre-light readline ];
       homepage = "http://code.haskell.org/~dons/code/mkcabal";
       description = "Generate cabal files for a Haskell project";
       license = "GPL";
     }) {};

  "ml-w" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "ml-w";
       version = "0.1.1";
       sha256 = "04d0drqyaz075y6fs3rj6c2sp8ns1x4rfxqf1dbm2b31q09ycnl1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       description = "Minimal ML language to to demonstrate the W type infererence algorithm";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "mlist" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mlist";
       version = "0.0.2";
       sha256 = "06mwmahyp781wigjva12kz7w75vjkkprl8k1yiqd1yd0162vp31k";
       homepage = "http://haskell.org/haskellwiki/mlist";
       description = "Monadic List alternative to lazy I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mmap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mmap";
       version = "0.5.9";
       sha256 = "1y5mk3yf4b8r6rzmlx1xqn4skaigrqnv08sqq0v7r3nbw42bpz2q";
       isLibrary = true;
       isExecutable = true;
       description = "Memory mapped files for POSIX and Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mmorph" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "mmorph";
       version = "1.0.4";
       sha256 = "0k5zlzmnixfwcjrqvhgi3i6xg532b0gsjvc39v5jigw69idndqr2";
       buildDepends = [ transformers ];
       description = "Monad morphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mmtl" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mmtl";
       version = "0.1";
       sha256 = "0bb19l52s56y2dwyskvjwdal7387ii2dg9cc1l6f341y3695nj7l";
       description = "Modular Monad transformer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mmtl-base" = callPackage
    ({ mkDerivation, mmtl }:
     mkDerivation {
       pname = "mmtl-base";
       version = "15321.1";
       sha256 = "13hdaxpb9zds3yc2l3pl60h26541yvswprdc43swn05hzf6p01nq";
       buildDepends = [ mmtl ];
       description = "MonadBase type-class for mmtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "modbus-tcp" = callPackage
    ({ mkDerivation, base-unicode-symbols, cereal, network }:
     mkDerivation {
       pname = "modbus-tcp";
       version = "0.1";
       sha256 = "1j0gkc6vrvydz0vcdm8bpiarl75zqh4k5z18s4903b6mqwpscslr";
       buildDepends = [ base-unicode-symbols cereal network ];
       homepage = "https://github.com/roelvandijk/modbus-tcp";
       description = "Communicate with Modbus devices over TCP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "modelicaparser" = callPackage
    ({ mkDerivation, ansi-terminal, filepath, parsec, QuickCheck }:
     mkDerivation {
       pname = "modelicaparser";
       version = "0.1.0.0";
       sha256 = "0ifsgdqi3376z7xspjlx62hh3dah3dskqrar3s63pmw1cf9b6qfl";
       buildDepends = [ parsec ];
       testDepends = [ ansi-terminal filepath parsec QuickCheck ];
       description = "A parser for the modelica language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "modsplit" = callPackage
    ({ mkDerivation, filepath, mtl, utf8-string }:
     mkDerivation {
       pname = "modsplit";
       version = "0.2.1";
       sha256 = "0xm9vj78clawys9ascgm2fl8kqg5zmdfbkkb42d1d1h5z72cc55p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl utf8-string ];
       description = "Haskell source splitter driven by special comments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "modular-arithmetic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "modular-arithmetic";
       version = "1.2.0.0";
       sha256 = "1qlvi0xjdvr4730xj303i6gp610mz4xrlrk191yy8hr7afjysm0k";
       description = "A type for integers modulo some constant";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "modular-prelude" = callPackage
    ({ mkDerivation, basic-prelude, data-default, hashable
     , system-filepath, text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "modular-prelude";
       version = "0.3.0.0";
       sha256 = "0hlmxm9xfnf55qz1nrljm0s4bhpa6x973h3qi2b7bl8pil423rkf";
       buildDepends = [
         basic-prelude data-default hashable system-filepath text
         transformers unordered-containers vector
       ];
       homepage = "https://github.com/DanBurton/modular-prelude#readme";
       description = "A new Prelude featuring first class modules";
       license = stdenv.lib.licenses.mit;
     }) {};

  "modular-prelude-classy" = callPackage
    ({ mkDerivation, classy-prelude, modular-prelude }:
     mkDerivation {
       pname = "modular-prelude-classy";
       version = "0.1.0.0";
       sha256 = "1izinrgd9a6sm57isg8jgs4wjidczwqcxl6vg5h4gy5zz9dg8xnx";
       buildDepends = [ classy-prelude modular-prelude ];
       homepage = "https://github.com/DanBurton/modular-prelude#readme";
       description = "Reifying ClassyPrelude a la ModularPrelude";
       license = stdenv.lib.licenses.mit;
     }) {};

  "module-management" = callPackage
    ({ mkDerivation, applicative-extras, Cabal, cmdargs, data-default
     , filepath, haskeline, haskell-src-exts, HUnit, lens, lifted-base
     , monad-control, mtl, pureMD5, set-extra, syb, system-fileio
     , temporary, transformers-base
     }:
     mkDerivation {
       pname = "module-management";
       version = "0.20.3";
       sha256 = "1lj2jhlpn1ywq60q4ph9fbmjn6rjd8wqkj2lrdgscagcvryh9ad2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         applicative-extras Cabal cmdargs data-default filepath haskeline
         haskell-src-exts HUnit lens lifted-base monad-control mtl pureMD5
         set-extra syb system-fileio temporary transformers-base
       ];
       testDepends = [ filepath haskell-src-exts HUnit ];
       homepage = "https://github.com/seereason/module-management";
       description = "Clean up module imports, split and merge modules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "modulespection" = callPackage
    ({ mkDerivation, exceptions, filepath, ghc-paths, temporary
     , transformers
     }:
     mkDerivation {
       pname = "modulespection";
       version = "0.1.2.1";
       sha256 = "0law870m61kvlmq31wpi0g9c7h5vzlcbcv7cnwsj8ivfs7yarqzw";
       buildDepends = [
         exceptions filepath ghc-paths temporary transformers
       ];
       homepage = "https://github.com/jfischoff/modulespection";
       description = "Template Haskell for introspecting a module's declarations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "modulo" = callPackage
    ({ mkDerivation, atto-lisp, data-default, haskell-src, language-c
     , mtl, nats, pandoc-types, parsec, prettify, semigroups, text
     }:
     mkDerivation {
       pname = "modulo";
       version = "1.9.1";
       sha256 = "1dxvfd8f7zx43zm9h5dd71ci768khhmh8660h3abazqhm7ws367c";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         atto-lisp data-default haskell-src language-c mtl nats pandoc-types
         parsec prettify semigroups text
       ];
       description = "Modular C code generator";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "moe" = callPackage
    ({ mkDerivation, air, data-default, dlist, mtl, text }:
     mkDerivation {
       pname = "moe";
       version = "2014.11.17";
       sha256 = "1rh9g4f488l0fjjvwfaxaf1lbxz1pvq24nxjy2c4yyrg7m7b61z5";
       buildDepends = [ air data-default dlist mtl text ];
       homepage = "https://github.com/nfjinjing/moe";
       description = "html with style";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mohws" = callPackage
    ({ mkDerivation, data-accessor, explicit-exception, filepath, html
     , HTTP, network, parsec, transformers, utility-ht
     }:
     mkDerivation {
       pname = "mohws";
       version = "0.2.1.3";
       sha256 = "1na585nc16s3giq88kr5i8wlqc03i29blqsgqp40da6dyqiihqwf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor explicit-exception filepath html HTTP network parsec
         transformers utility-ht
       ];
       homepage = "http://code.haskell.org/mohws/";
       description = "Modular Haskell Web Server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-abort-fd" = callPackage
    ({ mkDerivation, data-default, monad-control, mtl, transformers
     , transformers-abort, transformers-base
     }:
     mkDerivation {
       pname = "monad-abort-fd";
       version = "0.4";
       sha256 = "01ny9pq66cma3wai48mhzijk465h7ssrj253npyy2myxnj0y93zr";
       buildDepends = [
         data-default monad-control mtl transformers transformers-abort
         transformers-base
       ];
       homepage = "https://github.com/mvv/monad-abort-fd";
       description = "A better error monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-atom" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "monad-atom";
       version = "0.4.1";
       sha256 = "16dnp6wz0s56gm58k6m5cv5c47hb2vz1m4a3pqvrg3j97y344c3q";
       buildDepends = [ mtl ];
       homepage = "https://bitbucket.org/gchrupala/lingo";
       description = "Monadically convert object to unique integers and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-atom-simple" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "monad-atom-simple";
       version = "0.0.2";
       sha256 = "1k4rcrdjjs52p9mnsbwp0gmb2inivhcqw044l56dbc080yxrk32j";
       buildDepends = [ mtl ];
       description = "Monadically map objects to unique ints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-bool" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monad-bool";
       version = "0.2.0";
       sha256 = "1f3n2wbd3lbsp2snsf9x4h09apw62hayhzjibakp6mqw6174444h";
       description = "This package has been removed";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-codec" = callPackage
    ({ mkDerivation, binary, data-lens, mtl }:
     mkDerivation {
       pname = "monad-codec";
       version = "0.2.0";
       sha256 = "0jim6hk891jby2gch6f1k4262jm8fl9jgl808dj204ylz8w1475l";
       buildDepends = [ binary data-lens mtl ];
       homepage = "https://github.com/kawu/monad-codec";
       description = "Monadic conversion between complex data structures and unique integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-control" = callPackage
    ({ mkDerivation, transformers, transformers-base }:
     mkDerivation {
       pname = "monad-control";
       version = "1.0.0.0";
       sha256 = "0s8x54rsdbdl1qv8fnqfljgigw3mcqqhxxiw9dmsk4k6r4734lh1";
       buildDepends = [ transformers transformers-base ];
       homepage = "https://github.com/basvandijk/monad-control";
       description = "Lift control operations, like exception catching, through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-coroutine" = callPackage
    ({ mkDerivation, monad-parallel, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "monad-coroutine";
       version = "0.8.0.1";
       sha256 = "0jzy6rdkwh7cfrq1ci8kfxyy6mydk5xlksxba8fy1qzsi8a7dshy";
       buildDepends = [ monad-parallel transformers transformers-compat ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
       description = "Coroutine monad transformer for suspending and resuming monadic computations";
       license = "GPL";
     }) {};

  "monad-exception" = callPackage
    ({ mkDerivation, monad-control, mtl-evil-instances, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-exception";
       version = "0.1";
       sha256 = "1mh19mxi6mlkvd083vjjdmdimdnk6n5yaj7v7xxgqycl5sazqkh8";
       buildDepends = [
         monad-control mtl-evil-instances transformers transformers-base
       ];
       description = "Exstensible monadic exceptions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "monad-extras" = callPackage
    ({ mkDerivation, mmorph, monad-control, stm, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-extras";
       version = "0.5.9";
       sha256 = "1y24yz635brllfygia1mbln4d8xiwb0pq0izh5pil7511gijhs0s";
       buildDepends = [
         mmorph monad-control stm transformers transformers-base
       ];
       homepage = "http://github.com/jwiegley/monad-extras";
       description = "Extra utility functions for working with monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-fork" = callPackage
    ({ mkDerivation, monad-control }:
     mkDerivation {
       pname = "monad-fork";
       version = "0.1";
       sha256 = "15xwavq4yc3xfif4isjh9m0q9h1bh7pmv2i3rh99sndmd34cdpwc";
       buildDepends = [ monad-control ];
       description = "Type class for monads which support a fork operation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "monad-gen" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "monad-gen";
       version = "0.3.0.0";
       sha256 = "0h2w7kd1kdmidv6lyzjf785ca9kjg3qr5b1mhhqb4l7qg9x1jlby";
       buildDepends = [ mtl transformers ];
       description = "A simple monad for generating fresh integers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "monad-interleave" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monad-interleave";
       version = "0.1";
       sha256 = "09hpl7ah5ivsrx4xlk96d129n1j4wpx7kj6l95zwadyaz7rj9fp7";
       homepage = "http://github.com/patperry/monad-interleave";
       description = "Monads with an unsaveInterleaveIO-like operation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-journal" = callPackage
    ({ mkDerivation, either, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-journal";
       version = "0.5.0.1";
       sha256 = "1rxmz6hx8kh8sw497h4kpxkvhgaa7jbzif7qssjqijyfmghsxh80";
       buildDepends = [
         either monad-control mtl transformers transformers-base
       ];
       homepage = "http://github.com/phaazon/monad-journal";
       description = "Pure logger typeclass and monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-logger" = callPackage
    ({ mkDerivation, blaze-builder, conduit, conduit-extra, exceptions
     , fast-logger, lifted-base, monad-control, monad-loops, mtl
     , resourcet, stm, stm-chans, text, transformers, transformers-base
     }:
     mkDerivation {
       pname = "monad-logger";
       version = "0.3.11";
       sha256 = "0ydxv4pdq660dh3cdmsd5lgjkfhh7c62kb5vcl8jl6qmjf8kvmdq";
       buildDepends = [
         blaze-builder conduit conduit-extra exceptions fast-logger
         lifted-base monad-control monad-loops mtl resourcet stm stm-chans
         text transformers transformers-base
       ];
       homepage = "https://github.com/kazu-yamamoto/logger";
       description = "A class of monads which can log messages";
       license = stdenv.lib.licenses.mit;
     }) {};

  "monad-logger-syslog" = callPackage
    ({ mkDerivation, fast-logger, hsyslog, monad-logger, shelly, text
     , transformers
     }:
     mkDerivation {
       pname = "monad-logger-syslog";
       version = "0.1.0.0";
       sha256 = "0q0m611nr20nxm4wj9ywgq3qakl3qvd820vld4nqxdp1lqsilcwz";
       buildDepends = [
         fast-logger hsyslog monad-logger text transformers
       ];
       testDepends = [ monad-logger shelly ];
       homepage = "https://github.com/docmunch/monad-logger-rsyslog";
       description = "rsyslog output for monad-logger";
       license = stdenv.lib.licenses.mit;
     }) {};

  "monad-loops" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monad-loops";
       version = "0.4.2.1";
       sha256 = "1dprwndc0bxzpmrkj1xb9kzjrg3i06zsg43yaabn5x5gcaj8is56";
       homepage = "https://github.com/mokus0/monad-loops";
       description = "Monadic loops";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "monad-loops-stm" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "monad-loops-stm";
       version = "0.4";
       sha256 = "0y7j2xpr1s7ggwm3vvpb5mlagsnxhq9qpncapibhk2pbf2d5r7as";
       buildDepends = [ stm ];
       homepage = "https://github.com/mokus0/monad-loops-stm";
       description = "Monadic loops for STM";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "monad-lrs" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "monad-lrs";
       version = "0.0.2.1";
       sha256 = "01i8hz50r3lf8r3rasl96blr6br3p1x6hvckhbi8aw61x507jmcg";
       editedCabalFile = "1hcmwss7ifz2gd8h0559ksxai6gs61sk0674l1jfa4b9hablfwfx";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/bjin/monad-lrs";
       description = "a monad to calculate linear recursive sequence";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-memo" = callPackage
    ({ mkDerivation, mtl, primitive, QuickCheck, random, test-framework
     , test-framework-quickcheck2, transformers, vector
     }:
     mkDerivation {
       pname = "monad-memo";
       version = "0.4.1";
       sha256 = "07gid18rsja7gvk2ccsbwvpz223x59mdk9x9w36bz18cy2pw802c";
       buildDepends = [ mtl primitive transformers vector ];
       testDepends = [
         mtl primitive QuickCheck random test-framework
         test-framework-quickcheck2 transformers vector
       ];
       homepage = "https://github.com/EduardSergeev/monad-memo";
       description = "Memoization monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-mersenne-random" = callPackage
    ({ mkDerivation, mersenne-random-pure64 }:
     mkDerivation {
       pname = "monad-mersenne-random";
       version = "0.1";
       sha256 = "03kbqbgv4npzfzn90jk4p17y8kb62sslby6q36819qkif1j76lq6";
       buildDepends = [ mersenne-random-pure64 ];
       homepage = "http://code.haskell.org/~dons/code/monad-mersenne-random";
       description = "An efficient random generator monad, based on the Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-ox" = callPackage
    ({ mkDerivation, mtl, text, vector }:
     mkDerivation {
       pname = "monad-ox";
       version = "0.3.0";
       sha256 = "1x65jvh816a296y2ds8vysfzl83am4pwwrnap4zdg0prpcxfpwl8";
       buildDepends = [ mtl text vector ];
       homepage = "https://github.com/kawu/monad-ox";
       description = "Monad for observation extraction";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-par" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par, deepseq, HUnit
     , monad-par-extras, mtl, mwc-random, parallel, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, time
     }:
     mkDerivation {
       pname = "monad-par";
       version = "0.3.4.7";
       sha256 = "12n27hs274nrfkpa6hx0gdkrc76wxzliqf53x6689idl363sdf13";
       buildDepends = [
         abstract-deque abstract-par deepseq monad-par-extras mtl mwc-random
         parallel
       ];
       testDepends = [
         abstract-deque abstract-par deepseq HUnit monad-par-extras mtl
         mwc-random QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th time
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "A library for parallel programming based on a monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-par-extras" = callPackage
    ({ mkDerivation, abstract-par, cereal, deepseq, mtl, random
     , transformers
     }:
     mkDerivation {
       pname = "monad-par-extras";
       version = "0.3.3";
       sha256 = "0bl4bd6jzdc5zm20q1g67ppkfh6j6yn8fwj6msjayj621cck67p2";
       buildDepends = [
         abstract-par cereal deepseq mtl random transformers
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Combinators and extra features for Par monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-parallel" = callPackage
    ({ mkDerivation, parallel, transformers, transformers-compat }:
     mkDerivation {
       pname = "monad-parallel";
       version = "0.7.1.3";
       sha256 = "150ich9fzpmwdvvhsd7ri97nm8zsqn86gr3bh0aqb0wgrg4hbmkx";
       buildDepends = [ parallel transformers transformers-compat ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
       description = "Parallel execution of monadic computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-param" = callPackage
    ({ mkDerivation, mtl, stm }:
     mkDerivation {
       pname = "monad-param";
       version = "0.0.4";
       sha256 = "08rm902kclapqh1iafjrsqspf0szhbx5jaqv6hh9p5zbg8ipdkhc";
       buildDepends = [ mtl stm ];
       homepage = "http://hackage.haskell.org/package/monad-param";
       description = "Parameterized monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-peel" = callPackage
    ({ mkDerivation, extensible-exceptions, transformers }:
     mkDerivation {
       pname = "monad-peel";
       version = "0.1.1";
       sha256 = "0n3cxa94wd3hjvy9jgf3d8p7qfb9jaaf29simjya7rlcb673pg3l";
       buildDepends = [ extensible-exceptions transformers ];
       homepage = "http://andersk.mit.edu/haskell/monad-peel/";
       description = "Lift control operations like exception catching through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-primitive" = callPackage
    ({ mkDerivation, primitive, transformers }:
     mkDerivation {
       pname = "monad-primitive";
       version = "0.1";
       sha256 = "1vi6g65hdyq5vq78mfag0qljxgzb6vq83m82x3cpgjl7dr9k5h1x";
       buildDepends = [ primitive transformers ];
       homepage = "http://bitbucket.org/Shimuuar/monad-primitive";
       description = "Type class for monad transformers stack with pirimitive base monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-products" = callPackage
    ({ mkDerivation, semigroupoids }:
     mkDerivation {
       pname = "monad-products";
       version = "4.0.0.1";
       sha256 = "017cxiavxfw0f08sr0d6m3avla1lplmdj51rxpf1103ripq20r53";
       buildDepends = [ semigroupoids ];
       homepage = "http://github.com/ekmett/monad-products";
       description = "Monad products";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-ran" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "monad-ran";
       version = "0.1.0";
       sha256 = "04y9s2b4hz2f8khr0q62xy0f6l2v896s7x03i3s18i14bwscqlax";
       buildDepends = [ mtl ];
       description = "Fast monads and monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-resumption" = callPackage
    ({ mkDerivation, mmorph, mtl, transformers }:
     mkDerivation {
       pname = "monad-resumption";
       version = "0.1.1.4";
       sha256 = "0zrzxkzg6fzxiqr9k4kw6r1ivw22qwz2dhl1nd5xqr7lfsqc00zs";
       buildDepends = [ mmorph mtl transformers ];
       homepage = "https://github.com/igraves/resumption_monads";
       description = "Resumption and reactive resumption monads for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-st" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "monad-st";
       version = "0.2.4";
       sha256 = "1j67s07p5lsr81cjl0ch5d1q7zarmpak5kmnwckhavihg3l5m3bi";
       buildDepends = [ transformers ];
       homepage = "http://github.com/ekmett/monad-st";
       description = "Provides a MonadST class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-state" = callPackage
    ({ mkDerivation, AbortT-transformers, fclabels, monads-tf
     , transformers
     }:
     mkDerivation {
       pname = "monad-state";
       version = "0.2.0.3";
       sha256 = "1dh1dw7n39rb85wk4zq0hw2g9x81zyha033awv81l6xl8pjdxqxv";
       buildDepends = [
         AbortT-transformers fclabels monads-tf transformers
       ];
       homepage = "https://github.com/bairyn/monad-state";
       description = "Utility library for monads, particularly those involving state";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-statevar" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "monad-statevar";
       version = "0.1";
       sha256 = "08sr29qr02kfqja51ciqcpsf95wp3bypx64f4cwgpwh23xapr1fx";
       buildDepends = [ transformers ];
       testDepends = [ stm ];
       homepage = "http://github.com/joeyadams/hs-monad-statevar";
       description = "Concise, overloaded accessors for IORef, STRef, TVar";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-stlike-io" = callPackage
    ({ mkDerivation, deepseq, monads-tf }:
     mkDerivation {
       pname = "monad-stlike-io";
       version = "0.2.2";
       sha256 = "1lizwf31d8ha0xq644cfcn91l8sz8i4ldy12ig4ajfghxj2x4ad5";
       buildDepends = [ deepseq monads-tf ];
       homepage = "http://github.com/taruti/monad-stlike-io";
       description = "ST-like monad capturing variables to regions and supporting IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-stlike-stm" = callPackage
    ({ mkDerivation, monad-stlike-io, stm }:
     mkDerivation {
       pname = "monad-stlike-stm";
       version = "0.1.1";
       sha256 = "007rsq9x0dq8xmiimgqb0v8k15xizx63qmc76b1b8a66nfsd9w56";
       buildDepends = [ monad-stlike-io stm ];
       homepage = "http://github.com/taruti/monad-stlike-stm";
       description = "ST-like monad capturing variables to regions and supporting STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-stm" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "monad-stm";
       version = "0.1.0.2";
       sha256 = "09bbhbj9zg928j3dnvvxsrv8hw1c7s0vj0wffrhs810aqlf1m9xp";
       buildDepends = [ stm transformers ];
       description = "MonadSTM class analogous to MonadIO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-supply" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "monad-supply";
       version = "0.6";
       sha256 = "1gg4r7fwaq2fa0lz8pz301mk3q16xpbs7qv54hhggxrv3i1h33ir";
       buildDepends = [ mtl ];
       description = "Stateful supply monad";
       license = "unknown";
     }) {};

  "monad-task" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "monad-task";
       version = "0.1.0";
       sha256 = "01w3wqmsfl9w96kfpdiwfyghm2zjn70x78l436bzxfrcm1d3ayi8";
       buildDepends = [ mtl transformers ];
       homepage = "http://github.com/ninegua/monad-task";
       description = "A monad transformer that turns event processing into co-routine programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-tx" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monad-tx";
       version = "0.0.1";
       sha256 = "0jv3pcmbm3bph42hhr4i0l3dchapixf5j5gd7ybs9j3bbk3yydk9";
       description = "A transactional state monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monad-unify" = callPackage
    ({ mkDerivation, mtl, unordered-containers }:
     mkDerivation {
       pname = "monad-unify";
       version = "0.2.2";
       sha256 = "1icl4jaa4vc4lb75m6wv4vjvf8b2xx7aziqhsg2pshizdkfxmgwp";
       buildDepends = [ mtl unordered-containers ];
       description = "Generic first-order unification";
       license = stdenv.lib.licenses.mit;
     }) {};

  "monad-wrap" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "monad-wrap";
       version = "0.1";
       sha256 = "1hmigg0cbrsdvf6s0z2wn3s81q12qg3c30jjlsrw4jdfwv1qn13f";
       buildDepends = [ transformers ];
       description = "Wrap functions such as catch around different monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadIO" = callPackage
    ({ mkDerivation, mtl, stm }:
     mkDerivation {
       pname = "monadIO";
       version = "0.10.1.4";
       sha256 = "08158j978h69knbnzxkzv856sjhhw24h5lh7d8hx2lyhzbpnfarl";
       buildDepends = [ mtl stm ];
       description = "Overloading of concurrency variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadLib" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monadLib";
       version = "3.7.3";
       sha256 = "17m9rj6spr5n9jlhwwvk8p40yrpwgz3j9kj3pjq7mpyrc1ssfd0q";
       homepage = "http://wiki.github.com/yav/monadlib";
       description = "A collection of monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadLib-compose" = callPackage
    ({ mkDerivation, monadLib }:
     mkDerivation {
       pname = "monadLib-compose";
       version = "0.2";
       sha256 = "14byhdcby094qpgmkblysnplz5r88xnfk7rnfddihzz4jgjzlvy1";
       buildDepends = [ monadLib ];
       homepage = "http://github.com/aristidb/monadLib-compose";
       description = "Arrow-like monad composition for monadLib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadacme" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monadacme";
       version = "0.0.2";
       sha256 = "1qam6k3gax2kf9zbf0q2mbsknkmx8y73i9qshbylj8wrpf896y97";
       description = "The Acme and AcmeT monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadbi" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "monadbi";
       version = "0.1";
       sha256 = "0r5hja34nalhvlc4x2rmhk9j1rsd363ilfjkd7y7cv4l8yzvifq7";
       buildDepends = [ mtl ];
       homepage = "https://github.com/ajnsit/monadbi";
       description = "Extract underlying monads from monad transformers";
       license = "GPL";
     }) {};

  "monadcryptorandom" = callPackage
    ({ mkDerivation, crypto-api, mtl, tagged, transformers }:
     mkDerivation {
       pname = "monadcryptorandom";
       version = "0.6.1";
       sha256 = "0j99j0f2qwhslimfgslsdlv0xihsddas3i69pfnjwnsd9zg5pgj2";
       buildDepends = [ crypto-api mtl tagged transformers ];
       homepage = "https://github.com/TomMD/monadcryptorandom";
       description = "A monad for using CryptoRandomGen";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadfibre" = callPackage
    ({ mkDerivation, monadbi }:
     mkDerivation {
       pname = "monadfibre";
       version = "0.1.2.1";
       sha256 = "0vj84g5y0k903pz4lk12sa6l6c0f26dc42x62f1mqny8457r3ds6";
       buildDepends = [ monadbi ];
       homepage = "https://github.com/ajnsit/monadfibre";
       description = "Monadic functions which provide Choice and Parallelism";
       license = "GPL";
     }) {};

  "monadic-arrays" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "monadic-arrays";
       version = "0.2.1.3";
       sha256 = "0qqf640zzv4dn0b1mpz54pdirdz3scc8z72vz884x88gzvdpr025";
       buildDepends = [ stm transformers ];
       homepage = "http://github.com/ekmett/monadic-arrays/";
       description = "Boxed and unboxed arrays for monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadiccp" = callPackage
    ({ mkDerivation, mtl, parsec, random }:
     mkDerivation {
       pname = "monadiccp";
       version = "0.7.6";
       sha256 = "083ppr53ac85r5ybndngsfwxgalj63giz32aa7wpcm629b9g4lxc";
       buildDepends = [ mtl parsec random ];
       homepage = "http://users.ugent.be/~tschrijv/MCP/";
       description = "Constraint Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadiccp-gecode" = callPackage
    ({ mkDerivation, gecodeint, gecodekernel, gecodesearch, gecodeset
     , gecodesupport, monadiccp, mtl
     }:
     mkDerivation {
       pname = "monadiccp-gecode";
       version = "0.1.2";
       sha256 = "1ylyzklcb37khrq8a11fzlyd0sa1nrhpd7cv470m23v7l1hc1wg0";
       buildDepends = [ monadiccp mtl ];
       extraLibraries = [
         gecodeint gecodekernel gecodesearch gecodeset gecodesupport
       ];
       homepage = "http://users.ugent.be/~tschrijv/MCP/";
       description = "Constraint Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadio-unwrappable" = callPackage
    ({ mkDerivation, monads-tf, transformers }:
     mkDerivation {
       pname = "monadio-unwrappable";
       version = "0.3";
       sha256 = "18hbi4vxj9lfcla11b17sb88ysskxavq00zmrjx62cpyzkp85yxh";
       buildDepends = [ monads-tf transformers ];
       description = "Reversibly allow monad transformer stacks to run in IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadlist" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monadlist";
       version = "0.0.2";
       sha256 = "1zpxqp5zhcpk4358xqrapvkcfyazpdsdlrw3g14518y2kwnfifq6";
       description = "Monadic versions of list functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadloc" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "monadloc";
       version = "0.7.1";
       sha256 = "1a773nysrsj61ka7bdacb0i7dxlgb1fjz3x5w9c1w1dv7rmhynmj";
       buildDepends = [ transformers ];
       homepage = "http://github.com/pepeiborra/monadloc";
       description = "A class for monads which can keep a monadic call trace";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "monadloc-pp" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, monadloc, syb }:
     mkDerivation {
       pname = "monadloc-pp";
       version = "0.3.1";
       sha256 = "0ch25kcz63xhinwd6mjqbhm282hfh280s3z910wnvdp3krgx0mpc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath haskell-src-exts monadloc syb ];
       homepage = "http://github.com/pepeiborra/monadloc-pp";
       description = "A preprocessor for generating monadic call traces";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "monadplus" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monadplus";
       version = "1.4.2";
       sha256 = "15b5320wdpmdp5slpphnc1x4rhjch3igw245dp2jxbqyvchdavin";
       description = "Haskell98 partial maps and filters over MonadPlus";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monads-fd" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "monads-fd";
       version = "0.2.0.0";
       sha256 = "1iqr5p3va5sxmpvydwqz2src54j5njcyrzn9p5apc60nv7yv6x4c";
       buildDepends = [ mtl transformers ];
       description = "Monad classes, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monads-tf" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "monads-tf";
       version = "0.1.0.2";
       sha256 = "0z07z2lfm3l93fx0qhfd98j76d1rksi5llq67l5v09pm8da4jvyb";
       buildDepends = [ transformers ];
       description = "Monad classes, using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monadtransform" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "monadtransform";
       version = "0.0.2";
       sha256 = "0i586zh6247jfmkw2x27j0aq47yz1c71irj9iwrlx1zrmvzak1yv";
       buildDepends = [ transformers ];
       homepage = "https://github.com/tonymorris/monadtransform";
       description = "A type-class for transforming monads (homomorphism) in a transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monarch" = callPackage
    ({ mkDerivation, binary, doctest, hspec, lifted-base, monad-control
     , mtl, network, pool-conduit, stm, transformers, transformers-base
     }:
     mkDerivation {
       pname = "monarch";
       version = "0.10.0.0";
       sha256 = "1a47hhlmllrm3k4ssr8rr3bgq1w7i6jpx07nyf0k8k9x5sgi1siv";
       buildDepends = [
         binary lifted-base monad-control mtl network pool-conduit stm
         transformers transformers-base
       ];
       testDepends = [ doctest hspec transformers ];
       homepage = "https://github.com/notogawa/monarch";
       description = "Monadic interface for TokyoTyrant";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mongoDB" = callPackage
    ({ mkDerivation, binary, bson, cryptohash, hashtables, lifted-base
     , monad-control, mtl, network, parsec, random, random-shuffle, text
     , transformers-base
     }:
     mkDerivation {
       pname = "mongoDB";
       version = "2.0.3";
       sha256 = "1blqd30mw9fl861f07zn7az4psl9byjjbd986884p6rx07m28abk";
       buildDepends = [
         binary bson cryptohash hashtables lifted-base monad-control mtl
         network parsec random random-shuffle text transformers-base
       ];
       homepage = "https://github.com/mongodb-haskell/mongodb";
       description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
       license = "unknown";
     }) {};

  "mongodb-queue" = callPackage
    ({ mkDerivation, data-default, hspec, lifted-base, monad-control
     , mongoDB, network, text, transformers
     }:
     mkDerivation {
       pname = "mongodb-queue";
       version = "0.4.0.1";
       sha256 = "1y3c5ydf7595ai3h6iapc0dmls348vv1jmy4g8n5wfmwzy4li22s";
       buildDepends = [
         data-default lifted-base monad-control mongoDB network text
         transformers
       ];
       testDepends = [
         data-default hspec lifted-base monad-control mongoDB network text
         transformers
       ];
       homepage = "https://github.com/docmunch/haskell-mongodb-queue";
       description = "message queue using MongoDB";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mongrel2-handler" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, blaze-textual
     , case-insensitive, http-types, text, zeromq-haskell
     }:
     mkDerivation {
       pname = "mongrel2-handler";
       version = "0.3.2";
       sha256 = "1bv9i2b0pb50r7l7l43h26ng5rcs1iyymwndcwxji8dnmbnr4jdf";
       buildDepends = [
         attoparsec blaze-builder blaze-textual case-insensitive http-types
         text zeromq-haskell
       ];
       description = "Mongrel2 Handler Library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "monitor" = callPackage
    ({ mkDerivation, filepath, hinotify }:
     mkDerivation {
       pname = "monitor";
       version = "0.1.1";
       sha256 = "06p9xj5y3xl4hcl57afqz4m4yc2vaah8i6f4smmhwmkzslg7svbs";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath hinotify ];
       description = "Do things when files change";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mono-foldable" = callPackage
    ({ mkDerivation, text, vector }:
     mkDerivation {
       pname = "mono-foldable";
       version = "0.1.0.2";
       sha256 = "1qnbw9pd06czwyj2xcsjdigg7bj8d23p3ljnnkgd3d0r67qxxlxm";
       buildDepends = [ text vector ];
       homepage = "http://github.com/JohnLato/mono-foldable";
       description = "Folds for monomorphic containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mono-traversable" = callPackage
    ({ mkDerivation, comonad, dlist, dlist-instances, foldl, hashable
     , hspec, QuickCheck, semigroupoids, semigroups, text, transformers
     , unordered-containers, vector, vector-algorithms, vector-instances
     }:
     mkDerivation {
       pname = "mono-traversable";
       version = "0.7.0";
       sha256 = "0154spqy8k060hqq2qdj5hyj5fyf6r0dcm7nmz3w4wlg2labc0i4";
       buildDepends = [
         comonad dlist dlist-instances hashable semigroupoids semigroups
         text transformers unordered-containers vector vector-algorithms
         vector-instances
       ];
       testDepends = [
         foldl hspec QuickCheck semigroups text transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Type classes for mapping, folding, and traversing monomorphic containers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "monoid-extras" = callPackage
    ({ mkDerivation, groups, semigroupoids, semigroups }:
     mkDerivation {
       pname = "monoid-extras";
       version = "0.3.3.5";
       sha256 = "07xll4pz0ijjxj75z0s0bz1lia2f65hsm61snlx0jv3aybrnw280";
       buildDepends = [ groups semigroupoids semigroups ];
       description = "Various extra monoid-related definitions and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monoid-owns" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monoid-owns";
       version = "2010.5.29";
       sha256 = "1n05f95yhn6jp7rdnlx686k1lsls4iilxdxnp41ds4afsypaclfk";
       homepage = "http://github.com/nfjinjing/monoid-owns";
       description = "a practical monoid implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monoid-record" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monoid-record";
       version = "0.1";
       sha256 = "14xs1nvf0ngx4jvinkhzq3ainhs159zx0396z88y21vvc8kw42i5";
       description = "Support for modifying record fields of monoidal type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monoid-statistics" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monoid-statistics";
       version = "0.3.1";
       sha256 = "0gfdjmx457r580lc40vpg8fkzd8n971b5vam96v6kzssg2cznqy3";
       homepage = "https://bitbucket.org/Shimuuar/monoid-statistics";
       description = "Monoids for calculation of statistics of sample";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monoid-subclasses" = callPackage
    ({ mkDerivation, primes, QuickCheck, quickcheck-instances
     , test-framework, test-framework-quickcheck2, text, vector
     }:
     mkDerivation {
       pname = "monoid-subclasses";
       version = "0.3.6.2";
       sha256 = "1v9mahl8w0q8ink7qx0flfm2aplqidkgxx5fm091b69g612qlz0j";
       buildDepends = [ primes text vector ];
       testDepends = [
         primes QuickCheck quickcheck-instances test-framework
         test-framework-quickcheck2 text vector
       ];
       homepage = "https://github.com/blamario/monoid-subclasses/";
       description = "Subclasses of Monoid";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monoid-transformer" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monoid-transformer";
       version = "0.0.3";
       sha256 = "1f06ppvv50w5pacm4bs89zwkydih626cgbd2z6xqbp8cmhg6dj4l";
       description = "Monoid counterparts to some ubiquitous monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monoidplus" = callPackage
    ({ mkDerivation, contravariant, semigroups, transformers }:
     mkDerivation {
       pname = "monoidplus";
       version = "0.1.0.1";
       sha256 = "1klgwv3sd9zmqpj157rypln51kcwml9b1fyaxnip0a1525h6c2s9";
       buildDepends = [ contravariant semigroups transformers ];
       description = "Extra classes/functions about monoids";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "monoids" = callPackage
    ({ mkDerivation, fingertree, parallel, text }:
     mkDerivation {
       pname = "monoids";
       version = "0.3.2";
       sha256 = "0yn15q0569mdm20wdbwydbb1vdzfdh1ismhwplwbvi2989h78kca";
       buildDepends = [ fingertree parallel text ];
       homepage = "http://github.com/ekmett/monoids";
       description = "Deprecated: Use 'reducers'";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monomorphic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "monomorphic";
       version = "0.0.3.2";
       sha256 = "13zw506wifz2lf7n4a48rkn7ym44jpiqag21zc1py6xxdlkbrhh2";
       homepage = "https://github.com/konn/monomorphic";
       description = "Library to convert polymorphic datatypes to/from its monomorphic represetation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "montage" = callPackage
    ({ mkDerivation, aeson, ListLike, pool-conduit, protocol-buffers
     , protocol-buffers-descriptor, riak-bump, safe, stats-web, stm
     , system-uuid, text, time, unordered-containers, zeromq-haskell
     }:
     mkDerivation {
       pname = "montage";
       version = "0.1.1";
       sha256 = "1yx2aagfxjgs9jwipbwa05aiqkm1xgxd0gwnc4qj6mwz9913zsl7";
       buildDepends = [
         aeson ListLike pool-conduit protocol-buffers
         protocol-buffers-descriptor riak-bump safe stats-web stm
         system-uuid text time unordered-containers zeromq-haskell
       ];
       homepage = "http://github.com/bumptech/montage";
       description = "Riak Resolution Proxy";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "montage-client" = callPackage
    ({ mkDerivation, aeson, ListLike, mtl, pool-conduit
     , protocol-buffers, protocol-buffers-descriptor, riak-bump, safe
     , stats-web, stm, system-uuid, text, text-format, time
     , unordered-containers, zeromq-haskell
     }:
     mkDerivation {
       pname = "montage-client";
       version = "0.1.1";
       sha256 = "18bgaw0i7zllabq8ys6p6qd8qga3xgxsfmgn88g4dijh6v6zf7pf";
       buildDepends = [
         aeson ListLike mtl pool-conduit protocol-buffers
         protocol-buffers-descriptor riak-bump safe stats-web stm
         system-uuid text text-format time unordered-containers
         zeromq-haskell
       ];
       homepage = "http://github.com/bumptech/montage-haskell-client";
       description = "Riak Resolution Proxy Client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "monte-carlo" = callPackage
    ({ mkDerivation, gsl-random, ieee754, primitive, QuickCheck, random
     , test-framework, test-framework-quickcheck2, transformers, vector
     }:
     mkDerivation {
       pname = "monte-carlo";
       version = "0.6.1";
       sha256 = "1zk8wyf9bzarnvsxh9a6diyssb78sfq1pl729gq113j0vibs8f0x";
       buildDepends = [ gsl-random primitive transformers vector ];
       testDepends = [
         gsl-random ieee754 primitive QuickCheck random test-framework
         test-framework-quickcheck2 transformers vector
       ];
       homepage = "http://github.com/patperry/hs-monte-carlo";
       description = "A monad and transformer for Monte Carlo calculations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "moo" = callPackage
    ({ mkDerivation, gray-code, HUnit, mersenne-random-pure64
     , monad-mersenne-random, mtl, random, random-shuffle, time
     }:
     mkDerivation {
       pname = "moo";
       version = "1.0";
       sha256 = "02ah9v6h4ansd8kz76jnrx0yra9nz6ql92p5rm01pxri1gc7kn6w";
       buildDepends = [
         gray-code mersenne-random-pure64 monad-mersenne-random mtl random
         random-shuffle time
       ];
       testDepends = [
         gray-code HUnit mersenne-random-pure64 monad-mersenne-random mtl
         random random-shuffle time
       ];
       homepage = "http://www.github.com/astanin/moo/";
       description = "Genetic algorithm library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "morfette" = callPackage
    ({ mkDerivation, binary, filepath, mtl, QuickCheck, text
     , utf8-string, vector
     }:
     mkDerivation {
       pname = "morfette";
       version = "0.3.6";
       sha256 = "1r27n2zyf5n4nz42is966iwalrj13w5z3qv1iympg8gvpsm5v06i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary filepath mtl QuickCheck text utf8-string vector
       ];
       homepage = "http://sites.google.com/site/morfetteweb/";
       description = "A tool for supervised learning of morphology";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "morfeusz" = callPackage
    ({ mkDerivation, morfeusz, mtl, text }:
     mkDerivation {
       pname = "morfeusz";
       version = "0.4.2";
       sha256 = "1lzl5ks7px1xibfa6y0wnfv2mk2w39hscrrynqn7a3gjnca00sx0";
       buildDepends = [ mtl text ];
       extraLibraries = [ morfeusz ];
       homepage = "https://github.com/kawu/morfeusz";
       description = "Bindings to the morphological analyser Morfeusz";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) morfeusz; };

  "morte" = callPackage
    ({ mkDerivation, alex, binary, happy, lens-family-core
     , optparse-applicative, pipes, text, transformers
     }:
     mkDerivation {
       pname = "morte";
       version = "1.0.1";
       sha256 = "0gn4fdvc61f59k06s7gbds351vljd3lbwvl7mka59kk39i7flfyq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary lens-family-core optparse-applicative pipes text
         transformers
       ];
       buildTools = [ alex happy ];
       description = "Bare-bones calculus of constructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mount" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mount";
       version = "0.2.1";
       sha256 = "0rdlnz0xk6mil79a8ygfrwgdychsn6h1gbv6qn2nybzaw1zjf4z3";
       description = "Mounts and umounts filesystems";
       license = "GPL";
     }) {};

  "mp3decoder" = callPackage
    ({ mkDerivation, binary-strict, mtl }:
     mkDerivation {
       pname = "mp3decoder";
       version = "0.0.1";
       sha256 = "0kwjnbrmlp9a5wz3mgf76nd2ar32d3n1f4jmbfpsggcm7jdp1rmv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary-strict mtl ];
       homepage = "http://www.bjrn.se/mp3dec";
       description = "MP3 decoder for teaching";
       license = "unknown";
     }) {};

  "mpdmate" = callPackage
    ({ mkDerivation, network, powermate }:
     mkDerivation {
       pname = "mpdmate";
       version = "0.1";
       sha256 = "02p6g8wgmmzxl3dnrvbj1msg972c40s300rfykqsg1g5wiqbllf2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network powermate ];
       homepage = "http://neugierig.org/software/darcs/powermate/";
       description = "MPD/PowerMate executable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mpppc" = callPackage
    ({ mkDerivation, ansi-terminal, split, text }:
     mkDerivation {
       pname = "mpppc";
       version = "0.1.3";
       sha256 = "1zcilskpslpqyrbwpabwbry4p3kpcfca94wchh9dkq9g8pg8laxi";
       buildDepends = [ ansi-terminal split text ];
       description = "Multi-dimensional parametric pretty-printer with color";
       license = "GPL";
     }) {};

  "mpretty" = callPackage
    ({ mkDerivation, ansi-terminal, data-lens-fd, data-lens-template
     , mtl, orders, text, transformers
     }:
     mkDerivation {
       pname = "mpretty";
       version = "0.1.0.0";
       sha256 = "0q4fi7jmdf3bvcqk6fc7194h59sjwf76ld8niwqczc30v8lyjq2n";
       buildDepends = [
         ansi-terminal data-lens-fd data-lens-template mtl orders text
         transformers
       ];
       description = "a monadic, extensible pretty printing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mprover" = callPackage
    ({ mkDerivation, mtl, parsec, transformers, unbound }:
     mkDerivation {
       pname = "mprover";
       version = "0.0.0.0";
       sha256 = "1b5vzhbn5jnpxc0bzbhdak51qhzv5hif0300jsrbi5ffyvcjqkss";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec transformers unbound ];
       description = "Simple equational reasoning for a Haskell-ish language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mps" = callPackage
    ({ mkDerivation, filepath, monoid-owns, parallel, parsec, regexpr
     , time, utf8-string
     }:
     mkDerivation {
       pname = "mps";
       version = "2010.11.28";
       sha256 = "1xhflvgwrjzj7qb69dn149lh32c7q9161zrzfs07ncs233y0w4lg";
       buildDepends = [
         filepath monoid-owns parallel parsec regexpr time utf8-string
       ];
       homepage = "http://github.com/nfjinjing/mps/";
       description = "simply oo";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mpvguihs" = callPackage
    ({ mkDerivation, filepath, gtk, mtl }:
     mkDerivation {
       pname = "mpvguihs";
       version = "0.1.1";
       sha256 = "1nmc03s8h3khmvajyhwaniczq0r4wrinq2sjjp1c6gyc2nggxzyx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath gtk mtl ];
       homepage = "https://github.com/sebadoom/mpvguihs";
       description = "A minimalist mpv GUI written in I/O heavy Haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mqtt-hs" = callPackage
    ({ mkDerivation, attoparsec, monad-loops, mtl, network, singletons
     , text
     }:
     mkDerivation {
       pname = "mqtt-hs";
       version = "0.2.0";
       sha256 = "0jvzr6qbmdxl11j8fwnbasgqgdfm395lm2gh2va9zfpk5xpx0mjg";
       editedCabalFile = "0fb4f0cp2lfw870fyw1dmrsq27rncrdn40mc8r3fvywwm6g2w2ma";
       buildDepends = [
         attoparsec monad-loops mtl network singletons text
       ];
       homepage = "http://github.com/k00mi/mqtt-hs";
       description = "A MQTT client library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "msgpack" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, deepseq, hashable, mtl
     , QuickCheck, test-framework, test-framework-quickcheck2, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "msgpack";
       version = "0.7.2.5";
       sha256 = "1iwibyv5aqp5h98x4s5pp3hj218l2k3vff87p727mh74f5j6l3s8";
       buildDepends = [
         attoparsec blaze-builder deepseq hashable mtl text
         unordered-containers vector
       ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://msgpack.org/";
       description = "A Haskell implementation of MessagePack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "msgpack-idl" = callPackage
    ({ mkDerivation, blaze-builder, cmdargs, filepath, hspec, msgpack
     , peggy, shakespeare-text, text
     }:
     mkDerivation {
       pname = "msgpack-idl";
       version = "0.2.1";
       sha256 = "0z28qikcfvfkj9xr87g13jlm2blqfxj3rfrg7hm2hfgv3qz4gkfz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder cmdargs filepath msgpack peggy shakespeare-text text
       ];
       testDepends = [ hspec ];
       homepage = "http://msgpack.org/";
       description = "An IDL Compiler for MessagePack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "msgpack-rpc" = callPackage
    ({ mkDerivation, async, attoparsec-conduit, conduit, hspec
     , monad-control, msgpack, mtl, network, network-conduit, random
     , text
     }:
     mkDerivation {
       pname = "msgpack-rpc";
       version = "0.9.0";
       sha256 = "0gljj04f7zfaj7y3rknygyz0k5c0vx4zhphcp934q36xa943jmwr";
       buildDepends = [
         attoparsec-conduit conduit monad-control msgpack mtl network
         network-conduit random text
       ];
       testDepends = [ async hspec mtl network ];
       homepage = "http://msgpack.org/";
       description = "A MessagePack-RPC Implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mstate" = callPackage
    ({ mkDerivation, monad-peel, mtl, stm }:
     mkDerivation {
       pname = "mstate";
       version = "0.2.7";
       sha256 = "05rcpfang0biy16aglf6da44zp9zqy2x0zdsfl75mv1drkky6225";
       buildDepends = [ monad-peel mtl stm ];
       description = "MState: A consistent State monad for concurrent applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "msu" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, xdg-basedir }:
     mkDerivation {
       pname = "msu";
       version = "0.0.2";
       sha256 = "0bqzzk7y3dj60r02xn3cjlq955jzsrvcbq63pvav0w952bvxvx5c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec xdg-basedir ];
       homepage = "http://github.com/pbrisbin/msu";
       description = "Monitor Setup Utility";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mtgoxapi" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring
     , base64-bytestring, curl, either, errors, hashable, HTTP, HUnit
     , ixset, network, QuickCheck, SHA, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , transformers, unordered-containers, vector, watchdog
     }:
     mkDerivation {
       pname = "mtgoxapi";
       version = "0.5.0.2";
       sha256 = "1iyn2mq0fql952phmbs8578awrv5l6q9iqkmsaby2jp48mnwizji";
       buildDepends = [
         aeson attoparsec base16-bytestring base64-bytestring curl either
         errors hashable HTTP ixset network SHA text time transformers
         unordered-containers vector watchdog
       ];
       testDepends = [
         aeson attoparsec base16-bytestring base64-bytestring curl errors
         hashable HTTP HUnit ixset network QuickCheck SHA test-framework
         test-framework-hunit test-framework-quickcheck2 text time
         transformers unordered-containers vector watchdog
       ];
       description = "Library to communicate with Mt.Gox";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mtl" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "mtl";
       version = "2.2.1";
       sha256 = "1icdbj2rshzn0m1zz5wa7v3xvkf6qw811p4s7jgqwvx1ydwrvrfa";
       buildDepends = [ transformers ];
       homepage = "http://github.com/ekmett/mtl";
       description = "Monad classes, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mtl-evil-instances" = callPackage
    ({ mkDerivation, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "mtl-evil-instances";
       version = "0.1";
       sha256 = "1z10p0dmvjyadjc46nkzyqicfk0097ff2ni3fiypw9z5knsxhym4";
       buildDepends = [
         monad-control mtl transformers transformers-base
       ];
       description = "Instances for the mtl classes for all monad transformers";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "mtl-prelude" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "mtl-prelude";
       version = "2.0.1";
       sha256 = "0z56ycpfgbrxhk8k74rk254yyhqix8ryz6ni8i7aki294wh2cvwn";
       buildDepends = [ mtl transformers ];
       homepage = "https://github.com/nikita-volkov/mtl-prelude";
       description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mtl-tf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mtl-tf";
       version = "0.1";
       sha256 = "0qfmswdkj95bh6wkic8hh002wsxqlrylw45k6w9iyzv4saqnl22f";
       description = "Monad transformer library using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mtlparse" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "mtlparse";
       version = "0.1.2";
       sha256 = "0hnixpchgzrlx83cqykmqnahk8llf18gz8jkq2ql5y7gwj2xk1fd";
       buildDepends = [ mtl ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/mtlparse/";
       description = "parse library using mtl package";
       license = "LGPL";
     }) {};

  "mtlx" = callPackage
    ({ mkDerivation, mtl, QuickCheck }:
     mkDerivation {
       pname = "mtlx";
       version = "0.1.6";
       sha256 = "0s0cniqn1fb7rq14w3wjh7mkzkxpndj1h1wrgssxds6cs3vkk4dn";
       buildDepends = [ mtl QuickCheck ];
       description = "Monad transformer library with type indexes, providing 'free' copies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mtp" = callPackage
    ({ mkDerivation, filepath, mtp }:
     mkDerivation {
       pname = "mtp";
       version = "0.1.1.1";
       sha256 = "164q7p81c5an4w3pqpfk94rgn0banfs2yp7fhbbckdyb2qymsbww";
       buildDepends = [ filepath ];
       extraLibraries = [ mtp ];
       description = "Bindings to libmtp";
       license = "LGPL";
     }) { inherit (pkgs) mtp; };

  "mtree" = callPackage
    ({ mkDerivation, bifunctors }:
     mkDerivation {
       pname = "mtree";
       version = "0.1";
       sha256 = "1l4kjrmr5v8pkhf48w0ym6dlrsvaf21p3x5sykq1rxwp821cqglv";
       buildDepends = [ bifunctors ];
       description = "Tree with Meta and Content parameters";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "mucipher" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "mucipher";
       version = "0.6.0";
       sha256 = "0bmdri4bni9whjgz4mxvkk9jbxkscci38l06gk2n5xiwyg1hwg0y";
       description = "A library to produce simple ciphers for use with lambdabot";
       license = "GPL";
     }) {};

  "mueval" = callPackage
    ({ mkDerivation, Cabal, extensible-exceptions, filepath, hint, mtl
     , show, simple-reflect, utf8-string
     }:
     mkDerivation {
       pname = "mueval";
       version = "0.9.1.1";
       sha256 = "0p9qf8lb3c1y87qpl9b4n6v6bjrb9fw3yfg4p7niqdz31454d2pz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal extensible-exceptions filepath hint mtl show simple-reflect
         utf8-string
       ];
       homepage = "https://github.com/gwern/mueval";
       description = "Safely evaluate pure Haskell expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multext-east-msd" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "multext-east-msd";
       version = "0.1.0.4";
       sha256 = "1if1ip22y7w59lkyshn4ic4p46zrfs4kcdzzjai9l8xbscavgdl6";
       homepage = "http://github.com/jsnajder/multex-east-msd";
       description = "MULTEXT-East morphosyntactic descriptors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multiarg" = callPackage
    ({ mkDerivation, bifunctors, utf8String }:
     mkDerivation {
       pname = "multiarg";
       version = "0.28.0.0";
       sha256 = "1qy2xlxqhxlj9f5g7wf90vwch3qs1yz733f87irdmak0v4vxdkd5";
       buildDepends = [ bifunctors utf8String ];
       homepage = "https://github.com/massysett/multiarg";
       description = "Combinators to build command line parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multifocal" = callPackage
    ({ mkDerivation, haskell-src-exts, HaXml, hxt, hxt-xpath, mtl
     , parsec, pointless-haskell, pointless-lenses, pointless-rewrite
     , syb
     }:
     mkDerivation {
       pname = "multifocal";
       version = "0.0.1";
       sha256 = "0w47ffx8f8hw2a35kxjwi16l9bfgc0k2ac7r844123anmgv2wcfm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         haskell-src-exts HaXml hxt hxt-xpath mtl parsec pointless-haskell
         pointless-lenses pointless-rewrite syb
       ];
       description = "Bidirectional Two-level Transformation of XML Schemas";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multimap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "multimap";
       version = "1.2.1";
       sha256 = "0d3l5q4yvmywl6i9ip96zz0fvhjdh00mfbbniphbjxsi8wlwack3";
       homepage = "http://hub.darcs.net/scravy/multimap";
       description = "A multimap";
       license = stdenv.lib.licenses.mit;
     }) {};

  "multipart" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "multipart";
       version = "0.1.2";
       sha256 = "0g04jhyw1ib1s7c9bcldyyn4n90qd9x7dmvic4vgq57bgcqgnhz5";
       buildDepends = [ parsec ];
       homepage = "http://www.github.com/silkapp/multipart";
       description = "HTTP multipart split out of the cgi package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multipass" = callPackage
    ({ mkDerivation, binary, hashable, keys, math-functions, newtype
     , unordered-containers
     }:
     mkDerivation {
       pname = "multipass";
       version = "0.1.0.2";
       sha256 = "0zs5sw9m5r8g9p29knrihqsvihwihr1ca28vb0283k5jik18aifm";
       buildDepends = [
         binary hashable keys math-functions newtype unordered-containers
       ];
       homepage = "http://github.com/ekmett/multipass/";
       description = "Folding data with multiple named passes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multiplate" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "multiplate";
       version = "0.0.2";
       sha256 = "02pqfkdcv4fn0pmxphg19b3fiazn4hpphfj8xgp77vpy2lczndsw";
       buildDepends = [ transformers ];
       homepage = "http://haskell.org/haskellwiki/Multiplate";
       description = "Lightweight generic library for mutually recursive data types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "multiplate-simplified" = callPackage
    ({ mkDerivation, multiplate, transformers }:
     mkDerivation {
       pname = "multiplate-simplified";
       version = "0.0.0.2";
       sha256 = "0xzjl3nsm6wgbqd6rjn0bf9jhiw6l6ql5gj5m8xqccv8363i5v2r";
       buildDepends = [ multiplate transformers ];
       description = "Shorter, more generic functions for Multiplate";
       license = stdenv.lib.licenses.mit;
     }) {};

  "multiplicity" = callPackage
    ({ mkDerivation, fez-conf, mtl }:
     mkDerivation {
       pname = "multiplicity";
       version = "0.1.0";
       sha256 = "1y0v06qnpna8sa0aw24i4s29yc49m3a7d8yrl6xiv1jrgycjcafc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ fez-conf mtl ];
       homepage = "http://ui3.info/d/proj/multiplicity.html";
       description = "Wrapper program for duplicity, adding config files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multirec" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "multirec";
       version = "0.7.4";
       sha256 = "01mligrin7fp3fnnwgv8nrww5938ryghgyw9xyw153a615ryj8i9";
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/Multirec";
       description = "Generic programming for families of recursive datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multirec-alt-deriver" = callPackage
    ({ mkDerivation, mtl, multirec, syb, th-expand-syns }:
     mkDerivation {
       pname = "multirec-alt-deriver";
       version = "0.1.3";
       sha256 = "0hrzrzmgj1y784dvwiz20y842m4kk9rd9vhbwz8cazafs8gindfc";
       buildDepends = [ mtl multirec syb th-expand-syns ];
       description = "Alternative multirec instances deriver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multirec-binary" = callPackage
    ({ mkDerivation, binary, multirec }:
     mkDerivation {
       pname = "multirec-binary";
       version = "0.0.1";
       sha256 = "1cj1rfjqxwc06vr5w12fqbcpjb0fjsphf8vp40sp2naizpvvnmzs";
       buildDepends = [ binary multirec ];
       description = "Generic Data.Binary instances using MultiRec.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multiset" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "multiset";
       version = "0.2.2";
       sha256 = "1g14c1zm4rdc8nxvb69k98h542wi24q2lpba1gpqjqspk4d0sjmn";
       description = "The Data.MultiSet container type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multiset-comb" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "multiset-comb";
       version = "0.2.3";
       sha256 = "0qkl6csnl1g6wbsyxirdq8hdbbbkp3dfsjix76yx242wdyh1j6pq";
       description = "Combinatorial algorithms over multisets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multisetrewrite" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "multisetrewrite";
       version = "0.6";
       sha256 = "1chgdikgp70rkzw2k3wy7i276j5vb435vq26yl37lkh0im1bg5ay";
       buildDepends = [ stm ];
       homepage = "http://sulzmann.blogspot.com/2008/10/multi-set-rewrite-rules-with-guards-and.html";
       description = "Multi-set rewrite rules with guards and a parallel execution scheme";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "multistate" = callPackage
    ({ mkDerivation, mtl, tfp, transformers }:
     mkDerivation {
       pname = "multistate";
       version = "0.1.3.2";
       sha256 = "00504bn8kiv93c7xziqibngyfy105lsh4pkyn1bav7mjzzam0nhb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl tfp transformers ];
       homepage = "https://github.com/lspitzner/multistate";
       description = "like mtl's ReaderT/StateT, but more than one contained value/type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "muon" = callPackage
    ({ mkDerivation, blaze-html, ConfigFile, Glob, happstack-server
     , HStringTemplate, markdown, MissingH, text
     }:
     mkDerivation {
       pname = "muon";
       version = "0.1.0.8";
       sha256 = "0s11xvhawwrcr31f0khp0q6fimwjps12n992z35ldnh0kk3dmk9z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-html ConfigFile Glob happstack-server HStringTemplate
         markdown MissingH text
       ];
       homepage = "http://github.com/kaashif-hymabaccus/muon";
       description = "Static blog generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "murder" = callPackage
    ({ mkDerivation, AspectAG, HList, ListLike, TTTAS, uu-parsinglib
     , uulib
     }:
     mkDerivation {
       pname = "murder";
       version = "1.3.4";
       sha256 = "0pr77j3br8knk26iknsa6hy076bx2bb6jgii3v6aqhv40ykcrv15";
       buildDepends = [
         AspectAG HList ListLike TTTAS uu-parsinglib uulib
       ];
       homepage = "http://www.cs.uu.nl/wiki/Center/CoCoCo";
       description = "MUtually Recursive Definitions Explicitly Represented";
       license = "LGPL";
     }) {};

  "murmur-hash" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "murmur-hash";
       version = "0.1.0.7";
       sha256 = "125v4ypiv8n2m8zd1yi46prz96yy79ap0yzhm4vhrws4cf1zapkp";
       homepage = "http://github.com/nominolo/murmur-hash";
       description = "MurmurHash2 implementation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "murmurhash3" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "murmurhash3";
       version = "1.0";
       sha256 = "1hz6rf1qrzgixx19bn9hnp07jfb61wnrjq5bgqnd3px569afwdb2";
       homepage = "https://github.com/niswegmann/murmurhash3";
       description = "32-bit non-cryptographic hashing";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "music-articulation" = callPackage
    ({ mkDerivation, average, semigroups }:
     mkDerivation {
       pname = "music-articulation";
       version = "1.8";
       sha256 = "0inxmcrnpsxfgay1j7h45qwr45zq94l8pjfn0vwj7vmvhkymw5py";
       buildDepends = [ average semigroups ];
       description = "Abstract representation of musical articulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-diatonic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "music-diatonic";
       version = "0.1.1";
       sha256 = "19sflj0b5qslclqjwyacgc2pdplwr3mimmhf8ka7bbs70r557wbs";
       description = "Implementation of basic western musical theory objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-dynamics" = callPackage
    ({ mkDerivation, average, music-dynamics-literal, semigroups }:
     mkDerivation {
       pname = "music-dynamics";
       version = "1.8";
       sha256 = "0abziidvf78wh86r2lxqg3jvr93nfjnmzr9k3iiki1lq2w6p2n9y";
       buildDepends = [ average music-dynamics-literal semigroups ];
       description = "Abstract representation of musical dynamics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-dynamics-literal" = callPackage
    ({ mkDerivation, semigroups }:
     mkDerivation {
       pname = "music-dynamics-literal";
       version = "1.8";
       sha256 = "1rgir9r12jrc73g1rsnl9ksqzr2yh7pyha13ih94lskcqc2zvqps";
       buildDepends = [ semigroups ];
       description = "Overloaded dynamics literals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-graphics" = callPackage
    ({ mkDerivation, aeson, blaze-svg, lens, music-pitch
     , music-preludes, music-score
     }:
     mkDerivation {
       pname = "music-graphics";
       version = "1.8";
       sha256 = "1hgqs8i6g33ang7bg7phyiz6k1k20ldfb3k8aamvna6ffqq6ck3m";
       buildDepends = [
         aeson blaze-svg lens music-pitch music-preludes music-score
       ];
       description = "Diagrams-based visualization of musical data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-parts" = callPackage
    ({ mkDerivation, adjunctions, aeson, data-default, lens
     , music-dynamics, music-pitch, roman-numerals, semigroups
     }:
     mkDerivation {
       pname = "music-parts";
       version = "1.8";
       sha256 = "0mb07c4494dxdvzsyi06znnha65llpgy08hf6wfrsl14nizpasfl";
       buildDepends = [
         adjunctions aeson data-default lens music-dynamics music-pitch
         roman-numerals semigroups
       ];
       description = "Musical instruments, parts and playing techniques";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-pitch" = callPackage
    ({ mkDerivation, data-interval, lens, music-pitch-literal, nats
     , positive, semigroups, type-unary, vector-space
     , vector-space-points
     }:
     mkDerivation {
       pname = "music-pitch";
       version = "1.8";
       sha256 = "0q7v133p77sn2xwv2g14l1xzszzwqnfgs4k0rh4ckvzdphnlwvii";
       buildDepends = [
         data-interval lens music-pitch-literal nats positive semigroups
         type-unary vector-space vector-space-points
       ];
       description = "Musical pitch representation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-pitch-literal" = callPackage
    ({ mkDerivation, semigroups }:
     mkDerivation {
       pname = "music-pitch-literal";
       version = "1.8";
       sha256 = "0l4iw993jm0azl2v62y6k7gfg85kqwlr48gz4fk2c2ag4v5adifg";
       buildDepends = [ semigroups ];
       description = "Overloaded pitch literals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-preludes" = callPackage
    ({ mkDerivation, aeson, async, average, data-default, filepath
     , lens, lilypond, monadplus, music-articulation, music-dynamics
     , music-dynamics-literal, music-parts, music-pitch
     , music-pitch-literal, music-score, musicxml2, optparse-applicative
     , semigroups, split, tasty, tasty-golden, temporary, vector-space
     , vector-space-points
     }:
     mkDerivation {
       pname = "music-preludes";
       version = "1.8";
       sha256 = "01mpb8g0b43v475d7w9hndfxlbxcy3l4fabq330c91api26vzsxa";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson async average data-default filepath lens lilypond monadplus
         music-articulation music-dynamics music-dynamics-literal
         music-parts music-pitch music-pitch-literal music-score musicxml2
         optparse-applicative semigroups split temporary vector-space
         vector-space-points
       ];
       testDepends = [ tasty tasty-golden ];
       description = "Some useful preludes for the Music Suite";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-score" = callPackage
    ({ mkDerivation, adjunctions, aeson, average, bifunctors, colour
     , comonad, contravariant, data-default, distributive, HCodecs, lens
     , lilypond, monadplus, mtl, music-dynamics-literal
     , music-pitch-literal, musicxml2, nats, NumInstances, parsec
     , prettify, profunctors, semigroups, transformers
     , transformers-compat, vector-space, vector-space-points, void
     }:
     mkDerivation {
       pname = "music-score";
       version = "1.8";
       sha256 = "1j3xz1xbww4qp6vdr0qc72v23r0vjgyd0n2c7p4wckfbbc95rnyj";
       buildDepends = [
         adjunctions aeson average bifunctors colour comonad contravariant
         data-default distributive HCodecs lens lilypond monadplus mtl
         music-dynamics-literal music-pitch-literal musicxml2 nats
         NumInstances parsec prettify profunctors semigroups transformers
         transformers-compat vector-space vector-space-points void
       ];
       description = "Musical score and part representation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-sibelius" = callPackage
    ({ mkDerivation, aeson, lens, monadplus, music-pitch-literal
     , music-preludes, music-score, semigroups, unordered-containers
     }:
     mkDerivation {
       pname = "music-sibelius";
       version = "1.8";
       sha256 = "1fn132cpnn9fp0qx45zkzmqljxf3n19ahib2aaccv0pki8hl5hc8";
       buildDepends = [
         aeson lens monadplus music-pitch-literal music-preludes music-score
         semigroups unordered-containers
       ];
       description = "Interaction with Sibelius";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-suite" = callPackage
    ({ mkDerivation, abcnotation, lilypond, music-articulation
     , music-dynamics, music-dynamics-literal, music-parts, music-pitch
     , music-pitch-literal, music-preludes, music-score, musicxml2
     }:
     mkDerivation {
       pname = "music-suite";
       version = "1.8";
       sha256 = "04xvs2vgmcm7czzg79jkk0wingysx1a2zpjw1lvbxanf7xcc2xx4";
       buildDepends = [
         abcnotation lilypond music-articulation music-dynamics
         music-dynamics-literal music-parts music-pitch music-pitch-literal
         music-preludes music-score musicxml2
       ];
       description = "A set of libraries for composition, analysis and manipulation of music";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "music-util" = callPackage
    ({ mkDerivation, Cabal, fgl, shelly, split, text }:
     mkDerivation {
       pname = "music-util";
       version = "0.17";
       sha256 = "0pv6mwdrk2kz3lr8r3jkc368zch46w4rn5dmqbjqm0ykfw1n3bqf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal fgl shelly split text ];
       description = "Utility for developing the Music Suite";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "musicbrainz-email" = callPackage
    ({ mkDerivation, aeson, amqp, blaze-builder, configurator, errors
     , heist, HTTP, HUnit, mime-mail, mtl, network, network-metrics
     , optparse-applicative, postgresql-simple, smallcheck, stm
     , test-framework, test-framework-hunit, test-framework-smallcheck
     , text, time, transformers, xmlhtml
     }:
     mkDerivation {
       pname = "musicbrainz-email";
       version = "1.0.0.0";
       sha256 = "10salrdl4vfdy3x26564i8kdv6lx8py697v5n8q9ywqsd05dcrv2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson amqp blaze-builder errors heist HTTP mime-mail mtl network
         network-metrics optparse-applicative postgresql-simple text time
         transformers xmlhtml
       ];
       testDepends = [
         aeson amqp blaze-builder configurator errors heist HTTP HUnit
         mime-mail mtl postgresql-simple smallcheck stm test-framework
         test-framework-hunit test-framework-smallcheck text time
         transformers xmlhtml
       ];
       homepage = "http://github.com/metabrainz/mass-mail";
       description = "Send an email to all MusicBrainz editors";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "musicxml" = callPackage
    ({ mkDerivation, HaXml }:
     mkDerivation {
       pname = "musicxml";
       version = "0.1.2";
       sha256 = "0sn8gzymf6xpdksd7v2xyb4y2iks2l09hyw0rch109lgrnsy5gp8";
       buildDepends = [ HaXml ];
       homepage = "https://troglodita.di.uminho.pt/svn/musica/work/MusicXML";
       description = "MusicXML format encoded as Haskell type and functions of reading and writting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "musicxml2" = callPackage
    ({ mkDerivation, data-default, music-dynamics-literal
     , music-pitch-literal, nats, reverse-apply, semigroups, type-unary
     , xml
     }:
     mkDerivation {
       pname = "musicxml2";
       version = "1.8";
       sha256 = "19s08s88hzazyy2fmzg485krfw02jpcrfv1cgb300zpj3lzv7k81";
       buildDepends = [
         data-default music-dynamics-literal music-pitch-literal nats
         reverse-apply semigroups type-unary xml
       ];
       description = "A representation of the MusicXML format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mustache-haskell" = callPackage
    ({ mkDerivation, aeson, optparse-applicative, parsec, pretty-show
     , scientific, text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "mustache-haskell";
       version = "0.1.0.5";
       sha256 = "0mkj5ngcblm949wkxiq2qck3zak93r5zipppwgis59yg01cp79v2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson optparse-applicative parsec pretty-show scientific text
         transformers unordered-containers vector
       ];
       homepage = "https://github.com/danchoi/mustache-haskell";
       description = "Straight implementation of mustache templates";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mustache2hs" = callPackage
    ({ mkDerivation, blaze-builder, filepath, haskell-src, parsec, text
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "mustache2hs";
       version = "0.3";
       sha256 = "1m15q6dy3hbbf5q302gw3y2znxf2mfz9pwbdyawg8bqiw81zahis";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-builder filepath haskell-src parsec text transformers
         utf8-string
       ];
       homepage = "http://github.com/singpolyma/mustache2hs";
       description = "Utility to generate Haskell code from Mustache templates";
       license = "unknown";
     }) {};

  "mutable-iter" = callPackage
    ({ mkDerivation, iteratee, MonadCatchIO-transformers, transformers
     , vector
     }:
     mkDerivation {
       pname = "mutable-iter";
       version = "0.6.1";
       sha256 = "08fqfkzb6b0pzzffkfcwigcm0s4hgadh7jl4pg6smjcyfjz9572f";
       buildDepends = [
         iteratee MonadCatchIO-transformers transformers vector
       ];
       homepage = "http://jwlato.webfactional.com/haskell/mutable-iter";
       description = "iteratees based upon mutable buffers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mute-unmute" = callPackage
    ({ mkDerivation, filepath, hslogger, hslogger-template, mtl
     , network-dbus
     }:
     mkDerivation {
       pname = "mute-unmute";
       version = "0.2.0.0";
       sha256 = "0nd1c4l2z7bflnghz7bbbahpfl2jj9mygpygxc7028axrrxj09af";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath hslogger hslogger-template mtl network-dbus
       ];
       homepage = "http://github.com/Tener/mute-unmute";
       description = "Watches your screensaver and (un)mutes music when you (un)lock the screen";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "mvc" = callPackage
    ({ mkDerivation, async, contravariant, managed, mmorph, pipes
     , pipes-concurrency, transformers
     }:
     mkDerivation {
       pname = "mvc";
       version = "1.0.2";
       sha256 = "1hah38hzy0d12b3vk7m6wfzx6hbm79zl4a9mx8bk9825c0g9qy0z";
       buildDepends = [
         async contravariant managed mmorph pipes pipes-concurrency
         transformers
       ];
       description = "Model-view-controller";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mvc-updates" = callPackage
    ({ mkDerivation, async, foldl, mvc }:
     mkDerivation {
       pname = "mvc-updates";
       version = "1.2.0";
       sha256 = "125bwc79qcmwb8dn8yqkrxlbqf3vwdzhjx66c69j2jbrp70061n6";
       buildDepends = [ async foldl mvc ];
       description = "Concurrent and combinable updates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mvclient" = callPackage
    ({ mkDerivation, base-unicode-symbols, binary, control-event
     , Crypto, data-binary-ieee754, hexpat, http-enumerator, maccatcher
     , mtl, network, parsec, time, uuid
     }:
     mkDerivation {
       pname = "mvclient";
       version = "0.4";
       sha256 = "12ckzfb6wwa3865isxnzw7xmwh9f43ali0ab5mal6brs33zz0z53";
       buildDepends = [
         base-unicode-symbols binary control-event Crypto
         data-binary-ieee754 hexpat http-enumerator maccatcher mtl network
         parsec time uuid
       ];
       description = "Client library for metaverse systems like Second Life";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mwc-random" = callPackage
    ({ mkDerivation, HUnit, primitive, QuickCheck, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time, vector
     }:
     mkDerivation {
       pname = "mwc-random";
       version = "0.13.2.2";
       sha256 = "1rsrvadaih66xn8zr8kfvrr65g7wpj6i9jnzkmlik9lqrvz4axcp";
       buildDepends = [ primitive time vector ];
       testDepends = [
         HUnit QuickCheck statistics test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/bos/mwc-random";
       description = "Fast, high quality pseudo random number generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mwc-random-monad" = callPackage
    ({ mkDerivation, monad-primitive, mwc-random, primitive
     , transformers, vector
     }:
     mkDerivation {
       pname = "mwc-random-monad";
       version = "0.7.1.0";
       sha256 = "1nx6zrpwsf7606sx9qa843djxr655kv7l9y8sb7b2l62jxk4nrqi";
       buildDepends = [
         monad-primitive mwc-random primitive transformers vector
       ];
       description = "Monadic interface for mwc-random";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mybitcoin-sci" = callPackage
    ({ mkDerivation, cgi, curl, mtl, split }:
     mkDerivation {
       pname = "mybitcoin-sci";
       version = "0.3";
       sha256 = "1iy84z13i98wbkman7yp2y2821yzf3xxpcy10rh9bdskjijvgjnq";
       buildDepends = [ cgi curl mtl split ];
       description = "Binding to mybitcoin.com's Shopping Cart Interface.";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "mysnapsession" = callPackage
    ({ mkDerivation, cereal, clientsession, mtl, random, regex-posix
     , snap, snap-core, time
     }:
     mkDerivation {
       pname = "mysnapsession";
       version = "0.4.1";
       sha256 = "0871nq9nhpslni5kfldwiswhvpk1aajj7ikyiy9ikmcq16fb1z9m";
       buildDepends = [
         cereal clientsession mtl random regex-posix snap snap-core time
       ];
       description = "Sessions and continuations for Snap web apps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mysnapsession-example" = callPackage
    ({ mkDerivation, clientsession, heist, mtl, mysnapsession, snap
     , snap-core, snap-server, text, time
     }:
     mkDerivation {
       pname = "mysnapsession-example";
       version = "0.4";
       sha256 = "0lxzn8fn97f1j3fx97f46m16y25w7m1w84l59r75xisr662gc9lz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         clientsession heist mtl mysnapsession snap snap-core snap-server
         text time
       ];
       description = "Example projects using mysnapsession";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mysql" = callPackage
    ({ mkDerivation, mysqlConfig, zlib }:
     mkDerivation {
       pname = "mysql";
       version = "0.1.1.7";
       sha256 = "0hl8z8ynadvvhn4garjrax2b59iqddj884mv3s6804lcjjyc49d0";
       buildTools = [ mysqlConfig ];
       extraLibraries = [ zlib ];
       homepage = "https://github.com/bos/mysql";
       description = "A low-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) zlib; };

  "mysql-effect" = callPackage
    ({ mkDerivation, extensible-effects, mysql, mysql-simple }:
     mkDerivation {
       pname = "mysql-effect";
       version = "0.2.0.3";
       sha256 = "11fpsh4w2zlqdqhk5snb276pcbx4p9g1igs94fympa9asfr2rxm3";
       buildDepends = [ extensible-effects mysql mysql-simple ];
       homepage = "https://github.com/ibotty/mysql-effect";
       description = "An extensible mysql effect using extensible-effects and mysql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};

  "mysql-simple" = callPackage
    ({ mkDerivation, attoparsec, base16-bytestring, blaze-builder
     , blaze-textual, mysql, pcre-light, text, time
     }:
     mkDerivation {
       pname = "mysql-simple";
       version = "0.2.2.4";
       sha256 = "044grjly1gyrgba2bfrii2pa14ff7v14ncyk3kj01g1zdxnwqjh6";
       buildDepends = [
         attoparsec base16-bytestring blaze-builder blaze-textual mysql
         pcre-light text time
       ];
       homepage = "https://github.com/bos/mysql-simple";
       description = "A mid-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mysql-simple-quasi" = callPackage
    ({ mkDerivation, haskell-src-meta, mysql-simple }:
     mkDerivation {
       pname = "mysql-simple-quasi";
       version = "1.0.0.2";
       sha256 = "1ggqqjn83rx23qk7lzrcgj1arjhmhi85xfl7d2pz27rrjx2ywpn8";
       buildDepends = [ haskell-src-meta mysql-simple ];
       description = "Quasi-quoter for use with mysql-simple";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "mzv" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "mzv";
       version = "0.1.0.2";
       sha256 = "044x87jzyqsg5npp3s0mncgcl0gv26h6hzhc7bbgjja95x16ma2l";
       buildDepends = [ transformers ];
       homepage = "http://github.com/ifigueroap/mzv";
       description = "Implementation of the \"Monads, Zippers and Views\" (Schrijvers and Oliveira, ICFP'11)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "n-m" = callPackage
    ({ mkDerivation, HSH, mtl }:
     mkDerivation {
       pname = "n-m";
       version = "0.0.1";
       sha256 = "189ybl8fb70cf24zhnjcmgrgkshrf2ziacklg9ixgvnbdp3abb7m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HSH mtl ];
       description = "Utility to call iwconfig";
       license = "unknown";
     }) {};

  "nagios-check" = callPackage
    ({ mkDerivation, bifunctors, exceptions, hspec, mtl
     , nagios-perfdata, QuickCheck, text
     }:
     mkDerivation {
       pname = "nagios-check";
       version = "0.2.0";
       sha256 = "0phm3i0k99j26h793xcfszb7l8acf3q3my5z3msj3q5cvkxnixfd";
       buildDepends = [ bifunctors exceptions mtl nagios-perfdata text ];
       testDepends = [ hspec QuickCheck text ];
       homepage = "https://github.com/fractalcat/nagios-check";
       description = "Package for writing monitoring plugins";
       license = stdenv.lib.licenses.mit;
     }) {};

  "nagios-perfdata" = callPackage
    ({ mkDerivation, attoparsec, bifunctors, hspec, HUnit, MissingH
     , mtl, transformers
     }:
     mkDerivation {
       pname = "nagios-perfdata";
       version = "0.2.1";
       sha256 = "08s19c6mx5df9a7588pbjsvzgwnc43zbir2fwwqzarmrr7dh2jp3";
       buildDepends = [ attoparsec bifunctors mtl ];
       testDepends = [ hspec HUnit MissingH transformers ];
       homepage = "https://github.com/anchor/nagios-perfdata";
       description = "Parse Nagios performance data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "named-formlet" = callPackage
    ({ mkDerivation, blaze-html, mtl, text, transformers }:
     mkDerivation {
       pname = "named-formlet";
       version = "0.2";
       sha256 = "0wpjxn03cnxnn5x1706byl9d1129g9p1vkl1a1v9qw0afgzlj8y7";
       buildDepends = [ blaze-html mtl text transformers ];
       description = "A simple formlet library with named formlets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "named-lock" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "named-lock";
       version = "0.1";
       sha256 = "1db12f2q395yk6pwz5gnb2q0kf4s868z8d1vvwa7vngnfc1h924i";
       homepage = "http://github.com/nominolo/named-lock";
       description = "A named lock that is created on demand";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "named-records" = callPackage
    ({ mkDerivation, binary, names }:
     mkDerivation {
       pname = "named-records";
       version = "0.5";
       sha256 = "0ykcmmnns63zjfd00kd9941c33l19n9c5b5xkin4n7r9v0qvirwr";
       buildDepends = [ binary names ];
       description = "Flexible records with named fields";
       license = stdenv.lib.licenses.mit;
     }) {};

  "names" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "names";
       version = "0.3.1";
       sha256 = "0sjjp90zfrkjavj8fqyscnvc9d72mkvv8f7ajd47jba92mhwzr5g";
       description = "Type level names";
       license = stdenv.lib.licenses.mit;
     }) {};

  "names-th" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "names-th";
       version = "0.1.0.0";
       sha256 = "05ghdjif8r0x8k2qqixh2wzzq356f80py1nfps6wim8g9sv1h5rc";
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Manipulate name strings for TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nano-cryptr" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nano-cryptr";
       version = "0.1.1.3";
       sha256 = "1pqwzl8l48c4q83jhjj11jd3kwwa0ail2c6kv3k38kig9yvj7ff8";
       homepage = "http://github.com/chowells79/nano-cryptr";
       description = "A threadsafe binding to glibc's crypt_r function";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nano-hmac" = callPackage
    ({ mkDerivation, openssl }:
     mkDerivation {
       pname = "nano-hmac";
       version = "0.2.0";
       sha256 = "0rrwa1c3mval1jm4siqyx1vk14ibifya62hni13cimcdafj35fnq";
       extraLibraries = [ openssl ];
       homepage = "http://www.jasani.org/search/label/nano-hmac";
       description = "Bindings to OpenSSL HMAC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nano-md5" = callPackage
    ({ mkDerivation, openssl }:
     mkDerivation {
       pname = "nano-md5";
       version = "0.1.2";
       sha256 = "18db3y76w0kv2m7h3lrqxcag4lc7519b2j80113g6hhm1wxkpabk";
       extraLibraries = [ openssl ];
       homepage = "http://code.haskell.org/~dons/code/nano-md5";
       description = "Efficient, ByteString bindings to OpenSSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nanoAgda" = callPackage
    ({ mkDerivation, BNFC-meta, cmdargs, mtl, parsec, transformers }:
     mkDerivation {
       pname = "nanoAgda";
       version = "1.0.0";
       sha256 = "034mwssj296xn7j123sqvfl9rv1bwnj1v5sw5l34481dk5zsi9sm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ BNFC-meta cmdargs mtl parsec transformers ];
       description = "A toy dependently-typed language";
       license = "unknown";
     }) {};

  "nanocurses" = callPackage
    ({ mkDerivation, curses }:
     mkDerivation {
       pname = "nanocurses";
       version = "1.5.2";
       sha256 = "04kgf3vvjdx6d1fmfzp0xy5x42zlg0ij59ayi1zhz8hkwsfn5g1m";
       extraLibraries = [ curses ];
       homepage = "http://www.cse.unsw.edu.au/~dons/hmp3.html";
       description = "Simple Curses binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nanomsg" = callPackage
    ({ mkDerivation, nanomsg }:
     mkDerivation {
       pname = "nanomsg";
       version = "0.1.1";
       sha256 = "06jb8s3jxjiz7r6dn8xx33xqd76f2r5q1mshsz41z4q0khf4wdp3";
       extraLibraries = [ nanomsg ];
       description = "nanomsg - scalability protocols library";
       license = stdenv.lib.licenses.publicDomain;
     }) { inherit (pkgs) nanomsg; };

  "nanomsg-haskell" = callPackage
    ({ mkDerivation, binary, nanomsg, QuickCheck, test-framework
     , test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "nanomsg-haskell";
       version = "0.2.2";
       sha256 = "1p4d0qdyqfg4qidcdcddjnyw4x2q8551ka6bsryz9b6dpj6kywch";
       buildDepends = [ binary ];
       testDepends = [
         binary QuickCheck test-framework test-framework-quickcheck2
         test-framework-th
       ];
       extraLibraries = [ nanomsg ];
       homepage = "https://github.com/ivarnymoen/nanomsg-haskell";
       description = "Bindings to the nanomsg library";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) nanomsg; };

  "nanoparsec" = callPackage
    ({ mkDerivation, ListLike }:
     mkDerivation {
       pname = "nanoparsec";
       version = "0.1.1";
       sha256 = "00ghdzkzshk24g7v42hq7zq0dxsq8vjpkslj41dxdnx0zizwbn3m";
       buildDepends = [ ListLike ];
       description = "An implementation of attoparsec-like parser around list-like";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nanospec" = callPackage
    ({ mkDerivation, hspec, silently }:
     mkDerivation {
       pname = "nanospec";
       version = "0.2.0";
       sha256 = "0g10l86cv33r58zxn2bprqlm80i7g86bwzhn9jqg9s81xc0aw2qv";
       testDepends = [ hspec silently ];
       description = "A lightweight implementation of a subset of Hspec's API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "narc" = callPackage
    ({ mkDerivation, HDBC, HUnit, mtl, QuickCheck, random }:
     mkDerivation {
       pname = "narc";
       version = "0.1.3";
       sha256 = "1ng1rzj1lf6h9g3pk8gsz05bnck72rp5j62iwn82vlcw8pyk0fsc";
       buildDepends = [ HDBC HUnit mtl QuickCheck random ];
       homepage = "http://ezrakilty.net/projects/narc";
       description = "Query SQL databases using Nested Relational Calculus embedded in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nat" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nat";
       version = "0.3";
       sha256 = "1v43c1dr72qn8mymnwcq6an8sqxjaxhac037k4gbv8z8bg18zmf5";
       description = "Lazy binary natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nats" = callPackage
    ({ mkDerivation, hashable }:
     mkDerivation {
       pname = "nats";
       version = "1";
       sha256 = "0r6s8l4s0yq3x2crrkv0b8zac13magfasr9v8hnq6rn1icsfhic0";
       buildDepends = [ hashable ];
       homepage = "http://github.com/ekmett/nats/";
       description = "Natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nats-queue" = callPackage
    ({ mkDerivation, aeson, async, dequeue, hspec, network, network-uri
     , random, text
     }:
     mkDerivation {
       pname = "nats-queue";
       version = "0.1.2.0";
       sha256 = "0gqgqf87dzja0yhfpazqbdpvia1jisarhnph9bxvb3mfl4is9sgf";
       buildDepends = [
         aeson async dequeue network network-uri random text
       ];
       testDepends = [
         aeson dequeue hspec network network-uri random text
       ];
       description = "Haskell API for NATS messaging system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "natural-number" = callPackage
    ({ mkDerivation, type-equality, type-level-natural-number
     , type-level-natural-number-induction
     }:
     mkDerivation {
       pname = "natural-number";
       version = "1.0";
       sha256 = "1n8qgjbi4c50pwynlya4bjxd6lpwj00257drqk04mlrr3nw3gp5x";
       buildDepends = [
         type-equality type-level-natural-number
         type-level-natural-number-induction
       ];
       description = "Natural numbers tagged with a type-level representation of the number";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "natural-numbers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "natural-numbers";
       version = "0.1.2.0";
       sha256 = "0cj9lnnlvry425bkixqv9fh5b9xhy7dmwcqsxprj6lamccvxspwn";
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/natural-numbers";
       description = "Natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "natural-sort" = callPackage
    ({ mkDerivation, parsec, text }:
     mkDerivation {
       pname = "natural-sort";
       version = "0.1.2";
       sha256 = "0l3bkbqzrlpdhzazqqlx71ah0m13ypa0981qvw3sn9q8d0sbfwkv";
       buildDepends = [ parsec text ];
       homepage = "https://john-millikin.com/software/natural-sort/";
       description = "User-friendly text collation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "naturalcomp" = callPackage
    ({ mkDerivation, text, utf8-string }:
     mkDerivation {
       pname = "naturalcomp";
       version = "0.0.3";
       sha256 = "1l594lkd3yb52lhh0raygvk3jlzwkcc2pmcqjmg02dmd6j6mw42x";
       buildDepends = [ text utf8-string ];
       homepage = "not yet available";
       description = "Natural-order string comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "naturals" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "naturals";
       version = "0.2.0.2";
       sha256 = "1ay291833dcah411zc3r4qjilaw8x13ljlnb5z40d1s7784djm16";
       homepage = "frigidcode.com";
       description = "Constructors and related functions for natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nbt" = callPackage
    ({ mkDerivation, cereal, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, zlib
     }:
     mkDerivation {
       pname = "nbt";
       version = "0.5.1";
       sha256 = "08184rn4mwxd2m2fnqvja23jpkzlkvb8d2vn8i4rqcil136wb6q0";
       buildDepends = [ cereal text ];
       testDepends = [
         cereal HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text zlib
       ];
       homepage = "https://github.com/acfoltzer/nbt";
       description = "A parser/serializer for Minecraft's Named Binary Tag (NBT) data format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nc-indicators" = callPackage
    ({ mkDerivation, attoparsec, gtk, hflags, lens, pipes, stm }:
     mkDerivation {
       pname = "nc-indicators";
       version = "0.3";
       sha256 = "0w5nddirsib9vz96dpan9bgdg1mag9gaz7w7ix51l44ls9r8yn3m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ attoparsec gtk hflags lens pipes stm ];
       homepage = "https://github.com/nilcons/nc-indicators";
       description = "CPU load and memory usage indicators for i3bar";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "ncurses" = callPackage
    ({ mkDerivation, c2hs, ncurses, text, transformers }:
     mkDerivation {
       pname = "ncurses";
       version = "0.2.11";
       sha256 = "08jr224i37jxrprka9c276sid6mw001m8r2krd6g8jscshwd5nzk";
       buildDepends = [ text transformers ];
       buildTools = [ c2hs ];
       extraLibraries = [ ncurses ];
       patchPhase = "find . -type f -exec sed -i -e 's|ncursesw/||' {} \\;";
       homepage = "https://john-millikin.com/software/haskell-ncurses/";
       description = "Modernised bindings to GNU ncurses";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) ncurses; };

  "neat" = callPackage
    ({ mkDerivation, filepath, parsec }:
     mkDerivation {
       pname = "neat";
       version = "0.1.0";
       sha256 = "0lh5clnlfkzd5d9zmm9r92wpzrp8g7x6ndml7wajr882s53dv6jk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath parsec ];
       homepage = "https://github.com/ajg/neat";
       description = "A Fast Retargetable Template Engine";
       license = stdenv.lib.licenses.mit;
     }) {};

  "neat-interpolation" = callPackage
    ({ mkDerivation, base-prelude, HTF, parsec }:
     mkDerivation {
       pname = "neat-interpolation";
       version = "0.2.2";
       sha256 = "0hjv33gpikfiwfhzna35bxiqh62d54776d3ahfb98dxfrjijl20c";
       buildDepends = [ base-prelude parsec ];
       testDepends = [ base-prelude HTF ];
       homepage = "https://github.com/nikita-volkov/neat-interpolation";
       description = "A quasiquoter for neat and simple multiline text interpolation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "needle" = callPackage
    ({ mkDerivation, haskell-src-meta, mtl, parsec, parsec-extra, text
     , vector
     }:
     mkDerivation {
       pname = "needle";
       version = "0.1.0.1";
       sha256 = "1p7hmja7mvdbd10jv7bzr5b9i18l9nghdcvvxpn9xvfm8ycz7yg2";
       buildDepends = [
         haskell-src-meta mtl parsec parsec-extra text vector
       ];
       homepage = "http://scrambledeggsontoast.github.io/2014/09/28/needle-announce/";
       description = "ASCII-fied arrow notation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "nehe-tuts" = callPackage
    ({ mkDerivation, cereal, GLFW-b, GLURaw, OpenGLRaw, random }:
     mkDerivation {
       pname = "nehe-tuts";
       version = "0.2.4";
       sha256 = "00zll88gk44l22lqxv47v4j5ipfapy5599ld8fcsvhk57nfcm2r0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cereal GLFW-b GLURaw OpenGLRaw random ];
       description = "Port of the NeHe OpenGL tutorials to Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "neil" = callPackage
    ({ mkDerivation, cmdargs, extra, filepath, GoogleChart, json, time
     }:
     mkDerivation {
       pname = "neil";
       version = "0.8";
       sha256 = "12p10s5im87am7y5dx5wr0dzbv8g80lnlazg59zx83vai42hl043";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs extra filepath GoogleChart json time ];
       homepage = "http://community.haskell.org/~ndm/";
       description = "General tools for Neil";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "neither" = callPackage
    ({ mkDerivation, failure, transformers }:
     mkDerivation {
       pname = "neither";
       version = "0.3.1.1";
       sha256 = "192l840yb1pprfjjq7ax5xaraagl1pbmsidkg1yibp6r4azd61yf";
       buildDepends = [ failure transformers ];
       homepage = "http://github.com/snoyberg/neither";
       description = "Provide versions of Either with good monad and applicative instances. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nemesis" = callPackage
    ({ mkDerivation, air, air-th, dlist, Glob, mtl, time }:
     mkDerivation {
       pname = "nemesis";
       version = "2014.5.19";
       sha256 = "1kj7w9rp8kimrbwwb1f1336ijdb99r2b6jwpmgxjp0q3sq07wmvc";
       buildDepends = [ air air-th dlist Glob mtl time ];
       homepage = "http://github.com/nfjinjing/nemesis";
       description = "a task management tool for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nemesis-titan" = callPackage
    ({ mkDerivation, air, air-th, filepath, hspec, HStringTemplate
     , nemesis, random, uuid
     }:
     mkDerivation {
       pname = "nemesis-titan";
       version = "2014.5.19";
       sha256 = "183m6wz52lrf5kfwxz11ad7v5zazv4gcf1c2rcylh2ys6zda4xmd";
       buildDepends = [
         air air-th filepath hspec HStringTemplate nemesis random uuid
       ];
       homepage = "http://github.com/nfjinjing/nemesis-titan";
       description = "A collection of Nemesis tasks to bootstrap a Haskell project with a focus on continuous integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nerf" = callPackage
    ({ mkDerivation, binary, cmdargs, crf-chain1, data-named, dawg
     , filepath, IntervalMap, monad-ox, mtl, network, polimorf, polysoup
     , sgd, tagsoup, temporary, text, text-binary, tokenize, vector
     }:
     mkDerivation {
       pname = "nerf";
       version = "0.5.3";
       sha256 = "18rkjgk2r6784mjbdd2lydv9yac252xvj18m78bbaplnac1504ak";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cmdargs crf-chain1 data-named dawg filepath IntervalMap
         monad-ox mtl network polimorf polysoup sgd tagsoup temporary text
         text-binary tokenize vector
       ];
       homepage = "https://github.com/kawu/nerf";
       description = "Nerf, the named entity recognition tool based on linear-chain CRFs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nested-sets" = callPackage
    ({ mkDerivation, hspec }:
     mkDerivation {
       pname = "nested-sets";
       version = "0.0.1.1";
       sha256 = "0a3ppsl6x9yh2pvx7fyir1khdg99wlx9d9zjflamv3gcck3d8p4i";
       testDepends = [ hspec ];
       description = "Nested set model implementation";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "net-concurrent" = callPackage
    ({ mkDerivation, hslogger, monad-loops, network }:
     mkDerivation {
       pname = "net-concurrent";
       version = "0.1.0";
       sha256 = "0ar5y38nqgh10y23yxjcz0vlvdj2hcp2b2kq0srmbh17iw8d8906";
       buildDepends = [ hslogger monad-loops network ];
       homepage = "http://phaul.hobby-site.org/node/4123";
       description = "Concurrent over the network execution library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netclock" = callPackage
    ({ mkDerivation, hosc, network }:
     mkDerivation {
       pname = "netclock";
       version = "0.6";
       sha256 = "0vskyczfhv9bszl2hnr6j9cvhkfampja5s41kh6i9wk8j9kpf9p8";
       buildDepends = [ hosc network ];
       homepage = "http://netclock.slab.org/";
       description = "Netclock protocol";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "netcore" = callPackage
    ({ mkDerivation, ansi-wl-pprint, bimap, binary, binary-strict, fgl
     , HList, hslogger, HUnit, mtl, multiset, network, parsec
     , QuickCheck, random, syb, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "netcore";
       version = "1.0.0";
       sha256 = "0biqhmfvszwmmnpgja6qk3k2s5ynx4l659zq9awrxr0637dc19a5";
       buildDepends = [
         ansi-wl-pprint bimap binary binary-strict fgl HList hslogger mtl
         multiset network parsec random syb
       ];
       testDepends = [
         ansi-wl-pprint bimap binary binary-strict fgl HList hslogger HUnit
         mtl multiset network parsec QuickCheck random syb test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
       ];
       homepage = "http://frenetic-lang.org";
       description = "The NetCore compiler and runtime system for OpenFlow networks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netlines" = callPackage
    ({ mkDerivation, contstuff, enumerator, HTF, random, text, time }:
     mkDerivation {
       pname = "netlines";
       version = "1.0.0";
       sha256 = "006ca49rhh09lz8did0sil2f0xp1ggk69d4dqb2kx12drijp1jgj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ contstuff enumerator HTF random text time ];
       description = "Enumerator tools for text-based network protocols";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netlink" = callPackage
    ({ mkDerivation, c2hs, cereal, monad-loops }:
     mkDerivation {
       pname = "netlink";
       version = "0.1";
       sha256 = "0w2iyxmmk53k8gg0i8g3339dkdlpjgj39ar0kmsrzhxa6nakclwn";
       buildDepends = [ cereal monad-loops ];
       buildTools = [ c2hs ];
       homepage = "http://netlink-hs.googlecode.com/";
       description = "Netlink communication for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netlist" = callPackage
    ({ mkDerivation, binary, syb }:
     mkDerivation {
       pname = "netlist";
       version = "0.3.1";
       sha256 = "0f3fwgpg0p3ajgxfzbqr4z04ly5cdbhjxms5xbd0k2ixdwgyxm67";
       buildDepends = [ binary syb ];
       description = "Netlist AST";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netlist-to-vhdl" = callPackage
    ({ mkDerivation, netlist }:
     mkDerivation {
       pname = "netlist-to-vhdl";
       version = "0.3.1";
       sha256 = "15daik7l0pjqilya01l5rl84g2fyjwkap1md0nx82gxcp8m1v76k";
       buildDepends = [ netlist ];
       description = "Convert a Netlist AST to VHDL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netpbm" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-binary, hspec, HUnit
     , storable-record, unordered-containers, vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "netpbm";
       version = "1.0.1";
       sha256 = "02gj7m7gmislrkpk0mn5qb66z77zqy2k3py5c965bcjm086pk3fc";
       buildDepends = [
         attoparsec attoparsec-binary storable-record unordered-containers
         vector vector-th-unbox
       ];
       testDepends = [ hspec HUnit vector ];
       homepage = "https://github.com/nh2/haskell-netpbm";
       description = "Loading PBM, PGM, PPM image files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "netspec" = callPackage
    ({ mkDerivation, aeson, binary, mtl, network, text, transformers }:
     mkDerivation {
       pname = "netspec";
       version = "0.2.0.0";
       sha256 = "0qmca5pf6r0zam86a8wghs3ylsmvd4cxk9g3nlv2gc3vl3fb8caq";
       buildDepends = [ aeson binary mtl network text transformers ];
       homepage = "http://github.com/DanBurton/netspec";
       description = "Simplify static Networking tasks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netstring-enumerator" = callPackage
    ({ mkDerivation, enumerator, transformers }:
     mkDerivation {
       pname = "netstring-enumerator";
       version = "0.1.1";
       sha256 = "1n1g8d8507i0k4i93wb4i6yh7j7l3r0d9dfgxwl02hsk1svk5hkm";
       buildDepends = [ enumerator transformers ];
       homepage = "https://john-millikin.com/software/netstring-enumerator/";
       description = "Enumerator-based netstring parsing";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "nettle" = callPackage
    ({ mkDerivation, byteable, crypto-cipher-tests, crypto-cipher-types
     , HUnit, nettle, QuickCheck, securemem, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "nettle";
       version = "0.1.0";
       sha256 = "1ms96laa9d2ns39ymw6mlwm0mj03vss7855cs9npymhb4fmqkcas";
       buildDepends = [ byteable crypto-cipher-types securemem tagged ];
       testDepends = [
         crypto-cipher-tests crypto-cipher-types HUnit QuickCheck tagged
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       pkgconfigDepends = [ nettle ];
       homepage = "https://github.com/stbuehler/haskell-nettle";
       description = "safe nettle binding";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) nettle; };

  "nettle-frp" = callPackage
    ({ mkDerivation, bimap, binary, mtl, nettle-openflow, network
     , network-data, random, time
     }:
     mkDerivation {
       pname = "nettle-frp";
       version = "0.1.1";
       sha256 = "0jkb9a3vci91gx1rj81jbanhf0xw7n4xk69a5nhy7b55vclv8lcr";
       buildDepends = [
         bimap binary mtl nettle-openflow network network-data random time
       ];
       description = "FRP for controlling networks of OpenFlow switches";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nettle-netkit" = callPackage
    ({ mkDerivation, filepath, mtl, nettle-openflow }:
     mkDerivation {
       pname = "nettle-netkit";
       version = "0.2.0";
       sha256 = "152i4mdmqfrbvzq4nfzl8vy2n3jczbn18wd2mjxng1130l86cylp";
       buildDepends = [ filepath mtl nettle-openflow ];
       description = "DSL for describing OpenFlow networks, and a compiler generating NetKit labs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nettle-openflow" = callPackage
    ({ mkDerivation, bimap, binary, binary-strict, HList, mtl, network
     , parsec, syb
     }:
     mkDerivation {
       pname = "nettle-openflow";
       version = "0.2.0";
       sha256 = "1jc9dpsz8s6ivmkmddxy7i8kyiqf93x8rhnxly357nxlgmsn5dgk";
       buildDepends = [
         bimap binary binary-strict HList mtl network parsec syb
       ];
       description = "OpenFlow protocol messages, binary formats, and servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netwire" = callPackage
    ({ mkDerivation, deepseq, parallel, random, semigroups, time
     , transformers
     }:
     mkDerivation {
       pname = "netwire";
       version = "5.0.0";
       sha256 = "1wxrckc8i86xiiyk8msa6qrhfjx4h34ry1nxh9rdcd5cy03kalks";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         deepseq parallel random semigroups time transformers
       ];
       description = "Functional reactive programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "netwire-input" = callPackage
    ({ mkDerivation, netwire }:
     mkDerivation {
       pname = "netwire-input";
       version = "0.0.3";
       sha256 = "0c6wi1gfr0pxm8hav6ziic444a83cns3yf07kdylxbymgzgq7n7z";
       buildDepends = [ netwire ];
       homepage = "https://www.github.com/Mokosha/netwire-input";
       description = "Input handling abstractions for netwire";
       license = stdenv.lib.licenses.mit;
     }) {};

  "netwire-input-glfw" = callPackage
    ({ mkDerivation, GLFW-b, mtl, netwire-input, stm }:
     mkDerivation {
       pname = "netwire-input-glfw";
       version = "0.0.2";
       sha256 = "17rm2z931bvylcw3p9x2dkppyrqi6qgfyb03cdwr5iyasq5cjjvx";
       buildDepends = [ GLFW-b mtl netwire-input stm ];
       homepage = "https://www.github.com/Mokosha/netwire-input-glfw";
       description = "GLFW instance of netwire-input";
       license = stdenv.lib.licenses.mit;
     }) {};

  "network" = callPackage
    ({ mkDerivation, HUnit, test-framework, test-framework-hunit }:
     mkDerivation {
       pname = "network";
       version = "2.6.0.2";
       sha256 = "12b7saam5ga6l4cplgkad49xa4vkynz2ri9jxidx1cxiqjcl0vc4";
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "https://github.com/haskell/network";
       description = "Low-level networking interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-address" = callPackage
    ({ mkDerivation, Cabal, criterion, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "network-address";
       version = "0.2.0";
       sha256 = "0pz6x11naxzby14jxrm31j2jdd6gwqspbrx1hv5204rbf7lifib1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal criterion ];
       testDepends = [
         Cabal QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/sebnow/haskell-network-address";
       description = "IP data structures and textual representation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "network-api-support" = callPackage
    ({ mkDerivation, aeson, attoparsec, case-insensitive, http-client
     , http-client-tls, http-types, text, time, tls
     }:
     mkDerivation {
       pname = "network-api-support";
       version = "0.1.0";
       sha256 = "11x9f1cbakwaqxs995vk9ardbf1h7zdg39n7nykhrr387biyq653";
       buildDepends = [
         aeson attoparsec case-insensitive http-client http-client-tls
         http-types text time tls
       ];
       homepage = "https://github.com/apiengine/network-api-support";
       description = "Toolkit for building http client libraries over Network.Http.Conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-bitcoin" = callPackage
    ({ mkDerivation, aeson, attoparsec, HTTP, network, QuickCheck, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "network-bitcoin";
       version = "1.6.0";
       sha256 = "0d0gdhsbcmg69xkdap27a7nblh850j64s8p8j9j0zd4h0swqjfxj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec HTTP network QuickCheck text time
         unordered-containers vector
       ];
       homepage = "http://github.com/mndrix/network-bitcoin";
       description = "An interface to bitcoind";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-bytestring" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "network-bytestring";
       version = "0.1.3.4";
       sha256 = "19m10mj9nqsa7s0syv9dyhqkhvmf2h7yna8n7bq0xkdp8m9l0g96";
       buildDepends = [ network ];
       homepage = "http://github.com/tibbe/network-bytestring";
       description = "Fast, memory-efficient, low-level networking";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-carbon" = callPackage
    ({ mkDerivation, network, text, time, vector }:
     mkDerivation {
       pname = "network-carbon";
       version = "1.0.2";
       sha256 = "0r9riydwvmn8v9iih475agl4idb3z6v3djmn3pjlda28g3p0zw9h";
       buildDepends = [ network text time vector ];
       homepage = "http://github.com/ocharles/network-carbon";
       description = "A Haskell implementation of the Carbon protocol (part of the Graphite monitoring tools)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-conduit" = callPackage
    ({ mkDerivation, conduit }:
     mkDerivation {
       pname = "network-conduit";
       version = "1.1.0";
       sha256 = "06amxl8rg4zfnmgc1iyq5mxy9qihcqddqgqkbfvaf25mwr43992p";
       buildDepends = [ conduit ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Stream socket data using conduits. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-conduit-tls" = callPackage
    ({ mkDerivation, conduit, conduit-extra, connection, cprng-aes
     , data-default, HUnit, monad-control, mtl, network
     , streaming-commons, system-fileio, system-filepath, tls
     , transformers
     }:
     mkDerivation {
       pname = "network-conduit-tls";
       version = "1.1.0.2";
       sha256 = "1jgv2g3fsfp0rym4g0d9w5hm5ws0sfisj07hcfk2711rm107zaax";
       buildDepends = [
         conduit conduit-extra connection cprng-aes data-default
         monad-control network streaming-commons system-fileio
         system-filepath tls transformers
       ];
       testDepends = [ conduit conduit-extra connection HUnit mtl ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Create TLS-aware network code with conduits";
       license = stdenv.lib.licenses.mit;
     }) {};

  "network-connection" = callPackage
    ({ mkDerivation, network, network-bytestring, stm }:
     mkDerivation {
       pname = "network-connection";
       version = "0.1.1";
       sha256 = "0v3dwq5vxmgknsiq2nddfj3gvvvaxdlfsnk0bxrqw9zzzdkpi0q1";
       buildDepends = [ network network-bytestring stm ];
       homepage = "http://darcs.imperialviolet.org/network-connection";
       description = "A wrapper around a generic stream-like connection";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-data" = callPackage
    ({ mkDerivation, cereal, prettyclass }:
     mkDerivation {
       pname = "network-data";
       version = "0.5.2";
       sha256 = "0vbmg1m4qylzbmj3z5746srfkiwvh32qi9zyc39gc87bfw2gzn8s";
       buildDepends = [ cereal prettyclass ];
       description = "Library for network data structures and their serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-dbus" = callPackage
    ({ mkDerivation, binary, mtl, network, parsec, utf8-string }:
     mkDerivation {
       pname = "network-dbus";
       version = "0.0";
       sha256 = "024h0gfgn7hmfh90y74nf03kpvj5mg74a54lgb6clvxxfp8j64w9";
       buildDepends = [ binary mtl network parsec utf8-string ];
       description = "D-Bus";
       license = "unknown";
     }) {};

  "network-dns" = callPackage
    ({ mkDerivation, binary, cereal, data-textual, hashable, network-ip
     , parsers, tagged, text-latin1, text-printer
     }:
     mkDerivation {
       pname = "network-dns";
       version = "1.0.0.1";
       sha256 = "0gg1g1gnbi6dzw5anz3dam2gh09q948d3k7q84agkswa64c0azn8";
       buildDepends = [
         binary cereal data-textual hashable network-ip parsers tagged
         text-latin1 text-printer
       ];
       homepage = "https://github.com/mvv/network-dns";
       description = "Domain Name System data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-enumerator" = callPackage
    ({ mkDerivation, enumerator, network, transformers }:
     mkDerivation {
       pname = "network-enumerator";
       version = "0.1.5";
       sha256 = "11hwgdw03a39k3akjy5qlg9zsb7z8qiikvdmcqr2dhj6ykmfwsvk";
       buildDepends = [ enumerator network transformers ];
       homepage = "https://john-millikin.com/software/network-enumerator/";
       description = "Enumerators for network sockets";
       license = stdenv.lib.licenses.mit;
     }) {};

  "network-fancy" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "network-fancy";
       version = "0.2.2";
       sha256 = "12q2ifjwg4ss5l2pv42nfhsawncbwm6y4dwrspadkjv9b8idl91j";
       homepage = "http://github.com/taruti/network-fancy";
       description = "Networking support with a cleaner API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-house" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "network-house";
       version = "0.1.0.1";
       sha256 = "0s9ysp28nd29q2g62w7ch5h7l2kxdjfqqbz4h70vg8py3zs5gfqn";
       buildDepends = [ mtl ];
       homepage = "https://github.com/nh2/network-house";
       description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "network-info" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "network-info";
       version = "0.2.0.5";
       sha256 = "0ggxnkjkbspynma0wjrc1wwwb9ygx2dhl0n9lfaq7l8r69z7pqwf";
       homepage = "http://github.com/jystic/network-info";
       description = "Access the local computer's basic network configuration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-interfacerequest" = callPackage
    ({ mkDerivation, ioctl, network }:
     mkDerivation {
       pname = "network-interfacerequest";
       version = "0.0.1";
       sha256 = "0qa5rbbcw9axg7mj4kjj027hfsclnw85cj8nmi6jvrzq2yhhk56c";
       buildDepends = [ ioctl network ];
       description = "Haskell bindings for the ifreq structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-ip" = callPackage
    ({ mkDerivation, binary, cereal, data-default-class, data-dword
     , data-endian, data-textual, hashable, parsers, tasty
     , tasty-quickcheck, text-printer, type-hint
     }:
     mkDerivation {
       pname = "network-ip";
       version = "0.2.1.1";
       sha256 = "0abc07pi39drsldhk4znlq1j6cv0vxm7y8yyg2z4qanb3sy990iy";
       buildDepends = [
         binary cereal data-default-class data-dword data-endian
         data-textual hashable parsers text-printer type-hint
       ];
       testDepends = [
         data-dword data-textual parsers tasty tasty-quickcheck text-printer
       ];
       homepage = "https://github.com/mvv/network-ip";
       description = "Internet Protocol data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-metrics" = callPackage
    ({ mkDerivation, binary, data-default, network, random, time }:
     mkDerivation {
       pname = "network-metrics";
       version = "0.4";
       sha256 = "0dvrjf84pdm42pxwc7fm4gvswc5nzmdsq7cr7ab8jyzvjqb8684c";
       buildDepends = [ binary data-default network random time ];
       homepage = "http://github.com/brendanhay/network-metrics";
       description = "Send metrics to Ganglia, Graphite, and statsd";
       license = "unknown";
     }) {};

  "network-minihttp" = callPackage
    ({ mkDerivation, binary, binary-strict, filepath, HsOpenSSL, mtl
     , network, network-bytestring, network-connection, network-dns, stm
     , tagsoup, time
     }:
     mkDerivation {
       pname = "network-minihttp";
       version = "0.2";
       sha256 = "104jfksb0xagd8am3h390avqqr3k7qgxcd0znppz4hr0p9d681f5";
       buildDepends = [
         binary binary-strict filepath HsOpenSSL mtl network
         network-bytestring network-connection network-dns stm tagsoup time
       ];
       homepage = "http://darcs.imperialviolet.org/network-minihttp";
       description = "A ByteString based library for writing HTTP(S) servers and clients";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-msg" = callPackage
    ({ mkDerivation, binary, network }:
     mkDerivation {
       pname = "network-msg";
       version = "0.4";
       sha256 = "13dn06rgw8ygw1iikadf0m7bh7kvdx0s90iachip7kg50nq90waw";
       buildDepends = [ binary network ];
       description = "Recvmsg and sendmsg bindings";
       license = "unknown";
     }) {};

  "network-multicast" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "network-multicast";
       version = "0.0.11";
       sha256 = "0fgscv9crk2lx99rh234ipgl5psbrjili95inxj23drvwmsj3135";
       buildDepends = [ network ];
       description = "Simple multicast library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "network-netpacket" = callPackage
    ({ mkDerivation, foreign-storable-asymmetric, ioctl, network
     , network-interfacerequest
     }:
     mkDerivation {
       pname = "network-netpacket";
       version = "0.0.1";
       sha256 = "12q3bqy57lj46m3l44zdk3sqkhbnqfd5cjp3qy1m5m5wxfdnmx56";
       buildDepends = [
         foreign-storable-asymmetric ioctl network network-interfacerequest
       ];
       description = "Haskell bindings for low-level packet sockets (AF_PACKET)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-pgi" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, enumerator
     , tnet
     }:
     mkDerivation {
       pname = "network-pgi";
       version = "0.0.1";
       sha256 = "0s0rk3q1nlic2ibcpr0px0kb8gwp2hbnra5109l71q3dr713n2yw";
       buildDepends = [
         attoparsec attoparsec-enumerator enumerator tnet
       ];
       description = "Library for writing PGI applications";
       license = "unknown";
     }) {};

  "network-protocol-xmpp" = callPackage
    ({ mkDerivation, gnuidn, gnutls, gsasl, libxml-sax, monads-tf
     , network, text, transformers, xml-types
     }:
     mkDerivation {
       pname = "network-protocol-xmpp";
       version = "0.4.6";
       sha256 = "0xmafjz11v2dlbyg2ny90ycz315s23yprdpxz3l06igjxw6h3v6n";
       buildDepends = [
         gnuidn gnutls gsasl libxml-sax monads-tf network text transformers
         xml-types
       ];
       homepage = "https://john-millikin.com/software/haskell-xmpp/";
       description = "Client library for the XMPP protocol";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "network-rpca" = callPackage
    ({ mkDerivation, binary, binary-strict, codec-libevent
     , control-timeout, network, network-bytestring, stm
     }:
     mkDerivation {
       pname = "network-rpca";
       version = "0.0.1";
       sha256 = "1dhy4n0502rx66pansmgmjv8avwwbhvf23afhb98zqksqlkavdir";
       buildDepends = [
         binary binary-strict codec-libevent control-timeout network
         network-bytestring stm
       ];
       description = "A cross-platform RPC library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-server" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "network-server";
       version = "0.2.0";
       sha256 = "0iijgw07b5g3rcd4va98pb4hdkk912c67y2d1lkz03bfyq75b6xk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network ];
       description = "A light abstraction over sockets & co. for servers";
       license = "GPL";
     }) {};

  "network-service" = callPackage
    ({ mkDerivation, base64-bytestring, network, network-simple }:
     mkDerivation {
       pname = "network-service";
       version = "0.1.0.0";
       sha256 = "1js0p0i27fj8rjnq54pcq97bgvhdx7jpwj1ghqmdwpvhn8ds07p4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ base64-bytestring network network-simple ];
       homepage = "https://github.com/angerman/network-service";
       description = "Provide a service at the data type level";
       license = stdenv.lib.licenses.mit;
     }) {};

  "network-simple" = callPackage
    ({ mkDerivation, exceptions, network, transformers }:
     mkDerivation {
       pname = "network-simple";
       version = "0.4.0.2";
       sha256 = "0k155m1s7k157rpsz8ww9cs7jyw3faybwfmw97agvskhb4axw6hf";
       buildDepends = [ exceptions network transformers ];
       homepage = "https://github.com/k0001/network-simple";
       description = "Simple network sockets usage patterns";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-simple-sockaddr" = callPackage
    ({ mkDerivation, exceptions, network, transformers }:
     mkDerivation {
       pname = "network-simple-sockaddr";
       version = "0.1";
       sha256 = "0k54scgxwgj57vqpfshr0cr6a70nsfhrfvfjh77x17imk1795npw";
       buildDepends = [ exceptions network transformers ];
       homepage = "https://github.com/jdnavarro/network-simple-sockaddr";
       description = "network-simple for resolved addresses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-simple-tls" = callPackage
    ({ mkDerivation, certificate, cprng-aes, exceptions, network
     , network-simple, tls, tls-extra, transformers
     }:
     mkDerivation {
       pname = "network-simple-tls";
       version = "0.2.1";
       sha256 = "0hbpxbs357bxifksbqrlrdkwkkfaydxcf9wdla6kafaymhrxhc0k";
       buildDepends = [
         certificate cprng-aes exceptions network network-simple tls
         tls-extra transformers
       ];
       homepage = "https://github.com/k0001/network-simple-tls";
       description = "Simple interface to TLS secured network sockets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-socket-options" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "network-socket-options";
       version = "0.2.0.1";
       sha256 = "00qf22nwzsv8229gb7yqaaafiz573xl4v78mn1zf9ajvwzvwb63r";
       buildDepends = [ network ];
       homepage = "https://github.com/joeyadams/haskell-network-socket-options";
       description = "Type-safe, portable alternative to getSocketOption/setSocketOption";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-stream" = callPackage
    ({ mkDerivation, binary, cereal, enumerator, network, stm, text
     , transformers
     }:
     mkDerivation {
       pname = "network-stream";
       version = "0.1.0";
       sha256 = "1y7c2m8yrkb67iqqv6sjbxxmhlnv0s6k82lv9f6wk4mhckcsc5n1";
       buildDepends = [
         binary cereal enumerator network stm text transformers
       ];
       description = "ByteString and Text streams for networking";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "network-topic-models" = callPackage
    ({ mkDerivation, bayes-stack, bimap, cereal, deepseq, filepath
     , logfloat, mwc-random, optparse-applicative, random-fu, statistics
     , stm, text, transformers, vector
     }:
     mkDerivation {
       pname = "network-topic-models";
       version = "0.2.0.1";
       sha256 = "1l5m9f08aizrxxkv2dspv8swf558cch6vx4gyzs6qs6826v9q32b";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bayes-stack bimap cereal deepseq filepath logfloat mwc-random
         optparse-applicative random-fu statistics stm text transformers
         vector
       ];
       homepage = "https://github.com/bgamari/bayes-stack";
       description = "A few network topic model implementations for bayes-stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-transport" = callPackage
    ({ mkDerivation, binary, hashable, transformers }:
     mkDerivation {
       pname = "network-transport";
       version = "0.4.1.0";
       sha256 = "0xn879ngrbnm71i1wsbxxiih22sdb6csy6aip6fgqyafqlpc1c93";
       buildDepends = [ binary hashable transformers ];
       homepage = "http://haskell-distributed.github.com";
       description = "Network abstraction layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-transport-tcp" = callPackage
    ({ mkDerivation, data-accessor, network, network-transport
     , network-transport-tests
     }:
     mkDerivation {
       pname = "network-transport-tcp";
       version = "0.4.1";
       sha256 = "11fj0f2yrvdqn3sivfb4p0chs74bx26a0yc49fh160kkcmk42yaf";
       buildDepends = [ data-accessor network network-transport ];
       testDepends = [
         network network-transport network-transport-tests
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "TCP instantiation of Network.Transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-transport-tests" = callPackage
    ({ mkDerivation, ansi-terminal, mtl, network-transport, random }:
     mkDerivation {
       pname = "network-transport-tests";
       version = "0.2.1.0";
       sha256 = "17qf52a76an9ignhb85alz92j9vk3p0ydmaqys8b1ss5mkqipm64";
       buildDepends = [ ansi-terminal mtl network-transport random ];
       homepage = "http://haskell-distributed.github.com";
       description = "Unit tests for Network.Transport implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-transport-zeromq" = callPackage
    ({ mkDerivation, async, binary, exceptions, network-transport
     , network-transport-tests, random, semigroups, stm, stm-chans
     , tasty, tasty-hunit, transformers, void, zeromq4-haskell
     }:
     mkDerivation {
       pname = "network-transport-zeromq";
       version = "0.2";
       sha256 = "11ynb69y1zr4fhpja2wdf0h4yibhkjyfm499mlwjcrcn06wsz1wq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async binary exceptions network-transport random semigroups stm
         stm-chans transformers void zeromq4-haskell
       ];
       testDepends = [
         network-transport network-transport-tests tasty tasty-hunit
         zeromq4-haskell
       ];
       description = "ZeroMQ backend for network-transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-uri" = callPackage
    ({ mkDerivation, HUnit, network, parsec, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "network-uri";
       version = "2.6.0.1";
       sha256 = "09ymamb128jgqghpda4nixncr73all8qc6q53976aricm6a27p37";
       buildDepends = [ parsec ];
       testDepends = [
         HUnit network test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell/network-uri";
       description = "URI manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "network-wai-router" = callPackage
    ({ mkDerivation, wai }:
     mkDerivation {
       pname = "network-wai-router";
       version = "0.3.0.1";
       sha256 = "1fnqc1vbahy6zy632s9kam8bv7108bhmynyh2iwkqb7ybkkj37i9";
       buildDepends = [ wai ];
       description = "A routing library for wai";
       license = stdenv.lib.licenses.mit;
     }) {};

  "network-websocket" = callPackage
    ({ mkDerivation, network, webserver }:
     mkDerivation {
       pname = "network-websocket";
       version = "0.3";
       sha256 = "053qrlm2bd14mlcvlh64awsqsgn355nkr13k9h4dnfabafymkkbm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network webserver ];
       homepage = "http://github.com/michaelmelanson/network-websocket";
       description = "WebSocket library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "networked-game" = callPackage
    ({ mkDerivation, binary, network, time, transformers }:
     mkDerivation {
       pname = "networked-game";
       version = "0.1.0.0";
       sha256 = "18wr12sd2lj6wp04l47x7b5sb85q2j3h5f6j6c082nlb6snxvqhh";
       buildDepends = [ binary network time transformers ];
       description = "Networked-game support library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "newports" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "newports";
       version = "1.1";
       sha256 = "1paxqr8rm8lbp0896qsd7v76c0kahkk6fngpcdzswbrqpyqhwjwc";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://www.b7j0c.org/content/haskell-newports.html";
       description = "List ports newer than N days on a FreeBSD system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "newsynth" = callPackage
    ({ mkDerivation, fixedprec, random, superdoc, time }:
     mkDerivation {
       pname = "newsynth";
       version = "0.2.0.1";
       sha256 = "0xijyxfy62pv7ydfckhai7sdd7rdxlh0vw5wr7ic3z68vc0h6cai";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ fixedprec random superdoc time ];
       homepage = "http://www.mathstat.dal.ca/~selinger/newsynth/";
       description = "Exact and approximate synthesis of quantum circuits";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "newt" = callPackage
    ({ mkDerivation, cmdargs, filemanip, filepath, HUnit, mtl
     , QuickCheck, safe, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, Unixutils, uuid
     }:
     mkDerivation {
       pname = "newt";
       version = "0.0.3.1";
       sha256 = "0amhpvqqy8pan3vihjvpkd25jz3m4syavw4l15cvqny8mhrxbvpj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs filemanip filepath HUnit mtl QuickCheck safe test-framework
         test-framework-hunit test-framework-quickcheck2 text Unixutils uuid
       ];
       description = "A trivially simple app to create things from simple templates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "newtype" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "newtype";
       version = "0.2";
       sha256 = "0ng4i5r73256gzwl6bw57h0abqixj783c3ggph1hk2wsplx0655p";
       description = "A typeclass and set of functions for working with newtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "newtype-generics" = callPackage
    ({ mkDerivation, hspec, HUnit }:
     mkDerivation {
       pname = "newtype-generics";
       version = "0.4.0.1";
       sha256 = "1xghpqmpwnjyk944m9nsfzk2jlyqwdvcr5zrmr66d4n650cf1m2b";
       testDepends = [ hspec HUnit ];
       description = "A typeclass and set of functions for working with newtypes, with generics support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "newtype-th" = callPackage
    ({ mkDerivation, haskell-src-meta, newtype, syb }:
     mkDerivation {
       pname = "newtype-th";
       version = "0.3.3";
       sha256 = "1slgphymjxzbxxgsilfijkhiwapfy2gkhkby2dxqj107v4s0788k";
       buildDepends = [ haskell-src-meta newtype syb ];
       homepage = "http://github.com/mgsloan/newtype-th";
       description = "A template haskell deriver to create Control.Newtype instances.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "newtyper" = callPackage
    ({ mkDerivation, Kleislify, newtype }:
     mkDerivation {
       pname = "newtyper";
       version = "0.1";
       sha256 = "1s1mzy1m3wpawv1ci85dl02105v550l1fdi5rxi5gqnxb0jrg4fs";
       buildDepends = [ Kleislify newtype ];
       homepage = "https://github.com/techtangents/Newtyper";
       description = "Extra functions for the Control.Newtype typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nextstep-plist" = callPackage
    ({ mkDerivation, parsec, QuickCheck }:
     mkDerivation {
       pname = "nextstep-plist";
       version = "0.0.1";
       sha256 = "0wld4nc6hcv642km60vvjyclsfwnpfavq59mqm8fm3a73al4csyw";
       buildDepends = [ parsec QuickCheck ];
       description = "NextStep style plist parser and printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ngrams-loader" = callPackage
    ({ mkDerivation, attoparsec, machines, mtl, parseargs, resourcet
     , sqlite-simple, text
     }:
     mkDerivation {
       pname = "ngrams-loader";
       version = "0.1.0.1";
       sha256 = "0z26mpk1q7hnx4vkcyfwy6pbm7nm76ydm04z3vk598q2ifq5vmpd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec machines mtl parseargs resourcet sqlite-simple text
       ];
       homepage = "http://github.com/YoEight/ngrams-loader";
       description = "Ngrams loader based on http://www.ngrams.info format";
       license = stdenv.lib.licenses.mit;
     }) {};

  "nibblestring" = callPackage
    ({ mkDerivation, base16-bytestring, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "nibblestring";
       version = "0.0.1";
       sha256 = "1nj72xsrdrzxfd7ffmjfsjd9g7ry8hhvg2596pw9qq8shrsmi3qy";
       buildDepends = [ base16-bytestring ];
       testDepends = [
         base16-bytestring HUnit test-framework test-framework-hunit
       ];
       description = "Packed, strict nibble arrays with a list interface (ByteString for nibbles)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nicify" = callPackage
    ({ mkDerivation, parsec, transformers }:
     mkDerivation {
       pname = "nicify";
       version = "1.1";
       sha256 = "0m6cbzd1hjgsb5vhhlcx9kvyn7v8bv3h0zll7wlcyp8yaccvik3k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec transformers ];
       description = "Pretty print the standard output of show for algebraic datatypes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "nikepub" = callPackage
    ({ mkDerivation, filepath, GoogleChart, haxr, hs-twitter
     , HStringTemplate, HTTP, hxt, json, network, regex-compat
     , regex-posix, syb, time
     }:
     mkDerivation {
       pname = "nikepub";
       version = "1.1.2";
       sha256 = "1w7cvkh36p7i9n62rvfh6nlr8z16hds06fbr1lpvbc84ymci75v0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath GoogleChart haxr hs-twitter HStringTemplate HTTP hxt json
         network regex-compat regex-posix syb time
       ];
       homepage = "http://www.codemanic.com/uwe";
       description = "Command line utility publishes Nike+ runs on blogs and Twitter";
       license = "LGPL";
     }) {};

  "nimber" = callPackage
    ({ mkDerivation, arithmoi }:
     mkDerivation {
       pname = "nimber";
       version = "0.1.3";
       sha256 = "0350fmddnfp09051i89fl5ibrxqy36cx5560l00cjssx2gs2dh8w";
       buildDepends = [ arithmoi ];
       homepage = "http://andersk.mit.edu/haskell/nimber/";
       description = "Finite nimber arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nitro" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nitro";
       version = "0.2.2.5";
       sha256 = "17aqzk1kq670fwawia0qjmd8ld1b0h8zh0w8j8x4y48hlzyb75xb";
       homepage = "http://haskell.gonitro.io";
       description = "Haskell bindings for Nitro";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nixos-types" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nixos-types";
       version = "1.5";
       sha256 = "1q38cs0747fyf94y35cq734yzmsdcyfmmk5w6qv563jns55qj36c";
       homepage = "http://hackage.haskell.org/package/cabal2nix";
       description = "this package is obsolete; see cabal2nix instead";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nkjp" = callPackage
    ({ mkDerivation, data-named, filepath, polysoup, tar, text, zlib }:
     mkDerivation {
       pname = "nkjp";
       version = "0.4.0";
       sha256 = "1i9q0xyfqi3cv29k8yflrg34hgblxfyj2dqr1zjg20jpymsfi06l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-named filepath polysoup tar text zlib ];
       homepage = "https://github.com/kawu/nkjp";
       description = "Manipulating the National Corpus of Polish (NKJP)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nlp-scores" = callPackage
    ({ mkDerivation, strict }:
     mkDerivation {
       pname = "nlp-scores";
       version = "0.6.2";
       sha256 = "0zknj60jh2pg5lih1hbmhbig7mhqz22pybxr6hvm562j17jysg4k";
       buildDepends = [ strict ];
       homepage = "https://bitbucket.org/gchrupala/lingo";
       description = "Scoring functions commonly used for evaluation in NLP and IR";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nlp-scores-scripts" = callPackage
    ({ mkDerivation, nlp-scores, split, text }:
     mkDerivation {
       pname = "nlp-scores-scripts";
       version = "0.2.0.0";
       sha256 = "02jisx8slzzljv77d931b169hxq6i6ajg5ly9a37g13q9h75gd2c";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ nlp-scores split text ];
       homepage = "https://bitbucket.org/gchrupala/lingo";
       description = "NLP scoring command-line programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nm" = callPackage
    ({ mkDerivation, g, glib, libnm-glib, nm-glib, vector }:
     mkDerivation {
       pname = "nm";
       version = "1.0.1";
       sha256 = "028p25pb2cqlvrydy87y26rinvypbq0lnphd59k3zaxvxxikqwf1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ vector ];
       extraLibraries = [ g nm-glib ];
       pkgconfigDepends = [ glib libnm-glib ];
       description = "Network Manager, binding to libnm-glib";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) glib; };

  "nme" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "nme";
       version = "0.2";
       sha256 = "14qzc4af1pm1myjdfs7z4b1jxxj0gz9c4cl9qgpm06hjzvjjf8wm";
       buildDepends = [ utf8-string ];
       homepage = "https://github.com/singpolyma/NME-Haskell";
       description = "Bindings to the Nyctergatis Markup Engine";
       license = "unknown";
     }) {};

  "nntp" = callPackage
    ({ mkDerivation, monad-loops, mtl, network, parsec, time }:
     mkDerivation {
       pname = "nntp";
       version = "0.0.4";
       sha256 = "1yg91zai4krxx7yqzskss19jjgh4nvc2vqzddvpwsdm07lri8g35";
       buildDepends = [ monad-loops mtl network parsec time ];
       description = "Library to connect to an NNTP Server";
       license = "LGPL";
     }) {};

  "no-role-annots" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "no-role-annots";
       version = "1.1";
       sha256 = "1kk9ii5w40di3azlqzbz4vkvwdz8apca0lh4jn94nvr3hns6l5s7";
       homepage = "https://github.com/goldfirere/no-role-annots";
       description = "Role annotations without -XRoleAnnotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "noise" = callPackage
    ({ mkDerivation, blaze-markup, blaze-svg, cryptohash, HTF, HUnit
     , network, parsec, QuickCheck, string-qq
     }:
     mkDerivation {
       pname = "noise";
       version = "0.0.1";
       sha256 = "0h9aq4f8n1acmzhdq185y0adl35cf7avms6zvgsyf9lkx2msja0q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-markup blaze-svg cryptohash network parsec
       ];
       testDepends = [ HTF HUnit parsec QuickCheck string-qq ];
       homepage = "http://github.com/brow/noise";
       description = "A friendly language for graphic design";
       license = stdenv.lib.licenses.mit;
     }) {};

  "non-empty" = callPackage
    ({ mkDerivation, QuickCheck, utility-ht }:
     mkDerivation {
       pname = "non-empty";
       version = "0.2";
       sha256 = "1wapx5q8spvlq8g7nagj2lwhrqzg90dw4n0qvd1ap47n0rh3iymm";
       buildDepends = [ QuickCheck utility-ht ];
       homepage = "http://code.haskell.org/~thielema/non-empty/";
       description = "List-like structures with static restrictions on the number of elements";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "non-negative" = callPackage
    ({ mkDerivation, QuickCheck, utility-ht }:
     mkDerivation {
       pname = "non-negative";
       version = "0.1.1";
       sha256 = "163g3j3xrx1jkrbg2wnha3yyxyg1mn7kabmbpg82y3rbl3ihy1p7";
       buildDepends = [ QuickCheck utility-ht ];
       testDepends = [ QuickCheck utility-ht ];
       homepage = "http://code.haskell.org/~thielema/non-negative/";
       description = "Non-negative numbers";
       license = "GPL";
     }) {};

  "nonce" = callPackage
    ({ mkDerivation, base64-bytestring, cprng-aes, crypto-random, text
     , transformers
     }:
     mkDerivation {
       pname = "nonce";
       version = "1.0.1";
       sha256 = "10vlm550m0hjl004rwcz70j1d89sd9g0fnxxxksvk8nxqf9fnfpr";
       buildDepends = [
         base64-bytestring cprng-aes crypto-random text transformers
       ];
       homepage = "https://github.com/prowdsponsor/nonce";
       description = "Generate cryptographic nonces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nondeterminism" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "nondeterminism";
       version = "1.0";
       sha256 = "0hxfqrm51svmr9lk1i8l5ib5bi5zlc92q6k3qwnvkqz8qgb4w8i0";
       buildDepends = [ mtl ];
       description = "A monad and monad transformer for nondeterministic computations";
       license = "LGPL";
     }) {};

  "nonfree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nonfree";
       version = "0.1.0.0";
       sha256 = "1cwxnkral8d33xgpjlqrv0d5q5c046siw9z56bhp53qpk40ihn81";
       description = "Free structures sans laws";
       license = stdenv.lib.licenses.mit;
     }) {};

  "nonlinear-optimization" = callPackage
    ({ mkDerivation, primitive, vector }:
     mkDerivation {
       pname = "nonlinear-optimization";
       version = "0.3.7";
       sha256 = "147dbq19n18ixfz6bhx9yi9ppr9j3wnc5dfz8kx5gwihy64b8l1b";
       buildDepends = [ primitive vector ];
       description = "Various iterative algorithms for optimization of nonlinear functions";
       license = "GPL";
     }) {};

  "nonlinear-optimization-ad" = callPackage
    ({ mkDerivation, ad, nonlinear-optimization, vector }:
     mkDerivation {
       pname = "nonlinear-optimization-ad";
       version = "0.1.0";
       sha256 = "1q34hkyqmnh0c07lws2vs65f81rja2nzzmizg43vclm94jlq24kj";
       buildDepends = [ ad nonlinear-optimization vector ];
       homepage = "https://github.com/msakai/nonlinear-optimization-ad";
       description = "Wrapper of nonlinear-optimization package for using with AD package";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "noodle" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "noodle";
       version = "0.0.19";
       sha256 = "08v5rz5skmaqxqj85l76kjxqmlhnf3vapgfdqd042cmh41zwznx0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath ];
       homepage = "https://github.com/jessopher/noodle";
       description = "the noodle programming language";
       license = "unknown";
     }) {};

  "normaldistribution" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "normaldistribution";
       version = "1.1.0.3";
       sha256 = "1q7p0bx435amqb7r9qksix0mrbpnqsyfb44chjyz6xkgjj0s6yvd";
       buildDepends = [ random ];
       homepage = "https://github.com/bjornbm/normaldistribution";
       description = "Minimum fuss normally distributed random values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "not-gloss" = callPackage
    ({ mkDerivation, GLUT, OpenGLRaw, spatial-math, time }:
     mkDerivation {
       pname = "not-gloss";
       version = "0.7.0.0";
       sha256 = "0mc0sddkcqbhvawq1zfvypa8n7fhvg8z385w7m9f4awyyaza6jd0";
       buildDepends = [ GLUT OpenGLRaw spatial-math time ];
       description = "Painless 3D graphics, no affiliation with gloss";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "not-gloss-examples" = callPackage
    ({ mkDerivation, GLUT, linear, not-gloss, spatial-math, X11 }:
     mkDerivation {
       pname = "not-gloss-examples";
       version = "0.5.0";
       sha256 = "0dszimvwb78ac1zfp25iy8lhnsq0grjs6zrsiyr1d80fj9kmg49y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT linear not-gloss spatial-math X11 ];
       description = "examples for not-gloss";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "not-in-base" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "not-in-base";
       version = "0.1.1";
       sha256 = "1mm1j0l3h8qxpk0bis4g1f6zp5407rkq2z5ldyr036frbvfwqaj5";
       homepage = "http://github.com/finnsson/not-in-base";
       description = "Useful utility functions that only depend on base";
       license = "unknown";
     }) {};

  "notcpp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "notcpp";
       version = "0.2.0.2";
       sha256 = "1qdqwwy16n43djgrynzn8xv64vv450my6z2xddypafxwhvp7jaqy";
       description = "Avoiding the C preprocessor via cunning use of Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "notmuch-haskell" = callPackage
    ({ mkDerivation, filepath, glib, gmime, notmuch, nsl, parseargs
     , talloc, time, xapian, zlib
     }:
     mkDerivation {
       pname = "notmuch-haskell";
       version = "0.2.2";
       sha256 = "1i86cwwvisgyc89nmd7drwszmq4cqrwgci9zqwh50zg9cgq5qhz5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath parseargs time ];
       extraLibraries = [ glib gmime notmuch nsl talloc xapian zlib ];
       description = "Binding for notmuch MUA library";
       license = "LGPL";
     }) { inherit (pkgs) glib zlib; };

  "notmuch-web" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-conduit
     , blaze-builder, blaze-html, blaze-markup, case-insensitive
     , conduit, data-default, email-validate, filepath, hamlet, hashable
     , hjsmin, hspec, http-conduit, http-types, HUnit, lifted-base
     , markdown, mime-mail, network, process-conduit, pwstore-fast
     , random, tagsoup, text, text-icu, time, transformers
     , unordered-containers, vector, wai, wai-extra, warp, xss-sanitize
     , yaml, yesod, yesod-auth, yesod-core, yesod-static, yesod-test
     }:
     mkDerivation {
       pname = "notmuch-web";
       version = "0.2.0";
       sha256 = "1jjk3fhzhpf9wrgk980rgp55kji5zjzdl0xyi4wgz3xvn1k8hrhs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec attoparsec-conduit blaze-builder blaze-html
         blaze-markup case-insensitive conduit data-default email-validate
         filepath hamlet hashable hjsmin http-conduit http-types lifted-base
         markdown mime-mail network process-conduit pwstore-fast random
         tagsoup text text-icu time transformers unordered-containers vector
         wai wai-extra warp xss-sanitize yaml yesod yesod-auth yesod-static
       ];
       testDepends = [
         hspec HUnit mime-mail text yesod yesod-core yesod-test
       ];
       homepage = "https://bitbucket.org/wuzzeb/notmuch-web";
       description = "A web interface to the notmuch email indexer";
       license = "GPL";
     }) {};

  "np-extras" = callPackage
    ({ mkDerivation, numeric-prelude, primes }:
     mkDerivation {
       pname = "np-extras";
       version = "0.3";
       sha256 = "14lphbssmcvabg1rqzhy4bwvssfyzb69b2g9n45vd22xnvf9q0il";
       buildDepends = [ numeric-prelude primes ];
       description = "NumericPrelude extras";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "np-linear" = callPackage
    ({ mkDerivation, binary, numeric-prelude, reflection, tagged }:
     mkDerivation {
       pname = "np-linear";
       version = "0.3.0.2";
       sha256 = "00rmm36is8i6k1a0xyri61v09asc54fanlp5nai7k7vhp0wyfzz1";
       buildDepends = [ binary numeric-prelude reflection tagged ];
       description = "Linear algebra for the numeric-prelude framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nptools" = callPackage
    ({ mkDerivation, ansi-terminal, colour, HSH, split, time }:
     mkDerivation {
       pname = "nptools";
       version = "0.6.0";
       sha256 = "1zipawfk8l98bszi1yviv7ph96x1z715d3nlzs3w2mzahir57h3d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ansi-terminal colour HSH split time ];
       description = "A collection of random tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nsis" = callPackage
    ({ mkDerivation, transformers, uniplate }:
     mkDerivation {
       pname = "nsis";
       version = "0.2.4";
       sha256 = "17jl5s48msa6c5rb9lvlcsjmv6kzml3yrfmz7h1ipxsdl0yf7nd3";
       buildDepends = [ transformers uniplate ];
       testDepends = [ transformers uniplate ];
       homepage = "https://github.com/ndmitchell/nsis#readme";
       description = "DSL for producing Windows Installer using NSIS";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nthable" = callPackage
    ({ mkDerivation, type-level }:
     mkDerivation {
       pname = "nthable";
       version = "0.1";
       sha256 = "1qi1wq7wbnp3sv3c2v4185mnq80646vcsnqq16mqlshiy164wsly";
       buildDepends = [ type-level ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ntp-control" = callPackage
    ({ mkDerivation, bytestring-lexing, cereal, network, time }:
     mkDerivation {
       pname = "ntp-control";
       version = "0.1";
       sha256 = "14ns5lbvbdn0yrmfjp9rb4id19fxfd6dp68pgzm4lkh0xk0qnc4y";
       buildDepends = [ bytestring-lexing cereal network time ];
       testDepends = [ bytestring-lexing cereal network time ];
       description = "Client library for NTP control messaging";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "null-canvas" = callPackage
    ({ mkDerivation, aeson, filepath, scotty, split, stm, text
     , transformers, wai-extra, warp
     }:
     mkDerivation {
       pname = "null-canvas";
       version = "0.2.7";
       sha256 = "1i6krgxlbdmv5md1p3n5mcw3sk24f5sk6y7yiznx8glxncxmfdll";
       buildDepends = [
         aeson filepath scotty split stm text transformers wai-extra warp
       ];
       homepage = "https://github.com/Tener/null-canvas";
       description = "HTML5 Canvas Graphics Library - forked Blank Canvas";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numbering" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "numbering";
       version = "0.2.1";
       sha256 = "0hh4km2zbvs7rsb142f1rifqvwzajh0grgky2vyyyf48dk5plrlv";
       buildDepends = [ vector ];
       homepage = "https://github.com/DanielSchuessler/numbering";
       description = "Combinators for creating bijections from some type to the natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numbers" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "numbers";
       version = "3000.2.0.1";
       sha256 = "10z1bi5qbc81z5xx2v1ylwcpmcfl1ci7lxrswkgi0dd1wi8havbk";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/jwiegley/numbers#readme";
       description = "Various number types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numerals" = callPackage
    ({ mkDerivation, base-unicode-symbols, containers-unicode-symbols
     , fingertree, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "numerals";
       version = "0.4";
       sha256 = "1fkxlwf68bn353hs3622yqvlbndjnf263jbnh4q2rkj4xiirn4qm";
       buildDepends = [
         base-unicode-symbols containers-unicode-symbols fingertree text
       ];
       testDepends = [
         base-unicode-symbols HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/roelvandijk/numerals";
       description = "Convert numbers to number words";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numerals-base" = callPackage
    ({ mkDerivation, base-unicode-symbols, containers-unicode-symbols
     , fingertree, HUnit, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "numerals-base";
       version = "0.3";
       sha256 = "0qp9xhsqvs22siyfwjzffqc1kbpsanbxks3pbjfdcmbcwlq7hpg8";
       buildDepends = [
         base-unicode-symbols containers-unicode-symbols fingertree
       ];
       testDepends = [
         base-unicode-symbols containers-unicode-symbols fingertree HUnit
         test-framework test-framework-hunit
       ];
       homepage = "https://github.com/roelvandijk/numerals-base";
       description = "Convert numbers to number words";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numeric-extras" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "numeric-extras";
       version = "0.0.3";
       sha256 = "18jyjrk6iizz3sgkwgbh1rxf6zdf166bkgs7wia8b4z7f6261nzg";
       homepage = "http://github.com/ekmett/numeric-extras";
       description = "Useful tools from the C standard library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numeric-limits" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "numeric-limits";
       version = "0.1.0.0";
       sha256 = "0lsi0my45lpd30vjbwdbzhisz8r3lryvg1c80qcmwipnxklnr5cb";
       description = "Various floating point limit related constants";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numeric-prelude" = callPackage
    ({ mkDerivation, deepseq, non-negative, parsec, QuickCheck, random
     , storable-record, utility-ht
     }:
     mkDerivation {
       pname = "numeric-prelude";
       version = "0.4.1";
       sha256 = "1y1dg4bk811xmz3p23g8kjl6vxns3gs8qj671971c06nccfl1h5r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         deepseq non-negative parsec QuickCheck random storable-record
         utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Numeric_Prelude";
       description = "An experimental alternative hierarchy of numeric type classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numeric-qq" = callPackage
    ({ mkDerivation, doctest, filepath, loch-th, placeholders }:
     mkDerivation {
       pname = "numeric-qq";
       version = "0.1.2";
       sha256 = "0zxiaiqzcg4z354wyvxl672ffswvhbqk6h6nvpgmydw84akpimcm";
       buildDepends = [ loch-th placeholders ];
       testDepends = [ doctest filepath ];
       homepage = "https://github.com/nikita-volkov/numeric-qq";
       description = "Quasi-quoters for numbers of different bases";
       license = stdenv.lib.licenses.mit;
     }) {};

  "numeric-quest" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "numeric-quest";
       version = "0.2.0.1";
       sha256 = "110v2frn085pggjzl3l8wqgr4vcdd5h29x2wak2a59x16ngjg7ga";
       homepage = "http://www.haskell.org/haskellwiki/Numeric_Quest";
       description = "Math and quantum mechanics";
       license = "GPL";
     }) {};

  "numeric-tools" = callPackage
    ({ mkDerivation, HUnit, ieee754, primitive, vector }:
     mkDerivation {
       pname = "numeric-tools";
       version = "0.2.0.1";
       sha256 = "0frdsj90gqpa55ybjfkzfcda43bbwkqd2v26l6w35kyq1snqyhd3";
       buildDepends = [ ieee754 primitive vector ];
       testDepends = [ HUnit ];
       homepage = "https://bitbucket.org/Shimuuar/numeric-tools";
       description = "Collection of numerical tools for integration, differentiation etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nums" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nums";
       version = "1.2.0";
       sha256 = "0bbl7f3qd26sa92k73qni3r1jwxxrfq5k19hcvh5rgdh5ig9d6v8";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numtype" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "numtype";
       version = "1.1";
       sha256 = "1az10xcfl6qpyy9qnh8g2iqx53rxnjxzc1h8kl1gira6yv7g6857";
       homepage = "http://dimensional.googlecode.com/";
       description = "Type-level (low cardinality) integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "numtype-tf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "numtype-tf";
       version = "0.1.2";
       sha256 = "00bnz9k4nq21z4vax37qjv6ra2jvlshk0jlici1w8y9rx39zrjyx";
       homepage = "http://dimensional.googlecode.com/";
       description = "Type-level (low cardinality) integers, implemented using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nyan" = callPackage
    ({ mkDerivation, mtl, ncurses, text }:
     mkDerivation {
       pname = "nyan";
       version = "0.2";
       sha256 = "02bcyb6ibb6m84d2r6pp05vbv9jv09v1lp35n18mn2vkrgwls649";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ncurses text ];
       description = "Bored? Nyan cat!";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "nymphaea" = callPackage
    ({ mkDerivation, cairo, glade, glib, gtk, mtl, parsec, random }:
     mkDerivation {
       pname = "nymphaea";
       version = "0.3";
       sha256 = "1nlnz7mvdkhcqp4v1fyfb6r6v18xpxi0ddqqp84dsqg6ahdypc13";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cairo glade glib gtk mtl parsec random ];
       description = "An interactive GUI for manipulating L-systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "oauthenticated" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, blaze-builder
     , case-insensitive, crypto-random, cryptohash, either, exceptions
     , http-client, http-types, mtl, network, network-uri, text, time
     , transformers
     }:
     mkDerivation {
       pname = "oauthenticated";
       version = "0.1.3.4";
       sha256 = "1l6qir6qnipq8295cljl66mhlws2rrqjvz9nsl7rq2ldqv711bbm";
       buildDepends = [
         aeson base64-bytestring blaze-builder case-insensitive
         crypto-random cryptohash either exceptions http-client http-types
         mtl network network-uri text time transformers
       ];
       description = "Simple OAuth for http-client";
       license = stdenv.lib.licenses.mit;
     }) {};

  "obdd" = callPackage
    ({ mkDerivation, mtl, random }:
     mkDerivation {
       pname = "obdd";
       version = "0.3.1";
       sha256 = "1blj9k4wd14shif4dngip5kl9zmavrhp0bnr2xciz8r8is1x0q4j";
       buildDepends = [ mtl random ];
       description = "Ordered Reduced Binary Decision Diagrams";
       license = "GPL";
     }) {};

  "oberon0" = callPackage
    ({ mkDerivation, AspectAG, HList, language-c, mtl, murder
     , transformers, uu-parsinglib, uulib
     }:
     mkDerivation {
       pname = "oberon0";
       version = "0.0.2";
       sha256 = "0w8ygppqr1mjklc0545z2n503ap5xzxmjw2xsmb0i85nmh6f95hv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         AspectAG HList language-c mtl murder transformers uu-parsinglib
         uulib
       ];
       homepage = "http://www.cs.uu.nl/wiki/Center/CoCoCo";
       description = "Oberon0 Compiler";
       license = "LGPL";
     }) {};

  "obj" = callPackage
    ({ mkDerivation, binary, checkers, Codec-Image-DevIL, filepath
     , graphicsFormats, InfixApplicative, OpenGL, OpenGLCheck
     , QuickCheck
     }:
     mkDerivation {
       pname = "obj";
       version = "0.1.2";
       sha256 = "0w9yyyd2i88lkhqlghnf7zkrx0sql5w8vwx67j9j1jr7d5zrad4z";
       buildDepends = [
         binary checkers Codec-Image-DevIL filepath graphicsFormats
         InfixApplicative OpenGL OpenGLCheck QuickCheck
       ];
       description = "Reads and writes obj models";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "objectid" = callPackage
    ({ mkDerivation, blaze-builder, bytestring-arbitrary, cereal
     , cryptohash, QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "objectid";
       version = "0.1.0.2";
       sha256 = "1cr9hzrkj8a6ggym8d6gyy0rmric93x8xwdjqfal10bg5s6d6vgs";
       buildDepends = [ blaze-builder cereal cryptohash ];
       testDepends = [
         bytestring-arbitrary cereal QuickCheck tasty tasty-quickcheck
       ];
       homepage = "https://github.com/tsuraan/objectid";
       description = "Rather unique identifier for things that need to be stored";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "objective" = callPackage
    ({ mkDerivation, clean-unions, elevator, free, hashable
     , kan-extensions, minioperational, profunctors, transformers
     , unordered-containers, witherable
     }:
     mkDerivation {
       pname = "objective";
       version = "0.6.2";
       sha256 = "0jzxi5ip67vjyh3wz9kf4p5mqliidx75109xmlakjlr3dghrc5zq";
       buildDepends = [
         clean-unions elevator free hashable kan-extensions minioperational
         profunctors transformers unordered-containers witherable
       ];
       homepage = "https://github.com/fumieval/objective";
       description = "Extensible objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "octopus" = callPackage
    ({ mkDerivation, hexpr, mtl, parsec, symbol, text }:
     mkDerivation {
       pname = "octopus";
       version = "0.0.2.1";
       sha256 = "1p1sf694a5zryvb2i38ygd7fby54pqi0v5r3b24wcpwj43dy57ca";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hexpr mtl parsec symbol text ];
       homepage = "https://github.com/Zankoku-Okuno/octopus/";
       description = "Lisp with more dynamism, more power, more simplicity";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "oculus" = callPackage
    ({ mkDerivation, either, libX11, mesa, monads-tf, ovr, transformers
     , udev, vect-floating, Xinerama
     }:
     mkDerivation {
       pname = "oculus";
       version = "0.1.0.2";
       sha256 = "04015wbh5j36gd66k7fn12nl92lq68d0c9dia8fz0pr8y3b7ims4";
       buildDepends = [ either monads-tf transformers vect-floating ];
       extraLibraries = [ libX11 mesa ovr udev Xinerama ];
       homepage = "http://github.com/cpdurham/oculus";
       description = "Oculus Rift ffi providing head tracking data";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) udev; };

  "oeis" = callPackage
    ({ mkDerivation, HTTP, HUnit, network, network-uri, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "oeis";
       version = "0.3.6";
       sha256 = "1q7ywczm2d5inrjqgz3j8vfk5sj2yixvwdkzlfs2whd0gadbcfa0";
       buildDepends = [ HTTP network network-uri ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       description = "Interface to the Online Encyclopedia of Integer Sequences (OEIS)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "off-simple" = callPackage
    ({ mkDerivation, parsec3, vector }:
     mkDerivation {
       pname = "off-simple";
       version = "0.1";
       sha256 = "03sb2bmjw8v01908zkzmw8njsmqy5k2hcnv6ajbia7n8qawyhivj";
       buildDepends = [ parsec3 vector ];
       homepage = "https://github.com/acfoltzer/off-simple";
       description = "A parser for simplified-syntax OFF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ofx" = callPackage
    ({ mkDerivation, parsec, time }:
     mkDerivation {
       pname = "ofx";
       version = "0.4.0.2";
       sha256 = "0vhr2pydnfc0ma7w1qdn5p5yylzlj3n47fnm16mlbhlb5ydnjshg";
       buildDepends = [ parsec time ];
       homepage = "http://www.github.com/massysett/ofx";
       description = "Parser for OFX data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ohloh-hs" = callPackage
    ({ mkDerivation, cmdargs, data-lens, hxt, hxt-curl, pretty-show
     , QuickCheck, test-framework, test-framework-quickcheck2
     , text-format-simple
     }:
     mkDerivation {
       pname = "ohloh-hs";
       version = "0.0.2";
       sha256 = "0nbk24ymkkjrapxa83qzhzl1m7zi3bxdc9jsjkbqvb7r9nz3jhyj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cmdargs data-lens hxt hxt-curl pretty-show text-format-simple
       ];
       testDepends = [
         data-lens hxt QuickCheck test-framework test-framework-quickcheck2
         text-format-simple
       ];
       homepage = "https://github.com/fthomas/ohloh-hs";
       description = "Interface to the Ohloh API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "oi" = callPackage
    ({ mkDerivation, comonad, filepath, parallel, SafeSemaphore }:
     mkDerivation {
       pname = "oi";
       version = "0.3.1";
       sha256 = "14q8map7r2cc8jcfhczyb16br553h2m9xf40qm34l6pb9l1bzn2p";
       buildDepends = [ comonad filepath parallel SafeSemaphore ];
       description = "Library for purely functional lazy interactions with the outer world";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ois-input-manager" = callPackage
    ({ mkDerivation, hogre, OIS }:
     mkDerivation {
       pname = "ois-input-manager";
       version = "0.1.0.1";
       sha256 = "1p34xybkf5079pq5hkildaz6skx06f6s3qg0k2i73jhh93q3ckiq";
       buildDepends = [ hogre ];
       extraLibraries = [ OIS ];
       description = "wrapper for OIS input manager for use with hogre";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "old-locale" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "old-locale";
       version = "1.0.0.7";
       sha256 = "0l3viphiszvz5wqzg7a45zp40grwlab941q5ay29iyw8p3v8pbyv";
       description = "locale library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "old-time" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "old-time";
       version = "1.1.0.3";
       sha256 = "1h9b26s3kfh2k0ih4383w90ibji6n0iwamxp6rfp2lbq1y5ibjqw";
       description = "Time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "omaketex" = callPackage
    ({ mkDerivation, optparse-applicative, shakespeare-text, shelly
     , text
     }:
     mkDerivation {
       pname = "omaketex";
       version = "0.1.1.0";
       sha256 = "0kq2j8pndzn3fjdklyh22vcg8am48i29gx4jq2i74p4gmdryavn9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         optparse-applicative shakespeare-text shelly text
       ];
       homepage = "https://github.com/pcapriotti/omaketex";
       description = "A simple tool to generate OMakefile for latex files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "omega" = callPackage
    ({ mkDerivation, filepath, time }:
     mkDerivation {
       pname = "omega";
       version = "1.5.2";
       sha256 = "0v11j2gz98g5ng9dsfbr7k3a2xhw2xqa1qi1q8ad53sx2yhjv0ly";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath time ];
       homepage = "http://code.google.com/p/omega/";
       description = "A purely functional programming language and a proof system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "omnicodec" = callPackage
    ({ mkDerivation, cmdargs, conduit, sandi, transformers }:
     mkDerivation {
       pname = "omnicodec";
       version = "0.7";
       sha256 = "18xkwsinfjvd20249bm3z0qvsi51j776ifqa6vkrrl186pwa8im7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs conduit sandi transformers ];
       description = "data encoding and decoding command line utilities";
       license = "unknown";
     }) {};

  "on-a-horse" = callPackage
    ({ mkDerivation, arrows, case-insensitive, cookie, http-types, mtl
     , random, safe, split, text, time, transformers, utf8-string, wai
     , wai-extra, warp
     }:
     mkDerivation {
       pname = "on-a-horse";
       version = "0.3";
       sha256 = "18nbvdbdg05fmymbvvhig6invr6ald0gdadl666m4axc8m9n6pvg";
       buildDepends = [
         arrows case-insensitive cookie http-types mtl random safe split
         text time transformers utf8-string wai wai-extra warp
       ];
       homepage = "http://haskell.on-a-horse.org";
       description = "\"Haskell on a Horse\" - A combinatorial web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "on-demand-ssh-tunnel" = callPackage
    ({ mkDerivation, network, random }:
     mkDerivation {
       pname = "on-demand-ssh-tunnel";
       version = "0.1.0.3";
       sha256 = "021j91hxmlpl9kajnyv9y211kzjvc8i5kfl6gn5xyl0ybyw9p0z6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network random ];
       homepage = "https://github.com/crackleware/on-demand-ssh-tunnel";
       description = "Program that sends traffic through SSH tunnels on-demand";
       license = stdenv.lib.licenses.mit;
     }) {};

  "one-liner" = callPackage
    ({ mkDerivation, contravariant, transformers }:
     mkDerivation {
       pname = "one-liner";
       version = "0.5";
       sha256 = "0addkdy8nh3z4h77hskg6930jn00z3sd5fzyajpyi9mfkch0mz91";
       buildDepends = [ contravariant transformers ];
       homepage = "https://github.com/sjoerdvisscher/one-liner";
       description = "Constraint-based generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "oneOfN" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "oneOfN";
       version = "0.1.0.1";
       sha256 = "05gycp2zvq08bjl9dx1lm3cjr12i50k3cwq4al34y1rlp2r531lk";
       homepage = "https://github.com/mokus0/oneOfN";
       description = "Anonymous coproduct type";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "oneormore" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "oneormore";
       version = "0.1.0.3";
       sha256 = "1lz429abk7qqwfya3wa1m5pcyyldagcmmc0ghjfbl8byhkaax63p";
       homepage = "https://github.com/thinkpad20/oneormore";
       description = "A never-empty list type";
       license = stdenv.lib.licenses.mit;
     }) {};

  "only" = callPackage
    ({ mkDerivation, parsec, regex-compat }:
     mkDerivation {
       pname = "only";
       version = "0.0.6.0";
       sha256 = "17c9yy0fshxhpdfqb6hi23kvnvvckcdmlr2dffpgx4cg9znh62s1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec regex-compat ];
       description = "A grep-like tool for filtering on words or lines";
       license = "GPL";
     }) {};

  "onu-course" = callPackage
    ({ mkDerivation, smallcheck }:
     mkDerivation {
       pname = "onu-course";
       version = "1";
       sha256 = "1d0yn5bj04ircxbi12rx80kds54zssmq4j9kqyk05nmv506x76k0";
       buildDepends = [ smallcheck ];
       description = "Code for the Haskell course taught at the Odessa National University in 2012";
       license = stdenv.lib.licenses.mit;
     }) {};

  "oo-prototypes" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "oo-prototypes";
       version = "0.1.0.0";
       sha256 = "0xpm2adf47clhzpwd833w706mc5xfxwr2wp4aywigy11687f9bly";
       homepage = "https://github.com/yi-editor/oo-prototypes";
       description = "Support for OO-like prototypes";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "opaleye" = callPackage
    ({ mkDerivation, contravariant, postgresql-simple
     , product-profunctors, profunctors, semigroups, text, time
     , transformers, uuid
     }:
     mkDerivation {
       pname = "opaleye";
       version = "0.3";
       sha256 = "1jq2q0dswgj5jksdd5xn2ny66d1nfqmwf7cv835gg59g4rd2yyrx";
       editedCabalFile = "118asq6v6zskvjkx3c0s57y3i1qsah46lwsv3qkz7x9qwpirv87v";
       buildDepends = [
         contravariant postgresql-simple product-profunctors profunctors
         semigroups text time transformers uuid
       ];
       testDepends = [
         postgresql-simple product-profunctors profunctors time
       ];
       homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
       description = "An SQL-generating DSL targeting PostgreSQL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "open-pandoc" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, HTTP, mtl
     , network, parsec, syb, texmath, utf8-string, xhtml, xml
     , zip-archive
     }:
     mkDerivation {
       pname = "open-pandoc";
       version = "1.5.1.1";
       sha256 = "1k9d1r1z7q6lm8fha630rg2qfmwwnr9dv2ajvqwvrki2m6i9sczn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions filepath HTTP mtl network parsec syb texmath
         utf8-string xhtml xml zip-archive
       ];
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Conversion between markup formats";
       license = "GPL";
     }) {};

  "open-typerep" = callPackage
    ({ mkDerivation, constraints, syntactic, tagged }:
     mkDerivation {
       pname = "open-typerep";
       version = "0.2";
       sha256 = "0z1bp7hansv2zzvwq3n8yqln9pi9vlby5s9mlb7v8wrj99w563lp";
       buildDepends = [ constraints syntactic tagged ];
       homepage = "https://github.com/emilaxelsson/open-typerep";
       description = "Open type representations and dynamic types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "open-union" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "open-union";
       version = "0.1.0.1";
       sha256 = "1dkz7a5k86r74lnf891grn48q8agkmd81czfp1g4l4dnxslldsqw";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/RobotGymnast/open-union";
       description = "Extensible, type-safe unions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "open-witness" = callPackage
    ({ mkDerivation, mtl, witness }:
     mkDerivation {
       pname = "open-witness";
       version = "0.1.1";
       sha256 = "1i38lhy1wla0xqgcbyf06179r1hs6194wqd8gg26q491ddc0vp3l";
       buildDepends = [ mtl witness ];
       description = "open witnesses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "opencv-raw" = callPackage
    ({ mkDerivation, bindings-DSL, Cabal, opencv, vector }:
     mkDerivation {
       pname = "opencv-raw";
       version = "0.1.0.0";
       sha256 = "040hjkqd2zqkd8zbnfv8wmyzkfgckiv4njryilx1gpyp7c6qxpwn";
       buildDepends = [ bindings-DSL Cabal vector ];
       pkgconfigDepends = [ opencv ];
       homepage = "www.github.com/arjuncomar/opencv-raw.git";
       description = "Raw Haskell bindings to OpenCV >= 2.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "opendatatable" = callPackage
    ({ mkDerivation, hxt, th-lift }:
     mkDerivation {
       pname = "opendatatable";
       version = "0.0.0";
       sha256 = "1bv729ljw07arz9fzg0nqj6fkpwkxkjds073cz3zr9in0a5b1531";
       buildDepends = [ hxt th-lift ];
       homepage = "https://github.com/fabianbergmark/OpenDataTable";
       description = "A library for working with Open Data Tables";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "openexchangerates" = callPackage
    ({ mkDerivation, aeson, currency, errors, HTTP, network, text }:
     mkDerivation {
       pname = "openexchangerates";
       version = "0.1.0.0";
       sha256 = "0ci1hfdcf0msn3j5l42z4pnn9sw77r0a4anlqsrnl2vrcpfs3j8l";
       buildDepends = [ aeson currency errors HTTP network text ];
       homepage = "https://github.com/singpolyma/openexchangerates-haskell";
       description = "Fetch exchange rates from OpenExchangeRates.org";
       license = "unknown";
     }) {};

  "opengles" = callPackage
    ({ mkDerivation, distributive, EGL, future-resource, GLESv2, lens
     , linear, packer, vector
     }:
     mkDerivation {
       pname = "opengles";
       version = "0.7.0";
       sha256 = "0vzd1dfg772947h4wny1fsskgdfxk31q86n0p507vmd7pxz6m5dj";
       buildDepends = [
         distributive future-resource lens linear packer vector
       ];
       extraLibraries = [ EGL GLESv2 ];
       description = "OpenGL ES 2.0 and 3.0 with EGL 1.4";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "openid" = callPackage
    ({ mkDerivation, HsOpenSSL, HTTP, monadLib, network, time, xml }:
     mkDerivation {
       pname = "openid";
       version = "0.2.0.2";
       sha256 = "0rhd2hz3ls9ifcrifxhd4qvd7axydnlk5gckxay55dp2lcfc4css";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HsOpenSSL HTTP monadLib network time xml ];
       homepage = "http://github.com/elliottt/hsopenid";
       description = "An implementation of the OpenID-2.0 spec.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "openpgp" = callPackage
    ({ mkDerivation, binary, bzlib, HUnit, QuickCheck
     , quickcheck-instances, test-framework, test-framework-hunit
     , test-framework-quickcheck2, utf8-string, zlib
     }:
     mkDerivation {
       pname = "openpgp";
       version = "0.6.1";
       sha256 = "03sdl0nzxnqbg8cnkglxkbz5xh5s57n6qgdjdnd82sdz139ia69s";
       buildDepends = [ binary bzlib utf8-string zlib ];
       testDepends = [
         binary bzlib HUnit QuickCheck quickcheck-instances test-framework
         test-framework-hunit test-framework-quickcheck2 utf8-string zlib
       ];
       homepage = "http://github.com/singpolyma/OpenPGP-Haskell";
       description = "Implementation of the OpenPGP message format";
       license = "unknown";
     }) {};

  "openpgp-Crypto" = callPackage
    ({ mkDerivation, binary, Crypto, HUnit, openpgp, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , utf8-string
     }:
     mkDerivation {
       pname = "openpgp-Crypto";
       version = "0.5";
       sha256 = "0gsdzfg378j7s2kpryg43ajxcdk8s5szk0yq48qfvnlsbgrxz07r";
       buildDepends = [ binary Crypto openpgp utf8-string ];
       testDepends = [
         binary Crypto HUnit openpgp QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 utf8-string
       ];
       homepage = "http://github.com/singpolyma/OpenPGP-Crypto";
       description = "Implementation of cryptography for use with OpenPGP using the Crypto library";
       license = "unknown";
     }) {};

  "openpgp-asciiarmor" = callPackage
    ({ mkDerivation, attoparsec, base64-bytestring, cereal, HUnit
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openpgp-asciiarmor";
       version = "0.1";
       sha256 = "1xrv0n7n1n8izvxvqm8wmj6mkn5l6wcq18bxs9zd1q5riynmmm2w";
       buildDepends = [ attoparsec base64-bytestring cereal ];
       testDepends = [
         attoparsec base64-bytestring cereal HUnit test-framework
         test-framework-hunit
       ];
       homepage = "http://floss.scru.org/openpgp-asciiarmor";
       description = "OpenPGP (RFC4880) ASCII Armor codec";
       license = "unknown";
     }) {};

  "openpgp-crypto-api" = callPackage
    ({ mkDerivation, binary, cereal, crypto-api, cryptocipher
     , cryptohash, HUnit, openpgp, QuickCheck, quickcheck-instances
     , tagged, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers, utf8-string
     }:
     mkDerivation {
       pname = "openpgp-crypto-api";
       version = "0.6.3";
       sha256 = "18grb5jzf7n4670xww3ca2l05ck3lj2msynl57y5fjia8gfr8ijm";
       buildDepends = [
         binary cereal crypto-api cryptocipher cryptohash openpgp tagged
         transformers
       ];
       testDepends = [
         binary cereal crypto-api cryptocipher cryptohash HUnit openpgp
         QuickCheck quickcheck-instances tagged test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
         utf8-string
       ];
       homepage = "http://github.com/singpolyma/OpenPGP-CryptoAPI";
       description = "Implement cryptography for OpenPGP using crypto-api compatible libraries";
       license = "unknown";
     }) {};

  "opensoundcontrol-ht" = callPackage
    ({ mkDerivation, binary, hosc, random, transformers, utility-ht }:
     mkDerivation {
       pname = "opensoundcontrol-ht";
       version = "0.3";
       sha256 = "154bviaqkh9a02li6f2351764wgy0b0lh4a4s0wg8ql7ml0fykza";
       buildDepends = [ binary hosc random transformers utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/SuperCollider";
       description = "Haskell OpenSoundControl utilities";
       license = "GPL";
     }) {};

  "openssl-createkey" = callPackage
    ({ mkDerivation, HsOpenSSL, time }:
     mkDerivation {
       pname = "openssl-createkey";
       version = "0.1";
       sha256 = "1p59wlkirz4dwyhsnzzzbvy2cwfizn2zky5sxrsmnrzfkbpx1ig5";
       buildDepends = [ HsOpenSSL time ];
       description = "Create OpenSSL keypairs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "openssl-streams" = callPackage
    ({ mkDerivation, HsOpenSSL, HUnit, io-streams, network
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openssl-streams";
       version = "1.2.0.0";
       sha256 = "01hdrsdrp2x7i5zydn2b0blzir7vqvn63n9sf9pwcgnkk6s5j1wc";
       buildDepends = [ HsOpenSSL io-streams network ];
       testDepends = [
         HsOpenSSL HUnit io-streams network test-framework
         test-framework-hunit
       ];
       description = "OpenSSL network support for io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "opentheory" = callPackage
    ({ mkDerivation, opentheory-primitive, QuickCheck, random }:
     mkDerivation {
       pname = "opentheory";
       version = "1.76";
       sha256 = "011xz72b0sn50pa62h3x9spr1y1prxyyyn3sc8nm1jg0r0rda99c";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ opentheory-primitive QuickCheck random ];
       description = "The Haskell base";
       license = stdenv.lib.licenses.mit;
     }) {};

  "opentheory-char" = callPackage
    ({ mkDerivation, opentheory, opentheory-parser
     , opentheory-primitive, QuickCheck, random
     }:
     mkDerivation {
       pname = "opentheory-char";
       version = "1.41";
       sha256 = "0z0dg3bgck8yjn45a7i5ymx2gm9i5m9skmg0n1cg7p6hgdka9j9i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         opentheory opentheory-parser opentheory-primitive QuickCheck random
       ];
       description = "Unicode characters";
       license = stdenv.lib.licenses.mit;
     }) {};

  "opentheory-parser" = callPackage
    ({ mkDerivation, opentheory, opentheory-primitive, QuickCheck
     , random
     }:
     mkDerivation {
       pname = "opentheory-parser";
       version = "1.117";
       sha256 = "0wrqah4vq0shh9541lqjdciz6v79qrr5s7711zmpcap51gs9d9bl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         opentheory opentheory-primitive QuickCheck random
       ];
       description = "Stream parsers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "opentheory-prime" = callPackage
    ({ mkDerivation, opentheory, opentheory-primitive, QuickCheck
     , random
     }:
     mkDerivation {
       pname = "opentheory-prime";
       version = "1.23";
       sha256 = "1mg0bhjcml8camgy7hqci4lpd5raw5yii1rsln160hwsalkaxj1c";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         opentheory opentheory-primitive QuickCheck random
       ];
       description = "Prime numbers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "opentheory-primitive" = callPackage
    ({ mkDerivation, QuickCheck, random }:
     mkDerivation {
       pname = "opentheory-primitive";
       version = "1.2";
       sha256 = "028z444528v1a35g5iac4fzqgwlxr23ii71sjb264h3v4i4i81d8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck random ];
       description = "Haskell primitives used by OpenTheory packages";
       license = stdenv.lib.licenses.mit;
     }) {};

  "operational" = callPackage
    ({ mkDerivation, mtl, random }:
     mkDerivation {
       pname = "operational";
       version = "0.2.3.2";
       sha256 = "1aj3jhiyz4190b0qmyp684b8lbzrp8jn56s898892rvbp0hxa0pd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl random ];
       homepage = "http://haskell.org/haskellwiki/Operational";
       description = "Implementation of difficult monads made easy with operational semantics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "opml" = callPackage
    ({ mkDerivation, xml }:
     mkDerivation {
       pname = "opml";
       version = "0.4";
       sha256 = "1bnr6lkcf2qs7pvrmd8a5xmklcg67l64b776hzclfvxqy1qil29x";
       buildDepends = [ xml ];
       description = "Representing and handling OPML subscription information";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "opn" = callPackage
    ({ mkDerivation, filepath, ini, network-uri, optparse-applicative
     , text, unordered-containers
     }:
     mkDerivation {
       pname = "opn";
       version = "0.1.2";
       sha256 = "0x53kvcpbd9fh00zs8wdkb3xsl8hf1bsqgl83ci17di1jyg3m4ch";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath ini network-uri optparse-applicative text
         unordered-containers
       ];
       homepage = "http://github.com/akc/opn";
       description = "Open files or URLs using associated programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "optimal-blocks" = callPackage
    ({ mkDerivation, bytestring-arbitrary, cryptohash, deepseq, hex
     , QuickCheck, vector
     }:
     mkDerivation {
       pname = "optimal-blocks";
       version = "0.0.1";
       sha256 = "0hn60fapmldk1dhg56n0j1vch07pqii49hk2k3d23v7sliv8bhwy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cryptohash deepseq hex vector ];
       testDepends = [ bytestring-arbitrary deepseq QuickCheck vector ];
       homepage = "https://github.com/tsuraan/optimal-blocks";
       description = "Optimal Block boundary determination for rsync-like behaviours";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "optimization" = callPackage
    ({ mkDerivation, ad, distributive, doctest, filepath, linear
     , semigroupoids, vector
     }:
     mkDerivation {
       pname = "optimization";
       version = "0.1.5";
       sha256 = "0k9g3gs3ysrj7mm8prnahpdmw9wa7zxxnx5hfmr805a0ydg3qjb6";
       buildDepends = [ ad distributive linear semigroupoids vector ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/bgamari/optimization";
       description = "Numerical optimization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "optimusprime" = callPackage
    ({ mkDerivation, cmdargs, fgl, flite, graphviz, mtl, parsec
     , uniplate, wl-pprint
     }:
     mkDerivation {
       pname = "optimusprime";
       version = "0.0.1.20091117";
       sha256 = "0642f9vv08qyqk3pjgin5k2sfv2ffhah9h9rc2xw6ahnygqbpbmf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs fgl flite graphviz mtl parsec uniplate wl-pprint
       ];
       homepage = "http://optimusprime.posterous.com/";
       description = "A supercompiler for f-lite";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "optional" = callPackage
    ({ mkDerivation, doctest, filepath, QuickCheck }:
     mkDerivation {
       pname = "optional";
       version = "0.0.1";
       sha256 = "1i1nl81gg5fndf3vafirpmklikn4xpy791is6ff8j7pzys0qfj8g";
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/optional";
       description = "Using type-classes for optional function arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "options" = callPackage
    ({ mkDerivation, chell, chell-quickcheck, monads-tf, transformers
     }:
     mkDerivation {
       pname = "options";
       version = "1.2.1";
       sha256 = "1y9jpichzlslny4x6yxfsxs8kww1ynwpv7svxzd39xb9sg1lpy3m";
       buildDepends = [ monads-tf transformers ];
       testDepends = [ chell chell-quickcheck monads-tf transformers ];
       homepage = "https://john-millikin.com/software/haskell-options/";
       description = "A powerful and easy-to-use command-line option parser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "options-time" = callPackage
    ({ mkDerivation, chell, options, time }:
     mkDerivation {
       pname = "options-time";
       version = "1.0.1";
       sha256 = "0rsmwalmnry71w23k6sg0a307xgb2s71j9s12zqqq380fw6c1bhm";
       buildDepends = [ options time ];
       testDepends = [ chell options time ];
       homepage = "https://john-millikin.com/software/haskell-options/";
       description = "Command-line option types for dates and times";
       license = stdenv.lib.licenses.mit;
     }) {};

  "optparse-applicative" = callPackage
    ({ mkDerivation, ansi-wl-pprint, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "optparse-applicative";
       version = "0.11.0.1";
       sha256 = "0jdzajj9w0dghv751m59l3imzm2x9lx9cqb6094mncnx8k6cf6f9";
       buildDepends = [ ansi-wl-pprint transformers transformers-compat ];
       homepage = "https://github.com/pcapriotti/optparse-applicative";
       description = "Utilities and combinators for parsing command line options";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "orc" = callPackage
    ({ mkDerivation, deepseq, monadIO, mtl, random, stm }:
     mkDerivation {
       pname = "orc";
       version = "1.2.1.4";
       sha256 = "0zl456v2mwa68k2lq7fx3ds6xr9vbrijq8q8ma5mm1kk9p9znr0x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deepseq monadIO mtl random stm ];
       description = "Orchestration-style co-ordination EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "orchestrate" = callPackage
    ({ mkDerivation, aeson, case-insensitive, data-default, either
     , errors, hspec, http-client, http-types, lens, mtl, QuickCheck
     , smallcheck, text, transformers, unordered-containers, wreq
     }:
     mkDerivation {
       pname = "orchestrate";
       version = "0.2.0.0";
       sha256 = "0d9p6b4ficxbsxmig7zjm130v2k60q8jskcm2gvjlg7z8xsqmhzl";
       buildDepends = [
         aeson case-insensitive data-default either errors http-client
         http-types lens mtl text transformers unordered-containers wreq
       ];
       testDepends = [
         aeson errors hspec lens QuickCheck smallcheck text wreq
       ];
       description = "An API client for http://orchestrate.io/.";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "orchid" = callPackage
    ({ mkDerivation, encoding, extensible-exceptions, fclabels
     , filestore, hscolour, mtl, nano-md5, parsec, QuickCheck, salvia
     , salvia-extras, stm, time, xml
     }:
     mkDerivation {
       pname = "orchid";
       version = "0.0.8";
       sha256 = "1d3cfhhsv1qpiiin4cs9wxx2a6vwcj0iad746z7l1qzyxrhg4dkm";
       buildDepends = [
         encoding extensible-exceptions fclabels filestore hscolour mtl
         nano-md5 parsec QuickCheck salvia salvia-extras stm time xml
       ];
       description = "Haskell Wiki Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "orchid-demo" = callPackage
    ({ mkDerivation, extensible-exceptions, mtl, network, orchid, Pipe
     , salvia, salvia-extras, stm
     }:
     mkDerivation {
       pname = "orchid-demo";
       version = "0.0.6";
       sha256 = "1gfjmakfx8244q1yqbgp2ji9bh45ll8ixvxbdd961my30j7gh29z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions mtl network orchid Pipe salvia salvia-extras
         stm
       ];
       description = "Haskell Wiki Demo";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ord-adhoc" = callPackage
    ({ mkDerivation, void }:
     mkDerivation {
       pname = "ord-adhoc";
       version = "0.0.0.1";
       sha256 = "062wkfpww1ic3xiy26k22369azk5wjlpn5wm5xh1w75kc9crv263";
       buildDepends = [ void ];
       homepage = "https://github.com/fumieval/ord-adhoc/";
       description = "Creating Ord instances instantly";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "order-statistics" = callPackage
    ({ mkDerivation, math-functions, statistics, vector, vector-space
     }:
     mkDerivation {
       pname = "order-statistics";
       version = "0.1.1";
       sha256 = "1df9b0q4rmgnd74q7pckcppyiygzba6f39vajkwb2pmxlfafcy7a";
       buildDepends = [ math-functions statistics vector vector-space ];
       homepage = "http://github.com/ekmett/order-statistics/";
       description = "L-Estimators for robust statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ordered" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ordered";
       version = "0.1";
       sha256 = "0s0g5kgzdw7qjsdcddszjclamx9bi0369pkwhh0wncjg68a7mq69";
       description = "A definition of Posets";
       license = "unknown";
     }) {};

  "orders" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "orders";
       version = "0.1.0.0";
       sha256 = "1ry6flg5sh3hl1xpkqk67ayd4y0xx3j2pwcz26q1pgqn6m84plzr";
       description = "basic orders";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ordrea" = callPackage
    ({ mkDerivation, split, transformers, vector }:
     mkDerivation {
       pname = "ordrea";
       version = "0.3.0.0";
       sha256 = "067nf69diqi00vswd7xarl55ps9v5cwqmph1w6nzjylnl0pjh811";
       buildDepends = [ transformers vector ];
       testDepends = [ split ];
       description = "Push-pull implementation of discrete-time FRP";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "organize-imports" = callPackage
    ({ mkDerivation, attoparsec, text }:
     mkDerivation {
       pname = "organize-imports";
       version = "0.3.0.0";
       sha256 = "04d56k6x6psynk8lddbawc3kfa4yc66w4qgjag20grm4zd7y45ax";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ attoparsec text ];
       description = "Organize scala imports";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "orgmode-parse" = callPackage
    ({ mkDerivation, attoparsec, free, HUnit, tasty, tasty-hunit, text
     , thyme, unordered-containers
     }:
     mkDerivation {
       pname = "orgmode-parse";
       version = "0.0.2.1";
       sha256 = "0jlajb6gvlh5w0b011129vqq46mb6kl5lh1bnih3k19hm0kd50fz";
       buildDepends = [ attoparsec free text thyme unordered-containers ];
       testDepends = [
         attoparsec HUnit tasty tasty-hunit text thyme unordered-containers
       ];
       description = "A parser and writer for org-mode flavored documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "os-release" = callPackage
    ({ mkDerivation, hlint, hspec, regex-compat }:
     mkDerivation {
       pname = "os-release";
       version = "0.1.0";
       sha256 = "1qg0j0d86k3vddlndlwy6n4mb7hlb0x3r7swcjqwyw5r9kc5dvmb";
       testDepends = [ hlint hspec regex-compat ];
       homepage = "https://github.com/yaccz/os-release";
       description = "/etc/os-release helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "osdkeys" = callPackage
    ({ mkDerivation, conduit, conduit-extra, libnotify, resourcet, time
     , transformers
     }:
     mkDerivation {
       pname = "osdkeys";
       version = "0.0";
       sha256 = "18pc2r5acb3b6dr7niib4fn8x2la6y3f5zlj3ibrxhl5c1q35j6y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         conduit conduit-extra libnotify resourcet time transformers
       ];
       description = "Show keys pressed with an on-screen display (Linux only)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "osm-download" = callPackage
    ({ mkDerivation, conduit, data-default, gps, http-conduit
     , http-types, monad-control, monadIO, mtl, persistent
     , persistent-sqlite, persistent-template, pool-conduit, stm
     , stm-chans, text, time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "osm-download";
       version = "0.4";
       sha256 = "056ggv31nycgz59gkmibzmx0k5x8klb5bwlnbhdih8d71larbsb3";
       buildDepends = [
         conduit data-default gps http-conduit http-types monad-control
         monadIO mtl persistent persistent-sqlite persistent-template
         pool-conduit stm stm-chans text time transformers transformers-base
       ];
       description = "Download Open Street Map tiles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "osx-ar" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "osx-ar";
       version = "0.11";
       sha256 = "1d2lna7gvygiq062p2y1zy182wv3vkr0lda49y502ad6jf483xdn";
       buildDepends = [ binary ];
       description = "Parser for OS X static archive format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ot" = callPackage
    ({ mkDerivation, aeson, attoparsec, binary, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text
     }:
     mkDerivation {
       pname = "ot";
       version = "0.1.2.2";
       sha256 = "0sgd8jsj2mgnzbvhgqjn4b555kj4phkknm9nn1bggy9kkhylwsib";
       buildDepends = [ aeson attoparsec binary QuickCheck text ];
       testDepends = [
         aeson binary HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/operational-transformation/ot.hs";
       description = "Real-time collaborative editing with Operational Transformation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ottparse-pretty" = callPackage
    ({ mkDerivation, parsec, split, uniplate }:
     mkDerivation {
       pname = "ottparse-pretty";
       version = "0.1.2.4";
       sha256 = "0zwqwx19k4zq87fnpj9akdqnqpmbfmyw0m24ghxn0nvs51vbp3lh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec split uniplate ];
       description = "Pretty-printer for Ott parse trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "package-o-tron" = callPackage
    ({ mkDerivation, Cabal, filemanip, filepath, groom, packdeps }:
     mkDerivation {
       pname = "package-o-tron";
       version = "0.1.0.0";
       sha256 = "0r4zksyszbhywyyayjs1cn8d69cnm0p4y9xqir9nw1g4gkl23df8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filemanip filepath groom packdeps ];
       description = "Utilities for working with cabal packages and your package database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "package-vt" = callPackage
    ({ mkDerivation, Cabal, Diff, filepath, haskell-src-exts }:
     mkDerivation {
       pname = "package-vt";
       version = "0.1.3.3";
       sha256 = "0rsv60n6fd9kkjihdjzi7hadxj8yd6bd640w92y2wx1y9qxl8lhm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal Diff filepath haskell-src-exts ];
       description = "Haskell Package Versioning Tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "packdeps" = callPackage
    ({ mkDerivation, Cabal, filepath, split, tar, text, time }:
     mkDerivation {
       pname = "packdeps";
       version = "0.4.0.3";
       sha256 = "08an9nwg448d3w4yds67l02mgikmjmn52pvva3i386fv4hfkabhp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath split tar text time ];
       homepage = "http://packdeps.haskellers.com/";
       description = "Check your cabal packages for lagging dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "packed-dawg" = callPackage
    ({ mkDerivation, binary, deepseq, HUnit, mtl, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, unordered-containers, vector
     , vector-binary-instances
     }:
     mkDerivation {
       pname = "packed-dawg";
       version = "0.2.0.4";
       sha256 = "0lvn1kj5mqy22lkm3h5yhsqw83kv6nwdwm6yvgia3xr0c8nnvx4c";
       buildDepends = [
         binary deepseq mtl unordered-containers vector
         vector-binary-instances
       ];
       testDepends = [
         binary deepseq HUnit mtl QuickCheck tasty tasty-hunit
         tasty-quickcheck unordered-containers vector
         vector-binary-instances
       ];
       description = "Generation and traversal of highly compressed directed acyclic word graphs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "packedstring" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "packedstring";
       version = "0.1.0.1";
       sha256 = "1x78pzzdlnpcmh9p37rlf8m5cxf3yqm2alf3whl4zpr9w25r0qj8";
       description = "(Deprecated) Packed Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "packer" = callPackage
    ({ mkDerivation, HUnit, mtl, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "packer";
       version = "0.1.5";
       sha256 = "1bqxpa13ccvkkzy45374rl5w0qswsh3lsgv6mrxs9hp6b4w3f46j";
       buildDepends = [ mtl ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-packer";
       description = "Fast byte serializer and unserializer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "packunused" = callPackage
    ({ mkDerivation, Cabal, filepath, haskell-src-exts
     , optparse-applicative, split
     }:
     mkDerivation {
       pname = "packunused";
       version = "0.1.1.3";
       sha256 = "1f8lc9lzqwyzdz1j8czdan04d4bj393xk1rxfhr39j4a56qskp1c";
       editedCabalFile = "09qm5v4rjplig1fz7fk61i1lhh4fgh613jxfwjlia1v2qamhbchk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal filepath haskell-src-exts optparse-applicative split
       ];
       homepage = "https://github.com/hvr/packunused";
       description = "Tool for detecting redundant Cabal package dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pacman-memcache" = callPackage
    ({ mkDerivation, deepseq, directory-tree }:
     mkDerivation {
       pname = "pacman-memcache";
       version = "0.1.0.3";
       sha256 = "04jlfinds38kjy0qrk00a7ik5x7mkdwkb0cwmlzlif45x4zrhwfv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ deepseq directory-tree ];
       homepage = "https://github.com/Tener/archlinux-utils";
       description = "Read whole Pacman database which pushes it into the memory cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "padKONTROL" = callPackage
    ({ mkDerivation, hmidi, minioperational, transformers }:
     mkDerivation {
       pname = "padKONTROL";
       version = "0.1";
       sha256 = "1sv7124ms2msqb2wb361xshykmh8cr4i85qayjak8y8q7bpzkdfd";
       buildDepends = [ hmidi minioperational transformers ];
       homepage = "https://github.com/fumieval/padKONTROL";
       description = "Controlling padKONTROL native mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pagerduty" = callPackage
    ({ mkDerivation, aeson, bifunctors, bytestring-conversion, conduit
     , data-default-class, exceptions, generics-sop, http-client
     , http-types, lens, lens-aeson, mmorph, monad-control, mtl, text
     , time, transformers, transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "pagerduty";
       version = "0.0.0";
       sha256 = "0g14xnk0a210fzfxyxviqnrfgl6bxvvf5ikgqsjmifjv1h9pj6b8";
       editedCabalFile = "0zby8sylrgipdx8kk4mxzrmhzrip0q53p80vd0xww706q2lx7zax";
       buildDepends = [
         aeson bifunctors bytestring-conversion conduit data-default-class
         exceptions generics-sop http-client http-types lens lens-aeson
         mmorph monad-control mtl text time transformers transformers-base
         unordered-containers
       ];
       homepage = "http://github.com/brendanhay/pagerduty";
       description = "Client library for PagerDuty Integration and REST APIs";
       license = "unknown";
     }) {};

  "palette" = callPackage
    ({ mkDerivation, colour }:
     mkDerivation {
       pname = "palette";
       version = "0.1.0.1";
       sha256 = "0065b83qrmlqrm96399p3hqqd5psmvxawhwqnwkjm7gid4qgiaha";
       buildDepends = [ colour ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Utilities for choosing and creating color schemes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "palindromes" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "palindromes";
       version = "0.4";
       sha256 = "1k0kvd8p1ivwmpmf8khwmb4vyk8z0di74xn5840zy9jhf1cwx4kn";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.jeuring.net/homepage/palindromes/index.html";
       description = "Finding palindromes in strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pam" = callPackage
    ({ mkDerivation, c2hs, pam }:
     mkDerivation {
       pname = "pam";
       version = "0.1";
       sha256 = "1lmkq12p18qavx2c7xrnha56017y0f21ri4l3cqal4fb8zy0g5nj";
       buildTools = [ c2hs ];
       extraLibraries = [ pam ];
       description = "Haskell binding for C PAM API";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) pam; };

  "panda" = callPackage
    ({ mkDerivation, cgi, data-default, filepath, gravatar, hcheat
     , kibro, MissingH, mps, network, pandoc, parsec, parsedate, rss
     , utf8-string, xhtml
     }:
     mkDerivation {
       pname = "panda";
       version = "2009.4.1";
       sha256 = "0yn6ia1pql5fvj784a57ym74n5sd08n1g9djgapllw9lkf6r7hv7";
       buildDepends = [
         cgi data-default filepath gravatar hcheat kibro MissingH mps
         network pandoc parsec parsedate rss utf8-string xhtml
       ];
       homepage = "http://www.haskell.org/haskellwiki/Panda";
       description = "A simple static blog engine";
       license = "GPL";
     }) {};

  "pandoc" = callPackage
    ({ mkDerivation, aeson, alex, ansi-terminal, base64-bytestring
     , binary, blaze-html, blaze-markup, data-default, deepseq-generics
     , Diff, executable-path, extensible-exceptions, filepath
     , haddock-library, happy, highlighting-kate, hslua, HTTP
     , http-client, http-client-tls, http-types, HUnit, JuicyPixels, mtl
     , network, network-uri, pandoc-types, parsec, QuickCheck, random
     , scientific, SHA, syb, tagsoup, temporary, test-framework
     , test-framework-hunit, test-framework-quickcheck2, texmath, text
     , time, unordered-containers, vector, xml, yaml, zip-archive, zlib
     }:
     mkDerivation {
       pname = "pandoc";
       version = "1.13.1";
       sha256 = "0vvysa70xp4pskxrvslmddwdsalc479zb8wn6z1vmpvfssvvj6vv";
       editedCabalFile = "1i57yk1pql4gv97cs86fk82hkwncics1wkzjqd9iz866204y4wrg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson alex base64-bytestring binary blaze-html blaze-markup
         data-default deepseq-generics extensible-exceptions filepath
         haddock-library happy highlighting-kate hslua HTTP http-client
         http-client-tls http-types JuicyPixels mtl network network-uri
         pandoc-types parsec random scientific SHA syb tagsoup temporary
         texmath text time unordered-containers vector xml yaml zip-archive
         zlib
       ];
       testDepends = [
         ansi-terminal Diff executable-path filepath highlighting-kate HUnit
         pandoc-types QuickCheck syb test-framework test-framework-hunit
         test-framework-quickcheck2 text zip-archive
       ];
       configureFlags = "-fhttps -fmake-pandoc-man-pages";
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Conversion between markup formats";
       license = "GPL";
     }) {};

  "pandoc-citeproc" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, data-default
     , filepath, hs-bibutils, mtl, pandoc, pandoc-types, parsec, rfc5051
     , split, syb, tagsoup, temporary, text, time, vector, xml-conduit
     , yaml
     }:
     mkDerivation {
       pname = "pandoc-citeproc";
       version = "0.6";
       sha256 = "1whi8mrbhfi8wr3qbj1lkgc1pngn8151jjri409hshl1mng4aq5b";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty attoparsec data-default filepath hs-bibutils mtl
         pandoc pandoc-types parsec rfc5051 split syb tagsoup temporary text
         time vector xml-conduit yaml
       ];
       testDepends = [
         aeson filepath pandoc pandoc-types temporary text yaml
       ];
       description = "Supports using pandoc with citeproc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pandoc-lens" = callPackage
    ({ mkDerivation, lens, pandoc-types }:
     mkDerivation {
       pname = "pandoc-lens";
       version = "0.3";
       sha256 = "1871s6ckv34p2k3y1w61rrr3f4yn1zpyhzd1r0k30cr70g8qrg7h";
       buildDepends = [ lens pandoc-types ];
       homepage = "http://github.com/bgamari/pandoc-lens";
       description = "Lenses for Pandoc documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pandoc-types" = callPackage
    ({ mkDerivation, aeson, deepseq-generics, syb }:
     mkDerivation {
       pname = "pandoc-types";
       version = "1.12.4.1";
       sha256 = "1wbgm0s45smi8gix0byapkiarbb416fv765fc329qsvl295xlyqq";
       buildDepends = [ aeson deepseq-generics syb ];
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Types for representing a structured document";
       license = "GPL";
     }) {};

  "pandoc-unlit" = callPackage
    ({ mkDerivation, pandoc }:
     mkDerivation {
       pname = "pandoc-unlit";
       version = "0.1.0";
       sha256 = "0jdlfqhp7h6jsp9qq2ndnm8fs96m19cmmd5rnjpqb76ilg6kn7l9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ pandoc ];
       description = "Literate Haskell support for GitHub's Markdown flavor";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pango" = callPackage
    ({ mkDerivation, cairo, glib, gtk2hs-buildtools, libc, mtl, pango
     , pkgconfig, text
     }:
     mkDerivation {
       pname = "pango";
       version = "0.13.0.4";
       sha256 = "1fglwywac36abpjjpgdsk62f4sndgr5nf29fmana0yac7hxsm1sq";
       buildDepends = [ cairo glib mtl text ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ libc pkgconfig ];
       pkgconfigDepends = [ cairo pango ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Pango text rendering engine";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) cairo pango; };

  "papillon" = callPackage
    ({ mkDerivation, filepath, monads-tf, transformers }:
     mkDerivation {
       pname = "papillon";
       version = "0.1.0.0";
       sha256 = "02j3bydxzs39ljfnx1sgsn9ppw1cah81dfbws57yp9vdrcyq2ipf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath monads-tf transformers ];
       homepage = "https://skami.iocikun.jp/haskell/packages/papillon";
       description = "packrat parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pappy" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pappy";
       version = "0.1.0.2";
       sha256 = "14f4mv9xgqwmmyy3fg1miqdmi7a6bs3hixqk4z46r0pz44w6nlxd";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://pdos.csail.mit.edu/~baford/packrat/thesis/";
       description = "Packrat parsing; linear-time parsers for grammars in TDPL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "para" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "para";
       version = "1.1";
       sha256 = "0l5abmqi548s10f87m124ld4hhphhl1szljyc04a13fah4dsqjbh";
       description = "Text paragraph formatting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "paragon" = callPackage
    ({ mkDerivation, alex, cpphs, filepath, haskell-src-meta, parsec
     , syb, th-lift, uniplate
     }:
     mkDerivation {
       pname = "paragon";
       version = "0.1.28";
       sha256 = "1iz7fg7ziq3ffq1wac0z2m151rn4xmvd5kig04fdw1cy0x487c9c";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cpphs filepath haskell-src-meta parsec syb th-lift uniplate
       ];
       buildTools = [ alex ];
       description = "Paragon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parallel" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "parallel";
       version = "3.2.0.5";
       sha256 = "16hhsi8pr29qqg9ssks0y9j0vmnvpyy1qk46s0c0vgj3pyzl38mm";
       buildDepends = [ deepseq ];
       description = "Parallel programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parallel-io" = callPackage
    ({ mkDerivation, extensible-exceptions, random }:
     mkDerivation {
       pname = "parallel-io";
       version = "0.3.3";
       sha256 = "0i86x3bf8pjlg6mdg1zg5lcrjpg75pbqs2mrgrbp4z4bkcmw051s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ extensible-exceptions random ];
       homepage = "http://batterseapower.github.com/parallel-io";
       description = "Combinators for executing IO actions in parallel on a thread pool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parallel-tasks" = callPackage
    ({ mkDerivation, cereal, deepseq, here, stm, time, transformers
     , vector, vector-algorithms
     }:
     mkDerivation {
       pname = "parallel-tasks";
       version = "4.0.1.0";
       sha256 = "0cng14pivk0cw3xax0z4j59s0vpbkm7hjycsb3cif6pfjbypsm3x";
       buildDepends = [
         cereal deepseq here stm time transformers vector vector-algorithms
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parallel-tree-search" = callPackage
    ({ mkDerivation, parallel, tree-monad }:
     mkDerivation {
       pname = "parallel-tree-search";
       version = "0.4.1";
       sha256 = "1x2k649q6gqz9z16vwg1j59ajf2wp59lfwb65g8819fz4rwimncr";
       buildDepends = [ parallel tree-monad ];
       homepage = "http://github.com/sebfisch/parallel-tree-search";
       description = "Parallel Tree Search";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "parameterized-data" = callPackage
    ({ mkDerivation, type-level }:
     mkDerivation {
       pname = "parameterized-data";
       version = "0.1.5";
       sha256 = "1zcfpapbgmzfrrwn8bq829scb89b52p1567xaw45d77z3hw24cq1";
       buildDepends = [ type-level ];
       homepage = "http://code.haskell.org/parameterized-data";
       description = "Parameterized data library implementing lightweight dependent types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parco" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "parco";
       version = "0.1";
       sha256 = "0598hz6zqcn4lh5y3vr54z4jh4ampxnh8rq29k6p5vnmrpvn4lq4";
       buildDepends = [ mtl ];
       description = "Generalised parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parco-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, mtl, parco }:
     mkDerivation {
       pname = "parco-attoparsec";
       version = "0.1";
       sha256 = "0bc2gyvc1i3l3p702zs6hfkab7fmc7li5kh4mdzy3a91gzgsl3jh";
       buildDepends = [ attoparsec mtl parco ];
       description = "Generalised parser combinators - Attoparsec interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parco-parsec" = callPackage
    ({ mkDerivation, mtl, parco, parsec }:
     mkDerivation {
       pname = "parco-parsec";
       version = "0.1";
       sha256 = "0m3dsjay3av4y0v4j76wxybmk4mkjdhqq81w1wsfr173d4blgxf3";
       buildDepends = [ mtl parco parsec ];
       description = "Generalised parser combinators - Parsec interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parcom-lib" = callPackage
    ({ mkDerivation, mtl, text, transformers, utf8-string, word8 }:
     mkDerivation {
       pname = "parcom-lib";
       version = "0.8.0.2";
       sha256 = "14afqaq4r556rf1wmjd14682dph8ji2b9r4dx1mjlxyr096l84h6";
       buildDepends = [ mtl text transformers utf8-string word8 ];
       homepage = "https://bitbucket.org/tdammers/parcom-lib";
       description = "A simple parser-combinator library, a bit like Parsec but without the frills";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parconc-examples" = callPackage
    ({ mkDerivation, abstract-par, accelerate, accelerate-io, async
     , binary, deepseq, distributed-process
     , distributed-process-simplelocalnet, distributed-static, fclabels
     , filepath, HTTP, monad-par, network, normaldistribution, parallel
     , random, repa, stm, time, transformers, utf8-string, vector, xml
     }:
     mkDerivation {
       pname = "parconc-examples";
       version = "0.3.4";
       sha256 = "1i8kkjak3byzypaiqi7iavhswmvs98cvcrakdxpd8cm52gj6xk2d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         abstract-par accelerate accelerate-io async binary deepseq
         distributed-process distributed-process-simplelocalnet
         distributed-static fclabels filepath HTTP monad-par network
         normaldistribution parallel random repa stm time transformers
         utf8-string vector xml
       ];
       description = "Examples to accompany the book \"Parallel and Concurrent Programming in Haskell\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parport" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "parport";
       version = "0.0.0";
       sha256 = "1d4fq67179n6flmi4ll0341cnnx6p7v44sj5xkk5vknm7qv1p5nx";
       description = "Simply interfacing the parallel port on linux";
       license = "GPL";
     }) {};

  "parse-dimacs" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "parse-dimacs";
       version = "1.3";
       sha256 = "0amh3h49xi65kx8l34cy5jkai1f0d9l1qxp4937f3cjf7afif0pj";
       buildDepends = [ parsec ];
       description = "DIMACS CNF parser library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parse-help" = callPackage
    ({ mkDerivation, attoparsec, cmdargs, data-default, file-location
     , text, th-lift
     }:
     mkDerivation {
       pname = "parse-help";
       version = "0.0";
       sha256 = "1vy7v49nh60gkb7vsig87hv11cxn19xs2jjvd0xnnhdz0zm4z7yf";
       buildDepends = [
         attoparsec data-default file-location text th-lift
       ];
       testDepends = [ cmdargs ];
       homepage = "http://github.com/gregwebs/cmdargs-help";
       description = "generate command line arguments from a --help output";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parseargs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "parseargs";
       version = "0.1.5.2";
       sha256 = "0pzw7w1kr2rv6ffqgn93rypn37wy2r5k01p3y5256laaplm575am";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/BartMassey/parseargs";
       description = "Command-line argument parsing library for Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec" = callPackage
    ({ mkDerivation, HUnit, mtl, test-framework, test-framework-hunit
     , text
     }:
     mkDerivation {
       pname = "parsec";
       version = "3.1.7";
       sha256 = "12h7n367gaw9ifd19yd3ppi4j6kghf7rryacl0ips0fwlxw1x8wa";
       buildDepends = [ mtl text ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "http://www.cs.uu.nl/~daan/parsec.html";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec-extra" = callPackage
    ({ mkDerivation, monads-tf, parsec, transformers }:
     mkDerivation {
       pname = "parsec-extra";
       version = "0.1.0.5";
       sha256 = "0x5lpkly8z26ygp0k8ddkybgmfi5n2vnf6sv3sjn3xm531xf6qy4";
       buildDepends = [ monads-tf parsec transformers ];
       description = "Some miscellaneous basic string parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec-numbers" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "parsec-numbers";
       version = "0.1.0";
       sha256 = "1gzy4v3r02kvdxvgg1nj83mmb6aph2v4ilf9c7y6nbvi2x49l0bp";
       buildDepends = [ parsec ];
       description = "Utilities for parsing numbers from strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec-parsers" = callPackage
    ({ mkDerivation, doctest, filepath, parsec, parsers }:
     mkDerivation {
       pname = "parsec-parsers";
       version = "0.2";
       sha256 = "1knmcciyq07vp06s3xh4hwz654n017863dh9hdp1mwm57vc43s3j";
       buildDepends = [ parsec parsers ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/parsec-parsers/";
       description = "Parsing instances for Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec-permutation" = callPackage
    ({ mkDerivation, parsec, QuickCheck }:
     mkDerivation {
       pname = "parsec-permutation";
       version = "0.1.2.0";
       sha256 = "0yfdgvw093kk5id9h6b566zniss26kw6rxnvsni6dgr4knzyx1xi";
       buildDepends = [ parsec ];
       testDepends = [ parsec QuickCheck ];
       description = "Applicative permutation parser for Parsec intended as a replacement for Text.Parsec.Perm.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec-tagsoup" = callPackage
    ({ mkDerivation, parsec, tagsoup }:
     mkDerivation {
       pname = "parsec-tagsoup";
       version = "0.1";
       sha256 = "1pzspf5fimjlki5fn3lxz1kdpd9pf2ww8z9sf08zaiyfp4ms15n1";
       buildDepends = [ parsec tagsoup ];
       description = "Parsec parsers for Tagsoup tag streams";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "parsec-utils" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "parsec-utils";
       version = "0.1.0.0";
       sha256 = "0pfdl9zsdzxcbjh37234djcbg6sdhqzx3fnin0b55hxn78k26ivi";
       buildDepends = [ parsec ];
       description = "Utility functions and combinators for Text.Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec1" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "parsec1";
       version = "1.0.0.5";
       sha256 = "1nrmq1ihyir49sppqxffccqcc2lc4sik8ffxdwa1agcia5izjs4d";
       homepage = "http://www.cs.uu.nl/~daan/parsec.html";
       description = "Portable monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec2" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "parsec2";
       version = "1.0.0";
       sha256 = "0iq5b5d0pdm49qnigss29vnxj3yjqa5rllp29dxl8df6393k6sk9";
       homepage = "http://www.cs.uu.nl/~daan/parsec.html";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec3" = callPackage
    ({ mkDerivation, mtl, text }:
     mkDerivation {
       pname = "parsec3";
       version = "1.0.0.9";
       sha256 = "0k1gg1dqaiqrhfxkyfihd8zn6n069a3px8qfdhdv2aym27gcdnnh";
       buildDepends = [ mtl text ];
       homepage = "http://www.cs.uu.nl/~daan/parsec.html";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsec3-numbers" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "parsec3-numbers";
       version = "0.1.0";
       sha256 = "0i7fvbhvvmf5nld51kv9v0vpb42dlnpivxcl7ll0zwa3gzks2cm5";
       buildDepends = [ parsec ];
       description = "Utilities for parsing numbers from Char sequences";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsedate" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "parsedate";
       version = "3000.0.0";
       sha256 = "0gsylvm8srddmh3g3ysjgqqmgp0ddg6pdi2sz15v6nrvsqfabiip";
       buildDepends = [ parsec ];
       homepage = "http://www.cs.chalmers.se/~bringert/darcs/parsedate/doc/";
       description = "Data and time parsing for CalendarTime";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsek" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "parsek";
       version = "1.0.1.2";
       sha256 = "0ybh76cx5y73ywhlv4g2z74x1mvg5n2rxl045mscs6dwcyw9vhbd";
       description = "Parallel Parsing Processes";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "parsely" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "parsely";
       version = "0.1";
       sha256 = "16sg32qs1kq184wk6d83z20b9firh1kjmysqwd2aqaiyq37zjyyb";
       buildDepends = [ mtl parsec ];
       homepage = "http://naesten.dyndns.org:8080/repos/parsely";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parser-helper" = callPackage
    ({ mkDerivation, aeson, haskell-src-exts, text }:
     mkDerivation {
       pname = "parser-helper";
       version = "0.1.0.0";
       sha256 = "0cvdvphxlbyv5l9q5yc4b4kb59ghar2pmqx8pk387ffgz71r7ppb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson haskell-src-exts text ];
       description = "Prints Haskell parse trees in JSON";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "parsergen" = callPackage
    ({ mkDerivation, filepath, HUnit, parsec, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "parsergen";
       version = "0.2.0.7";
       sha256 = "01yx4pa5x87nqz8k999jr7bnyfkjlgk660c53xkj5ipcvl4b9mfi";
       buildDepends = [ filepath parsec ];
       testDepends = [
         filepath HUnit parsec QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "TH parser generator for splitting bytestring into fixed-width fields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsers" = callPackage
    ({ mkDerivation, attoparsec, charset, doctest, filepath, parsec
     , QuickCheck, quickcheck-instances, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "parsers";
       version = "0.12.1.1";
       sha256 = "1yx75xbmg3lms0hj79r5w9fl81g5cbsm842lijhd9jnnbli2mzfw";
       buildDepends = [
         attoparsec charset parsec text transformers unordered-containers
       ];
       testDepends = [
         attoparsec doctest filepath parsec QuickCheck quickcheck-instances
       ];
       homepage = "http://github.com/ekmett/parsers/";
       description = "Parsing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsestar" = callPackage
    ({ mkDerivation, binary, bytestring-mmap, bytestring-nums
     , bytestring-show, deepseq, derive, happy, mtl, zlib
     }:
     mkDerivation {
       pname = "parsestar";
       version = "1.5";
       sha256 = "0prbn7vi2bp66x4fs5cm8lz9qv4d1kpcd20mf24zwpa9siwyf4aq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary bytestring-mmap bytestring-nums bytestring-show deepseq
         derive mtl zlib
       ];
       buildTools = [ happy ];
       description = "NMR-STAR file format parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "parsimony" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "parsimony";
       version = "1.3";
       sha256 = "0vbayvk989m85qfxxls74rn0v8ylb5l7lywp30sw2wybvi4r08lg";
       buildDepends = [ text ];
       description = "Monadic parser combinators derived from Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "partial" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "partial";
       version = "0.1.0.0";
       sha256 = "0ybh0yz68gawbfswk1s498asc1z7qw6b8qys7rasw5i5iw6vjvr8";
       editedCabalFile = "0wp1cqv9n9ff4wlxk7q17m0vd1dfh8wxljmmdc01l41gzc6bp77l";
       homepage = "https://github.com/paf31/partial";
       description = "A nullary type class for partial functions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "partial-handler" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "partial-handler";
       version = "0.1.0";
       sha256 = "07dhsm2r89iviz481r9wxw0scq40dgfzw0mi6klky78xn8r9x4ds";
       homepage = "https://github.com/nikita-volkov/partial-handler";
       description = "A composable exception handler";
       license = stdenv.lib.licenses.mit;
     }) {};

  "partial-isomorphisms" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "partial-isomorphisms";
       version = "0.2";
       sha256 = "0wmlx1dp7i9rp3s5028gvqa7z0g1dkzlyd134kh04s1lx2hb94px";
       homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
       description = "Partial isomorphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "partial-lens" = callPackage
    ({ mkDerivation, comonad-transformers, data-lens, transformers }:
     mkDerivation {
       pname = "partial-lens";
       version = "0.0.1";
       sha256 = "0s7p69fl1a3q4x2n9hf4540dcxjxjsj4knf2nal3wl1djh067ja8";
       buildDepends = [ comonad-transformers data-lens transformers ];
       description = "Haskell 98 Partial Lenses";
       license = stdenv.lib.licenses.mit;
     }) {};

  "partial-uri" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "partial-uri";
       version = "0.1.1";
       sha256 = "1xlv6mqxwm01n774gbk6d47jlp1m6ayajgr5kf4vffbm9205igdz";
       buildDepends = [ network ];
       homepage = "https://github.com/singpolyma/partial-uri";
       description = "Datatype for passing around unresolved URIs";
       license = "unknown";
     }) {};

  "partly" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base64-bytestring, binary
     , optparse-applicative, QuickCheck, vector
     }:
     mkDerivation {
       pname = "partly";
       version = "1.0.0.2";
       sha256 = "0s5cr0ysxv74dlziyf2ga29wawwlikqgb2njv8g1f1rb8i5n97gv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty base64-bytestring binary optparse-applicative
         vector
       ];
       testDepends = [ aeson base64-bytestring binary QuickCheck vector ];
       homepage = "https://github.com/startling/partly";
       description = "Inspect, create, and alter MBRs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "passage" = callPackage
    ({ mkDerivation, filepath, GraphSCC, monadLib, mwc-random
     , primitive, random
     }:
     mkDerivation {
       pname = "passage";
       version = "0.1";
       sha256 = "11qrm27a1fn8p8z0q1400nd30sblm8pcn6znz4syg9jkmqhpn8ig";
       buildDepends = [
         filepath GraphSCC monadLib mwc-random primitive random
       ];
       description = "Parallel code generation for hierarchical Bayesian modeling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "passwords" = callPackage
    ({ mkDerivation, MonadRandom, random }:
     mkDerivation {
       pname = "passwords";
       version = "0.1.0.5";
       sha256 = "0m0ks6wpj800fxqry7gz69ki9bfpnix4zfqrc3sca2k88yl53miv";
       buildDepends = [ MonadRandom random ];
       description = "Password generation/validation library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pastis" = callPackage
    ({ mkDerivation, HTTP, network }:
     mkDerivation {
       pname = "pastis";
       version = "0.1.2";
       sha256 = "1425gzss5maqzrphrvvsw60lkapwg3wfjx10c59qkylx63k5ixjl";
       buildDepends = [ HTTP network ];
       description = "Interface to the past.is URL shortening service";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pasty" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "pasty";
       version = "0.1";
       sha256 = "12pmqcpqa6gjph40w4ga53ij8b989igaf3r6jwxng67kmddkq22z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://github.com/markusle/pasty/tree/master";
       description = "A simple command line pasting utility";
       license = "GPL";
     }) {};

  "patch-combinators" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "patch-combinators";
       version = "0.2.2";
       sha256 = "007bxr6xfqjmbx4b9k3n3qw7jmrn298v8cqxvycfhy5924l9jyi6";
       description = "A library for patching functions and data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "patch-image" = callPackage
    ({ mkDerivation, accelerate, accelerate-arithmetic, accelerate-cuda
     , accelerate-fft, accelerate-io, accelerate-utility, Cabal
     , filepath, gnuplot, hmatrix, JuicyPixels, utility-ht, vector
     }:
     mkDerivation {
       pname = "patch-image";
       version = "0.1.0.1";
       sha256 = "0ls3dlwgki483l1raaqb247by0kpzvqc54g1gmvr71zfgbfxrjl2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         accelerate accelerate-arithmetic accelerate-cuda accelerate-fft
         accelerate-io accelerate-utility Cabal filepath gnuplot hmatrix
         JuicyPixels utility-ht vector
       ];
       homepage = "http://code.haskell.org/~thielema/patch-image/";
       description = "Compose a big image from overlapping parts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "path-pieces" = callPackage
    ({ mkDerivation, hspec, HUnit, QuickCheck, text, time }:
     mkDerivation {
       pname = "path-pieces";
       version = "0.1.4";
       sha256 = "1fxhp4bk88km7z1rdpify7l38li5k21qxw3vgcmq9b6bblvz6y2v";
       buildDepends = [ text time ];
       testDepends = [ hspec HUnit QuickCheck text ];
       description = "Components of paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pathfindingcore" = callPackage
    ({ mkDerivation, HUnit, split, tasty, tasty-hunit }:
     mkDerivation {
       pname = "pathfindingcore";
       version = "1.2";
       sha256 = "0x2bw79ym5rndhy5qd50gqv6fkqvp2zby4af2d5gdvsbm9fhv6c8";
       buildDepends = [ split ];
       testDepends = [ HUnit tasty tasty-hunit ];
       homepage = "http://github.com/TheBizzle";
       description = "A toy pathfinding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pathtype" = callPackage
    ({ mkDerivation, QuickCheck, time }:
     mkDerivation {
       pname = "pathtype";
       version = "0.5.4";
       sha256 = "1ns5q3nrkl99xp4mrmk8wpvb9qzyvnw5cyjwh5rh76ykm2d5dbg7";
       buildDepends = [ QuickCheck time ];
       homepage = "http://code.haskell.org/pathtype";
       description = "Type-safe replacement for System.FilePath etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "patience" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "patience";
       version = "0.1.1";
       sha256 = "0qyv20gqy9pb1acy700ahv70lc6vprcwb26cc7fcpcs4scsc7irm";
       description = "Patience diff and longest increasing subsequence";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "patronscraper" = callPackage
    ({ mkDerivation, HandsomeSoup, hxt }:
     mkDerivation {
       pname = "patronscraper";
       version = "0.0.0.0";
       sha256 = "1c45cgp3af04b0r72lbka8rzfar09d811i2im13wd5b9jfw5rzvp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HandsomeSoup hxt ];
       description = "A webpage scraper for Patreon which dumps a list of patrons to a text file";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pattern-arrows" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "pattern-arrows";
       version = "0.0.2";
       sha256 = "13q7bj19hd60rnjfc05wxlyck8llxy11z3mns8kxg197wxrdkhkg";
       buildDepends = [ mtl ];
       homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
       description = "Arrows for Pretty Printing";
       license = stdenv.lib.licenses.mit;
     }) {};

  "patterns" = callPackage
    ({ mkDerivation, conduit, mtl, time, utf8-string, zeromq-haskell }:
     mkDerivation {
       pname = "patterns";
       version = "0.1.1";
       sha256 = "176si32zbrklf7wsspg0qdswd85ah0gl9k25ylx9qi2rr1vp18pv";
       buildDepends = [ conduit mtl time utf8-string zeromq-haskell ];
       homepage = "http://github.com/toschoo/mom";
       description = "Common patterns in message-oriented applications";
       license = "LGPL";
     }) {};

  "paymill" = callPackage
    ({ mkDerivation, hspec }:
     mkDerivation {
       pname = "paymill";
       version = "0.0.0";
       sha256 = "1gw3mxh766wf5anyn84qcf8nn96fzd1ibcjg55bk9b1yw6dc1va0";
       testDepends = [ hspec ];
       description = "This is an unofficial client for the Paymill API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "paypal-api" = callPackage
    ({ mkDerivation, conduit, failure, http-conduit, http-types, mtl
     , text, time, wai
     }:
     mkDerivation {
       pname = "paypal-api";
       version = "0.2";
       sha256 = "0im96yxvbb78sb0b83yypcwsa27gnjbjxbfki5rdnpgbf2yr8k9h";
       buildDepends = [
         conduit failure http-conduit http-types mtl text time wai
       ];
       homepage = "http://projects.haskell.org/paypal-api/";
       description = "PayPal API, currently supporting \"ButtonManager\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pb" = callPackage
    ({ mkDerivation, HTTP, network }:
     mkDerivation {
       pname = "pb";
       version = "0.1.0";
       sha256 = "03cb5diy7wvcd0gm09r4172mck0n4v5hxyc622r8k3phzvzq9zdf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP network ];
       description = "pastebin command line application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pbc4hs" = callPackage
    ({ mkDerivation, hslua, string-qq }:
     mkDerivation {
       pname = "pbc4hs";
       version = "0.1.1.5";
       sha256 = "16dki82d9x6rpkbax090ax8ynwjxv31cvpzpy51ynq83kjg3v2z9";
       buildDepends = [ hslua string-qq ];
       homepage = "https://github.com/DavidFeng/pbc4hs";
       description = "pbc for HsLua";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pbkdf" = callPackage
    ({ mkDerivation, binary, byteable, bytedump, cryptohash
     , utf8-string
     }:
     mkDerivation {
       pname = "pbkdf";
       version = "1.1.1.1";
       sha256 = "1nbn8kan43i00g23g8aljxjpaxm9q1qhzxxdgks0mc4mr1f7bifx";
       buildDepends = [ binary byteable bytedump cryptohash utf8-string ];
       testDepends = [ binary byteable bytedump cryptohash utf8-string ];
       homepage = "https://github.com/cdornan/pbkdf";
       description = "Haskell implementation of the PBKDF functions from RFC-2898";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcap" = callPackage
    ({ mkDerivation, libpcap, network, time }:
     mkDerivation {
       pname = "pcap";
       version = "0.4.5.2";
       sha256 = "0pydw62qqw61sxfd8x9vvwgpgl3zp6mqv8rm4c825ymzyipjxsg7";
       buildDepends = [ network time ];
       extraLibraries = [ libpcap ];
       homepage = "https://github.com/bos/pcap";
       description = "A system-independent interface for user-level packet capture";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcap-conduit" = callPackage
    ({ mkDerivation, conduit, pcap, transformers }:
     mkDerivation {
       pname = "pcap-conduit";
       version = "0.1";
       sha256 = "07a6cwaq668a948njjybj9clbswmhz88xrwjkb42jg9gm1nh46kz";
       buildDepends = [ conduit pcap transformers ];
       homepage = "http://github.com/thoughtpolice/pcap-conduit";
       description = "Conduit <-> libpcap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcap-enumerator" = callPackage
    ({ mkDerivation, enumerator, pcap, transformers }:
     mkDerivation {
       pname = "pcap-enumerator";
       version = "0.5";
       sha256 = "0v7ar3jbs54ibhrbbzmvajc7pc8h8dv56wr77w4vsbyz6xq4sqdb";
       buildDepends = [ enumerator pcap transformers ];
       homepage = "http://github.com/cutsea110/pcap-enumerator";
       description = "Convert a pcap into an enumerator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcd-loader" = callPackage
    ({ mkDerivation, attoparsec, binary, deepseq, HUnit, lens, linear
     , mtl, string-qq, test-framework, test-framework-hunit, text
     , vector
     }:
     mkDerivation {
       pname = "pcd-loader";
       version = "0.3.0.1";
       sha256 = "1nwyv5c0x262b4j73560bnxhab07ky0cba8nrzdbmmwl2g72c8m7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec binary deepseq lens linear mtl text vector
       ];
       testDepends = [
         HUnit lens string-qq test-framework test-framework-hunit text
         vector
       ];
       description = "PCD file loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcg-random" = callPackage
    ({ mkDerivation, doctest, primitive, random, time }:
     mkDerivation {
       pname = "pcg-random";
       version = "0.1.0.0";
       sha256 = "04l33f4z9hys2aydai1qml2y7izv1d5ig60mgmwifr8mk68gc1lg";
       buildDepends = [ primitive random time ];
       testDepends = [ doctest ];
       homepage = "http://github.com/cchalmers/pcg-random";
       description = "Haskell bindings to the PCG random number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcre-less" = callPackage
    ({ mkDerivation, regex-pcre }:
     mkDerivation {
       pname = "pcre-less";
       version = "0.2.1";
       sha256 = "1widnpz4r2az96lwxrq21vm21j9j7b4sn86kqn2iih3xs2dpwqf9";
       buildDepends = [ regex-pcre ];
       description = "Nicer interface to regex-pcre";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcre-light" = callPackage
    ({ mkDerivation, pcre }:
     mkDerivation {
       pname = "pcre-light";
       version = "0.4.0.3";
       sha256 = "0l1df2sk5qwf424bvb8mbdkr2xjg43fi92n5r22yd7vm1zz0jqvf";
       extraLibraries = [ pcre ];
       homepage = "https://github.com/Daniel-Diaz/pcre-light";
       description = "A small, efficient and portable regex library for Perl 5 compatible regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcre-light-extra" = callPackage
    ({ mkDerivation, pcre-light }:
     mkDerivation {
       pname = "pcre-light-extra";
       version = "0.0.0";
       sha256 = "1kjh36gglszd16rsh0rm2q5fxjlfipzld4hw0l2r23y0flbqkbvx";
       buildDepends = [ pcre-light ];
       homepage = "http://github.com/urso/pcre-light-extra";
       description = "pcre-light extra functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pcre-utils" = callPackage
    ({ mkDerivation, attoparsec, HUnit, mtl, regex-pcre-builtin, vector
     }:
     mkDerivation {
       pname = "pcre-utils";
       version = "0.1.4";
       sha256 = "1kvasljlrfmlskqzzglm6swkfmfrqycv0j0hswck0lcfzd8nxkna";
       buildDepends = [ attoparsec mtl regex-pcre-builtin vector ];
       testDepends = [ HUnit regex-pcre-builtin ];
       description = "Perl-like substitute and split for PCRE regexps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pdf-toolbox-content" = callPackage
    ({ mkDerivation, attoparsec, base16-bytestring, io-streams
     , pdf-toolbox-core, text
     }:
     mkDerivation {
       pname = "pdf-toolbox-content";
       version = "0.0.3.1";
       sha256 = "08icj65l6hjl2r07ipr6c65n7ny771zq714bswhv2q0iwdigz1iz";
       buildDepends = [
         attoparsec base16-bytestring io-streams pdf-toolbox-core text
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pdf-toolbox-core" = callPackage
    ({ mkDerivation, attoparsec, errors, io-streams, scientific
     , transformers, zlib-bindings
     }:
     mkDerivation {
       pname = "pdf-toolbox-core";
       version = "0.0.3.0";
       sha256 = "1d9c275gdr2byri6nbabh2ap6lnq0wnfqfqq76fnb0fj92ydmxc6";
       buildDepends = [
         attoparsec errors io-streams scientific transformers zlib-bindings
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pdf-toolbox-document" = callPackage
    ({ mkDerivation, cipher-rc4, cryptohash, io-streams
     , pdf-toolbox-content, pdf-toolbox-core, text, transformers
     }:
     mkDerivation {
       pname = "pdf-toolbox-document";
       version = "0.0.4.0";
       sha256 = "1fjchlknkxxgy6rm2q4f9fhy53ip06kzvcv5876gxswdchi6kxwa";
       buildDepends = [
         cipher-rc4 cryptohash io-streams pdf-toolbox-content
         pdf-toolbox-core text transformers
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pdf-toolbox-viewer" = callPackage
    ({ mkDerivation, cairo, filepath, gtk, io-streams
     , pdf-toolbox-content, pdf-toolbox-document, random, text
     , transformers
     }:
     mkDerivation {
       pname = "pdf-toolbox-viewer";
       version = "0.0.3.0";
       sha256 = "173hc11aiy6zzsz624samxif953nl5gyjlxk8zy0c7a0yaxha1pp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo filepath gtk io-streams pdf-toolbox-content
         pdf-toolbox-document random text transformers
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "Simple pdf viewer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pdf2line" = callPackage
    ({ mkDerivation, binary, filepath, FindBin }:
     mkDerivation {
       pname = "pdf2line";
       version = "0.0.1";
       sha256 = "07a9ddr4j5f4vhv1md32f0d3mwhx5p9lw0bwjikfhhqq49jvrpa5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary filepath FindBin ];
       description = "Simple command-line utility to convert PDF into text";
       license = "GPL";
     }) {};

  "pdfinfo" = callPackage
    ({ mkDerivation, mtl, process-extras, text, time }:
     mkDerivation {
       pname = "pdfinfo";
       version = "1.5.1";
       sha256 = "1xhznh9pqx4yvzfnypjkmgrsv5z1949vnrix101y6iy0y1zk4r5x";
       buildDepends = [ mtl process-extras text time ];
       homepage = "https://github.com/chrisdone/pdfinfo";
       description = "Wrapper around the pdfinfo command";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pdfsplit" = callPackage
    ({ mkDerivation, pdfinfo, temporary }:
     mkDerivation {
       pname = "pdfsplit";
       version = "0.0.1";
       sha256 = "00bnbfy3awl9vd9vvmh6ylfn2d882r3r1am6b6788b78lvznypxa";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ pdfinfo temporary ];
       homepage = "http://dmwit.com/pdfsplit";
       description = "split two-column PDFs, so there is one column per page";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pdynload" = callPackage
    ({ mkDerivation, filepath, ghc-paths }:
     mkDerivation {
       pname = "pdynload";
       version = "0.0.3";
       sha256 = "0949nzk85fp9vs6v90cd6kxgg52pcaz2mfahv7416qpgp65hpw93";
       buildDepends = [ filepath ghc-paths ];
       description = "pdynload is polymorphic dynamic linking library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "peakachu" = callPackage
    ({ mkDerivation, derive, GLUT, List, time, TypeCompose }:
     mkDerivation {
       pname = "peakachu";
       version = "0.3.0";
       sha256 = "0awj571rgcn69vl907b26j68azy7kyd3kki014lsfsngql9cp1pq";
       buildDepends = [ derive GLUT List time TypeCompose ];
       description = "Experiemental library for composable interactive programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "peano-inf" = callPackage
    ({ mkDerivation, lazysmallcheck }:
     mkDerivation {
       pname = "peano-inf";
       version = "0.6.5";
       sha256 = "1w8rvlckqcy41ciq2csb2nf83l969nwvvrrlm0x1yzf5i6ibg33b";
       buildDepends = [ lazysmallcheck ];
       description = "Lazy Peano numbers including observable infinity value";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pec" = callPackage
    ({ mkDerivation, Cabal, cmdargs, deepseq, derive, filepath, grm
     , mtl, shake, syb, uniplate, wl-pprint
     }:
     mkDerivation {
       pname = "pec";
       version = "0.2.3";
       sha256 = "110i4y93gm6b76and12vra8nr5q2dz20dvgpbpdgic3sv2ds16k0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal cmdargs deepseq derive filepath grm mtl shake syb uniplate
         wl-pprint
       ];
       description = "pec embedded compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pecoff" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "pecoff";
       version = "0.11";
       sha256 = "0vb22jfl309k4a6b80015cyrs5cxls7vyf8faz7lrm7i0vj0vz1q";
       buildDepends = [ binary ];
       description = "Parser for PE/COFF format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "peg" = callPackage
    ({ mkDerivation, filepath, haskeline, logict, mtl, parsec }:
     mkDerivation {
       pname = "peg";
       version = "0.2";
       sha256 = "0mh56nkn31dwpyrl238b06gyfwy3p7y90b9y6k639vpqkn9nnzcd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath haskeline logict mtl parsec ];
       homepage = "http://github.com/HackerFoo/peg";
       description = "a lazy non-deterministic concatenative programming language";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "peggy" = callPackage
    ({ mkDerivation, hashtables, haskell-src-meta, ListLike
     , monad-control, mtl
     }:
     mkDerivation {
       pname = "peggy";
       version = "0.3.2";
       sha256 = "1km847arc193wq6cdr38xvz1znbdmrgdyji2p9rs4j2p35rr6s6y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         hashtables haskell-src-meta ListLike monad-control mtl
       ];
       homepage = "http://tanakh.github.com/Peggy";
       description = "The Parser Generator for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pem" = callPackage
    ({ mkDerivation, base64-bytestring, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pem";
       version = "0.2.2";
       sha256 = "162sk5sg22w21wqz5qv8kx6ibxp99v5p20g3nknhm1kddk3hha1p";
       buildDepends = [ base64-bytestring mtl ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-pem";
       description = "Privacy Enhanced Mail (PEM) format reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "penn-treebank" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "penn-treebank";
       version = "0.1.0.1";
       sha256 = "12c5bzn3ac8783lny56n7rd8a1ik4ayfm1pr5v7gm7z53f7iz0qy";
       buildDepends = [ parsec ];
       description = "Tools for manipulating the Penn TreeBank";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "penny" = callPackage
    ({ mkDerivation, action-permutations, anonymous-sums, cereal
     , contravariant, either, matchers, multiarg, ofx, parsec, prednote
     , QuickCheck, rainbow, rainbox, random-shuffle, semigroups, split
     , tasty, tasty-quickcheck, text, time, transformers
     }:
     mkDerivation {
       pname = "penny";
       version = "0.32.0.10";
       sha256 = "0bzxihhi7cs8cqbnz7mf6sj12dyr267265asc010pgyffpjc22qi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         action-permutations anonymous-sums cereal contravariant either
         matchers multiarg ofx parsec prednote rainbow rainbox semigroups
         split text time transformers
       ];
       testDepends = [
         anonymous-sums parsec QuickCheck random-shuffle semigroups tasty
         tasty-quickcheck text time transformers
       ];
       homepage = "http://www.github.com/massysett/penny";
       description = "Extensible double-entry accounting system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "penny-bin" = callPackage
    ({ mkDerivation, explicit-exception, multiarg, parsec, penny-lib
     , pretty-show, semigroups, text, transformers
     }:
     mkDerivation {
       pname = "penny-bin";
       version = "0.22.0.0";
       sha256 = "0mdl8wpcy2yzscpww6vv5vhgiwy5xi0js1yxd7y4h5dmvhxsrr9l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         explicit-exception multiarg parsec penny-lib pretty-show semigroups
         text transformers
       ];
       homepage = "http://www.github.com/massysett/penny";
       description = "Deprecated - use penny package instead";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "penny-lib" = callPackage
    ({ mkDerivation, action-permutations, binary, cereal
     , explicit-exception, matchers, multiarg, ofx, parsec, prednote
     , pretty-show, rainbow, semigroups, split, text, time, transformers
     }:
     mkDerivation {
       pname = "penny-lib";
       version = "0.22.0.0";
       sha256 = "0fy671xvia7kjlcrwpsv93gsnyz5wvcajlva98ykbh7cdkf56b17";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         action-permutations binary cereal explicit-exception matchers
         multiarg ofx parsec prednote pretty-show rainbow semigroups split
         text time transformers
       ];
       homepage = "http://www.github.com/massysett/penny";
       description = "Deprecated - use penny package instead";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "peparser" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "peparser";
       version = "0.21";
       sha256 = "1qy8hghpvp9idiq4ksn55n1dpx7823s7mjfvqfgrmhj0xl1b1y54";
       buildDepends = [ binary ];
       homepage = "https://github.com/igraves/peparser-haskell";
       description = "A parser for PE object files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "perceptron" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "perceptron";
       version = "0.1.0.3";
       sha256 = "0w1vrsv43z92y6vsv9nzs2pjlqkhrxvzh53r2722530lzff34m78";
       description = "The perceptron learning algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "perdure" = callPackage
    ({ mkDerivation, binary, cognimeta-utils, collections-api
     , comonad-transformers, cryptohash, data-binary-ieee754, data-lens
     , data-lens-fd, data-lens-template, filepath, MonadRandom, mtl
     , primitive, QuickCheck, stm, strict, tagged, time, transformers
     }:
     mkDerivation {
       pname = "perdure";
       version = "0.2.1";
       sha256 = "04vj8kva5qmrf8r93xyf0qw8nx64j241pdc19s2ddvd21lq5wqkz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary cognimeta-utils collections-api comonad-transformers
         cryptohash data-binary-ieee754 data-lens data-lens-fd
         data-lens-template filepath MonadRandom mtl primitive QuickCheck
         stm strict tagged time transformers
       ];
       homepage = "https://github.com/Cognimeta/perdure";
       description = "Robust persistence for acyclic immutable data";
       license = "unknown";
     }) {};

  "perm" = callPackage
    ({ mkDerivation, catch-fd, HUnit, mtl, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "perm";
       version = "0.4.0.0";
       sha256 = "0lf6smw3m32vwrga5y671z355w0vphp3n63cfnsirk1kiz5ik5rx";
       buildDepends = [ catch-fd mtl transformers ];
       testDepends = [ HUnit mtl test-framework test-framework-hunit ];
       homepage = "https://github.com/sonyandy/perm";
       description = "permutation Applicative and Monad with many mtl instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "permutation" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "permutation";
       version = "0.5.0.4";
       sha256 = "0kl5yw1as2y8yf2ac2f6v7g8k7mzjqw5fdh18a6m3jfhjw9rcqf7";
       homepage = "https://github.com/spacekitteh/permutation";
       description = "A library for permutations and combinations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "permute" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "permute";
       version = "1.0";
       sha256 = "03g1d9h26f1id0pnaigy9xy1cv5pvzqcjrwgzn75xnnbm5c3y9ch";
       buildDepends = [ mtl ];
       description = "Generalised permutation parser combinator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistable-record" = callPackage
    ({ mkDerivation, dlist, names-th, transformers }:
     mkDerivation {
       pname = "persistable-record";
       version = "0.1.0.0";
       sha256 = "1z03rixy03zp4l4ygb9jlj4p4x5vp20r5qq39hi8vn1x37j39x26";
       buildDepends = [ dlist names-th transformers ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Binding between SQL database values and haskell records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistent" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, blaze-html
     , blaze-markup, conduit, exceptions, fast-logger, hspec
     , lifted-base, monad-control, monad-logger, mtl, path-pieces
     , resource-pool, resourcet, scientific, silently, sqlite, tagged
     , text, time, transformers, transformers-base, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "persistent";
       version = "2.1.1";
       sha256 = "0wmvjizz0zx5i9q5sh8hvsks14q6if4s0dnk63f9mw03jb8jpdd1";
       buildDepends = [
         aeson attoparsec base64-bytestring blaze-html blaze-markup conduit
         exceptions fast-logger lifted-base monad-control monad-logger mtl
         path-pieces resource-pool resourcet scientific silently tagged text
         time transformers transformers-base unordered-containers vector
       ];
       testDepends = [
         aeson attoparsec base64-bytestring blaze-html conduit hspec
         monad-control monad-logger path-pieces resourcet scientific text
         time transformers unordered-containers vector
       ];
       extraLibraries = [ sqlite ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, multi-backend data serialization";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) sqlite; };

  "persistent-cereal" = callPackage
    ({ mkDerivation, cereal, persistent, text }:
     mkDerivation {
       pname = "persistent-cereal";
       version = "0.1.0";
       sha256 = "09akf8vpkn2jskf1vf9mq96sakqzr7mfs8hhri8qlbkwx3i5nr6f";
       buildDepends = [ cereal persistent text ];
       homepage = "http://hub.darcs.net/co-dan/persistent-cereal";
       description = "Helper functions for writing Persistent instances";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "persistent-equivalence" = callPackage
    ({ mkDerivation, diffarray }:
     mkDerivation {
       pname = "persistent-equivalence";
       version = "0.3";
       sha256 = "14nn01bbwskllbccgcnwnjwzyws6vppqv4l51n6pcvhwbphn18qz";
       buildDepends = [ diffarray ];
       description = "Persistent equivalence relations (aka union-find)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistent-hssqlppp" = callPackage
    ({ mkDerivation, hssqlppp, monad-control, mtl, persistent
     , persistent-template, text, th-lift
     }:
     mkDerivation {
       pname = "persistent-hssqlppp";
       version = "0.1";
       sha256 = "1p4fpa5qlkn2jmggszzmzg0bva8r8j0x7b2bidqyzlw2i9332ba2";
       buildDepends = [
         hssqlppp monad-control mtl persistent persistent-template text
         th-lift
       ];
       description = "Declare Persistent entities using SQL SELECT query syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistent-map" = callPackage
    ({ mkDerivation, binary, EdisonAPI, EdisonCore, filepath, LRU, mtl
     , stm-io-hooks
     }:
     mkDerivation {
       pname = "persistent-map";
       version = "0.3.5";
       sha256 = "0an0j6xkxygxlvjj50fq356sc4njbniz9jzv6v2h9pihsmcckhvq";
       buildDepends = [
         binary EdisonAPI EdisonCore filepath LRU mtl stm-io-hooks
       ];
       homepage = "http://darcs.monoid.at/persistent-map";
       description = "A thread-safe (STM) persistency interface for finite map types";
       license = "LGPL";
     }) {};

  "persistent-mongoDB" = callPackage
    ({ mkDerivation, aeson, attoparsec, bson, cereal, conduit
     , monad-control, mongoDB, network, path-pieces, persistent
     , pool-conduit, resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "persistent-mongoDB";
       version = "2.1.2";
       sha256 = "0xqskvqn4lxqpya6cd1k90sqyz5wm0c9kgxa793kaak7dlyvdvf8";
       buildDepends = [
         aeson attoparsec bson cereal conduit monad-control mongoDB network
         path-pieces persistent pool-conduit resourcet text time
         transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using mongoDB";
       license = stdenv.lib.licenses.mit;
     }) {};

  "persistent-mysql" = callPackage
    ({ mkDerivation, aeson, blaze-builder, conduit, monad-control
     , monad-logger, mysql, mysql-simple, persistent, resourcet, text
     , transformers
     }:
     mkDerivation {
       pname = "persistent-mysql";
       version = "2.1.2";
       sha256 = "06i2wcrqvk216bq3853acqi6wgrdzkz3wzah231gv3yz348lr6sv";
       buildDepends = [
         aeson blaze-builder conduit monad-control monad-logger mysql
         mysql-simple persistent resourcet text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using MySQL database server";
       license = stdenv.lib.licenses.mit;
     }) {};

  "persistent-odbc" = callPackage
    ({ mkDerivation, aeson, conduit, convertible, HDBC, HDBC-odbc
     , monad-control, monad-logger, persistent, persistent-template
     , resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "persistent-odbc";
       version = "0.2.0.1";
       sha256 = "0rvcjl9p7pj0hrf0ghhj96ib2knhxnfi9nhc7cppn7gnja1x8ldp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson conduit convertible HDBC HDBC-odbc monad-control monad-logger
         persistent persistent-template resourcet text time transformers
       ];
       homepage = "https://github.com/gbwey/persistent-odbc";
       description = "Backend for the persistent library using ODBC";
       license = stdenv.lib.licenses.mit;
     }) {};

  "persistent-postgresql" = callPackage
    ({ mkDerivation, aeson, blaze-builder, conduit, monad-control
     , monad-logger, persistent, postgresql-libpq, postgresql-simple
     , resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "persistent-postgresql";
       version = "2.1.1";
       sha256 = "0mfvzd62qn7ffx6nrgkr52qzl3prjq8xkahvb6j5akb6azdmzg80";
       buildDepends = [
         aeson blaze-builder conduit monad-control monad-logger persistent
         postgresql-libpq postgresql-simple resourcet text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using postgresql";
       license = stdenv.lib.licenses.mit;
     }) {};

  "persistent-protobuf" = callPackage
    ({ mkDerivation, persistent, protocol-buffers
     , protocol-buffers-descriptor, text
     }:
     mkDerivation {
       pname = "persistent-protobuf";
       version = "0.1.5";
       sha256 = "046dpasgv6bwcm17w0z9dz4bvaa622cdb8paj7j6accmsc4rvs9z";
       buildDepends = [
         persistent protocol-buffers protocol-buffers-descriptor text
       ];
       homepage = "https://github.com/mstone/persistent-protobuf";
       description = "Template-Haskell helpers for integrating protobufs with persistent";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistent-redis" = callPackage
    ({ mkDerivation, aeson, attoparsec, binary, hedis, monad-control
     , mtl, path-pieces, persistent, persistent-template, scientific
     , text, time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "persistent-redis";
       version = "0.3.1";
       sha256 = "1djwaahabjpj01hvg9hp6ldqxjn45hp1dl84bbgvini1f6ihh2bq";
       buildDepends = [
         aeson attoparsec binary hedis monad-control mtl path-pieces
         persistent scientific text time transformers utf8-string
       ];
       testDepends = [
         aeson attoparsec binary hedis monad-control mtl path-pieces
         persistent persistent-template scientific text time transformers
         utf8-string
       ];
       description = "Backend for persistent library using Redis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistent-refs" = callPackage
    ({ mkDerivation, mtl, ref-fd, transformers }:
     mkDerivation {
       pname = "persistent-refs";
       version = "0.3";
       sha256 = "0575lg2fd5qnfb0p7y1gg2aqdg39435nkab8291x642cdz1jbg6s";
       buildDepends = [ mtl ref-fd transformers ];
       homepage = "https://github.com/acfoltzer/persistent-refs";
       description = "Haskell references backed by an IntMap for persistence and reversibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistent-sqlite" = callPackage
    ({ mkDerivation, aeson, conduit, monad-control, monad-logger
     , persistent, resourcet, text, transformers
     }:
     mkDerivation {
       pname = "persistent-sqlite";
       version = "2.1.1";
       sha256 = "1hypaixwp6q10gfwbg0xfqfw7vz9j56max5i0k1mklan6js7wy9w";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson conduit monad-control monad-logger persistent resourcet text
         transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using sqlite3";
       license = stdenv.lib.licenses.mit;
     }) {};

  "persistent-template" = callPackage
    ({ mkDerivation, aeson, hspec, monad-control, monad-logger
     , path-pieces, persistent, QuickCheck, tagged, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "persistent-template";
       version = "2.1";
       sha256 = "0rj3yqm38kg7lvj9hi4c5yaypvxj6pwb47b0kg8h2hsa0rshhrdy";
       buildDepends = [
         aeson monad-control monad-logger path-pieces persistent tagged text
         transformers unordered-containers
       ];
       testDepends = [
         aeson hspec persistent QuickCheck text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, non-relational, multi-backend persistence";
       license = stdenv.lib.licenses.mit;
     }) {};

  "persistent-vector" = callPackage
    ({ mkDerivation, deepseq, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "persistent-vector";
       version = "0.1.0.1";
       sha256 = "0a2ck5q9cz8q1hplqrqcanrvlgl001vfb8cyl7rcag2bgxlj29r4";
       buildDepends = [ deepseq ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/travitch/persistent-vector";
       description = "A persistent sequence based on array mapped tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "persistent-zookeeper" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, binary
     , conduit, hspec, hzk, monad-control, mtl, path-pieces, persistent
     , persistent-template, resource-pool, resourcet, scientific, text
     , time, transformers, transformers-base, utf8-string
     }:
     mkDerivation {
       pname = "persistent-zookeeper";
       version = "0.2.0";
       sha256 = "11s99wrxhyzyfg657dqma1v1vvdadskvrjybrya2zm8lp675ri9z";
       buildDepends = [
         aeson attoparsec base64-bytestring binary conduit hzk monad-control
         mtl path-pieces persistent persistent-template resource-pool
         resourcet scientific text time transformers transformers-base
         utf8-string
       ];
       testDepends = [
         aeson attoparsec base64-bytestring binary conduit hspec hzk
         monad-control mtl path-pieces persistent persistent-template
         resource-pool resourcet scientific text time transformers
         transformers-base utf8-string
       ];
       description = "Backend for persistent library using Zookeeper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pesca" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pesca";
       version = "4.0.1";
       sha256 = "12cwmjszbbqrd1f21jvwvp026ja3377c3p0wfrbrl34g23gnysgp";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://www.cs.chalmers.se/~aarne/pesca/";
       description = "Proof Editor for Sequent Calculus";
       license = "GPL";
     }) {};

  "peyotls" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, bytable, cipher-aes
     , crypto-numbers, crypto-pubkey, crypto-pubkey-types, crypto-random
     , cryptohash, handle-like, monad-control, monads-tf, network, pem
     , random, stm, transformers-base, word24, x509, x509-store
     , x509-validation
     }:
     mkDerivation {
       pname = "peyotls";
       version = "0.1.6.5";
       sha256 = "0dy641izw76cn1rslf7mbmbwhl5ajxjll95w4rg7pyvq2lq2qk9f";
       buildDepends = [
         asn1-encoding asn1-types bytable cipher-aes crypto-numbers
         crypto-pubkey crypto-pubkey-types crypto-random cryptohash
         handle-like monad-control monads-tf pem stm transformers-base
         word24 x509 x509-store x509-validation
       ];
       testDepends = [
         crypto-random handle-like network random stm x509 x509-store
       ];
       homepage = "https://github.com/YoshikuniJujo/peyotls/wiki";
       description = "Pretty Easy YOshikuni-made TLS library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pez" = callPackage
    ({ mkDerivation, failure, fclabels, QuickCheck, test-framework
     , test-framework-quickcheck2, thrist
     }:
     mkDerivation {
       pname = "pez";
       version = "0.1.0";
       sha256 = "0w2m8i1h87v9l5lhz8mdllnrx62fk3isqhw3cvnv9rf6rk3zhv74";
       buildDepends = [ failure fclabels thrist ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://brandon.si/code/pez-zipper-library-released/";
       description = "A Pretty Extraordinary Zipper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pg-harness" = callPackage
    ({ mkDerivation, async, ini, postgresql-simple, random, scotty
     , text, transformers
     }:
     mkDerivation {
       pname = "pg-harness";
       version = "0.1.0";
       sha256 = "0ds161h0pcazq1lnbf5m89vm36mwjnhxakglyb2ixg39sd5a03g1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         async ini postgresql-simple random scotty text transformers
       ];
       description = "REST service for creating temporary PostgreSQL databases";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "pgm" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "pgm";
       version = "0.1.4";
       sha256 = "1s3kch1qsxrfzk9sa4b0jn9vzjhw7dvh1sajgnnz97gl5y0gydmv";
       buildDepends = [ parsec ];
       homepage = "https://github.com/astanin/haskell-pgm";
       description = "Pure Haskell implementation of PGM image format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pgsql-simple" = callPackage
    ({ mkDerivation, attoparsec, base16-bytestring, binary
     , blaze-builder, blaze-textual, MonadCatchIO-transformers, mtl
     , network, pcre-light, text, time, utf8-string
     }:
     mkDerivation {
       pname = "pgsql-simple";
       version = "0.1.2";
       sha256 = "1z39g6bp748ya54in48vcg8z20c3skza82cv203rqy192nj01km5";
       buildDepends = [
         attoparsec base16-bytestring binary blaze-builder blaze-textual
         MonadCatchIO-transformers mtl network pcre-light text time
         utf8-string
       ];
       homepage = "https://github.com/chrisdone/pgsql-simple";
       description = "A mid-level PostgreSQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "phantom-state" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "phantom-state";
       version = "0.2.0.2";
       sha256 = "04fg0j79nkajsiw8n2yy62mwiw1r4fjy2jln5ng07h64pwyncdnm";
       buildDepends = [ transformers ];
       description = "Phantom State Transformer. Like State Monad, but without values.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "phasechange" = callPackage
    ({ mkDerivation, monad-st, primitive, vector }:
     mkDerivation {
       pname = "phasechange";
       version = "0.1";
       sha256 = "0i54myn9abrpzrs58llqgii9fhd9ns9hipnaj00dnqx2mfbg7pan";
       buildDepends = [ monad-st primitive vector ];
       homepage = "http://github.com/glehel/phasechange";
       description = "Freezing, thawing, and copy elision";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "phash" = callPackage
    ({ mkDerivation, doctest, HUnit, pHash, smallcheck, tasty
     , tasty-hunit, tasty-smallcheck
     }:
     mkDerivation {
       pname = "phash";
       version = "0.0.3";
       sha256 = "0w3c7i4n4f12nkg0bqvm568s2y1fdgaicxqr3ky80lygbz1h20hw";
       testDepends = [
         doctest HUnit pHash smallcheck tasty tasty-hunit tasty-smallcheck
       ];
       extraLibraries = [ pHash ];
       homepage = "http://github.com/michaelxavier/phash";
       description = "Haskell bindings to pHash, the open source perceptual hash library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "phone-push" = callPackage
    ({ mkDerivation, base16-bytestring, binary, conduit, convertible
     , HsOpenSSL, http-conduit, network, time, transformers
     }:
     mkDerivation {
       pname = "phone-push";
       version = "0.1.3";
       sha256 = "0ndaddj3ssrdclzigdj0q04pwpdkbmhfc3rz8j7q9f4l7iv6yshi";
       buildDepends = [
         base16-bytestring binary conduit convertible HsOpenSSL http-conduit
         network time transformers
       ];
       homepage = "https://github.com/gurgeh/haskell-phone-push";
       description = "Push notifications for Android and iOS";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "phonetic-code" = callPackage
    ({ mkDerivation, regex-compat }:
     mkDerivation {
       pname = "phonetic-code";
       version = "0.1.1.1";
       sha256 = "0pjvjqxp37n901s16ys5qq5rzblamz8izvsd1992w06bcyrs36cw";
       buildDepends = [ regex-compat ];
       homepage = "http://wiki.cs.pdx.edu/bartforge/phonetic-code";
       description = "Phonetic codes: Soundex and Phonix";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "phooey" = callPackage
    ({ mkDerivation, mtl, reactive, TypeCompose, wx, wxcore }:
     mkDerivation {
       pname = "phooey";
       version = "2.0.0.1";
       sha256 = "0aa0s7qmy78s4q1mjcnw0qiqlbmdmkmk2nbn6hkmw5fn29iq0iwj";
       buildDepends = [ mtl reactive TypeCompose wx wxcore ];
       homepage = "http://haskell.org/haskellwiki/Phooey";
       description = "Functional user interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "photoname" = callPackage
    ({ mkDerivation, exif, filepath, HUnit, mtl, parsec, regex-posix
     , time
     }:
     mkDerivation {
       pname = "photoname";
       version = "3.0.1";
       sha256 = "171vxmjzzwjzb4ixqnkwkg5d1zhswv5377hx79zj8sw68gm1h6b9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ exif filepath mtl parsec time ];
       testDepends = [ exif filepath HUnit mtl parsec regex-posix time ];
       homepage = "http://ui3.info/d/proj/photoname.html";
       description = "Rename JPEG photo files based on shoot date";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "phraskell" = callPackage
    ({ mkDerivation, mtl, SDL, transformers }:
     mkDerivation {
       pname = "phraskell";
       version = "0.1.4";
       sha256 = "1bczvnmbgc7qcpmlhrnmql4yn2grry2ys7hcg06sqzwr5qhl1k9k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl SDL transformers ];
       homepage = "https://github.com/skypers/phraskell";
       description = "A fractal viewer";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "phybin" = callPackage
    ({ mkDerivation, async, fgl, filepath, graphviz
     , hierarchical-clustering, HUnit, parsec, prettyclass, split
     , test-framework, test-framework-hunit, test-framework-th, text
     , time, vector
     }:
     mkDerivation {
       pname = "phybin";
       version = "0.3";
       sha256 = "1v6zcyfjnkgwc9kffi7lf15qb3j4wq2kclx26i1k9ssf6h7cs5g9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async fgl filepath graphviz hierarchical-clustering HUnit parsec
         prettyclass split text time vector
       ];
       testDepends = [
         async fgl filepath graphviz hierarchical-clustering HUnit parsec
         prettyclass split test-framework test-framework-hunit
         test-framework-th text time vector
       ];
       homepage = "http://www.cs.indiana.edu/~rrnewton/projects/phybin/";
       description = "Utility for clustering phylogenetic trees in Newick format based on Robinson-Foulds distance";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pi-calculus" = callPackage
    ({ mkDerivation, AES, binary, byteable, cryptohash, HTTP
     , io-streams, mtl, network, parsec, RSA, transformers
     }:
     mkDerivation {
       pname = "pi-calculus";
       version = "0.0.5";
       sha256 = "1w5krkss2qzzcqqmgqs369p5xnqyrm76vvsxd7mlhcdqaaj06n2q";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         AES binary byteable cryptohash HTTP io-streams mtl network parsec
         RSA transformers
       ];
       homepage = "https://github.com/renzyq19/pi-calculus";
       description = "Applied pi-calculus interpreter";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "pianola" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-iteratee, comonad
     , comonad-transformers, either, errors, filepath, free, iteratee
     , logict, msgpack, mtl, network, pipes, streams, text, transformers
     }:
     mkDerivation {
       pname = "pianola";
       version = "0.1.1";
       sha256 = "02y630yskx139l5yii45rf47w2a2v3x0pad59ac9qzjalv7s68aq";
       buildDepends = [
         attoparsec attoparsec-iteratee comonad comonad-transformers either
         errors filepath free iteratee logict msgpack mtl network pipes
         streams text transformers
       ];
       testDepends = [
         errors filepath network streams text transformers
       ];
       description = "Remotely controlling Java Swing applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "picologic" = callPackage
    ({ mkDerivation, mtl, parsec, picosat }:
     mkDerivation {
       pname = "picologic";
       version = "0.1.1";
       sha256 = "14wil9fqx7n7zk7ldhk336g9mbybcf0gljvwjrnra3r01yiz7f20";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec picosat ];
       homepage = "https://github.com/sdiehl/picologic";
       description = "Utilities for symbolic predicate logic expressions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "picosat" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "picosat";
       version = "0.1.2";
       sha256 = "0x43fbhlinqflrvv548bxjrslnnsprklqig6iv9l8q9xv83scrvg";
       homepage = "https://github.com/sdiehl/haskell-picosat";
       description = "Bindings to the PicoSAT solver";
       license = stdenv.lib.licenses.mit;
     }) {};

  "piet" = callPackage
    ({ mkDerivation, Imlib, mtl }:
     mkDerivation {
       pname = "piet";
       version = "0.1";
       sha256 = "0ab0msb12cj38qimxllwk0p0g9aggfxhgvdp2b5znxpixlr39cz9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Imlib mtl ];
       description = "A Piet interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "piki" = callPackage
    ({ mkDerivation, mtl, parsec, text }:
     mkDerivation {
       pname = "piki";
       version = "0.5.2";
       sha256 = "0rsc2anh20hlr2dfyh07dyrrfns0l1pibz6w129fp5l8m6h3xjin";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec text ];
       homepage = "http://www.mew.org/~kazu/proj/piki/";
       description = "Yet another text-to-html converter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes" = callPackage
    ({ mkDerivation, mmorph, mtl, QuickCheck, test-framework
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "pipes";
       version = "4.1.4";
       sha256 = "0bv7i18lf15mvfscnif4hkwgm4anw8b7bbqhzdw4wbjqcvrrsppb";
       buildDepends = [ mmorph mtl transformers ];
       testDepends = [
         mtl QuickCheck test-framework test-framework-quickcheck2
         transformers
       ];
       description = "Compositional pipelines";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, pipes, pipes-attoparsec
     , pipes-bytestring, pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-aeson";
       version = "0.4.1.2";
       sha256 = "0wacib0wf40bkm6rp2qcsrahc43g89l3icclbrshk8r54dhbazl7";
       buildDepends = [
         aeson attoparsec pipes pipes-attoparsec pipes-bytestring
         pipes-parse transformers
       ];
       homepage = "https://github.com/k0001/pipes-aeson";
       description = "Encode and decode JSON streams using Aeson and Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, HUnit, mmorph, pipes, pipes-parse
     , tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "pipes-attoparsec";
       version = "0.5.1.1";
       sha256 = "1ns8s3p6jh4iya71z3j81cqnrfnr4n92kblwgkjlapb23dykl2qz";
       buildDepends = [ attoparsec pipes pipes-parse text transformers ];
       testDepends = [
         attoparsec HUnit mmorph pipes pipes-parse tasty tasty-hunit text
         transformers
       ];
       homepage = "https://github.com/k0001/pipes-attoparsec";
       description = "Attoparsec and Pipes integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-attoparsec-streaming" = callPackage
    ({ mkDerivation, attoparsec, pipes-core, transformers }:
     mkDerivation {
       pname = "pipes-attoparsec-streaming";
       version = "0.1.0.0";
       sha256 = "0alr94jjh583cdi19zrlacrc71dspy12lhq8h24hqiar6l2lr1d7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec pipes-core transformers ];
       description = "Streaming parsing in the pipes-core framework with Attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-binary" = callPackage
    ({ mkDerivation, binary, lens-family-core, pipes, pipes-bytestring
     , pipes-parse, smallcheck, tasty, tasty-hunit, tasty-smallcheck
     , transformers
     }:
     mkDerivation {
       pname = "pipes-binary";
       version = "0.4.0.3";
       sha256 = "0r56h5f9i6hy4zb2bhfi26y7y3z0j4nacdb2dgkxmh5mqjd33f0q";
       buildDepends = [
         binary pipes pipes-bytestring pipes-parse transformers
       ];
       testDepends = [
         binary lens-family-core pipes pipes-parse smallcheck tasty
         tasty-hunit tasty-smallcheck transformers
       ];
       homepage = "https://github.com/k0001/pipes-binary";
       description = "Encode and decode binary streams using the pipes and binary libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-bytestring" = callPackage
    ({ mkDerivation, pipes, pipes-group, pipes-parse, transformers }:
     mkDerivation {
       pname = "pipes-bytestring";
       version = "2.1.0";
       sha256 = "1q98444kpcdc817zbg121g2n1mhblrdfsmd0bs5rqq6ijxb213z0";
       buildDepends = [ pipes pipes-group pipes-parse transformers ];
       description = "ByteString support for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-cereal-plus" = callPackage
    ({ mkDerivation, cereal-plus, errors, mtl, pipes, pipes-bytestring
     , text
     }:
     mkDerivation {
       pname = "pipes-cereal-plus";
       version = "0.4.0";
       sha256 = "1x1qfl8s0lhvcz2hqh5dl5ilyixar995bqqzas721ni2skflbhqr";
       buildDepends = [
         cereal-plus errors mtl pipes pipes-bytestring text
       ];
       homepage = "https://github.com/nikita-volkov/pipes-cereal-plus";
       description = "A streaming serialization library on top of \"pipes\" and \"cereal-plus\"";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pipes-concurrency" = callPackage
    ({ mkDerivation, async, pipes, stm }:
     mkDerivation {
       pname = "pipes-concurrency";
       version = "2.0.2";
       sha256 = "0g4fbh8dk8ph2ga0vyanqj52rxk9c1zi6g4yk3a1g6bnf4bklhm8";
       buildDepends = [ pipes stm ];
       testDepends = [ async pipes stm ];
       description = "Concurrency for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-conduit" = callPackage
    ({ mkDerivation, conduit, mtl, pipes-core }:
     mkDerivation {
       pname = "pipes-conduit";
       version = "0.0.1";
       sha256 = "1nzylhmi3f2m0xnqgx0m9g0p5pwl6xnidsz8ykzmv8wafrh60dh8";
       buildDepends = [ conduit mtl pipes-core ];
       homepage = "https://github.com/pcapriotti/pipes-extra";
       description = "Conduit adapters";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-core" = callPackage
    ({ mkDerivation, categories, lifted-base, monad-control
     , transformers, void
     }:
     mkDerivation {
       pname = "pipes-core";
       version = "0.1.0";
       sha256 = "1abzy45bjiy8lijg4a5xkwdh1k37c6m921y2s31x0yqgq79qlgyp";
       buildDepends = [
         categories lifted-base monad-control transformers void
       ];
       homepage = "https://github.com/pcapriotti/pipes-core";
       description = "Compositional pipelines";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-courier" = callPackage
    ({ mkDerivation, courier, pipes }:
     mkDerivation {
       pname = "pipes-courier";
       version = "0.1.0.0";
       sha256 = "1v2bm2cmzb6a7bmpv8byrb5x4k5pivp3s8ma6r6dwhldic294jgf";
       buildDepends = [ courier pipes ];
       homepage = "http://github.com/kvanberendonck/pipes-courier";
       description = "Pipes utilities for interfacing with the courier message-passing framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-csv" = callPackage
    ({ mkDerivation, blaze-builder, cassava, HUnit, pipes
     , pipes-bytestring, test-framework, test-framework-hunit
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "pipes-csv";
       version = "1.4.0";
       sha256 = "1q1gnfnkvlkk8lwllhyar7323k3jynh9rl6x9yks7lc3nqr1n16j";
       buildDepends = [
         blaze-builder cassava pipes unordered-containers vector
       ];
       testDepends = [
         cassava HUnit pipes pipes-bytestring test-framework
         test-framework-hunit vector
       ];
       description = "Fast, streaming csv parser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pipes-errors" = callPackage
    ({ mkDerivation, errors, pipes }:
     mkDerivation {
       pname = "pipes-errors";
       version = "0.2";
       sha256 = "1lnb8pgp4a8rcsnz2kc34zzpbf781vw7cvphs7birsnb2r2w6waw";
       buildDepends = [ errors pipes ];
       homepage = "https://github.com/jdnavarro/pipes-errors";
       description = "Integration between pipes and errors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-extra" = callPackage
    ({ mkDerivation, HUnit, mtl, pipes-core, test-framework
     , test-framework-hunit, test-framework-th-prime, transformers
     }:
     mkDerivation {
       pname = "pipes-extra";
       version = "0.2.0";
       sha256 = "0yrbjs9y9s9a1q59138f7m0fsp8vsg0a31sfzgwfrg9pm2sfivfr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ pipes-core transformers ];
       testDepends = [
         HUnit mtl pipes-core test-framework test-framework-hunit
         test-framework-th-prime
       ];
       homepage = "https://github.com/pcapriotti/pipes-extra";
       description = "Various basic utilities for Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-extras" = callPackage
    ({ mkDerivation, foldl, HUnit, pipes, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "pipes-extras";
       version = "1.0.0";
       sha256 = "1dwqvbmngiprdffi9l0vhrlchfrr8cl0dvzlb34pmczkm9rvq8xk";
       buildDepends = [ foldl pipes transformers ];
       testDepends = [
         HUnit pipes test-framework test-framework-hunit transformers
       ];
       description = "Extra utilities for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-group" = callPackage
    ({ mkDerivation, free, pipes, pipes-parse, transformers }:
     mkDerivation {
       pname = "pipes-group";
       version = "1.0.1";
       sha256 = "19caih65hsvnvkwv8dlrrf961aw6k0zr9yx78cia1padslidxlbw";
       buildDepends = [ free pipes pipes-parse transformers ];
       description = "Group streams into substreams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-http" = callPackage
    ({ mkDerivation, http-client, http-client-tls, pipes }:
     mkDerivation {
       pname = "pipes-http";
       version = "1.0.2";
       sha256 = "0hqab1pzcj11qwvc4dznis0qsyn1zc1d0riqxy6b5k04p9i2jbzk";
       buildDepends = [ http-client http-client-tls pipes ];
       description = "HTTP client with pipes interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-interleave" = callPackage
    ({ mkDerivation, pipes }:
     mkDerivation {
       pname = "pipes-interleave";
       version = "0.2";
       sha256 = "1hj6b19x5kslb2n8kkcv9ihxgrs3yicdxv995lih2n9lmcjwz7gs";
       buildDepends = [ pipes ];
       homepage = "http://github.com/bgamari/pipes-interleave";
       description = "Interleave and merge streams of elements";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-network" = callPackage
    ({ mkDerivation, network, network-simple, pipes, pipes-safe
     , transformers
     }:
     mkDerivation {
       pname = "pipes-network";
       version = "0.6.4";
       sha256 = "1wabyv5j4q0wxiz8ry7dq3amlvfh4r0721pd2lksx7hj3a5qzm2p";
       buildDepends = [
         network network-simple pipes pipes-safe transformers
       ];
       homepage = "https://github.com/k0001/pipes-network";
       description = "Use network sockets together with the pipes library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-network-tls" = callPackage
    ({ mkDerivation, network, network-simple, network-simple-tls, pipes
     , pipes-network, pipes-safe, tls, transformers
     }:
     mkDerivation {
       pname = "pipes-network-tls";
       version = "0.2.1";
       sha256 = "0k3w13s3vasd85mapa594xhi31mhdwqycxqnadidqy24q5s6zdhc";
       buildDepends = [
         network network-simple network-simple-tls pipes pipes-network
         pipes-safe tls transformers
       ];
       homepage = "https://github.com/k0001/pipes-network-tls";
       description = "TLS-secured network connections support for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-p2p" = callPackage
    ({ mkDerivation, async, binary, errors, exceptions, mtl, network
     , network-simple-sockaddr, pipes, pipes-concurrency, pipes-network
     }:
     mkDerivation {
       pname = "pipes-p2p";
       version = "0.3";
       sha256 = "0iig35b2m30dqc0f9p9n3cfz2f21ac2rkqw6cvaydfvh31vbh4iw";
       buildDepends = [
         async binary errors exceptions mtl network network-simple-sockaddr
         pipes pipes-concurrency pipes-network
       ];
       homepage = "https://github.com/jdnavarro/pipes-p2p";
       description = "P2P network nodes with pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-p2p-examples" = callPackage
    ({ mkDerivation, binary, errors, mtl, network
     , network-simple-sockaddr, pipes, pipes-network, pipes-p2p
     }:
     mkDerivation {
       pname = "pipes-p2p-examples";
       version = "0.3";
       sha256 = "08fdk005yrmr8mz3qlsfjys3pz9iidk53maylbgdk3nixk8plwwm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary errors mtl network network-simple-sockaddr pipes
         pipes-network pipes-p2p
       ];
       homepage = "https://github.com/jdnavarro/pipes-p2p-examples";
       description = "Examples using pipes-p2p";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-parse" = callPackage
    ({ mkDerivation, pipes, transformers }:
     mkDerivation {
       pname = "pipes-parse";
       version = "3.0.2";
       sha256 = "1d5lhh8knk0hmvd9wv2ihs5z9ybyvhd1n7qaazqkazqkyl14pd08";
       buildDepends = [ pipes transformers ];
       description = "Parsing infrastructure for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-postgresql-simple" = callPackage
    ({ mkDerivation, async, exceptions, mtl, pipes, pipes-concurrency
     , pipes-safe, postgresql-simple, stm, text, transformers
     }:
     mkDerivation {
       pname = "pipes-postgresql-simple";
       version = "0.1.2.0";
       sha256 = "12ij2msdwjzzc93mlvvizh6amam5ld9j1a0b9xsa2awdjd21mwc1";
       buildDepends = [
         async exceptions mtl pipes pipes-concurrency pipes-safe
         postgresql-simple stm text transformers
       ];
       description = "Convert various postgresql-simple calls to work with pipes";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pipes-rt" = callPackage
    ({ mkDerivation, mwc-random, pipes, time }:
     mkDerivation {
       pname = "pipes-rt";
       version = "0.4.2";
       sha256 = "1zi4chmzv15j7yzqj483wiavfxvjinijga5c7qr1sj4874147dcv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mwc-random pipes time ];
       homepage = "http://github.com/ImAlsoGreg/pipes-rt";
       description = "A few pipes to control the timing of yields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-safe" = callPackage
    ({ mkDerivation, exceptions, pipes, transformers }:
     mkDerivation {
       pname = "pipes-safe";
       version = "2.2.0";
       sha256 = "1m44a2pbws73jbr2ca48i94mrfwzlsibyc22i2w3fqq159qfg6ca";
       buildDepends = [ exceptions pipes transformers ];
       description = "Safety for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-shell" = callPackage
    ({ mkDerivation, async, hspec, pipes, pipes-bytestring, pipes-safe
     , stm, stm-chans, text
     }:
     mkDerivation {
       pname = "pipes-shell";
       version = "0.1.3";
       sha256 = "0w49il312ns8pyl05144gznxfdchd0rnq8hprmjrgy8yp3v8j4v1";
       buildDepends = [
         async pipes pipes-bytestring pipes-safe stm stm-chans text
       ];
       testDepends = [
         async hspec pipes pipes-bytestring pipes-safe stm stm-chans text
       ];
       description = "Create proper Pipes from System.Process";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-text" = callPackage
    ({ mkDerivation, pipes, pipes-bytestring, pipes-group, pipes-parse
     , pipes-safe, streaming-commons, text, transformers
     }:
     mkDerivation {
       pname = "pipes-text";
       version = "0.0.0.15";
       sha256 = "10906gdb9gjhxxmxvmib6kw7py6fl2r4df5bryqvbjvr1afcc3x9";
       buildDepends = [
         pipes pipes-bytestring pipes-group pipes-parse pipes-safe
         streaming-commons text transformers
       ];
       homepage = "https://github.com/michaelt/text-pipes";
       description = "Text pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-vector" = callPackage
    ({ mkDerivation, monad-primitive, pipes, primitive, transformers
     , vector
     }:
     mkDerivation {
       pname = "pipes-vector";
       version = "0.5.3";
       sha256 = "1ny8dd4sd55df412v9dy5z0vf3nbi4h46pjazyiaj056p2w723aa";
       buildDepends = [
         monad-primitive pipes primitive transformers vector
       ];
       description = "Various proxies for streaming data into vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-wai" = callPackage
    ({ mkDerivation, blaze-builder, http-types, pipes, transformers
     , wai
     }:
     mkDerivation {
       pname = "pipes-wai";
       version = "3.0.2";
       sha256 = "0wfab4nln9v91qprwm2ik9cz27m2qdhcw7qnndg4dhq47m7kvaw8";
       buildDepends = [ blaze-builder http-types pipes transformers wai ];
       homepage = "http://github.com/brewtown/pipes-wai";
       description = "A port of wai-conduit for the pipes ecosystem";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pipes-websockets" = callPackage
    ({ mkDerivation, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pipes-websockets";
       version = "0.0.0.0";
       sha256 = "176gp747anh6a4wghkcj3jblb7ywhrp8c5wc7wrain77vn1sihk6";
       testDepends = [
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/ixmatus/pipes-websockets";
       description = "Library for using websockets ontop of pipes-network";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pipes-zlib" = callPackage
    ({ mkDerivation, pipes, transformers, zlib, zlib-bindings }:
     mkDerivation {
       pname = "pipes-zlib";
       version = "0.4.3";
       sha256 = "04iiw0r1mnxl4myyp87wqhff6jm0g2246gwismi7jnwy7xmllsmc";
       buildDepends = [ pipes transformers zlib zlib-bindings ];
       homepage = "https://github.com/k0001/pipes-zlib";
       description = "Zlib and GZip compression and decompression for Pipes streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pisigma" = callPackage
    ({ mkDerivation, haskeline, haskeline-class, mpppc, mtl, parsec
     , text, utf8-string
     }:
     mkDerivation {
       pname = "pisigma";
       version = "0.2.1";
       sha256 = "1mz4cfhg8y7cv38ir2lzl7b2p1nfm8c4syvgzz4b9j98dxg694xz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         haskeline haskeline-class mpppc mtl parsec text utf8-string
       ];
       description = "A dependently typed core language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pit" = callPackage
    ({ mkDerivation, filepath, optparse-applicative, temporary, text
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "pit";
       version = "0.3.1";
       sha256 = "10qrhpxk8v5qrs4pq4ghj0dj3brsbiv61pb5vakpq031h7grfg8p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath optparse-applicative temporary text unordered-containers
         yaml
       ];
       homepage = "https://github.com/chiro/haskell-pit";
       description = "Account management tool";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pkcs1" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "pkcs1";
       version = "1.0.2";
       sha256 = "1598gj6r6mv3z68qir1rgjk4p73w0k2fwkkban04s97xf86a0669";
       buildDepends = [ random ];
       homepage = "http://sep07.mroot.net/";
       description = "RSA encryption with PKCS1 padding";
       license = "GPL";
     }) {};

  "pkggraph" = callPackage
    ({ mkDerivation, Cabal, split }:
     mkDerivation {
       pname = "pkggraph";
       version = "0.1";
       sha256 = "019mli0g65g7k4rsp2myxc7g6p6wykj85amvb2g2ipw117zpzkfz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal split ];
       description = "Package dependency graph for installed packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pktree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pktree";
       version = "0.2";
       sha256 = "172dsg1krxqamq8ids9xwyfqidr9z0qq4nmbq4rk2x62g4q0960c";
       homepage = "https://github.com/singpolyma/pktree-haskell";
       description = "Implementation of the PKTree spatial index data structure";
       license = "unknown";
     }) {};

  "placeholders" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "placeholders";
       version = "0.1";
       sha256 = "0ih35n2pw5gr9ggj2xz5zfcs4bdk200fdw6q9hdy3xna7maphak5";
       homepage = "http://github.com/ahammar/placeholders";
       description = "Placeholders for use while developing Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plailude" = callPackage
    ({ mkDerivation, mtl, stringable, text, time, utf8-string }:
     mkDerivation {
       pname = "plailude";
       version = "0.4.1";
       sha256 = "1a21a3x6c81ajr5rads2gw1kjlyflxpcr8niksb9yv9k3kmzq6xy";
       buildDepends = [ mtl stringable text time utf8-string ];
       homepage = "https://secure.plaimi.net/works/plailude";
       description = "plaimi's prelude";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "planar-graph" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, data-clist, deepseq }:
     mkDerivation {
       pname = "planar-graph";
       version = "1.0.0.0";
       sha256 = "1c7a168wkym50nh6a0vqfnqgj4hsk91d4x3w84ip0phcnig65iip";
       buildDepends = [ attoparsec blaze-builder data-clist deepseq ];
       description = "A representation of planar graphs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plat" = callPackage
    ({ mkDerivation, mtl, utf8-string }:
     mkDerivation {
       pname = "plat";
       version = "0.1.0.1";
       sha256 = "06syff2yzrs7qvj8m1f7bgzd6qc834zl9qphv67q3ps5r2hy09qd";
       buildDepends = [ mtl utf8-string ];
       description = "Simple templating library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "playlists" = callPackage
    ({ mkDerivation, attoparsec, doctest, filepath, hlint, hspec
     , optparse-applicative, text, word8
     }:
     mkDerivation {
       pname = "playlists";
       version = "0.2.0.0";
       sha256 = "1brri1rl3zx2mqls3cw4bcdykq100dgxh0cslryhxfb95b4m8583";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec filepath optparse-applicative text word8
       ];
       testDepends = [ doctest hlint hspec ];
       homepage = "https://github.com/pjones/playlists";
       description = "Library and executable for working with playlist files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plist" = callPackage
    ({ mkDerivation, dataenc, hxt }:
     mkDerivation {
       pname = "plist";
       version = "0.0.5";
       sha256 = "1c77p62sgc8zs9856h1glsfi384fjnxd9rblw2xhbszr9j6h6rxh";
       buildDepends = [ dataenc hxt ];
       description = "Generate and parse Mac OS X property list format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plivo" = callPackage
    ({ mkDerivation, aeson, blaze-builder, errors, http-streams
     , http-types, io-streams, network, time, unexceptionalio
     }:
     mkDerivation {
       pname = "plivo";
       version = "0.1.0.0";
       sha256 = "0cyl29h4xy1q13483p5z40ykbk66h81jwi18aj4g6rjj771jxr5l";
       buildDepends = [
         aeson blaze-builder errors http-streams http-types io-streams
         network time unexceptionalio
       ];
       homepage = "https://github.com/singpolyma/plivo-haskell";
       description = "Plivo API wrapper for Haskell";
       license = "unknown";
     }) {};

  "plot" = callPackage
    ({ mkDerivation, cairo, colour, hmatrix, MaybeT, mtl, pango }:
     mkDerivation {
       pname = "plot";
       version = "0.2.3.2";
       sha256 = "1787v2j2l7pkhzvys6hz39ccliz1yfp4y5vcrjc3nfdvbrihbrp5";
       buildDepends = [ cairo colour hmatrix MaybeT mtl pango ];
       homepage = "http://github.com/amcphail/plot";
       description = "A plotting library, exportable as eps/pdf/svg/png or renderable with gtk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plot-gtk" = callPackage
    ({ mkDerivation, glib, gtk, hmatrix, mtl, plot }:
     mkDerivation {
       pname = "plot-gtk";
       version = "0.2.0.2";
       sha256 = "18p3jjrs1asd35q3fykfsrwx22d7rqczymbyxsaqwya5y0nv3ymn";
       buildDepends = [ glib gtk hmatrix mtl plot ];
       homepage = "http://code.haskell.org/plot";
       description = "GTK plots and interaction with GHCi";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plot-gtk3" = callPackage
    ({ mkDerivation, glib, gtk3, hmatrix, mtl, plot }:
     mkDerivation {
       pname = "plot-gtk3";
       version = "0.1";
       sha256 = "0dw6ypnwr3xnjl1cvr55x3j182vchjhinc9fxsnd5z7ciraqvnv0";
       buildDepends = [ glib gtk3 hmatrix mtl plot ];
       homepage = "http://code.haskell.org/plot";
       description = "GTK3 plots and interaction with GHCi";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plot-lab" = callPackage
    ({ mkDerivation, colour, gtk, hmatrix, plot, text }:
     mkDerivation {
       pname = "plot-lab";
       version = "0.0.1.8";
       sha256 = "0h0ni0vbhfj93g5xff2k8r0n7x40ns5q6rs8fy6hydzqsd7yp803";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ colour gtk hmatrix plot text ];
       homepage = "github.com/sumitsahrawat/plot-lab";
       description = "A plotting tool with Mathematica like Manipulation abilities";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "plotserver-api" = callPackage
    ({ mkDerivation, curl, split }:
     mkDerivation {
       pname = "plotserver-api";
       version = "0.22";
       sha256 = "17vr3c9dnd1jabx66qih7z19mk0irrxzab51gl5gifcgdxlf4s3x";
       buildDepends = [ curl split ];
       description = "Plotserver API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "plugins" = callPackage
    ({ mkDerivation, Cabal, filepath, ghc-paths, haskell-src, random }:
     mkDerivation {
       pname = "plugins";
       version = "1.5.4.0";
       sha256 = "126lp2bbz9aa3pfi5dmbbzgsancdj1m26k7man96avixb21mzbi8";
       buildDepends = [ Cabal filepath ghc-paths haskell-src random ];
       homepage = "http://hub.darcs.net/stepcut/plugins";
       description = "Dynamic linking for Haskell and C objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plugins-auto" = callPackage
    ({ mkDerivation, filepath, hinotify, mtl, plugins }:
     mkDerivation {
       pname = "plugins-auto";
       version = "0.0.4";
       sha256 = "1gia9d45d7rb658wm6ihkfz36l4ph7w0hr0vnfw42s035aj5shy4";
       buildDepends = [ filepath hinotify mtl plugins ];
       description = "Automatic recompilation and reloading of haskell modules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plugins-multistage" = callPackage
    ({ mkDerivation, th-expand-syns }:
     mkDerivation {
       pname = "plugins-multistage";
       version = "0.5";
       sha256 = "0hhi0r3hsgnajq4l0jg1v4j2ilk2r1hm9b7ldv6aykcg3wzbnvhd";
       buildDepends = [ th-expand-syns ];
       description = "Dynamic linking for embedded DSLs with staged compilation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "plumbers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "plumbers";
       version = "0.0.3";
       sha256 = "1grw827jhxwka1zl0n5ycgrpc4ljw8bxg3psms8lsxfiiz6mwmq9";
       description = "Pointless plumbing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ply-loader" = callPackage
    ({ mkDerivation, attoparsec, cereal, filepath, lens, linear
     , parallel-io, transformers, vector
     }:
     mkDerivation {
       pname = "ply-loader";
       version = "0.4.1";
       sha256 = "0hi32n4gjvydahlclzc47qsnwqhzxxa7irc4qv6qbgpra4j6zqg1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec cereal filepath lens linear parallel-io transformers
         vector
       ];
       description = "PLY file loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "png-file" = callPackage
    ({ mkDerivation, binary-file, monads-tf, zlib }:
     mkDerivation {
       pname = "png-file";
       version = "0.0.1.1";
       sha256 = "18m5pqf2dx26spwjav9b67plha9f3bgn4wl6g6pckl0mmym3zm10";
       buildDepends = [ binary-file monads-tf zlib ];
       homepage = "https://skami.iocikun.jp/haskell/packages/png-file";
       description = "read/write png file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pngload" = callPackage
    ({ mkDerivation, mtl, parsec, zlib }:
     mkDerivation {
       pname = "pngload";
       version = "0.1";
       sha256 = "1j8zagi5xcb4spvq1r0wcnn211y2pryzf0r8z7h70ypqak7sy6ps";
       buildDepends = [ mtl parsec zlib ];
       description = "Pure Haskell loader for PNG images";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pngload-fixed" = callPackage
    ({ mkDerivation, mtl, parsec, zlib }:
     mkDerivation {
       pname = "pngload-fixed";
       version = "1.0";
       sha256 = "02ikfn7kl8jx5iffa2pv0n1z1c75qcg9aq94nrccfdp532wxr7bx";
       buildDepends = [ mtl parsec zlib ];
       description = "Pure Haskell loader for PNG images";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pnm" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pnm";
       version = "0.1.0.0";
       sha256 = "0h6wsqv6c36cmk30gs3rjdjbxxq9zih49pmzhj2dh9nyxsqbj2yw";
       description = "PNM image format header parsing and pretty printing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pointed" = callPackage
    ({ mkDerivation, comonad, data-default-class, semigroupoids
     , semigroups, stm, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "pointed";
       version = "4.1.1";
       sha256 = "183ix3cax4qvph6grghpj5n4m7bd5xznqahjbgwz88gkf9rp2gbj";
       buildDepends = [
         comonad data-default-class semigroupoids semigroups stm tagged
         transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/pointed/";
       description = "Pointed and copointed data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pointedlist" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "pointedlist";
       version = "0.6.1";
       sha256 = "16xsrzqql7i4z6a3xy07sqnbyqdmcar1jiacla58y4mvkkwb0g3l";
       buildDepends = [ binary ];
       description = "A zipper-like comonad which works as a list, tracking a position";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pointfree" = callPackage
    ({ mkDerivation, haskell-src-exts, HUnit, QuickCheck, transformers
     }:
     mkDerivation {
       pname = "pointfree";
       version = "1.0.4.8";
       sha256 = "0nb3mqp6zwnnq6fs27xhcqv4w8h6sr5k01hldkqnkgwz0yyy7ljy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src-exts transformers ];
       testDepends = [ haskell-src-exts HUnit QuickCheck transformers ];
       description = "Tool for refactoring expressions into pointfree form";
       license = "unknown";
     }) {};

  "pointful" = callPackage
    ({ mkDerivation, haskell-src, mtl, syb }:
     mkDerivation {
       pname = "pointful";
       version = "1.0.2";
       sha256 = "00xlxgdajkbi5d6gv88wdpwm16xdryshszz5qklryi0p65mmp99p";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src mtl syb ];
       homepage = "http://github.com/23Skidoo/pointful";
       description = "Pointful refactoring tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pointless-fun" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pointless-fun";
       version = "1.1.0.5";
       sha256 = "17gzh3w5j05l6ig1sdjqrl7br17zzpy9yh5k2lck0gjl5prcjclw";
       homepage = "http://code.haskell.org/~wren/";
       description = "Some common point-free combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pointless-haskell" = callPackage
    ({ mkDerivation, GHood, syb }:
     mkDerivation {
       pname = "pointless-haskell";
       version = "0.0.9";
       sha256 = "0f0bnd6dyi1ancdxd2hkszshws9d8jz8iamz5pir0i4nsj69mqyx";
       buildDepends = [ GHood syb ];
       homepage = "http://haskell.di.uminho.pt/wiki/Pointless+Haskell";
       description = "Pointless Haskell library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pointless-lenses" = callPackage
    ({ mkDerivation, derive, pointless-haskell, QuickCheck }:
     mkDerivation {
       pname = "pointless-lenses";
       version = "0.0.9";
       sha256 = "1z09wbx9nrlpg0msq69zyaypp28rfm653l22g7q5xcn0wn4hfs0b";
       buildDepends = [ derive pointless-haskell QuickCheck ];
       homepage = "http://haskell.di.uminho.pt/wiki/Pointless+Lenses";
       description = "Pointless Lenses library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pointless-rewrite" = callPackage
    ({ mkDerivation, mtl, pointless-haskell, pointless-lenses }:
     mkDerivation {
       pname = "pointless-rewrite";
       version = "0.0.3";
       sha256 = "0dc37gw8p5zyi23g94llbq7vb5n09rgznjf24nhg28jw2vmf3f0n";
       buildDepends = [ mtl pointless-haskell pointless-lenses ];
       description = "Pointless Rewrite library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "poker-eval" = callPackage
    ({ mkDerivation, mtl, poker-eval, random, vector }:
     mkDerivation {
       pname = "poker-eval";
       version = "0.3.1";
       sha256 = "0v1is9jnpw1ij3b7h9figkjqk58dzc44v6vpdmxfmb80w0myihrv";
       buildDepends = [ mtl random vector ];
       extraLibraries = [ poker-eval ];
       description = "Binding to libpoker-eval";
       license = stdenv.lib.licenses.publicDomain;
     }) { inherit (pkgs) poker-eval; };

  "polar" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "polar";
       version = "0.0.1";
       sha256 = "1f0anpxc57vxa5z0x4wrfay0g1sw2qwnz5nkz74y9vmh8vd99kkh";
       homepage = "http://space.k-hornz.de/polar";
       description = "Complex numbers in polar form";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "polh-lexicon" = callPackage
    ({ mkDerivation, binary, dawg, filepath, mtl, polysoup, text
     , text-binary, transformers
     }:
     mkDerivation {
       pname = "polh-lexicon";
       version = "0.2.2";
       sha256 = "0mnccx3xj568s3q82achf1pj57zqdpj9iskgh62w39xbqm7spivl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary dawg filepath mtl polysoup text text-binary transformers
       ];
       homepage = "https://github.com/kawu/polh/tree/master/lexicon";
       description = "A library for manipulating the historical dictionary of Polish (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "polimorf" = callPackage
    ({ mkDerivation, binary, text, text-binary }:
     mkDerivation {
       pname = "polimorf";
       version = "0.7.3";
       sha256 = "0vv7j1l0wnjwpd3hpxswq0k33izl0ck2njspcga885bkrd45lzdr";
       buildDepends = [ binary text text-binary ];
       homepage = "https://github.com/kawu/polimorf";
       description = "Working with the PoliMorf dictionary";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "poll" = callPackage
    ({ mkDerivation, enumset, utility-ht }:
     mkDerivation {
       pname = "poll";
       version = "0.0";
       sha256 = "0v4cyrr506zqvxqbxkncss2pl2j38skl02p1vj6cjxcvlzb2y43p";
       buildDepends = [ enumset utility-ht ];
       description = "Bindings to poll.h";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "polyToMonoid" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "polyToMonoid";
       version = "0.1";
       sha256 = "068acarrpd66682yjscm6l5k9kj9p8zxbf3hi76kz7gvkhkbsjj8";
       description = "Polyvariadic functions mapping to a given monoid";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "polynomial" = callPackage
    ({ mkDerivation, deepseq, prettyclass, vector, vector-space
     , vector-th-unbox
     }:
     mkDerivation {
       pname = "polynomial";
       version = "0.7.1";
       sha256 = "0jnqx4w9f99ynmrc5r05f5sfl2wrxnns3l67c2bnqh1sxw5hnbdp";
       buildDepends = [
         deepseq prettyclass vector vector-space vector-th-unbox
       ];
       homepage = "https://github.com/mokus0/polynomial";
       description = "Polynomials";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "polynomials-bernstein" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "polynomials-bernstein";
       version = "1.1.1";
       sha256 = "0pjdwi84gz5j1rij4m89nyljjafzjnakmf4yd6vj4xz54nmmygg6";
       buildDepends = [ vector ];
       description = "A solver for systems of polynomial equations in bernstein form";
       license = "GPL";
     }) {};

  "polyparse" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "polyparse";
       version = "1.10";
       sha256 = "0nz7dv91a2f7gf4jnma8qcqa4n6qjcyggf8qdja46sdcabpd0ij2";
       buildDepends = [ text ];
       homepage = "http://code.haskell.org/~malcolm/polyparse/";
       description = "A variety of alternative parser combinator libraries";
       license = "LGPL";
     }) {};

  "polyseq" = callPackage
    ({ mkDerivation, cgi, free-theorems, haskell-src, mtl, network
     , parsec, syb, utf8-string, xhtml
     }:
     mkDerivation {
       pname = "polyseq";
       version = "0.1.2.1";
       sha256 = "1l31ynlkjkk2zzpsv194gv3pbl55liizvq4x16m5z52vzgszb570";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cgi free-theorems haskell-src mtl network parsec syb utf8-string
         xhtml
       ];
       description = "Taming Selective Strictness";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "polysoup" = callPackage
    ({ mkDerivation, polyparse, tagsoup }:
     mkDerivation {
       pname = "polysoup";
       version = "0.5.2";
       sha256 = "13923ff6lzvl6j059gyhcb3cx27plkxgbyjr7skg9g5hxia5j73b";
       buildDepends = [ polyparse tagsoup ];
       homepage = "https://github.com/kawu/polysoup";
       description = "Online XML parsing with polyparse and tagsoup";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "polytypeable" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "polytypeable";
       version = "0.1.0.0";
       sha256 = "0vb2adm97ypi553lsjz7333q3dg9fmi0incrxlikqixk0f3ajaq8";
       description = "Typeable for polymorphic types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "polytypeable-utils" = callPackage
    ({ mkDerivation, polytypeable }:
     mkDerivation {
       pname = "polytypeable-utils";
       version = "0.1.0.0";
       sha256 = "1hbpamgqsmsjkzjjva15f566yra77hwasp88b6y68nx9qa36a821";
       buildDepends = [ polytypeable ];
       description = "Utilities for polytypeable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ponder" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "ponder";
       version = "0.0.1";
       sha256 = "1nq4z063g429hxwf4vbyyr2b2s7sn325m0h6ggf793inlj48ci0h";
       buildDepends = [ mtl ];
       homepage = "https://gihub.com/matt76k/ponder";
       description = "PEG parser combinator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pontarius-mediaserver" = callPackage
    ({ mkDerivation, HDBC, HDBC-sqlite3, hlogger, pontarius-xmpp
     , pontarius-xpmn, xml-types
     }:
     mkDerivation {
       pname = "pontarius-mediaserver";
       version = "0.0.2.0";
       sha256 = "00qyrbibav26x5ycipnyypybgjms2kxn38s3iy9gqzv0kmgsdxna";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         HDBC HDBC-sqlite3 hlogger pontarius-xmpp pontarius-xpmn xml-types
       ];
       homepage = "http://www.pontarius.org/projects/pontarius-mediaserver/";
       description = "Extended Personal Media Network (XPMN) media server";
       license = "unknown";
     }) {};

  "pontarius-xmpp" = callPackage
    ({ mkDerivation, async, attoparsec, base64-bytestring, binary
     , Cabal, conduit, crypto-api, crypto-random, cryptohash
     , cryptohash-cryptoapi, data-default, derive, dns, doctest
     , filepath, hslogger, hspec, hspec-expectations, iproute, lens
     , lifted-base, mtl, network, pureMD5, QuickCheck
     , quickcheck-instances, random, ranges, resourcet, smallcheck
     , split, stm, stringprep, tasty, tasty-hspec, tasty-hunit
     , tasty-quickcheck, tasty-th, text, tls, transformers
     , unbounded-delays, void, xml-conduit, xml-picklers, xml-types
     }:
     mkDerivation {
       pname = "pontarius-xmpp";
       version = "0.4.0.2";
       sha256 = "0s633z93qw1k0rs5bx85slmk40rlzlacr2fyxfp5qs3b74k93m7d";
       buildDepends = [
         attoparsec base64-bytestring binary conduit crypto-api
         crypto-random cryptohash cryptohash-cryptoapi data-default dns
         hslogger iproute lifted-base mtl network pureMD5 random resourcet
         split stm stringprep text tls transformers unbounded-delays void
         xml-conduit xml-picklers xml-types
       ];
       testDepends = [
         async Cabal conduit data-default derive doctest filepath hslogger
         hspec hspec-expectations lens network QuickCheck
         quickcheck-instances ranges smallcheck stm stringprep tasty
         tasty-hspec tasty-hunit tasty-quickcheck tasty-th text transformers
         xml-picklers xml-types
       ];
       homepage = "https://github.com/pontarius/pontarius-xmpp/";
       description = "An XMPP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pontarius-xpmn" = callPackage
    ({ mkDerivation, pontarius-xmpp, random, text, xml-types }:
     mkDerivation {
       pname = "pontarius-xpmn";
       version = "0.0.1.0";
       sha256 = "1nd228fgsxlqxql38wkvhq8k5d04bgknpx7i83qxrzj8kb6890dy";
       buildDepends = [ pontarius-xmpp random text xml-types ];
       homepage = "http://www.pontarius.org/projects/pontarius-xpmn/";
       description = "Extended Personal Media Network (XPMN) library";
       license = "unknown";
     }) {};

  "pony" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pony";
       version = "1.0";
       sha256 = "0a8bya0kwk9d965awpg881bgzy9z1szcwsqqr0lfkd6bw3cb9fyy";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://www.ascii-art.de/ascii/uvw/unicorn.txt";
       description = "Can I have a pony?";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pool" = callPackage
    ({ mkDerivation, monad-control, transformers }:
     mkDerivation {
       pname = "pool";
       version = "0.1.2.1";
       sha256 = "1fwwnwxk3kprr2z9y7bwa1qwxfkzwcb2n5l6vkq1c5s8gjls581c";
       buildDepends = [ monad-control transformers ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Thread-safe resource pools. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pool-conduit" = callPackage
    ({ mkDerivation, monad-control, resource-pool, resourcet
     , transformers
     }:
     mkDerivation {
       pname = "pool-conduit";
       version = "0.1.2.3";
       sha256 = "1myjbmbh0jm89ycx9d961mpgw8hp7al8wgnsls4p19gvr73gcbfv";
       buildDepends = [
         monad-control resource-pool resourcet transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Resource pool allocations via ResourceT. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pooled-io" = callPackage
    ({ mkDerivation, deepseq, transformers, unsafe, utility-ht }:
     mkDerivation {
       pname = "pooled-io";
       version = "0.0.0.1";
       sha256 = "1phk5mqyyjvlrf3fknhzrwzjmx3inwrs8hs328p8jpwwig8zfpv7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deepseq transformers unsafe utility-ht ];
       homepage = "http://code.haskell.org/~thielema/pooled-io/";
       description = "Run jobs on a limited number of threads and support data dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pop3-client" = callPackage
    ({ mkDerivation, mtl, network }:
     mkDerivation {
       pname = "pop3-client";
       version = "0.1.4";
       sha256 = "0kfcfxfwg5rjm7qx9r0ssdvkrvca95hflahrip1hi5wbplf224xv";
       buildDepends = [ mtl network ];
       homepage = "https://github.com/tmrudick/haskell-pop3-client/";
       description = "POP3 Client Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "popenhs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "popenhs";
       version = "1.0.0";
       sha256 = "01pb8g5zl99zccnjnkwklfgaz1pqjp1xrgz5b3qy45nclyln0bm4";
       homepage = "http://www.haskell.org/~petersen/haskell/popenhs/";
       description = "popenhs is a popen-like library for Haskell";
       license = "GPL";
     }) {};

  "poppler" = callPackage
    ({ mkDerivation, cairo, gdk_pixbuf, glib, gtk, gtk2hs-buildtools
     , libc, mtl, pango, popplerGlib
     }:
     mkDerivation {
       pname = "poppler";
       version = "0.13";
       sha256 = "1fv0h2ixanzv5vy4l2ln23f9n8ghmgdxzlyx54hh69bwhrcg049s";
       buildDepends = [ cairo glib gtk mtl ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ libc ];
       pkgconfigDepends = [ cairo gdk_pixbuf glib gtk pango popplerGlib ];
       homepage = "http://www.haskell.org/gtk2hs/";
       description = "Binding to the Poppler";
       license = stdenv.lib.licenses.gpl2;
     }) { inherit (pkgs) cairo glib gtk pango; };

  "populate-setup-exe-cache" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "populate-setup-exe-cache";
       version = "1.0";
       sha256 = "06z723fgqwvcxgxy63pqwmjb6xkcl69xmdry117f0i5rhy0aix3y";
       homepage = "https://github.com/mietek/populate-setup-exe-cache/";
       description = "Empty Cabal package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "portable-lines" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "portable-lines";
       version = "0.1";
       sha256 = "1l94p3s56a3kfqc8fzqc52z12rhg3c8xsmgcw1i20dnl8aygalsh";
       description = "Alternative 'lines' implementation that understands CR-LF and CR";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "portaudio" = callPackage
    ({ mkDerivation, portaudio }:
     mkDerivation {
       pname = "portaudio";
       version = "0.2.4";
       sha256 = "0vxlfn2462fmknj94sd5ajbm3lydy3z8mrqb3vgh47wwn0sq8sk3";
       extraLibraries = [ portaudio ];
       homepage = "http://code.haskell.org/portaudio";
       description = "Haskell bindings for the PortAudio library";
       license = "unknown";
     }) { inherit (pkgs) portaudio; };

  "porte" = callPackage
    ({ mkDerivation, extensible-exceptions, stringsearch }:
     mkDerivation {
       pname = "porte";
       version = "0.0.4";
       sha256 = "1cc7kbbz0vqh60acaxyn8b8pdmwx2w022sgvk1mw7p60s8jhng2d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ extensible-exceptions stringsearch ];
       description = "FreeBSD ports index search and analysis tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "porter" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "porter";
       version = "0.1";
       sha256 = "0aw1gq7z3h5ag5vzl6crw7vijg9w25s0jvxr4rkniv4jk0wlfmnk";
       description = "Implementation of the Porter stemming algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ports" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ports";
       version = "0.4.3.2";
       sha256 = "1ixyrg4k1f91v2r485r2fs8bgq373bhvg02mza5jdcb1amyfi7rm";
       homepage = "http://www.cse.unsw.edu.au/~chak/haskell/ports/";
       description = "The Haskell Ports Library";
       license = "LGPL";
     }) {};

  "positive" = callPackage
    ({ mkDerivation, nats, semigroups }:
     mkDerivation {
       pname = "positive";
       version = "0.4";
       sha256 = "0vj0gd7xln1xihf8dyrr2sm7zh5wg6qvfzy30nslwgvzyn4f14gv";
       buildDepends = [ nats semigroups ];
       description = "Positive integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "posix-acl" = callPackage
    ({ mkDerivation, acl, lifted-base, monad-control, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "posix-acl";
       version = "0.2.0.0";
       sha256 = "1qiq5bqq6bwdxrxc3i27jiq1ic5pn0309453a0y6vjwamrc8h7rv";
       buildDepends = [
         lifted-base monad-control transformers transformers-base
       ];
       extraLibraries = [ acl ];
       homepage = "https://github.com/tensor5/posix-acl";
       description = "Support for Posix ACL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "posix-escape" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "posix-escape";
       version = "0.1";
       sha256 = "0yrx8cr6qximfy0vh7qqljlkj27q9gksrnqmqbnj2hk5bsa5l48w";
       description = "Quote arguments to be passed through the Unix shell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "posix-filelock" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "posix-filelock";
       version = "0.1";
       sha256 = "106rrbw4d0f13wcj19m6h0vy3v53j11bawqd3q4r0pcsypk53qmk";
       buildDepends = [ transformers ];
       homepage = "https://github.com/singpolyma/posix-filelock-haskell";
       description = "Nice wrapper around POSIX fcntl advisory locks";
       license = "unknown";
     }) {};

  "posix-paths" = callPackage
    ({ mkDerivation, doctest, HUnit, QuickCheck }:
     mkDerivation {
       pname = "posix-paths";
       version = "0.2.0.3";
       sha256 = "16r0sd2m9xzzkrvj6qvc7z3yc8r83kpx724v5wifphcri3scvznv";
       testDepends = [ doctest HUnit QuickCheck ];
       description = "POSIX filepath/directory functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "posix-pty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "posix-pty";
       version = "0.1.1";
       sha256 = "0ndr47bfm07b00kfy2p48jm7fjrd76bxbw3l7wm5yc0d0jyi65cd";
       homepage = "https://bitbucket.org/merijnv/posix-pty";
       description = "Pseudo terminal interaction with subprocesses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "posix-realtime" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "posix-realtime";
       version = "0.0.0.2";
       sha256 = "1i3ag71ymmbcg1v0s6fqkpli8d1wplhj2jkalrv7alz8z666ms3h";
       description = "POSIX Realtime functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "posix-timer" = callPackage
    ({ mkDerivation, transformers-base }:
     mkDerivation {
       pname = "posix-timer";
       version = "0.3";
       sha256 = "0z4j98pb46gzhi5i5pvxxm7an7am5i757p43cp2jv8pirx33k8zd";
       buildDepends = [ transformers-base ];
       homepage = "https://github.com/mvv/posix-timer";
       description = "Bindings to POSIX clock and timer functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "posix-waitpid" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "posix-waitpid";
       version = "0.1";
       sha256 = "1v3y3pg3gv0s26hdqc5fsar2j3vk4kpldkr23zxm14ncpz2w2dhk";
       description = "Low-level wrapping of POSIX waitpid(2)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "possible" = callPackage
    ({ mkDerivation, aeson, text }:
     mkDerivation {
       pname = "possible";
       version = "0.1.0.0";
       sha256 = "12fdxb1s3iaspllz0pp1wfv6grg5lkr06hd2qi7is1hrfrij4hsd";
       buildDepends = [ aeson text ];
       homepage = "https://github.com/tolysz/possible";
       description = "Three valued Data.Maybe";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "post-mess-age" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "post-mess-age";
       version = "0.1.0.0";
       sha256 = "1rl7i37szwnqs6slhha3wv45mw9w9x6yxcrkbdcfvdc63x8nh74w";
       description = "Send messages to a Handle concurrently without getting them mixed";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postcodes" = callPackage
    ({ mkDerivation, aeson, HTTP }:
     mkDerivation {
       pname = "postcodes";
       version = "0.1.1";
       sha256 = "1z0d5pl11jymd0jj1k50si35lq2af3y0apiyz6mbi25zl5x49bi8";
       buildDepends = [ aeson HTTP ];
       homepage = "https://github.com/mattyhall/haskell-postcodes";
       description = "A library that gets postcode information from the uk-postcodes.com";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postgresql-binary" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, HTF, loch-th
     , placeholders, postgresql-libpq, QuickCheck, quickcheck-instances
     , scientific, text, time, transformers, uuid
     }:
     mkDerivation {
       pname = "postgresql-binary";
       version = "0.5.0";
       sha256 = "0n067ns0k86ibjy2sqzjjds761l608167lwjzgpp5jhicv1by6hs";
       buildDepends = [
         attoparsec base-prelude loch-th placeholders scientific text time
         transformers uuid
       ];
       testDepends = [
         base-prelude HTF postgresql-libpq QuickCheck quickcheck-instances
         scientific text time uuid
       ];
       homepage = "https://github.com/nikita-volkov/postgresql-binary";
       description = "Encoders and decoders for the PostgreSQL's binary format";
       license = stdenv.lib.licenses.mit;
     }) {};

  "postgresql-copy-escape" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "postgresql-copy-escape";
       version = "0.1";
       sha256 = "063phxj8r3vy25awwwn47k9ac0s8z59igpgqrhb9gbfdq4ldrlpm";
       homepage = "https://github.com/joeyadams/hs-postgresql-copy-escape";
       description = "Format data to feed to a PostgreSQL COPY FROM statement";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postgresql-libpq" = callPackage
    ({ mkDerivation, postgresql }:
     mkDerivation {
       pname = "postgresql-libpq";
       version = "0.9.0.1";
       sha256 = "0fdz9pkmrajqm026s6d5ib9kqg5ph93fw7l2xrgf22zagl53rzx3";
       extraLibraries = [ postgresql ];
       homepage = "http://github.com/lpsmith/postgresql-libpq";
       description = "low-level binding to libpq";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postgresql-orm" = callPackage
    ({ mkDerivation, aeson, blaze-builder, filepath, mtl
     , postgresql-simple, text, time, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "postgresql-orm";
       version = "0.3.1";
       sha256 = "1npynkpilp7p6y2biqr9m5a9r179ga67p8lx39pildn94iz1yg76";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson blaze-builder filepath mtl postgresql-simple text time
         transformers unordered-containers vector
       ];
       description = "An ORM (Object Relational Mapping) and migrations DSL for PostgreSQL";
       license = "GPL";
     }) {};

  "postgresql-simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring
     , blaze-builder, blaze-textual, case-insensitive, cryptohash
     , hashable, HUnit, postgresql-libpq, scientific, text, time
     , transformers, uuid, vector
     }:
     mkDerivation {
       pname = "postgresql-simple";
       version = "0.4.8.0";
       sha256 = "09mflczxjm7a8nixi4a989nq1ijhpikl4j9kqvzcpmfgb8sx38nm";
       buildDepends = [
         aeson attoparsec blaze-builder blaze-textual case-insensitive
         hashable postgresql-libpq scientific text time transformers uuid
         vector
       ];
       testDepends = [
         aeson base16-bytestring cryptohash HUnit text time vector
       ];
       description = "Mid-Level PostgreSQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postgresql-simple-migration" = callPackage
    ({ mkDerivation, base64-bytestring, cryptohash, hspec
     , postgresql-simple, time
     }:
     mkDerivation {
       pname = "postgresql-simple-migration";
       version = "0.1.3.0";
       sha256 = "0qz75dgp346q6sbxwlfrqd9hpkh14krij2r8440nhb9qs4ccl2jz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base64-bytestring cryptohash postgresql-simple time
       ];
       testDepends = [ hspec postgresql-simple ];
       homepage = "https://github.com/ameingast/postgresql-simple-migration";
       description = "PostgreSQL Schema Migrations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postgresql-simple-sop" = callPackage
    ({ mkDerivation, generics-sop, postgresql-simple }:
     mkDerivation {
       pname = "postgresql-simple-sop";
       version = "0.1.0.2";
       sha256 = "1ixxfd7zagqm27hcf6rhki1x626647mjgzmbl16c2ywwz2vbh6z2";
       buildDepends = [ generics-sop postgresql-simple ];
       homepage = "https://github.com/openbrainsrc/postgresql-simple-sop";
       description = "Generic functions for postgresql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};

  "postie" = callPackage
    ({ mkDerivation, attoparsec, cprng-aes, data-default-class, mtl
     , network, pipes, pipes-bytestring, pipes-parse, stringsearch, tls
     , transformers, uuid
     }:
     mkDerivation {
       pname = "postie";
       version = "0.5.0.0";
       sha256 = "1iqg7wirdcysjq4i7ah3lkzc2rzlbgvc7asq953zdir21g9jpqwk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec cprng-aes data-default-class mtl network pipes
         pipes-bytestring pipes-parse stringsearch tls transformers uuid
       ];
       description = "SMTP server library to receive emails from within Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postmark" = callPackage
    ({ mkDerivation, aeson, attoparsec, http-client-tls, http-types
     , network-api-support, text
     }:
     mkDerivation {
       pname = "postmark";
       version = "0.1.1";
       sha256 = "1jh1byixnc8mh3g4xb1w0nx9ghh5dchhqf1nxji869kbim2lqgaw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec http-client-tls http-types network-api-support
         text
       ];
       homepage = "https://github.com/apiengine/postmark";
       description = "Library for postmarkapp.com HTTP Api";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "postmaster" = callPackage
    ({ mkDerivation, adns, hopenssl, hsdns, hsemail, hsyslog, mtl
     , network, openssl, parsec
     }:
     mkDerivation {
       pname = "postmaster";
       version = "0.3";
       sha256 = "1yzhblrqnd94gvcl4dzxx6glx1qyyvjy7gqa6ymqahcy8kh1v7ki";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         hopenssl hsdns hsemail hsyslog mtl network parsec
       ];
       extraLibraries = [ adns openssl ];
       homepage = "http://github.com/peti/postmaster";
       description = "Postmaster ESMTP Server";
       license = "GPL";
     }) {};

  "powermate" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "powermate";
       version = "0.1";
       sha256 = "19qsi4g4v2dwagps3gq9grbin44rzk9ydpkpbwysc4gbizh1lrs0";
       buildDepends = [ network ];
       homepage = "http://neugierig.org/software/darcs/powermate/";
       description = "PowerMate bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "powerpc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "powerpc";
       version = "0.0.1";
       sha256 = "0z3nqv8l9h0kwdaqb2vnk7vx5d0hmx02giv2k01llk7vznlkqqny";
       homepage = "http://tomahawkins.org";
       description = "Tools for PowerPC programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ppm" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "ppm";
       version = "2009.5.13";
       sha256 = "0nzvxi1ybfxb1zqkbfqfic8j3mf3r6i2zdyjf7x41rz6m6lhqfcy";
       buildDepends = [ mtl ];
       homepage = "http://github.com/nfjinjing/ppm/tree/master";
       description = "a tiny PPM image generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pqc" = callPackage
    ({ mkDerivation, ChasingBottoms, QuickCheck, random, stm }:
     mkDerivation {
       pname = "pqc";
       version = "0.8";
       sha256 = "1n71qhlxn9js5cizyqdq9f7m08m5j0354871r8b47bnzdi2kqkc4";
       buildDepends = [ QuickCheck random stm ];
       testDepends = [ ChasingBottoms ];
       homepage = "http://hub.darcs.net/shelarcy/pqc";
       description = "Parallel batch driver for QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pqueue" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "pqueue";
       version = "1.2.1";
       sha256 = "1fily60f4njby7zknmik7a2wxsm3y77ckr69w9bb3fgq22gbzky6";
       buildDepends = [ deepseq ];
       description = "Reliable, persistent, fast priority queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pqueue-mtl" = callPackage
    ({ mkDerivation, MaybeT, mtl, stateful-mtl, uvector }:
     mkDerivation {
       pname = "pqueue-mtl";
       version = "1.0.7";
       sha256 = "0ikg11klbq25fjcbpyb7i7z9wyx9mf4hv262m14j741x4dk9ib6g";
       buildDepends = [ MaybeT mtl stateful-mtl uvector ];
       description = "Fully encapsulated monad transformers with queuelike functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "practice-room" = callPackage
    ({ mkDerivation, data-default, json, mps }:
     mkDerivation {
       pname = "practice-room";
       version = "0.0.2";
       sha256 = "071arrk0wir2lwziw6p3cbq6ybjdf3gfc4d25sh21gpnk10ighp2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ data-default json mps ];
       homepage = "http://github.com/nfjinjing/practice-room";
       description = "Practice Room";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "precis" = callPackage
    ({ mkDerivation, Cabal, cpphs, filepath, haskell-src-exts, xhtml }:
     mkDerivation {
       pname = "precis";
       version = "0.5.0";
       sha256 = "0d0cl60p58i8w2ll8z826r94zx0svm7v578fy70r7i19pn64l6bd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal cpphs filepath haskell-src-exts xhtml ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Diff Cabal packages";
       license = "unknown";
     }) {};

  "predicates" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "predicates";
       version = "0.1";
       sha256 = "0ly64xml5gbazyq07s409swgysvlwjc19w4x46yp1684ifv0gghf";
       description = "A couple of convenience functions for forming predicates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prednote" = callPackage
    ({ mkDerivation, contravariant, rainbow, split, text }:
     mkDerivation {
       pname = "prednote";
       version = "0.26.0.2";
       sha256 = "1s2bbf3qps3a328bdl1n0wls7d2dvrw3vy7a4kdrvx3md68pxgy7";
       buildDepends = [ contravariant rainbow split text ];
       homepage = "http://www.github.com/massysett/prednote";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prednote-test" = callPackage
    ({ mkDerivation, barecheck, prednote, QuickCheck, quickpull
     , rainbow, rainbow-tests, text
     }:
     mkDerivation {
       pname = "prednote-test";
       version = "0.26.0.2";
       sha256 = "1p1667vp56f2078f7zj02pjf577qf7wlr4s2x508x4s2vxy67sad";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         barecheck prednote QuickCheck quickpull rainbow rainbow-tests text
       ];
       homepage = "http://www.github.com/massysett/prednote";
       description = "Tests and QuickCheck generators to accompany prednote";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prefix-units" = callPackage
    ({ mkDerivation, Cabal, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "prefix-units";
       version = "0.1.0.2";
       sha256 = "07b5s2bsqlaad06dgr5psidfgi1nmgc5c16j6kzayw9f4najjrav";
       editedCabalFile = "02mh9m5yx7n25zl4vggjqckysphp60n2gic0m128wrsj7aannba9";
       testDepends = [
         Cabal HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/iustin/prefix-units";
       description = "A basic library for SI/binary prefix units";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prefork" = callPackage
    ({ mkDerivation, async, blaze-builder, cab, cmdargs, data-default
     , filepath, hspec, http-types, network, stm, system-argv0
     , system-filepath, wai, warp
     }:
     mkDerivation {
       pname = "prefork";
       version = "0.0.9";
       sha256 = "0zraxygc8ybf93sw7lq60nynd5k1q65dns5kl4mdyflv3in8cfw8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async blaze-builder cmdargs data-default http-types network stm
         system-argv0 system-filepath wai warp
       ];
       testDepends = [ cab filepath hspec stm ];
       description = "A library for building a prefork-style server quickly";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pregame" = callPackage
    ({ mkDerivation, data-default, lens, mtl, parallel, safe, stm, text
     , transformers, tuple, vector
     }:
     mkDerivation {
       pname = "pregame";
       version = "0.1.3.0";
       sha256 = "1hywls68mxhcpkhhn3sprw1d7kb7i6nlvdlmcncl1vg2sj677iq1";
       buildDepends = [
         data-default lens mtl parallel safe stm text transformers tuple
         vector
       ];
       homepage = "https://github.com/jxv/pregame";
       description = "Prelude counterpart";
       license = stdenv.lib.licenses.mit;
     }) {};

  "prelude-extras" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "prelude-extras";
       version = "0.4";
       sha256 = "0mzsc9pzcamaa7i3g9hkajy35sbpqdjrflv6r98r8hhlr0yrdjan";
       homepage = "http://github.com/ekmett/prelude-extras";
       description = "Haskell 98 - higher order versions of Prelude classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prelude-generalize" = callPackage
    ({ mkDerivation, comonad, logict, transformers }:
     mkDerivation {
       pname = "prelude-generalize";
       version = "0.4";
       sha256 = "0h452pn7zs97z5gv2p3x9pg61phphwcw5y5g1w38k3gihdvym8jl";
       buildDepends = [ comonad logict transformers ];
       description = "Another kind of alternate Prelude file";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "prelude-plus" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "prelude-plus";
       version = "0.0.0.6";
       sha256 = "139b0580f1gx4hj211c7lwcq5y6a0qpdzsaidvqbfq36h04w8kjv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ utf8-string ];
       description = "Prelude for rest of us";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prelude-prime" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "prelude-prime";
       version = "0.1";
       sha256 = "1avj11a5bqn8sxizzh1fxhw3dvd55xsimbbhdwymxfn45vvfswr7";
       description = "A slightly better (but conservative) Prelude";
       license = stdenv.lib.licenses.mit;
     }) {};

  "prelude-safeenum" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "prelude-safeenum";
       version = "0.1.1.1";
       sha256 = "0cff77nbhy3dsamrwm2wxhbi1mf2bzkdd1pdzqv3klpbzjwkdszv";
       homepage = "http://code.haskell.org/~wren/";
       description = "A redefinition of the Prelude's Enum class in order to render it safe";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "preprocessor-tools" = callPackage
    ({ mkDerivation, mtl, parsec, syb }:
     mkDerivation {
       pname = "preprocessor-tools";
       version = "1.0.1";
       sha256 = "0ngfmvw6hvbr52i01n180ls4c8rx2wk2rka6g6igpvy9x2gwjin9";
       buildDepends = [ mtl parsec syb ];
       homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
       description = "A framework for extending Haskell's syntax via quick-and-dirty preprocessors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "presburger" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "presburger";
       version = "1.2";
       sha256 = "1kx51ydpjg5dv762p85qh9w76qm038rw9pgfnd0az1vms97r1kpm";
       testDepends = [ QuickCheck ];
       homepage = "http://github.com/yav/presburger";
       description = "A decision procedure for quantifier-free linear arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "present" = callPackage
    ({ mkDerivation, aeson, atto-lisp, data-default, mtl, semigroups
     , text
     }:
     mkDerivation {
       pname = "present";
       version = "2.2";
       sha256 = "1z9zvmszda7h1h4inq4b6ig9bd205mskqq85ns3rzsffxaj471p4";
       buildDepends = [
         aeson atto-lisp data-default mtl semigroups text
       ];
       description = "Make presentations for data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "press" = callPackage
    ({ mkDerivation, json, mtl, parsec }:
     mkDerivation {
       pname = "press";
       version = "0.1.2";
       sha256 = "0aa3079az8bazyzqxxhx575vxr4a0p3wvlgh765w3k01vh6dkzgf";
       buildDepends = [ json mtl parsec ];
       homepage = "http://github.com/bickfordb/text-press";
       description = "Text template library targeted at the web / HTML generation";
       license = "GPL";
     }) {};

  "prettify" = callPackage
    ({ mkDerivation, semigroups }:
     mkDerivation {
       pname = "prettify";
       version = "1.0";
       sha256 = "18bwgz2cgkd6n9gwpwipv2bc6d5501mflmr0r2akwy98q2gb9qg8";
       buildDepends = [ semigroups ];
       description = "Haskell2010 structured text formatting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pretty" = callPackage
    ({ mkDerivation, deepseq, QuickCheck }:
     mkDerivation {
       pname = "pretty";
       version = "1.1.1.2";
       sha256 = "0i2n1ymszrrnv8npf3q7g7ccjrgfkfwfj5h83n768ahyrhr118nf";
       buildDepends = [ deepseq ];
       testDepends = [ QuickCheck ];
       homepage = "http://github.com/haskell/pretty";
       description = "Pretty-printing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pretty-class" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pretty-class";
       version = "1.0.1.1";
       sha256 = "1qdfp2kpahzflq9a3idwmb0pqs4l7almxn5rbw5gp2pmdx81p3am";
       homepage = "https://github.com/ddssff/pretty-class";
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pretty-compact" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pretty-compact";
       version = "1.0";
       sha256 = "0k6yvdwcfhjp0dbfmc55xfncfry7b69hrp5rsaqm2iia3ahx0nan";
       description = "Pretty-printing library";
       license = "GPL";
     }) {};

  "pretty-hex" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pretty-hex";
       version = "1.0";
       sha256 = "0ylwkvvjvmpprha9nx83xb8gkhyanhk5fffc0r7lb96n4ch5z6pz";
       description = "A library for hex dumps of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pretty-ncols" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pretty-ncols";
       version = "0.1";
       sha256 = "0bvd8wgjrj9g86b1z8m9mjzswibrmhasgajnkgr2dlizl5lg7faq";
       description = "A implementation of multi-column layout w/ Text.PrettyPrint";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pretty-show" = callPackage
    ({ mkDerivation, filepath, happy, haskell-lexer }:
     mkDerivation {
       pname = "pretty-show";
       version = "1.6.8";
       sha256 = "0vfb712dvbb91659sch62d06vm0451b9l4l0hdwnlbhzjymmh2rs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath haskell-lexer ];
       buildTools = [ happy ];
       homepage = "http://wiki.github.com/yav/pretty-show";
       description = "Tools for working with derived `Show` instances and generic inspection of values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pretty-sop" = callPackage
    ({ mkDerivation, generics-sop, pretty-show }:
     mkDerivation {
       pname = "pretty-sop";
       version = "0.1.0.1";
       sha256 = "1sv6lwzgj9jv7lx3lb868md5w93p77mzspgxgqcss1kr9q5xyfvm";
       buildDepends = [ generics-sop pretty-show ];
       description = "A generic pretty-printer using generics-sop";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pretty-tree" = callPackage
    ({ mkDerivation, boxes }:
     mkDerivation {
       pname = "pretty-tree";
       version = "0.1.0.0";
       sha256 = "0cf856qjacc0lmiina44s00i17ga2qrfr7wdlxhwiqdmpsh5g3fw";
       buildDepends = [ boxes ];
       description = "Pretty-print trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prettyclass" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "prettyclass";
       version = "1.0.0.0";
       sha256 = "11l9ajci7nh1r547hx8hgxrhq8mh5gdq30pdf845wvilg9p48dz5";
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prim-uniq" = callPackage
    ({ mkDerivation, dependent-sum, primitive }:
     mkDerivation {
       pname = "prim-uniq";
       version = "0.1.0.1";
       sha256 = "1zssi4zaihjaf3an10ar39d4qb155wcl1j66aymfrr9z2f2rf1gv";
       buildDepends = [ dependent-sum primitive ];
       homepage = "https://github.com/mokus0/prim-uniq";
       description = "Opaque unique identifiers in primitive state monads";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "primes" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "primes";
       version = "0.2.1.0";
       sha256 = "0ny6fzr967d1fifk050k95j9snnbjjif2bxf3v9s93k3zdc6bmkl";
       homepage = "http://github.com/sebfisch/primes";
       description = "Efficient, purely functional generation of prime numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "primitive" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "primitive";
       version = "0.5.4.0";
       sha256 = "05gdgj383xdrdkhxh26imlvs8ji0z28ny38ms9snpvv5i8l2lg10";
       homepage = "https://github.com/haskell/primitive";
       description = "Primitive memory-related operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "primula-board" = callPackage
    ({ mkDerivation, ConfigFile, happstack, happstack-helpers
     , happstack-server, happstack-state, hsp, MissingH, mtl, random
     , regex-posix, split, time
     }:
     mkDerivation {
       pname = "primula-board";
       version = "0.0.1";
       sha256 = "0hh13i0idpwv509zavg92wwvp3s20vc1ivz7vfwa4kxp0h21phs9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile happstack happstack-helpers happstack-server
         happstack-state hsp MissingH mtl random regex-posix split time
       ];
       homepage = "http://kagami.touhou.ru/projects/show/primula";
       description = "ImageBoard on Happstack and HSP";
       license = "GPL";
     }) {};

  "primula-bot" = callPackage
    ({ mkDerivation, ConfigFile, HTTP, mtl, network, parsec
     , utf8-string, XMPP
     }:
     mkDerivation {
       pname = "primula-bot";
       version = "0.0.2";
       sha256 = "0j3xjlwvix81zxd38540jwb3vp438d72gmfxdhbypyi5f1qgx01x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ConfigFile HTTP mtl network parsec utf8-string XMPP
       ];
       homepage = "http://kagami.touhou.ru/projects/show/primula";
       description = "Jabber-bot for primula-board ImageBoard";
       license = "GPL";
     }) {};

  "printf-mauke" = callPackage
    ({ mkDerivation, data-default, utf8-string }:
     mkDerivation {
       pname = "printf-mauke";
       version = "0.6.0";
       sha256 = "1fyxm4bdhv27g83q21d0j59p7da8kgi8sfnsp39xb8gl4k0gd80z";
       buildDepends = [ data-default utf8-string ];
       description = "A Perl printf like formatter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "printxosd" = callPackage
    ({ mkDerivation, xosd }:
     mkDerivation {
       pname = "printxosd";
       version = "0.1";
       sha256 = "1myn6bp28d8nf92v9xf3iw5jvzwmrxbzf8px254hmzv8zvd5ki1i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ xosd ];
       homepage = "http://code.haskell.org/~dons/code/printxosd";
       description = "Simple tool to display some text on an on-screen display";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "priority-queue" = callPackage
    ({ mkDerivation, queue, reord, stateref }:
     mkDerivation {
       pname = "priority-queue";
       version = "0.2.2";
       sha256 = "0nsiil0yl32m80a1kpg3z0wd5fxwkpz2lzf66pa06iy24q0rz5lf";
       buildDepends = [ queue reord stateref ];
       homepage = "http://code.haskell.org/~mokus/priority-queue";
       description = "Simple implementation of a priority queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "priority-sync" = callPackage
    ({ mkDerivation, parallel, PSQueue, random, stm }:
     mkDerivation {
       pname = "priority-sync";
       version = "0.2.1.1";
       sha256 = "1ffg3ba6wfd72r2d86hq28y83qx80pdza939knay9hsnyw84vd6g";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parallel PSQueue random stm ];
       description = "Cooperative task prioritization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "privileged-concurrency" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "privileged-concurrency";
       version = "0.3";
       sha256 = "0r345189lympvin6xw6r8s04dldj94kv2703ilcazm0a6mgf0q67";
       buildDepends = [ stm ];
       description = "Provides privilege separated versions of the concurrency primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prizm" = callPackage
    ({ mkDerivation, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "prizm";
       version = "0.3.1.2";
       sha256 = "0n0pihi8f8y349lmy6hcv2z728isvwjlcggv9pnhm8d0k97la2b9";
       buildDepends = [ text ];
       testDepends = [
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/ixmatus/prizm";
       description = "Compute with colors and differenct color spaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "probability" = callPackage
    ({ mkDerivation, random, transformers, utility-ht }:
     mkDerivation {
       pname = "probability";
       version = "0.2.4.1";
       sha256 = "0nh73l03d7niz3a3h2y4i80mlp64ilfkx7krn57skzfi8drwnjvc";
       buildDepends = [ random transformers utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/Probabilistic_Functional_Programming";
       description = "Probabilistic Functional Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "probable" = callPackage
    ({ mkDerivation, mtl, mwc-random, primitive, statistics
     , transformers, vector
     }:
     mkDerivation {
       pname = "probable";
       version = "0.1.0.0";
       sha256 = "1269cajfjnfrqacs874v6zczrb497474hqhid5wmm8f9fmhiy0wz";
       buildDepends = [
         mtl mwc-random primitive statistics transformers vector
       ];
       homepage = "http://github.com/alpmestan/probable";
       description = "Easy and reasonably efficient probabilistic programming and random generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "proc" = callPackage
    ({ mkDerivation, filepath, regex-tdfa, split, strict, xformat }:
     mkDerivation {
       pname = "proc";
       version = "0.0.9";
       sha256 = "0p3cr4q34h81g77psypja4m0mgs9mwl51mfb5kdxj5xrsf2nd3la";
       buildDepends = [ filepath regex-tdfa split strict xformat ];
       description = "Parse process information for Linux";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "process" = callPackage
    ({ mkDerivation, deepseq, filepath }:
     mkDerivation {
       pname = "process";
       version = "1.2.0.0";
       sha256 = "02il5pxibf0q9b46v0lgdxyc2wlk5kg1v8223ry6brg41zpcj71q";
       editedCabalFile = "1bz4cxzi251aphyiplsf55bk3315s9ppliq9sigpfzfss1w8a023";
       buildDepends = [ deepseq filepath ];
       description = "Process libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "process-conduit" = callPackage
    ({ mkDerivation, conduit, conduit-extra, control-monad-loop, hspec
     , mtl, resourcet, shakespeare, shakespeare-text, text
     }:
     mkDerivation {
       pname = "process-conduit";
       version = "1.2.0.1";
       sha256 = "0hnbywmjvk3y26sc9a0jfqzm04pg08zd2bflld1mvni02s89lvc8";
       buildDepends = [
         conduit control-monad-loop mtl resourcet shakespeare
         shakespeare-text text
       ];
       testDepends = [ conduit conduit-extra hspec resourcet ];
       homepage = "http://github.com/snoyberg/process-conduit";
       description = "Conduits for processes (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "process-extras" = callPackage
    ({ mkDerivation, deepseq, text }:
     mkDerivation {
       pname = "process-extras";
       version = "0.2.0";
       sha256 = "0mr4f2v19qz6d6jhffz9gky0ykdqwl8c11adbdm04wm2a3xsvf7g";
       buildDepends = [ deepseq text ];
       homepage = "https://github.com/davidlazar/process-extras";
       description = "Process extras";
       license = stdenv.lib.licenses.mit;
     }) {};

  "process-iterio" = callPackage
    ({ mkDerivation, cpphs, iterIO, transformers }:
     mkDerivation {
       pname = "process-iterio";
       version = "0.0.0";
       sha256 = "18kdj70fv4y5fnw7d8pd0mbvlwca1pm1f88z4ibpji0n4dja332z";
       buildDepends = [ cpphs iterIO transformers ];
       testDepends = [ cpphs iterIO transformers ];
       homepage = "https://github.com/garious/process-iterio";
       description = "IterIO Process Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "process-leksah" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "process-leksah";
       version = "1.0.1.4";
       sha256 = "1899ybhnsj22sir2l933lhkk9fpcgjbb4qd6gscnby28qcs5bwbv";
       buildDepends = [ filepath ];
       description = "Process libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "process-listlike" = callPackage
    ({ mkDerivation, deepseq, ListLike, text }:
     mkDerivation {
       pname = "process-listlike";
       version = "1.0";
       sha256 = "0yaz90pfpx9kahwbvbvl2ir62imxxsq7v72i67ac2zv3585c427r";
       buildDepends = [ deepseq ListLike text ];
       homepage = "https://github.com/ddssff/process-listlike";
       description = "Process extras";
       license = stdenv.lib.licenses.mit;
     }) {};

  "process-progress" = callPackage
    ({ mkDerivation, deepseq, HUnit, ListLike, mtl, process-listlike
     , text, time, utf8-string
     }:
     mkDerivation {
       pname = "process-progress";
       version = "0.14";
       sha256 = "0kdzb8m6fx0ah9i15fpcz6phzqd88g4djf0a5h0vi4d4qkib6kin";
       buildDepends = [
         deepseq HUnit ListLike mtl process-listlike text time utf8-string
       ];
       homepage = "https://src.seereason.com/process-progress";
       description = "Run a process and do reportsing on its progress";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "process-qq" = callPackage
    ({ mkDerivation, enumerator, mtl, shakespeare-text, text }:
     mkDerivation {
       pname = "process-qq";
       version = "0.2.0";
       sha256 = "1495dc39kjf9mjvn7ag8hb95bsmhb18sd0ykg4mz7rrl0q03ig2a";
       buildDepends = [ enumerator mtl shakespeare-text text ];
       homepage = "http://github.com/tanakh/process-qq";
       description = "Quasi-Quoters for exec process";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "process-streaming" = callPackage
    ({ mkDerivation, attoparsec, bifunctors, conceit, contravariant
     , doctest, exceptions, filepath, foldl, free, lens, pipes
     , pipes-attoparsec, pipes-bytestring, pipes-concurrency
     , pipes-group, pipes-parse, pipes-safe, pipes-text, semigroups
     , tasty, tasty-hunit, text, transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "process-streaming";
       version = "0.6.5.0";
       sha256 = "126qgpnrk05gz196gf3j2h440kmzzkcz2r5nv437ndmjnsw8rq94";
       buildDepends = [
         bifunctors conceit contravariant exceptions foldl free pipes
         pipes-bytestring pipes-concurrency pipes-parse pipes-safe
         pipes-text semigroups text transformers transformers-compat void
       ];
       testDepends = [
         attoparsec bifunctors doctest exceptions filepath free lens pipes
         pipes-attoparsec pipes-bytestring pipes-concurrency pipes-group
         pipes-parse pipes-safe pipes-text semigroups tasty tasty-hunit text
         transformers transformers-compat void
       ];
       description = "Streaming interface to system processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "processing" = callPackage
    ({ mkDerivation, blaze-html, filepath, mainland-pretty, multiset
     , QuickCheck, quickcheck-instances, text, transformers
     }:
     mkDerivation {
       pname = "processing";
       version = "1.2.0.1";
       sha256 = "1axryd8453b2l4hbhqy5vkj29hqppsvk1sqxbawdhk3d3hs705pa";
       buildDepends = [
         blaze-html filepath mainland-pretty multiset QuickCheck
         quickcheck-instances text transformers
       ];
       description = "Web graphic applications with processing.js.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "procrastinating-structure" = callPackage
    ({ mkDerivation, procrastinating-variable }:
     mkDerivation {
       pname = "procrastinating-structure";
       version = "1.0.1";
       sha256 = "126mp2mfmy9xg1kichl19ga6j3w1s0qpk3hqh47x5x5120qh63l3";
       buildDepends = [ procrastinating-variable ];
       description = "Pure structures that can be incrementally created in impure code";
       license = "unknown";
     }) {};

  "procrastinating-variable" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "procrastinating-variable";
       version = "1.0.2";
       sha256 = "12px0nk7j74hyfzcvxacd9020gk3cd3ijqb7fjmmg8y33354jkc4";
       homepage = "http://github.com/gcross/procrastinating-variable";
       description = "Haskell values that cannot be evaluated immediately";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "procstat" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "procstat";
       version = "0.1.0.1";
       sha256 = "1md75jc32nfnvs7ygf1mna00gl0wmimp2lkdcs9r9v0iy4b1hr5m";
       buildDepends = [ attoparsec ];
       homepage = "http://closure.ath.cx/procstat";
       description = "get information on processes in Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "proctest" = callPackage
    ({ mkDerivation, hspec, HUnit, QuickCheck, text }:
     mkDerivation {
       pname = "proctest";
       version = "0.1.3.0";
       sha256 = "02iz323arx9zwclvspgaaqz81bp6jdnj89pjm08n2gamg39zsbdn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hspec HUnit QuickCheck text ];
       homepage = "https://github.com/nh2/proctest";
       description = "An IO library for testing interactive command line programs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "product-profunctors" = callPackage
    ({ mkDerivation, contravariant, profunctors }:
     mkDerivation {
       pname = "product-profunctors";
       version = "0.6";
       sha256 = "1qhl2v0shzip5yh7x7b6k7xsnd4d5spf1f69h0qr0l57lm6jywl4";
       editedCabalFile = "0cix24mk56pdfh4dn404fsc7njvax66dir6xyhh6k6ip83c4bf29";
       buildDepends = [ contravariant profunctors ];
       testDepends = [ profunctors ];
       homepage = "https://github.com/tomjaguarpaw/product-profunctors";
       description = "product-profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prof2dot" = callPackage
    ({ mkDerivation, filepath, parsec }:
     mkDerivation {
       pname = "prof2dot";
       version = "0.4.1";
       sha256 = "1cf1ysnfpng7ijgsbnly5878wg7cp907cqpvf4yq9sd6nym8hcng";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath parsec ];
       homepage = "http://antiope.com/downloads.html";
       description = "Convert GHC profiles into GraphViz's dot format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prof2pretty" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, semigroups, uniplate
     , zenc
     }:
     mkDerivation {
       pname = "prof2pretty";
       version = "0.1.0.0";
       sha256 = "104frg0czfk4rgjxyf0xz7100j3y9ndvf01jgv3yibaq98v2h64r";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath haskell-src-exts semigroups uniplate zenc
       ];
       homepage = "https://gitorious.org/prof2pretty";
       description = "generate pretty source from time/allocation profiles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "profiteur" = callPackage
    ({ mkDerivation, aeson, attoparsec, filepath, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "profiteur";
       version = "0.1.2.1";
       sha256 = "1108hhh2ivhs85jkga4wps2yscgjnp211sw5w45j4wp9dgpz2hak";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec filepath text unordered-containers vector
       ];
       homepage = "http://github.com/jaspervdj/profiteur";
       description = "Treemap visualiser for GHC prof files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "profunctor-extras" = callPackage
    ({ mkDerivation, profunctors }:
     mkDerivation {
       pname = "profunctor-extras";
       version = "4.0";
       sha256 = "10j458liqlyz5s9gkg95c6aq7ap5fa7d8pc7hygy71nn87pm2g4a";
       buildDepends = [ profunctors ];
       homepage = "http://github.com/ekmett/profunctor-extras/";
       description = "This package has been absorbed into profunctors 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "profunctors" = callPackage
    ({ mkDerivation, comonad, distributive, semigroupoids, tagged
     , transformers
     }:
     mkDerivation {
       pname = "profunctors";
       version = "4.3.2";
       sha256 = "06dv9bjz2hsm32kzfqqm6z54197dfjm3wycnbbgl9pib711w484v";
       buildDepends = [
         comonad distributive semigroupoids tagged transformers
       ];
       homepage = "http://github.com/ekmett/profunctors/";
       description = "Profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "progress" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "progress";
       version = "1.0";
       sha256 = "0cac4v6k2nrpglnf3680y334kw4k0s6xfm86wrfyszl5sq2a7w94";
       buildDepends = [ time ];
       description = "Simple progress tracking & projection library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "progressbar" = callPackage
    ({ mkDerivation, io-reactive }:
     mkDerivation {
       pname = "progressbar";
       version = "0.0.1";
       sha256 = "09yfspxcdp4y5chim2qmylfmjp0kdg4qg2w54kg3hir8f7kih3ns";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ io-reactive ];
       description = "Progressbar API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "progression" = callPackage
    ({ mkDerivation, criterion, filepath, haskeline, txt-sushi }:
     mkDerivation {
       pname = "progression";
       version = "0.5.0.2";
       sha256 = "01s01v59hjy5i8dd9a1gxjpyw2qq3r81np7acn94wjh64c8rrmpa";
       buildDepends = [ criterion filepath haskeline txt-sushi ];
       homepage = "http://chplib.wordpress.com/2010/02/04/progression-supporting-optimisation-in-haskell/";
       description = "Automates the recording and graphing of criterion benchmarks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "progressive" = callPackage
    ({ mkDerivation, binary, filepath, text }:
     mkDerivation {
       pname = "progressive";
       version = "0.1.0.1";
       sha256 = "1psbgl19x2wwh4rcd4nsayrc1bq2g27qywr1m9jgmshcz1cinpbh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary filepath text ];
       homepage = "https://bitbucket.org/gchrupala/progression";
       description = "Multilabel classification model which learns sequentially (online)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "proj4-hs-bindings" = callPackage
    ({ mkDerivation, proj }:
     mkDerivation {
       pname = "proj4-hs-bindings";
       version = "0.1";
       sha256 = "0cwkjg1bm1swl103nsziyc71yqgvdq82ywgi2jnn7cj9lk4ihrah";
       extraLibraries = [ proj ];
       description = "Haskell bindings for the Proj4 C dynamic library";
       license = "GPL";
     }) {};

  "project-template" = callPackage
    ({ mkDerivation, base64-bytestring, conduit, conduit-extra, hspec
     , mtl, QuickCheck, resourcet, system-fileio, system-filepath, text
     , transformers
     }:
     mkDerivation {
       pname = "project-template";
       version = "0.1.4.2";
       sha256 = "10n23s6g7fv0l42hsb804z0qqcyxqw32kwzg1f0w3c6gka844akr";
       buildDepends = [
         base64-bytestring conduit conduit-extra mtl resourcet system-fileio
         system-filepath text transformers
       ];
       testDepends = [
         base64-bytestring conduit hspec QuickCheck resourcet
         system-filepath text transformers
       ];
       homepage = "https://github.com/fpco/haskell-ide";
       description = "Specify Haskell project templates and generate files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "projection" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "projection";
       version = "0.1";
       sha256 = "0g9zrdp92w8ygrsmbw4600xaf8d17sm4pq68qd6z7hnf8zps22c1";
       editedCabalFile = "02ykpvapl8ypzrggf0b6bdcy6wcwbkwrczhbq3ccc02282lv8pc0";
       description = "Projection function for arbitrarily nested binary product types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prolog" = callPackage
    ({ mkDerivation, mtl, parsec, syb, th-lift, transformers }:
     mkDerivation {
       pname = "prolog";
       version = "0.2.0.1";
       sha256 = "073sd3rhcfqw9csm0qsbc57ix57dv3k5yjr9hcc33b9zq5y10sp0";
       buildDepends = [ mtl parsec syb th-lift transformers ];
       homepage = "https://github.com/Erdwolf/prolog";
       description = "A Prolog interpreter written in Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "prolog-graph" = callPackage
    ({ mkDerivation, cmdargs, fgl, graphviz, mtl, prolog
     , prolog-graph-lib, text
     }:
     mkDerivation {
       pname = "prolog-graph";
       version = "0.1.0.2";
       sha256 = "1w3wz0sn1qhw286g3arin30jvlldadw976xr7hp0afdvqicl3892";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs fgl graphviz mtl prolog prolog-graph-lib text
       ];
       homepage = "https://github.com/Erdwolf/prolog";
       description = "A command line tool to visualize query resolution in Prolog";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "prolog-graph-lib" = callPackage
    ({ mkDerivation, fgl, graphviz, mtl, prolog, text }:
     mkDerivation {
       pname = "prolog-graph-lib";
       version = "0.2.0.1";
       sha256 = "02xa4hqmhmsv7vkdy3m3dr1w3z88kc8ly0jjn7q6pba5yarci7nr";
       buildDepends = [ fgl graphviz mtl prolog text ];
       homepage = "https://github.com/Erdwolf/prolog";
       description = "Generating images of resolution trees for Prolog queries";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "promise" = callPackage
    ({ mkDerivation, async }:
     mkDerivation {
       pname = "promise";
       version = "0.1.0.0";
       sha256 = "1hzsprmw15apc654n77ima1pgs9nj6287d412jb5z37154bd0nfg";
       buildDepends = [ async ];
       homepage = "http://github.com/jfischoff/promise";
       description = "A monadic interface for async";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "propane" = callPackage
    ({ mkDerivation, colour, filepath, repa, repa-devil, spawn }:
     mkDerivation {
       pname = "propane";
       version = "0.1";
       sha256 = "1kzlwsxka72h3a612xi2s741hdx88qsib07kcralv2k76krqxlj4";
       buildDepends = [ colour filepath repa repa-devil spawn ];
       description = "Functional synthesis of images and animations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "propellor" = callPackage
    ({ mkDerivation, ansi-terminal, async, filepath, hslogger, IfElse
     , MissingH, MonadCatchIO-transformers, mtl, network, QuickCheck
     , time, unix-compat
     }:
     mkDerivation {
       pname = "propellor";
       version = "1.2.0";
       sha256 = "0k1b9pw89dwxwx90kvjj17qzb2agsvslllrvzm7f40dq0rcf0y7w";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal async filepath hslogger IfElse MissingH
         MonadCatchIO-transformers mtl network QuickCheck time unix-compat
       ];
       homepage = "https://propellor.branchable.com/";
       description = "property-based host configuration management in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "properties" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "properties";
       version = "0.0.2";
       sha256 = "04a35zxgps9rn6y86x3jf6gma6kjl8izmnyl45hz64cl9yb5dwwi";
       description = "check quickCheck properties in real time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "property-list" = callPackage
    ({ mkDerivation, base64-bytestring, cereal, free, oneOfN
     , recursion-schemes, syb, text, time, transformers, vector, xml
     }:
     mkDerivation {
       pname = "property-list";
       version = "0.1.0.4";
       sha256 = "19i0pzdys7k0gavax6ygk0x58cf636phzp2r99glyn8qcb51yj0z";
       buildDepends = [
         base64-bytestring cereal free oneOfN recursion-schemes syb text
         time transformers vector xml
       ];
       homepage = "https://github.com/mokus0/property-list";
       description = "Apple property list parser";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "proplang" = callPackage
    ({ mkDerivation, glade, glib, gtk }:
     mkDerivation {
       pname = "proplang";
       version = "0.1";
       sha256 = "1vm01qvd0jgcdpqx3p2h6gafhxi5x7bs8r5a6xsk4zz6cc1cbw4m";
       buildDepends = [ glade glib gtk ];
       homepage = "http://www-users.cs.york.ac.uk/~ndm/proplang/";
       description = "A library for functional GUI development";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "props" = callPackage
    ({ mkDerivation, doctest, QuickCheck }:
     mkDerivation {
       pname = "props";
       version = "0.1.2";
       sha256 = "10bkbqhl15xgc9iglx0f9h218a2hcfg0wali2c6a17wvlpfcwjbx";
       testDepends = [ doctest QuickCheck ];
       homepage = "http://github.com/deviant-logic/props";
       description = "Reusable quickcheck properties";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "protobuf" = callPackage
    ({ mkDerivation, cereal, data-binary-ieee754, deepseq, hex, HUnit
     , mtl, QuickCheck, tagged, tasty, tasty-hunit, tasty-quickcheck
     , text, unordered-containers
     }:
     mkDerivation {
       pname = "protobuf";
       version = "0.2.0.4";
       sha256 = "0gg678cb1psgdsjzv9x7mhcjmywj8bgzmp9pd850d3p9zyiw9l2j";
       buildDepends = [
         cereal data-binary-ieee754 deepseq mtl text unordered-containers
       ];
       testDepends = [
         cereal hex HUnit mtl QuickCheck tagged tasty tasty-hunit
         tasty-quickcheck text unordered-containers
       ];
       homepage = "https://github.com/alphaHeavy/protobuf";
       description = "Google Protocol Buffers via GHC.Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "protobuf-native" = callPackage
    ({ mkDerivation, cereal, cplusplus-th, criterion, hprotoc-fork
     , protobuf, protocol-buffers-fork, QuickCheck, text, utf8-string
     }:
     mkDerivation {
       pname = "protobuf-native";
       version = "1.0.0.1";
       sha256 = "0k3cljm4r3jxlklkmfhv0362hg8095f1cq73mgdqkbqa5gwrk86r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cplusplus-th text ];
       testDepends = [
         cereal cplusplus-th criterion hprotoc-fork protobuf
         protocol-buffers-fork QuickCheck text utf8-string
       ];
       extraLibraries = [ protobuf ];
       homepage = "https://github.com/nicta/protobuf-native";
       description = "Protocol Buffers via C++";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) protobuf; };

  "protocol-buffers" = callPackage
    ({ mkDerivation, binary, filepath, mtl, parsec, syb, utf8-string }:
     mkDerivation {
       pname = "protocol-buffers";
       version = "2.0.17";
       sha256 = "12aky44ssgdj6vsjg0yvr8350cym7n6kn7gdaax0nxzpfxrjfy1v";
       buildDepends = [ binary filepath mtl parsec syb utf8-string ];
       homepage = "http://code.haskell.org/protocol-buffers/";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "protocol-buffers-descriptor" = callPackage
    ({ mkDerivation, protocol-buffers }:
     mkDerivation {
       pname = "protocol-buffers-descriptor";
       version = "2.0.17";
       sha256 = "0jl041645d83iqqiw891d2k760jql6djvi2mmjh9lnmp48lwjy3p";
       buildDepends = [ protocol-buffers ];
       homepage = "http://code.haskell.org/protocol-buffers/";
       description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "protocol-buffers-descriptor-fork" = callPackage
    ({ mkDerivation, protocol-buffers-fork }:
     mkDerivation {
       pname = "protocol-buffers-descriptor-fork";
       version = "2.0.16";
       sha256 = "1wn6yqs70n26j6z44yfmz4j4rwj2h1zfpysn56wzaq7bwsdb0bqb";
       buildDepends = [ protocol-buffers-fork ];
       homepage = "http://darcs.factisresearch.com/pub/protocol-buffers-fork/";
       description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "protocol-buffers-fork" = callPackage
    ({ mkDerivation, binary, filepath, mtl, syb, utf8-string }:
     mkDerivation {
       pname = "protocol-buffers-fork";
       version = "2.0.16";
       sha256 = "061kc43dg3xdv81wmj4yjm1s6amrd8ql59nj7vff4vdb87v9nriz";
       buildDepends = [ binary filepath mtl syb utf8-string ];
       homepage = "http://darcs.factisresearch.com/pub/protocol-buffers-fork/";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prototype" = callPackage
    ({ mkDerivation, monads-tf }:
     mkDerivation {
       pname = "prototype";
       version = "0.5.3";
       sha256 = "1kzinhdy622gzg3mzfln15vgi890i2l3lkrgrw0n0yb08r2n53i7";
       buildDepends = [ monads-tf ];
       description = "prototype-based programming on Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "prove-everywhere-server" = callPackage
    ({ mkDerivation, aeson, case-insensitive, http-types
     , optparse-applicative, parsec, parsers, safe, text, time
     , unordered-containers, wai, warp
     }:
     mkDerivation {
       pname = "prove-everywhere-server";
       version = "0.1.1";
       sha256 = "127ky7rj9d2bqaddcg99azm18m65ksxr26amq0r5prhym8kmc3jx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson case-insensitive http-types optparse-applicative parsec
         parsers safe text time unordered-containers wai warp
       ];
       homepage = "https://github.com/prove-everywhere/server";
       description = "The server for ProveEverywhere";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "proxy-kindness" = callPackage
    ({ mkDerivation, tagged }:
     mkDerivation {
       pname = "proxy-kindness";
       version = "0.1";
       sha256 = "0wpzj6hnlxvgd7lfd2921mrk97aw7ljf77jry3my97zdapkxz8i7";
       buildDepends = [ tagged ];
       homepage = "https://github.com/jberryman/proxy-kindness";
       description = "A library for kind-polymorphic manipulation and inspection of Proxy values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pseudomacros" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "pseudomacros";
       version = "0.0.1";
       sha256 = "168vqim5m72yl51w6pi9vxzp324i1gnawrl2zlsayw81s7lf1jp4";
       buildDepends = [ time ];
       description = "cpp-style built-in macros using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "psqueues" = callPackage
    ({ mkDerivation, deepseq, hashable, HUnit, QuickCheck, tagged
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "psqueues";
       version = "0.1.1.0";
       sha256 = "1w6i6cl9wfblbg8d06lffh4l5y42li9a27myyvwnzfv86z49s9cb";
       buildDepends = [ deepseq hashable ];
       testDepends = [
         deepseq hashable HUnit QuickCheck tagged test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "Pure priority search queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pub" = callPackage
    ({ mkDerivation, cmdargs, ConfigFile, groom, hedis, hslogger, mtl
     , network, pipes, pipes-bytestring, safe, system-filepath, text
     , time, transformers
     }:
     mkDerivation {
       pname = "pub";
       version = "2.0.2";
       sha256 = "0ps4i5q4kzkla6gzr8amf2bql2y5g0gb4dbjf9w0q58yzzvpp2c8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs ConfigFile groom hedis hslogger mtl network pipes
         pipes-bytestring safe system-filepath text time transformers
       ];
       description = "Pipe stdin to a redis pub/sub channel";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "publicsuffixlist" = callPackage
    ({ mkDerivation, cereal, data-default, HUnit, idna, text
     , utf8-string
     }:
     mkDerivation {
       pname = "publicsuffixlist";
       version = "0.1";
       sha256 = "0mbrmhgyjp8jms3fd3nq4knc4j97sw8ijrmnlfjs7qj8jw4vwzxk";
       buildDepends = [ cereal data-default text utf8-string ];
       testDepends = [ cereal data-default HUnit idna text utf8-string ];
       homepage = "https://github.com/litherum/publicsuffixlist";
       description = "Is a given string a domain suffix?";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "publicsuffixlistcreate" = callPackage
    ({ mkDerivation, cereal, conduit, data-default, HUnit, idna
     , publicsuffixlist, text
     }:
     mkDerivation {
       pname = "publicsuffixlistcreate";
       version = "0.0.2";
       sha256 = "0v4arfixnfzpsi3hvik2s2lqqp61324bd98wc8ympqxlmldpbri3";
       buildDepends = [ conduit data-default idna publicsuffixlist text ];
       testDepends = [ cereal HUnit publicsuffixlist ];
       homepage = "https://github.com/litherum/publicsuffixlist";
       description = "Create the publicsuffixlist package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pubnub" = callPackage
    ({ mkDerivation, aeson, async, base64-bytestring, Cabal, cipher-aes
     , conduit, conduit-extra, crypto-api, crypto-cipher-types
     , data-default, http-client, http-conduit, http-types, HUnit
     , lifted-base, mtl, QuickCheck, SHA, smallcheck, tasty, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck, text, time, transformers
     , uuid, vector
     }:
     mkDerivation {
       pname = "pubnub";
       version = "1.1.1";
       sha256 = "0clcf5gsw34gpqycw652wq8ndmlzz48mf2gla0g7j815j21hrhv8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson async base64-bytestring Cabal cipher-aes conduit
         conduit-extra crypto-api crypto-cipher-types data-default
         http-client http-conduit http-types HUnit lifted-base mtl
         QuickCheck SHA smallcheck tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck text time transformers uuid vector
       ];
       testDepends = [
         Cabal HUnit QuickCheck smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "http://github.com/pubnub/haskell";
       description = "PubNub Haskell SDK";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pubsub" = callPackage
    ({ mkDerivation, fastcgi, feed, HTTP, json, mime, network, random
     , utf8-string, xml
     }:
     mkDerivation {
       pname = "pubsub";
       version = "0.11";
       sha256 = "09xaycbzq50q1299r4s84nb8wjhqalimvipv8z135fifvgdsjpm8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         fastcgi feed HTTP json mime network random utf8-string xml
       ];
       homepage = "http://projects.haskell.org/pubsub/";
       description = "A library for Google/SixApart pubsub hub interaction";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "puffytools" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, console-program, MissingH
     , QuickCheck, random-fu, safe, test-framework
     , test-framework-quickcheck2, text, time, vector
     }:
     mkDerivation {
       pname = "puffytools";
       version = "0.0.0.1";
       sha256 = "0pqqcs3plrhq6474j29lnwvc6fhr1wskb0ph8x64gzv9ly52dc9i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty console-program MissingH random-fu safe text
         time vector
       ];
       testDepends = [
         aeson QuickCheck test-framework test-framework-quickcheck2 text
         time vector
       ];
       homepage = "https://github.com/pharpend/puffytools";
       description = "A CLI assistant";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pugixml" = callPackage
    ({ mkDerivation, data-default-class, tasty, tasty-hunit }:
     mkDerivation {
       pname = "pugixml";
       version = "0.3.0";
       sha256 = "0xma82nwl35scc43r8yhd0irhf1d60ssxs3gh6y717cpl29zv5wa";
       buildDepends = [ data-default-class ];
       testDepends = [ tasty tasty-hunit ];
       homepage = "https://github.com/philopon/pugixml-hs";
       description = "pugixml binding";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pugs-DrIFT" = callPackage
    ({ mkDerivation, HsSyck, mtl, random, stm, utf8-string }:
     mkDerivation {
       pname = "pugs-DrIFT";
       version = "2.2.3.20130611";
       sha256 = "0c5h829zh8clggf53byng4gh5g0zxk3763w1nk0ihf2laak238c6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HsSyck mtl random stm utf8-string ];
       homepage = "http://pugscode.org/";
       description = "DrIFT with pugs-specific rules";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pugs-HsSyck" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pugs-HsSyck";
       version = "0.41";
       sha256 = "108dfhd83yzmlhbgff6j0a40r6vx9aq9dcdd8swk4yib9gbvsrp1";
       description = "Fast, lightweight YAML loader and dumper";
       license = "unknown";
     }) {};

  "pugs-compat" = callPackage
    ({ mkDerivation, mtl, network, random, regex-base
     , regex-pcre-builtin, stm, stringtable-atom, syb, time, utf8-string
     }:
     mkDerivation {
       pname = "pugs-compat";
       version = "0.0.6.20130611.0";
       sha256 = "15pgg4z6clqgazi70jac280ib0d4rhz1hdqbg5i4kffziv2q6jsm";
       buildDepends = [
         mtl network random regex-base regex-pcre-builtin stm
         stringtable-atom syb time utf8-string
       ];
       description = "Portable Haskell/POSIX layer for Pugs";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "pugs-hsregex" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pugs-hsregex";
       version = "1.0";
       sha256 = "1px8qvz7afws2w8scplxs4zm628anvh5ssbf0ba9hajh686h133i";
       homepage = "http://repetae.net/john/computer/haskell/hsregex/";
       description = "Haskell PCRE binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pulse-simple" = callPackage
    ({ mkDerivation, pulse-simple }:
     mkDerivation {
       pname = "pulse-simple";
       version = "0.1.14";
       sha256 = "1as1cnx50mqmib5llzy2w218rg7dxmhz6nfa9kryfjzk0n5rshl4";
       extraLibraries = [ pulse-simple ];
       description = "binding to Simple API of pulseaudio";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) pulse-simple; };

  "punkt" = callPackage
    ({ mkDerivation, mtl, regex-tdfa, regex-tdfa-text, tasty
     , tasty-hunit, tasty-quickcheck, text, unordered-containers
     }:
     mkDerivation {
       pname = "punkt";
       version = "0.1.1";
       sha256 = "0hhrpkbgm56zs1ynd0ba37fv1vg2bxr79kfb2myjfxsnc6gr4h9b";
       buildDepends = [
         mtl regex-tdfa regex-tdfa-text text unordered-containers
       ];
       testDepends = [
         mtl regex-tdfa tasty tasty-hunit tasty-quickcheck text
       ];
       homepage = "https://github.com/bryant/punkt";
       description = "Multilingual unsupervised sentence tokenization with Punkt";
       license = stdenv.lib.licenses.mit;
     }) {};

  "punycode" = callPackage
    ({ mkDerivation, cereal, encoding, HUnit, mtl, QuickCheck, text }:
     mkDerivation {
       pname = "punycode";
       version = "2.0";
       sha256 = "192jgfixnpxdj6jiiz92kx5bi6ij3c389b76q9f4vyfmvcajj1sr";
       buildDepends = [ cereal mtl text ];
       testDepends = [ cereal encoding HUnit mtl QuickCheck text ];
       homepage = "https://github.com/litherum/punycode";
       description = "Encode unicode strings to ascii forms according to RFC 3492";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "puppetresources" = callPackage
    ({ mkDerivation, Diff, hsfacter, hslogger, language-puppet, mtl
     , text
     }:
     mkDerivation {
       pname = "puppetresources";
       version = "0.4.2";
       sha256 = "064swfpxk7jhb81bi0v9l0r1hn0z2cafnzx7ijdr33xhikyc92rb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Diff hsfacter hslogger language-puppet mtl text ];
       homepage = "http://lpuppet.banquise.net";
       description = "A program that displays the puppet resources associated to a node given .pp files.";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "pure-cdb" = callPackage
    ({ mkDerivation, binary, mtl, test-simple, Unixutils, vector }:
     mkDerivation {
       pname = "pure-cdb";
       version = "0.1.1";
       sha256 = "1yjh7h02hkhx2vgvn7qfmfd3bp12ibpkf4znybsd2bfh0i1pzn0n";
       buildDepends = [ binary mtl vector ];
       testDepends = [ mtl test-simple Unixutils vector ];
       homepage = "https://github.com/bosu/pure-cdb";
       description = "Another pure-haskell CDB (Constant Database) implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pure-fft" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pure-fft";
       version = "0.2.0";
       sha256 = "1zzravfgxbx07c38pf0p73a9nzjk2pbq3hzfw8v9zkqj95b3l94i";
       description = "Fast Fourier Transform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pure-io" = callPackage
    ({ mkDerivation, mtl, safe }:
     mkDerivation {
       pname = "pure-io";
       version = "0.2.1";
       sha256 = "0pzvkd8jxw859s187n972yaq5wmwi00cxwhivgffr7z29hr0zvx9";
       buildDepends = [ mtl safe ];
       description = "Pure IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pure-priority-queue" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "pure-priority-queue";
       version = "0.14";
       sha256 = "125vnkjx6n7pgflk9iqg7b6daw55a1rdfi9pfgp39ikfcx9vhb3p";
       description = "A pure priority queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pure-priority-queue-tests" = callPackage
    ({ mkDerivation, pure-priority-queue, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pure-priority-queue-tests";
       version = "0.12";
       sha256 = "17x2drpmdppzxp3nnxq0vajxrzdnhpapk9rz9qcqaxbg934c7h3d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         pure-priority-queue QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Tests for the pure-priority-queue package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pure-zlib" = callPackage
    ({ mkDerivation, fingertree, HUnit, monadLib, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pure-zlib";
       version = "0.3";
       sha256 = "1in93rx2y3zaahzpblwybskjrbwc0zrzh792ibi64jxvkrxjkyxn";
       buildDepends = [ fingertree monadLib ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/GaloisInc/pure-zlib";
       description = "A Haskell-only implementation of zlib / DEFLATE";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pureMD5" = callPackage
    ({ mkDerivation, binary, cereal, crypto-api, tagged }:
     mkDerivation {
       pname = "pureMD5";
       version = "2.1.2.1";
       sha256 = "1zsn949qk95bwx1fbyv84q0lhb4k18bgixl7nivfzsnmhr31fs37";
       buildDepends = [ binary cereal crypto-api tagged ];
       description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "purescript" = callPackage
    ({ mkDerivation, file-embed, filepath, haskeline, monad-unify, mtl
     , nodejs, optparse-applicative, parsec, pattern-arrows, time
     , transformers, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "purescript";
       version = "0.6.2";
       sha256 = "1zf2yyk3rdwk5992fhvqyd7b5w7mkzjcc0iyp75bscnjsggs31k0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         file-embed filepath haskeline monad-unify mtl optparse-applicative
         parsec pattern-arrows time transformers unordered-containers
         utf8-string
       ];
       testDepends = [
         filepath mtl nodejs parsec transformers utf8-string
       ];
       homepage = "http://www.purescript.org/";
       description = "PureScript Programming Language Compiler";
       license = stdenv.lib.licenses.mit;
     }) {};

  "push-notify" = callPackage
    ({ mkDerivation, aeson, async, attoparsec-conduit
     , base16-bytestring, cereal, certificate, conduit, connection
     , convertible, cprng-aes, data-default, http-client, http-conduit
     , http-types, monad-control, mtl, network, resourcet, retry, stm
     , text, time, tls, tls-extra, transformers, unordered-containers
     , xml-conduit
     }:
     mkDerivation {
       pname = "push-notify";
       version = "0.1.0.1";
       sha256 = "1ca9cs55yj1960cx7vha2w33nvqj89rhkdji555aaac3z302jgjs";
       buildDepends = [
         aeson async attoparsec-conduit base16-bytestring cereal certificate
         conduit connection convertible cprng-aes data-default http-client
         http-conduit http-types monad-control mtl network resourcet retry
         stm text time tls tls-extra transformers unordered-containers
         xml-conduit
       ];
       homepage = "http://gsoc2013cwithmobiledevices.blogspot.com.ar/";
       description = "A server-side library for sending push notifications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "push-notify-ccs" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, cprng-aes, crypto-random
     , data-default, hslogger, mtl, network, pontarius-xmpp, push-notify
     , retry, stm, text, tls, tls-extra, unordered-containers, xml-types
     }:
     mkDerivation {
       pname = "push-notify-ccs";
       version = "0.1.0.1";
       sha256 = "1fgpzcbkcsb03lysml28a8w3c9l3nx4mirrn287g7y1kb4kx3bw0";
       buildDepends = [
         aeson async attoparsec cprng-aes crypto-random data-default
         hslogger mtl network pontarius-xmpp push-notify retry stm text tls
         tls-extra unordered-containers xml-types
       ];
       homepage = "http://gsoc2013cwithmobiledevices.blogspot.com.ar/";
       description = "A server-side library for sending/receiving push notifications through CCS (Google Cloud Messaging)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "push-notify-general" = callPackage
    ({ mkDerivation, aeson, data-default, hashable, http-client
     , http-conduit, http-types, push-notify, push-notify-ccs, text
     , unordered-containers, xml-conduit, yesod
     }:
     mkDerivation {
       pname = "push-notify-general";
       version = "0.1.0.1";
       sha256 = "0vyw3733xm2s3nxybav8an68mlagk8v3bb43qlz71hkjgjddvpdh";
       buildDepends = [
         aeson data-default hashable http-client http-conduit http-types
         push-notify push-notify-ccs text unordered-containers xml-conduit
         yesod
       ];
       homepage = "http://gsoc2013cwithmobiledevices.blogspot.com.ar/";
       description = "A general library for sending/receiving push notif. through dif. services.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pushme" = callPackage
    ({ mkDerivation, aeson, deepseq, hslogger, io-storage, lens
     , optparse-applicative, parallel-io, pointless-fun, regex-posix
     , shelly, system-fileio, system-filepath, text, text-format, time
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "pushme";
       version = "1.5.0";
       sha256 = "0cn350p0v6wb6c1n589c2l460c8pac41c645fja5xqxyyiiyni4d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson deepseq hslogger io-storage lens optparse-applicative
         parallel-io pointless-fun regex-posix shelly system-fileio
         system-filepath text text-format time unordered-containers yaml
       ];
       homepage = "https://github.com/jwiegley/pushme";
       description = "Tool to synchronize multiple directories with rsync, zfs or git-annex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "putlenses" = callPackage
    ({ mkDerivation, lens, mtl, QuickCheck, random, safe, split
     , transformers
     }:
     mkDerivation {
       pname = "putlenses";
       version = "0.1.3";
       sha256 = "153hxffd1rg3m73kss0j3s7102lj6p84c95gvzyl0gmjpljfxffp";
       buildDepends = [
         lens mtl QuickCheck random safe split transformers
       ];
       description = "Put-based lens library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "puzzle-draw" = callPackage
    ({ mkDerivation, aeson, blaze-svg, deepseq, diagrams-lib
     , diagrams-svg, filepath, hashable, mtl, optparse-applicative
     , parsec, SVGFonts, tasty, tasty-hunit, text, unordered-containers
     , vector-space, yaml
     }:
     mkDerivation {
       pname = "puzzle-draw";
       version = "0.1.0.4";
       sha256 = "0jbc24a959klaf3niri5ilq0jdqpxdg4fg79bjfdpg51na4xr3hi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson diagrams-lib diagrams-svg filepath hashable mtl
         optparse-applicative parsec SVGFonts text unordered-containers
         vector-space yaml
       ];
       testDepends = [
         blaze-svg deepseq diagrams-lib diagrams-svg tasty tasty-hunit text
         yaml
       ];
       description = "Creating graphics for pencil puzzles";
       license = stdenv.lib.licenses.mit;
     }) {};

  "puzzle-draw-cmdline" = callPackage
    ({ mkDerivation, aeson, diagrams-lib, diagrams-svg, filepath
     , optparse-applicative, puzzle-draw, yaml
     }:
     mkDerivation {
       pname = "puzzle-draw-cmdline";
       version = "0.1.0.4";
       sha256 = "0jv0gai689ba5f4c6kdfdlfx5dz000zzk0gdwlz5d9n9pxxfgzxf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson diagrams-lib diagrams-svg filepath optparse-applicative
         puzzle-draw yaml
       ];
       description = "Creating graphics for pencil puzzles, command line tools";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pvd" = callPackage
    ({ mkDerivation, Codec-Image-DevIL, libdevil, mtl, network, stm
     , X11
     }:
     mkDerivation {
       pname = "pvd";
       version = "1.1.1";
       sha256 = "18hlsh3ndlybkiblcfqzjm1pa4myc01yzr9hx7p48yp86q519hvr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Codec-Image-DevIL mtl network stm X11 ];
       extraLibraries = [ libdevil ];
       homepage = "http://code.haskell.org/pvd";
       description = "A photo viewer daemon application with remote controlling abilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pwstore-cli" = callPackage
    ({ mkDerivation, cmdargs, HUnit, pwstore-fast, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "pwstore-cli";
       version = "0.4";
       sha256 = "1cwb214bifiql2d4jacjl93swhy8yigzj72wbhv213c593bxg8jr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs pwstore-fast text ];
       testDepends = [
         HUnit pwstore-fast test-framework test-framework-hunit
       ];
       homepage = "http://hub.darcs.net/rycee/pwstore-cli";
       description = "Command line interface for the pwstore library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "pwstore-fast" = callPackage
    ({ mkDerivation, base64-bytestring, binary, byteable, cryptohash
     , random
     }:
     mkDerivation {
       pname = "pwstore-fast";
       version = "2.4.4";
       sha256 = "1cpvlwzg3qznhygrr78f75p65mnljd9v5cvnagfxjqppnrkay6bj";
       buildDepends = [
         base64-bytestring binary byteable cryptohash random
       ];
       homepage = "https://github.com/PeterScott/pwstore";
       description = "Secure password storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pwstore-purehaskell" = callPackage
    ({ mkDerivation, base64-bytestring, byteable, random, SHA }:
     mkDerivation {
       pname = "pwstore-purehaskell";
       version = "2.1.4";
       sha256 = "1g7lmlgw8iscbbs96r3a534cf46fyks49b1f9y7hv25ny4wp1p9c";
       buildDepends = [ base64-bytestring byteable random SHA ];
       homepage = "https://github.com/PeterScott/pwstore";
       description = "Secure password storage, in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "pxsl-tools" = callPackage
    ({ mkDerivation, mtl, parsec }:
     mkDerivation {
       pname = "pxsl-tools";
       version = "1.0.1";
       sha256 = "1q45l1grcja0mf1g90yxsdlr49gqrx27ycr6vln4hsqb5c0iqcfw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       homepage = "http://community.moertel.com/ss/space/PXSL";
       description = "Parsimonious XML Shorthand Language--to-XML compiler";
       license = "GPL";
     }) {};

  "pyffi" = callPackage
    ({ mkDerivation, aeson, pureMD5, python }:
     mkDerivation {
       pname = "pyffi";
       version = "0.4.0.2";
       sha256 = "0cpzl0d0hsdlm1786s75xsq3c93mm1sp7alr6xhihmnrsj71d58h";
       buildDepends = [ aeson pureMD5 ];
       pkgconfigDepends = [ python ];
       homepage = "http://github.com/Russell91/json-python";
       description = "Call python inline from haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "pyfi" = callPackage
    ({ mkDerivation, aeson, pureMD5, python }:
     mkDerivation {
       pname = "pyfi";
       version = "0.4.0.4";
       sha256 = "0xq5nhc11dkf2yvzcd129n0r7vpias091lzkll4f4cjsmljbxigw";
       buildDepends = [ aeson pureMD5 ];
       pkgconfigDepends = [ python ];
       homepage = "http://github.com/Russell91/pyfi";
       description = "Call python inline from haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "python-pickle" = callPackage
    ({ mkDerivation, attoparsec, cereal, cmdargs, mtl }:
     mkDerivation {
       pname = "python-pickle";
       version = "0.2.0";
       sha256 = "0p7pmwqs9jfv6464106j0k22x6lij5rc5v74aqbfclx7iwp6lh75";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec cereal cmdargs mtl ];
       description = "Serialization/deserialization using Python Pickle format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "qc-oi-testgenerator" = callPackage
    ({ mkDerivation, fclabels, QuickCheck }:
     mkDerivation {
       pname = "qc-oi-testgenerator";
       version = "1.2.0.3";
       sha256 = "13rga5haz26qvx3hznbl6ik55s8g7qi3nj7a6vhyx46vjhzwnsvg";
       buildDepends = [ fclabels QuickCheck ];
       homepage = "http://www.iai.uni-bonn.de/~jv/GV14.html";
       description = "Compile time generation of operation invariance tests for QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "qd" = callPackage
    ({ mkDerivation, floatshow, qd }:
     mkDerivation {
       pname = "qd";
       version = "1.0.2.1";
       sha256 = "0dhvdrpcbc6qiqna2kiaa0zbz7cgq7ziy2my6k85cbgv6k77p918";
       buildDepends = [ floatshow ];
       extraLibraries = [ qd ];
       description = "double-double and quad-double number type via libqd";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) qd; };

  "qd-vec" = callPackage
    ({ mkDerivation, qd, Vec }:
     mkDerivation {
       pname = "qd-vec";
       version = "1.1";
       sha256 = "0lj5kg0sjkck89phvi239xb2k7hxmxg9dh7yg2df2iaj4c2m2ync";
       buildDepends = [ qd Vec ];
       description = "'Vec' instances for 'qd' types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "qhull-simple" = callPackage
    ({ mkDerivation, qhull, vector }:
     mkDerivation {
       pname = "qhull-simple";
       version = "0.1";
       sha256 = "0g0abqc5z9nysm21c77kylkka1bvyn16ycinws1lcrjy53cb82sw";
       buildDepends = [ vector ];
       extraLibraries = [ qhull ];
       homepage = "http://nonempty.org/software/haskell-qhull-simple";
       description = "Simple bindings to Qhull, a library for computing convex hulls";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "qrcode" = callPackage
    ({ mkDerivation, mtl, vector }:
     mkDerivation {
       pname = "qrcode";
       version = "0.1.2";
       sha256 = "1wfnxlz6rqjcgnkaqq0wdn75jsh3b9hagb84c1ljnwqaw98n3a9d";
       buildDepends = [ mtl vector ];
       description = "QR Code library in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quadratic-irrational" = callPackage
    ({ mkDerivation, arithmoi, doctest, filepath, mtl, numbers
     , QuickCheck, tasty, tasty-quickcheck, transformers
     }:
     mkDerivation {
       pname = "quadratic-irrational";
       version = "0.0.5";
       sha256 = "1z9a1q8px4sx7fq9i1lwfx98kz0nv8zhkz5vsfn31krvd4xvkndz";
       buildDepends = [ arithmoi mtl transformers ];
       testDepends = [
         doctest filepath mtl numbers QuickCheck tasty tasty-quickcheck
       ];
       homepage = "https://github.com/ion1/quadratic-irrational";
       description = "An implementation of quadratic irrationals";
       license = stdenv.lib.licenses.mit;
     }) {};

  "quandl-api" = callPackage
    ({ mkDerivation, aeson, blaze-builder, http-conduit, http-types
     , syb, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "quandl-api";
       version = "0.2.0.0";
       sha256 = "1h6gh9wssb8dw9r5f7caanxq542d0jw9shvp7wx0i1k47f54kb3k";
       buildDepends = [
         aeson blaze-builder http-conduit http-types syb text time
         unordered-containers
       ];
       homepage = "https://github.com/pvdbrand/quandl-api";
       description = "Quandl.com API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quantities" = callPackage
    ({ mkDerivation, doctest, Glob, hlint, hspec, mtl, parsec
     , regex-compat
     }:
     mkDerivation {
       pname = "quantities";
       version = "0.3.0";
       sha256 = "1c9ll27qwmzz8rfy7jlknzg56r0z2hij9aha3vwylv6iaynl4fr9";
       buildDepends = [ mtl parsec ];
       testDepends = [ doctest Glob hlint hspec mtl parsec regex-compat ];
       homepage = "http://github.com/jdreaver/quantities";
       description = "Unit conversion and manipulation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quantum-arrow" = callPackage
    ({ mkDerivation, MonadRandom, mtl, QuickCheck, random }:
     mkDerivation {
       pname = "quantum-arrow";
       version = "0.0.5";
       sha256 = "19z5b0jwnz20g0203xd78cv8rgm92diyxard4mbj6dyrj2kkfgww";
       buildDepends = [ MonadRandom mtl QuickCheck random ];
       homepage = "http://github.com/luqui/quantum-arrow";
       description = "An embedding of quantum computation as a Haskell arrow";
       license = "LGPL";
     }) {};

  "qudb" = callPackage
    ({ mkDerivation, alex, happy, mtl, snappy }:
     mkDerivation {
       pname = "qudb";
       version = "0.0.1";
       sha256 = "0cpvik35qv587k2qsd2rh7awlwll1gciv0nr7wjr79bn0q9df0cq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl snappy ];
       buildTools = [ alex happy ];
       homepage = "https://github.com/jstepien/qudb";
       description = "Quite Useless DB";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "querystring-pickle" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "querystring-pickle";
       version = "0.2.0";
       sha256 = "18by7671q3sp38cii7j8b0jvdbbix4wyaa3wan77s0mfkdxzicrf";
       buildDepends = [ text ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Picklers for de/serialising Generic data types to and from query strings";
       license = "unknown";
     }) {};

  "questioner" = callPackage
    ({ mkDerivation, ansi-terminal, readline, terminal-size }:
     mkDerivation {
       pname = "questioner";
       version = "0.1.1.0";
       sha256 = "05q64mslkbg017fpjx7ma2al6iz5zjrkyzipm8p86n8zcx3l1aw3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ansi-terminal readline terminal-size ];
       homepage = "https://github.com/yamadapc/haskell-questioner.git";
       description = "A package for prompting values from the command-line";
       license = stdenv.lib.licenses.mit;
     }) {};

  "queue" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "queue";
       version = "0.1.2";
       sha256 = "0fx2svkj2sy2wd056lha9h20hy2z6gjspzl11jmv7i3rdwwfr6f7";
       buildDepends = [ stm ];
       homepage = "http://code.haskell.org/~mokus/queue";
       description = "Abstraction typeclasses for queue-like things";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "queuelike" = callPackage
    ({ mkDerivation, mtl, stateful-mtl }:
     mkDerivation {
       pname = "queuelike";
       version = "1.0.9";
       sha256 = "0nvs9ln55wrczpn948i4z110rbfp0rv2wv8iz94lbyxhilhyjf1z";
       buildDepends = [ mtl stateful-mtl ];
       description = "A library of queuelike data structures, both functional and stateful";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quick-generator" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "quick-generator";
       version = "0.3";
       sha256 = "1bccyvm300bkm3n98ayjc3syfcakjnf26bs2mdqdjimdfw2f0g6n";
       buildDepends = [ QuickCheck ];
       description = "Generator random test data for QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickcheck-assertions" = callPackage
    ({ mkDerivation, hspec, ieee754, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-assertions";
       version = "0.1.1";
       sha256 = "0hrnr17wafng7nc6d8w6pp1lygplri8xkb5380aq64zg9iik2s21";
       buildDepends = [ ieee754 QuickCheck ];
       testDepends = [ hspec ieee754 QuickCheck ];
       homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
       description = "HUnit like assertions for QuickCheck";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "quickcheck-instances" = callPackage
    ({ mkDerivation, hashable, QuickCheck, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "quickcheck-instances";
       version = "0.3.9";
       sha256 = "1a0mbd1kga4qnamp80x2g4avjwcy8z0zrriqxdhb1525wyyb0656";
       buildDepends = [
         hashable QuickCheck text time unordered-containers
       ];
       homepage = "https://github.com/aslatter/qc-instances";
       description = "Common quickcheck instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickcheck-io" = callPackage
    ({ mkDerivation, HUnit, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-io";
       version = "0.1.1";
       sha256 = "16q3sqvxnaqmbb1zbda8f61mdlmmzxhrznqxab113lmg380nwfm2";
       buildDepends = [ HUnit QuickCheck ];
       description = "Use HUnit assertions as QuickCheck properties";
       license = stdenv.lib.licenses.mit;
     }) {};

  "quickcheck-poly" = callPackage
    ({ mkDerivation, hint, MonadCatchIO-mtl, QuickCheck, regex-compat
     , regex-tdfa
     }:
     mkDerivation {
       pname = "quickcheck-poly";
       version = "0.2.0.1";
       sha256 = "0imigjsb6jy1k9xipi5b4b300cpv2l7hhd2iiqpn80dp10v7y5na";
       buildDepends = [
         hint MonadCatchIO-mtl QuickCheck regex-compat regex-tdfa
       ];
       description = "Automating QuickCheck for polymorphic and overlaoded properties";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickcheck-properties" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "quickcheck-properties";
       version = "0.1";
       sha256 = "0hr61w1wpah1p4h87iz17aby53ysa8waqsl0als8b69in0zyv29w";
       description = "QuickCheck properties for standard type classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickcheck-property-comb" = callPackage
    ({ mkDerivation, mtl, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-property-comb";
       version = "0.1.0.2";
       sha256 = "0wqz2amhwf1djbwwdin142mzp94mxbzb12khznijissjdz38knp5";
       buildDepends = [ mtl QuickCheck ];
       homepage = "http://www.github.com/jfeltz/quickcheck-property-comb";
       description = "Combinators for Quickcheck Property construction and diagnostics";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "quickcheck-property-monad" = callPackage
    ({ mkDerivation, doctest, either, filepath, QuickCheck
     , transformers
     }:
     mkDerivation {
       pname = "quickcheck-property-monad";
       version = "0.2.3";
       sha256 = "12vg14xwhhsqwygrs5lylsg514am5sslqc15nbl8mwzzxix1w8xb";
       buildDepends = [ either QuickCheck transformers ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "http://github.com/bennofs/quickcheck-property-monad/";
       description = "quickcheck-property-monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickcheck-regex" = callPackage
    ({ mkDerivation, QuickCheck, regex-genex, regex-tdfa }:
     mkDerivation {
       pname = "quickcheck-regex";
       version = "0.0.3";
       sha256 = "00h08l3qabj140zzcpj87hy9zb6cw1xj5w6xv6sq2m8yc3pdwi8n";
       buildDepends = [ QuickCheck regex-genex regex-tdfa ];
       homepage = "http://github.com/audreyt/quickcheck-regex/";
       description = "Generate regex-constrained strings for QuickCheck";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "quickcheck-relaxng" = callPackage
    ({ mkDerivation, hxt, hxt-relaxng, QuickCheck, quickcheck-regex }:
     mkDerivation {
       pname = "quickcheck-relaxng";
       version = "0.0.2";
       sha256 = "1wrndgvza9610ai02gkwab30hp8ngdknw8n2lx0mg6qajsiiy949";
       buildDepends = [ hxt hxt-relaxng QuickCheck quickcheck-regex ];
       homepage = "http://github.com/audreyt/quickcheck-relaxng/";
       description = "Generate RelaxNG-constrained XML documents for QuickCheck";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "quickcheck-rematch" = callPackage
    ({ mkDerivation, hspec, HUnit, QuickCheck, rematch }:
     mkDerivation {
       pname = "quickcheck-rematch";
       version = "0.1.0.0";
       sha256 = "0pmw9441l36sprw9ngq6gn2yi4v427zd5n22s9zicfyiwi4qf5ba";
       buildDepends = [ QuickCheck rematch ];
       testDepends = [ hspec HUnit QuickCheck rematch ];
       homepage = "http://github.com/tcrayford/rematch";
       description = "QuickCheck support for rematch";
       license = stdenv.lib.licenses.mit;
     }) {};

  "quickcheck-script" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-script";
       version = "0.1.1.1";
       sha256 = "157v4qcyk5c6hnmhmy5rsrfsj46m343nn2bvrqyb6r92wh70is5g";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ QuickCheck ];
       homepage = "http://www.cs.chalmers.se/~rjmh/QuickCheck/";
       description = "Automated test tool for QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickcheck-unicode" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-unicode";
       version = "1.0.0.0";
       sha256 = "0yp7d2hwvipw2sdjf4sm45v3iiijc1yi4qk21kq12fi6x6xxwcxq";
       buildDepends = [ QuickCheck ];
       homepage = "https://github.com/bos/quickcheck-unicode";
       description = "Generator and shrink functions for testing Unicode-related software";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickcheck-webdriver" = callPackage
    ({ mkDerivation, QuickCheck, transformers, webdriver }:
     mkDerivation {
       pname = "quickcheck-webdriver";
       version = "0.1.0.7";
       sha256 = "12jkj8jy4f0mix658pd8jfgwx268fs3bbqz90mac1vvag4c72i0h";
       buildDepends = [ QuickCheck transformers webdriver ];
       description = "Utilities for using WebDriver with QuickCheck";
       license = stdenv.lib.licenses.mit;
     }) {};

  "quicklz" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "quicklz";
       version = "1.5.0.11";
       sha256 = "17v9bfdp4ib9258r7001naqwss7l6v83by40va3gm3l418vj62qd";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/thoughtpolice/hs-quicklz";
       description = "QuickLZ compression for ByteStrings";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "quickpull" = callPackage
    ({ mkDerivation, barecheck, filepath, QuickCheck }:
     mkDerivation {
       pname = "quickpull";
       version = "0.4.0.0";
       sha256 = "0qfzl7v7724fwfsxd5iwj3xbfz3isl8hphv6fd5a0c5zw01r54zn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ barecheck filepath QuickCheck ];
       testDepends = [ filepath QuickCheck ];
       homepage = "http://www.github.com/massysett/quickpull";
       description = "Generate Main module with QuickCheck tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickset" = callPackage
    ({ mkDerivation, vector, vector-algorithms }:
     mkDerivation {
       pname = "quickset";
       version = "0.1.0";
       sha256 = "0xiw57wi9z567nmp4h0vfcw3sr9dciy29jadn47bvi3q278v7zdy";
       buildDepends = [ vector vector-algorithms ];
       description = "Very fast and memory-compact query-only set and map structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickspec" = callPackage
    ({ mkDerivation, QuickCheck, random, spoon, transformers }:
     mkDerivation {
       pname = "quickspec";
       version = "0.9.6";
       sha256 = "0prwzxsrvfqryl75rmma229d4y7ra61vc3d72kyqi4l44ga2ay21";
       buildDepends = [ QuickCheck random spoon transformers ];
       homepage = "https://github.com/nick8325/quickspec";
       description = "Equational laws for free!";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quicktest" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "quicktest";
       version = "0.1.3";
       sha256 = "0nvh6jd155xrjzkkbsz5q8d08z50881vkdhmprm7fdxax1gvjc95";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "https://github.com/davidsiegel/quicktest";
       description = "A reflective batch tester for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "quickwebapp" = callPackage
    ({ mkDerivation, http-types, scotty, text }:
     mkDerivation {
       pname = "quickwebapp";
       version = "2.1.0.0";
       sha256 = "0zwqfwwna1d588yk2i20nzryl56k2bh4nyg03ljszyhna16iclij";
       buildDepends = [ http-types scotty text ];
       description = "A quick webapp generator for any file processing tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "rabocsv2qif" = callPackage
    ({ mkDerivation, split, time }:
     mkDerivation {
       pname = "rabocsv2qif";
       version = "1.1.5";
       sha256 = "1vb9r2nmkhybx1ra2jpzfz5i6klgz2jz09zhg5wi95dnml82p33g";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ split time ];
       description = "A library and program to create QIF files from Rabobank CSV exports";
       license = "GPL";
     }) {};

  "rad" = callPackage
    ({ mkDerivation, data-reify }:
     mkDerivation {
       pname = "rad";
       version = "0.1.6.3";
       sha256 = "19g2lc3vmnapccdxf390cmkfl9bd3agcn01kk8ccd4lmaqn2c12d";
       buildDepends = [ data-reify ];
       homepage = "http://comonad.com/reader/";
       description = "Reverse Automatic Differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "radian" = callPackage
    ({ mkDerivation, doctest, filepath, lens, QuickCheck }:
     mkDerivation {
       pname = "radian";
       version = "0.0.4";
       sha256 = "1f53h9gcbmfga5khc67z81aysibcj5pqgi3iwa2shy5mfd10a86a";
       buildDepends = [ lens ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/NICTA/radian";
       description = "A floating-point wrapper for measurements that use radians";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "radium" = callPackage
    ({ mkDerivation, Cabal, hspec, parsec, QuickCheck }:
     mkDerivation {
       pname = "radium";
       version = "0.3";
       sha256 = "01bmh77cjcz7phl4fzn97hzjnjx3wicr12m7nrdyflw2zckxycwl";
       buildDepends = [ parsec ];
       testDepends = [ Cabal hspec parsec QuickCheck ];
       homepage = "https://github.com/klangner/radium";
       description = "Chemistry";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "radium-formula-parser" = callPackage
    ({ mkDerivation, Cabal, hspec, parsec, QuickCheck }:
     mkDerivation {
       pname = "radium-formula-parser";
       version = "0.2";
       sha256 = "1b2gmc27dj9fanbjh7h0902jjh3jz1ydc6qvp9p3rfskaf6854bf";
       buildDepends = [ parsec ];
       testDepends = [ Cabal hspec parsec QuickCheck ];
       homepage = "https://github.com/klangner/radium-formula-parser";
       description = "Chemistry";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rados-haskell" = callPackage
    ({ mkDerivation, async, hspec, HUnit, mtl, rados, uuid }:
     mkDerivation {
       pname = "rados-haskell";
       version = "3.1.0";
       sha256 = "0xffgf95dss442sf6adh7yys39i0z64w155akjyzr9dp2jzr6f2k";
       buildDepends = [ async mtl uuid ];
       testDepends = [ async hspec HUnit mtl rados uuid ];
       extraLibraries = [ rados ];
       homepage = "github";
       description = "librados haskell bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rail-compiler-editor" = callPackage
    ({ mkDerivation, cairo, gtk, HUnit, llvm-general, llvm-general-pure
     , mtl, transformers
     }:
     mkDerivation {
       pname = "rail-compiler-editor";
       version = "0.3.0.0";
       sha256 = "0jjsa21a7f4hysbk9qvcxyyc2ncrmmjh02n7yyhjnfjgdp4sclwb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo gtk llvm-general llvm-general-pure mtl transformers
       ];
       testDepends = [ HUnit ];
       homepage = "https://github.com/SWP-Ubau-SoSe2014-Haskell/SWPSoSe14";
       description = "Compiler and editor for the esolang rail";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rainbow" = callPackage
    ({ mkDerivation, terminfo, text }:
     mkDerivation {
       pname = "rainbow";
       version = "0.20.0.4";
       sha256 = "0myipv34pfyi71h1ni9hdi1662whjnl83g9jpag77a00sk0p3rkm";
       buildDepends = [ terminfo text ];
       homepage = "http://www.github.com/massysett/rainbow";
       description = "Print text to terminal with colors and effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rainbow-tests" = callPackage
    ({ mkDerivation, barecheck, QuickCheck, rainbow, terminfo, text }:
     mkDerivation {
       pname = "rainbow-tests";
       version = "0.20.0.4";
       sha256 = "0cjq2m2zpk4j2f7gw65yqqvyc4kng1rsnq48fs4xcs6bdzw0zhlg";
       buildDepends = [ barecheck QuickCheck rainbow terminfo text ];
       homepage = "http://www.github.com/massysett/rainbow";
       description = "Tests and QuickCheck generators to accompany rainbow";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rainbox" = callPackage
    ({ mkDerivation, QuickCheck, rainbow, rainbow-tests, random, tasty
     , tasty-quickcheck, text, transformers
     }:
     mkDerivation {
       pname = "rainbox";
       version = "0.8.0.0";
       sha256 = "0w90fdhb686whd64xyaxpk83cx8gms0y37amfwlvbwh821zfnjii";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ rainbow text transformers ];
       testDepends = [
         QuickCheck rainbow rainbow-tests random tasty tasty-quickcheck text
         transformers
       ];
       homepage = "http://www.github.com/massysett/rainbox";
       description = "Two-dimensional box pretty printing, with colors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rakhana" = callPackage
    ({ mkDerivation, attoparsec, lens, mtl, pipes, scientific
     , transformers, vector, zlib
     }:
     mkDerivation {
       pname = "rakhana";
       version = "0.2.0.2";
       sha256 = "10gk2wk8495y1zk148sqsm993dzi4z6a49nn717qccpc2qi4lw6k";
       buildDepends = [
         attoparsec lens mtl pipes scientific transformers vector zlib
       ];
       homepage = "http://github.com/YoEight/rakhana";
       description = "Stream based PDF library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ralist" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ralist";
       version = "0.1.0.0";
       sha256 = "0v2cg1d2wzjcygk78qcz1yfy9rcqw8yrplnnk6cax41qifhr5z5i";
       description = "Random access list with a list compatible interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rallod" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rallod";
       version = "0.0.1";
       sha256 = "14fnk2q702qm0mh30r9kznbh4ikpv4fsd5mrnwphm5d06vmq6hq9";
       homepage = "http://github.com/moonmaster9000/rallod";
       description = "'$' in reverse";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rand-vars" = callPackage
    ({ mkDerivation, IntervalMap, mtl, random }:
     mkDerivation {
       pname = "rand-vars";
       version = "0.1";
       sha256 = "165jvx59vzmpxp7gw60ivfka77kgc1irwijikkwja7jb4dm4ay3x";
       buildDepends = [ IntervalMap mtl random ];
       description = "Random variable library, with Functor, Applicative and Monad instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "randfile" = callPackage
    ({ mkDerivation, crypto-api, filepath, monadcryptorandom
     , transformers
     }:
     mkDerivation {
       pname = "randfile";
       version = "0.1.0.0";
       sha256 = "11f72kfya4l41dihjvaz15hzipry281r8i6k6dzp5q3gq4valgyz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         crypto-api filepath monadcryptorandom transformers
       ];
       description = "Program for picking a random file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "random" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "random";
       version = "1.1";
       sha256 = "0nis3lbkp8vfx8pkr6v7b7kr5m334bzb0fk9vxqklnp2aw8a865p";
       buildDepends = [ time ];
       description = "random number library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "random-access-list" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "random-access-list";
       version = "0.2";
       sha256 = "1ymbs3f38l6ch0nphsy9pi32yb1a4hazn3grm9fl0dvgqw28xl8r";
       description = "Random-access lists in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "random-eff" = callPackage
    ({ mkDerivation, extensible-effects, random }:
     mkDerivation {
       pname = "random-eff";
       version = "0.1.0.1";
       sha256 = "1m28np0zfabp1n1d08przh35bxfr1l7d39kj4a5z61jkchmsaxyf";
       buildDepends = [ extensible-effects random ];
       description = "A simple random generator library for extensible-effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "random-effin" = callPackage
    ({ mkDerivation, effin, random }:
     mkDerivation {
       pname = "random-effin";
       version = "0.1.1.0";
       sha256 = "0p1n5dfdsp00q9mlhd7xcl93k5d0wji91p59858gmfx9xf8j0p0h";
       buildDepends = [ effin random ];
       description = "A simple random generator library for effin";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "random-extras" = callPackage
    ({ mkDerivation, random-fu, random-source }:
     mkDerivation {
       pname = "random-extras";
       version = "0.19";
       sha256 = "1b45s314rqkk0np460p3p0wrqvkv9dczifny8pp76ikksalfvgn0";
       buildDepends = [ random-fu random-source ];
       homepage = "http://github.com/aristidb/random-extras";
       description = "Additional functions for random values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "random-fu" = callPackage
    ({ mkDerivation, erf, logfloat, math-functions, monad-loops, mtl
     , random-shuffle, random-source, rvar, syb, transformers, vector
     }:
     mkDerivation {
       pname = "random-fu";
       version = "0.2.6.1";
       sha256 = "04fi92szpjyg0ffgxfayz00vpiqi67hzyahhin12wvw3pxbyyp9g";
       buildDepends = [
         erf logfloat math-functions monad-loops mtl random-shuffle
         random-source rvar syb transformers vector
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random number generation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "random-shuffle" = callPackage
    ({ mkDerivation, MonadRandom, random }:
     mkDerivation {
       pname = "random-shuffle";
       version = "0.0.4";
       sha256 = "0586bnlh0g2isc44jbjvafkcl4yw6lp1db8x6vr0pza0y08l8w2j";
       buildDepends = [ MonadRandom random ];
       description = "Random shuffle implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "random-source" = callPackage
    ({ mkDerivation, flexible-defaults, mersenne-random-pure64, mtl
     , mwc-random, random, stateref, syb, th-extras
     }:
     mkDerivation {
       pname = "random-source";
       version = "0.3.0.6";
       sha256 = "0wsv41kpswqml04ym5bq2nan4i637f7h3fmvda2zy506xwxfrpzk";
       buildDepends = [
         flexible-defaults mersenne-random-pure64 mtl mwc-random random
         stateref syb th-extras
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Generic basis for random number generators";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "random-stream" = callPackage
    ({ mkDerivation, binary, random }:
     mkDerivation {
       pname = "random-stream";
       version = "0.1.1";
       sha256 = "0q191kz3hmjzrgs143nja5gcis07igb38f51mwqw64zx7vjqvx66";
       buildDepends = [ binary random ];
       description = "An infinite stream of random data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "randomgen" = callPackage
    ({ mkDerivation, binary, mersenne-random-pure64, openssl }:
     mkDerivation {
       pname = "randomgen";
       version = "0.1";
       sha256 = "0y7yvsach0c27ahscxr36avjrq281pmg7w6cv2yj5kmbk7ddwlyi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary mersenne-random-pure64 ];
       extraLibraries = [ openssl ];
       homepage = "http://galois.com";
       description = "A fast, SMP parallel random data generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "randproc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "randproc";
       version = "0.4";
       sha256 = "0fb0239fwvn1n3rbdr03k4kx1igzbb638a1iq0ln1k1i1fpaayd7";
       homepage = "http://www.haskell.org/haskellwiki/Random_Processes";
       description = "Data structures and support functions for working with random processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "randsolid" = callPackage
    ({ mkDerivation, random, X11 }:
     mkDerivation {
       pname = "randsolid";
       version = "0.3";
       sha256 = "0v7j6qqs16j281hn0330vcpkriqgyvl7087ll665c7dcqqh2bswk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random X11 ];
       description = "Set the background of your root window to a random colour";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "range" = callPackage
    ({ mkDerivation, Cabal, parsec, QuickCheck, random, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "range";
       version = "0.1.0.0";
       sha256 = "1qb5kll43dm6l8w4caa1ik5j0pm8cpm3jzr6cfldx2s4yfwrdngg";
       buildDepends = [ parsec ];
       testDepends = [
         Cabal QuickCheck random test-framework test-framework-quickcheck2
       ];
       description = "This has a bunch of code for specifying and managing ranges in your code";
       license = stdenv.lib.licenses.mit;
     }) {};

  "range-set-list" = callPackage
    ({ mkDerivation, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "range-set-list";
       version = "0.0.7";
       sha256 = "1qgw95gvbxar13ia6562ddz9zqd14ffyxwp9qi41w859prfc1728";
       testDepends = [ tasty tasty-quickcheck ];
       homepage = "https://github.com/phadej/range-set-list";
       description = "Memory efficient sets with continuous ranges of elements";
       license = stdenv.lib.licenses.mit;
     }) {};

  "range-space" = callPackage
    ({ mkDerivation, QuickCheck, semigroups, test-framework
     , test-framework-quickcheck2, time, vector-space
     , vector-space-points
     }:
     mkDerivation {
       pname = "range-space";
       version = "0.1.1.2";
       sha256 = "06cl5kgyl1lccr78galqxp21nli2vkvlywy6394cnp14wqfz8r94";
       buildDepends = [ semigroups vector-space vector-space-points ];
       testDepends = [
         QuickCheck semigroups test-framework test-framework-quickcheck2
         time vector-space vector-space-points
       ];
       homepage = "https://github.com/JohnLato/range-space";
       description = "A Range type with vector-space instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rangemin" = callPackage
    ({ mkDerivation, primitive, vector }:
     mkDerivation {
       pname = "rangemin";
       version = "2.2.2";
       sha256 = "01n1m3ibi44pjg04mg16j751fjzkspmnq8bzxz55qbyi22wshnwc";
       buildDepends = [ primitive vector ];
       description = "Linear range-min algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ranges" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ranges";
       version = "0.2.4";
       sha256 = "1ymvmvfvzkdxblg691g9n5y94gpiz782jgyvaisg5mydzj1s1fyv";
       description = "Ranges and various functions on them";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rank1dynamic" = callPackage
    ({ mkDerivation, binary, constraints, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "rank1dynamic";
       version = "0.2.0.1";
       sha256 = "1np3ghp7wdn0clsyslk5j6fhs4c5cd6y0xlvdg2jj6ydaglzcchl";
       buildDepends = [ binary ];
       testDepends = [
         constraints HUnit test-framework test-framework-hunit
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rascal" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, curl, curl-aeson, filepath
     , HUnit, mtl, QuickCheck, tasty, tasty-hunit, tasty-quickcheck
     , vector
     }:
     mkDerivation {
       pname = "rascal";
       version = "1.1.6";
       sha256 = "0q7afppkm5jd1p13fszzsfjpdz6g6bw1vd6wigcy3janxn5686rs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson ansi-terminal curl curl-aeson filepath mtl vector
       ];
       testDepends = [
         aeson ansi-terminal curl curl-aeson filepath HUnit mtl QuickCheck
         tasty tasty-hunit tasty-quickcheck vector
       ];
       homepage = "http://soli.github.io/rascal/";
       description = "A command-line client for Reddit";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rate-limit" = callPackage
    ({ mkDerivation, time-units }:
     mkDerivation {
       pname = "rate-limit";
       version = "1.1.1";
       sha256 = "1d1dfj05vi8jr2cfy42a58wnm84zm6cmx7fabp2rb83qqm4l2riz";
       buildDepends = [ time-units ];
       homepage = "http://github.com/acw/rate-limit";
       description = "A basic library for rate-limiting IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ratio-int" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ratio-int";
       version = "0.1.2";
       sha256 = "06kqr4iyi184sa8y2vdkw5h0pvh5f8lwcqb8mbcn34lpqm961s7g";
       homepage = "https://github.com/RaphaelJ/ratio-int";
       description = "Fast specialisation of Data.Ratio for Int.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "raven-haskell" = callPackage
    ({ mkDerivation, aeson, hspec, http-conduit, network, random, text
     , time, unordered-containers, uuid
     }:
     mkDerivation {
       pname = "raven-haskell";
       version = "0.1.0.0";
       sha256 = "06pa03g9pxxv1qk34ckcgwp5wirj5ag1akml48k18la6p0a2r3mx";
       buildDepends = [
         aeson http-conduit network random text time unordered-containers
         uuid
       ];
       testDepends = [ aeson hspec unordered-containers ];
       homepage = "https://bitbucket.org/dpwiz/raven-haskell";
       description = "Haskell client for Sentry logging service";
       license = stdenv.lib.licenses.mit;
     }) {};

  "raven-haskell-scotty" = callPackage
    ({ mkDerivation, case-insensitive, mtl, raven-haskell, scotty, text
     , wai
     }:
     mkDerivation {
       pname = "raven-haskell-scotty";
       version = "0.1.0.3";
       sha256 = "0vllfasn4rky8r8fg3mpln8pdkxbcvrvx8wamn0xswfwf1rvcf6k";
       buildDepends = [
         case-insensitive mtl raven-haskell scotty text wai
       ];
       homepage = "http://bitbucket.org/dpwiz/raven-haskell";
       description = "Sentry http interface for Scotty web server";
       license = stdenv.lib.licenses.mit;
     }) {};

  "raw-strings-qq" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "raw-strings-qq";
       version = "1.0.2";
       sha256 = "0wnifa97am2s9bqixlidw3nf8w14h2qkg3sn1rxzgvc3fws57jg9";
       homepage = "https://github.com/23Skidoo/raw-strings-qq";
       description = "Raw string literals for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rawstring-qm" = callPackage
    ({ mkDerivation, haskell-src-meta, text }:
     mkDerivation {
       pname = "rawstring-qm";
       version = "0.1.5";
       sha256 = "13s71lglnddhl0i7cw3yv9a8j803l7kdlhkx83syj918sq9pwsax";
       buildDepends = [ haskell-src-meta text ];
       homepage = "https://github.com/tolysz/rawstring-qm";
       description = "Simple raw string quotation and dictionary interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rbr" = callPackage
    ({ mkDerivation, bio }:
     mkDerivation {
       pname = "rbr";
       version = "0.8.6";
       sha256 = "0q7b990k3ijjjwhnm1283k9vzmvypyg7mhvbzagvi74q0sgwyac7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio ];
       homepage = "http://malde.org/~ketil/";
       description = "Mask nucleotide (EST) sequences in Fasta format";
       license = "GPL";
     }) {};

  "rclient" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, network, QuickCheck
     , split
     }:
     mkDerivation {
       pname = "rclient";
       version = "0.1.0.0";
       sha256 = "1hdcbnkb184a1zfxsh4fxgff9znc5sw6503qbix67c45qiw25zhn";
       buildDepends = [
         binary data-binary-ieee754 network QuickCheck split
       ];
       description = "Haskell client for Rserve";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rdf4h" = callPackage
    ({ mkDerivation, hashable, HTTP, HUnit, hxt, knob, network-uri
     , parsec, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, unordered-containers
     }:
     mkDerivation {
       pname = "rdf4h";
       version = "1.2.7";
       sha256 = "1xk5dnkiplvl4mym2asa268p9na5k91z084w654sdnwg9frqi92d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         hashable HTTP hxt network-uri parsec text unordered-containers
       ];
       testDepends = [
         hashable HTTP HUnit hxt knob network-uri parsec QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         unordered-containers
       ];
       homepage = "https://github.com/robstewart57/rdf4h";
       description = "A library for RDF processing in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rdioh" = callPackage
    ({ mkDerivation, aeson, hoauth, hspec, json, MissingH, mtl
     , transformers, urlencoded
     }:
     mkDerivation {
       pname = "rdioh";
       version = "0.2.1";
       sha256 = "1k0djlhabycj4q7x85bj7n3k0rcyxn9b3k3ijb4za2vxj081qdj0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson hoauth hspec json MissingH mtl transformers urlencoded
       ];
       description = "A Haskell wrapper for Rdio's API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rdtsc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rdtsc";
       version = "1.3.0.0";
       sha256 = "1j421cfyz35mkh78idw89b0gl7c810n04pfh0lvdprghlfk90adk";
       homepage = "http://code.haskell.org/rdtsc";
       description = "Binding for the rdtsc machine instruction";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rdtsc-enolan" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rdtsc-enolan";
       version = "0.1";
       sha256 = "0v3x7ga4gx5q4gwh8xdhb2arlmjyilr9igz28wysy9qqlcdw775q";
       homepage = "http://code.haskell.org/rdtsc";
       description = "Binding to sources of high-efficiency, high-precision, monotonically increasing relative time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "re2" = callPackage
    ({ mkDerivation, chell, vector }:
     mkDerivation {
       pname = "re2";
       version = "0.1";
       sha256 = "08mmbxj9dpnb56b6vh0lz7nimp3w3v9g2c6ypxgz8ahvlia0a4f5";
       buildDepends = [ vector ];
       testDepends = [ chell vector ];
       homepage = "https://john-millikin.com/software/haskell-re2/";
       description = "Bindings to the re2 regular expression library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "react-haskell" = callPackage
    ({ mkDerivation, haste-compiler, monads-tf, transformers }:
     mkDerivation {
       pname = "react-haskell";
       version = "1.2.0.0";
       sha256 = "1xngjja8gzq6gvqwygfjps7lykqxsblk6nyhqixwrq8bgyckhd8a";
       buildDepends = [ haste-compiler monads-tf transformers ];
       homepage = "https://github.com/joelburget/react-haskell";
       description = "Haskell React bindings";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reaction-logic" = callPackage
    ({ mkDerivation, mtl, QuickCheck }:
     mkDerivation {
       pname = "reaction-logic";
       version = "2010.11.17";
       sha256 = "0g1lbr0lsx71ddmd64q9lxx3gj63ncc7nqd12l4739wq495q57r0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl QuickCheck ];
       homepage = "http://wiki.github.com/paolino/realogic";
       description = "pluggable pure logic serializable reactor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive" = callPackage
    ({ mkDerivation, category-extras, checkers, QuickCheck, random
     , Stream, TypeCompose, unamb, vector-space
     }:
     mkDerivation {
       pname = "reactive";
       version = "0.11.5";
       sha256 = "1axhgggl1g8yjdvp817bnkj4xc23scc3i2k224k43942255sf71j";
       buildDepends = [
         category-extras checkers QuickCheck random Stream TypeCompose unamb
         vector-space
       ];
       homepage = "http://haskell.org/haskellwiki/reactive";
       description = "Push-pull functional reactive programming";
       license = "unknown";
     }) {};

  "reactive-bacon" = callPackage
    ({ mkDerivation, HUnit, stm }:
     mkDerivation {
       pname = "reactive-bacon";
       version = "0.4.1";
       sha256 = "0cic01yikwgalbprz8y0fs7i7c0pynxl7aivsfjgsl75wdpjsj3m";
       buildDepends = [ stm ];
       testDepends = [ HUnit stm ];
       homepage = "http://github.com/raimohanska/reactive-bacon";
       description = "FRP (functional reactive programming) framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-balsa" = callPackage
    ({ mkDerivation, alsa-core, alsa-seq, data-accessor
     , data-accessor-transformers, event-list, extensible-exceptions
     , midi, midi-alsa, non-negative, random, reactive-banana
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "reactive-balsa";
       version = "0.1.1";
       sha256 = "14k65rjvyxwb4psa53qcz89jllabqv76vh4xwx2k6k5ssl6qfr3n";
       buildDepends = [
         alsa-core alsa-seq data-accessor data-accessor-transformers
         event-list extensible-exceptions midi midi-alsa non-negative random
         reactive-banana transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Reactive-balsa";
       description = "Programmatically edit MIDI events via ALSA and reactive-banana";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-banana" = callPackage
    ({ mkDerivation, hashable, HUnit, pqueue, test-framework
     , test-framework-hunit, transformers, unordered-containers, vault
     }:
     mkDerivation {
       pname = "reactive-banana";
       version = "0.8.0.2";
       sha256 = "0hfhq663dvvb3jbgdnarawryw09m8ckqvqp6p5n4d4dms4gfzcdv";
       buildDepends = [
         hashable pqueue transformers unordered-containers vault
       ];
       testDepends = [
         hashable HUnit pqueue test-framework test-framework-hunit
         transformers unordered-containers vault
       ];
       homepage = "http://haskell.org/haskellwiki/Reactive-banana";
       description = "Library for functional reactive programming (FRP)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-banana-sdl" = callPackage
    ({ mkDerivation, data-lens, data-lens-template, reactive-banana
     , SDL, SDL-image, SDL-ttf
     }:
     mkDerivation {
       pname = "reactive-banana-sdl";
       version = "0.2.0";
       sha256 = "067g8v7xhll416f47prifv0l2i8vr6aywbahhci8kwci75a1al6m";
       buildDepends = [
         data-lens data-lens-template reactive-banana SDL SDL-image SDL-ttf
       ];
       homepage = "https://github.com/JPMoresmau/reactive-banana-sdl";
       description = "Reactive Banana bindings for SDL";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "reactive-banana-threepenny" = callPackage
    ({ mkDerivation, reactive-banana, threepenny-gui }:
     mkDerivation {
       pname = "reactive-banana-threepenny";
       version = "0.7.1.3";
       sha256 = "1fb0bq7rcxsnga2hxh94h2rpp4kjh383z06qgk36m49pyvnbnl9a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ reactive-banana threepenny-gui ];
       homepage = "http://haskell.org/haskellwiki/Reactive-banana";
       description = "Examples for the reactive-banana library, using threepenny-gui";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-banana-wx" = callPackage
    ({ mkDerivation, cabal-macosx, reactive-banana, wx, wxcore }:
     mkDerivation {
       pname = "reactive-banana-wx";
       version = "0.8.0.0";
       sha256 = "0qfd839nm2ppjhhhnn6s1hbx1mnrzjqx450p4jadsrs1y2403c9n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cabal-macosx reactive-banana wx wxcore ];
       configureFlags = "-f-buildExamples";
       homepage = "http://haskell.org/haskellwiki/Reactive-banana";
       description = "Examples for the reactive-banana library, using wxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-fieldtrip" = callPackage
    ({ mkDerivation, FieldTrip, InfixApplicative, reactive
     , reactive-glut, unamb, vector-space
     }:
     mkDerivation {
       pname = "reactive-fieldtrip";
       version = "0.0.9";
       sha256 = "092bxjnhbcyqlij8jc014c56k67ncp5wjm8kmwvn8argfplyscxg";
       buildDepends = [
         FieldTrip InfixApplicative reactive reactive-glut unamb
         vector-space
       ];
       homepage = "http://haskell.org/haskellwiki/reactive-fieldtrip";
       description = "Connect Reactive and FieldTrip";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-glut" = callPackage
    ({ mkDerivation, GLUT, OpenGL, reactive, vector-space }:
     mkDerivation {
       pname = "reactive-glut";
       version = "0.1.10";
       sha256 = "164ivzgrnvqvx7r1jagsng9m47ql0jkayzahhcvs8wd78ksbbsfh";
       buildDepends = [ GLUT OpenGL reactive vector-space ];
       homepage = "http://haskell.org/haskellwiki/reactive-glut";
       description = "Connects Reactive and GLUT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-haskell" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "reactive-haskell";
       version = "0.0.1";
       sha256 = "115zjaymcx1dm7lwdqjq810j664a2kj8phrvjkhfkdsl95srqc85";
       description = "minimal fork of io-reactive";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactive-io" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "reactive-io";
       version = "0.1";
       sha256 = "0s7a29cfzb2j5xvqykx1n5naci2np36zjs3qyq0i4yzjf3qprr63";
       buildDepends = [ transformers ];
       description = "IO-oriented FRP library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reactive-thread" = callPackage
    ({ mkDerivation, monad-parallel, SDL, stm, transformers }:
     mkDerivation {
       pname = "reactive-thread";
       version = "0.3.2.1";
       sha256 = "1mydwb3p2c4xm7zfv7cwcyscq1wdcvs2az743s3j8gl8ggc1zs50";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ monad-parallel SDL stm transformers ];
       homepage = "https://github.com/strager/reactive-thread";
       description = "Reactive programming via imperative threads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reactor" = callPackage
    ({ mkDerivation, bits-atomic, comonad, contravariant, mtl
     , semigroupoids, transformers
     }:
     mkDerivation {
       pname = "reactor";
       version = "0.1.3";
       sha256 = "0g57vkq8cgigy6383p5jk6bbp3l1vcihryz8sjwvr8hs4y96642f";
       buildDepends = [
         bits-atomic comonad contravariant mtl semigroupoids transformers
       ];
       homepage = "http://comonad.com/reader/";
       description = "Reactor - task parallel reactive programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "read-bounded" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "read-bounded";
       version = "0.1.0.0";
       sha256 = "1nvfkxjxn38rpplvg48sgx671fmfxj80dy2a77pjvm3c31q0hhqm";
       description = "Class for reading bounded values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "readable" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "readable";
       version = "0.2";
       sha256 = "0m14xbwmlsjkwlyrgvi15pss3rd7dyaq4y8r58fz5yxmyayf35d2";
       buildDepends = [ text ];
       homepage = "https://github.com/mightybyte/readable";
       description = "Reading from Text and ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "readline" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "readline";
       version = "1.0.3.0";
       sha256 = "1sszlx34qa88fad3wlhd4rkb1my1nrpzvyd8vq7dn806j5sf3ff0";
       description = "An interface to the GNU readline library";
       license = "GPL";
     }) {};

  "readline-statevar" = callPackage
    ({ mkDerivation, readline, StateVar }:
     mkDerivation {
       pname = "readline-statevar";
       version = "1.0.1.0";
       sha256 = "1gfxs3wfdkkarxil2an5l58syrm2vajj0qpshzabzchni32yxic8";
       buildDepends = [ readline StateVar ];
       description = "Readline with variables (setX/getY) wrapped in state vars";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "readpyc" = callPackage
    ({ mkDerivation, bliplib, parseargs }:
     mkDerivation {
       pname = "readpyc";
       version = "0.2.1";
       sha256 = "1icb7w3hgfczrr48x48lwvln05yaw3c9bxwrrfxc92h3q73v1rpp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bliplib parseargs ];
       homepage = "https://github.com/bjpop/blip";
       description = "Read and pretty print Python bytecode (.pyc) files.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "really-simple-xml-parser" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "really-simple-xml-parser";
       version = "0.4.0.0";
       sha256 = "1qmrfisnvm9a25a9ssg4r466yna69vzbwn7s7f4zql28cndg3syy";
       buildDepends = [ parsec ];
       homepage = "http://website-ckkashyap.rhcloud.com";
       description = "A really simple XML parser";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "reasonable-lens" = callPackage
    ({ mkDerivation, mtl, split }:
     mkDerivation {
       pname = "reasonable-lens";
       version = "0.2.0.0";
       sha256 = "0pnq83h2i6dv4kbkgl44h0ik2gi8khavv9j587c8w655k0i5nf4v";
       editedCabalFile = "0i8fjw5zs0df72kxy27qwsz08s5q2m93mby2y1n6dv43sxvgg6v9";
       buildDepends = [ mtl split ];
       homepage = "https://github.com/tokiwoousaka/reasonable-lens";
       description = "Just size lens implementation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "recaptcha" = callPackage
    ({ mkDerivation, HTTP, network, network-uri, xhtml }:
     mkDerivation {
       pname = "recaptcha";
       version = "0.1.0.3";
       sha256 = "18rqsqzni11nr2cvs7ah9k87w493d92c0gmc0n6fhfq6gay9ia19";
       buildDepends = [ HTTP network network-uri xhtml ];
       homepage = "http://github.com/jgm/recaptcha/tree/master";
       description = "Functions for using the reCAPTCHA service in web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "records" = callPackage
    ({ mkDerivation, kinds, type-functions }:
     mkDerivation {
       pname = "records";
       version = "0.1.1.6";
       sha256 = "1nzqqbqwgsr066ykmanyzmlv5nzdzpkkcla0lg8klyw6ck9ddk69";
       buildDepends = [ kinds type-functions ];
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/records";
       description = "A flexible record system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "records-th" = callPackage
    ({ mkDerivation, aeson, data-default, kinds, records, text
     , type-functions, unordered-containers
     }:
     mkDerivation {
       pname = "records-th";
       version = "0.1.1.0";
       sha256 = "1m6v52kmh1clcgah07jjjxvsfpbp6z8lkdd78wap0v3mqiv8mdcg";
       buildDepends = [
         aeson data-default kinds records text type-functions
         unordered-containers
       ];
       homepage = "github.com/lassoinc/records-th";
       description = "Template Haskell declarations for the records package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "recursion-schemes" = callPackage
    ({ mkDerivation, comonad, free, transformers }:
     mkDerivation {
       pname = "recursion-schemes";
       version = "4.1";
       sha256 = "03rf65ak6bxsr204j6d8g5zyxva9vbmncycav3smqwfg5n3b3pwf";
       buildDepends = [ comonad free transformers ];
       homepage = "http://github.com/ekmett/recursion-schemes/";
       description = "Generalized bananas, lenses and barbed wire";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "recursive-line-count" = callPackage
    ({ mkDerivation, filepath, gtk, mtl }:
     mkDerivation {
       pname = "recursive-line-count";
       version = "0.1";
       sha256 = "0iyacn4gb7v6ly0bdci34mrjkjc29mbplqc6bhfv8ksz74aaafyn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath gtk mtl ];
       homepage = "https://github.com/joeyadams/haskell-recursive-line-count";
       description = "Count lines in files and display them hierarchically";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "redHandlers" = callPackage
    ({ mkDerivation, cgi, MaybeT, mtl, network, parsec, stm, xhtml }:
     mkDerivation {
       pname = "redHandlers";
       version = "0.1";
       sha256 = "1llb81aqr0jlsajsmy20br5vqd6ap54bk17ipg8z3gmzd0wcf9c9";
       buildDepends = [ cgi MaybeT mtl network parsec stm xhtml ];
       description = "Monadic HTTP request handlers combinators to build a standalone web apps";
       license = "unknown";
     }) {};

  "redis" = callPackage
    ({ mkDerivation, concurrent-extra, MonadCatchIO-mtl, mtl, network
     , utf8-string
     }:
     mkDerivation {
       pname = "redis";
       version = "0.13.0.1";
       sha256 = "0djwih122pp7y0c1lx7ab7n80ra1488hrwgf0iq20gywk8an9wfq";
       buildDepends = [
         concurrent-extra MonadCatchIO-mtl mtl network utf8-string
       ];
       homepage = "http://hub.darcs.net/ganesh/redis";
       description = "A driver for Redis key-value database";
       license = stdenv.lib.licenses.mit;
     }) {};

  "redis-hs" = callPackage
    ({ mkDerivation, network, utf8-string }:
     mkDerivation {
       pname = "redis-hs";
       version = "0.1.2";
       sha256 = "1irayxwkdksc9v70g7il7zl7pmkrim2admcgjwcm9inyca7618wg";
       buildDepends = [ network utf8-string ];
       homepage = "http://ohloh.net/p/redis-hs";
       description = "A simple Redis library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "redis-io" = callPackage
    ({ mkDerivation, async, attoparsec, auto-update
     , bytestring-conversion, exceptions, mtl, network, operational
     , redis-resp, resource-pool, tasty, tasty-hunit, time, tinylog
     , transformers
     }:
     mkDerivation {
       pname = "redis-io";
       version = "0.3.1";
       sha256 = "13ggija8f8mxdcslm94731cb2bq9jzjr979xybzy4c8csla49yhx";
       buildDepends = [
         attoparsec auto-update exceptions mtl network operational
         redis-resp resource-pool time tinylog transformers
       ];
       testDepends = [
         async bytestring-conversion redis-resp tasty tasty-hunit tinylog
         transformers
       ];
       homepage = "https://github.com/twittner/redis-io/";
       description = "Yet another redis client";
       license = "unknown";
     }) {};

  "redis-resp" = callPackage
    ({ mkDerivation, attoparsec, bytestring-conversion, dlist
     , double-conversion, operational, semigroups, split, transformers
     }:
     mkDerivation {
       pname = "redis-resp";
       version = "0.3.2";
       sha256 = "07lvgq2l2fahhc9z3hjjjpx3n4rzdxl2l2ww9brxnv23432xpz97";
       editedCabalFile = "0cfryrh6ys3b9pydbx7pwifxmp4v98xabr94shk3pkqd4pv7mybl";
       buildDepends = [
         attoparsec bytestring-conversion dlist double-conversion
         operational semigroups split transformers
       ];
       homepage = "https://github.com/twittner/redis-resp/";
       description = "REdis Serialization Protocol (RESP) implementation";
       license = "unknown";
     }) {};

  "redis-simple" = callPackage
    ({ mkDerivation, binary, redis }:
     mkDerivation {
       pname = "redis-simple";
       version = "0.1.1";
       sha256 = "0kzs5lc2y40dzx57k0klz0k9zijhi7mh0awi6rzhzd3h5z1gdr43";
       buildDepends = [ binary redis ];
       homepage = "http://github.com/jaspervdj/redis-simple";
       description = "Simple redis bindings for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "redo" = callPackage
    ({ mkDerivation, filepath, pureMD5 }:
     mkDerivation {
       pname = "redo";
       version = "0.2.0";
       sha256 = "18951sri8wix8aazd8hy8g2gzcpxw2x1ihzmn2prlf10zy1jcy4d";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath pureMD5 ];
       homepage = "https://github.com/jekor/redo";
       description = "software build system, make replacement, implementation of djb's redo";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "reducers" = callPackage
    ({ mkDerivation, comonad, fingertree, hashable, keys, pointed
     , semigroupoids, semigroups, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "reducers";
       version = "3.10.3";
       sha256 = "0hi77mgc2f38y0xfykn7x6gdl6xg710skpx4z76s8c0wwnd28pr6";
       buildDepends = [
         comonad fingertree hashable keys pointed semigroupoids semigroups
         text transformers unordered-containers
       ];
       homepage = "http://github.com/ekmett/reducers/";
       description = "Semigroups, specialized containers and a general map/reduce framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reenact" = callPackage
    ({ mkDerivation, hamid, HCodecs, stm, time, vector-space }:
     mkDerivation {
       pname = "reenact";
       version = "0.9";
       sha256 = "19xw0w15ja8h5wxpz4x65vzvc7qxpn3k33p82pa2g3w9l9hlj2xw";
       buildDepends = [ hamid HCodecs stm time vector-space ];
       description = "A reimplementation of the Reactive library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ref" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ref";
       version = "0.1.1.2";
       sha256 = "109illgbz4g4a6qavgc4wvyxfjvjhyrxa2gpps67avmr1v90gihr";
       homepage = "https://bitbucket.org/carter/ref";
       description = "Generic Mutable Ref Abstraction Layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ref-fd" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "ref-fd";
       version = "0.4";
       sha256 = "1r8cj6v798chr3bp7x6qvsiz04xsj2iicpa6824b4fzzy5ixkj96";
       buildDepends = [ stm transformers ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "A type class for monads with references using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ref-mtl" = callPackage
    ({ mkDerivation, mtl, stm, transformers }:
     mkDerivation {
       pname = "ref-mtl";
       version = "0.3";
       sha256 = "0wijkaf3qyp6qjz0cwyhb89z5jrcz792hx8m9a43xrp7v2f84080";
       buildDepends = [ mtl stm transformers ];
       homepage = "http://www.eecs.harvard.edu/~mainland/";
       description = "A type class for monads with references compatible with the mtl2 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ref-tf" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "ref-tf";
       version = "0.4";
       sha256 = "049xpdn14py3r7hs4ikqdz7jgfsxi6vdsxgq0jfz69gzg4binc25";
       buildDepends = [ stm transformers ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "A type class for monads with references using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "refcount" = callPackage
    ({ mkDerivation, Cabal, hashable, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, unordered-containers
     }:
     mkDerivation {
       pname = "refcount";
       version = "0.1.2";
       sha256 = "1h1gprc4c784pf3wi2ri2hxk7pbh9y8bqc0xcryjcyjk3519ig16";
       buildDepends = [ hashable QuickCheck unordered-containers ];
       testDepends = [
         Cabal hashable HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th unordered-containers
       ];
       homepage = "https://github.com/RobotGymnast/refcount";
       description = "Container with element counts";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reference" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "reference";
       version = "0.1";
       sha256 = "1gqbbiwhx5wq1g73m3apwyrrpapqzimincmw2b64fpkkykq66dq1";
       buildDepends = [ stm ];
       description = "A class for references in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "references" = callPackage
    ({ mkDerivation, either, filepath, instance-control, mtl, text
     , transformers
     }:
     mkDerivation {
       pname = "references";
       version = "0.3.0.0";
       sha256 = "0rw3r9sz39f3pw2zxq7n9ca9jccfrj6lnjs3frimh0xrmdi9bmjk";
       buildDepends = [
         either filepath instance-control mtl text transformers
       ];
       homepage = "https://github.com/lazac/references";
       description = "Generalization of lenses, folds and traversals to handle monads and addition";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "refh" = callPackage
    ({ mkDerivation, clippard, cmdargs, filepath, haskheap, network }:
     mkDerivation {
       pname = "refh";
       version = "0.1.1";
       sha256 = "1fhvn4cjfq92hi422mcdq4xwb405cc4pvlax0bqvyw3bg9ngqz9m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ clippard cmdargs filepath haskheap network ];
       homepage = "https://github.com/Raynes/refh";
       description = "A command-line tool for pasting to https://www.refheap.com";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reflection" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "reflection";
       version = "1.5.1";
       sha256 = "18ail6j7rs5jff9zxphxd7vjkwanpv12dhi98s86r65425fdhjlx";
       homepage = "http://github.com/ekmett/reflection";
       description = "Reifies arbitrary terms into types that can be reflected back into terms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reflection-extras" = callPackage
    ({ mkDerivation, aeson, constraints, lens, reflection, tagged }:
     mkDerivation {
       pname = "reflection-extras";
       version = "0.1.1.0";
       sha256 = "1cnqd8hrcvjvcdrida0q3dxkkmp36qsfqhv0a5zr94b1y5zfrj4k";
       buildDepends = [ aeson constraints lens reflection tagged ];
       homepage = "http://github.com/jfischoff/reflection-extras";
       description = "Utilities for the reflection package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reflection-without-remorse" = callPackage
    ({ mkDerivation, type-aligned }:
     mkDerivation {
       pname = "reflection-without-remorse";
       version = "0.9.3";
       sha256 = "1ibx4y800g4c9i797g81226ai27ms9qlsm5si7h4a25x9fn1bl4j";
       buildDepends = [ type-aligned ];
       homepage = "https://github.com/atzeus/reflection-without-remorse";
       description = "Efficient free and operational monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reform" = callPackage
    ({ mkDerivation, mtl, text }:
     mkDerivation {
       pname = "reform";
       version = "0.2.6";
       sha256 = "02izf5hhhwc27lza0w93n3n5sdg1f0h6njgz3vw4bv71114wfcj7";
       buildDepends = [ mtl text ];
       homepage = "http://www.happstack.com/";
       description = "reform is an HTML form generation and validation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reform-blaze" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, reform, text }:
     mkDerivation {
       pname = "reform-blaze";
       version = "0.2.3";
       sha256 = "1bbmmvrprbig4ic1vq8jjhb4nxxkn0a4dxxaa62i02ms3wb1vsf5";
       buildDepends = [ blaze-html blaze-markup reform text ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using blaze-html with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reform-hamlet" = callPackage
    ({ mkDerivation, blaze-markup, reform, shakespeare, text }:
     mkDerivation {
       pname = "reform-hamlet";
       version = "0.0.4";
       sha256 = "1f8rh9wiax6g7kh1j0j2zmqr7n1ll9ijn2xqp1shhsq8vp30f8fg";
       buildDepends = [ blaze-markup reform shakespeare text ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using Hamlet with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reform-happstack" = callPackage
    ({ mkDerivation, happstack-server, mtl, random, reform, text
     , utf8-string
     }:
     mkDerivation {
       pname = "reform-happstack";
       version = "0.2.4";
       sha256 = "0igyvf8a0dd8376khzsssr6bjp3m224rrynm1ws4slxq9h3dklqn";
       buildDepends = [
         happstack-server mtl random reform text utf8-string
       ];
       homepage = "http://www.happstack.com/";
       description = "Happstack support for reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reform-hsp" = callPackage
    ({ mkDerivation, hsp, reform, text }:
     mkDerivation {
       pname = "reform-hsp";
       version = "0.2.5";
       sha256 = "0fq4g2v22nsqby72sasr15hs02rl97n8j85v9lgirw1jk2mbsqar";
       buildDepends = [ hsp reform text ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using HSP with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-applicative" = callPackage
    ({ mkDerivation, smallcheck, tasty, tasty-hunit, tasty-smallcheck
     , transformers
     }:
     mkDerivation {
       pname = "regex-applicative";
       version = "0.3.0.3";
       sha256 = "111j6x1j7bx5viz2hmgyvcdwfrv5x3f9mifx888hyd3hz850wpwc";
       buildDepends = [ transformers ];
       testDepends = [
         smallcheck tasty tasty-hunit tasty-smallcheck transformers
       ];
       homepage = "https://github.com/feuerbach/regex-applicative";
       description = "Regex-based parsing with applicative interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "regex-base" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "regex-base";
       version = "0.93.2";
       sha256 = "0y1j4h2pg12c853nzmczs263di7xkkmlnsq5dlp5wgbgl49mgp10";
       buildDepends = [ mtl ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-compat" = callPackage
    ({ mkDerivation, regex-base, regex-posix }:
     mkDerivation {
       pname = "regex-compat";
       version = "0.95.1";
       sha256 = "0fwmima3f04p9y4h3c23493n1xj629ia2dxaisqm6rynljjv2z6m";
       buildDepends = [ regex-base regex-posix ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-compat-tdfa" = callPackage
    ({ mkDerivation, regex-base, regex-tdfa }:
     mkDerivation {
       pname = "regex-compat-tdfa";
       version = "0.95.1.4";
       sha256 = "1p90fn90yhp7fvljjdqjp41cszidcfz4pw7fwvzyx4739b98x8sg";
       buildDepends = [ regex-base regex-tdfa ];
       homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
       description = "Unicode Support version of Text.Regex, using regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-deriv" = callPackage
    ({ mkDerivation, bitset, deepseq, dequeue, hashable, hashtables
     , mtl, parallel, parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-deriv";
       version = "0.0.4";
       sha256 = "0anj0az7q3fzdxknc83vci3nm5w0wj54w77xz2jphcbmn9ix9s4c";
       buildDepends = [
         bitset deepseq dequeue hashable hashtables mtl parallel parsec
         regex-base
       ];
       homepage = "http://code.google.com/p/xhaskell-regex-deriv/";
       description = "Replaces/Enhances Text.Regex. Implementing regular expression matching using Brzozowski's Deriviatives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-dfa" = callPackage
    ({ mkDerivation, mtl, parsec, regex-base }:
     mkDerivation {
       pname = "regex-dfa";
       version = "0.91";
       sha256 = "1f846d86wg7yha29qinchpi3r5gv9795f384pqahbyc13wfky7dp";
       buildDepends = [ mtl parsec regex-base ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-easy" = callPackage
    ({ mkDerivation, regex-pcre, string-conversions }:
     mkDerivation {
       pname = "regex-easy";
       version = "0.1.0.0";
       sha256 = "1062h3zd0bxak7rins7kk8n95ic04z5l9zqhg22h0iq5csapllf9";
       buildDepends = [ regex-pcre string-conversions ];
       homepage = "https://github.com/zerobuzz/regex-easy";
       description = "sugar for regex-pcre";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-genex" = callPackage
    ({ mkDerivation, mtl, regex-tdfa, sbv, stream-monad, text }:
     mkDerivation {
       pname = "regex-genex";
       version = "0.6.1";
       sha256 = "14rr6ssc0kgcakmcqqdymgc1rlksr8k2wfvwhrc064rkp9lb9dn2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl regex-tdfa sbv stream-monad text ];
       homepage = "https://github.com/audreyt/regex-genex";
       description = "From a regex, generate all possible strings it can match";
       license = "unknown";
     }) {};

  "regex-parsec" = callPackage
    ({ mkDerivation, parsec, regex-base }:
     mkDerivation {
       pname = "regex-parsec";
       version = "0.90";
       sha256 = "0zf5cr10mxlxxd8fp4q4ix6ibxc5xx3ml3k043kx28f9vfdh2xnx";
       buildDepends = [ parsec regex-base ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-pcre" = callPackage
    ({ mkDerivation, pcre, regex-base }:
     mkDerivation {
       pname = "regex-pcre";
       version = "0.94.4";
       sha256 = "1h16w994g9s62iwkdqa7bar2n9cfixmkzz2rm8svm960qr57valf";
       buildDepends = [ regex-base ];
       extraLibraries = [ pcre ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-pcre-builtin" = callPackage
    ({ mkDerivation, regex-base }:
     mkDerivation {
       pname = "regex-pcre-builtin";
       version = "0.94.4.8.8.35";
       sha256 = "0y7as9wqlkykpipka2cfdhmcnin345q01pp0wsva8fwmvsavdl8b";
       buildDepends = [ regex-base ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-pderiv" = callPackage
    ({ mkDerivation, bitset, deepseq, mtl, parallel, parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-pderiv";
       version = "0.1.3";
       sha256 = "1jh7ksv3cgsjd0f51yyrs2kvji1wyi9qk2ysavh3w34nkgyxmg55";
       buildDepends = [ bitset deepseq mtl parallel parsec regex-base ];
       homepage = "http://code.google.com/p/xhaskell-library/";
       description = "Replaces/Enhances Text.Regex. Implementing regular expression matching using Antimirov's partial derivatives.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-posix" = callPackage
    ({ mkDerivation, regex-base }:
     mkDerivation {
       pname = "regex-posix";
       version = "0.95.2";
       sha256 = "0gkhzhj8nvfn1ija31c7xnl6p0gadwii9ihyp219ck2arlhrj0an";
       buildDepends = [ regex-base ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-posix-unittest" = callPackage
    ({ mkDerivation, mtl, regex-base, regex-posix }:
     mkDerivation {
       pname = "regex-posix-unittest";
       version = "1.1";
       sha256 = "0kcxsdn5lgmpfrkpkygr54jrnjqd93b12shb00n6j00rg7p755vx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl regex-base regex-posix ];
       description = "Unit tests for the plaform's Posix regex library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-tdfa" = callPackage
    ({ mkDerivation, mtl, parsec, regex-base }:
     mkDerivation {
       pname = "regex-tdfa";
       version = "1.2.0";
       sha256 = "00gl9sx3hzd83lp38jlcj7wvzrda8kww7njwlm1way73m8aar0pw";
       buildDepends = [ mtl parsec regex-base ];
       homepage = "http://hackage.haskell.org/package/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-tdfa-rc" = callPackage
    ({ mkDerivation, mtl, parsec, regex-base }:
     mkDerivation {
       pname = "regex-tdfa-rc";
       version = "1.1.8.3";
       sha256 = "1vi11i23gkkjg6193ak90g55akj69bhahy542frkwb68haky4pp3";
       buildDepends = [ mtl parsec regex-base ];
       homepage = "http://hackage.haskell.org/package/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-tdfa-text" = callPackage
    ({ mkDerivation, regex-base, regex-tdfa, text }:
     mkDerivation {
       pname = "regex-tdfa-text";
       version = "1.0.0.2";
       sha256 = "1p17xv3j2xd74iilyqwlqhkmyp26asq4k1pb0h2f0wdqqfr87bfd";
       buildDepends = [ regex-base regex-tdfa text ];
       description = "Text interface for regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-tdfa-unittest" = callPackage
    ({ mkDerivation, mtl, regex-base, regex-tdfa }:
     mkDerivation {
       pname = "regex-tdfa-unittest";
       version = "1.1";
       sha256 = "1b9cca3l46qxvc5ck3z27dg6w1888pabkk0q752bzjqr3fc4nidc";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl regex-base regex-tdfa ];
       description = "Unit tests for the regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-tdfa-utf8" = callPackage
    ({ mkDerivation, regex-base, regex-tdfa, utf8-string }:
     mkDerivation {
       pname = "regex-tdfa-utf8";
       version = "1.0";
       sha256 = "0i5di03v9dsvvhz8mdfx5qba8zcpim0fpx1cjg9gvz4gh0yhqf4k";
       buildDepends = [ regex-base regex-tdfa utf8-string ];
       description = "This combines regex-tdfa with utf8-string to allow searching over UTF8 encoded lazy bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-tre" = callPackage
    ({ mkDerivation, regex-base, tre }:
     mkDerivation {
       pname = "regex-tre";
       version = "0.91";
       sha256 = "1b7x0y8q1fvipnzh06by48f8l9l5ypm6yblpl35fzf641z3m9b7j";
       buildDepends = [ regex-base ];
       extraLibraries = [ tre ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regex-xmlschema" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "regex-xmlschema";
       version = "0.1.5";
       sha256 = "1dmhvnz6sj80kdnm2v7n0lvx8g9arhf9pqqzkn0rwzfhr2by0ss4";
       buildDepends = [ parsec ];
       homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
       description = "A regular expression library for W3C XML Schema regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regexchar" = callPackage
    ({ mkDerivation, Cabal, parallel, parsec, QuickCheck, regex-base
     , regex-posix, regexdot, toolshed
     }:
     mkDerivation {
       pname = "regexchar";
       version = "0.9.0.10";
       sha256 = "1nj43gvhm233609rc0pj183bciiz4nafi6ypq06rs3sb8sin3frj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal parallel parsec QuickCheck regex-base regex-posix regexdot
         toolshed
       ];
       homepage = "http://functionalley.eu";
       description = "A POSIX, extended regex-engine";
       license = "GPL";
     }) {};

  "regexdot" = callPackage
    ({ mkDerivation, deepseq, parallel, parsec, toolshed }:
     mkDerivation {
       pname = "regexdot";
       version = "0.11.1.0";
       sha256 = "0hxqhfamy98ygnbh0ajhdab1zqnx4qnkwclnn5x5f9ra5iqj0rrq";
       buildDepends = [ deepseq parallel parsec toolshed ];
       homepage = "http://functionalley.eu";
       description = "A polymorphic, POSIX, extended regex-engine";
       license = "GPL";
     }) {};

  "regexp-tries" = callPackage
    ({ mkDerivation, derive-trie, weighted-regexp }:
     mkDerivation {
       pname = "regexp-tries";
       version = "0.2";
       sha256 = "16spdq22dsblksvpd85cm6bmjd9053znphw6na1iy9pkmc491v1l";
       buildDepends = [ derive-trie weighted-regexp ];
       homepage = "http://github.com/baldo/regexp-tries";
       description = "Regular Expressions on Tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regexpr" = callPackage
    ({ mkDerivation, HUnit, mtl, mtlparse }:
     mkDerivation {
       pname = "regexpr";
       version = "0.5.4";
       sha256 = "0136wp6hrnmj6pbdhp3a131dzz8bp1pbd92bpagpv1r6gwj16y5z";
       buildDepends = [ HUnit mtl mtlparse ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/regexpr/";
       description = "regular expression like Perl/Ruby in Haskell";
       license = "LGPL";
     }) {};

  "regexpr-symbolic" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "regexpr-symbolic";
       version = "0.5";
       sha256 = "1cpwvb5mmcaqwy617m6cr25pcb4v4yxwzxng82bcrwkhjfdklsdr";
       homepage = "http://sulzmann.blogspot.com/2008/12/equality-containment-and-intersection.html";
       description = "Regular expressions via symbolic manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regexqq" = callPackage
    ({ mkDerivation, pcre-light }:
     mkDerivation {
       pname = "regexqq";
       version = "0.6";
       sha256 = "10vh4i7q9vf6b716hf2i9pv1dy6vlyrh8bybqh91i704a55m40f3";
       buildDepends = [ pcre-light ];
       homepage = "http://code.haskell.org/~morrow/code/haskell/regexqq";
       description = "A quasiquoter for PCRE regexes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regional-pointers" = callPackage
    ({ mkDerivation, base-unicode-symbols, regions, transformers }:
     mkDerivation {
       pname = "regional-pointers";
       version = "0.7";
       sha256 = "1v71k64is86yc19n96062wl8f382xna1vnm0spcmr9jx6x3wyqv2";
       buildDepends = [ base-unicode-symbols regions transformers ];
       homepage = "https://github.com/basvandijk/regional-pointers/";
       description = "Regional memory pointers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regions" = callPackage
    ({ mkDerivation, base-unicode-symbols, monad-control, transformers
     }:
     mkDerivation {
       pname = "regions";
       version = "0.11";
       sha256 = "1l4wi4vziw0d0vaagbknf8bsvh4irqxls6qbhcg8ngpn62a0fa7p";
       buildDepends = [ base-unicode-symbols monad-control transformers ];
       homepage = "https://github.com/basvandijk/regions/";
       description = "Provides the region monad for safely opening and working with scarce resources";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regions-monadsfd" = callPackage
    ({ mkDerivation, base-unicode-symbols, monads-fd, regions
     , transformers
     }:
     mkDerivation {
       pname = "regions-monadsfd";
       version = "0.3.1.3";
       sha256 = "13xyigw1f92bzppqrl96wbz36j9cwrsaxdb2vkg8sjjvnirly3h9";
       buildDepends = [
         base-unicode-symbols monads-fd regions transformers
       ];
       description = "Monads-fd instances for the RegionT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regions-monadstf" = callPackage
    ({ mkDerivation, base-unicode-symbols, monads-tf, regions
     , transformers
     }:
     mkDerivation {
       pname = "regions-monadstf";
       version = "0.3.1.7";
       sha256 = "0r4fr3p2k4k8r1lw6la7h4al068xf5kzb8cgq5864rlkrgf53fxb";
       buildDepends = [
         base-unicode-symbols monads-tf regions transformers
       ];
       homepage = "https://github.com/basvandijk/regions-monadstf/";
       description = "Monads-tf instances for the RegionT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regions-mtl" = callPackage
    ({ mkDerivation, base-unicode-symbols, mtl, regions }:
     mkDerivation {
       pname = "regions-mtl";
       version = "0.3.1.7";
       sha256 = "1s0sr42k1kmwgmrnj5zcan0j9br8xrrm1vdnj6yhliqdfz41ifc0";
       buildDepends = [ base-unicode-symbols mtl regions ];
       homepage = "https://github.com/basvandijk/regions-mtl/";
       description = "mtl instances for the RegionT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regular" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "regular";
       version = "0.3.4.3";
       sha256 = "12pc58agqb4fi0riwxjf0kykn1z12273q8dcdd0fh2x1ddxwgg2r";
       description = "Generic programming library for regular datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regular-extras" = callPackage
    ({ mkDerivation, binary, deepseq, QuickCheck, regular }:
     mkDerivation {
       pname = "regular-extras";
       version = "0.2.3";
       sha256 = "0x1sbps0ccwpvf6fx1jnbjxylqsvvfzkkynliip9jyh6gkhm44vx";
       buildDepends = [ binary deepseq QuickCheck regular ];
       description = "Additional functions for regular: arbitrary, coarbitrary, and binary get/put";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regular-web" = callPackage
    ({ mkDerivation, applicative-extras, fclabels, formlets, json, mtl
     , regular, xhtml
     }:
     mkDerivation {
       pname = "regular-web";
       version = "0.1.1";
       sha256 = "0f4lsly4497p7szibasin27hf2xy5cs8gp87vsbg6mlkk07bvysz";
       buildDepends = [
         applicative-extras fclabels formlets json mtl regular xhtml
       ];
       homepage = "http://github.com/chriseidhof/regular-web";
       description = "Generic programming for the web";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "regular-xmlpickler" = callPackage
    ({ mkDerivation, hxt, regular, text }:
     mkDerivation {
       pname = "regular-xmlpickler";
       version = "0.2";
       sha256 = "1qjx4xsidnpr2as3m2ir97ap5vc9cw6a0z332g53ifx9gskjli9f";
       buildDepends = [ hxt regular text ];
       homepage = "http://github.com/silkapp/regular-xmlpickler";
       description = "Generic generation of HXT XmlPickler instances using Regular";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reheat" = callPackage
    ({ mkDerivation, QuickCheck, text, vty, vty-ui }:
     mkDerivation {
       pname = "reheat";
       version = "0.1.5";
       sha256 = "0m6s6r2d39g3qkjylsrhixk9l9sb2jv0ihxwjn7b0wz7585g2bdv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ text vty vty-ui ];
       testDepends = [ QuickCheck text vty vty-ui ];
       homepage = "https://github.com/mrVanDalo/reheat";
       description = "to make notes and reduce impact on idle time on writing other programms";
       license = "GPL";
     }) {};

  "rehoo" = callPackage
    ({ mkDerivation, cmdargs, parallel-io, shelly, split
     , system-filepath, text
     }:
     mkDerivation {
       pname = "rehoo";
       version = "0.3.1";
       sha256 = "0pwmz1q2866yj8hxbvha4v1smhppkd3jsrrhbhmbxw137l54ijgf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs parallel-io shelly split system-filepath text
       ];
       homepage = "https://github.com/jwiegley/rehoo";
       description = "Rebuild default.hoo from many .hoo files in the current directory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reified-records" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "reified-records";
       version = "0.2.2";
       sha256 = "0vg05idyiy3havw8rlsky7x4y34mpk6by9500r7rb921xgpdq70a";
       buildDepends = [ mtl ];
       homepage = "http://bitbucket.org/jozefg/reified-records";
       description = "Reify records to Maps and back again";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reify" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "reify";
       version = "0.1.1";
       sha256 = "1bl4yv77i8c4w1y5lqr6b8xi1m4ym2phvdjwc9l95rx1vrxkqpk1";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.cs.mu.oz.au/~bjpop/code.html";
       description = "Serialize data";
       license = "GPL";
     }) {};

  "reinterpret-cast" = callPackage
    ({ mkDerivation, data-binary-ieee754, hspec, loop }:
     mkDerivation {
       pname = "reinterpret-cast";
       version = "0.1.0";
       sha256 = "1r2k2fyfm5lknfdfs282l274bgaxf4j4dikk4hpwchjbj0n64m2n";
       testDepends = [ data-binary-ieee754 hspec loop ];
       homepage = "https://github.com/nh2/reinterpret-cast";
       description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
       license = stdenv.lib.licenses.mit;
     }) {};

  "relacion" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "relacion";
       version = "0.1";
       sha256 = "1jq3ii9j8s7q8fr7ac2pdr2l33jvzsyyq70cjd9q1spqa1v6k976";
       homepage = "not available";
       description = "A relation data structure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relation" = callPackage
    ({ mkDerivation, groom }:
     mkDerivation {
       pname = "relation";
       version = "0.2.1";
       sha256 = "03h6l8v3ppxbwg9ddgg121yx3i2v4vbcpwrv1vg3mgbw5pwq7x4c";
       buildDepends = [ groom ];
       homepage = "https://www.github.com/d-day/relation/";
       description = "A data structure representing Relations on Sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relational-query" = callPackage
    ({ mkDerivation, Cabal, dlist, names-th, persistable-record
     , sql-words, text, time, transformers
     }:
     mkDerivation {
       pname = "relational-query";
       version = "0.1.0.0";
       sha256 = "0qhr73j4d0b0957phf4nc8r64kjv7ws2nygnb93dnk290qhm0clc";
       buildDepends = [
         dlist names-th persistable-record sql-words text time transformers
       ];
       testDepends = [ Cabal ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Typeful, Modular, Relational, algebraic query engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relational-query-HDBC" = callPackage
    ({ mkDerivation, convertible, HDBC, HDBC-session, names-th
     , persistable-record, relational-query, relational-schemas
     }:
     mkDerivation {
       pname = "relational-query-HDBC";
       version = "0.1.0.0";
       sha256 = "1r5lj96w8cqcmma2kh46g8xyw0zz161nv1h9bwqia21vvis396vj";
       buildDepends = [
         convertible HDBC HDBC-session names-th persistable-record
         relational-query relational-schemas
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "HDBC instance of relational join and typed query for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relational-record" = callPackage
    ({ mkDerivation, relational-query, relational-query-HDBC }:
     mkDerivation {
       pname = "relational-record";
       version = "0.1.0.0";
       sha256 = "10pxf7skdfj5j0kwfxf2q0j61isgi4nx1499pqq83a0bcacqn8vi";
       buildDepends = [ relational-query relational-query-HDBC ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Meta package of Relational Record";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relational-record-examples" = callPackage
    ({ mkDerivation, HDBC, HDBC-session, HDBC-sqlite3, names-th
     , persistable-record, relational-query, relational-query-HDBC, time
     }:
     mkDerivation {
       pname = "relational-record-examples";
       version = "0.1.0.0";
       sha256 = "0kwpa8vyici2l96n6vpw397m5k5ccd12a5rlr5cwbq921s124ss9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         HDBC HDBC-session HDBC-sqlite3 names-th persistable-record
         relational-query relational-query-HDBC time
       ];
       description = "Examples of Haskell Relationa Record";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relational-schemas" = callPackage
    ({ mkDerivation, persistable-record, relational-query, time }:
     mkDerivation {
       pname = "relational-schemas";
       version = "0.1.0.0";
       sha256 = "1lsw7f4737bj981bvl0hi5b4bhb9b911rajgx0m705kczyl67662";
       buildDepends = [ persistable-record relational-query time ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "RDBMSs' schema templates for relational-query";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relative-date" = callPackage
    ({ mkDerivation, concatenative, datetime, mtl, parsec, time }:
     mkDerivation {
       pname = "relative-date";
       version = "0.0.1";
       sha256 = "052rk17flm5zp70wcl7ki3ys47hnaa2d5c1vjsap7bfkcg4lff66";
       buildDepends = [ concatenative datetime mtl parsec time ];
       description = "Durations and generalized time parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "relit" = callPackage
    ({ mkDerivation, regex-base }:
     mkDerivation {
       pname = "relit";
       version = "0.1.3";
       sha256 = "03cnra0yfpijp65p1x0wv4fvc1p1l27lcb00k22ijrcy2mxqr9cg";
       buildDepends = [ regex-base ];
       description = "Literal for regular expression";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rematch" = callPackage
    ({ mkDerivation, hspec, HUnit }:
     mkDerivation {
       pname = "rematch";
       version = "0.2.0.0";
       sha256 = "0law4al9hzn9qljfm8rwgmb15pzpcs8i44v1l6279977q0lxx5pr";
       testDepends = [ hspec HUnit ];
       description = "A simple api for matchers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rematch-text" = callPackage
    ({ mkDerivation, hspec, HUnit, rematch, text }:
     mkDerivation {
       pname = "rematch-text";
       version = "0.1.0.2";
       sha256 = "0q8jf7128360waq6k369ykp0hfjwydkm7f8ykwzd8xflmgfiywfd";
       buildDepends = [ rematch text ];
       testDepends = [ hspec HUnit rematch text ];
       description = "`rematch` matchers for Data.Text";
       license = stdenv.lib.licenses.mit;
     }) {};

  "remote" = callPackage
    ({ mkDerivation, binary, filepath, mtl, network, pureMD5, stm, syb
     , time, utf8-string
     }:
     mkDerivation {
       pname = "remote";
       version = "0.1.1";
       sha256 = "14awzhpc21pp4iq53vz4ib81ygxsnlnfppv723zy77z6jja08gf0";
       buildDepends = [
         binary filepath mtl network pureMD5 stm syb time utf8-string
       ];
       description = "Cloud Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "remote-debugger" = callPackage
    ({ mkDerivation, ghc-paths, json, network }:
     mkDerivation {
       pname = "remote-debugger";
       version = "0.1.1";
       sha256 = "0ffwqd0sh09qayv8c97rk7ihv33rcpw938a6f3hlxlbpfhlhli46";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ghc-paths json network ];
       homepage = "https://github.com/octomarat/HaskellDebugger";
       description = "Interface to ghci debugger";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "remotion" = callPackage
    ({ mkDerivation, async, concurrent-extra, errors, filelock
     , hashable, hashtables, HTF, HUnit, lifted-async, loch-th
     , monad-control, mtl, network, network-simple, pipes
     , pipes-bytestring, pipes-cereal-plus, pipes-network, pipes-parse
     , placeholders, QuickCheck, quickcheck-instances, stm
     , system-fileio, system-filepath, text, time, transformers-base
     }:
     mkDerivation {
       pname = "remotion";
       version = "0.2.0";
       sha256 = "0m7x5i00i6ai39yii6h5vzlsp1rnmprmddqllqja57kdy3q7v7na";
       buildDepends = [
         async concurrent-extra errors filelock hashable hashtables
         lifted-async loch-th monad-control mtl network network-simple pipes
         pipes-bytestring pipes-cereal-plus pipes-network pipes-parse
         placeholders stm system-fileio system-filepath text time
         transformers-base
       ];
       testDepends = [
         async concurrent-extra errors filelock hashable hashtables HTF
         HUnit lifted-async loch-th monad-control mtl network network-simple
         pipes pipes-bytestring pipes-cereal-plus pipes-network pipes-parse
         placeholders QuickCheck quickcheck-instances stm system-fileio
         system-filepath text time transformers-base
       ];
       homepage = "https://github.com/nikita-volkov/remotion";
       description = "A library for client-server applications based on custom protocols";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reord" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "reord";
       version = "0.0.0.2";
       sha256 = "07lxnfj0q565ydjzgcnb9dhjlrs7s1h6ybam7aic68lfd4p0hr7y";
       description = "Ad-hoc Ord instances";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "reorderable" = callPackage
    ({ mkDerivation, constraints, haskell-src-exts, haskell-src-meta }:
     mkDerivation {
       pname = "reorderable";
       version = "0.3.1";
       sha256 = "1i81yran553jdsyx0bx5g72dg6v24yk3g6l40m1cd430f8yy8a6f";
       buildDepends = [ constraints haskell-src-exts haskell-src-meta ];
       description = "Define compound types that do not depend on member order";
       license = "unknown";
     }) {};

  "repa" = callPackage
    ({ mkDerivation, QuickCheck, vector }:
     mkDerivation {
       pname = "repa";
       version = "3.3.1.2";
       sha256 = "0rsahd6c1mxd8hq9zfx4jqgmcfs4di4askky87y71xy5v4k1x4ai";
       buildDepends = [ QuickCheck vector ];
       homepage = "http://repa.ouroborus.net";
       description = "High performance, regular, shape polymorphic parallel arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-algorithms" = callPackage
    ({ mkDerivation, llvm, repa, vector }:
     mkDerivation {
       pname = "repa-algorithms";
       version = "3.3.1.2";
       sha256 = "12fizvma877ws3xiz3k34jg5xh5yhnl0n5aq2za005l9i5angkk9";
       buildDepends = [ repa vector ];
       extraLibraries = [ llvm ];
       homepage = "http://repa.ouroborus.net";
       description = "Algorithms using the Repa array library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) llvm; };

  "repa-bytestring" = callPackage
    ({ mkDerivation, repa }:
     mkDerivation {
       pname = "repa-bytestring";
       version = "3.0.0.1";
       sha256 = "1q7kvm39iqabanrgyi438n8mfn1ikvpygralyakfc02rm2gpl0gb";
       buildDepends = [ repa ];
       homepage = "http://repa.ouroborus.net";
       description = "(deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-devil" = callPackage
    ({ mkDerivation, libdevil, repa, transformers }:
     mkDerivation {
       pname = "repa-devil";
       version = "0.3.2.2";
       sha256 = "0p46ni9z8wymyk4qmcy04kwycxb31yyprd8ddxsxpjilhbw848lh";
       buildDepends = [ repa transformers ];
       extraLibraries = [ libdevil ];
       homepage = "https://github.com/RaphaelJ/repa-devil";
       description = "Support for image reading and writing of Repa arrays using in-place FFI calls";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-examples" = callPackage
    ({ mkDerivation, llvm, QuickCheck, random, repa, repa-algorithms
     , repa-io, vector
     }:
     mkDerivation {
       pname = "repa-examples";
       version = "3.3.1.1";
       sha256 = "0gdkwmdnmvq82zglryxx2ic1nm4g2r4a0bwndiwbj670w03p712p";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         QuickCheck random repa repa-algorithms repa-io vector
       ];
       extraLibraries = [ llvm ];
       homepage = "http://repa.ouroborus.net";
       description = "Examples using the Repa array library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) llvm; };

  "repa-fftw" = callPackage
    ({ mkDerivation, carray, fft, repa, storable-complex, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "repa-fftw";
       version = "3.2.3.2";
       sha256 = "0y05hjysf484nfdr2qs1mbs7znxi58q9f0kxfnkcbskijwxnj320";
       buildDepends = [ carray fft repa storable-complex ];
       testDepends = [ repa tasty tasty-hunit tasty-quickcheck ];
       description = "Perform fft with repa via FFTW";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-io" = callPackage
    ({ mkDerivation, binary, bmp, repa, vector }:
     mkDerivation {
       pname = "repa-io";
       version = "3.3.1.2";
       sha256 = "1i58ysk44y7s6z1jmns2fi83flqma4k5nsjh1pblqb2rgl7x0z5p";
       buildDepends = [ binary bmp repa vector ];
       homepage = "http://repa.ouroborus.net";
       description = "Read and write Repa arrays in various formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-plugin" = callPackage
    ({ mkDerivation, ddc-base, ddc-core, ddc-core-flow, ddc-core-simpl
     , mtl
     }:
     mkDerivation {
       pname = "repa-plugin";
       version = "1.0.0.1";
       sha256 = "0s644rlk6sqz8sb2rwak42153xxsp5vjpqhlxnmbic0b7r67s8y9";
       buildDepends = [
         ddc-base ddc-core ddc-core-flow ddc-core-simpl mtl
       ];
       description = "Data Flow Fusion GHC Plugin";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-series" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "repa-series";
       version = "1.0.0.1";
       sha256 = "1kldz4d4cv0vliqw78ywbcfgh0mw4i5cd93j0jdagvhsbhlxlp5k";
       buildDepends = [ vector ];
       description = "Series Expressionss API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-sndfile" = callPackage
    ({ mkDerivation, filepath, hsndfile, hsndfile-vector, repa, vector
     }:
     mkDerivation {
       pname = "repa-sndfile";
       version = "3.2.3.3";
       sha256 = "0pgrdhi7s1capainmd6hq1h8wjzppyr8fn93fzygwjpvnnhfggk8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ hsndfile hsndfile-vector repa vector ];
       testDepends = [ filepath hsndfile hsndfile-vector repa vector ];
       description = "Reading and writing sound files with repa arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repa-v4l2" = callPackage
    ({ mkDerivation, bmp, deepseq, gloss, mtl, repa, transformers, v4l2
     , vector
     }:
     mkDerivation {
       pname = "repa-v4l2";
       version = "0.2.0.0";
       sha256 = "1d8spppfjbcb9smk735zxgpz1v1f5p1sm50nfzry68bdb1p29xnz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bmp deepseq gloss mtl repa transformers v4l2 vector
       ];
       homepage = "https://github.com/cgo/hsimage";
       description = "Provides high-level access to webcams";
       license = "LGPL";
     }) {};

  "repl" = callPackage
    ({ mkDerivation, ghc-paths, haskell-src-exts, parsec }:
     mkDerivation {
       pname = "repl";
       version = "1.1";
       sha256 = "0q9gk76r9n8gyn8fwqfmywbrjhyqy0gz8blmmvrvwghyfscabnh9";
       buildDepends = [ ghc-paths haskell-src-exts parsec ];
       homepage = "https://github.com/mikeplus64/repl";
       description = "IRC friendly REPL library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "repline" = callPackage
    ({ mkDerivation, haskeline, mtl }:
     mkDerivation {
       pname = "repline";
       version = "0.1.0.0";
       sha256 = "1minbk5lw29vfxg2vcgmlwkcrhgxlzqypddb88chlnl71myvs7h3";
       buildDepends = [ haskeline mtl ];
       license = stdenv.lib.licenses.mit;
     }) {};

  "repo-based-blog" = callPackage
    ({ mkDerivation, blaze-html, data-default, dyre, filepath
     , filestore, hspec, hspec-discover, ixset, lens, mtl, pandoc
     , parsec, QuickCheck, stm, text, time, transformers
     , transformers-base, transformers-compat
     }:
     mkDerivation {
       pname = "repo-based-blog";
       version = "0.0.1";
       sha256 = "0ada0xqpkp6ch71sizf8fscvz6rjq95asmfgdvg8jj8gwpzvlncs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-html data-default dyre filepath filestore ixset lens mtl
         pandoc parsec stm text time transformers transformers-base
         transformers-compat
       ];
       testDepends = [
         blaze-html filepath filestore hspec hspec-discover ixset lens mtl
         parsec QuickCheck stm text time transformers transformers-base
         transformers-compat
       ];
       homepage = "https://github.com/saep/repo-based-blog";
       description = "Blogging module using blaze html for markup";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repr" = callPackage
    ({ mkDerivation, base-unicode-symbols, dstring, random
     , string-combinators
     }:
     mkDerivation {
       pname = "repr";
       version = "0.4.1.3";
       sha256 = "1y1zl81yjc9jrci83bm6bn8hrfqf6x25vxzkhrkydhhwcwqfqaj5";
       buildDepends = [
         base-unicode-symbols dstring random string-combinators
       ];
       homepage = "https://github.com/basvandijk/repr";
       description = "Render overloaded expressions to their textual representation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "repr-tree-syb" = callPackage
    ({ mkDerivation, syb, text }:
     mkDerivation {
       pname = "repr-tree-syb";
       version = "0.1.0";
       sha256 = "1kpxfvbmfv3zhn0fx7fznnppqxjz2f70g5n89hzkiqjz2am0ls5s";
       buildDepends = [ syb text ];
       homepage = "https://github.com/nikita-volkov/repr-tree-syb";
       description = "Tree representation and pretty-printing of data structures based on SYB";
       license = stdenv.lib.licenses.mit;
     }) {};

  "representable-functors" = callPackage
    ({ mkDerivation, comonad, comonad-transformers, comonads-fd
     , contravariant, distributive, free, keys, mtl, semigroupoids
     , semigroups, transformers
     }:
     mkDerivation {
       pname = "representable-functors";
       version = "3.2.0.2";
       sha256 = "156rhm9hqxkwpv4ppg6647gz2q95mp61rx6ii0nk6i0ygmjvw1l2";
       buildDepends = [
         comonad comonad-transformers comonads-fd contravariant distributive
         free keys mtl semigroupoids semigroups transformers
       ];
       homepage = "http://github.com/ekmett/representable-functors/";
       description = "Representable functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "representable-profunctors" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "representable-profunctors";
       version = "3.2";
       sha256 = "0bly94xix00krgl7iaxwb0l0bvykrm0zqz57m78p8j7pdmkr89wc";
       homepage = "http://github.com/ekmett/representable-profunctors/";
       description = "This package has been absorbed into profunctor-extras";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "representable-tries" = callPackage
    ({ mkDerivation, adjunctions, bifunctors, comonad
     , comonad-transformers, distributive, keys, mtl
     , representable-functors, semigroupoids, semigroups, transformers
     }:
     mkDerivation {
       pname = "representable-tries";
       version = "3.0.2";
       sha256 = "07qjm04xf9qndyybph4mhjp65yjvz54pia4y8kj7wps75gjail2m";
       buildDepends = [
         adjunctions bifunctors comonad comonad-transformers distributive
         keys mtl representable-functors semigroupoids semigroups
         transformers
       ];
       homepage = "http://github.com/ekmett/representable-tries/";
       description = "Tries from representations of polynomial functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "request-monad" = callPackage
    ({ mkDerivation, free, mtl, transformers }:
     mkDerivation {
       pname = "request-monad";
       version = "0.3.0.1";
       sha256 = "1aqcsm9a3zd11k7d4nbvxsy7l35fr77z7gyhrl7rvflnixid29ws";
       buildDepends = [ free mtl transformers ];
       homepage = "http://github.com/nahiluhmot/request-monad";
       description = "A transformer for generic requests";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reroute" = callPackage
    ({ mkDerivation, deepseq, graph-core, hashable, hspec, mtl
     , path-pieces, regex-compat, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "reroute";
       version = "0.2.2.1";
       sha256 = "1hrzbjvsdkz3c27lksxzxlhhdrwqbvq90xyawwsc8zh3fp1nzqpn";
       buildDepends = [
         deepseq graph-core hashable mtl path-pieces regex-compat text
         transformers unordered-containers vector
       ];
       testDepends = [ hspec mtl text unordered-containers vector ];
       homepage = "http://github.com/agrafix/reroute";
       description = "abstract implementation of typed and untyped web routing";
       license = stdenv.lib.licenses.mit;
     }) {};

  "reserve" = callPackage
    ({ mkDerivation, base-compat, hspec, http-conduit, http-kit
     , http-types, network, QuickCheck, warp
     }:
     mkDerivation {
       pname = "reserve";
       version = "0.1.0";
       sha256 = "09b570l6hyn0wfd4nb9xpqrpdb97gbaxnbjlz25y6s0pfg5s1yzp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ base-compat http-kit http-types network ];
       testDepends = [
         base-compat hspec http-conduit http-kit http-types network
         QuickCheck warp
       ];
       description = "Reserve reloads web applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "resource-effect" = callPackage
    ({ mkDerivation, extensible-effects, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "resource-effect";
       version = "0.1.1";
       sha256 = "085ila27irk7pflx4kgn1p364wx2hj9wlm2lvdq0ix25hv8afxnb";
       buildDepends = [ extensible-effects ];
       testDepends = [
         extensible-effects HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/wowus/resource-effect/";
       description = "A port of the package 'resourcet' for extensible effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "resource-pool" = callPackage
    ({ mkDerivation, hashable, monad-control, stm, time, transformers
     , transformers-base, vector
     }:
     mkDerivation {
       pname = "resource-pool";
       version = "0.2.3.1";
       sha256 = "02fpw5jfzcdhijx8mfpb6j4c8sxl36f04i2nx3cbivh9yhbgqr92";
       buildDepends = [
         hashable monad-control stm time transformers transformers-base
         vector
       ];
       homepage = "http://github.com/bos/pool";
       description = "A high-performance striped resource pooling implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "resource-pool-catchio" = callPackage
    ({ mkDerivation, hashable, MonadCatchIO-transformers, stm, time
     , transformers, transformers-base, vector
     }:
     mkDerivation {
       pname = "resource-pool-catchio";
       version = "0.2.1.0";
       sha256 = "0g9r6hnn01n3p2ikcfkfc4afh83pzam29zal3k2ivajpl3kramsw";
       buildDepends = [
         hashable MonadCatchIO-transformers stm time transformers
         transformers-base vector
       ];
       homepage = "http://github.com/norm2782/pool";
       description = "Fork of resource-pool, with a MonadCatchIO constraint";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "resource-simple" = callPackage
    ({ mkDerivation, monad-control, monad-fork, mtl-evil-instances
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "resource-simple";
       version = "0.2";
       sha256 = "0m6jdhnq0f9anjm9bqmz3v8d0k12nkp4nks7mvhw7hjbjnkgscni";
       buildDepends = [
         monad-control monad-fork mtl-evil-instances transformers
         transformers-base
       ];
       description = "Allocate resources which are guaranteed to be released";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "resourcet" = callPackage
    ({ mkDerivation, exceptions, hspec, lifted-base, mmorph
     , monad-control, mtl, transformers, transformers-base
     }:
     mkDerivation {
       pname = "resourcet";
       version = "1.1.3.1";
       sha256 = "13g8vj9hc59q8n696j0w79k5bhp3mgs923y4d2cffnd0p7yd8r8x";
       buildDepends = [
         exceptions lifted-base mmorph monad-control mtl transformers
         transformers-base
       ];
       testDepends = [ hspec lifted-base transformers ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Deterministic allocation and freeing of scarce resources";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-client" = callPackage
    ({ mkDerivation, aeson-utils, case-insensitive, data-default
     , exception-transformers, http-conduit, http-types, hxt
     , hxt-pickle-utils, monad-control, mtl, primitive, resourcet
     , rest-types, tostring, transformers-base, uri-encode, utf8-string
     }:
     mkDerivation {
       pname = "rest-client";
       version = "0.4.0.1";
       sha256 = "1bn2kgyr6q0wxlp3kman20wn7jgz5dc6m8rq5xf0mknpbh8rrnpc";
       buildDepends = [
         aeson-utils case-insensitive data-default exception-transformers
         http-conduit http-types hxt hxt-pickle-utils monad-control mtl
         primitive resourcet rest-types tostring transformers-base
         uri-encode utf8-string
       ];
       description = "Utility library for use in generated API client libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-core" = callPackage
    ({ mkDerivation, aeson, aeson-utils, either, errors, fclabels
     , HUnit, hxt, hxt-pickle-utils, json-schema, mtl, multipart, random
     , rest-stringmap, rest-types, safe, split, test-framework
     , test-framework-hunit, text, transformers, unordered-containers
     , uri-encode, utf8-string, uuid
     }:
     mkDerivation {
       pname = "rest-core";
       version = "0.33.1.2";
       sha256 = "0axl6d28agyzklrnl264413a8hpfi7ih296i453r6fg4c63ma5h4";
       buildDepends = [
         aeson aeson-utils either errors fclabels hxt hxt-pickle-utils
         json-schema mtl multipart random rest-stringmap rest-types safe
         split text transformers unordered-containers uri-encode utf8-string
         uuid
       ];
       testDepends = [
         HUnit mtl test-framework test-framework-hunit unordered-containers
       ];
       description = "Rest API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-example" = callPackage
    ({ mkDerivation, aeson, filepath, generic-aeson, hxt, json-schema
     , monad-control, mtl, regular, regular-xmlpickler, rest-core
     , rest-gen, safe, stm, text, time, transformers, transformers-base
     , unordered-containers
     }:
     mkDerivation {
       pname = "rest-example";
       version = "0.1.2";
       sha256 = "1c9axxqjlynz16aq36c5bh2ar8ppsnxzzgwnddmhgvg2vmdpm7qq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson filepath generic-aeson hxt json-schema monad-control mtl
         regular regular-xmlpickler rest-core rest-gen safe stm text time
         transformers transformers-base unordered-containers
       ];
       homepage = "http://www.github.com/silkapp/rest";
       description = "Example project for rest";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-gen" = callPackage
    ({ mkDerivation, aeson, blaze-html, Cabal, code-builder, fclabels
     , filepath, hashable, haskell-src-exts, hslogger, HStringTemplate
     , HUnit, hxt, json-schema, rest-core, safe, scientific, semigroups
     , split, tagged, test-framework, test-framework-hunit, text
     , uniplate, unordered-containers, vector
     }:
     mkDerivation {
       pname = "rest-gen";
       version = "0.16.1.3";
       sha256 = "1nh3rjnn36v13ikvvxc7xahrj3gsswhiq2w54xclrxjl2fzsqz3a";
       buildDepends = [
         aeson blaze-html Cabal code-builder fclabels filepath hashable
         haskell-src-exts hslogger HStringTemplate hxt json-schema rest-core
         safe scientific semigroups split tagged text uniplate
         unordered-containers vector
       ];
       testDepends = [
         fclabels haskell-src-exts HUnit rest-core test-framework
         test-framework-hunit
       ];
       description = "Documentation and client generation from rest definition";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-happstack" = callPackage
    ({ mkDerivation, happstack-server, mtl, rest-core, rest-gen
     , utf8-string
     }:
     mkDerivation {
       pname = "rest-happstack";
       version = "0.2.10.3";
       sha256 = "05sakr88j6rlwnghzd00g3c3895wpjxi36n9pdbpv0fpm0hh86yv";
       buildDepends = [
         happstack-server mtl rest-core rest-gen utf8-string
       ];
       description = "Rest driver for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-snap" = callPackage
    ({ mkDerivation, case-insensitive, rest-core, safe, snap-core
     , unordered-containers, uri-encode, utf8-string
     }:
     mkDerivation {
       pname = "rest-snap";
       version = "0.1.17.14";
       sha256 = "0fd6d85gzp9mr7y7bgfk9wscrhrych9q7cssps8m5l03n83d8asp";
       buildDepends = [
         case-insensitive rest-core safe snap-core unordered-containers
         uri-encode utf8-string
       ];
       description = "Rest driver for Snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-stringmap" = callPackage
    ({ mkDerivation, aeson, hashable, hxt, json-schema, tagged, text
     , tostring, unordered-containers
     }:
     mkDerivation {
       pname = "rest-stringmap";
       version = "0.2.0.2";
       sha256 = "0nzkc09679c2mz3amh1avk2kfjpqbhbxsr0r9zvgcs71gqkal2mz";
       editedCabalFile = "04rvx4f6pn1dm0k3p5jlj07m9dh4mvzpk05an86c0rngvwi89n3b";
       buildDepends = [
         aeson hashable hxt json-schema tagged text tostring
         unordered-containers
       ];
       description = "Maps with stringy keys that can be transcoded to JSON and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-types" = callPackage
    ({ mkDerivation, aeson, generic-aeson, hxt, json-schema, mtl
     , regular, regular-xmlpickler, rest-stringmap, text, uuid
     }:
     mkDerivation {
       pname = "rest-types";
       version = "1.11.1.1";
       sha256 = "0xr9h1bivw3miyg4xill0jwn95lybsbqgrnw2323pwxlbbnaa25a";
       buildDepends = [
         aeson generic-aeson hxt json-schema mtl regular regular-xmlpickler
         rest-stringmap text uuid
       ];
       description = "Silk Rest Framework Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rest-wai" = callPackage
    ({ mkDerivation, case-insensitive, http-types, mime-types, mtl
     , rest-core, text, unordered-containers, utf8-string, wai
     }:
     mkDerivation {
       pname = "rest-wai";
       version = "0.1.0.4";
       sha256 = "1pxjf0fmsfiywr81zl5xbl6si0x74a7zmz6d5vqv5pvxmpgwgcbg";
       buildDepends = [
         case-insensitive http-types mime-types mtl rest-core text
         unordered-containers utf8-string wai
       ];
       description = "Rest driver for WAI applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "restful-snap" = callPackage
    ({ mkDerivation, blaze-builder, data-default, digestive-functors
     , errors, heist, lens, mtl, readable, snap, snap-core, snap-extras
     , text, time, xmlhtml
     }:
     mkDerivation {
       pname = "restful-snap";
       version = "0.2";
       sha256 = "16gqbk9wl2a1ivhq30yh584h7p2vd7qvwx1rprin47amqzn5b6gc";
       buildDepends = [
         blaze-builder data-default digestive-functors errors heist lens mtl
         readable snap snap-core snap-extras text time xmlhtml
       ];
       homepage = "https://github.com/ozataman/restful-snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "restricted-workers" = callPackage
    ({ mkDerivation, async, cereal, data-default, either, filepath
     , monad-control, mtl, network, selinux, stm, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "restricted-workers";
       version = "0.1.1";
       sha256 = "0lxipqp8nsgw07hmb4b8rfxlfmfhj0l7sg8k0042qscys92rzg9l";
       buildDepends = [
         async cereal data-default either filepath monad-control mtl network
         selinux stm text transformers transformers-base
       ];
       homepage = "https://github.com/co-dan/interactive-diagrams/wiki/Restricted-Workers";
       description = "Running worker processes under system resource restrictions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "restyle" = callPackage
    ({ mkDerivation, filepath, utf8-string }:
     mkDerivation {
       pname = "restyle";
       version = "0.1.0";
       sha256 = "0hzkdg4f5h96zqznnrbjbxrzv17gz1zvd5g4a51rrpsgpngkax7x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath utf8-string ];
       description = "Convert between camel case and separated words style";
       license = stdenv.lib.licenses.mit;
     }) {};

  "resumable-exceptions" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "resumable-exceptions";
       version = "0.0.0.20100920";
       sha256 = "06lzjf8dcbxks57x434n27146whryzzpwcn8bq2mclwfcrv9g3gs";
       buildDepends = [ mtl ];
       description = "A monad transformer for resumable exceptions";
       license = "unknown";
     }) {};

  "rethinkdb" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, binary, data-default
     , doctest, mtl, network, scientific, text, time
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "rethinkdb";
       version = "1.15.2.1";
       sha256 = "017fq9mhqdw78hrnjm9n0nipi182361bxh1qzjpb8djc8azx49b5";
       buildDepends = [
         aeson base64-bytestring binary data-default mtl network scientific
         text time unordered-containers utf8-string vector
       ];
       testDepends = [ doctest ];
       homepage = "http://github.com/atnnn/haskell-rethinkdb";
       description = "A driver for RethinkDB 1.15";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "rethinkdb-client-driver" = callPackage
    ({ mkDerivation, aeson, binary, hashable, hspec, hspec-smallcheck
     , mtl, network, scientific, smallcheck, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "rethinkdb-client-driver";
       version = "0.0.11";
       sha256 = "0dhz28f6cl9jslps02amax871f4dynb8h4f35gw9n66fz6zmwdwx";
       buildDepends = [
         aeson binary hashable mtl network scientific text time
         unordered-containers vector
       ];
       testDepends = [
         hspec hspec-smallcheck smallcheck text time unordered-containers
         vector
       ];
       homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
       description = "Client driver for RethinkDB";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rethinkdb-wereHamster" = callPackage
    ({ mkDerivation, aeson, attoparsec, data-default, mtl, network
     , protocol-buffers, protocol-buffers-descriptor, text, time
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "rethinkdb-wereHamster";
       version = "1.8.0.5";
       sha256 = "0wkxf1iixy9rnl2rawima61qpjz77g4w08dd13q004g6c1n0h6kq";
       buildDepends = [
         aeson attoparsec data-default mtl network protocol-buffers
         protocol-buffers-descriptor text time unordered-containers
         utf8-string vector
       ];
       homepage = "http://github.com/atnnn/haskell-rethinkdb";
       description = "RethinkDB driver for Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "retry" = callPackage
    ({ mkDerivation, data-default-class, exceptions, hspec, HUnit
     , QuickCheck, time, transformers
     }:
     mkDerivation {
       pname = "retry";
       version = "0.5.1";
       sha256 = "1k5qv7c960dayhddvra1gpy1zv90rdjcrzpg8nzar9bpcxapczvj";
       buildDepends = [ data-default-class exceptions transformers ];
       testDepends = [
         data-default-class exceptions hspec HUnit QuickCheck time
         transformers
       ];
       homepage = "http://github.com/Soostone/retry";
       description = "Retry combinators for monadic actions that may fail";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "retryer" = callPackage
    ({ mkDerivation, optparse-applicative }:
     mkDerivation {
       pname = "retryer";
       version = "0.1.0.1";
       sha256 = "1rvblmzlsyfvvvjz71ngb8l412rrr943s7pp75gqjcxnklnlc97j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ optparse-applicative ];
       homepage = "https://github.com/dgonyeo/retryer";
       description = "Retry failed commands";
       license = stdenv.lib.licenses.mpl20;
     }) {};

  "rev-state" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "rev-state";
       version = "0.1";
       sha256 = "1lsq7b225v86rwm2rnrnhn28asjh6r3zwbvdm5vl4sp46cr5i4cf";
       buildDepends = [ mtl ];
       homepage = "https://github.com/DanBurton/rev-state#readme";
       description = "Reverse State monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "revdectime" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "revdectime";
       version = "0.1.1";
       sha256 = "0lbf7dclcdvy56b7wjyq3iam757wf4vic4b5qyxd4bffk66q3asm";
       isLibrary = false;
       isExecutable = true;
       description = "A French revolutionary decimal time (metric) clock";
       license = "GPL";
     }) {};

  "reverse-apply" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "reverse-apply";
       version = "2.0.1";
       sha256 = "0iw1j2xr5dy29a1bwcg7fqk3lv72izr0nhj31rn45w53py1367nb";
       description = "Standard version of the reverse apply operator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "reversi" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "reversi";
       version = "0.1.1";
       sha256 = "1dddlldp55c6l7g5n2gi8r1r0f8r6r3ipq9mlx11d54j8wmvvlnz";
       isLibrary = false;
       isExecutable = true;
       description = "Text-only reversi (aka othelo) game";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "rewrite" = callPackage
    ({ mkDerivation, multiarg }:
     mkDerivation {
       pname = "rewrite";
       version = "0.10";
       sha256 = "10cbsjilc4nv4hi4ipb078hiy7afnjl20f9kcda15pmpmqxxywjg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ multiarg ];
       homepage = "http://www.github.com/massysett/rewrite";
       description = "open file and rewrite it with new contents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rewriting" = callPackage
    ({ mkDerivation, regular }:
     mkDerivation {
       pname = "rewriting";
       version = "0.2.2";
       sha256 = "0gnd8awqjnm905m29yldy3z7w7jvilj5svijz63lzmwbjknfh6bs";
       buildDepends = [ regular ];
       description = "Generic rewriting library for regular datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rex" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, pcre-light }:
     mkDerivation {
       pname = "rex";
       version = "0.5.1";
       sha256 = "18g09pg7hhj052v72vncjvy900h3xhza8hl2g3akad8asn9k6jl6";
       buildDepends = [ haskell-src-exts haskell-src-meta pcre-light ];
       homepage = "http://github.com/mgsloan/rex";
       description = "A quasi-quoter for typeful results of regex captures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rezoom" = callPackage
    ({ mkDerivation, datetime, HTTP, json, mtl, nano-md5, xhtml }:
     mkDerivation {
       pname = "rezoom";
       version = "0.0.4";
       sha256 = "122hca6whzxqk3x7207k4clrrl2awy96pafq0gjwddqicny41jza";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ datetime HTTP json mtl nano-md5 xhtml ];
       description = "Github resume generator";
       license = "GPL";
     }) {};

  "rfc3339" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "rfc3339";
       version = "1.0.4";
       sha256 = "0vrcfmkfikszcalcpa59rzwrjk2dlbwrqgpy2jx0z4kbiaalbg6j";
       buildDepends = [ time ];
       description = "Parse and display time according to RFC3339";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rfc5051" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rfc5051";
       version = "0.1.0.3";
       sha256 = "0av4c3qvwbkbzrjrrg601ay9pds7wscqqp2lc2z78mv2lllap3g3";
       isLibrary = true;
       isExecutable = true;
       description = "Simple unicode collation as per RFC5051";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "riak" = callPackage
    ({ mkDerivation, aeson, attoparsec, binary, blaze-builder
     , monad-control, network, protocol-buffers-fork, pureMD5
     , QuickCheck, random, resource-pool, riak-protobuf, test-framework
     , test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "riak";
       version = "0.7.2.1";
       sha256 = "0i7lq6difvl6pskk6j4ajm3q3nliv802h4c74hkmkpqwf5n3pwa7";
       buildDepends = [
         aeson attoparsec binary blaze-builder monad-control network
         protocol-buffers-fork pureMD5 random resource-pool riak-protobuf
         text time
       ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/markhibberd/riak-haskell-client";
       description = "A Haskell client for the Riak decentralized data store";
       license = "unknown";
     }) {};

  "riak-protobuf" = callPackage
    ({ mkDerivation, parsec, protocol-buffers-descriptor-fork
     , protocol-buffers-fork
     }:
     mkDerivation {
       pname = "riak-protobuf";
       version = "0.18.0.0";
       sha256 = "0vs8l2czbqhfgx4iyhqldrrnvdjbbq94pab33sw3nqbwij3012hw";
       buildDepends = [
         parsec protocol-buffers-descriptor-fork protocol-buffers-fork
       ];
       homepage = "http://github.com/markhibberd/riak-haskell-client";
       description = "Haskell types for the Riak protocol buffer API";
       license = "unknown";
     }) {};

  "richreports" = callPackage
    ({ mkDerivation, ascetic, MissingH }:
     mkDerivation {
       pname = "richreports";
       version = "0.0.3.0";
       sha256 = "0mik0m6nziwm6z517wkxdmjp92nh3qz1m8yk3x5897zafgs1y5kk";
       buildDepends = [ ascetic MissingH ];
       description = "Integrated pretty-printing and error/static analysis reporting";
       license = stdenv.lib.licenses.mit;
     }) {};

  "riff" = callPackage
    ({ mkDerivation, binary, either, filepath, transformers }:
     mkDerivation {
       pname = "riff";
       version = "0.3.0.0";
       sha256 = "1gmvmid0cja2ip4f6y0ciynbxw5li5v25xcbnnsbkvj3yk79cdpa";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary either filepath transformers ];
       homepage = "https://bitbucket.org/robertmassaioli/riff/overview";
       description = "RIFF parser for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "riot" = callPackage
    ({ mkDerivation, mtl, ncurses, packedstring }:
     mkDerivation {
       pname = "riot";
       version = "1.20080618";
       sha256 = "1dgdwr9d0jl3r78f4shx0ff22vqlq72n5w5whw3ppirm8ccxf0ms";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl packedstring ];
       extraLibraries = [ ncurses ];
       homepage = "http://modeemi.fi/~tuomov/riot/";
       description = "Riot is an Information Organisation Tool";
       license = "GPL";
     }) { inherit (pkgs) ncurses; };

  "ripple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base58address, binary, cereal
     , crypto-api, crypto-pubkey-types, cryptohash-cryptoapi, ecdsa
     , errors, largeword, text, time, transformers, utility-ht
     , websockets
     }:
     mkDerivation {
       pname = "ripple";
       version = "0.3";
       sha256 = "1y19kp63chg4ljcccq6cp9n3g26x6jyyhch3jqj04ya9c16cbypw";
       buildDepends = [
         aeson attoparsec base58address binary cereal crypto-api
         crypto-pubkey-types cryptohash-cryptoapi ecdsa errors largeword
         text time transformers utility-ht websockets
       ];
       homepage = "https://github.com/singpolyma/ripple-haskell";
       description = "Ripple payment system library";
       license = "unknown";
     }) {};

  "ripple-federation" = callPackage
    ({ mkDerivation, aeson, attoparsec, base58address, blaze-builder
     , errors, http-streams, http-types, io-streams, network, text
     , unexceptionalio
     }:
     mkDerivation {
       pname = "ripple-federation";
       version = "0.2";
       sha256 = "04kanzbd7y4ic7fcx64pz6i57l5fcb9iv7xbs7swc7b5gp8lc0rg";
       buildDepends = [
         aeson attoparsec base58address blaze-builder errors http-streams
         http-types io-streams network text unexceptionalio
       ];
       homepage = "https://github.com/singpolyma/ripple-federation-haskell";
       description = "Utilities and types to work with the Ripple federation protocol";
       license = "unknown";
     }) {};

  "risc386" = callPackage
    ({ mkDerivation, alex, happy, mtl }:
     mkDerivation {
       pname = "risc386";
       version = "0.0.20130719";
       sha256 = "0i0fkg4vys3n31jwazrajirywxmk7idjv2kz3nlb8kwriqc6d723";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       buildTools = [ alex happy ];
       homepage = "http://www2.tcs.ifi.lmu.de/~abel/";
       description = "Reduced instruction set i386 simulator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rivers" = callPackage
    ({ mkDerivation, lazysmallcheck, oeis, QuickCheck }:
     mkDerivation {
       pname = "rivers";
       version = "0.1.0";
       sha256 = "0x7r04mwxwnqckfk865dckml4am11zx80a9k5kc91kz5ikq1ns64";
       buildDepends = [ lazysmallcheck oeis QuickCheck ];
       homepage = "https://github.com/d-rive/rivers";
       description = "Rivers are like Streams, but different";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rmonad" = callPackage
    ({ mkDerivation, HUnit, suitable, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "rmonad";
       version = "0.8.0.2";
       sha256 = "1pamp8n88f1y4q0q83vmvbqbfva03prcfdqfj3x888mjwxgh6h8l";
       buildDepends = [ suitable transformers ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       description = "Restricted monad library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rncryptor" = callPackage
    ({ mkDerivation, cipher-aes, io-streams, mtl, pbkdf, QuickCheck
     , random, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "rncryptor";
       version = "0.0.2.1";
       sha256 = "086cq7b7x0l98q5di2bpbv9vjrhl7b62nlzwchdl8pqb5w83345m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cipher-aes io-streams mtl pbkdf QuickCheck random
       ];
       testDepends = [ QuickCheck tasty tasty-hunit tasty-quickcheck ];
       description = "Haskell implementation of the RNCryptor file format";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rng-utils" = callPackage
    ({ mkDerivation, mwc-random }:
     mkDerivation {
       pname = "rng-utils";
       version = "0.2";
       sha256 = "17cd2yizppvsq4lg6mfjqzaa7c9ncn5lah3y02yx38kls3s15yc6";
       buildDepends = [ mwc-random ];
       description = "RNG within an MVar for convenient concurrent use";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "robot" = callPackage
    ({ mkDerivation, exceptions, transformers, xhb }:
     mkDerivation {
       pname = "robot";
       version = "1.3.0.1";
       sha256 = "1s6zihvgd0k9fyp15fvyd1fcm7bgsnp5k9w64w6srh5kwdmx8cvp";
       buildDepends = [ exceptions transformers xhb ];
       homepage = "https://github.com/lfairy/robot";
       description = "Simulate keyboard and mouse events";
       license = "unknown";
     }) {};

  "robots-txt" = callPackage
    ({ mkDerivation, attoparsec, heredoc, hspec, QuickCheck, time
     , transformers
     }:
     mkDerivation {
       pname = "robots-txt";
       version = "0.4.1.1";
       sha256 = "16r6j96iay1r6435ym34dp9iggwlfigmzmqq5k5f5ss5bljfc72f";
       buildDepends = [ attoparsec time ];
       testDepends = [ attoparsec heredoc hspec QuickCheck transformers ];
       homepage = "http://github.com/meanpath/robots";
       description = "Parser for robots.txt";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rocksdb-haskell" = callPackage
    ({ mkDerivation, data-default, filepath, resourcet, rocksdb
     , transformers
     }:
     mkDerivation {
       pname = "rocksdb-haskell";
       version = "0.1.0";
       sha256 = "1wi8mc0xzdd47r2vxa1x4gmbm4yikp4pyfj00ycnydvs4b2n3iad";
       buildDepends = [ data-default filepath resourcet transformers ];
       extraLibraries = [ rocksdb ];
       homepage = "http://github.com/agrafix/rocksdb-haskell";
       description = "Haskell bindings to RocksDB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "roguestar" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "roguestar";
       version = "0.6.0.1";
       sha256 = "0xnpji131pva54drxjqra5nkciqljf4x6zylm3snzs8s4c7klak6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       homepage = "http://roguestar.downstairspeople.org/";
       description = "Sci-fi roguelike game. Client application.";
       license = "unknown";
     }) {};

  "roguestar-engine" = callPackage
    ({ mkDerivation, data-memocombinators, hslogger, MaybeT
     , MonadRandom, mtl, parallel, priority-sync, PSQueue, random, stm
     }:
     mkDerivation {
       pname = "roguestar-engine";
       version = "0.6.0.1";
       sha256 = "056080bzdmrn6k0c9lx2d69l2ygal275xlkd6y31sj2ax9yizqkv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-memocombinators hslogger MaybeT MonadRandom mtl parallel
         priority-sync PSQueue random stm
       ];
       homepage = "http://roguestar.downstairspeople.org/";
       description = "Sci-fi roguelike game. Backend.";
       license = "unknown";
     }) {};

  "roguestar-gl" = callPackage
    ({ mkDerivation, arrows, filepath, GLUT, MonadRandom, mtl, OpenGL
     , priority-sync, random, rsagl, rsagl-frp, rsagl-math, stm
     }:
     mkDerivation {
       pname = "roguestar-gl";
       version = "0.6.0.1";
       sha256 = "1lajrc6ay1vk9rbi3x8mx56rrsxkihmapzfm7l8aav2jx0wwryzs";
       buildDepends = [
         arrows filepath GLUT MonadRandom mtl OpenGL priority-sync random
         rsagl rsagl-frp rsagl-math stm
       ];
       homepage = "http://roguestar.downstairspeople.org/";
       description = "Sci-fi roguelike game. Client library.";
       license = "unknown";
     }) {};

  "roguestar-glut" = callPackage
    ({ mkDerivation, GLUT, roguestar-gl, rsagl }:
     mkDerivation {
       pname = "roguestar-glut";
       version = "0.6.0.1";
       sha256 = "13kg8mabh0y1a48zjx9f9k207i5qn0hkabjyg10ha5d0kf36xbyh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT roguestar-gl rsagl ];
       homepage = "http://roguestar.downstairspeople.org/";
       description = "Sci-fi roguelike game. GLUT front-end.";
       license = "unknown";
     }) {};

  "rollbar" = callPackage
    ({ mkDerivation, aeson, basic-prelude, http-conduit, monad-control
     , network, text, vector
     }:
     mkDerivation {
       pname = "rollbar";
       version = "0.3";
       sha256 = "0x7g5h0daxdgjzm95mqp7vpgjc2zs312qrmyqczsws7mlpmcy41k";
       buildDepends = [
         aeson basic-prelude http-conduit monad-control network text vector
       ];
       homepage = "https://github.com/docmunch/rollbar-haskell";
       description = "error tracking through rollbar.com";
       license = stdenv.lib.licenses.mit;
     }) {};

  "roller" = callPackage
    ({ mkDerivation, optparse-applicative, random, regex-applicative }:
     mkDerivation {
       pname = "roller";
       version = "0.1.3";
       sha256 = "07bicx83h66xmy3i2jszl5awkxw6fvy9y5r3v4hq2rz86z09zw0s";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ optparse-applicative random regex-applicative ];
       homepage = "https://github.com/Econify/roller";
       description = "Playing with applicatives and dice!";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "rolling-queue" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "rolling-queue";
       version = "0.1";
       sha256 = "1l39dlq8pn38b48iwqgrnh83h74qkmm34l5m9a0rbg76s2z04c43";
       buildDepends = [ stm ];
       homepage = "https://github.com/joeyadams/haskell-rolling-queue";
       description = "Bounded channel for STM that discards old entries when full";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "roman-numerals" = callPackage
    ({ mkDerivation, base-unicode-symbols, text }:
     mkDerivation {
       pname = "roman-numerals";
       version = "0.5.1.5";
       sha256 = "10da5vls9l5i255bapms4b2r7dnwmxgsaa1cdll2lrmid5dikixr";
       buildDepends = [ base-unicode-symbols text ];
       homepage = "https://github.com/roelvandijk/roman-numerals";
       description = "Parsing and pretty printing of Roman numerals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "romkan" = callPackage
    ({ mkDerivation, attoparsec, HUnit, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "romkan";
       version = "0.1.0.0";
       sha256 = "094z59jbkpy6gv51kf990q4fgmjyylifc63ij4kcdm0hlhmrmdc8";
       buildDepends = [ attoparsec text ];
       testDepends = [
         attoparsec HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/karlvoigtland/romkan-hs";
       description = "Japanese Romaji <-> Japanese Kana conversion library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "roots" = callPackage
    ({ mkDerivation, tagged }:
     mkDerivation {
       pname = "roots";
       version = "0.1.1.2";
       sha256 = "0xzsz4w153mbkkkv07558xkv83fph4g98hvjf6iljwvbbp47l0j9";
       buildDepends = [ tagged ];
       homepage = "/dev/null";
       description = "Root-finding algorithms (1-dimensional)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "rope" = callPackage
    ({ mkDerivation, fingertree, mtl, utf8-string }:
     mkDerivation {
       pname = "rope";
       version = "0.6.4";
       sha256 = "1g77bv2mmfhy2mkb08k92m3f2jab6p2la2s7rfib2r1jy6lq5vhb";
       buildDepends = [ fingertree mtl utf8-string ];
       homepage = "http://github.com/ekmett/rope";
       description = "Tools for manipulating fingertrees of bytestrings with optional annotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rosa" = callPackage
    ({ mkDerivation, aeson, argparser, lens, text, unordered-containers
     , vector, wreq
     }:
     mkDerivation {
       pname = "rosa";
       version = "0.1.2.0";
       sha256 = "1g0vm13hc8cdb9g8m19zbbyqzqysjpymlxhw4pkq0s42ylgayczv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson argparser lens text unordered-containers vector wreq
       ];
       description = "Query the namecoin blockchain";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rosezipper" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rosezipper";
       version = "0.2";
       sha256 = "1g6ppa8cappdbq9923lsac504dfjh0ks64gbm6qbihrc34f4zavc";
       description = "Generic zipper implementation for Data.Tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "roshask" = callPackage
    ({ mkDerivation, attoparsec, binary, BoundedChan, Cabal
     , data-default-generics, deepseq, filemanip, filepath, haxr, mtl
     , network, parsec, pureMD5, SafeSemaphore, snap-core, snap-server
     , stm, storable-tuple, tasty, tasty-hunit, testpack, time
     , transformers, uri, utf8-string, vector, vector-space, xml
     }:
     mkDerivation {
       pname = "roshask";
       version = "0.2";
       sha256 = "1zgvvf7dvfazb4if9wmapgnklh561mjikn21w0ch43zxaqpx6b6k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec binary BoundedChan Cabal data-default-generics deepseq
         filemanip filepath haxr mtl network parsec pureMD5 SafeSemaphore
         snap-core snap-server stm storable-tuple time transformers uri
         utf8-string vector vector-space xml
       ];
       testDepends = [
         attoparsec data-default-generics filepath mtl pureMD5 tasty
         tasty-hunit testpack transformers
       ];
       homepage = "http://github.com/acowley/roshask";
       description = "Haskell support for the ROS robotics framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rosso" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "rosso";
       version = "1.0";
       sha256 = "0cz5kqpvq9qjkdy2x3y6aqia3armawjjsnv2pxifl0l6f9hhrvis";
       buildDepends = [ deepseq ];
       description = "General purpose utility library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rot13" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "rot13";
       version = "0.1.0.2";
       sha256 = "0d9c0zfc92xfp5v5dp83w2897pg2gyz9n14xpggakwk6ynfmf6hd";
       testDepends = [ hspec QuickCheck ];
       homepage = "https://github.com/kvanberendonck/codec-rot13";
       description = "Fast ROT13 cipher for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rotating-log" = callPackage
    ({ mkDerivation, filepath, time }:
     mkDerivation {
       pname = "rotating-log";
       version = "0.2";
       sha256 = "1gqdfzdz3nwp6mjy61a49kwhcrykjl00aq9gq1v68li6z75zf85k";
       buildDepends = [ filepath time ];
       testDepends = [ filepath time ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rounding" = callPackage
    ({ mkDerivation, numeric-extras }:
     mkDerivation {
       pname = "rounding";
       version = "0.3.0";
       sha256 = "1d2vaijcna8gwcrhsjpclqw4gjdvdpmnrlyszqzcxnqf0l206a6y";
       buildDepends = [ numeric-extras ];
       homepage = "http://patch-tag.com/r/ekmett/rounding";
       description = "Explicit floating point rounding mode wrappers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "roundtrip" = callPackage
    ({ mkDerivation, safe, text, xml-types }:
     mkDerivation {
       pname = "roundtrip";
       version = "0.2.0.3";
       sha256 = "1q7n8fnlf9kg4647pm2a3s347dzj7qp29f6hkr0rqfmzp774zwhi";
       buildDepends = [ safe text xml-types ];
       description = "Bidirectional (de-)serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "roundtrip-string" = callPackage
    ({ mkDerivation, mtl, parsec, roundtrip }:
     mkDerivation {
       pname = "roundtrip-string";
       version = "0.1.0.1";
       sha256 = "1lad64y877rf36dgldkc7qcg5xagjc00z4cf2r1ahamv379df8d7";
       buildDepends = [ mtl parsec roundtrip ];
       description = "Bidirectional (de-)serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "roundtrip-xml" = callPackage
    ({ mkDerivation, blaze-builder, blaze-builder-enumerator
     , enumerator, mtl, reference, roundtrip, roundtrip-string, safe
     , text, xml-enumerator, xml-types
     }:
     mkDerivation {
       pname = "roundtrip-xml";
       version = "0.3.0.5";
       sha256 = "1gl649saiaj1biqda64wmpbnv5f3njm3rmfgvf1iavyliqgrwn9m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-builder-enumerator enumerator mtl reference
         roundtrip roundtrip-string safe text xml-enumerator xml-types
       ];
       description = "Bidirectional (de-)serialization for XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "route-generator" = callPackage
    ({ mkDerivation, attoparsec, network, text, yesod-routes }:
     mkDerivation {
       pname = "route-generator";
       version = "0.6.1";
       sha256 = "0bfrb3mz9nxrl4l5pikrp3x4igq4w9jlmvwikyc71ph8ks6rghc6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ attoparsec network text yesod-routes ];
       homepage = "http://github.com/singpolyma/route-generator";
       description = "Utility to generate routes for use with yesod-routes";
       license = "unknown";
     }) {};

  "route-planning" = callPackage
    ({ mkDerivation, coordinate, doctest, filepath, lens, QuickCheck
     , semigroupoids, semigroups, text, xsd
     }:
     mkDerivation {
       pname = "route-planning";
       version = "0.0.3";
       sha256 = "0l3z9hjd8xqnahffg930qi13pf8cpiq44diqmpmh1narcllcbgj7";
       buildDepends = [
         coordinate lens semigroupoids semigroups text xsd
       ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/route";
       description = "A library and utilities for creating a route";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rowrecord" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rowrecord";
       version = "0.1";
       sha256 = "0gcrdy75f0rqfayn37frwcixb086x4s7dygphxhxbpvyl8sjnl0l";
       description = "Build records from lists of strings, as from CSV files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rpc" = callPackage
    ({ mkDerivation, cereal, derive, network-fancy, th-lift }:
     mkDerivation {
       pname = "rpc";
       version = "0.0.1";
       sha256 = "0bw92pmnkfq1azw08ygpmp1z856l3ybhmxkfhy4sfds769k2s4j9";
       buildDepends = [ cereal derive network-fancy th-lift ];
       description = "type safe rpcs provided as basic IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rpc-framework" = callPackage
    ({ mkDerivation, mtl, network, transformers }:
     mkDerivation {
       pname = "rpc-framework";
       version = "2.0.0.2";
       sha256 = "0avjbw9zsa6nsjlwmb1lll0n80j9ggniwpy9sllaam83r6jpxhqq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl network transformers ];
       homepage = "http://github.com/mmirman/rpc-framework";
       description = "a remote procedure call framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rpf" = callPackage
    ({ mkDerivation, appar, blaze-builder, c10k, dns, domain-auth
     , hslogger, iproute, parsec
     }:
     mkDerivation {
       pname = "rpf";
       version = "0.2.5";
       sha256 = "0x40j5rk8v61wzhcj730g75a97ikki7j22dfrh4z873b6mxwfh4k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         appar blaze-builder c10k dns domain-auth hslogger iproute parsec
       ];
       homepage = "http://www.mew.org/~kazu/proj/rpf/";
       description = "Receiver Policy Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rpm" = callPackage
    ({ mkDerivation, filepath, HaXml }:
     mkDerivation {
       pname = "rpm";
       version = "0.0.1";
       sha256 = "1wvaf1llcw4xcp8hmd80scqlk490qfiv5sqncpjmafw7zanrab4z";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath HaXml ];
       description = "Cozy little project to question unruly rpm packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rsagl" = callPackage
    ({ mkDerivation, arrows, data-memocombinators, deepseq, mtl, OpenGL
     , OpenGLRaw, parallel, parsec, random, rsagl-frp, rsagl-math, stm
     , Vec, Vec-OpenGLRaw
     }:
     mkDerivation {
       pname = "rsagl";
       version = "0.6.0.1";
       sha256 = "0f1f6kksrz1ghn6jhbdqsh4rhpkp65ccc4ci2fn5kmmw7qxzal59";
       buildDepends = [
         arrows data-memocombinators deepseq mtl OpenGL OpenGLRaw parallel
         parsec random rsagl-frp rsagl-math stm Vec Vec-OpenGLRaw
       ];
       homepage = "http://roguestar.downstairspeople.org/";
       description = "The RogueStar Animation and Graphics Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rsagl-frp" = callPackage
    ({ mkDerivation, arrows, mtl, random, rsagl-math, stm }:
     mkDerivation {
       pname = "rsagl-frp";
       version = "0.6.0.1";
       sha256 = "0lim4slnhy1sq449kmvs489xy4axryn6qkk32hkzmlwvw8hqpl01";
       buildDepends = [ arrows mtl random rsagl-math stm ];
       homepage = "http://roguestar.downstairspeople.org/";
       description = "The RogueStar Animation and Graphics Library: Functional Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rsagl-math" = callPackage
    ({ mkDerivation, deepseq, OpenGL, OpenGLRaw, parallel, parsec
     , random, Vec, Vec-OpenGLRaw
     }:
     mkDerivation {
       pname = "rsagl-math";
       version = "0.6.0.1";
       sha256 = "04i1l6zb1jm784gdr86jrfm5m999px7ymzwwr5nyh69dk1730znn";
       buildDepends = [
         deepseq OpenGL OpenGLRaw parallel parsec random Vec Vec-OpenGLRaw
       ];
       homepage = "http://roguestar.downstairspeople.org/";
       description = "The RogueStar Animation and Graphics Library: Mathematics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rss" = callPackage
    ({ mkDerivation, HaXml, network, time }:
     mkDerivation {
       pname = "rss";
       version = "3000.2.0.3";
       sha256 = "0q1z3rxjl4f72w7vxcpl4rbxkdwhlqk1a3fvaqn6ggvcm3l9rvm6";
       buildDepends = [ HaXml network time ];
       homepage = "https://github.com/basvandijk/rss";
       description = "A library for generating RSS 2.0 feeds.";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "rss2irc" = callPackage
    ({ mkDerivation, cabal-file-th, cmdargs, deepseq, feed, http-client
     , http-conduit, http-types, io-storage, irc, network, parsec
     , regexpr, resourcet, safe, split, text, time, transformers
     , utf8-string
     }:
     mkDerivation {
       pname = "rss2irc";
       version = "1.0.6";
       sha256 = "0gflfr97y2ypm9h5alm5c851pc0171p8wckdqdhr4wb6r844g8dw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cabal-file-th cmdargs deepseq feed http-client http-conduit
         http-types io-storage irc network parsec regexpr resourcet safe
         split text time transformers utf8-string
       ];
       homepage = "http://hackage.haskell.org/package/rss2irc";
       description = "watches an RSS/Atom feed and writes it to an IRC channel";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rtld" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rtld";
       version = "0.0.2";
       sha256 = "18y55lv3vyl4kpwzphw5gb1jsvp1f6i4dqh9rs6i9fyvabndvfik";
       homepage = "https://github.com/kkardzis/rtld";
       description = "dynamic linker tools for Haskell";
       license = "unknown";
     }) {};

  "rtlsdr" = callPackage
    ({ mkDerivation, c2hs, rtlsdr }:
     mkDerivation {
       pname = "rtlsdr";
       version = "0.1.0.2";
       sha256 = "1r48h54ynlfw40rh1akc0l9k6k5lw50qgfgrf1cccfhzdczhfxjc";
       buildTools = [ c2hs ];
       extraLibraries = [ rtlsdr ];
       description = "Bindings to librtlsdr";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) rtlsdr; };

  "rtorrent-rpc" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, blaze-textual, deepseq
     , haxr, mtl, network, split, utf8-string
     }:
     mkDerivation {
       pname = "rtorrent-rpc";
       version = "0.2.1.0";
       sha256 = "0l2hpdf6vn3532zk5snhwsby5rp28mzys7zbg9qc62dpfscja3v7";
       buildDepends = [
         attoparsec blaze-builder blaze-textual deepseq haxr mtl network
         split utf8-string
       ];
       homepage = "https://github.com/megantti/rtorrent-rpc";
       description = "A library for communicating with RTorrent over its XML-RPC interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "rtorrent-state" = callPackage
    ({ mkDerivation, bencoding, filepath, hspec, lens, QuickCheck
     , temporary, utf8-string
     }:
     mkDerivation {
       pname = "rtorrent-state";
       version = "0.1.0.1";
       sha256 = "0lh7plp9qwlya0dnfvz2sg8nhg42vnrypi2p8rh6i278glniwn90";
       buildDepends = [ bencoding filepath lens utf8-string ];
       testDepends = [
         bencoding filepath hspec QuickCheck temporary utf8-string
       ];
       homepage = "http://github.com/Fuuzetsu/rtorrent-state";
       description = "Parsing and manipulation of rtorrent state file contents";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "rubberband" = callPackage
    ({ mkDerivation, rubberband, vector }:
     mkDerivation {
       pname = "rubberband";
       version = "0.1.0.1";
       sha256 = "03dhmk4sad20xjic8li1bmwfxril9j6fffcwkf575pd51ds7kghf";
       buildDepends = [ vector ];
       extraLibraries = [ rubberband ];
       pkgconfigDepends = [ rubberband ];
       homepage = "https://github.com/mtolly/rubberband";
       description = "Binding to the C++ audio stretching library Rubber Band";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) rubberband; };

  "ruby-qq" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, pcre-light
     , trifecta
     }:
     mkDerivation {
       pname = "ruby-qq";
       version = "0.1.0.0";
       sha256 = "1d2a31kiiv0p8d2yygpg8mgrz0xy6zh5qnf49hz70yk2vavkcac1";
       buildDepends = [
         haskell-src-exts haskell-src-meta pcre-light trifecta
       ];
       homepage = "https://github.com/joelteon/ruby-qq";
       description = "rubyish quasiquoters";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ruff" = callPackage
    ({ mkDerivation, mtl, parsec, Vec }:
     mkDerivation {
       pname = "ruff";
       version = "0.3.2.1";
       sha256 = "0090l9l54j11l1h7754ivfxyz3gs436f0vl896r3ad0183pag2yw";
       buildDepends = [ mtl parsec Vec ];
       homepage = "https://gitorious.org/ruff";
       description = "relatively useful fractal functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ruler" = callPackage
    ({ mkDerivation, mtl, shuffle, uhc-util, uuagc, uuagc-cabal, uulib
     }:
     mkDerivation {
       pname = "ruler";
       version = "0.4.0.1";
       sha256 = "1caca7353zhpfwrssp2pzmw8jk5sqjxh1nr2h6lpsy964kfa3m69";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl shuffle uhc-util uuagc uuagc-cabal uulib ];
       homepage = "https://github.com/UU-ComputerScience/ruler";
       description = "Ruler tool for UHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ruler-core" = callPackage
    ({ mkDerivation, fgl, filepath, mtl, uuagc, uulib }:
     mkDerivation {
       pname = "ruler-core";
       version = "1.0";
       sha256 = "06c55pdfkh9vcmmzlf485d0qxczgd2xj1ajkz277df72p29xvrgd";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ fgl filepath mtl uuagc uulib ];
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       license = "LGPL";
     }) {};

  "rungekutta" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "rungekutta";
       version = "1.0.2";
       sha256 = "07drd0xvkg06p2fsbncafnr7wzkrs4m6sfs1szbbscggw3pxh4fp";
       description = "A collection of explicit Runge-Kutta methods of various orders";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "runghc" = callPackage
    ({ mkDerivation, cmdargs, filepath }:
     mkDerivation {
       pname = "runghc";
       version = "0.1.0.3";
       sha256 = "1vn08xdisdf5l3ps6bcpg3rvl89209f3ig504w7ysqbjgdib96n0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs filepath ];
       homepage = "https://github.com/bacchanalia/runghc";
       description = "runghc replacement for fast repeated runs";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "runmemo" = callPackage
    ({ mkDerivation, data-memocombinators, time }:
     mkDerivation {
       pname = "runmemo";
       version = "1.0.0.1";
       sha256 = "12fn0lsil0rj0pj0ixzppsdw2fmj0cnzci4fh11z9rcggwbz6pms";
       testDepends = [ data-memocombinators time ];
       homepage = "https://github.com/DanBurton/runmemo";
       description = "A simple memoization helper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "rvar" = callPackage
    ({ mkDerivation, MonadPrompt, mtl, random-source, transformers }:
     mkDerivation {
       pname = "rvar";
       version = "0.2.0.2";
       sha256 = "1n24fl27mrm7cndp8b646b9c5hjm3hf5m12y9ni0f850dd739jm4";
       buildDepends = [ MonadPrompt mtl random-source transformers ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random Variables";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "rwlock" = callPackage
    ({ mkDerivation, monad-loops-stm, stm, syb }:
     mkDerivation {
       pname = "rwlock";
       version = "0.0.0.3";
       sha256 = "0isx32ayaqh7vhcyl11ykdy8f1chs1fdw73h3c2r53k989yfkmba";
       buildDepends = [ monad-loops-stm stm syb ];
       homepage = "https://github.com/mokus0/rwlock";
       description = "Multiple-read / single-write locks";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "rws" = callPackage
    ({ mkDerivation, binary, parsec, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "rws";
       version = "0.1.1.2";
       sha256 = "1ildbmnpdh8x25m6kjdc6506cjgngjmjhvrdfkrcwg5cdqcqs266";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary parsec ];
       testDepends = [
         binary parsec QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/karknu/rws";
       description = "Packet Generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "s3-signer" = callPackage
    ({ mkDerivation, base64-bytestring, cryptohash, http-types, time
     , utf8-string
     }:
     mkDerivation {
       pname = "s3-signer";
       version = "0.2.0.0";
       sha256 = "08n2ip8ba3apgc5x8pq1b0rs9j0ng1d7hkw2jrd307q4q85gngy0";
       buildDepends = [
         base64-bytestring cryptohash http-types time utf8-string
       ];
       homepage = "https://github.com/dmjio/s3-signer";
       description = "Pre-signed Amazon S3 URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safe" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "safe";
       version = "0.3.8";
       sha256 = "0k5lk85z2y8kgk7dx7km32g8vi55vnwln8ys2gs174ljd136cjdf";
       homepage = "http://community.haskell.org/~ndm/safe/";
       description = "Library of safe (exception free) functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safe-access" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "safe-access";
       version = "0.2.1.0";
       sha256 = "0k3ynhx6ydwz1b25z9yvpxkqy2ynz2d7db52pzbb70p6vmm1cq2i";
       buildDepends = [ mtl transformers ];
       homepage = "http://hub.darcs.net/thoferon/safe-access";
       description = "A simple environment to control access to data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safe-failure" = callPackage
    ({ mkDerivation, failure }:
     mkDerivation {
       pname = "safe-failure";
       version = "0.5.0.2";
       sha256 = "102fjardfdf9zy0vyalgq6m1l64356b0a0xaam49j31lqgfldaw7";
       buildDepends = [ failure ];
       homepage = "http://www-users.cs.york.ac.uk/~ndm/safe/";
       description = "Library for safe functions (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safe-failure-cme" = callPackage
    ({ mkDerivation, control-monad-exception, safe-failure }:
     mkDerivation {
       pname = "safe-failure-cme";
       version = "0.1.0";
       sha256 = "0np0gq6f9xvywdf2fz5cb43ji0r4c9aqk6gb5w80hwklxdy553gk";
       buildDepends = [ control-monad-exception safe-failure ];
       description = "control-monad-exception Instances for safe-failure";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "safe-freeze" = callPackage
    ({ mkDerivation, indexed, mtl, vector }:
     mkDerivation {
       pname = "safe-freeze";
       version = "0.2.1";
       sha256 = "12mqgak0rla20n9b4m6ynx64bwr06njcr849csc0z0r573xw2v33";
       buildDepends = [ indexed mtl vector ];
       homepage = "https://github.com/reinerp/safe-freeze";
       description = "Support for safely freezing multiple arrays in the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safe-globals" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "safe-globals";
       version = "0.1.1";
       sha256 = "0an3hy28fpdw3v5gjx13fbszzp4r2p65l8mgks0pdflscf2cwwv5";
       buildDepends = [ stm ];
       description = "Safe top-level mutable variables which scope like ordinary values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safe-lazy-io" = callPackage
    ({ mkDerivation, extensible-exceptions, parallel, strict-io }:
     mkDerivation {
       pname = "safe-lazy-io";
       version = "0.1";
       sha256 = "1hqw4i814sz94iqyj79jai8aa2mwmv0mrnfk8ggb0sdx4xqn784c";
       buildDepends = [ extensible-exceptions parallel strict-io ];
       description = "A library providing safe lazy IO features";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safe-plugins" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, plugins, Unixutils }:
     mkDerivation {
       pname = "safe-plugins";
       version = "0.1";
       sha256 = "1nxy70iig54098pzbi8mwc8412fj759y6ihmsdjsk6xlpy6bwx65";
       buildDepends = [ filepath haskell-src-exts plugins Unixutils ];
       description = "A small wrapper over hs-plugins to allow loading safe plugins";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safecopy" = callPackage
    ({ mkDerivation, cereal, lens, quickcheck-instances, tasty
     , tasty-quickcheck, text, time, vector
     }:
     mkDerivation {
       pname = "safecopy";
       version = "0.8.3";
       sha256 = "10xd42a1i84fwiy3db0ji4bd8ssk9jqysqwc00wdcdjyp50c333n";
       buildDepends = [ cereal text time vector ];
       testDepends = [
         cereal lens quickcheck-instances tasty tasty-quickcheck time vector
       ];
       homepage = "http://acid-state.seize.it/safecopy";
       description = "Binary serialization with version control";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "safeint" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "safeint";
       version = "0.5.3";
       sha256 = "1xrdqylf4f6nk2rnpp0zyaj562cdn2wmf9skir21fbzkw1lzvq7j";
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "overflow-checked Int type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safer-file-handles" = callPackage
    ({ mkDerivation, base-unicode-symbols, explicit-iomodes, pathtype
     , regional-pointers, regions, transformers
     }:
     mkDerivation {
       pname = "safer-file-handles";
       version = "0.11";
       sha256 = "1jqw13drzj36gjvlaf9fqd4cj1dpy8psmgsdykag6krxvhq6p639";
       buildDepends = [
         base-unicode-symbols explicit-iomodes pathtype regional-pointers
         regions transformers
       ];
       homepage = "https://github.com/basvandijk/safer-file-handles/";
       description = "Type-safe file handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safer-file-handles-bytestring" = callPackage
    ({ mkDerivation, explicit-iomodes-bytestring, regions
     , safer-file-handles, transformers
     }:
     mkDerivation {
       pname = "safer-file-handles-bytestring";
       version = "0.3.0.1";
       sha256 = "1fbhk5hmq9bpw556vz6w3vq5j380n5pzfgby6w4vrmwnn93y12b9";
       buildDepends = [
         explicit-iomodes-bytestring regions safer-file-handles transformers
       ];
       homepage = "https://github.com/basvandijk/safer-file-handles-bytestring/";
       description = "Extends safer-file-handles with ByteString operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "safer-file-handles-text" = callPackage
    ({ mkDerivation, explicit-iomodes-text, regions, safer-file-handles
     , text, transformers
     }:
     mkDerivation {
       pname = "safer-file-handles-text";
       version = "0.2.0.2";
       sha256 = "14x0kig9dnjrksh7b4gmwdwqr045cqcqjgicvjckhf85jc8bcanm";
       buildDepends = [
         explicit-iomodes-text regions safer-file-handles text transformers
       ];
       homepage = "https://github.com/basvandijk/safer-file-handles-text/";
       description = "Extends safer-file-handles with Text operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "saferoute" = callPackage
    ({ mkDerivation, blaze-html, text }:
     mkDerivation {
       pname = "saferoute";
       version = "0.2.0.0";
       sha256 = "00ykmy44paghgc3m731p1hh00zv11416pl2xil4cav7vrr43nb6h";
       buildDepends = [ blaze-html text ];
       description = "A simple type-safe routing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sai-shape-syb" = callPackage
    ({ mkDerivation, ghc-syb-utils, HUnit, syb }:
     mkDerivation {
       pname = "sai-shape-syb";
       version = "0.2.2";
       sha256 = "0ryifxvpqqqszgr74zwz23cjq1dk7ik8jyqjknzbph473m14z9s1";
       buildDepends = [ ghc-syb-utils syb ];
       testDepends = [ ghc-syb-utils HUnit syb ];
       homepage = "http://www.fremissant.net/shape-syb";
       description = "Obtain homogeneous values from arbitrary values, tramsforming or culling data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "saltine" = callPackage
    ({ mkDerivation, libsodium, profunctors, QuickCheck, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "saltine";
       version = "0.0.0.3";
       sha256 = "1xjpjblxlpziyyz74ldaqh04shvy2qi34sc6b3232wpc0kyl5s8y";
       buildDepends = [ profunctors ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2 vector
       ];
       extraLibraries = [ libsodium ];
       description = "Cryptography that's easy to digest (NaCl/libsodium bindings)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "salvia" = callPackage
    ({ mkDerivation, fclabels, MaybeT-transformers, monads-fd, network
     , pureMD5, random, safe, salvia-protocol, split, stm, text
     , threadmanager, time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "salvia";
       version = "1.0.0";
       sha256 = "1qcnhj3ifjqrkaw1ixqkwmv2br9w5dlk1mrrwgl73c3wxgin7gni";
       buildDepends = [
         fclabels MaybeT-transformers monads-fd network pureMD5 random safe
         salvia-protocol split stm text threadmanager time transformers
         utf8-string
       ];
       description = "Modular web application framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "salvia-demo" = callPackage
    ({ mkDerivation, c10k, fclabels, filestore, monads-fd, network
     , salvia, salvia-extras, salvia-protocol, salvia-sessions
     , salvia-websocket, stm, threadmanager, transformers
     }:
     mkDerivation {
       pname = "salvia-demo";
       version = "1.0.0";
       sha256 = "0sfvx7hj0z2g57gs6l1s078z3a34hfgm4pfcb1qr1pvbc8lj3f1h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         c10k fclabels filestore monads-fd network salvia salvia-extras
         salvia-protocol salvia-sessions salvia-websocket stm threadmanager
         transformers
       ];
       description = "Demo Salvia servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "salvia-extras" = callPackage
    ({ mkDerivation, c10k, clevercss, fclabels, filestore, hscolour
     , HStringTemplate, monads-fd, network, pureMD5, salvia
     , salvia-protocol, sendfile, split, stm, text, threadmanager, time
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "salvia-extras";
       version = "1.0.0";
       sha256 = "1nfiak4nabxm27ddksaif1jdpwn7drbz25jrqk0bmyr5q6q70a51";
       buildDepends = [
         c10k clevercss fclabels filestore hscolour HStringTemplate
         monads-fd network pureMD5 salvia salvia-protocol sendfile split stm
         text threadmanager time transformers utf8-string
       ];
       description = "Collection of non-fundamental handlers for the Salvia web server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "salvia-protocol" = callPackage
    ({ mkDerivation, bimap, fclabels, parsec, safe, split, utf8-string
     }:
     mkDerivation {
       pname = "salvia-protocol";
       version = "1.0.1";
       sha256 = "0a49wjjhdhhlnrwfi6l2zn6jl7vynwyil6s6qzp1za7s5vji48vb";
       buildDepends = [ bimap fclabels parsec safe split utf8-string ];
       description = "Salvia webserver protocol suite supporting URI, HTTP, Cookie and MIME";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "salvia-sessions" = callPackage
    ({ mkDerivation, fclabels, MaybeT-transformers, monads-fd, pureMD5
     , random, safe, salvia, salvia-protocol, stm, time, utf8-string
     }:
     mkDerivation {
       pname = "salvia-sessions";
       version = "1.0.0";
       sha256 = "0cfl9xhawg16gkl18wfxpjysn312yb3q9bagmclrhqk3qzwxgb0h";
       buildDepends = [
         fclabels MaybeT-transformers monads-fd pureMD5 random safe salvia
         salvia-protocol stm time utf8-string
       ];
       description = "Session support for the Salvia webserver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "salvia-websocket" = callPackage
    ({ mkDerivation, fclabels, monads-fd, salvia, salvia-protocol, stm
     , utf8-string
     }:
     mkDerivation {
       pname = "salvia-websocket";
       version = "1.0.0";
       sha256 = "14sr5z5z9xjkf18z1srz6cgciyrhhs4zyl7a8pffxmb893a2gngl";
       buildDepends = [
         fclabels monads-fd salvia salvia-protocol stm utf8-string
       ];
       description = "Websocket implementation for the Salvia Webserver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sample-frame" = callPackage
    ({ mkDerivation, QuickCheck, storable-record }:
     mkDerivation {
       pname = "sample-frame";
       version = "0.0.3";
       sha256 = "0ivj0bcnqqc805np62bdpvh8v4ykmw86ph5rp7k54bbv9wd31bsv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ QuickCheck storable-record ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Handling of samples in an (audio) signal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sample-frame-np" = callPackage
    ({ mkDerivation, numeric-prelude, sample-frame }:
     mkDerivation {
       pname = "sample-frame-np";
       version = "0.0.4";
       sha256 = "1l7447xjxj98jx99b75hdfdjps6mcm293yhx0fjrqwxkz6anxv6d";
       buildDepends = [ numeric-prelude sample-frame ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Orphan instances for types from sample-frame and numericprelude";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "samtools" = callPackage
    ({ mkDerivation, c2hs, filepath, seqloc, vector, zlib }:
     mkDerivation {
       pname = "samtools";
       version = "0.2.4.1";
       sha256 = "00hm12wz6sqv0jn9v7vqxzvq1m7k8d4fdaw25x928ck7g95gk9id";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath seqloc vector ];
       buildTools = [ c2hs ];
       extraLibraries = [ zlib ];
       homepage = "http://www.ingolia-lab.org/samtools-tutorial.html";
       description = "Binding to the C samtools library";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) zlib; };

  "samtools-conduit" = callPackage
    ({ mkDerivation, conduit, filepath, resourcet, samtools
     , transformers
     }:
     mkDerivation {
       pname = "samtools-conduit";
       version = "0.1.1.0";
       sha256 = "0s59ds9s8ghj8wq2cfnh2s865v8bmga53aqvcqf781iv9zvxbqmw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         conduit filepath resourcet samtools transformers
       ];
       homepage = "http://www.ingolia-lab.org/samtools-tutorial.html";
       description = "Conduit interface to SAM/BAM format files through samtools";
       license = stdenv.lib.licenses.mit;
     }) {};

  "samtools-enumerator" = callPackage
    ({ mkDerivation, enumerator, samtools, transformers }:
     mkDerivation {
       pname = "samtools-enumerator";
       version = "0.1.2.1";
       sha256 = "0wk2m2av9fd5zvx29my4llbc8zqk1hrczfvnhrvd90qmw8p33r5m";
       buildDepends = [ enumerator samtools transformers ];
       description = "Enumerator interface to SamTools library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "samtools-iteratee" = callPackage
    ({ mkDerivation, iteratee, monads-tf, samtools, transformers }:
     mkDerivation {
       pname = "samtools-iteratee";
       version = "0.2.2.1";
       sha256 = "139cp03lm05s536gsf03in7lrsmiprs2x6vpr9vci4k0pq2pd06l";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ iteratee monads-tf samtools transformers ];
       description = "Iteratee interface to SamTools library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sandi" = callPackage
    ({ mkDerivation, conduit, exceptions, HUnit, tasty, tasty-hunit
     , tasty-quickcheck, tasty-th
     }:
     mkDerivation {
       pname = "sandi";
       version = "0.3.1";
       sha256 = "1gvlaryc6q49r3n7fkhqvd7qlp52m5h4qnnihx08ndhppmqfwhj4";
       buildDepends = [ conduit exceptions ];
       testDepends = [
         HUnit tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       homepage = "http://hackage.haskell.org/package/sandi";
       description = "Data encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sandlib" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sandlib";
       version = "0.0.2";
       sha256 = "07wh6va4rpf6vvxnjqbmwfna3rg20ysjh2pnzylz6xzlayzq0pkx";
       homepage = "http://github.com/regularlambda/sandlib";
       description = "SAND data serialization and manipulation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sarasvati" = callPackage
    ({ mkDerivation, deepseq, portaudio }:
     mkDerivation {
       pname = "sarasvati";
       version = "0.3.0.0";
       sha256 = "0x8d5n2mydhwl9h7vzk7nr58b2aym9xb21p4m21rfa6vy6r2n438";
       buildDepends = [ deepseq portaudio ];
       homepage = "https://github.com/tokiwoousaka/Sarasvati";
       description = "audio library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sasl" = callPackage
    ({ mkDerivation, base64-bytestring, cryptohash, monads-tf, papillon
     , simple-pipe
     }:
     mkDerivation {
       pname = "sasl";
       version = "0.0.0.2";
       sha256 = "02cv19vi8wfwzxhi33f32zihjqypxjz1x6j7ff70my2wffw95w26";
       buildDepends = [
         base64-bytestring cryptohash monads-tf papillon simple-pipe
       ];
       homepage = "https://github.com/YoshikuniJujo/sasl/wiki";
       description = "SASL implementation using simple-pipe";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sat" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sat";
       version = "1.1.1";
       sha256 = "1ia2asqnxzpyr9s4n488yy00388x0bfy8kwqjx17fap33jkjfi6p";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://tcana.info/sat.html";
       description = "CNF SATisfier";
       license = "GPL";
     }) {};

  "sat-micro-hs" = callPackage
    ({ mkDerivation, mtl, parse-dimacs }:
     mkDerivation {
       pname = "sat-micro-hs";
       version = "0.1.1";
       sha256 = "1w09ccky9rhp1l5g3rxjp9ydfyn0cc7kxmhz922ngls4ywd1hbc4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parse-dimacs ];
       description = "A minimal SAT solver";
       license = "LGPL";
     }) {};

  "satchmo" = callPackage
    ({ mkDerivation, minisat, mtl }:
     mkDerivation {
       pname = "satchmo";
       version = "2.8.1";
       sha256 = "1n7my96x9djy0fkk8rx3pg0z0jyy66va8jk2bqn8ddnxvmazd05v";
       buildDepends = [ minisat mtl ];
       homepage = "<https://github.com/jwaldmann/satchmo>";
       description = "SAT encoding monad";
       license = "GPL";
     }) {};

  "satchmo-backends" = callPackage
    ({ mkDerivation, satchmo, timeit }:
     mkDerivation {
       pname = "satchmo-backends";
       version = "1.9.1";
       sha256 = "1hyzwmhy0f4k60hqjbh9jl3qr4xw3rjgl8nz2gfcdvm5ad91bfdf";
       buildDepends = [ satchmo timeit ];
       homepage = "http://dfa.imn.htwk-leipzig.de/satchmo/";
       description = "driver for external satchmo backends";
       license = "GPL";
     }) {};

  "satchmo-examples" = callPackage
    ({ mkDerivation, satchmo, satchmo-backends }:
     mkDerivation {
       pname = "satchmo-examples";
       version = "1.8.1";
       sha256 = "1xvgamq53yfzcl1p9wbfyy7dlhxsnbj6pjpxgjkyycndgszc84w3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ satchmo satchmo-backends ];
       homepage = "http://dfa.imn.htwk-leipzig.de/satchmo/";
       description = "examples that show how to use satchmo";
       license = "GPL";
     }) {};

  "satchmo-funsat" = callPackage
    ({ mkDerivation, funsat, parse-dimacs, satchmo }:
     mkDerivation {
       pname = "satchmo-funsat";
       version = "1.4";
       sha256 = "0nx0xlbwwcdhdd608akmiwzx8abrd5v4b411221rdl8fshqrbv34";
       buildDepends = [ funsat parse-dimacs satchmo ];
       homepage = "http://dfa.imn.htwk-leipzig.de/satchmo/";
       description = "funsat driver as backend for satchmo";
       license = "GPL";
     }) {};

  "satchmo-minisat" = callPackage
    ({ mkDerivation, satchmo }:
     mkDerivation {
       pname = "satchmo-minisat";
       version = "1.3";
       sha256 = "1dwgj16l2zjqfmf92kpr695ycliwki6a38sxc06scvs6sv6wkc56";
       buildDepends = [ satchmo ];
       homepage = "http://dfa.imn.htwk-leipzig.de/satchmo/";
       description = "minisat driver as backend for satchmo";
       license = "GPL";
     }) {};

  "sbv" = callPackage
    ({ mkDerivation, async, deepseq, filepath, HUnit, mtl, QuickCheck
     , random, syb
     }:
     mkDerivation {
       pname = "sbv";
       version = "3.3";
       sha256 = "193k7njrd7b0qp865ahbjh32h49b86kyc58laifgq6ka2zv64x2f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async deepseq filepath HUnit mtl QuickCheck random syb
       ];
       testDepends = [ filepath HUnit syb ];
       homepage = "http://leventerkok.github.com/sbv/";
       description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sc3-rdu" = callPackage
    ({ mkDerivation, hsc3, hsc3-db }:
     mkDerivation {
       pname = "sc3-rdu";
       version = "0.15";
       sha256 = "0zrd9w3s535b2dpnmmrfg4i6jd9f4nh338x1cbggcw3pjyv8gk30";
       buildDepends = [ hsc3 hsc3-db ];
       homepage = "http://rd.slavepianos.org/t/sc3-rdu";
       description = "Haskell bindings to sc3-rdu (sc3 rd ugens)";
       license = "GPL";
     }) {};

  "scalable-server" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, blaze-builder
     , BoundedChan, enumerator, mtl, network, network-enumerator
     }:
     mkDerivation {
       pname = "scalable-server";
       version = "0.2.2";
       sha256 = "066ncvz6zid1j6d6j89m4k2hywq58p73z30dkqn2l1svlic7dmx6";
       buildDepends = [
         attoparsec attoparsec-enumerator blaze-builder BoundedChan
         enumerator mtl network network-enumerator
       ];
       homepage = "https://github.com/jamwt/haskell-scalable-server/";
       description = "Library for writing fast/scalable TCP-based services";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scaleimage" = callPackage
    ({ mkDerivation, filepath, gd }:
     mkDerivation {
       pname = "scaleimage";
       version = "0.1";
       sha256 = "0alhi0zr2n97942wpnyzq8q62nd4nzjl0rdxaarr7psx6dd3h3nn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath gd ];
       homepage = "http://code.haskell.org/~dons/code/scaleimage";
       description = "Scale an image to a new geometry";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scan" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "scan";
       version = "0.1.0.9";
       sha256 = "0imc8zmg0d42pzbrxiyi8lqx5q24i73ajj3pmb3kqinfhm465jgv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec ];
       homepage = "http://projects.haskell.org/style-scanner";
       description = "lexical style suggestions for source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scan-vector-machine" = callPackage
    ({ mkDerivation, accelerate, dph-base, HUnit }:
     mkDerivation {
       pname = "scan-vector-machine";
       version = "0.2.7";
       sha256 = "112ibzc205pjcmjiwbknw7pdh0c5fyq6i4sqk97jfdr0ynb72vvc";
       buildDepends = [ accelerate dph-base HUnit ];
       testDepends = [ HUnit ];
       description = "An implementation of the Scan Vector Machine instruction set in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scat" = callPackage
    ({ mkDerivation, ansi-terminal, mtl, optparse-applicative, scrypt
     , vector
     }:
     mkDerivation {
       pname = "scat";
       version = "1.1.0.1";
       sha256 = "18sn7dg2pc5wx73gxs6036fxp8yal95pfh336llvmn3azmkd6n95";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal mtl optparse-applicative scrypt vector
       ];
       testDepends = [
         ansi-terminal mtl optparse-applicative scrypt vector
       ];
       homepage = "https://github.com/redelmann/scat";
       description = "Generates unique passwords for various websites from a single password";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scc" = callPackage
    ({ mkDerivation, haskeline, incremental-parser, monad-coroutine
     , monad-parallel, monoid-subclasses, parsec, QuickCheck
     , test-framework, test-framework-quickcheck2, text, transformers
     }:
     mkDerivation {
       pname = "scc";
       version = "0.8.2";
       sha256 = "1chqrv4h6n0sjs747z530ff6wdrciaxpq344zlffbi6qvb61xxzp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         haskeline incremental-parser monad-coroutine monad-parallel
         monoid-subclasses parsec text transformers
       ];
       testDepends = [
         incremental-parser monad-coroutine monad-parallel monoid-subclasses
         QuickCheck test-framework test-framework-quickcheck2 text
         transformers
       ];
       homepage = "http://trac.haskell.org/SCC/";
       description = "Streaming component combinators";
       license = "GPL";
     }) {};

  "scenegraph" = callPackage
    ({ mkDerivation, fgl, GLUT, hmatrix, mtl, OpenGL }:
     mkDerivation {
       pname = "scenegraph";
       version = "0.1.0.2";
       sha256 = "1l946h6sggg2n8ldx34v2sx4dyjqxd7i34wrsllz88iiy4qd90yw";
       buildDepends = [ fgl GLUT hmatrix mtl OpenGL ];
       homepage = "http://www.haskell.org/haskellwiki/SceneGraph";
       description = "Scene Graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scgi" = callPackage
    ({ mkDerivation, cgi, extensible-exceptions, network }:
     mkDerivation {
       pname = "scgi";
       version = "0.3.3";
       sha256 = "0zmn5w5vwxv8slnydbrj1jfhmbvsyars2wf9bbrbgvwsfd40zd2m";
       buildDepends = [ cgi extensible-exceptions network ];
       description = "A Haskell library for writing SCGI programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "schedevr" = callPackage
    ({ mkDerivation, filepath, time, xturtle }:
     mkDerivation {
       pname = "schedevr";
       version = "0.1.0.6";
       sha256 = "1ggywgyfpdza1fk66ixj8z3a1nv1r64dmw7l4d1m3h65yzxx9jcb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath time xturtle ];
       description = "Marge schedules and show EVR";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "schedyield" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "schedyield";
       version = "1.0";
       sha256 = "0lzhxlfxa660vx4y49gbg2q76v8dda00h3rznj5fhdjj29pkypgp";
       description = "Exposes standard POSIX function sched_yield";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scholdoc" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, binary, blaze-html
     , blaze-markup, data-default, Diff, executable-path
     , extensible-exceptions, filepath, highlighting-kate, hslua, HTTP
     , http-client, http-client-tls, http-types, HUnit, JuicyPixels, mtl
     , network, network-uri, parsec, QuickCheck, random
     , scholdoc-texmath, scholdoc-types, scientific, SHA, syb, tagsoup
     , temporary, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, unordered-containers
     , vector, xml, yaml, zip-archive, zlib
     }:
     mkDerivation {
       pname = "scholdoc";
       version = "0.1.3";
       sha256 = "0dsbr4nk56cmbgdnk91s39lc4qp2wb39hkyisaf4f1n6nmx8zmn4";
       editedCabalFile = "0ddlmg6f7y70f1yi351q1d46mgxzs8h53969jmhdhj6al860grxv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring binary blaze-html blaze-markup data-default
         extensible-exceptions filepath highlighting-kate hslua HTTP
         http-client http-client-tls http-types JuicyPixels mtl network
         network-uri parsec random scholdoc-texmath scholdoc-types
         scientific SHA syb tagsoup temporary text time unordered-containers
         vector xml yaml zip-archive zlib
       ];
       testDepends = [
         Diff executable-path filepath HUnit QuickCheck scholdoc-types syb
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://scholdoc.scholarlymarkdown.com";
       description = "Converts ScholarlyMarkdown documents to HTML5/LaTeX/Docx format";
       license = "GPL";
     }) {};

  "scholdoc-citeproc" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, data-default
     , filepath, hs-bibutils, mtl, parsec, rfc5051, scholdoc
     , scholdoc-types, split, syb, tagsoup, temporary, text, time
     , vector, xml-conduit, yaml
     }:
     mkDerivation {
       pname = "scholdoc-citeproc";
       version = "0.6";
       sha256 = "0wy8cwr933zcqb85qscj9l9qcl2xv8mkbd2g9b4gs7c1k5b6khll";
       editedCabalFile = "065ij08gi9ymyqqa7lmj5d57zqk4rax72kzhm2qbvn00h3g6d81k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty attoparsec data-default filepath hs-bibutils mtl
         parsec rfc5051 scholdoc scholdoc-types split syb tagsoup temporary
         text time vector xml-conduit yaml
       ];
       testDepends = [
         aeson filepath scholdoc scholdoc-types temporary text yaml
       ];
       homepage = "http://scholdoc.scholarlymarkdown.com";
       description = "Scholdoc fork of pandoc-citeproc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scholdoc-texmath" = callPackage
    ({ mkDerivation, filepath, mtl, network-uri, parsec, scholdoc-types
     , split, syb, temporary, text, utf8-string, xml
     }:
     mkDerivation {
       pname = "scholdoc-texmath";
       version = "0.1";
       sha256 = "1ddzdypdijpkil7v7g6jf74dmlw72j0hjmnxys21fdvgafiq9bk3";
       editedCabalFile = "17qzsqmbfgz60v4nphfl5xqdcw0m0w60mfcwqc7gk377g7hdinkf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl network-uri parsec scholdoc-types syb xml ];
       testDepends = [ filepath split temporary text utf8-string xml ];
       homepage = "http://scholdoc.scholarlymarkdown.com";
       description = "Scholdoc fork of texmath";
       license = "GPL";
     }) {};

  "scholdoc-types" = callPackage
    ({ mkDerivation, aeson, deepseq-generics, syb }:
     mkDerivation {
       pname = "scholdoc-types";
       version = "0.1.3";
       sha256 = "0als5517hplkccrkv9c31dm0ivlk60ais0wyvc9a31jdjwjcyppk";
       editedCabalFile = "139npnck7gc2m7q5zrs4y163n22wnb2xl9bhsmhq72lq3255gyqq";
       buildDepends = [ aeson deepseq-generics syb ];
       homepage = "http://scholdoc.scholarlymarkdown.com";
       description = "Scholdoc fork of pandoc-types";
       license = "GPL";
     }) {};

  "schonfinkeling" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "schonfinkeling";
       version = "0.1.0.0";
       sha256 = "1wwbalfkfg66azr9zizscvdc2csi9q73d6wq5bwbiq33z522nwxy";
       description = "Transformation of n-ary functions to unary functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sci-ratio" = callPackage
    ({ mkDerivation, hashable }:
     mkDerivation {
       pname = "sci-ratio";
       version = "0.2.1.0";
       sha256 = "1qddamwk2fzakixx9f0y0r3z9z6kmyyxgpb3dhiiiza6krnf8r9k";
       buildDepends = [ hashable ];
       homepage = "https://github.com/Rufflewind/sci-ratio";
       description = "Rational numbers in scientific notation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "science-constants" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "science-constants";
       version = "0.2.0.0";
       sha256 = "0qp3d9la929kks2b2pyylgznl86gy91lp3zgpb9bn7gas3wll9vy";
       description = "Mathematical/physical/chemical constants";
       license = "unknown";
     }) {};

  "science-constants-dimensional" = callPackage
    ({ mkDerivation, dimensional, numtype, science-constants }:
     mkDerivation {
       pname = "science-constants-dimensional";
       version = "0.1.0.1";
       sha256 = "0n39pfs7kfhy62vl9q2ka5f9bfckncpssjsdx71d1hrld0jcq2g8";
       buildDepends = [ dimensional numtype science-constants ];
       description = "Mathematical/physical/chemical constants";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scientific" = callPackage
    ({ mkDerivation, deepseq, hashable, QuickCheck, smallcheck, tasty
     , tasty-ant-xml, tasty-hunit, tasty-quickcheck, tasty-smallcheck
     , text
     }:
     mkDerivation {
       pname = "scientific";
       version = "0.3.3.3";
       sha256 = "1hngkmd1kggc84sz4mddc0yj2vyzc87dz5dkkywjgxczys51mhqn";
       buildDepends = [ deepseq hashable text ];
       testDepends = [
         QuickCheck smallcheck tasty tasty-ant-xml tasty-hunit
         tasty-quickcheck tasty-smallcheck text
       ];
       homepage = "https://github.com/basvandijk/scientific";
       description = "Numbers represented using scientific notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scion" = callPackage
    ({ mkDerivation, Cabal, filepath, ghc-paths, ghc-syb, hslogger
     , json, multiset, network, network-bytestring, time, uniplate
     , utf8-string
     }:
     mkDerivation {
       pname = "scion";
       version = "0.1.0.2";
       sha256 = "1ihq538ym6hh099p0h9p1ngjsq3a9h9k5ssnwyr4bqhlmv8xam0i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath ghc-paths ghc-syb hslogger json multiset network
         network-bytestring time uniplate utf8-string
       ];
       homepage = "http://github.com/nominolo/scion";
       description = "Haskell IDE library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scion-browser" = callPackage
    ({ mkDerivation, aeson, attoparsec, Cabal, conduit, deepseq, derive
     , filepath, ghc-paths, ghc-pkg-lib, haskeline, haskell-src-exts
     , HTTP, http-conduit, monad-logger, mtl, parallel-io, parsec
     , persistent, persistent-sqlite, persistent-template, resourcet
     , tar, text, transformers, unordered-containers, utf8-string
     , vector, zlib
     }:
     mkDerivation {
       pname = "scion-browser";
       version = "0.4.2";
       sha256 = "00h90qijqjrgizv6hq377yy6n6naf0d4z1xd9nyx6b5c6avyw3rb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec Cabal conduit deepseq derive filepath ghc-paths
         ghc-pkg-lib haskeline haskell-src-exts HTTP http-conduit
         monad-logger mtl parallel-io parsec persistent persistent-sqlite
         persistent-template resourcet tar text transformers
         unordered-containers utf8-string vector zlib
       ];
       homepage = "http://github.com/JPMoresmau/scion-class-browser";
       description = "Command-line interface for browsing and searching packages documentation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scons2dot" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "scons2dot";
       version = "0.9";
       sha256 = "1c9akvpvwakdnqciz57bwjhqkdfkky43wmj7rx9fsk552pamzijk";
       isLibrary = false;
       isExecutable = true;
       description = "Generates graphviz file of scons dependency information";
       license = "GPL";
     }) {};

  "scope" = callPackage
    ({ mkDerivation, iteratee, MonadCatchIO-transformers, mtl
     , mwc-random, time, zoom-cache
     }:
     mkDerivation {
       pname = "scope";
       version = "0.8.0.1";
       sha256 = "1ks66paa30xwqgrllkyz0phh73pc0d2f6aq474cpz7gdb7zyrkzi";
       buildDepends = [
         iteratee MonadCatchIO-transformers mtl mwc-random time zoom-cache
       ];
       description = "An interactive renderer for plotting time-series data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scope-cairo" = callPackage
    ({ mkDerivation, cairo, gtk, MonadCatchIO-transformers, mtl, scope
     , time, zoom-cache
     }:
     mkDerivation {
       pname = "scope-cairo";
       version = "0.8.0.1";
       sha256 = "0dhpyf0kh6qrrcyr3iwp3i3rkj5vcl7k7aa9qmxq2qq1f6dhw4p6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo gtk MonadCatchIO-transformers mtl scope time zoom-cache
       ];
       description = "An interactive renderer for plotting time-series data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scottish" = callPackage
    ({ mkDerivation, data-default, enclosed-exceptions, http-types
     , lens, mtl, persistent, resource-pool, scotty, stm, text
     , transformers, wai, warp
     }:
     mkDerivation {
       pname = "scottish";
       version = "0.1.0.1";
       sha256 = "01874r5r6lzwa7w0pa5i0ymnxb5vpkpxyfnf3knlyblv9b5j82nx";
       buildDepends = [
         data-default enclosed-exceptions http-types lens mtl persistent
         resource-pool scotty stm text transformers wai warp
       ];
       homepage = "https://github.com/echaozh/scottish";
       description = "scotty with batteries included";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scotty" = callPackage
    ({ mkDerivation, aeson, blaze-builder, case-insensitive
     , data-default, hspec-wai, hspec2, http-types, lifted-base
     , monad-control, mtl, regex-compat, text, transformers
     , transformers-base, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "scotty";
       version = "0.9.0";
       sha256 = "0gx00k5w4cs68bh3ciplkwhzh2412y6wqg0qdsslnnsb41l5kb1d";
       editedCabalFile = "1i4r5h8c0dnnf352d3g3bk13jvdcp7wmdgv1mafa8wsw0myqlw0x";
       buildDepends = [
         aeson blaze-builder case-insensitive data-default http-types
         monad-control mtl regex-compat text transformers transformers-base
         wai wai-extra warp
       ];
       testDepends = [ hspec-wai hspec2 http-types lifted-base text wai ];
       homepage = "https://github.com/scotty-web/scotty";
       description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scotty-binding-play" = callPackage
    ({ mkDerivation, hspec, http-client, HUnit, mtl, scotty, text
     , transformers
     }:
     mkDerivation {
       pname = "scotty-binding-play";
       version = "1.3";
       sha256 = "0k9ylywhvb4nfnm304zlan0bzdx8rxcwnvip8assz80kz47zvjp9";
       buildDepends = [ mtl scotty text ];
       testDepends = [ hspec http-client HUnit scotty text transformers ];
       homepage = "https://github.com/welmo/scotty-binding-play";
       description = "The Play Framework style data binding in Scotty";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scotty-blaze" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, mtl, scotty, wai }:
     mkDerivation {
       pname = "scotty-blaze";
       version = "0.1.3";
       sha256 = "0bl37bplal6y6ma0ba8llypsrx11959vcq04s8x6642hzk0cgid7";
       buildDepends = [ blaze-builder blaze-html mtl scotty wai ];
       description = "blaze-html integration for Scotty";
       license = stdenv.lib.licenses.mit;
     }) {};

  "scotty-cookie" = callPackage
    ({ mkDerivation, blaze-builder, cookie, scotty, text, time
     , transformers
     }:
     mkDerivation {
       pname = "scotty-cookie";
       version = "0.1.0.3";
       sha256 = "0wyvx30889lbbgq7dmjfldlbnyg1b8b3zh1py5lis59mwz6r3w9l";
       buildDepends = [
         blaze-builder cookie scotty text time transformers
       ];
       homepage = "https://bitbucket.org/wniare/scotty-cookie";
       description = "Cookie management helper functions for Scotty framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scotty-fay" = callPackage
    ({ mkDerivation, data-default, fay, fay-jquery, filepath
     , http-types, HUnit, scotty, test-framework, test-framework-hunit
     , text, transformers, wai, wai-test
     }:
     mkDerivation {
       pname = "scotty-fay";
       version = "0.1.1";
       sha256 = "13ksxw2v6gac3r368ifnbrrgmmafr2fyki63ws4qxw415fwnqa82";
       buildDepends = [
         data-default fay fay-jquery filepath http-types scotty text
         transformers wai
       ];
       testDepends = [
         data-default fay fay-jquery filepath http-types HUnit scotty
         test-framework test-framework-hunit text transformers wai wai-test
       ];
       description = "Fay integration for Scotty";
       license = stdenv.lib.licenses.mit;
     }) {};

  "scotty-hastache" = callPackage
    ({ mkDerivation, filepath, hastache, http-types, mtl, scotty, text
     , wai, warp
     }:
     mkDerivation {
       pname = "scotty-hastache";
       version = "0.2.1";
       sha256 = "1yyip8iq1n71iidmpbfs7rifxvpphyrcaf4z394rx36hq72ka8dn";
       buildDepends = [
         filepath hastache http-types mtl scotty text wai warp
       ];
       homepage = "https://github.com/scotty-web/scotty-hastache";
       description = "Easy Mustache templating support for Scotty";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scotty-session" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, crypto-api
     , http-types, scotty, stm, text, time, transformers
     , unordered-containers, wai
     }:
     mkDerivation {
       pname = "scotty-session";
       version = "0.0.3";
       sha256 = "0kf7if36kmh03zdg26ciz8vs4znr1kcw46jpvcigjn48n0ivdm7b";
       buildDepends = [
         base64-bytestring blaze-builder crypto-api http-types scotty stm
         text time transformers unordered-containers wai
       ];
       homepage = "https://github.com/agrafix/scotty-session";
       description = "Adding session functionality to scotty";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scotty-tls" = callPackage
    ({ mkDerivation, scotty, transformers, wai, warp, warp-tls }:
     mkDerivation {
       pname = "scotty-tls";
       version = "0.3.0.0";
       sha256 = "11zpbqrfmjyl8kck1za0pvf1b1gn0ih3an8vq85si22414bs5j23";
       buildDepends = [ scotty transformers wai warp warp-tls ];
       homepage = "https://github.com/dmjio/scotty-tls.git";
       description = "TLS for Scotty";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scp-streams" = callPackage
    ({ mkDerivation, attoparsec, cmdargs, io-streams, SHA, sha-streams
     }:
     mkDerivation {
       pname = "scp-streams";
       version = "0.1.0";
       sha256 = "1wi860cl9dsq6hfhyas3dk0gcjyd8hx62k3fjwgr5x56ps5fp6ry";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec cmdargs io-streams SHA sha-streams ];
       testDepends = [ io-streams ];
       homepage = "https://github.com/noteed/scp-streams";
       description = "An SCP protocol implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scrabble-bot" = callPackage
    ({ mkDerivation, binary, deepseq, mtl, packed-dawg, parallel, split
     }:
     mkDerivation {
       pname = "scrabble-bot";
       version = "0.1.0.0";
       sha256 = "035jpwp58l70jd0dklx5rg0sm8b2bd5r1m726dbhhlv60w6bdfn3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary deepseq mtl packed-dawg parallel split ];
       description = "Scrabble play generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scrobble" = callPackage
    ({ mkDerivation, curl, MissingH, network, network-uri, pureMD5
     , time, url
     }:
     mkDerivation {
       pname = "scrobble";
       version = "0.2.1.1";
       sha256 = "161l75bni4fxmh35dfz8r2vgllmmf0s55j9y2xpyskqfj3xc85a7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         curl MissingH network network-uri pureMD5 time url
       ];
       description = "Scrobbling server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scrypt" = callPackage
    ({ mkDerivation, base64-bytestring, entropy, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "scrypt";
       version = "0.5.0";
       sha256 = "1cnrjdq1ncv224dlk236a7w29na8r019d2acrsxlsaiy74iadh1y";
       buildDepends = [ base64-bytestring entropy ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/informatikr/scrypt";
       description = "Stronger password hashing via sequential memory-hard functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "scrz" = callPackage
    ({ mkDerivation, aeson, base16-bytestring, conduit, cryptohash
     , filepath, friendly-time, hashable, http-conduit, http-types
     , MonadRandom, mtl, network, random, stm, text, time
     }:
     mkDerivation {
       pname = "scrz";
       version = "0.0.0.1";
       sha256 = "1j5mvvrk1647qfqdl4q6ywnx7l9bgnqp6rsjr1l8bynikfm0ghcg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson base16-bytestring conduit cryptohash filepath friendly-time
         hashable http-conduit http-types MonadRandom mtl network random stm
         text time
       ];
       homepage = "http://github.com/wereHamster/scrz";
       description = "Process management and supervision daemon";
       license = "unknown";
     }) {};

  "scyther-proof" = callPackage
    ({ mkDerivation, cmdargs, filepath, json, mtl, parsec, safe
     , tagsoup, time, uniplate
     }:
     mkDerivation {
       pname = "scyther-proof";
       version = "0.8.0.0";
       sha256 = "1amfa1z6lzgcq7c2qijvrb7i6cyjx5cqvz4yqfxi680m674zn0gz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs filepath json mtl parsec safe tagsoup time uniplate
       ];
       description = "Automatic generation of Isabelle/HOL correctness proofs for security protocols";
       license = "GPL";
     }) {};

  "sde-solver" = callPackage
    ({ mkDerivation, cereal, cereal-vector, haskell-mpi
     , mersenne-random-pure64, mtl, mwc-random, normaldistribution
     , parallel, vector
     }:
     mkDerivation {
       pname = "sde-solver";
       version = "0.1.0.0";
       sha256 = "0sp12fcf1h4qs0l5iblf3kl6nv1sb4ff49p2ybmrx7jifiwqxma6";
       buildDepends = [
         cereal cereal-vector haskell-mpi mersenne-random-pure64 mtl
         mwc-random normaldistribution parallel vector
       ];
       homepage = "https://github.com/davnils/sde-solver";
       description = "Distributed SDE solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sdl2" = callPackage
    ({ mkDerivation, SDL2, transformers }:
     mkDerivation {
       pname = "sdl2";
       version = "1.3.0";
       sha256 = "0fi9kjf12qlp64r2pxwc1k9241s23j6xm0dmwdsc18y8f6acvqxa";
       buildDepends = [ transformers ];
       extraLibraries = [ SDL2 ];
       pkgconfigDepends = [ SDL2 ];
       description = "Low-level bindings to SDL2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sdl2-image" = callPackage
    ({ mkDerivation, sdl2, SDL2, SDL2_image }:
     mkDerivation {
       pname = "sdl2-image";
       version = "0.1.1.0";
       sha256 = "1rxkb4fl3350vxzwvsj25a1m8s7s179anaal33kq3q3kn0jfa72i";
       buildDepends = [ sdl2 ];
       extraLibraries = [ SDL2 ];
       pkgconfigDepends = [ SDL2 SDL2_image ];
       description = "Haskell binding to sdl2-image";
       license = stdenv.lib.licenses.mit;
     }) {};

  "seacat" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, ConfigFile
     , data-default, filepath, http-types, mime-types, MissingH
     , monad-control, mtl, network, persistent, persistent-postgresql
     , persistent-sqlite, persistent-template, text, time, transformers
     , wai, wai-extra, wai-middleware-static, warp, web-routes
     , web-routes-wai
     }:
     mkDerivation {
       pname = "seacat";
       version = "1.0.0.3";
       sha256 = "0iyl7mp0vpxy4kqr7qqqz642zxpla3ydlbdzmw4ipjmg5gwjr7pm";
       buildDepends = [
         blaze-builder blaze-html ConfigFile data-default filepath
         http-types mime-types MissingH monad-control mtl network persistent
         persistent-postgresql persistent-sqlite persistent-template text
         time transformers wai wai-extra wai-middleware-static warp
         web-routes web-routes-wai
       ];
       homepage = "https://github.com/Barrucadu/lambdadelta";
       description = "Small web framework using Warp and WAI";
       license = "unknown";
     }) {};

  "seal-module" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "seal-module";
       version = "0.1.0.1";
       sha256 = "0x2m280qbfaswr2gk26d26dwg2s3v1nk4n93zh2fh1ikpkw13dfq";
       description = "Template Haskell support for global configuration data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "search" = callPackage
    ({ mkDerivation, doctest, filepath, profunctors, semigroupoids
     , tagged, transformers
     }:
     mkDerivation {
       pname = "search";
       version = "0.1";
       sha256 = "1d996dkirvv22kkli5vpaxy2ismyiwd4jyzfvbxyqc79lqanf2gh";
       buildDepends = [ profunctors semigroupoids tagged transformers ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/search/";
       description = "Infinite search in finite time with Hilbert's epsilon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sec" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sec";
       version = "0.0.1";
       sha256 = "1ryl0nm1a37r606xhxy6ykf3c8c1gml6gdqna428w8y3a2vg5q2v";
       homepage = "http://github.com/urso/sec";
       description = "Semantic Editor Combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "secdh" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "secdh";
       version = "0.2";
       sha256 = "0qrb2g7dfhh2m3hwp39xlimbc3kinww279a58pah738gqnhmayrs";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/pgavin/secdh";
       description = "SECDH Machine Simulator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "seclib" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "seclib";
       version = "1.1.0.2";
       sha256 = "0jbgdd3mh126c3n0sblvd7rbcnnzrfyfajrj9xcsj7zi7jqvs8nw";
       description = "A simple library for static information-flow security in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "secret-santa" = callPackage
    ({ mkDerivation, diagrams-cairo, diagrams-lib, haskell-qrencode
     , random
     }:
     mkDerivation {
       pname = "secret-santa";
       version = "0.1.0.0";
       sha256 = "0qrc1jk2hhhhq0cq9h9g8pc2frjsb1m96h6sdj79m7km5dc2slm8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         diagrams-cairo diagrams-lib haskell-qrencode random
       ];
       homepage = "https://github.com/rodrigosetti/secret-santa";
       description = "Secret Santa game assigner using QR-Codes";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "secret-sharing" = callPackage
    ({ mkDerivation, binary, dice-entropy-conduit, finite-field
     , polynomial, QuickCheck, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "secret-sharing";
       version = "1.0.0.3";
       sha256 = "0q315gmfnhpzgi4r0p3li8vvrdl2a0xgh0gxdin6s3nkh6hjpbv2";
       buildDepends = [
         binary dice-entropy-conduit finite-field polynomial vector
       ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://monoid.at/code";
       description = "Information-theoretic secure secret sharing";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "secrm" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "secrm";
       version = "0.0";
       sha256 = "0hcf8mxl1br27764ha0gdf7jdl7zlxknbspqijw0jr6ws7hshxg9";
       isLibrary = false;
       isExecutable = true;
       description = "Example of writing \"secure\" file removal in Haskell rather than C";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "secure-sockets" = callPackage
    ({ mkDerivation, HsOpenSSL, network, transformers }:
     mkDerivation {
       pname = "secure-sockets";
       version = "1.2.9.2";
       sha256 = "0ijizi76fzqamynwhyd3ppzy90bfvypmzbjr0v63ng2w0mwnrjlz";
       buildDepends = [ HsOpenSSL network transformers ];
       homepage = "http://code.google.com/p/secure-hs/";
       description = "Secure point-to-point connectivity library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "securemem" = callPackage
    ({ mkDerivation, byteable }:
     mkDerivation {
       pname = "securemem";
       version = "0.1.4";
       sha256 = "1wdbcnyaarrixfvz79mcyqmfnn9h5zsmrrsa64xj8650ppyaxi48";
       buildDepends = [ byteable ];
       homepage = "http://github.com/vincenthz/hs-securemem";
       description = "abstraction to an auto scrubbing and const time eq, memory chunk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sednaDBXML" = callPackage
    ({ mkDerivation, bindings-DSL, iteratee, mtl, sedna, text }:
     mkDerivation {
       pname = "sednaDBXML";
       version = "0.1.2.5";
       sha256 = "068yl4z0wb5kr7a7c7haah3z391mjqdzgxh5rg68rrjgvf7dczky";
       buildDepends = [ bindings-DSL iteratee mtl text ];
       extraLibraries = [ sedna ];
       description = "Sedna C API XML Binding";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "select" = callPackage
    ({ mkDerivation, rt }:
     mkDerivation {
       pname = "select";
       version = "0.4.0.1";
       sha256 = "180cj5m0bap1lb19s68icpn1dvk2s395cmlcc6dnwz3mpbj5alj0";
       extraLibraries = [ rt ];
       homepage = "http://nonempty.org/software/haskell-select";
       description = "Wrap the select(2) POSIX function";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "selectors" = callPackage
    ({ mkDerivation, alex, happy, text, xml-conduit }:
     mkDerivation {
       pname = "selectors";
       version = "0.0.3.0";
       sha256 = "1chs2d1j58y4r01231hh50gr4h0wnwsg9mardzq8ybqc6z6l32pr";
       buildDepends = [ text xml-conduit ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/rcallahan/selectors";
       description = "CSS Selectors for DOM traversal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "selenium" = callPackage
    ({ mkDerivation, HTTP, HUnit, mtl, network }:
     mkDerivation {
       pname = "selenium";
       version = "0.2.5";
       sha256 = "0vr3d891pj947lv2grgbc83nm828gz9bbz6dp8mnf9bsji3ih7l7";
       buildDepends = [ HTTP HUnit mtl network ];
       description = "Test web applications through a browser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "selenium-server" = callPackage
    ({ mkDerivation, conduit, filepath, hspec, http-conduit
     , http-conduit-downloader, network, random, regex-tdfa, text
     , utf8-string, webdriver
     }:
     mkDerivation {
       pname = "selenium-server";
       version = "0.1.0.0";
       sha256 = "13bqzhia3z35174hzf2ipl4ga62mcvh7whvhwj5b8rsazgi259qf";
       buildDepends = [
         conduit filepath http-conduit http-conduit-downloader network
         random regex-tdfa utf8-string
       ];
       testDepends = [ hspec text webdriver ];
       homepage = "https://github.com/joelteon/selenium-server.git";
       description = "Run the selenium standalone server for usage with webdriver";
       license = stdenv.lib.licenses.mit;
     }) {};

  "selfrestart" = callPackage
    ({ mkDerivation, executable-path }:
     mkDerivation {
       pname = "selfrestart";
       version = "0.1.0";
       sha256 = "100a427r8xjfv7fsh7khj3db9klqwnalfy33w23khxqp7k1bkq3n";
       buildDepends = [ executable-path ];
       homepage = "https://github.com/nh2/selfrestart";
       description = "Restarts the current executable (on binary change)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "selinux" = callPackage
    ({ mkDerivation, selinux }:
     mkDerivation {
       pname = "selinux";
       version = "0.1.1";
       sha256 = "1r0lwah32y3cza5jnihzwkl4wdk23qh7sgw6yzcajq7rjnzrf8qw";
       extraLibraries = [ selinux ];
       homepage = "https://github.com/luite/selinux";
       description = "SELinux bindings";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) selinux; };

  "semaphore-plus" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "semaphore-plus";
       version = "0.1";
       sha256 = "1349pzjs91xayx4dib520037mmgh4lvyc0wjx8h8yf492dvfbdkr";
       description = "Various concurrency abstractions built on top of semaphores";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semi-iso" = callPackage
    ({ mkDerivation, lens, profunctors, semigroupoids, transformers
     , tuple-morph
     }:
     mkDerivation {
       pname = "semi-iso";
       version = "1.0.0.0";
       sha256 = "09hcg6hkyd4bnk0586gk4dzc76g64sx37jg0pz3jq87lrq8dzm5g";
       buildDepends = [
         lens profunctors semigroupoids transformers tuple-morph
       ];
       description = "Weakened partial isomorphisms, reversible computations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "semigroupoid-extras" = callPackage
    ({ mkDerivation, semigroupoids }:
     mkDerivation {
       pname = "semigroupoid-extras";
       version = "4.0";
       sha256 = "07aa7z4nywcrp9msq83b1pcmryl25yxha89sn5vwlgq40cibcm3g";
       buildDepends = [ semigroupoids ];
       homepage = "http://github.com/ekmett/semigroupoid-extras";
       description = "This package has been absorbed into semigroupoids 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semigroupoids" = callPackage
    ({ mkDerivation, comonad, contravariant, distributive, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "semigroupoids";
       version = "4.2";
       sha256 = "18zip518f2l2ccmg3hjzy5mq2b8r98crzm10kr77yc4m64w5vac8";
       buildDepends = [
         comonad contravariant distributive semigroups transformers
       ];
       homepage = "http://github.com/ekmett/semigroupoids";
       description = "Semigroupoids: Category sans id";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semigroupoids-syntax" = callPackage
    ({ mkDerivation, comonad, contravariant, distributive, doctest
     , filepath, QuickCheck, semigroupoids, semigroups, transformers
     }:
     mkDerivation {
       pname = "semigroupoids-syntax";
       version = "0.0.1";
       sha256 = "1r3byywgbcn82dq9xw4k9m5lgmhsgj02rxwmkrp4jwrjaax8v4zh";
       buildDepends = [
         comonad contravariant distributive semigroupoids semigroups
         transformers
       ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/NICTA/semigroupoids-syntax";
       description = "RebindableSyntax using the semigroupoids package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semigroups" = callPackage
    ({ mkDerivation, deepseq, hashable, nats, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "semigroups";
       version = "0.16";
       sha256 = "0mq5c6py0z3jaxr1j0aalz4vjd1v6ygffv91h7nh5621rcv4ga4s";
       buildDepends = [ deepseq hashable nats text unordered-containers ];
       homepage = "http://github.com/ekmett/semigroups/";
       description = "Anything that associates";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semigroups-actions" = callPackage
    ({ mkDerivation, semigroups }:
     mkDerivation {
       pname = "semigroups-actions";
       version = "0.1";
       sha256 = "0vns2vdchszw34i12s9rfl4cm76ympfrivpb397j2vzg2i7bghqb";
       buildDepends = [ semigroups ];
       homepage = "http://github.com/ppetr/semigroups-actions/";
       description = "Semigroups actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semiring" = callPackage
    ({ mkDerivation, Boolean, HUnit, monoids, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "semiring";
       version = "0.3";
       sha256 = "1b56y5a45fha07rbqqjl6f5i2bw9pji97pagyjcn9bprzqfbiymy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Boolean HUnit monoids QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/srush/SemiRings/tree/master";
       description = "Semirings, ring-like structures used for dynamic programming applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semiring-simple" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "semiring-simple";
       version = "0.2.1.0";
       sha256 = "074wp8bn6jhx8jjp78dzjpy9bdwc2i1a1sp6qkqj689zvrhwfman";
       description = "A module for dealing with semirings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "semver" = callPackage
    ({ mkDerivation, attoparsec, deepseq, tasty, tasty-hunit, text }:
     mkDerivation {
       pname = "semver";
       version = "0.3.1";
       sha256 = "0vakqqdhjn7a049k1sx86ah5x85c005hrxri2xl9qcd690bvrs6f";
       buildDepends = [ attoparsec deepseq text ];
       testDepends = [ tasty tasty-hunit text ];
       homepage = "https://github.com/brendanhay/semver";
       description = "Representation, manipulation, and de/serialisation of Semantic Versions";
       license = "unknown";
     }) {};

  "sendfile" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "sendfile";
       version = "0.7.9";
       sha256 = "0hnw1ym81cff49dwww19kgbs4s0kpandbvn6h5cml3y0p1nxybqh";
       buildDepends = [ network ];
       homepage = "http://hub.darcs.net/stepcut/sendfile";
       description = "A portable sendfile library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sensenet" = callPackage
    ({ mkDerivation, aeson, stm, zeromq3-haskell }:
     mkDerivation {
       pname = "sensenet";
       version = "0.1.0.0";
       sha256 = "1yzh1ngfddybxwqybvdg7l5lgg85kmhqhdl3mzsnndvz2labphp1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ aeson stm zeromq3-haskell ];
       homepage = "https://github.com/rossdylan/sensenet";
       description = "Distributed sensor network for the raspberry pi";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sentry" = callPackage
    ({ mkDerivation, ansi-terminal, cereal, cmdargs, filepath, safecopy
     , time
     }:
     mkDerivation {
       pname = "sentry";
       version = "0.1.0";
       sha256 = "1kv4ldms739x4b2fbs6hjwy8bssrwv0kavn4jqdc2svzlfqxqsqx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cereal cmdargs filepath safecopy time
       ];
       homepage = "https://github.com/noteed/sentry";
       description = "Process monitoring tool written and configured in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "senza" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "senza";
       version = "0.1";
       sha256 = "0pl7dcs9w4dzzajlfnkrjl5kgsx8zdzzl5hvikh9v9djsmw2290h";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "separated" = callPackage
    ({ mkDerivation, bifunctors, doctest, filepath, lens, QuickCheck
     , semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "separated";
       version = "0.1.0";
       sha256 = "18kb9c6l0ikhzy3kiw4pg5b7vcm42hhbkp693qyygpr74hzpi2h2";
       buildDepends = [ bifunctors lens semigroupoids semigroups ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/separated";
       description = "A data type with elements separated by values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "seqloc" = callPackage
    ({ mkDerivation, attoparsec, biocore, hashable, QuickCheck, random
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "seqloc";
       version = "0.6";
       sha256 = "11b2c2xl6n993wqci52li0wfr0wkjsw916cni1v59z2fq4kp6027";
       buildDepends = [
         attoparsec biocore hashable unordered-containers vector
       ];
       testDepends = [
         attoparsec biocore hashable QuickCheck random unordered-containers
         vector
       ];
       homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
       description = "Handle sequence locations for bioinformatics";
       license = stdenv.lib.licenses.mit;
     }) {};

  "seqloc-datafiles" = callPackage
    ({ mkDerivation, attoparsec, biocore, cmdtheline, conduit
     , conduit-extra, filepath, hashable, iteratee, lifted-base
     , monads-tf, QuickCheck, random, resourcet, seqloc, transformers
     , transformers-base, unordered-containers, vector
     }:
     mkDerivation {
       pname = "seqloc-datafiles";
       version = "0.4";
       sha256 = "0bmgg41123c1rhq6d1vq8x6ci435smaancm8gcg9iirhxi5wwvp5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec biocore cmdtheline conduit conduit-extra filepath
         hashable iteratee lifted-base monads-tf QuickCheck random resourcet
         seqloc transformers transformers-base unordered-containers vector
       ];
       homepage = "http://www.ingolia-lab.org/seqloc-datafiles-tutorial.html";
       description = "Read and write BED and GTF format genome annotations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sequent-core" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sequent-core";
       version = "0.1.0.0";
       sha256 = "0mikfqsji08i3lmi30v3iljisvi6cp5n5xhq9cppa1ji4q8sx5la";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/lukemaurer/sequent-core";
       description = "Alternative Core language for GHC plugins";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sequential-index" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sequential-index";
       version = "0.2.0.1";
       sha256 = "0vd7nrkx59vsxrhpb46kgzbvz7v830wh5zx3vg9494wvski983y6";
       homepage = "https://github.com/aristidb/sequential-index";
       description = "Sequential numbers that allow arbitrarily inserting numbers - for containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sequor" = callPackage
    ({ mkDerivation, binary, mtl, nlp-scores, split, text, vector }:
     mkDerivation {
       pname = "sequor";
       version = "0.7.2";
       sha256 = "1m41yk7bgazl9g30im8qvnvzjh4f4kvrd6jhk1wz2r31xxlxp7ms";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary mtl nlp-scores split text vector ];
       homepage = "https://bitbucket.org/gchrupala/sequor";
       description = "A sequence labeler based on Collins's sequence perceptron";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "serf" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, conduit, mtl
     , operational, resourcet, text
     }:
     mkDerivation {
       pname = "serf";
       version = "0.1.0.0";
       sha256 = "18ddr4pkr1zld49x6k3lcbrv9916s9r1mxfsi9nfrv7lbvrjmj3v";
       buildDepends = [
         attoparsec attoparsec-conduit conduit mtl operational resourcet
         text
       ];
       homepage = "http://github.com/sanetracker/serf";
       description = "Interact with Serf via Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "serial" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "serial";
       version = "0.2.6";
       sha256 = "17z0pkc0nz3hf9s68spbb6ijcx6b2dw4y50cavf5110aav59kik1";
       description = "POSIX serial port wrapper";
       license = "LGPL";
     }) {};

  "serial-test-generators" = callPackage
    ({ mkDerivation, aeson, binary, cereal, hspec, QuickCheck
     , system-fileio, transformers
     }:
     mkDerivation {
       pname = "serial-test-generators";
       version = "0.1.2";
       sha256 = "0ik7ndrcrjhlw1k73x3vha37bxl6g4wbxn7vf08bslnwqfrksl4d";
       buildDepends = [ aeson binary cereal ];
       testDepends = [
         aeson binary cereal hspec QuickCheck system-fileio transformers
       ];
       description = "Test your 'Aeson' 'Serialize' and 'Binary' instances for stability over time";
       license = stdenv.lib.licenses.mit;
     }) {};

  "serialport" = callPackage
    ({ mkDerivation, HUnit }:
     mkDerivation {
       pname = "serialport";
       version = "0.4.7";
       sha256 = "1z2drw7ighyws72wqms015n5hy0zxbrphdca7ldn34pz28122z07";
       testDepends = [ HUnit ];
       homepage = "https://github.com/jputcu/serialport";
       description = "Cross platform serial port library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant" = callPackage
    ({ mkDerivation, hspec, parsec, QuickCheck, string-conversions
     , text
     }:
     mkDerivation {
       pname = "servant";
       version = "0.2.1";
       sha256 = "1i7yvxvil65lp1gizh99dn4gj1r7vcqslq1w7sqykj88y9h22p3x";
       buildDepends = [ parsec string-conversions text ];
       testDepends = [ hspec parsec QuickCheck string-conversions text ];
       homepage = "http://haskell-servant.github.io/";
       description = "A family of combinators for defining webservices APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-client" = callPackage
    ({ mkDerivation, aeson, attoparsec, deepseq, either, exceptions
     , hspec, http-client, http-types, network, network-uri, QuickCheck
     , safe, servant, servant-server, string-conversions, text
     , transformers, wai, warp
     }:
     mkDerivation {
       pname = "servant-client";
       version = "0.2.1";
       sha256 = "1mwmca96sld3s6n4hxq3zl9pjw24halwa061awjb23kc49cmp4pn";
       buildDepends = [
         aeson attoparsec either exceptions http-client http-types
         network-uri safe servant string-conversions text transformers
       ];
       testDepends = [
         aeson deepseq either hspec http-types network QuickCheck servant
         servant-server wai warp
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "automatical derivation of querying functions for servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-docs" = callPackage
    ({ mkDerivation, aeson, hashable, lens, servant, string-conversions
     , system-filepath, text, unordered-containers
     }:
     mkDerivation {
       pname = "servant-docs";
       version = "0.2.1";
       sha256 = "1wchqdpfrc3hxc629ij6rbpr29dzc0flpc7z8phykpmf59106pcv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson hashable lens servant string-conversions system-filepath text
         unordered-containers
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "generate API docs for your servant webservice";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-jquery" = callPackage
    ({ mkDerivation, aeson, filepath, lens, servant, servant-server
     , stm, transformers, warp
     }:
     mkDerivation {
       pname = "servant-jquery";
       version = "0.2.1";
       sha256 = "1wyfnkzb44m08icfjvdbn1m0b0a1ydsznp1czfdnmq2818rrip8v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson filepath lens servant servant-server stm transformers warp
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "Automatically derive jquery-based javascript functions to query servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-pool" = callPackage
    ({ mkDerivation, resource-pool, servant, time }:
     mkDerivation {
       pname = "servant-pool";
       version = "0.1";
       sha256 = "0if4lxb0fpdd4lnkz9j7z6vhjbrcc80pvz9jb6sdb9p6sbbgqf69";
       buildDepends = [ resource-pool servant time ];
       homepage = "http://github.com/zalora/servant-pool";
       description = "Utility functions for creating servant 'Context's with \"context/connection pooling\" support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-postgresql" = callPackage
    ({ mkDerivation, postgresql-simple, servant, servant-pool
     , servant-response
     }:
     mkDerivation {
       pname = "servant-postgresql";
       version = "0.1";
       sha256 = "1svy1v6sl5pq0zs8ms4qf7wn6zar63bqmfiyfqgz84ryli0wxrhj";
       buildDepends = [
         postgresql-simple servant servant-pool servant-response
       ];
       homepage = "http://github.com/zalora/servant-postgresql";
       description = "Useful functions and instances for using servant with a PostgreSQL context";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-response" = callPackage
    ({ mkDerivation, aeson, http-types, text }:
     mkDerivation {
       pname = "servant-response";
       version = "0.1";
       sha256 = "0vgzi6nm3f1vjbnvhzcr6v2fh75fsl18wsps54ya0mbmfn2v6chy";
       buildDepends = [ aeson http-types text ];
       homepage = "http://github.com/zalora/servant";
       description = "Machinery to express how servant should turn results of database operations into proper JSON-encodable response types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-scotty" = callPackage
    ({ mkDerivation, aeson, http-types, scotty, servant
     , servant-response, text, transformers
     }:
     mkDerivation {
       pname = "servant-scotty";
       version = "0.1.1";
       sha256 = "0d3yc7aa2p1izizqnj81iscj9hbgbkpyav1ncmxzkr48svr6h783";
       buildDepends = [
         aeson http-types scotty servant servant-response text transformers
       ];
       homepage = "http://github.com/zalora/servant";
       description = "Generate a web service for servant 'Resource's using scotty and JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servant-server" = callPackage
    ({ mkDerivation, aeson, attoparsec, either, exceptions, hspec
     , hspec-wai, http-types, network, network-uri, parsec, QuickCheck
     , safe, servant, split, string-conversions, system-filepath
     , temporary, text, transformers, wai, wai-app-static, wai-extra
     , warp
     }:
     mkDerivation {
       pname = "servant-server";
       version = "0.2.1";
       sha256 = "1b2aqxnn9nf5qabbl8k9kq9b2mpn591j9jpjy33sis7ni469bayj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec either http-types network-uri safe servant split
         string-conversions system-filepath text transformers wai
         wai-app-static warp
       ];
       testDepends = [
         aeson either exceptions hspec hspec-wai http-types network parsec
         QuickCheck servant string-conversions temporary text transformers
         wai wai-extra warp
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "A family of combinators for defining webservices APIs and serving them";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "servius" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, cmdargs, hamlet
     , http-types, mime-types, shakespeare-css, text, transformers, wai
     , wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "servius";
       version = "1.1.1.2";
       sha256 = "02c570ghvrp0qw2s6k30548k619424p77bpi1mfh02yrv1a45jdk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-html cmdargs hamlet http-types mime-types
         shakespeare-css text transformers wai wai-app-static wai-extra warp
       ];
       homepage = "http://github.com/yesodweb/hamlet";
       description = "Serve Shakespearean templates via Warp (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "ses-html" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-html, byteable
     , cryptohash, HsOpenSSL, http-streams, tagsoup, time
     }:
     mkDerivation {
       pname = "ses-html";
       version = "0.2.0.2";
       sha256 = "0dfrhsn6scwid7ycnq4j21nkq64s59hkc05ygcg4qsf7vcizgs0d";
       buildDepends = [
         base64-bytestring blaze-html byteable cryptohash HsOpenSSL
         http-streams tagsoup time
       ];
       description = "Send HTML formatted emails using Amazon's SES REST API with blaze";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ses-html-snaplet" = callPackage
    ({ mkDerivation, blaze-html, configurator, ses-html, snap, text
     , transformers
     }:
     mkDerivation {
       pname = "ses-html-snaplet";
       version = "0.1.0.0";
       sha256 = "1lrr321gk7djyzv9yb7x967d53azxflh4jkf9zlkpxh3p7rz6793";
       buildDepends = [
         blaze-html configurator ses-html snap text transformers
       ];
       description = "Snaplet for the ses-html package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sessions" = callPackage
    ({ mkDerivation, binary, mtl, network }:
     mkDerivation {
       pname = "sessions";
       version = "2008.7.18";
       sha256 = "0zijfbakj3fh052b8nvaddg1xy87ysfbm3qnibisam93lx0agp2s";
       buildDepends = [ binary mtl network ];
       homepage = "http://www.wellquite.org/sessions/";
       description = "Session Types for Haskell";
       license = "GPL";
     }) {};

  "set-cover" = callPackage
    ({ mkDerivation, utility-ht }:
     mkDerivation {
       pname = "set-cover";
       version = "0.0.4";
       sha256 = "0323l2jnk5caa3wsxqxgsdkvnfs9llb4yh13c0rx55q0is8a203j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ utility-ht ];
       homepage = "http://code.haskell.org/~thielema/set-cover/";
       description = "Solve exact set cover problems like Sudoku, 8 Queens, Soma Cube, Tetris Cube";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "set-extra" = callPackage
    ({ mkDerivation, mtl, syb }:
     mkDerivation {
       pname = "set-extra";
       version = "1.3.1";
       sha256 = "1qmlkkb1f1vhazf7kglh30bsvq14fg4kafm5w9xhf4bnd07gzzfh";
       buildDepends = [ mtl syb ];
       homepage = "http://src.seereason.com/set-extra";
       description = "Functions that could be added to Data.Set.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "set-monad" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "set-monad";
       version = "0.1.0.0";
       sha256 = "1gyzsdxl7fh99ghkb34mwm93kvfmjj5a15ws4gbshvdz6hxz3kd5";
       buildDepends = [ deepseq ];
       description = "Set monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "setenv" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "setenv";
       version = "0.1.1.1";
       sha256 = "0azkvsvk9i1979rn45zryqyirvjhj9b32nnz1m30aasbs2q8f393";
       description = "A cross-platform library for setting environment variables";
       license = stdenv.lib.licenses.mit;
     }) {};

  "setlocale" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "setlocale";
       version = "1.0.0.1";
       sha256 = "15dzf4hgkn5saz6qyn1xqvinvy0y571crfxfwycmcmm4az6rsqk0";
       description = "Haskell bindings to setlocale";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "setops" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "setops";
       version = "0.1.2";
       sha256 = "1mja48p8g9prfk53218qbv83ks6rs63s0n6jad0jgrj1221afpvg";
       description = "Uniform names (and Unicode operators) for set operations on data structures";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "setters" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "setters";
       version = "0.1";
       sha256 = "0rw9m9f7cqi0kvjcq81b7qrn3v672d4w0ch1k377m1151vg20a2z";
       buildDepends = [ mtl ];
       description = "Small (TH) library to declare setters for typical `record' data type fields";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sexp" = callPackage
    ({ mkDerivation, attoparsec, cmdargs, dlist, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "sexp";
       version = "0.7";
       sha256 = "19blk6nzbsm9syx45zzlmqxq1mi2prv0jq12cf83b4kf4pvwk32n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec cmdargs dlist mtl vector ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/scvalex/sexp";
       description = "S-Expression parsing/printing made fun and easy";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "sexp-show" = callPackage
    ({ mkDerivation, pretty-show }:
     mkDerivation {
       pname = "sexp-show";
       version = "0.1.1.0";
       sha256 = "1ip1y1y2z2d6ib3ihq18j93081cp2lkwjm27bc0d0ihixd154gy5";
       editedCabalFile = "0k0m584vg3wlvan140fgha3la91kq8ga7yl5shbpar9cajj0akri";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ pretty-show ];
       description = "Produce a s-expression representation of Show values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sexpr" = callPackage
    ({ mkDerivation, base64-string, binary, QuickCheck, random }:
     mkDerivation {
       pname = "sexpr";
       version = "0.2.1";
       sha256 = "1ffs5r065zkipsa3y4v14if45fqjbzgksj3r40qci453kc3xq93p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ base64-string binary QuickCheck random ];
       description = "S-expression printer and parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sext" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "sext";
       version = "0.1.0.0";
       sha256 = "0vq7fbm8gm7fym9qjaxsy2mk89rn2pjfkbhv3ym94xslcybwrwpy";
       buildDepends = [ text ];
       homepage = "http://github.com/dzhus/sext/";
       description = "Lists, Texts and ByteStrings with type-encoded length";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sfml-audio" = callPackage
    ({ mkDerivation, libsndfile, openal }:
     mkDerivation {
       pname = "sfml-audio";
       version = "0.7.1.1816";
       sha256 = "057z0z2xbls1p43k0kixbw26v0pv6lsvfh5ycjx37r8xw8ks31ba";
       extraLibraries = [ libsndfile openal ];
       homepage = "http://patch-tag.com/r/shahn/sfml-audio";
       description = "minimal bindings to the audio module of sfml";
       license = "unknown";
     }) {};

  "sfmt" = callPackage
    ({ mkDerivation, entropy, primitive }:
     mkDerivation {
       pname = "sfmt";
       version = "0.1.0";
       sha256 = "1amfcnh3jrb54zpl6vrdmngqvmjiczzinhq3r9gx9hb1r635v04x";
       buildDepends = [ entropy primitive ];
       homepage = "https://github.com/philopon/sfmt-hs";
       description = "SIMD-oriented Fast Mersenne Twister(SFMT) binding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sgd" = callPackage
    ({ mkDerivation, binary, deepseq, filepath, lazy-io, logfloat
     , monad-par, mtl, primitive, random, temporary, vector
     }:
     mkDerivation {
       pname = "sgd";
       version = "0.3.7";
       sha256 = "1z4w81mbk2syrxacfrjb690ik6lcsh1fb7m3d65zlz37y3pk5q04";
       buildDepends = [
         binary deepseq filepath lazy-io logfloat monad-par mtl primitive
         random temporary vector
       ];
       homepage = "https://github.com/kawu/sgd";
       description = "Stochastic gradient descent";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sgf" = callPackage
    ({ mkDerivation, encoding, extensible-exceptions, mtl, parsec
     , split, time, transformers
     }:
     mkDerivation {
       pname = "sgf";
       version = "0.1.3.1";
       sha256 = "1bwfphbbkkwi2q8l0916yvpl58j7fb0nr144w582vpsq3wfvgiwc";
       buildDepends = [
         encoding extensible-exceptions mtl parsec split time transformers
       ];
       homepage = "https://github.com/tonicebrian/sgf";
       description = "SGF (Smart Game Format) parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sgrep" = callPackage
    ({ mkDerivation, bio, regex-compat }:
     mkDerivation {
       pname = "sgrep";
       version = "0.0";
       sha256 = "0ai9j735wj5lclixwlki5g2s50g2mscglfrir2q7bj0lwg76dygi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio regex-compat ];
       homepage = "http://blog.malde.org/";
       description = "Sgrep - grep Fasta files for sequences matching a regular expression";
       license = "GPL";
     }) {};

  "sha-streams" = callPackage
    ({ mkDerivation, binary, io-streams, SHA }:
     mkDerivation {
       pname = "sha-streams";
       version = "0.1.1";
       sha256 = "1qasdpm244dr7zh3hnr51jbp1b8qnrwbxvm3nnrbaf7bah1y4d2i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary io-streams SHA ];
       homepage = "https://github.com/noteed/sha-streams";
       description = "SHA hashes for io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shadower" = callPackage
    ({ mkDerivation, doctest, filemanip, fsnotify, MissingH, mtl, safe
     , system-filepath, text
     }:
     mkDerivation {
       pname = "shadower";
       version = "0.1.0.6";
       sha256 = "1m0zxnmxn536jnaj5l4qpj5k7xshffsbca0cl53y3dnb6ssq9fni";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         doctest filemanip fsnotify MissingH mtl safe system-filepath text
       ];
       testDepends = [
         doctest filemanip fsnotify MissingH mtl safe system-filepath text
       ];
       homepage = "http://github.com/karun012/shadower";
       description = "An automated way to run doctests in files that are changing";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "shadowsocks" = callPackage
    ({ mkDerivation, aeson, binary, cryptohash, HsOpenSSL, HUnit
     , network, optparse-applicative, unordered-containers
     }:
     mkDerivation {
       pname = "shadowsocks";
       version = "1.20141007";
       sha256 = "1630lfspy8fnsi9j2np9sygdng59bxx1q54kcr7cx7rgq434s5ys";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson binary cryptohash HsOpenSSL network optparse-applicative
         unordered-containers
       ];
       testDepends = [ binary cryptohash HUnit ];
       homepage = "https://github.com/rnons/shadowsocks-haskell";
       description = "A fast tunnel proxy that help you get through firewalls";
       license = stdenv.lib.licenses.mit;
     }) {};

  "shady-gen" = callPackage
    ({ mkDerivation, applicative-numbers, Boolean, data-treify
     , MemoTrie, mtl, ty, TypeCompose, vector-space, wl-pprint
     }:
     mkDerivation {
       pname = "shady-gen";
       version = "0.5.1";
       sha256 = "1vsk0ah6ngcgn5i6xda9j400xan1y843v25hc4lqcql37mg3ifn8";
       buildDepends = [
         applicative-numbers Boolean data-treify MemoTrie mtl ty TypeCompose
         vector-space wl-pprint
       ];
       homepage = "http://haskell.org/haskellwiki/shady";
       description = "Functional GPU programming - DSEL & compiler";
       license = "unknown";
     }) {};

  "shady-graphics" = callPackage
    ({ mkDerivation, applicative-numbers, Boolean, data-treify
     , MemoTrie, mtl, shady-gen, ty, TypeCompose, vector-space
     , wl-pprint
     }:
     mkDerivation {
       pname = "shady-graphics";
       version = "0.5.0";
       sha256 = "1wzlygmpjfys4ijyqh8ymv2f75swy9zd0g05gxpqhxkvlrw3jdk4";
       buildDepends = [
         applicative-numbers Boolean data-treify MemoTrie mtl shady-gen ty
         TypeCompose vector-space wl-pprint
       ];
       homepage = "http://haskell.org/haskellwiki/shady";
       description = "Functional GPU programming - DSEL & compiler";
       license = "unknown";
     }) {};

  "shake" = callPackage
    ({ mkDerivation, binary, deepseq, extra, filepath, hashable
     , js-flot, js-jquery, QuickCheck, random, time, transformers
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "shake";
       version = "0.14.2";
       sha256 = "0wb4rvnkw6gag1jffv9z2by7y8gifp58pnw3n7dyc01yglbys72m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary deepseq extra filepath hashable js-flot js-jquery random
         time transformers unordered-containers utf8-string
       ];
       testDepends = [
         binary deepseq extra filepath hashable js-flot js-jquery QuickCheck
         random time transformers unordered-containers utf8-string
       ];
       homepage = "http://www.shakebuild.com/";
       description = "Build system library, like Make, but more accurate dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shake-cabal-build" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "shake-cabal-build";
       version = "0.1.0";
       sha256 = "1ql2w164f2sfmbcqk2da00nihwfr6a85f99apx5dwpbkfbc53n8l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "https://github.com/samplecount/shake-cabal-build";
       description = "Utility for building Shake build systems using Cabal sandboxes";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "shake-extras" = callPackage
    ({ mkDerivation, cmdargs, filepath, shake }:
     mkDerivation {
       pname = "shake-extras";
       version = "0.1.1";
       sha256 = "0qqzdhd6q8hhix7lx4j1v4j37b8jnv710clilk2wxbyvz03rbblz";
       buildDepends = [ cmdargs filepath shake ];
       homepage = "http://thoughtpolice.github.com/shake-extras";
       description = "Extra utilities for shake build systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shake-language-c" = callPackage
    ({ mkDerivation, fclabels, shake, split, unordered-containers }:
     mkDerivation {
       pname = "shake-language-c";
       version = "0.5.0";
       sha256 = "1m3pyp7vdcdhsyr16kkanpc6rxqi7ydw5pp9ppsn903kiwd690yp";
       buildDepends = [ fclabels shake split unordered-containers ];
       homepage = "https://github.com/samplecount/shake-language-c";
       description = "Utilities for cross-compiling with Shake";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "shaker" = callPackage
    ({ mkDerivation, Cabal, filepath, ghc-paths, haskeline, haskell-src
     , HUnit, mtl, parsec3, QuickCheck, regex-posix, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "shaker";
       version = "0.5.1";
       sha256 = "1m4b7pvpr5mg6g5sc9xhnn7i9lx65vb3ass38zkyrfgksg65lwhf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath ghc-paths haskeline haskell-src HUnit mtl parsec3
         QuickCheck regex-posix test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/bonnefoa/Shaker";
       description = "simple and interactive command-line build tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shakespeare" = callPackage
    ({ mkDerivation, aeson, blaze-html, blaze-markup, exceptions, hspec
     , HUnit, parsec, system-fileio, system-filepath, text, time
     , transformers
     }:
     mkDerivation {
       pname = "shakespeare";
       version = "2.0.2.1";
       sha256 = "1s73nlkccfg3wl0qfx6f7q3afiakdhzh5xksnfhsg5hjhx80qhza";
       buildDepends = [
         aeson blaze-html blaze-markup exceptions parsec system-fileio
         system-filepath text time transformers
       ];
       testDepends = [
         aeson blaze-html blaze-markup exceptions hspec HUnit parsec
         system-fileio system-filepath text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "A toolkit for making compile-time interpolated templates";
       license = stdenv.lib.licenses.mit;
     }) {};

  "shakespeare-css" = callPackage
    ({ mkDerivation, shakespeare }:
     mkDerivation {
       pname = "shakespeare-css";
       version = "1.1.0";
       sha256 = "18d0kxfrs0aj9pfd9p1j7w5amch1hvsww3xycgn5qk6i0z7l4ywz";
       buildDepends = [ shakespeare ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "Stick your haskell variables into css at compile time. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "shakespeare-i18n" = callPackage
    ({ mkDerivation, shakespeare }:
     mkDerivation {
       pname = "shakespeare-i18n";
       version = "1.1.0";
       sha256 = "0ahhg9r7d8kdxn0x33bp5p8wmwkh1yvdqhw05yjwif0ky5y9h625";
       buildDepends = [ shakespeare ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "A type-based approach to internationalization. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "shakespeare-js" = callPackage
    ({ mkDerivation, shakespeare }:
     mkDerivation {
       pname = "shakespeare-js";
       version = "1.3.0";
       sha256 = "0hihcrgvzf4nsrgw6vqpkzbgskq01yc1mnvp7g2wy7vq0dv4pjp4";
       buildDepends = [ shakespeare ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "Stick your haskell variables into javascript/coffeescript at compile time. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "shakespeare-text" = callPackage
    ({ mkDerivation, shakespeare }:
     mkDerivation {
       pname = "shakespeare-text";
       version = "1.1.0";
       sha256 = "18ixixb9aqn630s9wblxcki1gggm4i0fj9752c55p3b42q8h86rc";
       buildDepends = [ shakespeare ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "Interpolation with quasi-quotation: put variables strings (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "shana" = callPackage
    ({ mkDerivation, regex-posix }:
     mkDerivation {
       pname = "shana";
       version = "2009.12.1";
       sha256 = "0fg16nbi0r0pdd3sfabzdz1f4595x3hz3b4pxfwy8l78p8lppv0y";
       buildDepends = [ regex-posix ];
       homepage = "http://github.com/nfjinjing/hack/tree/master";
       description = "treat haskell functions as unix pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shapefile" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, dbf, filepath, rwlock
     }:
     mkDerivation {
       pname = "shapefile";
       version = "0.0.0.1";
       sha256 = "0j6c01igj767ab3pd5yzkjkd8374rmjr57f2gw5c69qnh288c6w6";
       buildDepends = [ binary data-binary-ieee754 dbf filepath rwlock ];
       homepage = "http://code.haskell.org/~mokus/shapefile";
       description = "Parser and related tools for ESRI shapefile format";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "shapely-data" = callPackage
    ({ mkDerivation, proxy-kindness, QuickCheck, tagged }:
     mkDerivation {
       pname = "shapely-data";
       version = "0.1";
       sha256 = "1yn1rim4y6j834ngpz47wsi5pyhbi2gaznj0pyrqrmallzv0zin8";
       buildDepends = [ proxy-kindness tagged ];
       testDepends = [ proxy-kindness QuickCheck tagged ];
       homepage = "http://github.com/jberryman/shapely-data";
       description = "Generics using @(,)@ and @Either@, with algebraic operations and typed conversions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shared-buffer" = callPackage
    ({ mkDerivation, hsc2hs, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "shared-buffer";
       version = "0.2";
       sha256 = "1540l8kkh5mwl8dsh1syna68j87iyw6w87dsx6zppk57g6d66464";
       testDepends = [
         hsc2hs QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "A circular buffer built on shared memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shared-memory" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "shared-memory";
       version = "0.1.0.0";
       sha256 = "15h4j81q2v97dx61pnpaqs99z4vvlw7xl1dxbh878imxj8zn4z84";
       homepage = "https://github.com/nh2/shared-memory";
       description = "POSIX shared memory";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sharedio" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sharedio";
       version = "0.1.0";
       sha256 = "08hmmb2nn2lpirdnpp928m6xadzkv8k90x1nycw2b58vp1rpk7zv";
       homepage = "https://github.com/nh2/haskell-sharedio";
       description = "Bundles shared calls to IO functions to perform them only once";
       license = stdenv.lib.licenses.mit;
     }) {};

  "she" = callPackage
    ({ mkDerivation, filepath, mtl }:
     mkDerivation {
       pname = "she";
       version = "0.6";
       sha256 = "0x3jc2c4j0b8xavap7hj4673zb89zgww1pv13sddkn6p49pk1zvc";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl ];
       homepage = "http://personal.cis.strath.ac.uk/~conor/pub/she";
       description = "A Haskell preprocessor adding miscellaneous features";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "shell-conduit" = callPackage
    ({ mkDerivation, async, conduit, conduit-extra, control-monad-loop
     , filepath, monad-control, monads-tf, resourcet, semigroups, split
     , text, transformers, transformers-base
     }:
     mkDerivation {
       pname = "shell-conduit";
       version = "4.5";
       sha256 = "1vgqfba6k0nv8nwa48fv2hkr9xlrrfrdh2awgpllrimnh0yww41g";
       buildDepends = [
         async conduit conduit-extra control-monad-loop filepath
         monad-control monads-tf resourcet semigroups split text
         transformers transformers-base
       ];
       homepage = "https://github.com/chrisdone/shell-conduit";
       description = "Write shell scripts with Conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shell-escape" = callPackage
    ({ mkDerivation, binary, vector }:
     mkDerivation {
       pname = "shell-escape";
       version = "0.1.2";
       sha256 = "1wdkc2l7g33czh6ws735szl3nm5lq8aqjjjcr6xm4l5km67alnxh";
       buildDepends = [ binary vector ];
       homepage = "http://github.com/solidsnack/shell-escape";
       description = "Shell escaping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shell-pipe" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "shell-pipe";
       version = "0.1";
       sha256 = "0xyarxm2hs8yypmz8w4zbnjvv5xl9dd657j7j3a82gbghsb93vyy";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://gnu.rtin.bz/directory/devel/prog/other/shell-haskell.html";
       description = "Pipe streams through external shell commands";
       license = "GPL";
     }) {};

  "shellish" = callPackage
    ({ mkDerivation, filepath, mtl, strict, time, unix-compat }:
     mkDerivation {
       pname = "shellish";
       version = "0.1.4";
       sha256 = "1ldwid270mwyky6zmggbvn72hvs4s39hhf2zj8r0jahxnwlpbfan";
       buildDepends = [ filepath mtl strict time unix-compat ];
       homepage = "http://repos.mornfall.net/shellish";
       description = "shell-/perl- like (systems) programming in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shellmate" = callPackage
    ({ mkDerivation, filepath, temporary, time, transformers }:
     mkDerivation {
       pname = "shellmate";
       version = "0.1.6";
       sha256 = "17fpl0h58cw5hp6jzrajkl629mw2c6x15cmlcbdxqk9xlxqrg4hr";
       buildDepends = [ filepath temporary time transformers ];
       homepage = "http://github.com/valderman/shellmate";
       description = "Simple interface for shell scripting in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shelltestrunner" = callPackage
    ({ mkDerivation, cmdargs, Diff, filemanip, filepath, HUnit, parsec
     , regex-tdfa, test-framework, test-framework-hunit, utf8-string
     }:
     mkDerivation {
       pname = "shelltestrunner";
       version = "1.3.4";
       sha256 = "1gfx2l99v95i6amrlcs1qbk9p37qyz21px3a224h5hrr9svhrsqy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs Diff filemanip filepath HUnit parsec regex-tdfa
         test-framework test-framework-hunit utf8-string
       ];
       homepage = "http://joyful.com/shelltestrunner";
       description = "A tool for testing command-line programs";
       license = "GPL";
     }) {};

  "shelly" = callPackage
    ({ mkDerivation, async, enclosed-exceptions, exceptions
     , lifted-async, lifted-base, monad-control, mtl, system-fileio
     , system-filepath, text, time, transformers, transformers-base
     , unix-compat
     }:
     mkDerivation {
       pname = "shelly";
       version = "1.5.6";
       sha256 = "1vnn0s3i3n76286b7rc70qjzgkmfwllpg7w4zin627v6466pfpzl";
       buildDepends = [
         async enclosed-exceptions exceptions lifted-async lifted-base
         monad-control mtl system-fileio system-filepath text time
         transformers transformers-base unix-compat
       ];
       homepage = "https://github.com/yesodweb/Shelly.hs";
       description = "shell-like (systems) programming in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shelly-extra" = callPackage
    ({ mkDerivation, async, HUnit, mtl, SafeSemaphore, shelly, text }:
     mkDerivation {
       pname = "shelly-extra";
       version = "0.3";
       sha256 = "0rin1rqpzrjh4gs9235wy9w8rj4ac9yh83ap78a6nj0zi9w9vlwd";
       buildDepends = [ async mtl SafeSemaphore shelly ];
       testDepends = [ HUnit SafeSemaphore shelly text ];
       homepage = "https://github.com/yesodweb/Shelly.hs";
       description = "shelly features that require extra dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shivers-cfg" = callPackage
    ({ mkDerivation, HPDF, language-dot, mtl }:
     mkDerivation {
       pname = "shivers-cfg";
       version = "0.1";
       sha256 = "1jrf9l25lcmqh55zy3g2nbi60ph9m0ycvjz1q0qvpb403kqhd0wa";
       buildDepends = [ HPDF language-dot mtl ];
       description = "Implementation of Shivers' Control-Flow Analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shoap" = callPackage
    ({ mkDerivation, curl }:
     mkDerivation {
       pname = "shoap";
       version = "0.2";
       sha256 = "0ywb8bfkdpqqv2spb92j9rzx4fv5k1c7b65wj0zwnn9rp7ckq59v";
       buildDepends = [ curl ];
       homepage = "http://richardfergie.com/shoap";
       description = "A very basic SOAP package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shortcircuit" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "shortcircuit";
       version = "0.1";
       sha256 = "02gcr6glp1kjs4l7ds8487dbblr1pw8nyq34i3rg1hskz0b83l6z";
       homepage = "http://github.com/aristidb/shortcircuit";
       description = "Short-circuit values and expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shorten-strings" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "shorten-strings";
       version = "0.1.0.1";
       sha256 = "1srqbc2kx1zn0xlzv94y7kqdrflmdck3jy6d2fl75zhf11wilxw3";
       buildDepends = [ text ];
       homepage = "https://github.com/Tarrasch/shorten-strings";
       description = "Shorten a variety of string-like types adding ellipsis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "show" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "show";
       version = "0.6";
       sha256 = "15bvfffnr034z8wbmhxa8h5qskbxwbflk434dx023l1qlm3sjmsg";
       buildDepends = [ syb ];
       description = "'Show' instances for Lambdabot";
       license = "GPL";
     }) {};

  "showdown" = callPackage
    ({ mkDerivation, glade, gtk, random }:
     mkDerivation {
       pname = "showdown";
       version = "0.5.3";
       sha256 = "1gpjb8lw5zmnsd8ic739j91iqsv9a707nd9j5mbnhq6gilk61nrh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ glade gtk random ];
       description = "A simple gtk based Russian Roulette game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shpider" = callPackage
    ({ mkDerivation, curl, mtl, regex-posix, tagsoup, tagsoup-parsec
     , time, url, web-encodings
     }:
     mkDerivation {
       pname = "shpider";
       version = "0.2.1.1";
       sha256 = "19741zlma2fp3jbfsmqgl0004bvfpizbjljg2k5xam1k4v144kwd";
       buildDepends = [
         curl mtl regex-posix tagsoup tagsoup-parsec time url web-encodings
       ];
       homepage = "http://github.com/ozataman/shpider";
       description = "Web automation library in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shplit" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "shplit";
       version = "0.3";
       sha256 = "0wml7x8843ib8jmwq6xz9q011hz4vpd7zmnvbc8h2zdql6p6lqxr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl ];
       homepage = "http://personal.cis.strath.ac.uk/~conor/pub/shplit";
       description = "A Haskell pattern splitter with emacs attachments";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "shqq" = callPackage
    ({ mkDerivation, parsec, posix-escape }:
     mkDerivation {
       pname = "shqq";
       version = "0.1";
       sha256 = "08mdnlnq001slxml0y1rg7nry2fz8qcf1cw0q22j84gx3csrfhcm";
       buildDepends = [ parsec posix-escape ];
       description = "Embed shell commands with interpolated Haskell variables, and capture output";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "shuffle" = callPackage
    ({ mkDerivation, Cabal, filepath, network, network-uri, uhc-util
     , uuagc, uuagc-cabal, uulib
     }:
     mkDerivation {
       pname = "shuffle";
       version = "0.1.3.1";
       sha256 = "120rc9gzdhad4nqich1mwixzax9bhsm3vv87qkvyarcz0qf80qcx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath network network-uri uhc-util uuagc uuagc-cabal uulib
       ];
       homepage = "https://github.com/UU-ComputerScience/shuffle";
       description = "Shuffle tool for UHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sieve" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sieve";
       version = "0.1.0.1";
       sha256 = "19zjwzh3i8ql5xz9rvmbz7n2l3z7dcq683ikrpvqx3wxnc06058m";
       homepage = "http://www.the-singleton.com";
       description = "Sieve is an implementation of the Sieve abstract data type";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "sifflet" = callPackage
    ({ mkDerivation, cairo, fgl, filepath, glib, gtk, hxt, mtl, parsec
     , sifflet-lib
     }:
     mkDerivation {
       pname = "sifflet";
       version = "2.2.1";
       sha256 = "0xahs91s1kvb2vrdr6xwg4nrm3d4pfz807rnb7dj9rfj1knlaw4j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo fgl filepath glib gtk hxt mtl parsec sifflet-lib
       ];
       homepage = "http://mypage.iu.edu/~gdweber/software/sifflet/";
       description = "A simple, visual, functional programming language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sifflet-lib" = callPackage
    ({ mkDerivation, cairo, fgl, filepath, gdk_x11, glib, gtk, gtk_x11
     , hxt, mtl, parsec
     }:
     mkDerivation {
       pname = "sifflet-lib";
       version = "2.2.1";
       sha256 = "1snaq0vlsk4r2lbg2sk389ppwnz22mqwhf1lgwjh3cg91ab905n4";
       buildDepends = [ cairo fgl filepath glib gtk hxt mtl parsec ];
       extraLibraries = [ gdk_x11 gtk_x11 ];
       homepage = "http://mypage.iu.edu/~gdweber/software/sifflet/";
       description = "Library of modules shared by sifflet and its tests and its exporters";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sign" = callPackage
    ({ mkDerivation, deepseq, hashable, HUnit, lattices, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , test-framework-th
     }:
     mkDerivation {
       pname = "sign";
       version = "0.4.0";
       sha256 = "13if43014vyfl7bj1nicv6chjd01xyajsa2a71v71nq24lxjb7vx";
       buildDepends = [ deepseq hashable lattices ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th
       ];
       description = "Arithmetic over signs and sets of signs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "signed-multiset" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "signed-multiset";
       version = "0.4";
       sha256 = "0pxi6g095axf9x6hsiqf0ilsjlws4zvl0pjfjamjyyl1wj82h747";
       description = "Multisets with negative membership";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "silently" = callPackage
    ({ mkDerivation, deepseq, nanospec }:
     mkDerivation {
       pname = "silently";
       version = "1.2.4.1";
       sha256 = "035dw3zg680ykyz5rqkkrjn51wkznbc4jb45a8l2gh3vgqzgbf52";
       buildDepends = [ deepseq ];
       testDepends = [ deepseq nanospec ];
       homepage = "https://github.com/trystan/silently";
       description = "Prevent or capture writing to stdout and other handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simd" = callPackage
    ({ mkDerivation, primitive, vector }:
     mkDerivation {
       pname = "simd";
       version = "0.1.0.1";
       sha256 = "0rmp715k7k41h7nnfg3ik28pf602jvh5wb23yzbpz0j8vkfysn8m";
       buildDepends = [ primitive vector ];
       homepage = "http://github.com/mikeizbicki/simd";
       description = "simple interface to GHC's SIMD instructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simgi" = callPackage
    ({ mkDerivation, mersenne-random-pure64, mtl, parsec, random }:
     mkDerivation {
       pname = "simgi";
       version = "0.3";
       sha256 = "1yqd9799ys8y4n325mayq8qps99ajv1r4j8h6r16l5n94wvyw1ba";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mersenne-random-pure64 mtl parsec random ];
       homepage = "http://simgi.sourceforge.net/";
       description = "stochastic simulation engine";
       license = "GPL";
     }) {};

  "simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring
     , blaze-builder, cmdargs, filepath, hspec, http-types, HUnit
     , mime-types, monad-control, mtl, setenv, simple-templates, text
     , transformers, transformers-base, unordered-containers, vector
     , wai, wai-extra
     }:
     mkDerivation {
       pname = "simple";
       version = "0.10.0.2";
       sha256 = "1ndy07vql2zmkpriyqx4mxdmam358h6zv0s50md9crdxjhmsml64";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base64-bytestring blaze-builder cmdargs filepath
         http-types mime-types monad-control mtl setenv simple-templates
         text transformers transformers-base unordered-containers vector wai
         wai-extra
       ];
       testDepends = [ hspec HUnit monad-control mtl transformers wai ];
       homepage = "http://simple.cx";
       description = "A minimalist web framework for the WAI server interface";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "simple-actors" = callPackage
    ({ mkDerivation, chan-split, contravariant, mtl, transformers }:
     mkDerivation {
       pname = "simple-actors";
       version = "0.4.0";
       sha256 = "13xjyr6gf55yxinaah4c8fx56a9fyr191v4lwycnlkdz8vvizw25";
       buildDepends = [ chan-split contravariant mtl transformers ];
       homepage = "http://brandon.si/code/simple-actors-0-1-0-released/";
       description = "A library for more structured concurrent programming, based on the Actor Model";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-atom" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "simple-atom";
       version = "0.2";
       sha256 = "1kqkaay3r03plxvvyan3hdgj2rfynygnisi6hrsjwqgj4nw6va17";
       buildDepends = [ deepseq ];
       homepage = "http://github.com/nominolo/simple-atom";
       description = "Atom (or symbol) datatype for fast comparision and sorting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-bluetooth" = callPackage
    ({ mkDerivation, bluetooth, network }:
     mkDerivation {
       pname = "simple-bluetooth";
       version = "0.1.0.0";
       sha256 = "1qrlvqy2vcl36db3403nb1c0sx233d3vwxrbqb7jip13hy0h6jf4";
       buildDepends = [ network ];
       extraLibraries = [ bluetooth ];
       description = "Simple Bluetooth API for Windows and Linux (bluez)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-c-value" = callPackage
    ({ mkDerivation, checkers, DebugTraceHelpers, derive, dlist, HUnit
     , mtl, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, tuple, uniplate
     }:
     mkDerivation {
       pname = "simple-c-value";
       version = "0.0.0.1";
       sha256 = "0ky0yilcc54hx8sl11z4dl14n6k9wfz0w9bwv3pbgyi44ravr8gs";
       buildDepends = [ DebugTraceHelpers dlist tuple ];
       testDepends = [
         checkers DebugTraceHelpers derive dlist HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         tuple uniplate
       ];
       homepage = "https://github.com/jfischoff/simple-c-value";
       description = "A simple C value type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-conduit" = callPackage
    ({ mkDerivation, bifunctors, chunked-data, either, exceptions
     , filepath, free, lifted-async, lifted-base, mmorph, monad-control
     , mono-traversable, mtl, mwc-random, primitive, semigroups, stm
     , streaming-commons, text, transformers, transformers-base, vector
     }:
     mkDerivation {
       pname = "simple-conduit";
       version = "0.5.1";
       sha256 = "1jy70cdw2h6fd2618dczajml5k82kkjmd2n0mgbby2mr6r3sk5zr";
       buildDepends = [
         bifunctors chunked-data either exceptions filepath free
         lifted-async lifted-base mmorph monad-control mono-traversable mtl
         mwc-random primitive semigroups stm streaming-commons text
         transformers transformers-base vector
       ];
       homepage = "http://github.com/jwiegley/simple-conduit";
       description = "A simple streaming I/O library based on monadic folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-config" = callPackage
    ({ mkDerivation, data-default, hspec, network-uri, parsec
     , transformers
     }:
     mkDerivation {
       pname = "simple-config";
       version = "1.2.2.1";
       sha256 = "1ndczlpqycrmyjm8v3gpsw1f946lfvc70kzmipli4ir9cbqh5d5k";
       buildDepends = [ data-default network-uri parsec transformers ];
       testDepends = [ hspec ];
       homepage = "https://github.com/yunomu/simple-config";
       description = "Simple config file parser generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-css" = callPackage
    ({ mkDerivation, blaze-html, hashable, language-css
     , unordered-containers
     }:
     mkDerivation {
       pname = "simple-css";
       version = "0.0.4";
       sha256 = "19a2yfp9gji7w5ps5lh8jwvnhma21d83v4fm2hrc92490fpq9aid";
       buildDepends = [
         blaze-html hashable language-css unordered-containers
       ];
       description = "simple binding of css and html";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-eval" = callPackage
    ({ mkDerivation, parsec, text, transformers }:
     mkDerivation {
       pname = "simple-eval";
       version = "0.1.0.1";
       sha256 = "185dgpfc7b1ayw0ajfdnf28fy1a87b3kqn4fh9y5l9krzlqs2lfl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ parsec text transformers ];
       homepage = "https://github.com/gitfoxi/Language.Eval";
       description = "Evaluate a Text to an Integer: \"1 + 1\" -> 2";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "simple-firewire" = callPackage
    ({ mkDerivation, bindings-dc1394, CV }:
     mkDerivation {
       pname = "simple-firewire";
       version = "0.1.3.4";
       sha256 = "14fh3z3vqkmfgvgxja431ivm3lk1ksgrxaqjzz25wdc493j640ka";
       buildDepends = [ bindings-dc1394 CV ];
       homepage = "https://github.com/aleator/simple-firewire";
       description = "Simplified interface for firewire cameras";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-form" = callPackage
    ({ mkDerivation, blaze-html, digestive-functors, email-validate
     , network, text, time, transformers
     }:
     mkDerivation {
       pname = "simple-form";
       version = "0.4.2";
       sha256 = "19ilabs670wacmq2qar5bw4ygjfw37s76z4pa543nm1j9hh42f0k";
       buildDepends = [
         blaze-html digestive-functors email-validate network text time
         transformers
       ];
       homepage = "https://github.com/singpolyma/simple-form";
       description = "Forms that configure themselves based on type";
       license = "unknown";
     }) {};

  "simple-genetic-algorithm" = callPackage
    ({ mkDerivation, deepseq, parallel, random }:
     mkDerivation {
       pname = "simple-genetic-algorithm";
       version = "0.2.0.0";
       sha256 = "14gy8bmkvv81zd1hmdzmmdzf4pspn4nymfpjx07jxcgm5isn49qi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deepseq parallel random ];
       homepage = "http://eax.me/haskell-genetic-algorithm/";
       description = "Simple parallel genetic algorithm implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-index" = callPackage
    ({ mkDerivation, hashable, safecopy, unordered-containers }:
     mkDerivation {
       pname = "simple-index";
       version = "0.1.0.1";
       sha256 = "0w5nqhabv1rdbgnjw5vgx6p19dhqiq6xn5ljld3s7ndfk8nfddgy";
       buildDepends = [ hashable safecopy unordered-containers ];
       description = "Allows simple indexation on any data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-log" = callPackage
    ({ mkDerivation, deepseq, filepath, MonadCatchIO-transformers, mtl
     , SafeSemaphore, text, time, transformers
     }:
     mkDerivation {
       pname = "simple-log";
       version = "0.3.0";
       sha256 = "0blr8j52q8q1mdmb66byll3pnhzqmrlwc8jjz40km86bj73n1c7h";
       buildDepends = [
         deepseq filepath MonadCatchIO-transformers mtl SafeSemaphore text
         time transformers
       ];
       homepage = "http://github.com/mvoidex/simple-log";
       description = "Simple log for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-log-syslog" = callPackage
    ({ mkDerivation, hsyslog, simple-log, text }:
     mkDerivation {
       pname = "simple-log-syslog";
       version = "0.2.0";
       sha256 = "1619jsxgz5afmwhjcixg54i7dhh8jl29cmziifjrg60mm4rf2c34";
       buildDepends = [ hsyslog simple-log text ];
       homepage = "http://github.com/mvoidex/simple-log-syslog";
       description = "Syslog backend for simple-log";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-neural-networks" = callPackage
    ({ mkDerivation, deepseq, parallel, random, split }:
     mkDerivation {
       pname = "simple-neural-networks";
       version = "0.2.0.1";
       sha256 = "07brvfs19qprbpiys38gw3ypkwyx8y31fdil3kkzc9gszvcfi7vy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ deepseq parallel random split ];
       homepage = "http://eax.me/haskell-neural-networks/";
       description = "Simple parallel neural networks implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-observer" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "simple-observer";
       version = "0.0.1";
       sha256 = "1njzw6zjarlpjrmbkxwivr9azj8v1298bsd1ai3ddlmylwyhn24r";
       homepage = "http://github.com/gimbo/observer.hs";
       description = "The Observer pattern";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-pascal" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, simple-stacked-vm }:
     mkDerivation {
       pname = "simple-pascal";
       version = "0.1";
       sha256 = "1nrm52agsgr2gxljv14l7f713jvbfa99qnzkcni2s7777xc33dkk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec simple-stacked-vm ];
       description = "Simplified Pascal language to SSVM compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-pipe" = callPackage
    ({ mkDerivation, lifted-base, monad-control, monads-tf, stm
     , transformers-base
     }:
     mkDerivation {
       pname = "simple-pipe";
       version = "0.0.0.28";
       sha256 = "11bvk1dwi6anmnsvv3hi7ii60yy3d64g38vfmxhabh93sjr4b4nm";
       buildDepends = [
         lifted-base monad-control monads-tf stm transformers-base
       ];
       homepage = "https://github.com/YoshikuniJujo/simple-pipe/wiki";
       description = "simple pipeline library like conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-postgresql-orm" = callPackage
    ({ mkDerivation, filepath, postgresql-orm, postgresql-simple
     , resource-pool, simple, transformers
     }:
     mkDerivation {
       pname = "simple-postgresql-orm";
       version = "0.9.0.1";
       sha256 = "0j1v64ywfchxjdidy5pb1dzab0qhn516vcy580incw1bminyh3rz";
       buildDepends = [
         filepath postgresql-orm postgresql-simple resource-pool simple
         transformers
       ];
       homepage = "http://simple.cx";
       description = "Connector package for integrating postgresql-orm with the Simple web framework";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "simple-reflect" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "simple-reflect";
       version = "0.3.2";
       sha256 = "1dpcf6w3cf1sfl9bnlsx04x7aghw029glj5d05qzrsnms2rlw8iq";
       homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
       description = "Simple reflection of expressions containing variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-rope" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "simple-rope";
       version = "0.1";
       sha256 = "187ghgn8nivvn5m8nsn0vrjh8mr6h7n6r1p1119gr4h3m2hpmrpl";
       buildDepends = [ QuickCheck ];
       homepage = "http://github.com/jkff/haskell-rope";
       description = "Memory-efficient strings with concatenation and splitting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-sendfile" = callPackage
    ({ mkDerivation, conduit, conduit-extra, hspec, HUnit, network
     , resourcet
     }:
     mkDerivation {
       pname = "simple-sendfile";
       version = "0.2.18";
       sha256 = "1dc7c4bkcwzfhbm982svi9j6dzxxf0z6pjkdrs23m9bc9g8aly49";
       buildDepends = [ network ];
       testDepends = [
         conduit conduit-extra hspec HUnit network resourcet
       ];
       description = "Cross platform library for the sendfile system call";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-server" = callPackage
    ({ mkDerivation, concurrent-extra, hashtables, network, time
     , unbounded-delays
     }:
     mkDerivation {
       pname = "simple-server";
       version = "0.0.3";
       sha256 = "0qmqkcyikyjcfsq82w0i54ydizfnp72h0qfsbjw5qjizf4l3awcr";
       buildDepends = [
         concurrent-extra hashtables network time unbounded-delays
       ];
       description = "Simple Server interface";
       license = "GPL";
     }) {};

  "simple-session" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, byteable, cookie
     , cryptohash, http-types, simple, transformers, wai
     }:
     mkDerivation {
       pname = "simple-session";
       version = "0.10.0.0";
       sha256 = "1vqpikn6ml4fmz9pg29blw1c5ck8d4xx1qrb388jw57x24gknp0k";
       buildDepends = [
         base64-bytestring blaze-builder byteable cookie cryptohash
         http-types simple transformers wai
       ];
       homepage = "http://simple.cx";
       description = "Cookie-based session management for the Simple web framework";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "simple-sessions" = callPackage
    ({ mkDerivation, indexed, synchronous-channels }:
     mkDerivation {
       pname = "simple-sessions";
       version = "0.1.3";
       sha256 = "08abag1im9gp2jpndd12sv911ca2qwh6frrz6qr87mj11xfhbky5";
       buildDepends = [ indexed synchronous-channels ];
       homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
       description = "A simple implementation of session types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-smt" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "simple-smt";
       version = "0.4.0";
       sha256 = "02mhwiijf7rh4h8ljqb9vnbafqlmkksxbizdhgpqzs4imbzl9qp3";
       description = "A simple way to interact with an SMT solver process";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-sql-parser" = callPackage
    ({ mkDerivation, HUnit, mtl, parsec, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "simple-sql-parser";
       version = "0.4.0";
       sha256 = "0mkc2x6x061qdcnaifig26jmq86rvdvp1xjmzn8g2qf0v3dw18hl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl parsec ];
       testDepends = [
         HUnit mtl parsec test-framework test-framework-hunit
       ];
       homepage = "http://jakewheat.github.io/simple-sql-parser/";
       description = "A parser for SQL queries";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-stacked-vm" = callPackage
    ({ mkDerivation, binary-state, filepath, mtl, parsec }:
     mkDerivation {
       pname = "simple-stacked-vm";
       version = "0.1.1";
       sha256 = "1grhdaf6z6illki5km1glliaaqlyvskwjvvcqz2vh8467arsy2pd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary-state filepath mtl parsec ];
       description = "Simple stacked virtual machine: assembler, disassembler, bytecode interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simple-tabular" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "simple-tabular";
       version = "0.1.0.0";
       sha256 = "0p7rd8y6rhwg0ap6cib7l32bglvfkvbzg938pdwpb2ss6cv8b9zs";
       homepage = "http://github.com/BartMassey/simple-tabular";
       description = "Simple tabular-text formatter";
       license = stdenv.lib.licenses.mit;
     }) {};

  "simple-templates" = callPackage
    ({ mkDerivation, aeson, attoparsec, hspec, HUnit, scientific, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "simple-templates";
       version = "0.8.0.0";
       sha256 = "1lmls90fbd18bklhhblfm0983w9bk66jj8iad3jzi5gd2injwj78";
       buildDepends = [
         aeson attoparsec scientific text unordered-containers vector
       ];
       testDepends = [ aeson attoparsec hspec HUnit scientific vector ];
       homepage = "http://simple.cx";
       description = "A basic template language for the Simple web framework";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "simple-vec3" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "simple-vec3";
       version = "0.1.0.1";
       sha256 = "1vzx88drwg40a9b7dzz4nbd5faawrc15wgyd1b12zmrsysn0h6s4";
       buildDepends = [ vector ];
       homepage = "http://github.com/dzhus/simple-vec3/";
       description = "Three-dimensional vectors of doubles with basic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simpleargs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "simpleargs";
       version = "0.2.1";
       sha256 = "1grjjpb3397wnr6sd0bn679k9pfg1zlm61350zd2gj5yq6pshl6p";
       homepage = "http://malde.org/~ketil/simpleargs";
       description = "Provides a more flexible getArgs function with better error reporting";
       license = "LGPL";
     }) {};

  "simpleirc" = callPackage
    ({ mkDerivation, hspec, HUnit, knob, network, time }:
     mkDerivation {
       pname = "simpleirc";
       version = "0.3.0";
       sha256 = "045rbiz06zpqvkfh4hxsxz7fr338zmr3mgk2xpaqhh8pp2v14h59";
       buildDepends = [ network time ];
       testDepends = [ hspec HUnit knob ];
       homepage = "http://github.com/dom96/SimpleIRC";
       description = "Simple IRC Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simpleirc-lens" = callPackage
    ({ mkDerivation, simpleirc }:
     mkDerivation {
       pname = "simpleirc-lens";
       version = "0.1.0.0";
       sha256 = "0lr4zrp8h7xgg8zsznawqkkzh3pvlzfw5hl6n0hss5ramb71ccy5";
       editedCabalFile = "0x89s7ilj4rylz1wjvri8d2419410ka4ny4xsm3nfc9hnbam11v1";
       buildDepends = [ simpleirc ];
       homepage = "https://github.com/relrod/simpleirc-lens";
       description = "Lenses for simpleirc types";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "simplenote" = callPackage
    ({ mkDerivation, curl, dataenc, download-curl, HTTP, json, time
     , utf8-string
     }:
     mkDerivation {
       pname = "simplenote";
       version = "1.0";
       sha256 = "0kggnvbhvzrsqj387vqq2xpspk4xn3830k65g4cc642gmw4l803v";
       buildDepends = [
         curl dataenc download-curl HTTP json time utf8-string
       ];
       description = "Haskell interface for the simplenote API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simpleprelude" = callPackage
    ({ mkDerivation, ghc-paths, haskell-src-exts, uniplate }:
     mkDerivation {
       pname = "simpleprelude";
       version = "1.0.1.3";
       sha256 = "0qlhh9m455fh8w9hdzykgxbw699mkd926ar031j99dhimca2d4hj";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ghc-paths haskell-src-exts uniplate ];
       description = "A simplified Haskell prelude for teaching";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simplesmtpclient" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "simplesmtpclient";
       version = "0.2";
       sha256 = "0z8g82222nvh3yhn8qisr8qqnsv02zxjyzs32qrcg2pshbd5mdj8";
       editedCabalFile = "09dd2d70jhkw3svsf4680f9250w4c7s9396w6dac2l2ypxxiq0p6";
       buildDepends = [ network ];
       description = "Very simple SMTP Client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simplessh" = callPackage
    ({ mkDerivation, mtl, ssh2 }:
     mkDerivation {
       pname = "simplessh";
       version = "0.2.0.5";
       sha256 = "1f0rck8shcm69bg2n2ijjad6dzrybfyrjqpsx5qh333mmz0q7bbq";
       buildDepends = [ mtl ];
       extraLibraries = [ ssh2 ];
       homepage = "http://hub.darcs.net/thoferon/simplessh";
       description = "Simple wrapper around libssh2";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "simplex" = callPackage
    ({ mkDerivation, filepath, mtl, random, regex-compat, split, time
     }:
     mkDerivation {
       pname = "simplex";
       version = "0.3.8";
       sha256 = "0z8ysg43dydij5l271ary8g5l26k0fvsymi99ycyjnl2ij1sg482";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl random regex-compat split time ];
       homepage = "http://github.com/scravy/simplex";
       description = "A simple markup language that translates to LaTeX";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "simseq" = callPackage
    ({ mkDerivation, bio, random }:
     mkDerivation {
       pname = "simseq";
       version = "0.0";
       sha256 = "0i60ksi5xc0d0rg5xzhbdjv2f3b5jr6rl9khn9i2b1n9sh1lv36m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio random ];
       homepage = "http://malde.org/~ketil/";
       description = "Simulate sequencing with different models for priming and errors";
       license = "GPL";
     }) {};

  "simtreelo" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "simtreelo";
       version = "0.1.0.2";
       sha256 = "0r985v4159hnz371g1fxvn6x3x91c0xyymjnfnj2iaya5nmds6qp";
       description = "Loader for data organized in a tree";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "sindre" = callPackage
    ({ mkDerivation, attoparsec, libXft, mtl, parsec, permute
     , regex-pcre, setlocale, text, utf8-string, X11, X11-rm, x11-xim
     , X11-xshape
     }:
     mkDerivation {
       pname = "sindre";
       version = "0.4";
       sha256 = "0p76rsk02p6rw51ppbr3j7ydk57k34684qf50nrz5qd0jrnapjm2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec mtl parsec permute regex-pcre setlocale text utf8-string
         X11 X11-rm x11-xim X11-xshape
       ];
       pkgconfigDepends = [ libXft ];
       homepage = "http://sigkill.dk/programs/sindre";
       description = "A programming language for simple GUIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "singletons" = callPackage
    ({ mkDerivation, Cabal, constraints, filepath, mtl, tasty
     , tasty-golden, th-desugar
     }:
     mkDerivation {
       pname = "singletons";
       version = "1.0";
       sha256 = "1rd1728wghhqlg2djd7az8i01rf4i3wwwcnz2v43a39jjvhlklkg";
       buildDepends = [ mtl th-desugar ];
       testDepends = [ Cabal constraints filepath tasty tasty-golden ];
       homepage = "http://www.cis.upenn.edu/~eir/packages/singletons";
       description = "A framework for generating singleton types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sink" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sink";
       version = "0.1.0.1";
       sha256 = "04ny9450h2mlw1j0gn6a1vvgwsk3gbhhzshqv2sbcg5pwkzkdrzp";
       description = "An alternative to lazy I/O that doesn't conflate execution with evaluation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "siphash" = callPackage
    ({ mkDerivation, cpu, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "siphash";
       version = "1.0.3";
       sha256 = "1wq5dan30ggjgmravy92ylqjvjv1q7mxrmddr7zc8h6aqr0wx0fg";
       buildDepends = [ cpu ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-siphash";
       description = "siphash: a fast short input PRF";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sirkel" = callPackage
    ({ mkDerivation, binary, hashtables, random, remote, SHA
     , transformers
     }:
     mkDerivation {
       pname = "sirkel";
       version = "0.1";
       sha256 = "0hhphhdvzcq9az5zriip7sgypfwbf5plx65s96nvrm2lznw4pzan";
       buildDepends = [
         binary hashtables random remote SHA transformers
       ];
       description = "Sirkel, a Chord DHT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sized" = callPackage
    ({ mkDerivation, constraints, ListLike, monomorphic, type-natural
     , vector
     }:
     mkDerivation {
       pname = "sized";
       version = "0.1.0.0";
       sha256 = "00n9fb7kk3c6dy4j19d9ikmynllpxc7yd51sign0rhvnasmyrghl";
       buildDepends = [
         constraints ListLike monomorphic type-natural vector
       ];
       description = "Sized sequence data-types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sized-types" = callPackage
    ({ mkDerivation, singletons }:
     mkDerivation {
       pname = "sized-types";
       version = "0.5.0";
       sha256 = "1cvgw2plzgpddg2p74hylx499dv4hn2nc8s085mnayp5n9jkn8md";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ singletons ];
       homepage = "http://www.ittc.ku.edu/csdl/fpg/Tools";
       description = "Sized types in Haskell using the GHC Nat kind";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sized-vector" = callPackage
    ({ mkDerivation, constraints, deepseq, equational-reasoning
     , hashable, monomorphic, singletons, type-natural
     }:
     mkDerivation {
       pname = "sized-vector";
       version = "1.4.1.0";
       sha256 = "0pl672lhw2dgk83kakjxap24sc4760l9blh9ggy9ldxhps7l8ydq";
       buildDepends = [
         constraints deepseq equational-reasoning hashable monomorphic
         singletons type-natural
       ];
       homepage = "https://github.com/konn/sized-vector";
       description = "Size-parameterized vector types and functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sizes" = callPackage
    ({ mkDerivation, cmdargs, deepseq, dlist, lens, parallel-io
     , regex-posix, system-fileio, system-filepath, text
     }:
     mkDerivation {
       pname = "sizes";
       version = "2.3.2";
       sha256 = "0xns0xl3khks1jvsmxh0nqf1saxs7qscvkbcg4270pp7n6lziqdg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs deepseq dlist lens parallel-io regex-posix system-fileio
         system-filepath text
       ];
       homepage = "https://github.com/jwiegley/sizes";
       description = "Recursively show space (size and i-nodes) used in subdirectories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "skein" = callPackage
    ({ mkDerivation, cereal, crypto-api, filepath, hspec, tagged }:
     mkDerivation {
       pname = "skein";
       version = "1.0.9.2";
       sha256 = "1j8bhqm25r9vd4qb4v12g32r0dv6xyhk48cq287wfbzjraayi1gw";
       buildDepends = [ cereal crypto-api tagged ];
       testDepends = [ cereal crypto-api filepath hspec tagged ];
       homepage = "https://github.com/meteficha/skein";
       description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "skell" = callPackage
    ({ mkDerivation, blaze-html, http-types, text, wai }:
     mkDerivation {
       pname = "skell";
       version = "0.1.0.0";
       sha256 = "0lnlqcw5slv5gshdq35il16pm57fh07hkd7zx95gfxx1aipyr4lp";
       buildDepends = [ blaze-html http-types text wai ];
       homepage = "https://github.com/pharpend/skell";
       description = "An overly complex Haskell web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "skype4hs" = callPackage
    ({ mkDerivation, attoparsec, lifted-base, monad-control, mtl, stm
     , text, time, transformers-base, word8, X11
     }:
     mkDerivation {
       pname = "skype4hs";
       version = "0.0.0.0";
       sha256 = "0mrd63yfmxxmv3l5v5i01rh4lyl831pfb06k9bxvc6m5q88fxglp";
       buildDepends = [
         attoparsec lifted-base monad-control mtl stm text time
         transformers-base word8 X11
       ];
       homepage = "https://github.com/emonkak/haskell-skype";
       description = "Skype Desktop API binding for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "skypelogexport" = callPackage
    ({ mkDerivation, attoparsec, filepath, IfElse, regex-pcre, time
     , utf8-string
     }:
     mkDerivation {
       pname = "skypelogexport";
       version = "0.2";
       sha256 = "0rk9m9fw6as7zzjkm4jhwgw7nbs05ky1s556xmjbnkh6l9xp2chw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec filepath IfElse regex-pcre time utf8-string
       ];
       homepage = "https://github.com/jdevelop/skypelogexport/wiki";
       description = "Export Skype chat logs to text files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "slave-thread" = callPackage
    ({ mkDerivation, base-prelude, HTF, list-t, mmorph, partial-handler
     , QuickCheck, quickcheck-instances, SafeSemaphore, stm-containers
     , transformers
     }:
     mkDerivation {
       pname = "slave-thread";
       version = "0.1.5";
       sha256 = "0qw4c6406hbdnv6i55sh8ps8739szm7rnqjzk6ynm7dfbf3vxhw4";
       buildDepends = [
         base-prelude list-t mmorph partial-handler stm-containers
         transformers
       ];
       testDepends = [
         base-prelude HTF QuickCheck quickcheck-instances SafeSemaphore
       ];
       homepage = "https://github.com/nikita-volkov/slave-thread";
       description = "A principal solution to ghost threads and silent exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "slice-cpp-gen" = callPackage
    ({ mkDerivation, cmdargs, filepath, language-slice, MissingH }:
     mkDerivation {
       pname = "slice-cpp-gen";
       version = "0.3.0.0";
       sha256 = "0mvjj8hs8837dby54ii71wd1sg2z3r14sr7w2hnj2nhnjy7c23yy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs filepath language-slice MissingH ];
       homepage = "https://github.com/paulkoerbitz/slice-cpp-gen";
       description = "Generate C++ skeletons from slice files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "slidemews" = callPackage
    ({ mkDerivation, aeson, MonadCatchIO-transformers, mtl, pandoc
     , snap-core, snap-server, utf8-string
     }:
     mkDerivation {
       pname = "slidemews";
       version = "0.3";
       sha256 = "0x6blvdqwf9sqspwj48drasizx1pb1i92a0lp06szwa2nszdvzf0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson MonadCatchIO-transformers mtl pandoc snap-core snap-server
         utf8-string
       ];
       description = "ws convert markdown to reveal-js";
       license = "GPL";
     }) {};

  "sloane" = callPackage
    ({ mkDerivation, ansi-terminal, cereal, download-curl, filepath
     , HTTP, network, optparse-applicative, terminal-size, text, zlib
     }:
     mkDerivation {
       pname = "sloane";
       version = "1.9.3";
       sha256 = "0xl3dmi6czwfbi17742hqxf3d6sl9dci08qszrkdmasnvivakg78";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cereal download-curl filepath HTTP network
         optparse-applicative terminal-size text zlib
       ];
       postInstall = ''
         mkdir -p $out/share/man/man1
         cp sloane.1 $out/share/man/man1/
       '';
       homepage = "http://github.com/akc/sloane";
       description = "A command line interface to Sloane's On-Line Encyclopedia of Integer Sequences";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "slot-lambda" = callPackage
    ({ mkDerivation, haskell-src-exts, haskell-src-meta, syb, vector }:
     mkDerivation {
       pname = "slot-lambda";
       version = "0.1.0.3";
       sha256 = "1npin7yaharbi5nzwksj1j7rf2k1nvmr1jgcf2xpnvvbcga7l69i";
       buildDepends = [ haskell-src-exts haskell-src-meta syb vector ];
       homepage = "https://github.com/ducis/pa_slot";
       description = "Write lambdas without naming the parameters";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sloth" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "sloth";
       version = "0.0.2";
       sha256 = "0x3iw1mqbl3q723kkxr6b0i1hxcfb4sink4kmg6xnpzd3hwaspq9";
       buildDepends = [ mtl ];
       description = "Testing for minimal strictness";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smallarray" = callPackage
    ({ mkDerivation, deepseq, hashable }:
     mkDerivation {
       pname = "smallarray";
       version = "0.2.2.4";
       sha256 = "16fgxsg8grxhqx6d4s3mm89qbkw2k72qvr4r701ih1i8gmf1ms1z";
       buildDepends = [ deepseq hashable ];
       homepage = "http://community.haskell.org/~aslatter/code/bytearray";
       description = "low-level unboxed arrays, with minimal features";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smallcaps" = callPackage
    ({ mkDerivation, attoparsec, data-default, filepath, parsec, text
     , transformers
     }:
     mkDerivation {
       pname = "smallcaps";
       version = "0.6.0.0";
       sha256 = "1vjzvsvci8zn4y2lh7s2kh6v1c6447nfksqxcv468zz8d1mflsfi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec data-default filepath parsec text transformers
       ];
       testDepends = [ attoparsec data-default parsec text ];
       description = "Flatten camel case text in LaTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smallcheck" = callPackage
    ({ mkDerivation, logict, mtl }:
     mkDerivation {
       pname = "smallcheck";
       version = "1.1.1";
       sha256 = "1ygrabxh40bym3grnzqyfqn96lirnxspb8cmwkkr213239y605sd";
       buildDepends = [ logict mtl ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "A property-based testing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smallpt-hs" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "smallpt-hs";
       version = "0.1";
       sha256 = "1g4g2sgj39pkm3ll4yv0q9dcmq2lyd26qkr1gir1svmxs6hdwp59";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ vector ];
       homepage = "http://github.com/noteed/smallpt-hs";
       description = "A Haskell port of the smallpt path tracer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smallstring" = callPackage
    ({ mkDerivation, deepseq, hashable, smallarray, text, utf8-string
     }:
     mkDerivation {
       pname = "smallstring";
       version = "0.3.3";
       sha256 = "1wkgbnknx9k56ikl6hpv91r9sav8v5qvl2w7z2jadgrlj29fy755";
       buildDepends = [ deepseq hashable smallarray text utf8-string ];
       homepage = "http://community.haskell.org/~aslatter/code/smallstring/";
       description = "A Unicode text type, optimized for low memory overhead";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smartGroup" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "smartGroup";
       version = "0.3.0";
       sha256 = "10wb5v87xl54bsl2xxsh1fh54bgqbhmmkhyaa3ly23nm2f01cpnp";
       homepage = "http://patch-tag.com/r/salazar/smartGroup";
       description = "group strings or bytestrings by words in common";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smartcheck" = callPackage
    ({ mkDerivation, generic-deriving, mtl, QuickCheck, random }:
     mkDerivation {
       pname = "smartcheck";
       version = "0.2.1";
       sha256 = "1rkw4fhiidn9rfq4dvik58zr453jsh2l8xpswas2rsv6k5w0909r";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ generic-deriving mtl QuickCheck random ];
       homepage = "https://github.com/leepike/SmartCheck";
       description = "A smarter QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smartword" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "smartword";
       version = "0.0.0.5";
       sha256 = "0dxw4jgmwcz92n2rymdrfaz1v8lc2wknql9ca5p98jc14l8c2bl3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ utf8-string ];
       homepage = "http://kyagrd.dyndns.org/~kyagrd/project/smartword/";
       description = "Web based flash card for Word Smart I and II vocabularies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sme" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sme";
       version = "0.1";
       sha256 = "1d3kjyskwzc7p5bi6pv9yxfa6l6dqkkqc24dmmxl5wx7vmbfma25";
       description = "A library for Secure Multi-Execution in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smt-lib" = callPackage
    ({ mkDerivation, polyparse }:
     mkDerivation {
       pname = "smt-lib";
       version = "0.0.2";
       sha256 = "1phm50pabahrpxrzp25mfhpafzhp4hz8cxp6fp93rwh4cl7cckky";
       buildDepends = [ polyparse ];
       homepage = "http://tomahawkins.org";
       description = "Parsing and printing SMT-LIB";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smtLib" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "smtLib";
       version = "1.0.7";
       sha256 = "1jn2790x7g7n6jm5cfgd692n3l6iafyv0zyz40hx8ykcs4jh2rkf";
       description = "A library for working with the SMTLIB format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smtlib2" = callPackage
    ({ mkDerivation, atto-lisp, attoparsec, blaze-builder, constraints
     , data-fix, mtl, tagged, text, transformers
     }:
     mkDerivation {
       pname = "smtlib2";
       version = "0.1";
       sha256 = "1r9wdb3hwxy0xyh5jnrbr2y89psmnghvab095jsf30dgzwl21609";
       buildDepends = [
         atto-lisp attoparsec blaze-builder constraints data-fix mtl tagged
         text transformers
       ];
       description = "A type-safe interface to communicate with an SMT solver";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "smtp-mail" = callPackage
    ({ mkDerivation, base16-bytestring, base64-bytestring, cryptohash
     , filepath, mime-mail, network, text
     }:
     mkDerivation {
       pname = "smtp-mail";
       version = "0.1.4.5";
       sha256 = "010fbrcbypajwd9fjjc35br9p5axl1pqd0n1v51585ncrlv2icyw";
       buildDepends = [
         base16-bytestring base64-bytestring cryptohash filepath mime-mail
         network text
       ];
       homepage = "http://github.com/jhickner/smtp-mail";
       description = "Simple email sending via SMTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "smtp2mta" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "smtp2mta";
       version = "0.2";
       sha256 = "0z36zvrh6xhg8s7wai65d2y6hz0qz016ick9a4yrjpqxxk78h902";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network ];
       homepage = "https://github.com/singpolyma/sock2stream";
       description = "Listen for SMTP traffic and send it to an MTA script";
       license = "unknown";
     }) {};

  "smtps-gmail" = callPackage
    ({ mkDerivation, attoparsec, base64-bytestring, conduit
     , conduit-extra, cprng-aes, data-default, filepath, mime-mail
     , network, resourcet, stringsearch, text, tls, transformers
     }:
     mkDerivation {
       pname = "smtps-gmail";
       version = "1.3.0";
       sha256 = "0vbykxqrw0gdhxwgchvgvkxwh7pwyrc1wvl26x5wqlkmkalmkvv9";
       buildDepends = [
         attoparsec base64-bytestring conduit conduit-extra cprng-aes
         data-default filepath mime-mail network resourcet stringsearch text
         tls transformers
       ];
       homepage = "https://github.com/enzoh/smtps-gmail";
       description = "Gmail SMTP Client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snake-game" = callPackage
    ({ mkDerivation, GLUT, OpenGL, random }:
     mkDerivation {
       pname = "snake-game";
       version = "1.2";
       sha256 = "1iy3m20ldc98agdi7n71ik8k2f62ybfg719z79lcf8pzynbfsrbd";
       buildDepends = [ GLUT OpenGL random ];
       description = "Snake Game Using OpenGL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap" = callPackage
    ({ mkDerivation, aeson, attoparsec, cereal, clientsession, comonad
     , configurator, directory-tree, dlist, errors, filepath, hashable
     , heist, lens, logict, MonadCatchIO-transformers, mtl, mwc-random
     , pwstore-fast, regex-posix, snap-core, snap-server, stm, syb, text
     , time, transformers, unordered-containers, vector
     , vector-algorithms, xmlhtml
     }:
     mkDerivation {
       pname = "snap";
       version = "0.13.3.2";
       sha256 = "1k6sd2ww8zqkbfv4v5ryqwgicx6yprfil8cd5rgdvygyjs88fcrp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec cereal clientsession comonad configurator
         directory-tree dlist errors filepath hashable heist lens logict
         MonadCatchIO-transformers mtl mwc-random pwstore-fast regex-posix
         snap-core snap-server stm syb text time transformers
         unordered-containers vector vector-algorithms xmlhtml
       ];
       homepage = "http://snapframework.com/";
       description = "Top-level package for the Snap Web Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-accept" = callPackage
    ({ mkDerivation, http-media, snap-core }:
     mkDerivation {
       pname = "snap-accept";
       version = "0.1.0";
       sha256 = "19sn7q9avb7y9j46fk7iga237qgcdm69sanb351c5s0lfgcpnf1m";
       buildDepends = [ http-media snap-core ];
       homepage = "http://github.com/zimothy/snap-accept";
       description = "Accept header branching for the Snap web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "snap-app" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "snap-app";
       version = "0.7.0";
       sha256 = "1v3izzvxadjplir47ipi087sj6fcmfj5ivlhbkpp9ld7vj8sv2hi";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-auth-cli" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, clientsession, cmdargs, snap
     , text, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "snap-auth-cli";
       version = "0.1.0.1";
       sha256 = "0spdn7zazd17yrcx004m4yag8vy4bac4997f81nfvy25jvg87hhl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty clientsession cmdargs snap text
         unordered-containers utf8-string
       ];
       homepage = "https://github.com/dzhus/snap-auth-cli";
       description = "Command-line tool to manage Snap AuthManager database";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-blaze" = callPackage
    ({ mkDerivation, blaze-html, snap-core }:
     mkDerivation {
       pname = "snap-blaze";
       version = "0.2.1.2";
       sha256 = "136i5q9ipfqrh7fw8rgn1ws6zkjdrfwfq9wpccrm8dg3l61380wh";
       buildDepends = [ blaze-html snap-core ];
       homepage = "http://github.com/jaspervdj/snap-blaze";
       description = "blaze-html integration for Snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-blaze-clay" = callPackage
    ({ mkDerivation, blaze-html, clay, snap-core }:
     mkDerivation {
       pname = "snap-blaze-clay";
       version = "0.1.0.0";
       sha256 = "05zi9rjd37xznjj8yhm5har12mfrclsrwd9fbcwh5ngccd7h7fiy";
       buildDepends = [ blaze-html clay snap-core ];
       homepage = "http://github.com/deckool/snap-blaze-clay";
       description = "blaze-html-clay integration for Snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-configuration-utilities" = callPackage
    ({ mkDerivation, configurator, text, unordered-containers }:
     mkDerivation {
       pname = "snap-configuration-utilities";
       version = "0.1.0.0";
       sha256 = "07cm60v7bz585fawfc8mml178z54zqfg8kb7ldln5bsa0ggpha2z";
       buildDepends = [ configurator text unordered-containers ];
       description = "Methods to manipulate Configurator objects for Snap & Snaplets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-core" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, blaze-builder
     , blaze-builder-enumerator, bytestring-mmap, case-insensitive
     , deepseq, enumerator, filepath, hashable, HUnit
     , MonadCatchIO-transformers, mtl, random, regex-posix, text, time
     , unix-compat, unordered-containers, vector, zlib-enum
     }:
     mkDerivation {
       pname = "snap-core";
       version = "0.9.6.3";
       sha256 = "0i3gl1kxzi2l76sqhyhda7lrcvq8hq6aqgwvfx5k9fa2xic01dw1";
       editedCabalFile = "0gj8wgxy8vs0cdwmb32ksszx7jbgn0w5n2682vg842dn6gvn24qc";
       buildDepends = [
         attoparsec attoparsec-enumerator blaze-builder
         blaze-builder-enumerator bytestring-mmap case-insensitive deepseq
         enumerator filepath hashable HUnit MonadCatchIO-transformers mtl
         random regex-posix text time unix-compat unordered-containers
         vector zlib-enum
       ];
       homepage = "http://snapframework.com/";
       description = "Snap: A Haskell Web Framework (core interfaces and types)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-cors" = callPackage
    ({ mkDerivation, attoparsec, case-insensitive, hashable, network
     , network-uri, snap, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "snap-cors";
       version = "1.2.6";
       sha256 = "1ihqqpzymgc25shz4dvjfh8lzjczqdqg6ril39d5p7rkn4a8y2d8";
       buildDepends = [
         attoparsec case-insensitive hashable network network-uri snap text
         transformers unordered-containers
       ];
       homepage = "http://github.com/ocharles/snap-cors";
       description = "Add CORS headers to Snap applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-elm" = callPackage
    ({ mkDerivation, Elm, filepath, snap-core, text, transformers }:
     mkDerivation {
       pname = "snap-elm";
       version = "0.1.1.2";
       sha256 = "1lp76s5yqgw5zvkv13b4552zq9f2mrngp5l5vd8kwz9rhawgl6kr";
       buildDepends = [ Elm filepath snap-core text transformers ];
       description = "Serve Elm files through the Snap web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-error-collector" = callPackage
    ({ mkDerivation, async, monad-loops, MonadCatchIO-transformers
     , snap, stm, time, transformers
     }:
     mkDerivation {
       pname = "snap-error-collector";
       version = "1.1.0";
       sha256 = "06pqlv93qgibl5gbrp7p1vg6x421nrpkvhazbrcipdpbawrsgaj2";
       buildDepends = [
         async monad-loops MonadCatchIO-transformers snap stm time
         transformers
       ];
       homepage = "http://github.com/ocharles/snap-error-collector";
       description = "Collect errors in batches and dispatch them";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-extras" = callPackage
    ({ mkDerivation, aeson, blaze-builder, blaze-html, configurator
     , data-default, digestive-functors, digestive-functors-heist
     , digestive-functors-snap, directory-tree, errors, filepath, heist
     , jmacro, mtl, readable, safe, snap, snap-core, text, transformers
     , xmlhtml
     }:
     mkDerivation {
       pname = "snap-extras";
       version = "0.9";
       sha256 = "143n0y3cavfgn6f40sh7i441q77ys4lkfv0g9cai714n7yr0ya1v";
       buildDepends = [
         aeson blaze-builder blaze-html configurator data-default
         digestive-functors digestive-functors-heist digestive-functors-snap
         directory-tree errors filepath heist jmacro mtl readable safe snap
         snap-core text transformers xmlhtml
       ];
       description = "A collection of useful helpers and utilities for Snap web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-loader-dynamic" = callPackage
    ({ mkDerivation, directory-tree, hint, mtl, snap-core, time }:
     mkDerivation {
       pname = "snap-loader-dynamic";
       version = "0.10.0.2";
       sha256 = "0fnpzhwnj3dsqwx880391x9x6y0ry8f6dfrzkfs963zib9l3qvh7";
       editedCabalFile = "0zbxv1hx2mb147wg7hl3lckx2qy4wmw8fhf4c7qzdml41kyvqr1g";
       buildDepends = [ directory-tree hint mtl snap-core time ];
       homepage = "http://snapframework.com/";
       description = "Snap: A Haskell Web Framework: dynamic loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-loader-static" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "snap-loader-static";
       version = "0.9.0.2";
       sha256 = "0d6s7n6yryfs2jkw0hxvhvc79fhbj256askb1c6ksqhscxxxwz1m";
       homepage = "http://snapframework.com/";
       description = "Snap: A Haskell Web Framework: static loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-predicates" = callPackage
    ({ mkDerivation, attoparsec, case-insensitive, HUnit, monads-tf
     , QuickCheck, snap-core, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, transformers
     }:
     mkDerivation {
       pname = "snap-predicates";
       version = "0.3.1";
       sha256 = "02rksb2p8wgpla86313z6lwqli5f4ryv4wr95s61kamcpbmf18y5";
       buildDepends = [
         attoparsec case-insensitive monads-tf snap-core text transformers
       ];
       testDepends = [
         attoparsec case-insensitive HUnit monads-tf QuickCheck snap-core
         test-framework test-framework-hunit test-framework-quickcheck2 text
         transformers
       ];
       description = "Declarative routing for Snap";
       license = "unknown";
     }) {};

  "snap-server" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, blaze-builder
     , blaze-builder-enumerator, case-insensitive, enumerator, HsOpenSSL
     , MonadCatchIO-transformers, mtl, network, snap-core, text, time
     , unix-compat
     }:
     mkDerivation {
       pname = "snap-server";
       version = "0.9.4.5";
       sha256 = "09399vlqgic0iwmx31c01bjpbdblw8gayxnz71lwzkixqibkbbip";
       editedCabalFile = "153crm1b629by5r5g05fq0k4c1a82y5v1hzl7s3g40mwpsr3icfj";
       buildDepends = [
         attoparsec attoparsec-enumerator blaze-builder
         blaze-builder-enumerator case-insensitive enumerator HsOpenSSL
         MonadCatchIO-transformers mtl network snap-core text time
         unix-compat
       ];
       configureFlags = "-fopenssl";
       homepage = "http://snapframework.com/";
       description = "A fast, iteratee-based, epoll-enabled web server for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-testing" = callPackage
    ({ mkDerivation, async, digestive-functors, HandsomeSoup, hxt
     , io-streams, lens, mtl, QuickCheck, snap, snap-core, text
     , transformers
     }:
     mkDerivation {
       pname = "snap-testing";
       version = "0.6.0.0";
       sha256 = "1kzcdlfahhrpczihbr4f41p4ijps27lhghrh29csl6jl7n71lvqk";
       buildDepends = [
         async digestive-functors HandsomeSoup hxt io-streams mtl QuickCheck
         snap snap-core text transformers
       ];
       testDepends = [
         async digestive-functors HandsomeSoup hxt io-streams lens mtl
         QuickCheck snap snap-core text transformers
       ];
       homepage = "https://github.com/dbp/snap-testing";
       description = "A library for BDD-style testing with the Snap Web Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-utils" = callPackage
    ({ mkDerivation, heist, http-types, MonadCatchIO-transformers, mtl
     , snap, snap-core, text, xmlhtml
     }:
     mkDerivation {
       pname = "snap-utils";
       version = "0.1.2";
       sha256 = "1kr09fj1jfs6sfmca51k0gwn4acya70s9irzay9yf5b9yyvka391";
       buildDepends = [
         heist http-types MonadCatchIO-transformers mtl snap snap-core text
         xmlhtml
       ];
       homepage = "https://github.com/LukeHoersten/snap-utils";
       description = "Snap Framework utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snap-web-routes" = callPackage
    ({ mkDerivation, heist, mtl, snap, snap-core, text, web-routes
     , xmlhtml
     }:
     mkDerivation {
       pname = "snap-web-routes";
       version = "0.5.0.0";
       sha256 = "1ml0b759k2n9bd2x4akz4dfyk8ywnpgrdlcymng4vhjxbzngnniv";
       buildDepends = [
         heist mtl snap snap-core text web-routes xmlhtml
       ];
       homepage = "https://github.com/lukerandall/snap-web-routes";
       description = "Type safe URLs for Snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-acid-state" = callPackage
    ({ mkDerivation, acid-state, snap, text }:
     mkDerivation {
       pname = "snaplet-acid-state";
       version = "0.2.6.1";
       sha256 = "0wlawnsxisslqzspa29swsdmncgx04z3rd1bhwx73mx5pksykw60";
       buildDepends = [ acid-state snap text ];
       homepage = "https://github.com/mightybyte/snaplet-acid-state";
       description = "acid-state snaplet for Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-actionlog" = callPackage
    ({ mkDerivation, blaze-builder, digestive-functors
     , digestive-functors-heist, digestive-functors-snap, errors, heist
     , persistent, persistent-postgresql, persistent-template, readable
     , restful-snap, snap, snap-extras, snaplet-persistent, text, time
     , transformers, unordered-containers, xmlhtml
     }:
     mkDerivation {
       pname = "snaplet-actionlog";
       version = "0.2.0.1";
       sha256 = "177a1b9fvlqh59hd9b5y92lq8yxv14jh79aadkyhxb4i0l5rl9vv";
       buildDepends = [
         blaze-builder digestive-functors digestive-functors-heist
         digestive-functors-snap errors heist persistent
         persistent-postgresql persistent-template readable restful-snap
         snap snap-extras snaplet-persistent text time transformers
         unordered-containers xmlhtml
       ];
       homepage = "https://github.com/soostone/snaplet-actionlog";
       description = "Generic action log snaplet for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-amqp" = callPackage
    ({ mkDerivation, amqp, configurator, lens, monad-control, mtl
     , network, resource-pool, snap, transformers
     }:
     mkDerivation {
       pname = "snaplet-amqp";
       version = "1.1.0.0";
       sha256 = "01qw28paifysk402lpb7y8dyhf401ls1l0dcn6fiigvczwxzmk91";
       buildDepends = [
         amqp configurator lens monad-control mtl network resource-pool snap
         transformers
       ];
       homepage = "https://github.com/ixmatus/snaplet-amqp";
       description = "Snap framework snaplet for the AMQP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-auth-acid" = callPackage
    ({ mkDerivation, acid-state, aeson, attoparsec, cereal
     , clientsession, errors, filepath, hashable, lens
     , MonadCatchIO-transformers, mtl, safecopy, snap, snap-core, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "snaplet-auth-acid";
       version = "0.0.1";
       sha256 = "1f6p8iqb5cq2yz6c6zdd71p6cfkvnhqkczqiyb7080xira9w5ia3";
       buildDepends = [
         acid-state aeson attoparsec cereal clientsession errors filepath
         hashable lens MonadCatchIO-transformers mtl safecopy snap snap-core
         text time unordered-containers vector
       ];
       description = "Provides an Acid-State backend for the Auth Snaplet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-coffee" = callPackage
    ({ mkDerivation, configurator, filepath, haskell-coffee, mtl, snap
     , snap-core
     }:
     mkDerivation {
       pname = "snaplet-coffee";
       version = "0.1.0.2";
       sha256 = "1kxxnk8m9154sallhy3rf8nmz0qkvchh8m761jgzhfbnnwlznpnf";
       buildDepends = [
         configurator filepath haskell-coffee mtl snap snap-core
       ];
       homepage = "https://github.com/AtticHacker/snaplet-coffee";
       description = "CoffeeScript for Snap, auto-compilation and pre-compilation";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "snaplet-css-min" = callPackage
    ({ mkDerivation, css-text, filepath, lens, snap, text, utf8-string
     }:
     mkDerivation {
       pname = "snaplet-css-min";
       version = "0.1.2";
       sha256 = "1bp6y0x03dpflbp4b1kkbxnqwsgnynbbpdgcpswwxz48xkpcp0ij";
       buildDepends = [ css-text filepath lens snap text utf8-string ];
       homepage = "https://github.com/zmthy/snaplet-css-min";
       description = "A Snaplet for CSS minification";
       license = stdenv.lib.licenses.mit;
     }) {};

  "snaplet-environments" = callPackage
    ({ mkDerivation, bson, configurator, mtl, regex-tdfa, snap
     , snap-core, text, unordered-containers
     }:
     mkDerivation {
       pname = "snaplet-environments";
       version = "0.1.1";
       sha256 = "1kk2ry19z73cmmwh3hmg87n00hqhzpmdvnb36b7yf9ck4zkhgy3h";
       buildDepends = [
         bson configurator mtl regex-tdfa snap snap-core text
         unordered-containers
       ];
       description = "DEPRECATED! You should use standard Snap >= 0.9 \"environments\" functionality. It provided ability to easly read configuration based on given app environment given at command line, envs are defined in app configuration file";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-fay" = callPackage
    ({ mkDerivation, aeson, configurator, fay, filepath, mtl, snap
     , snap-core, transformers
     }:
     mkDerivation {
       pname = "snaplet-fay";
       version = "0.3.3.8";
       sha256 = "0yzqxciva57sdf0car5rdih2dk19rr589wd35s1jz7hp5ydqj1sj";
       buildDepends = [
         aeson configurator fay filepath mtl snap snap-core transformers
       ];
       homepage = "https://github.com/faylang/snaplet-fay";
       description = "Fay integration for Snap with request- and pre-compilation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-haxl" = callPackage
    ({ mkDerivation, haxl, MonadCatchIO-transformers, snap
     , transformers
     }:
     mkDerivation {
       pname = "snaplet-haxl";
       version = "0.0.0.2";
       sha256 = "0xqz62qrhzr0ik60055w7jawxkps6cn5k6v1g7nx2zzhyvg1w4wl";
       buildDepends = [
         haxl MonadCatchIO-transformers snap transformers
       ];
       homepage = "https://github.com/ChristopherBiscardi/snaplet-haxl";
       description = "Snaplet for Facebook's Haxl";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-hdbc" = callPackage
    ({ mkDerivation, clientsession, convertible, data-lens
     , data-lens-template, HDBC, MonadCatchIO-transformers, mtl
     , resource-pool-catchio, snap, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "snaplet-hdbc";
       version = "0.9.1";
       sha256 = "17r7ailc2cnfny1ki7b027b5xipg2nvgr2yxvfh0sfzq8xkqa8ym";
       buildDepends = [
         clientsession convertible data-lens data-lens-template HDBC
         MonadCatchIO-transformers mtl resource-pool-catchio snap text time
         transformers unordered-containers
       ];
       homepage = "http://norm2782.com/";
       description = "HDBC snaplet for Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-hslogger" = callPackage
    ({ mkDerivation, configurator, hslogger, mtl, snap, transformers }:
     mkDerivation {
       pname = "snaplet-hslogger";
       version = "1.0.0.2";
       sha256 = "15cvpiz3p1qhb80sgz61mabvkb8h6j713jrny6mbg6qj945jbb0x";
       buildDepends = [ configurator hslogger mtl snap transformers ];
       homepage = "https://github.com/ixmatus/snaplet-logger";
       description = "Snap framework snaplet for the Logger API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-i18n" = callPackage
    ({ mkDerivation, configurator, filepath, heist, lens, snap
     , snap-loader-static, text, xmlhtml
     }:
     mkDerivation {
       pname = "snaplet-i18n";
       version = "0.0.5";
       sha256 = "0yl28vvk5p1qazcvb3ca3748cqzr45x9274ifcidcn13p327kck2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         configurator filepath heist lens snap snap-loader-static text
         xmlhtml
       ];
       homepage = "https://github.com/HaskellCNOrg/snaplet-i18n";
       description = "snaplet-i18n";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-influxdb" = callPackage
    ({ mkDerivation, configurator, http-client, influxdb, lens
     , monad-control, mtl, network, snap, text, transformers
     }:
     mkDerivation {
       pname = "snaplet-influxdb";
       version = "1.0.1.1";
       sha256 = "1dv800rclzl0b251bixksfl7jf28z82ql7nikf5dvginfpm71j7j";
       buildDepends = [
         configurator http-client influxdb lens monad-control mtl network
         snap text transformers
       ];
       homepage = "https://github.com/ixmatus/snaplet-influxdb";
       description = "Snap framework snaplet for the InfluxDB library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-lss" = callPackage
    ({ mkDerivation, filepath, heist, hspec-snap, hspec2, lens, lss
     , snap, text, xmlhtml
     }:
     mkDerivation {
       pname = "snaplet-lss";
       version = "0.1.0.0";
       sha256 = "0gll9r65xahx5vai4pbi0nrvscg6z964m30s58kkzy3898j000gx";
       buildDepends = [ filepath heist lss snap text xmlhtml ];
       testDepends = [ hspec-snap hspec2 lens snap text ];
       homepage = "https://github.com/dbp/lss";
       description = "Lexical Style Sheets - Snap Web Framework adaptor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-mandrill" = callPackage
    ({ mkDerivation, configurator, mandrill, mtl, network, snap
     , transformers
     }:
     mkDerivation {
       pname = "snaplet-mandrill";
       version = "0.1.0.3";
       sha256 = "0yyb0qbd14v6xw5vix08pv40w9l8p2vwvmh67sa9b4q9wkvwv962";
       buildDepends = [
         configurator mandrill mtl network snap transformers
       ];
       homepage = "https://github.com/ixmatus/snaplet-mandrill";
       description = "Snap framework snaplet for the Mandrill API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-mongoDB" = callPackage
    ({ mkDerivation, bson, compact-string-fix, haskell-src-exts
     , MonadCatchIO-transformers, mongoDB, mtl, parsec, regular, safe
     , snap, snap-core, text, time
     }:
     mkDerivation {
       pname = "snaplet-mongoDB";
       version = "0.2";
       sha256 = "0hpm2bhvb8gh4sz4dfx53s24gkkk2c234szhwbrn10bmd7hrapaw";
       buildDepends = [
         bson compact-string-fix haskell-src-exts MonadCatchIO-transformers
         mongoDB mtl parsec regular safe snap snap-core text time
       ];
       description = "Snap Framework MongoDB support as Snaplet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-mongodb-minimalistic" = callPackage
    ({ mkDerivation, lens, mongoDB, mtl, snap, text, transformers }:
     mkDerivation {
       pname = "snaplet-mongodb-minimalistic";
       version = "0.0.6.12";
       sha256 = "0d0hnn0qp4zd453wzh1d3adls68gpv28dnkr7dcmjfl4f5igdran";
       buildDepends = [ lens mongoDB mtl snap text transformers ];
       homepage = "https://github.com/Palmik/snaplet-mongodb-minimalistic";
       description = "Minimalistic MongoDB Snaplet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-mysql-simple" = callPackage
    ({ mkDerivation, clientsession, configurator, errors, lens
     , MonadCatchIO-transformers, mtl, mysql, mysql-simple
     , resource-pool-catchio, snap, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "snaplet-mysql-simple";
       version = "0.2.1.0";
       sha256 = "0hq58xsk5089kcdv2pby7dd71nb3nqzxrpppzb9qyqfz7pf45nr1";
       buildDepends = [
         clientsession configurator errors lens MonadCatchIO-transformers
         mtl mysql mysql-simple resource-pool-catchio snap text transformers
         unordered-containers
       ];
       homepage = "https://github.com/ibotty/snaplet-mysql-simple";
       description = "mysql-simple snaplet for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-oauth" = callPackage
    ({ mkDerivation, aeson, bytestring-show, data-lens
     , data-lens-template, failure, hashable, heist, hoauth2
     , http-conduit, http-types, HUnit, MonadCatchIO-mtl, snap
     , snap-core, snap-loader-dynamic, snap-loader-static
     , test-framework, test-framework-hunit, text, unordered-containers
     }:
     mkDerivation {
       pname = "snaplet-oauth";
       version = "0.0.6";
       sha256 = "177yspz91nlzz9pw9x9zh4s4q7z7w9kl8gg5fd285xbadxazp3yl";
       buildDepends = [
         aeson bytestring-show data-lens data-lens-template failure hashable
         heist hoauth2 http-conduit http-types MonadCatchIO-mtl snap
         snap-core snap-loader-dynamic snap-loader-static text
         unordered-containers
       ];
       testDepends = [
         aeson bytestring-show HUnit test-framework test-framework-hunit
         text
       ];
       homepage = "https://github.com/HaskellCNOrg/snaplet-oauth";
       description = "snaplet-oauth";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-persistent" = callPackage
    ({ mkDerivation, clientsession, configurator, errors, heist, lens
     , monad-logger, MonadCatchIO-transformers, mtl, persistent
     , persistent-postgresql, persistent-template, readable
     , resource-pool, resourcet, safe, snap, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "snaplet-persistent";
       version = "0.4.1";
       sha256 = "0z4q4qwn4is96a8ld5dx82nb653ijjl8zsr72di50y9w8wvd0y10";
       buildDepends = [
         clientsession configurator errors heist lens monad-logger
         MonadCatchIO-transformers mtl persistent persistent-postgresql
         persistent-template readable resource-pool resourcet safe snap text
         time transformers unordered-containers
       ];
       homepage = "https://github.com/soostone/snaplet-persistent";
       description = "persistent snaplet for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-postgresql-simple" = callPackage
    ({ mkDerivation, clientsession, configurator, errors, lens
     , MonadCatchIO-transformers, mtl, postgresql-simple
     , resource-pool-catchio, snap, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "snaplet-postgresql-simple";
       version = "0.6";
       sha256 = "042mpyj84d089pr2qjix9fvzfj4ir74kjkdx3jg84jwn602lhzi6";
       buildDepends = [
         clientsession configurator errors lens MonadCatchIO-transformers
         mtl postgresql-simple resource-pool-catchio snap text transformers
         unordered-containers
       ];
       homepage = "https://github.com/mightybyte/snaplet-postgresql-simple";
       description = "postgresql-simple snaplet for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-postmark" = callPackage
    ({ mkDerivation, configurator, mtl, postmark, snap, text
     , transformers
     }:
     mkDerivation {
       pname = "snaplet-postmark";
       version = "0.2.0";
       sha256 = "0006i88ssgh6z9g967wlw0km8abxmxdjjs7aalsddzla6xdp8wnx";
       buildDepends = [
         configurator mtl postmark snap text transformers
       ];
       homepage = "https://github.com/LukeHoersten/snaplet-postmark";
       description = "Postmark snaplet for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-recaptcha" = callPackage
    ({ mkDerivation, aeson, blaze-builder, configurator, heist
     , http-conduit, lens, MonadCatchIO-transformers, mtl, snap, text
     }:
     mkDerivation {
       pname = "snaplet-recaptcha";
       version = "1.0.1";
       sha256 = "05d5070z9ljxfp353q7q5nl46c7wx4bnsjm3hiw2258bnz2ih185";
       buildDepends = [
         aeson blaze-builder configurator heist http-conduit lens
         MonadCatchIO-transformers mtl snap text
       ];
       homepage = "http://github.com/mikeplus64/snaplet-recaptcha";
       description = "A ReCAPTCHA verification snaplet with Heist integration and connection sharing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-redis" = callPackage
    ({ mkDerivation, configurator, hedis, lens, mtl, network, snap
     , text, transformers
     }:
     mkDerivation {
       pname = "snaplet-redis";
       version = "0.1.4.1";
       sha256 = "0vrsvmgrds7l4q88q7gmy1bz36z5ba45rib2vm5z6v2cf0x22qz2";
       buildDepends = [
         configurator hedis lens mtl network snap text transformers
       ];
       homepage = "https://github.com/dzhus/snaplet-redis/";
       description = "Redis support for Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-redson" = callPackage
    ({ mkDerivation, aeson, configurator, data-lens, data-lens-template
     , easy-file, hedis, mtl, snap, snap-core, snaplet-redis, text
     , utf8-string, websockets, websockets-snap
     }:
     mkDerivation {
       pname = "snaplet-redson";
       version = "0.1.0.0";
       sha256 = "0pvan8fnddn27cps5x8gyrwmm88z96jjh124i9g3mi9aqpyx8z5d";
       buildDepends = [
         aeson configurator data-lens data-lens-template easy-file hedis mtl
         snap snap-core snaplet-redis text utf8-string websockets
         websockets-snap
       ];
       homepage = "https://github.com/dzhus/snaplet-redson/";
       description = "CRUD for JSON data with Redis storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-rest" = callPackage
    ({ mkDerivation, aeson, blaze-builder, case-insensitive, http-media
     , lens, mtl, snap, snap-accept, snap-core, text, utf8-string
     , xmlhtml
     }:
     mkDerivation {
       pname = "snaplet-rest";
       version = "0.1.0";
       sha256 = "1w1cy5zisn0mxj6rrz7wrw31ariia006cjxqwh9ahds6iwqh40y1";
       buildDepends = [
         aeson blaze-builder case-insensitive http-media lens mtl snap
         snap-accept snap-core text utf8-string xmlhtml
       ];
       homepage = "http://github.com/zimothy/snaplet-rest";
       description = "REST resources for the Snap web framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "snaplet-riak" = callPackage
    ({ mkDerivation, aeson, data-lens, data-lens-template, mtl, riak
     , riak-protobuf, snap, snap-core, time, transformers
     }:
     mkDerivation {
       pname = "snaplet-riak";
       version = "0.2.0.0";
       sha256 = "0q0mnk0cl31xidax6bahvwabm9341p5852939yzgbam72mcv8jh0";
       buildDepends = [
         aeson data-lens data-lens-template mtl riak riak-protobuf snap
         snap-core time transformers
       ];
       homepage = "http://github.com/statusfailed/snaplet-riak";
       description = "A Snaplet for the Riak database";
       license = stdenv.lib.licenses.mit;
     }) {};

  "snaplet-sass" = callPackage
    ({ mkDerivation, configurator, filepath, mtl, snap, snap-core
     , transformers
     }:
     mkDerivation {
       pname = "snaplet-sass";
       version = "0.1.0.0";
       sha256 = "0wv9a7pa6r7nzgppbywasqy38zk79ann2ivwyyh2b9dny95mx5yd";
       buildDepends = [
         configurator filepath mtl snap snap-core transformers
       ];
       homepage = "https://github.com/lukerandall/snaplet-sass";
       description = "Sass integration for Snap with request- and pre-compilation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-sedna" = callPackage
    ({ mkDerivation, monad-control, mtl, resource-pool, sednaDBXML
     , snap
     }:
     mkDerivation {
       pname = "snaplet-sedna";
       version = "0.0.1.0";
       sha256 = "1rd0ymsnanf3nk02cim8lm9gppm739jfi2x6fzmp10xs9wmlhqab";
       buildDepends = [ monad-control mtl resource-pool sednaDBXML snap ];
       description = "Snaplet for Sedna Bindings. Essentailly a rip of snaplet-hdbc.";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "snaplet-ses-html" = callPackage
    ({ mkDerivation, blaze-html, configurator, ses-html, snap, text
     , transformers
     }:
     mkDerivation {
       pname = "snaplet-ses-html";
       version = "0.1.0.0";
       sha256 = "14q577mnyf9r113v4sbfcpqlfd47wcdnbwvz70w5bqp996627jyl";
       buildDepends = [
         blaze-html configurator ses-html snap text transformers
       ];
       description = "Snaplet for the ses-html package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-sqlite-simple" = callPackage
    ({ mkDerivation, aeson, clientsession, configurator, direct-sqlite
     , errors, HUnit, lens, MonadCatchIO-transformers, mtl
     , SafeSemaphore, snap, snap-core, sqlite-simple, stm
     , test-framework, test-framework-hunit, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "snaplet-sqlite-simple";
       version = "0.4.8.2";
       sha256 = "00a92wymniaw0si4xpkx1442prmcjimwrjjqiqnkj6k8bxs7p2jm";
       buildDepends = [
         aeson clientsession configurator direct-sqlite
         MonadCatchIO-transformers mtl snap sqlite-simple text transformers
         unordered-containers
       ];
       testDepends = [
         aeson clientsession configurator errors HUnit lens
         MonadCatchIO-transformers mtl SafeSemaphore snap snap-core
         sqlite-simple stm test-framework test-framework-hunit text time
         transformers unordered-containers
       ];
       homepage = "https://github.com/nurpax/snaplet-sqlite-simple";
       description = "sqlite-simple snaplet for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-stripe" = callPackage
    ({ mkDerivation, configurator, heist, lens-family-core, mtl, snap
     , stripe, text, text-format, transformers, xmlhtml
     }:
     mkDerivation {
       pname = "snaplet-stripe";
       version = "0.3.0";
       sha256 = "0j85vzfmw6skag8rfww4gsg1lyfc7qbxiqhmwbsh4vfjiagrc9wp";
       buildDepends = [
         configurator heist lens-family-core mtl snap stripe text
         text-format transformers xmlhtml
       ];
       homepage = "https://github.com/LukeHoersten/snaplet-stripe";
       description = "Stripe snaplet for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-tasks" = callPackage
    ({ mkDerivation, curl, data-hash, MissingH, mtl, network, snap
     , snap-core
     }:
     mkDerivation {
       pname = "snaplet-tasks";
       version = "0.1.2";
       sha256 = "0wkhjjjmd08jbhp41j6xvcvg3g7c74cz18mm89k8alwfc50krvc0";
       buildDepends = [
         curl data-hash MissingH mtl network snap snap-core
       ];
       description = "Snaplet for Snap Framework enabling developers to administrative tasks akin to Rake tasks from Ruby On Rails framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snaplet-typed-sessions" = callPackage
    ({ mkDerivation, cereal, clientsession, hashtables, mtl, PSQueue
     , random, regex-posix, snap, snap-core, time
     }:
     mkDerivation {
       pname = "snaplet-typed-sessions";
       version = "0.5";
       sha256 = "0gc6vnxsbwgciv281p6jff8ylcni4qpkmak2zqz710in86grjbgw";
       buildDepends = [
         cereal clientsession hashtables mtl PSQueue random regex-posix snap
         snap-core time
       ];
       description = "Typed session snaplets and continuation-based programming for the Snap web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snappy" = callPackage
    ({ mkDerivation, QuickCheck, snappy, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "snappy";
       version = "0.2.0.2";
       sha256 = "14fdx0fikkd9krpzqrvas6mjqmmhmh0qwqzvz1kymil7d8rdyr85";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       extraLibraries = [ snappy ];
       homepage = "http://github.com/bos/snappy";
       description = "Bindings to the Google Snappy library for fast compression/decompression";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) snappy; };

  "snappy-framing" = callPackage
    ({ mkDerivation, binary, snappy }:
     mkDerivation {
       pname = "snappy-framing";
       version = "0.1.0";
       sha256 = "1m7zk4ns8igh2717d77k4zvf06byp35dly3ykawaz9hxwsxn1jb2";
       buildDepends = [ binary snappy ];
       homepage = "https://github.com/kim/snappy-framing";
       description = "Snappy Framing Format in Haskell";
       license = "unknown";
     }) {};

  "snappy-iteratee" = callPackage
    ({ mkDerivation, iteratee, snappy }:
     mkDerivation {
       pname = "snappy-iteratee";
       version = "0.1";
       sha256 = "17jwsvw7ik2bjanmzw4h72mdjaz031b5a6hi7cjz4ba1yjkiqnmk";
       buildDepends = [ iteratee snappy ];
       homepage = "http://github.com/iand675/snappy-iteratee";
       description = "An enumeratee that uses Google's snappy compression library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sndfile-enumerators" = callPackage
    ({ mkDerivation, binary, filepath, iteratee, listlike-instances
     , MonadCatchIO-transformers, transformers, vector, word24
     }:
     mkDerivation {
       pname = "sndfile-enumerators";
       version = "0.10.0.0";
       sha256 = "1nnlbhnm88xy462sh3d54b751ndl0r2qggbxn2irrwqdnhc21v4r";
       buildDepends = [
         binary filepath iteratee listlike-instances
         MonadCatchIO-transformers transformers vector word24
       ];
       homepage = "http://www.tiresiaspress.us/haskell/sndfile-enumerators";
       description = "Audio file reading/writing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snippet-extractor" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "snippet-extractor";
       version = "0.2.0";
       sha256 = "0iyya6p5i5jrhvah45bcvqgldfx49qv8393vwi5k413vxjr7c3zm";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parsec ];
       description = "Extracts labeled snippets of code to files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snm" = callPackage
    ({ mkDerivation, filepath, HsSyck, parsec, safe, spoonutil, xhtml
     }:
     mkDerivation {
       pname = "snm";
       version = "0.0.4";
       sha256 = "1n2cj35qrp6a766w29qrqcpcrv81xcpk9agkbibxngxh03abyhji";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath HsSyck parsec safe spoonutil xhtml ];
       homepage = "http://github.com/elginer/snm";
       description = "The Simple Nice-Looking Manual Generator";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "snmp" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, async
     , binary, cipher-aes, cipher-des, crypto-cipher-types, cryptohash
     , mtl, network, network-info, random, securemem, text, time
     }:
     mkDerivation {
       pname = "snmp";
       version = "0.1.0.2";
       sha256 = "0w7fzkbbfdn5kkkvr0i06bk34mbwscxph38l2l3xxn2ggn8xwkfs";
       buildDepends = [
         asn1-encoding asn1-parse asn1-types async binary cipher-aes
         cipher-des crypto-cipher-types cryptohash mtl network network-info
         random securemem text time
       ];
       description = "API for write snmp client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snow-white" = callPackage
    ({ mkDerivation, binary, mps }:
     mkDerivation {
       pname = "snow-white";
       version = "2009.12.1";
       sha256 = "007hzr8dpj0mhvmnpdg0gi296q3mlicnx36s6hmgifzmyaa8kssi";
       buildDepends = [ binary mps ];
       homepage = "http://github.com/nfjinjing/snow-white";
       description = "encode any binary instance to white space";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snowball" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, quickcheck-instances
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, text, text-icu
     }:
     mkDerivation {
       pname = "snowball";
       version = "1.0.0.1";
       sha256 = "0fvxzm14ffjqq6n51bi5cmq5yrlggpkbb9rbbw522l6cjgv0apbx";
       buildDepends = [ text text-icu ];
       testDepends = [
         HUnit QuickCheck quickcheck-instances test-framework-hunit
         test-framework-quickcheck2 test-framework-th text
       ];
       homepage = "http://hub.darcs.net/dag/snowball";
       description = "Bindings to the Snowball library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "snowflake" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "snowflake";
       version = "0.1.1.0";
       sha256 = "139chvzj0caxglid92njs8jaxyxmyqcvqnf6yi4d8vzpbcrly29w";
       buildDepends = [ time ];
       description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "snowglobe" = callPackage
    ({ mkDerivation, gl-capture, GLUT, hmatrix, OpenGLRaw, random }:
     mkDerivation {
       pname = "snowglobe";
       version = "2";
       sha256 = "1apjycbl5a46wm6f20nd4l7caggz0y25fzxjz52n1xp6b8kzpwd6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gl-capture GLUT hmatrix OpenGLRaw random ];
       description = "randomized fractal snowflakes demo";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "soap" = callPackage
    ({ mkDerivation, conduit, configurator, data-default, exceptions
     , hspec, http-client, http-types, HUnit, iconv, mtl, resourcet
     , text, unordered-containers, xml-conduit, xml-conduit-writer
     , xml-types
     }:
     mkDerivation {
       pname = "soap";
       version = "0.2.2.4";
       sha256 = "03zqbdmk44jds6sqaq90rr5zprnrw524c084jndl9hgq4gd4d39c";
       editedCabalFile = "0k48q82kia572f8s6c90zqvi5ph3a1i99cdcf6amk7rcpyifg695";
       buildDepends = [
         conduit configurator data-default exceptions http-client http-types
         iconv mtl resourcet text unordered-containers xml-conduit
         xml-conduit-writer xml-types
       ];
       testDepends = [
         hspec HUnit text unordered-containers xml-conduit
         xml-conduit-writer
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "SOAP client tools";
       license = stdenv.lib.licenses.mit;
     }) {};

  "soap-openssl" = callPackage
    ({ mkDerivation, configurator, data-default, HsOpenSSL, http-client
     , http-client-openssl, soap, text
     }:
     mkDerivation {
       pname = "soap-openssl";
       version = "0.1.0.1";
       sha256 = "0b0d15nvg9qhf0ccsmw53qpcnxsw2cqslkmfzr1hw90whzaw3l5h";
       buildDepends = [
         configurator data-default HsOpenSSL http-client http-client-openssl
         soap text
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using openssl bindings)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "soap-tls" = callPackage
    ({ mkDerivation, configurator, connection, data-default
     , http-client, http-client-tls, soap, text, tls, x509, x509-store
     , x509-validation
     }:
     mkDerivation {
       pname = "soap-tls";
       version = "0.1.1.1";
       sha256 = "1vcmpcq7yw65v90cg1v279mvyvrvibi6zf71vf7d21jzxpldskih";
       buildDepends = [
         configurator connection data-default http-client http-client-tls
         soap text tls x509 x509-store x509-validation
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using tls package)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sock2stream" = callPackage
    ({ mkDerivation, binary, network }:
     mkDerivation {
       pname = "sock2stream";
       version = "0.3";
       sha256 = "1vnrjza4x4jqlvz7mmihrjbdf4ngw02fkkn1j768w81m814vny7h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary network ];
       homepage = "https://github.com/singpolyma/sock2stream";
       description = "Tunnel a socket over a single datastream (stdin/stdout)";
       license = "unknown";
     }) {};

  "sockaddr" = callPackage
    ({ mkDerivation, byteorder, network }:
     mkDerivation {
       pname = "sockaddr";
       version = "0.0.0";
       sha256 = "1h74k5pipv9314y1d2wgpwgvyxfp6pcnq5051fdqr1shqlkpwbs2";
       buildDepends = [ byteorder network ];
       description = "Printing SockAddr";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "socket-activation" = callPackage
    ({ mkDerivation, network, transformers }:
     mkDerivation {
       pname = "socket-activation";
       version = "0.1.0.1";
       sha256 = "109zxc16zlp98ggc99ap7wbzaa40yg34v3abn2nfs0w49dvh1zma";
       buildDepends = [ network transformers ];
       homepage = "https://github.com/sakana/haskell-socket-activation";
       description = "systemd socket activation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "socket-io" = callPackage
    ({ mkDerivation, aeson, attoparsec, engine-io, mtl, stm, text
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "socket-io";
       version = "1.2.0";
       sha256 = "1271qmd83q669dcs6ni0f84i5kgvh8vgr4xgx2lcprirbzkx0gdl";
       buildDepends = [
         aeson attoparsec engine-io mtl stm text transformers
         unordered-containers vector
       ];
       homepage = "http://github.com/ocharles/engine.io";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "socketio" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, attoparsec, blaze-builder
     , conduit, conduit-extra, http-types, HUnit, lifted-base
     , monad-control, mtl, QuickCheck, random, scientific
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, transformers-base, unordered-containers, vector, wai, warp
     }:
     mkDerivation {
       pname = "socketio";
       version = "0.1.3";
       sha256 = "19rwkix7fjj3znd7z5bzknnpcfkmkmpcmrksv3q51b9fwph8gwrq";
       buildDepends = [
         aeson ansi-terminal attoparsec blaze-builder conduit conduit-extra
         http-types lifted-base monad-control mtl random text
         transformers-base unordered-containers vector wai warp
       ];
       testDepends = [
         aeson ansi-terminal attoparsec blaze-builder conduit conduit-extra
         http-types HUnit lifted-base monad-control mtl QuickCheck random
         scientific test-framework test-framework-hunit
         test-framework-quickcheck2 text transformers-base
         unordered-containers vector wai warp
       ];
       description = "Socket.IO server";
       license = stdenv.lib.licenses.mit;
     }) {};

  "socks" = callPackage
    ({ mkDerivation, cereal, network }:
     mkDerivation {
       pname = "socks";
       version = "0.5.4";
       sha256 = "1nmldlwxqasmg359i2aa3a903gi3lmnlspvf12xk49jrg3mf3dg9";
       buildDepends = [ cereal network ];
       homepage = "http://github.com/vincenthz/hs-socks";
       description = "Socks proxy (version 5) implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sodium" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "sodium";
       version = "0.11.0.2";
       sha256 = "0m3ig6nqkw0m6xh6ijgr2w06i4ydyfwx7rsbkrrxflichadm9r2g";
       buildDepends = [ mtl ];
       description = "Sodium Reactive Programming (FRP) System";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "soegtk" = callPackage
    ({ mkDerivation, cairo, gtk, stm }:
     mkDerivation {
       pname = "soegtk";
       version = "0.12.1";
       sha256 = "01f49hwxc5h85iwzgnddxlh1lmb3s27zddmghxrlq958gcrr2iar";
       buildDepends = [ cairo gtk stm ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "GUI functions as used in the book \"The Haskell School of Expression\"";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "som" = callPackage
    ({ mkDerivation, grid, MonadRandom, QuickCheck, random
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "som";
       version = "7.4.1";
       sha256 = "1j75mh09rwd28xvmpxrn64aq3ghflrxba8wdwsxlafxj84cc2idq";
       buildDepends = [ grid MonadRandom ];
       testDepends = [
         grid MonadRandom QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/mhwombat/som";
       description = "Self-Organising Maps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sonic-visualiser" = callPackage
    ({ mkDerivation, bzlib, mtl, utf8-string, xml }:
     mkDerivation {
       pname = "sonic-visualiser";
       version = "0.1.1";
       sha256 = "0gihsk7szq27ihhy9idiaslv164by23c9c70fhzwyqx3wk7z1aip";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ bzlib mtl utf8-string xml ];
       homepage = "http://darcs.k-hornz.de/cgi-bin/darcsweb.cgi?r=sonic-visualiser;a=summary";
       description = "Sonic Visualiser";
       license = "GPL";
     }) {};

  "sophia" = callPackage
    ({ mkDerivation, bindings-sophia, tasty, tasty-hunit }:
     mkDerivation {
       pname = "sophia";
       version = "0.1.2";
       sha256 = "18svfy0ald8cz03vfv3m43w777rxksmaz0713a1vzcmyfb6h5iwg";
       buildDepends = [ bindings-sophia ];
       testDepends = [ bindings-sophia tasty tasty-hunit ];
       description = "Bindings to Sophia library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sort-by-pinyin" = callPackage
    ({ mkDerivation, air, air-extra, air-th, text }:
     mkDerivation {
       pname = "sort-by-pinyin";
       version = "2014.5.19";
       sha256 = "1ksfx5zhagg2y8virg8am1w8ljrzc9ddmf7xgvi5gx88zibi32fd";
       buildDepends = [ air air-extra air-th text ];
       homepage = "https://github.com/nfjinjing/sort-by-pinyin";
       description = "Sort simplified Chinese by PinYin";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sorted" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sorted";
       version = "0.0.1";
       sha256 = "0rzcxhzc4s4sbdnysmjh1i8pd39jyx7a4hbhkarsp2qbx29s4h03";
       description = "Efficient, type-safe sorted sequences";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sorty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sorty";
       version = "0.1.1";
       sha256 = "04bripdlc90rlkv5q6p44j10n7c1zdwv0ibiq5p365xijgribfaq";
       isLibrary = false;
       isExecutable = true;
       description = "Sort lines per file size";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sounddelay" = callPackage
    ({ mkDerivation, parseargs, WAVE }:
     mkDerivation {
       pname = "sounddelay";
       version = "0.1.0.2";
       sha256 = "1mqa70zbhpw860hclns4y8pri6d9swahzbhac7jhzrwq4vyia9xj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parseargs WAVE ];
       homepage = "http://github.com/BartMassey/sounddelay";
       description = "Audio delay line";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "source-code-server" = callPackage
    ({ mkDerivation, curl, data-default, filepath, hack, hack-contrib
     , hack-handler-happstack, HDBC, HDBC-sqlite3, json, loli, mps, mtl
     , safe, StateVar, stm, time
     }:
     mkDerivation {
       pname = "source-code-server";
       version = "2010.9.1";
       sha256 = "1934awipc837mdhkfa3ghmljxk0vb16wd4f31qdl4q9nxgwfv6c8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         curl data-default filepath hack hack-contrib hack-handler-happstack
         HDBC HDBC-sqlite3 json loli mps mtl safe StateVar stm time
       ];
       homepage = "http://github.com/nfjinjing/source-code-server";
       description = "The server backend for the source code iPhone app";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sourcemap" = callPackage
    ({ mkDerivation, aeson, attoparsec, text, unordered-containers
     , utf8-string
     }:
     mkDerivation {
       pname = "sourcemap";
       version = "0.1.3.0";
       sha256 = "1flfsjs2z2zjzqwvmc2vcibvxh19s89ah4s560xr2s5mhdqwbkk5";
       buildDepends = [
         aeson attoparsec text unordered-containers utf8-string
       ];
       description = "Implementation of source maps as proposed by Google and Mozilla";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sousit" = callPackage
    ({ mkDerivation, cereal, mtl, QuickCheck, resourcet, stm
     , test-framework, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "sousit";
       version = "0.4";
       sha256 = "0vfgl4l3zwfsb2p5fds47bikyvfcsypmbjd1yvkjvi36x2g3pzwr";
       buildDepends = [ cereal mtl resourcet stm transformers ];
       testDepends = [
         mtl QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/msiegenthaler/SouSiT";
       description = "Source/Sink/Transform: An alternative to lazy IO and iteratees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sox" = callPackage
    ({ mkDerivation, explicit-exception, extensible-exceptions
     , sample-frame, transformers, utility-ht
     }:
     mkDerivation {
       pname = "sox";
       version = "0.2.2.5";
       sha256 = "19jczxackqhbi85i0i3jl26ng34a9hkfw73jlfscfl8xjqc0j99n";
       buildDepends = [
         explicit-exception extensible-exceptions sample-frame transformers
         utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Sox";
       description = "Play, write, read, convert audio signals using Sox";
       license = "GPL";
     }) {};

  "soxlib" = callPackage
    ({ mkDerivation, explicit-exception, extensible-exceptions
     , sample-frame, sox, storablevector, transformers, utility-ht
     }:
     mkDerivation {
       pname = "soxlib";
       version = "0.0.1.1";
       sha256 = "0bc4s74f2sw32j17pihpq0liyaysi4n5i2704ycn5agsgnc0n8xp";
       buildDepends = [
         explicit-exception extensible-exceptions sample-frame
         storablevector transformers utility-ht
       ];
       pkgconfigDepends = [ sox ];
       homepage = "http://www.haskell.org/haskellwiki/Sox";
       description = "Write, read, convert audio signals using libsox";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) sox; };

  "soyuz" = callPackage
    ({ mkDerivation, cereal, cmdargs, QuickCheck, trifecta, uniplate
     , vector
     }:
     mkDerivation {
       pname = "soyuz";
       version = "0.0.0";
       sha256 = "1w8adkrics3jp8lc1gwjiwn4i94yfzxba13wf65qywhmdr9lcy3p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cereal cmdargs QuickCheck trifecta uniplate vector
       ];
       homepage = "https://github.com/amtal/0x10c";
       description = "DCPU-16 architecture utilities for Notch's 0x10c game";
       license = stdenv.lib.licenses.mit;
     }) {};

  "spacepart" = callPackage
    ({ mkDerivation, vector-space }:
     mkDerivation {
       pname = "spacepart";
       version = "0.1.0.0";
       sha256 = "118wch92ix54jp1hi4qw9mk46571lnak4df8ji83bs2vz3vax6jp";
       buildDepends = [ vector-space ];
       homepage = "http://code.haskell.org/data-spacepart";
       description = "Space partition data structures. Currently only a QuadTree.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sparse" = callPackage
    ({ mkDerivation, contravariant, deepseq, doctest, filepath, hlint
     , hybrid-vectors, lens, linear, mtl, primitive, QuickCheck
     , semigroups, simple-reflect, test-framework
     , test-framework-quickcheck2, test-framework-th, transformers
     , vector, vector-algorithms
     }:
     mkDerivation {
       pname = "sparse";
       version = "0.9.1";
       sha256 = "1pa1h21ca710fdjz60b79jg0v2lr0l11avpiynp9n1cw5bz137fk";
       buildDepends = [
         contravariant deepseq hybrid-vectors lens primitive transformers
         vector vector-algorithms
       ];
       testDepends = [
         deepseq doctest filepath hlint hybrid-vectors lens linear mtl
         QuickCheck semigroups simple-reflect test-framework
         test-framework-quickcheck2 test-framework-th transformers vector
       ];
       homepage = "http://github.com/ekmett/sparse";
       description = "A playground of sparse linear algebra primitives using Morton ordering";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sparse-lin-alg" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "sparse-lin-alg";
       version = "0.4.3";
       sha256 = "1255q13mb6196i3hv1i41agifg1x1840z535mx48jjkln297gmc9";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/laughedelic/sparse-lin-alg";
       description = "Effective linear algebra on sparse matrices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sparsebit" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sparsebit";
       version = "0.5";
       sha256 = "1a4gsnmr1y8b05iws2vrmjqbs5y9svfsz0jb3k19dddn1aszzm07";
       homepage = "http://kyagrd.dyndns.org/wiki/SparseBitmapsForPatternMatchCoverage";
       description = "Sparse bitmaps for pattern match coverage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sparsecheck" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sparsecheck";
       version = "0.1.0.3";
       sha256 = "19h9vy7arhi35rqafbq3nf9a50vnlw5mbfwvl6sp1j61w0yxai95";
       homepage = "http://www.cs.york.ac.uk/~mfn/sparsecheck/";
       description = "A Logic Programming Library for Test-Data Generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sparser" = callPackage
    ({ mkDerivation, data-default, monadplus, nats, pointed, semigroups
     }:
     mkDerivation {
       pname = "sparser";
       version = "0.6.1";
       sha256 = "1mhnjlsqmvvwnh35dzrms9vsdvr563aq49qhwg35pvscsia2fpr2";
       buildDepends = [ data-default monadplus nats pointed semigroups ];
       description = "Lightweight parsing library based on partial functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spata" = callPackage
    ({ mkDerivation, dlist, mps, mtl }:
     mkDerivation {
       pname = "spata";
       version = "2010.10.10";
       sha256 = "1cr0d82l2b96jvszca4yavdgwq450yzigcyrrlddrf9m9908kkzy";
       buildDepends = [ dlist mps mtl ];
       homepage = "http://github.com/nfjinjing/spata";
       description = "brainless form validation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spatial-math" = callPackage
    ({ mkDerivation, cereal, doctest, linear }:
     mkDerivation {
       pname = "spatial-math";
       version = "0.2.1.0";
       sha256 = "0s6ica55d3gv3y1iwinbk3pd8i8647p8gizrfh4wnsdy908n0qqv";
       buildDepends = [ cereal linear ];
       testDepends = [ doctest ];
       description = "3d math including quaternions/euler angles/dcms and utility functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spawn" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "spawn";
       version = "0.3";
       sha256 = "0xkkl0w30rqif2jwdzjv239raly4yaf0116vkqcwh1i41jqn7ij8";
       description = "Tiny library for concurrent computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spe" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "spe";
       version = "0.6.3";
       sha256 = "02cq8f9yz5z3rwkcj4nj8dgzwnn2w3b1jpndmmcqwsjymmivy8fr";
       homepage = "http://github.com/akc/spe";
       description = "Combinatorial species lite";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "special-functors" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "special-functors";
       version = "1.0.0.1";
       sha256 = "0c68af104qxn9lhzshcy9s466q10n3ic7q4navqi53mmmmznivrd";
       buildDepends = [ mtl ];
       description = "Control.Applicative, Data.Foldable, Data.Traversable (compatibility package)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "special-keys" = callPackage
    ({ mkDerivation, aeson, blaze-markup, cereal, deepseq, hashable
     , mwc-random, path-pieces, primitive, safecopy, text, uuid
     }:
     mkDerivation {
       pname = "special-keys";
       version = "0.1.0.3";
       sha256 = "0r66rzyh9m9wsy8mhyq09ar0zbalfyr627z9xrxny8242nbsygpy";
       buildDepends = [
         aeson blaze-markup cereal deepseq hashable mwc-random path-pieces
         primitive safecopy text uuid
       ];
       description = "Simple data types that help me here and there";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "specialize-th" = callPackage
    ({ mkDerivation, checkers, composition, DebugTraceHelpers, derive
     , HUnit, MissingH, mtl, newtype, newtype-th, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , th-expand-syns, tuple, type-sub-th, uniplate, universe-th
     }:
     mkDerivation {
       pname = "specialize-th";
       version = "0.0.0.8";
       sha256 = "1b9bs08zja8id739zf0q47y91aq10gjr1ikbf7rvzav9i3w6djnc";
       buildDepends = [
         composition derive MissingH mtl newtype newtype-th th-expand-syns
         tuple type-sub-th uniplate universe-th
       ];
       testDepends = [
         checkers composition DebugTraceHelpers derive HUnit MissingH mtl
         newtype newtype-th QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 th-expand-syns type-sub-th uniplate
         universe-th
       ];
       homepage = "https://github.com/jfischoff/specialize-th";
       description = "Create specialized types from polymorphic ones using TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "species" = callPackage
    ({ mkDerivation, multiset-comb, np-extras, numeric-prelude }:
     mkDerivation {
       pname = "species";
       version = "0.3.2.3";
       sha256 = "1ip6q92l95jgqa2vbws4440n4qqn2cf785pbwd9g58zpx9wvi9ai";
       buildDepends = [ multiset-comb np-extras numeric-prelude ];
       homepage = "http://www.cis.upenn.edu/~byorgey/species";
       description = "Computational combinatorial species";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "speculation" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "speculation";
       version = "1.5.0.1";
       sha256 = "1kjshccmfnigb2dxq0czn3c1ckdflz6bl1q60h38qp3rc7250ml0";
       buildDepends = [ stm transformers ];
       homepage = "http://github.com/ekmett/speculation";
       description = "A framework for safe, programmable, speculative parallelism";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "speculation-transformers" = callPackage
    ({ mkDerivation, speculation }:
     mkDerivation {
       pname = "speculation-transformers";
       version = "0.1.2";
       sha256 = "0050iy5q9m1ylkhbbnpff7yl99917pa46pgvj76isij4lvdl4f5a";
       buildDepends = [ speculation ];
       homepage = "http://github.com/ekmett/speculation/";
       description = "Merged into 'speculation'. Use that instead.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spelling-suggest" = callPackage
    ({ mkDerivation, edit-distance, parseargs, phonetic-code, sqlite }:
     mkDerivation {
       pname = "spelling-suggest";
       version = "0.5.2.1";
       sha256 = "0n0b2lbvj3pjg841pdw7pb09cpkz2d186dd4pmabjnm6r6wabm2n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ edit-distance parseargs phonetic-code sqlite ];
       homepage = "https://github.com/gregwebs/haskell-spell-suggest";
       description = "Spelling suggestion tool with library and command-line interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sphero" = callPackage
    ({ mkDerivation, cereal, mtl, simple-bluetooth }:
     mkDerivation {
       pname = "sphero";
       version = "0.1.0.0";
       sha256 = "1b5i6zpp3xz8jcvs44g97iyam5vcig3fpy0hcsldg51cm762sv48";
       buildDepends = [ cereal mtl simple-bluetooth ];
       description = "Orbotix Sphero client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sphinx" = callPackage
    ({ mkDerivation, binary, data-binary-ieee754, network, text
     , text-icu, xml
     }:
     mkDerivation {
       pname = "sphinx";
       version = "0.6.0.1";
       sha256 = "1pcm4y9k5lc00805ddv519cx4j3qld2v1dnbckg38n9dyp96wj98";
       buildDepends = [
         binary data-binary-ieee754 network text text-icu xml
       ];
       homepage = "https://github.com/gregwebs/haskell-sphinx-client";
       description = "Haskell bindings to the Sphinx full-text searching daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sphinx-cli" = callPackage
    ({ mkDerivation, sphinx }:
     mkDerivation {
       pname = "sphinx-cli";
       version = "0.1";
       sha256 = "08fqfmd6462skjywv2j4ilnmpbzr28d6vwmb187w3sv0byvvjzw3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ sphinx ];
       description = "Sphinx CLI and demo of Haskell Sphinx library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spice" = callPackage
    ({ mkDerivation, data-default, elerea, GLFW, JuicyPixels
     , JuicyPixels-repa, OpenGL
     }:
     mkDerivation {
       pname = "spice";
       version = "0.5.0.0";
       sha256 = "1xs09ipg9l38nq3kxpdyv6643ywivhw87w6il0q9bzhng4rpfj6g";
       buildDepends = [
         data-default elerea GLFW JuicyPixels JuicyPixels-repa OpenGL
       ];
       homepage = "http://github.com/crockeo/spice";
       description = "An FRP-based game engine written in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "spike" = callPackage
    ({ mkDerivation, filepath, glib, global-variables, gtk, libsoup
     , mtl, random, rosezipper, stm, webkit
     }:
     mkDerivation {
       pname = "spike";
       version = "0.3";
       sha256 = "11xr80fmbd6ps79fyzb40ha1gw4crxr8gff2nk39spj0sj64jqdn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath glib global-variables gtk mtl random rosezipper stm webkit
       ];
       pkgconfigDepends = [ libsoup ];
       homepage = "http://github.com/Tener/spike";
       description = "Experimental web browser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spine" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "spine";
       version = "0.1";
       sha256 = "1sk2vkslcbmr4z87xc7q38ywbj118bcgqrkz9fqsp7jffxvy4bgv";
       homepage = "https://github.com/spl/spine";
       description = "Simple implementation of the generic spine view";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "splaytree" = callPackage
    ({ mkDerivation, deepseq, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "splaytree";
       version = "0.1.5";
       sha256 = "0jilqkgp1mk6sllxhigp1sidnp7amgsfdmxf23r0l69hp0w4dcm7";
       buildDepends = [ deepseq ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/JohnLato/splaytree";
       description = "Provides an annotated splay tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "splice" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "splice";
       version = "0.6.1.1";
       sha256 = "0lsfkm4vfipzbnqpf3yli6fwrv5a5mwbs149dfzhs7spa9kbxyl1";
       buildDepends = [ network ];
       homepage = "http://corsis.github.com/splice/";
       description = "Cross-platform Socket to Socket Data Splicing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "splines" = callPackage
    ({ mkDerivation, polynomial, QuickCheck, test-framework
     , test-framework-quickcheck2, vector, vector-space
     }:
     mkDerivation {
       pname = "splines";
       version = "0.5.0.1";
       sha256 = "1bq5m8izvkrw21v9anp381rrq41svsmkxa0fk86ncm0lkaj09l5b";
       buildDepends = [ polynomial vector vector-space ];
       testDepends = [
         polynomial QuickCheck test-framework test-framework-quickcheck2
         vector vector-space
       ];
       description = "B-Splines, other splines, and NURBS";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "split" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "split";
       version = "0.2.2";
       sha256 = "0xa3j0gwr6k5vizxybnzk5fgb3pppgspi6mysnp2gwjp2dbrxkzr";
       editedCabalFile = "1i1h5v1zqvganhzy1wdd9r648yjpir078n0g8051njg82h2f964h";
       testDepends = [ QuickCheck ];
       description = "Combinator library for splitting lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "split-channel" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "split-channel";
       version = "0.2.0.1";
       sha256 = "0w2sgj1f5ydfvhm80d3pbka9988jwl80n14bp5nisawpd2glxvak";
       description = "Control.Concurrent.Chan split into sending and receiving halves.";
       license = stdenv.lib.licenses.mit;
     }) {};

  "split-record" = callPackage
    ({ mkDerivation, numeric-prelude, soxlib, storablevector
     , synthesizer-core, transformers, utility-ht
     }:
     mkDerivation {
       pname = "split-record";
       version = "0.1.1.1";
       sha256 = "0d53npfi3mba83vpjkq59ga51nxqvkvv7gr0mj1jb8kj8i4jjw7v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         numeric-prelude soxlib storablevector synthesizer-core transformers
         utility-ht
       ];
       homepage = "http://code.haskell.org/~thielema/split-record/";
       description = "Split a big audio file into pieces at positions of silence";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "split-tchan" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "split-tchan";
       version = "0.1.0.0";
       sha256 = "0qwcbvnm2vlr4bmn8r1q3ycamvgs0nfap4dkyzgp54f9rrl73x2p";
       buildDepends = [ stm ];
       description = "STM's TChan split into sending and receiving halves";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "splitter" = callPackage
    ({ mkDerivation, filepath, parsec, range }:
     mkDerivation {
       pname = "splitter";
       version = "0.1.0.0";
       sha256 = "1nibmm0ab7a2j9rdmnphzz2svc3xfq268jbn23a403465s0v6sq6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath parsec range ];
       homepage = "https://bitbucket.org/robertmassaioli/splitter";
       description = "Use numerical ranges to split out certain lines from a file";
       license = stdenv.lib.licenses.mit;
     }) {};

  "splot" = callPackage
    ({ mkDerivation, bytestring-lexing, cairo, colour, HUnit, mtl
     , strptime, time, vcs-revision
     }:
     mkDerivation {
       pname = "splot";
       version = "0.3.12";
       sha256 = "0xk5p2ikrzrmhvl69cl36sskcqgfnhxbbdlyp7bzl5pny0l0h9in";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bytestring-lexing cairo colour HUnit mtl strptime time vcs-revision
       ];
       homepage = "http://www.haskell.org/haskellwiki/Splot";
       description = "A tool for visualizing the lifecycle of many concurrent multi-staged processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spool" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "spool";
       version = "0.1";
       sha256 = "1svkz3cxkyi6f3akakjfk1cvij85xy69v52d88gh97xgiawp5346";
       buildDepends = [ vector ];
       description = "Convert between ByteString and Vector.Storable without copying";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spoon" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "spoon";
       version = "0.3.1";
       sha256 = "1m41k0mfy6fpfrv2ym4m5jsjaj9xdfl2iqpppd3c4d0fffv51cxr";
       editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
       buildDepends = [ deepseq ];
       description = "Catch errors thrown from pure computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spoonutil" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, parsec }:
     mkDerivation {
       pname = "spoonutil";
       version = "0.0.1";
       sha256 = "0xkarfm0c0931dz6yjs7pb5s2zizz1psnx9gfri5jq16skxk2nhd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ extensible-exceptions filepath parsec ];
       homepage = "http://github.com/elginer/SpoonUtilities";
       description = "Spoon's utilities. Simple testing and nice looking error reporting.";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "spoty" = callPackage
    ({ mkDerivation, aeson, lens, lens-aeson, pipes, text
     , unordered-containers, wreq
     }:
     mkDerivation {
       pname = "spoty";
       version = "0.1.0.2";
       sha256 = "0p1mn8yixlyj2al98mxzs10m0klqqmmdfjcwc9xax97xp4ixjcm3";
       buildDepends = [
         aeson lens lens-aeson pipes text unordered-containers wreq
       ];
       homepage = "https://github.com/davnils/spoty";
       description = "Spotify web API wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spreadsheet" = callPackage
    ({ mkDerivation, explicit-exception, transformers, utility-ht }:
     mkDerivation {
       pname = "spreadsheet";
       version = "0.1.3.3";
       sha256 = "1q6cdgn1bf6dz6brd237ypw3cn0arbf9sm8ghzfngz20k0rbgcj1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ explicit-exception transformers utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/Spreadsheet";
       description = "Read and write spreadsheets from and to CSV files in a lazy way";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "spritz" = callPackage
    ({ mkDerivation, lens, mtl, vector }:
     mkDerivation {
       pname = "spritz";
       version = "0.1.0.0";
       sha256 = "1syv2l0z7c2s6bbi5103i4var40j8pavahiic813v8m9s6waa4fk";
       buildDepends = [ lens mtl vector ];
       homepage = "https://github.com/relrod/spritz";
       description = "An implementation of the Spritz RC4-like stream cipher in Haskell";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "spsa" = callPackage
    ({ mkDerivation, hmatrix, HUnit, mtl, QuickCheck, random
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "spsa";
       version = "0.2.0.0";
       sha256 = "0jj08bkvmg8cj0lp7j8sd2ksanyrr5i2xxcz4kfwkrlyf8zhqxrh";
       buildDepends = [ hmatrix mtl random ];
       testDepends = [
         hmatrix HUnit QuickCheck random test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/yanatan16/haskell-spsa";
       description = "Simultaneous Perturbation Stochastic Approximation Optimization Algorithm";
       license = stdenv.lib.licenses.mit;
     }) {};

  "spy" = callPackage
    ({ mkDerivation, cmdargs, filemanip, filepath, fsnotify, HUnit
     , json, QuickCheck, system-filepath, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "spy";
       version = "0.10";
       sha256 = "1b3nhx009mzwl7n9d1bka4i9mwdh1gq08bsfmcnw9s7527nhn0ph";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs filemanip filepath fsnotify json system-filepath time
       ];
       testDepends = [
         cmdargs filemanip filepath fsnotify HUnit json QuickCheck
         system-filepath test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://bitbucket.org/ssaasen/spy";
       description = "A compact file system watcher for Mac OS X, Linux and Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sql-simple" = callPackage
    ({ mkDerivation, exceptions, monad-control, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "sql-simple";
       version = "0.3.1";
       sha256 = "1vhg8ijpa64qalgza5sr3j8y1ihk6ys5lyf34vwcmjv8nlpyhpwh";
       buildDepends = [
         exceptions monad-control text transformers transformers-base
       ];
       homepage = "https://github.com/philopon/sql-simple";
       description = "common middle-level sql client";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sql-simple-mysql" = callPackage
    ({ mkDerivation, data-default-class, mysql, mysql-simple
     , sql-simple, text
     }:
     mkDerivation {
       pname = "sql-simple-mysql";
       version = "0.3.0";
       sha256 = "1i9xgzl3pjxii4mgx8az5gmygxq2vn1km7kmndwy07qkh26ynd7p";
       buildDepends = [
         data-default-class mysql mysql-simple sql-simple text
       ];
       homepage = "https://github.com/philopon/sql-simple";
       description = "mysql backend for sql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sql-simple-pool" = callPackage
    ({ mkDerivation, data-default-class, monad-control, resource-pool
     , sql-simple, text, time
     }:
     mkDerivation {
       pname = "sql-simple-pool";
       version = "0.3.0";
       sha256 = "14pradqy01vsd2cngvcbwvrwq5r3c5a00awi6j5vmkb51dycizh9";
       buildDepends = [
         data-default-class monad-control resource-pool sql-simple text time
       ];
       homepage = "https://github.com/philopon/sql-simple";
       description = "conection pool for sql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sql-simple-postgresql" = callPackage
    ({ mkDerivation, data-default-class, postgresql-simple, sql-simple
     , text
     }:
     mkDerivation {
       pname = "sql-simple-postgresql";
       version = "0.3.0";
       sha256 = "0dk2829zkcwxyqw0p2nsrm9gw527cmggdslhflrylg8xr1ag6zs1";
       buildDepends = [
         data-default-class postgresql-simple sql-simple text
       ];
       homepage = "https://github.com/philopon/sql-simple";
       description = "postgresql backend for sql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sql-simple-sqlite" = callPackage
    ({ mkDerivation, sql-simple, sqlite-simple }:
     mkDerivation {
       pname = "sql-simple-sqlite";
       version = "0.3.0";
       sha256 = "07ji17b4q9b8w9q9r8digb218qkjcrxfc24113p0f3pmgbwci3f1";
       buildDepends = [ sql-simple sqlite-simple ];
       homepage = "https://github.com/philopon/sql-simple";
       description = "sqlite backend for sql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};

  "sql-words" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sql-words";
       version = "0.1.0.0";
       sha256 = "0xrqacq2ry1crfqxq0h5q6gxcp2604iicwxqsqgcf67kzpv2d9kn";
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Simple idea SQL keywords data constructor into OverloadedString";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sqlite" = callPackage
    ({ mkDerivation, sqlite, time, utf8-string }:
     mkDerivation {
       pname = "sqlite";
       version = "0.5.2.2";
       sha256 = "1hlyv2w4q2dlcsz18fqbmqf7nwsbzyh184ynzfnz5svvc8j9hbrp";
       buildDepends = [ time utf8-string ];
       extraLibraries = [ sqlite ];
       description = "Haskell binding to sqlite3";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) sqlite; };

  "sqlite-simple" = callPackage
    ({ mkDerivation, attoparsec, base16-bytestring, blaze-builder
     , blaze-textual, direct-sqlite, HUnit, text, time, transformers
     }:
     mkDerivation {
       pname = "sqlite-simple";
       version = "0.4.8.0";
       sha256 = "098d1s80wlvsp307422f79bm3a9knvgw5ni6jap62fl4rpa7fsmz";
       buildDepends = [
         attoparsec blaze-builder blaze-textual direct-sqlite text time
         transformers
       ];
       testDepends = [ base16-bytestring direct-sqlite HUnit text time ];
       homepage = "http://github.com/nurpax/sqlite-simple";
       description = "Mid-Level SQLite client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sqlvalue-list" = callPackage
    ({ mkDerivation, convertible, HDBC }:
     mkDerivation {
       pname = "sqlvalue-list";
       version = "0.2";
       sha256 = "1r9y3p355rl57pnm84flx734zzjxnnc53fkcfdkykxi5wi5j05v0";
       buildDepends = [ convertible HDBC ];
       description = "Class and instances for conversion to list of SqlValue";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "squeeze" = callPackage
    ({ mkDerivation, Cabal, factory, filepath, mtl, QuickCheck, random
     , toolshed
     }:
     mkDerivation {
       pname = "squeeze";
       version = "1.0.4.2";
       sha256 = "0p39ibms8c2gk1m8v2cysqsd06pvy1mkjvmbvgpfqhkax89lqzak";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal factory filepath mtl QuickCheck random toolshed
       ];
       homepage = "http://functionalley.eu";
       description = "A file-packing application";
       license = "GPL";
     }) {};

  "srcinst" = callPackage
    ({ mkDerivation, hslogger, MissingH, network, parsec, regex-compat
     }:
     mkDerivation {
       pname = "srcinst";
       version = "0.8.10";
       sha256 = "05ydsh4ippapxcx7j3fq8s64qiskcrmndgvilxkdp4qhxyi80gj9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ hslogger MissingH network parsec regex-compat ];
       description = "Build and install Debian packages completely from source";
       license = "GPL";
     }) {};

  "srcloc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "srcloc";
       version = "0.4.1";
       sha256 = "0cd15d9dval7zi4li48yd6a3jk62861d4qxwvhxz4a98m63519cz";
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Data types for managing source code locations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "srec" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "srec";
       version = "0.1.0";
       sha256 = "028sb4znvdqsygipcsf44j0xazk03pdfkirzrczmxcd11srh3h1k";
       homepage = "http://tomahawkins.org";
       description = "Parsing and processing s-records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sscgi" = callPackage
    ({ mkDerivation, attoparsec, case-insensitive, Glob
     , MonadCatchIO-mtl, mtl, transformers, utf8-string
     }:
     mkDerivation {
       pname = "sscgi";
       version = "0.3.0";
       sha256 = "0pkhk6xhh1404yncyl62mjyp7mc2i06ihy243r0mq7qyy7ak417r";
       buildDepends = [
         attoparsec case-insensitive Glob MonadCatchIO-mtl mtl transformers
         utf8-string
       ];
       homepage = "https://github.com/jekor/haskell-sscgi";
       description = "Simple SCGI Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ssh" = callPackage
    ({ mkDerivation, asn1-data, base64-string, binary, cereal
     , crypto-api, crypto-pubkey-types, cryptohash-cryptoapi, HsOpenSSL
     , network, random, RSA, SHA, SimpleAES, split, transformers
     }:
     mkDerivation {
       pname = "ssh";
       version = "0.2.13.1";
       sha256 = "05bz4six0bffv6n2il4rzr6rbj4ym5ijqvpkrjdw2xdb7cfqs09i";
       buildDepends = [
         asn1-data base64-string binary cereal crypto-api
         crypto-pubkey-types cryptohash-cryptoapi HsOpenSSL network random
         RSA SHA SimpleAES split transformers
       ];
       homepage = "http://hub.darcs.net/simon/ssh";
       description = "A pure-Haskell SSH server library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sshtun" = callPackage
    ({ mkDerivation, curl, hdaemonize, hslogger, mtl, regex-compat, stm
     }:
     mkDerivation {
       pname = "sshtun";
       version = "1.0.0";
       sha256 = "0794vsv043ppydzyjxnh06m4l3gbnga7x8nwsamh8skrzjfwn6jq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ curl hdaemonize hslogger mtl regex-compat stm ];
       homepage = "http://ui3.info/d/proj/sshtun.html";
       description = "Wrapper daemon to manage an ssh tunnel";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sssp" = callPackage
    ({ mkDerivation, attempt, attoparsec, aws, base64-bytestring
     , blaze-builder, case-insensitive, cereal, conduit, cryptohash
     , data-default, http-conduit, http-types, mtl, network-conduit
     , text, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "sssp";
       version = "1.1.1";
       sha256 = "1nr30nrldjd3q1iw3l967x3v1rvl9afz1p87hhhkvpy60gri8m7c";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attempt attoparsec aws base64-bytestring blaze-builder
         case-insensitive cereal conduit cryptohash data-default
         http-conduit http-types mtl network-conduit text wai wai-extra warp
       ];
       homepage = "http://github.com/erudify/sssp/";
       description = "HTTP proxy for S3";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sstable" = callPackage
    ({ mkDerivation, binary, cmdargs, deepseq, iteratee }:
     mkDerivation {
       pname = "sstable";
       version = "1.0";
       sha256 = "1siyjj75k1nsncpqwz53algbnvgbmr4syw45rfj1cpq4qbfwlcgm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary cmdargs deepseq iteratee ];
       description = "SSTables in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ssv" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ssv";
       version = "0.3";
       sha256 = "1z01611d380rgn64b0sbwxfbz7m8lgwhkc3lljpih6nsdn9hwrq5";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/BartMassey/ssv";
       description = "Comma-separated-value (CSV) read, show and write routines";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stable-maps" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "stable-maps";
       version = "0.0.5";
       sha256 = "1sjidykbj5f692di93nml0frazvyw9kxyhjwbyyvrb9gwgc2ms3w";
       homepage = "http://github.com/ekmett/stable-maps";
       description = "Heterogeneous maps keyed by StableNames";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stable-memo" = callPackage
    ({ mkDerivation, hashtables, tagged }:
     mkDerivation {
       pname = "stable-memo";
       version = "0.2.4";
       sha256 = "1mm3j63qaq12bdpn134j7jxzrikk9rawfd559xdkxkayq83z52i8";
       buildDepends = [ hashtables tagged ];
       description = "Memoization based on argument identity";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stable-tree" = callPackage
    ({ mkDerivation, binary, blaze-builder, bytestring-arbitrary
     , cereal, mtl, objectid, QuickCheck, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "stable-tree";
       version = "0.5.0";
       sha256 = "0svg4mbsvynvmcfm6ihv6s90pfvi1zhawa19yns8n521ff2rxrjv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary blaze-builder cereal mtl objectid text ];
       testDepends = [
         bytestring-arbitrary cereal mtl objectid QuickCheck tasty
         tasty-quickcheck text
       ];
       homepage = "https://github.com/tsuraan/stable-tree";
       description = "Trees whose branches are resistant to change";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stack-prism" = callPackage
    ({ mkDerivation, profunctors, tagged, transformers }:
     mkDerivation {
       pname = "stack-prism";
       version = "0.1";
       sha256 = "1pl5bb1qyd59pgcbbr27vk8mzfdsv3wbyk9z40cm54v8513rq307";
       buildDepends = [ profunctors tagged transformers ];
       homepage = "https://github.com/MedeaMelana/stack-prism";
       description = "Stack prisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stackage" = callPackage
    ({ mkDerivation, aeson, async, Cabal, classy-prelude-conduit
     , conduit-extra, data-default-class, filepath, hspec, http-client
     , mono-traversable, mtl, QuickCheck, semigroups, stm
     , streaming-commons, system-fileio, system-filepath, tar, temporary
     , text, time, transformers, unix-compat, utf8-string, xml-conduit
     , yaml, zlib
     }:
     mkDerivation {
       pname = "stackage";
       version = "0.1.0.0";
       sha256 = "02wn5qwzhjq8h7w8a6h91w95rnsmp3bc6ais675mixhn0nkgny8z";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson async Cabal classy-prelude-conduit conduit-extra
         data-default-class filepath http-client mono-traversable mtl
         semigroups stm streaming-commons system-fileio system-filepath tar
         temporary text time transformers unix-compat utf8-string
         xml-conduit yaml zlib
       ];
       testDepends = [
         Cabal classy-prelude-conduit hspec QuickCheck text yaml
       ];
       homepage = "https://github.com/fpco/stackage";
       description = "\"Stable Hackage,\" tools for creating a vetted set of packages from Hackage";
       license = stdenv.lib.licenses.mit;
     }) {};

  "standalone-haddock" = callPackage
    ({ mkDerivation, Cabal, filepath, optparse-applicative }:
     mkDerivation {
       pname = "standalone-haddock";
       version = "1.1.4.3";
       sha256 = "0kzgd4c2zashhcg9pblayvzwnkzhkkmdvbkx5yc9a7rcjaqzh40j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal filepath optparse-applicative ];
       homepage = "http://documentup.com/feuerbach/standalone-haddock";
       description = "Generate standalone haddock documentation for a set of packages";
       license = stdenv.lib.licenses.mit;
     }) {};

  "star-to-star" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "star-to-star";
       version = "1.0";
       sha256 = "1nxkb1rdw6lhka49r6xdjskipyig09jzrvp82hx8a1xnqb9cyrrj";
       description = "the * -> * types, operators, and covariant instances";
       license = "unknown";
     }) {};

  "star-to-star-contra" = callPackage
    ({ mkDerivation, star-to-star }:
     mkDerivation {
       pname = "star-to-star-contra";
       version = "1.0";
       sha256 = "1kmpjm51jzk4pv6qggvwjvfqvqnr5z7znfbhiscvcq89j1842x53";
       buildDepends = [ star-to-star ];
       description = "contravariant instances for * -> * types and operators";
       license = "unknown";
     }) {};

  "starling" = callPackage
    ({ mkDerivation, binary, failure, transformers }:
     mkDerivation {
       pname = "starling";
       version = "0.3.0";
       sha256 = "0i0f19k2b5y6vb0jngqwnf035csgiaqjgiw37wvj8vs2lbh907bp";
       buildDepends = [ binary failure transformers ];
       homepage = "http://community.haskell.org/~aslatter/starling";
       description = "A memcached client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "starrover2" = callPackage
    ({ mkDerivation, EdisonCore, FTGL, mtl, OpenGL, random, SDL }:
     mkDerivation {
       pname = "starrover2";
       version = "0.1.1";
       sha256 = "0rdkxyhy62h87vdq08znqpjhg4wriwvbmn0pwak9nqsd5xk6slka";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ EdisonCore FTGL mtl OpenGL random SDL ];
       homepage = "http://github.com/anttisalonen/starrover2";
       description = "Space simulation game";
       license = "unknown";
     }) {};

  "state" = callPackage
    ({ mkDerivation, arrows, mtl }:
     mkDerivation {
       pname = "state";
       version = "0.1";
       sha256 = "0j5hbh0rkcwfigvskmgb0hql95qs0cjbys61c6sni2hc719bshx6";
       buildDepends = [ arrows mtl ];
       description = "Data.State";
       license = "LGPL";
     }) {};

  "state-plus" = callPackage
    ({ mkDerivation, checkers, mtl, QuickCheck }:
     mkDerivation {
       pname = "state-plus";
       version = "0.1.1";
       sha256 = "09zc4rymzvpq12mgl59h069m418qr43myhsj8dlf62g477wyx4g1";
       buildDepends = [ mtl ];
       testDepends = [ checkers mtl QuickCheck ];
       description = "MonadPlus for StateT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "state-record" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "state-record";
       version = "0.0.1";
       sha256 = "1y9ql1dlv2kf564x153gyw5h967pjn5zilfq88px8rqmkydqix7g";
       buildDepends = [ mtl ];
       homepage = "https://github.com/ktvoelker/state-record";
       description = "Better records for State monad states";
       license = "GPL";
     }) {};

  "stateWriter" = callPackage
    ({ mkDerivation, free, hspec, mtl, QuickCheck, transformers }:
     mkDerivation {
       pname = "stateWriter";
       version = "0.2.2";
       sha256 = "0vs9l59ka2knalarkdibhl4bjrwsj70pxl1lkrz4hmz2qzg7bi94";
       buildDepends = [ mtl transformers ];
       testDepends = [ free hspec mtl QuickCheck ];
       description = "A faster variant of the RWS monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "statechart" = callPackage
    ({ mkDerivation, polyparse }:
     mkDerivation {
       pname = "statechart";
       version = "0.1.0";
       sha256 = "122vv9h3rxn126chm5bj4rkxd7mbzndy73ck5nlmnhhxyks25d26";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ polyparse ];
       homepage = "http://tomahawkins.org";
       description = "Compiles Rhapsody statecharts to C";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stateful-mtl" = callPackage
    ({ mkDerivation, MaybeT, mtl }:
     mkDerivation {
       pname = "stateful-mtl";
       version = "1.0.7";
       sha256 = "19645rqfqbcvngq8hj7bryl35lgx7p5k55vgsxa1a2hm2kq8vm5h";
       buildDepends = [ MaybeT mtl ];
       description = "Typeclass instances for monad transformer stacks with an ST thread at the bottom";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stateref" = callPackage
    ({ mkDerivation, mtl, stm }:
     mkDerivation {
       pname = "stateref";
       version = "0.3";
       sha256 = "0hdpw6g255lj7jjvgqwhjdpzmka546vda5qjvry8gjj6nfm91lvx";
       buildDepends = [ mtl stm ];
       homepage = "http://code.haskell.org/~mokus/stateref/";
       description = "Abstraction for things that work like IORef";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "statestack" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "statestack";
       version = "0.2.0.3";
       sha256 = "0w5vw8jmnwbfyma4a3ggdm9jvxf3c18kpwbvcmvr5szifaqv9sgx";
       buildDepends = [ mtl transformers ];
       description = "Simple State-like monad transformer with saveable and restorable state";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "statethread" = callPackage
    ({ mkDerivation, applicative, transformers }:
     mkDerivation {
       pname = "statethread";
       version = "0.1.1";
       sha256 = "05clniwqk4i3zz22jzbjj2x9cgkxb2ks7mccjyp3gyy4zbm2xlmz";
       buildDepends = [ applicative transformers ];
       description = "The ST monad and STRefs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "statgrab" = callPackage
    ({ mkDerivation, async, statgrab, time, transformers }:
     mkDerivation {
       pname = "statgrab";
       version = "0.1.3";
       sha256 = "1rckyxg1px6v69rbr1ldy107b1q5rrh89dawlrdjzwbnmxjgbvj5";
       buildDepends = [ async time transformers ];
       extraLibraries = [ statgrab ];
       homepage = "http://github.com/brendanhay/statgrab";
       description = "Collect system level metrics and statistics";
       license = "unknown";
     }) { inherit (pkgs) statgrab; };

  "static-hash" = callPackage
    ({ mkDerivation, hashable, primes }:
     mkDerivation {
       pname = "static-hash";
       version = "0.0.1";
       sha256 = "0nkgx4s389027zi23wmbc6wqnmplvjvbrsbyzy7zn41mbwmzqz8l";
       buildDepends = [ hashable primes ];
       description = "Immutable hash";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "static-resources" = callPackage
    ({ mkDerivation, filepath, hslogger, HUnit, MissingH, mtl, syb
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time
     }:
     mkDerivation {
       pname = "static-resources";
       version = "0.1.7";
       sha256 = "0wf9kpn1l2iq00m1ms46vn2lrnyy8ip1z54ya2h4kqarcy5sr8m9";
       buildDepends = [ filepath hslogger MissingH mtl syb time ];
       testDepends = [
         hslogger HUnit MissingH mtl syb test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       description = "JavaScript and Css files concat for http optimization. Now with LESS support.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "staticanalysis" = callPackage
    ({ mkDerivation, MissingH }:
     mkDerivation {
       pname = "staticanalysis";
       version = "0.0.0.3";
       sha256 = "0b6y8yi0cfisi58pxxx1gnd1vab2i8f5wb3gzv1dfsxx5hl6jlwf";
       buildDepends = [ MissingH ];
       description = "Reusable static analysis interfaces and modules";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "statistics" = callPackage
    ({ mkDerivation, aeson, binary, deepseq, erf, HUnit, ieee754
     , math-functions, monad-par, mwc-random, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-algorithms, vector-binary-instances
     }:
     mkDerivation {
       pname = "statistics";
       version = "0.13.2.1";
       sha256 = "0giibqpnjndnhvxqsr8ikcxxfhz3ws0mk3ckykq2sfwz7gkipvva";
       buildDepends = [
         aeson binary deepseq erf math-functions monad-par mwc-random
         primitive vector vector-algorithms vector-binary-instances
       ];
       testDepends = [
         binary erf HUnit ieee754 math-functions mwc-random primitive
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector vector-algorithms
       ];
       homepage = "https://github.com/bos/statistics";
       description = "A library of statistical types, data, and functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "statistics-dirichlet" = callPackage
    ({ mkDerivation, deepseq, hmatrix-special, nonlinear-optimization
     , vector
     }:
     mkDerivation {
       pname = "statistics-dirichlet";
       version = "0.6.1";
       sha256 = "1kd9s7m2a8awqiqbsj0z3w585bq236fmj5s5sadsdd698irkkib1";
       buildDepends = [
         deepseq hmatrix-special nonlinear-optimization vector
       ];
       description = "Functions for working with Dirichlet densities and mixtures on vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "statistics-fusion" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "statistics-fusion";
       version = "1.0.1";
       sha256 = "17w7vz0jarbyf9y72bn9yg134q6ja5ymfyl1v9nx94glbhbybrlf";
       buildDepends = [ vector ];
       homepage = "http://code.haskell.org/~dons/code/statistics-fusion";
       description = "An implementation of high performance, minimal statistics functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "statistics-linreg" = callPackage
    ({ mkDerivation, MonadRandom, random, random-shuffle, safe
     , statistics, vector
     }:
     mkDerivation {
       pname = "statistics-linreg";
       version = "0.3";
       sha256 = "02c9xrd3b8iy7bwgsf1r06smi88k3sgpqv2ivr782wl0dcbc4wv2";
       buildDepends = [
         MonadRandom random random-shuffle safe statistics vector
       ];
       homepage = "http://github.com/alpmestan/statistics-linreg";
       description = "Linear regression between two samples, based on the 'statistics' package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stats" = callPackage
    ({ mkDerivation, statistics, text, vector }:
     mkDerivation {
       pname = "stats";
       version = "0.1.1";
       sha256 = "08ig4nrlqshxmiar739zfbs95hlrp8l212hszh4zs0w2x4i3s17f";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ statistics text vector ];
       homepage = "http://github.com/cheecheeo/stats/";
       description = "command line statistics";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "statsd" = callPackage
    ({ mkDerivation, monad-control, mtl, network, random }:
     mkDerivation {
       pname = "statsd";
       version = "0.1.0.1";
       sha256 = "13bcqms31rvzs3lfbmx43wqkmp21jbzj326yn971334cf722f0a1";
       buildDepends = [ monad-control mtl network random ];
       homepage = "https://github.com/mitchellwrosen/statsd-haskell";
       description = "StatsD API";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "statvfs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "statvfs";
       version = "0.2";
       sha256 = "16z9fddgvf5sl7zy7p74fng9lkdw5m9i5np3q4s2h8jdi43mwmg1";
       description = "Get unix filesystem statistics with statfs, statvfs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stb-image" = callPackage
    ({ mkDerivation, bitmap }:
     mkDerivation {
       pname = "stb-image";
       version = "0.2.1";
       sha256 = "1mx6i5q56wy13fvpnypb2c6fk2z3i5xdfblkpazzc70p2dgxaf52";
       buildDepends = [ bitmap ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "A wrapper around Sean Barrett's JPEG/PNG decoder";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "stb-truetype" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "stb-truetype";
       version = "0.1.2";
       sha256 = "1hbbi7hax5fw5zb7ashfs5paixqzqrrr64lwisda80dskdazld4m";
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "A wrapper around Sean Barrett's TrueType rasterizer library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "stdata" = callPackage
    ({ mkDerivation, parsec, syb }:
     mkDerivation {
       pname = "stdata";
       version = "0.0.4";
       sha256 = "0ijir2knl4vc1cpzzmf32wcjfdc958li1wd7w5vdmgk4bx45kybf";
       buildDepends = [ parsec syb ];
       description = "Structure Data Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stdf" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, binary
     , data-binary-ieee754, split, text, time, unix-time, zlib
     }:
     mkDerivation {
       pname = "stdf";
       version = "0.2.0.0";
       sha256 = "1blwf18qvsrhkxfakyznr3ljr35dw6d027jybr2hh4a5yfqn6zyd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring binary data-binary-ieee754 split text time
         unix-time zlib
       ];
       homepage = "https://github.com/gitfoxi/Stdf";
       description = "Parse Structured Test Data Format (STDF)";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "steeloverseer" = callPackage
    ({ mkDerivation, fsnotify, regex-tdfa, system-filepath, text, time
     }:
     mkDerivation {
       pname = "steeloverseer";
       version = "1.1.0.3";
       sha256 = "12rivdszviksp1czxj71scbzj1b2xan6kq0f5aqlyrjcnbyrxa7s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ fsnotify regex-tdfa system-filepath text time ];
       homepage = "https://github.com/schell/steeloverseer";
       description = "A file watcher";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stemmer" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "stemmer";
       version = "0.5";
       sha256 = "16y0lapjma4ivnkpgqpw60763lfvnf6rxwc9gs0dyffvq6lfrz8i";
       homepage = "http://www.github.com/bgamari/stemmer";
       description = "Haskell bindings to the Snowball stemming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stepwise" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "stepwise";
       version = "1.0.2";
       sha256 = "059k8g3wb4hkxk42vm83vv6kh3igrpf7fc97xvn3qai5rx3jmgqf";
       buildDepends = [ mtl ];
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       license = "LGPL";
     }) {};

  "stickyKeysHotKey" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "stickyKeysHotKey";
       version = "0.1.0.1";
       sha256 = "18p0yxfw9wnzk0yxdvlm3g23k8zq5nb707411i92z5m82l6pkpmi";
       description = "get and set STICKYKEYS.SKF_HOTKEYACTIVE";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "stm";
       version = "2.4.3";
       sha256 = "0vzw4s06d5scfy4ircl81ym8ylkw9ckzsp8rq950dvipmaj1xhis";
       description = "Software Transactional Memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-channelize" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "stm-channelize";
       version = "0.1.1";
       sha256 = "1aj4zibq54ssbb7smkxjrjl24d9vccgjpl2b9261yqyg692cz9hm";
       buildDepends = [ stm ];
       description = "Transactional I/O for duplex streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-chans" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "stm-chans";
       version = "3.0.0.2";
       sha256 = "1zsa092yjxsdq8nm2yqagdfpip3i3ff3xdwvys99ns7ridxbyynh";
       buildDepends = [ stm ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Additional types of channels for STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-chunked-queues" = callPackage
    ({ mkDerivation, async, HUnit, stm, tasty, tasty-hunit }:
     mkDerivation {
       pname = "stm-chunked-queues";
       version = "0.1.0.0";
       sha256 = "0264air2mhwbya2sxskrh4z1bs8il7d9iv4vm6wyz8zxxc95v1nj";
       buildDepends = [ async stm ];
       testDepends = [ async HUnit stm tasty tasty-hunit ];
       homepage = "http://github.com/kholdstare/stm-chunked-queues/";
       description = "Chunked Communication Queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-conduit" = callPackage
    ({ mkDerivation, async, cereal, cereal-conduit, conduit
     , conduit-extra, HUnit, lifted-async, lifted-base, monad-control
     , monad-loops, QuickCheck, resourcet, stm, stm-chans
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers
     }:
     mkDerivation {
       pname = "stm-conduit";
       version = "2.5.2";
       sha256 = "1r8l9nznavxd0cg30mj7qdp9nq8jlcr0vcv8ljn6lfw67s0pk82x";
       buildDepends = [
         async cereal cereal-conduit conduit conduit-extra lifted-async
         lifted-base monad-control monad-loops resourcet stm stm-chans
         transformers
       ];
       testDepends = [
         conduit HUnit QuickCheck resourcet stm stm-chans test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
       ];
       homepage = "https://github.com/wowus/stm-conduit";
       description = "Introduces conduits to channels, and promotes using conduits concurrently";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-containers" = callPackage
    ({ mkDerivation, base-prelude, focus, free, hashable, HTF, list-t
     , loch-th, mtl, mtl-prelude, placeholders, primitive, QuickCheck
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "stm-containers";
       version = "0.2.7";
       sha256 = "1qgmrxccnvids2xq2n28cllfqh88f0b2512hm5grrab7qb07phar";
       buildDepends = [
         base-prelude focus hashable list-t loch-th placeholders primitive
         transformers
       ];
       testDepends = [
         base-prelude focus free hashable HTF list-t loch-th mtl mtl-prelude
         placeholders primitive QuickCheck transformers unordered-containers
       ];
       homepage = "https://github.com/nikita-volkov/stm-containers";
       description = "Containers for STM";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stm-delay" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "stm-delay";
       version = "0.1.1.1";
       sha256 = "0cla21v89gcvmr1iwzibq13v1yq02xg4h6k9l6kcprj7mhd5hcmi";
       buildDepends = [ stm ];
       testDepends = [ stm ];
       homepage = "https://github.com/joeyadams/haskell-stm-delay";
       description = "Updatable one-shot timer polled with STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-firehose" = callPackage
    ({ mkDerivation, blaze-builder, conduit, hspec, http-types, HUnit
     , network-conduit, stm, stm-chans, stm-conduit, transformers, wai
     , warp
     }:
     mkDerivation {
       pname = "stm-firehose";
       version = "0.2.1";
       sha256 = "0y4q3qj3ih2xcn0mhd4jszb1d5l87abkvlmhdvx9d1407bw9j99r";
       buildDepends = [
         blaze-builder conduit http-types network-conduit stm stm-chans
         stm-conduit transformers wai warp
       ];
       testDepends = [ hspec HUnit stm ];
       description = "Conduits and STM operations for fire hoses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-io-hooks" = callPackage
    ({ mkDerivation, mtl, stm }:
     mkDerivation {
       pname = "stm-io-hooks";
       version = "1.0.0";
       sha256 = "1wx68z1vq693bdcvv7d52pmk2s3pin0m382bc7j4i0s67m0ldcdn";
       buildDepends = [ mtl stm ];
       description = "STM with IO hooks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-lifted" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "stm-lifted";
       version = "0.1.0.0";
       sha256 = "1x3yxxyik0vyh3p530msxh2a1aylmh8zab05qpq7nfl5m9v6v090";
       buildDepends = [ stm transformers ];
       description = "Software Transactional Memory lifted to MonadIO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-linkedlist" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "stm-linkedlist";
       version = "0.1.0.0";
       sha256 = "1x65z38dx0qi55fmbarc1827wpl4j08m23nklq8854y7kqznf9kr";
       buildDepends = [ stm ];
       description = "Mutable, doubly linked lists for STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-orelse-io" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "stm-orelse-io";
       version = "0.1";
       sha256 = "11v0xc5zlw641mf6r5k8lqhzxc4y9bsx3xivwmbkfniph0x7g5m4";
       buildDepends = [ stm ];
       homepage = "http://nonempty.org/software/stm-orelse-io";
       description = "Choose between the return value of an STM operation and an IO action";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-promise" = callPackage
    ({ mkDerivation, mtl, QuickCheck, stm }:
     mkDerivation {
       pname = "stm-promise";
       version = "0.0.3.1";
       sha256 = "07wrbj88gwdbsczjr225g0z1ai1v13mdg71gl9qsmipqs0s0pfwc";
       buildDepends = [ mtl stm ];
       testDepends = [ QuickCheck stm ];
       homepage = "http://www.github.com/danr/stm-promise";
       description = "Simple STM Promises for IO computations and external processes";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "stm-queue-extras" = callPackage
    ({ mkDerivation, stm, stm-chans }:
     mkDerivation {
       pname = "stm-queue-extras";
       version = "0.2.0.0";
       sha256 = "1qd6zsr2lkkg5yxp72l38h00b2xj40jn38qx9sfvgpss6rkda40s";
       editedCabalFile = "0fqrnd7mv82rhxwipg30mmqvsp9kvvznwl001nva162r5hn1540c";
       buildDepends = [ stm stm-chans ];
       description = "Extra queue utilities for STM";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "stm-sbchan" = callPackage
    ({ mkDerivation, stm, stm-tlist }:
     mkDerivation {
       pname = "stm-sbchan";
       version = "0.1";
       sha256 = "0fz4vfbyr848b32vbdm3pjj9gwi7wj39l3vsqmdpjnbfwvkw0y0s";
       buildDepends = [ stm stm-tlist ];
       homepage = "https://github.com/joeyadams/haskell-stm-sbchan";
       description = "Bounded channel for STM where item sizes can vary";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-split" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "stm-split";
       version = "0.0";
       sha256 = "11v2sq911byxvvmjbm7qkpdzma1mzzlch6rr529xsra0dv7myig2";
       buildDepends = [ stm ];
       description = "TMVars, TVars and TChans with distinguished input and output side";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-stats" = callPackage
    ({ mkDerivation, stm, time }:
     mkDerivation {
       pname = "stm-stats";
       version = "0.2.0.0";
       sha256 = "0i8ky2l8lvh7nymxglvbifp0ylbyjw20p75avzb51zpzx6qkjkqa";
       buildDepends = [ stm time ];
       description = "retry statistics for STM transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stm-tlist" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "stm-tlist";
       version = "0.1.1";
       sha256 = "0ssr8phmm9m93kcp045jr0rcn1dxzz202cgyw1vzjl2ch55bcsy6";
       buildDepends = [ stm ];
       homepage = "https://github.com/joeyadams/haskell-stm-tlist";
       description = "Mutable, singly-linked list in STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stmcontrol" = callPackage
    ({ mkDerivation, mtl, stm }:
     mkDerivation {
       pname = "stmcontrol";
       version = "0.1";
       sha256 = "0m42pgnvzqadqycq0qbml5da0zw7myc24y5vka1qydz7rdfyaa24";
       buildDepends = [ mtl stm ];
       homepage = "http://sulzmann.blogspot.com/2008/12/stm-with-control-communication-for.html";
       description = "Control communication among retrying transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stomp-conduit" = callPackage
    ({ mkDerivation, conduit, mime, mtl, resourcet, stomp-queue, stompl
     }:
     mkDerivation {
       pname = "stomp-conduit";
       version = "0.0.3";
       sha256 = "0i2fz5hcqjhrnnqkfzpizn1w9iyqy966yny2anl3glwi6nqyam0s";
       buildDepends = [ conduit mime mtl resourcet stomp-queue stompl ];
       homepage = "http://github.com/toschoo/mom";
       description = "Stompl Conduit Client";
       license = "LGPL";
     }) {};

  "stomp-patterns" = callPackage
    ({ mkDerivation, mime, mtl, split, stomp-queue, stompl, time }:
     mkDerivation {
       pname = "stomp-patterns";
       version = "0.0.1";
       sha256 = "0wa07y1ks581fvlkfzv23vb0r96iwr5x0r95j9bmcsh0ln405nrn";
       buildDepends = [ mime mtl split stomp-queue stompl time ];
       homepage = "http://github.com/toschoo/mom";
       description = "Stompl MOM Stomp Patterns";
       license = "LGPL";
     }) {};

  "stomp-queue" = callPackage
    ({ mkDerivation, attoparsec, mime, network, split, stompl, time
     , utf8-string
     }:
     mkDerivation {
       pname = "stomp-queue";
       version = "0.1.4";
       sha256 = "0qn6mnplwqzz05g1k8ib4q7ga6if2iw3y9a5yba61gn1ghhwhgl9";
       buildDepends = [
         attoparsec mime network split stompl time utf8-string
       ];
       homepage = "http://github.com/toschoo/mom";
       description = "Stompl Client Library";
       license = "LGPL";
     }) {};

  "stompl" = callPackage
    ({ mkDerivation, attoparsec, mime, split, text, utf8-string }:
     mkDerivation {
       pname = "stompl";
       version = "0.2.0";
       sha256 = "1p583n14q2iqwhw2n6942zcav261119i1g8h2rca5ankpp227a2z";
       buildDepends = [ attoparsec mime split text utf8-string ];
       homepage = "http://github.com/toschoo/mom";
       description = "Stomp Parser and Utilities";
       license = "LGPL";
     }) {};

  "storable" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "storable";
       version = "0.1";
       sha256 = "10289mf3fskfpg0jwgzyhvg4arb0hcj3r94jngb3hlbidvf8k1jg";
       buildDepends = [ mtl ];
       homepage = "http://anna.fi.muni.cz/~xjanous3/gitweb/?p=storable.git;a=summary";
       description = "Storable type class for variable-sized data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storable-complex" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "storable-complex";
       version = "0.2.1";
       sha256 = "0dnxnsi7m5whwwki3fry6db6gyy5qzfz8jcj1fg3fhfyf4f9wpaz";
       description = "Storable instance for Complex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storable-endian" = callPackage
    ({ mkDerivation, byteorder }:
     mkDerivation {
       pname = "storable-endian";
       version = "0.2.5";
       sha256 = "04j1nk0wga4dqrqvhm8yd9h9194db1n3yrnhg8s3gsc0jk7yw1p2";
       buildDepends = [ byteorder ];
       description = "Storable instances with endianness";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storable-record" = callPackage
    ({ mkDerivation, transformers, utility-ht }:
     mkDerivation {
       pname = "storable-record";
       version = "0.0.3";
       sha256 = "1mv2s4r7dqkl2fy0wjnywyr2zi2g53nkn0z72mgr8drkzdszzxx1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ transformers utility-ht ];
       homepage = "http://code.haskell.org/~thielema/storable-record/";
       description = "Elegant definition of Storable instances for records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storable-static-array" = callPackage
    ({ mkDerivation, tagged, vector }:
     mkDerivation {
       pname = "storable-static-array";
       version = "0.6.1.0";
       sha256 = "0akdh6v2cdq38jw8v69bn3m50g6wxanh0plikq4hj5mfrkg6xsxm";
       buildDepends = [ tagged vector ];
       description = "Statically-sized array wrappers with Storable instances for FFI marshaling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storable-tuple" = callPackage
    ({ mkDerivation, storable-record, utility-ht }:
     mkDerivation {
       pname = "storable-tuple";
       version = "0.0.2";
       sha256 = "03qls46rwc3za730r6pv63rrnjq4vkh3h2vjhx9082dqa9q7vqqd";
       buildDepends = [ storable-record utility-ht ];
       homepage = "http://code.haskell.org/~thielema/storable-tuple/";
       description = "Storable instance for pairs and triples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storablevector" = callPackage
    ({ mkDerivation, non-negative, QuickCheck, random, syb
     , transformers, unsafe, utility-ht
     }:
     mkDerivation {
       pname = "storablevector";
       version = "0.2.9";
       sha256 = "1yxinp6zggy7fvzgg15k17rqzlckawwcsfznz8jah91xx6v20kq0";
       buildDepends = [
         non-negative QuickCheck syb transformers unsafe utility-ht
       ];
       testDepends = [ QuickCheck random ];
       homepage = "http://www.haskell.org/haskellwiki/Storable_Vector";
       description = "Fast, packed, strict storable arrays with a list interface like ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storablevector-carray" = callPackage
    ({ mkDerivation, carray, storablevector, utility-ht }:
     mkDerivation {
       pname = "storablevector-carray";
       version = "0.0";
       sha256 = "1cqgfddaldxj2yig39fr2smm23nfz52dvh5grf4zr222djm7043i";
       buildDepends = [ carray storablevector utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/Storable_Vector";
       description = "Conversion between storablevector and carray";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "storablevector-streamfusion" = callPackage
    ({ mkDerivation, binary, storablevector, stream-fusion, utility-ht
     }:
     mkDerivation {
       pname = "storablevector-streamfusion";
       version = "0.0";
       sha256 = "1qgnakr01f28iarq1qd5x86919fj7zwf19nb80w7757l0dhdjb6m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary storablevector stream-fusion utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/Storable_Vector";
       description = "Conversion between storablevector and stream-fusion lists with fusion";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "str" = callPackage
    ({ mkDerivation, base16-bytestring, Crypto, hashable, MissingH
     , text, utf8-string
     }:
     mkDerivation {
       pname = "str";
       version = "0.1.0.0";
       sha256 = "093bgzjj183g48gapmjvbrbp7ns7wfcf94ishgwy84gajpkyb6sr";
       buildDepends = [
         base16-bytestring Crypto hashable MissingH text utf8-string
       ];
       homepage = "http://www.github.com/thinkpad20/str";
       description = "A type class to abstract between many different string types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stream-fusion" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "stream-fusion";
       version = "0.1.2.5";
       sha256 = "006fz03jdwd9d0kwf8ma3077xxmg6zym94pwbb4sx1xcn7zf4yc6";
       homepage = "http://hackage.haskell.org/trac/ghc/ticket/915";
       description = "Faster Haskell lists using stream fusion";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stream-monad" = callPackage
    ({ mkDerivation, logict }:
     mkDerivation {
       pname = "stream-monad";
       version = "0.4.0.2";
       sha256 = "0311j6a378pm26g9qqfjpnjq7909qj69fhiw253ln603z5q5gkc6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ logict ];
       homepage = "http://github.com/sebfisch/stream-monad";
       description = "Simple, Fair and Terminating Backtracking Monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "streamed" = callPackage
    ({ mkDerivation, alsa-core, alsa-seq, data-accessor
     , data-accessor-transformers, event-list, midi, midi-alsa
     , non-negative, random, transformers, utility-ht
     }:
     mkDerivation {
       pname = "streamed";
       version = "0.2";
       sha256 = "0dql0vxw28nr60979zhhc9frwqhg6cmj8g03r4m8zlb6anqwv7xa";
       buildDepends = [
         alsa-core alsa-seq data-accessor data-accessor-transformers
         event-list midi midi-alsa non-negative random transformers
         utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/MIDI";
       description = "Programmatically edit MIDI event streams via ALSA";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "streaming-commons" = callPackage
    ({ mkDerivation, async, blaze-builder, deepseq, hspec, network
     , QuickCheck, random, stm, text, transformers, zlib
     }:
     mkDerivation {
       pname = "streaming-commons";
       version = "0.1.7.3";
       sha256 = "12sm59dhjrygly215888i2xcsn5m5a393ir0mm6w62883x49wzxb";
       buildDepends = [
         blaze-builder network random stm text transformers zlib
       ];
       testDepends = [
         async blaze-builder deepseq hspec network QuickCheck text zlib
       ];
       homepage = "https://github.com/fpco/streaming-commons";
       description = "Common lower-level functions needed by various streaming data libraries";
       license = stdenv.lib.licenses.mit;
     }) {};

  "streamproc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "streamproc";
       version = "1.6.2";
       sha256 = "1wl44n4nav4h203mzfdf1bd5nh4v23dib54lvxka1rl3zymgyvp7";
       homepage = "http://github.com/peti/streamproc";
       description = "Stream Processer Arrow";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "streams" = callPackage
    ({ mkDerivation, adjunctions, comonad, distributive, semigroupoids
     , semigroups
     }:
     mkDerivation {
       pname = "streams";
       version = "3.2";
       sha256 = "1pms4wiispnpzysq44fcvspdxmbwk47rfcpcyshnnhpw7c7qngni";
       buildDepends = [
         adjunctions comonad distributive semigroupoids semigroups
       ];
       homepage = "http://github.com/ekmett/streams/issues";
       description = "Various Haskell 2010 stream comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strict" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "strict";
       version = "0.3.2";
       sha256 = "08cjajqz9h47fkq98mlf3rc8n5ghbmnmgn8pfsl3bdldjdkmmlrc";
       homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
       description = "Strict data types and String IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strict-base-types" = callPackage
    ({ mkDerivation, aeson, bifunctors, binary, deepseq, lens
     , QuickCheck, strict
     }:
     mkDerivation {
       pname = "strict-base-types";
       version = "0.3.0";
       sha256 = "03z38yxig43qq4xw9hinzzfarzy7176s5gfv8rsjnild8sa0bsvb";
       buildDepends = [
         aeson bifunctors binary deepseq lens QuickCheck strict
       ];
       homepage = "https://github.com/meiersi/strict-base-types";
       description = "Strict variants of the types provided in base";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strict-concurrency" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "strict-concurrency";
       version = "0.2.4.1";
       sha256 = "128sbh5fnv02v2xdjlk7cb525bfckqyj7fyz5399nfycs0nj2f89";
       buildDepends = [ deepseq ];
       homepage = "http://code.haskell.org/~dons/code/strict-concurrency";
       description = "Strict concurrency abstractions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strict-ghc-plugin" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "strict-ghc-plugin";
       version = "0.1.1";
       sha256 = "0hx1zp99npwdp5w3q93xfidcw59lxskilmbqc80xi97d4w4h8jrb";
       buildDepends = [ syb ];
       homepage = "http://thoughtpolice.github.com/strict-ghc-plugin";
       description = "Compiler plugin for making Haskell strict";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strict-identity" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "strict-identity";
       version = "0.1.0.0";
       sha256 = "1fzcim7baycdb60z5icdw5flj1a3dfn6xscpyif6l94c1538g3i1";
       homepage = "https://github.com/cartazio/strict-identity";
       description = "Strict Identity Monad, handy for writing fast code!";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strict-io" = callPackage
    ({ mkDerivation, deepseq, extensible-exceptions }:
     mkDerivation {
       pname = "strict-io";
       version = "0.2.1";
       sha256 = "003pfzjixa04qyx4db0rgk7y72nk2xwlb29aigmdmfn80xbmw9md";
       buildDepends = [ deepseq extensible-exceptions ];
       description = "A library wrapping standard IO modules to provide strict IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strictify" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "strictify";
       version = "0.1";
       sha256 = "0z28ifg21xgzh75ird41mp40a4rrc5p0wrnbhrxv92ih6pf5zmah";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "Find a local optimum of strictness annotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strictly" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "strictly";
       version = "1.0.0.0";
       sha256 = "1a3azrg9ksb4kmbckjqw3krxj0app6q19ighd6k3z7xpf682qx3c";
       buildDepends = [ deepseq ];
       homepage = "https://github.com/DanBurton/strictly#readme";
       description = "Combinators for strictifying functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "string" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "string";
       version = "0.4.0";
       sha256 = "1l94p8c9j8a2dbpwj5q7d1m61gdhmi6vllz34g8d9qjfwpnx7z6z";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "string-class" = callPackage
    ({ mkDerivation, tagged, text }:
     mkDerivation {
       pname = "string-class";
       version = "0.1.6.4";
       sha256 = "0hh2xcbf7sjsv15jgldpy5njjvkkkxwlg2g9961z9fn94zyi7854";
       buildDepends = [ tagged text ];
       homepage = "https://github.com/bairyn/string-class";
       description = "String class library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "string-combinators" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "string-combinators";
       version = "0.6.0.5";
       sha256 = "07ky2z5f1l5mb7r3rvyraak0bzciq4krkg5lv8g0a5vxpnzlm4cl";
       homepage = "https://github.com/basvandijk/string-combinators";
       description = "Polymorphic functions to build and combine stringlike values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "string-conversions" = callPackage
    ({ mkDerivation, text, utf8-string }:
     mkDerivation {
       pname = "string-conversions";
       version = "0.3.0.3";
       sha256 = "0n2ifim9n5vm305r989lh5xlbd8qc6byip2nfavf6gd2bcscs84p";
       buildDepends = [ text utf8-string ];
       description = "Simplifies dealing with different types for strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "string-convert" = callPackage
    ({ mkDerivation, text, utf8-string }:
     mkDerivation {
       pname = "string-convert";
       version = "2.0.0";
       sha256 = "1wwx7j6qvb93yc0r2hdah1rgbi96r2mjhmibx72d4x7idhn0xsd9";
       buildDepends = [ text utf8-string ];
       homepage = "https://bitbucket.org/tdammers/string-convert";
       description = "Provide universal string conversions between any two string-like types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "string-qq" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "string-qq";
       version = "0.0.2";
       sha256 = "0662m3i5xrdrr95w829bszkhp88mj9iy1zya54vk2sl5hz9wlmwp";
       description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "string-quote" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "string-quote";
       version = "0.0.1";
       sha256 = "1pfkd3lwdphvl00gly7zbpvsmlw6b2d5568rxyqmq2qw6vzf9134";
       description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "string-similarity" = callPackage
    ({ mkDerivation, hspec, QuickCheck, suffixtree }:
     mkDerivation {
       pname = "string-similarity";
       version = "0.1.0.0";
       sha256 = "0k03krg3m03bxk9i5ph5ipks9b0j8yqsal0haf8fyjq83xs1hbmv";
       buildDepends = [ suffixtree ];
       testDepends = [ hspec QuickCheck ];
       homepage = "http://github.com/mwotton/string-similarity";
       description = "longest common substring";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stringable" = callPackage
    ({ mkDerivation, system-filepath, text }:
     mkDerivation {
       pname = "stringable";
       version = "0.1.3";
       sha256 = "10jsvbiqbmnbipv1566k5mqkpgfyrzbk8m7b18rqjb5m3qg9dbz7";
       buildDepends = [ system-filepath text ];
       description = "A Stringable type class, in the spirit of Foldable and Traversable";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stringbuilder" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "stringbuilder";
       version = "0.5.0";
       sha256 = "1ap95xphqnrhv64c2a137wqslkdmb2jjd9ldb17gs1pw48k8hrl9";
       testDepends = [ hspec QuickCheck ];
       description = "A writer monad for multi-line string literals";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stringlike" = callPackage
    ({ mkDerivation, QuickCheck, quickcheck-instances, test-framework
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "stringlike";
       version = "0.0.0";
       sha256 = "0wrhma5g73lnyazbb11z2xhd7fdz93mb1kgbqxjn1prhlc3j7ahy";
       buildDepends = [ text ];
       testDepends = [
         QuickCheck quickcheck-instances test-framework
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/selectel/stringlike";
       description = "Transformations to several string-like types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stringprep" = callPackage
    ({ mkDerivation, QuickCheck, tasty, tasty-quickcheck, tasty-th
     , text, text-icu
     }:
     mkDerivation {
       pname = "stringprep";
       version = "1.0.0";
       sha256 = "0ha4cvzdppd514xh9315v3nvrn1q4xd74gifdqpszw98hj2mw0b0";
       buildDepends = [ text text-icu ];
       testDepends = [
         QuickCheck tasty tasty-quickcheck tasty-th text text-icu
       ];
       description = "Implements the \"StringPrep\" algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "strings" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "strings";
       version = "1.1";
       sha256 = "1xz9v3w5s13yhk7iy9dw6i8s2jc6c0b1ci96dwmcq9a1n3l3ng4v";
       buildDepends = [ text ];
       homepage = "http://hub.darcs.net/scravy/strings";
       description = "Functions for working with strings, including Text, ByteString, etc";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stringsearch" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "stringsearch";
       version = "0.3.6.5";
       sha256 = "1mjvb1qr4fkxv5qvq4jfswa3dcj3dwzvwx7dbp2wqw8zand41lsq";
       homepage = "https://bitbucket.org/dafis/stringsearch";
       description = "Fast searching, splitting and replacing of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stringtable-atom" = callPackage
    ({ mkDerivation, binary, syb }:
     mkDerivation {
       pname = "stringtable-atom";
       version = "0.0.7";
       sha256 = "1wp6w12bflrqcwi09y7s1crj72n4pbj8bkpwj2ia5gaqn5x56wjs";
       buildDepends = [ binary syb ];
       homepage = "http://github.com/audreyt/stringtable-atom/";
       description = "Memoize Strings as Atoms for fast comparison and sorting, with maps and sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stripe" = callPackage
    ({ mkDerivation, aeson, http-conduit, http-types, mtl, text, time
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "stripe";
       version = "0.8.1";
       sha256 = "0vmgj9n7q8ik31z7zzfjfv1qj8f8vrqn9cvk8kjp3k4shj25p7sy";
       buildDepends = [
         aeson http-conduit http-types mtl text time unordered-containers
         utf8-string
       ];
       homepage = "https://github.com/michaelschade/hs-stripe";
       description = "A Haskell implementation of the Stripe API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stripe-haskell" = callPackage
    ({ mkDerivation, aeson, either, HsOpenSSL, hspec, http-streams
     , io-streams, mtl, random, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "stripe-haskell";
       version = "0.1.1.0";
       sha256 = "0ys54lwbqk8dv5pslw2krd1bdh8giwr54nwq1vq35lqijgm6ywvz";
       buildDepends = [
         aeson either HsOpenSSL http-streams io-streams mtl text time
         transformers unordered-containers
       ];
       testDepends = [
         aeson either HsOpenSSL hspec random text time transformers
       ];
       homepage = "https://github.com/dmjio/stripe-haskell";
       description = "Stripe API for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "strive" = callPackage
    ({ mkDerivation, aeson, data-default, Glob, gpolyline, hlint
     , http-conduit, http-types, markdown-unlit, regex-compat, text
     , time, transformers
     }:
     mkDerivation {
       pname = "strive";
       version = "0.6.1";
       sha256 = "1cy555hhk5bdpk2hmkxx4pbi6m7vaadv4ksgfhcxbzyxmpi0wdwm";
       buildDepends = [
         aeson data-default Glob gpolyline http-conduit http-types
         regex-compat text time transformers
       ];
       testDepends = [ aeson data-default hlint markdown-unlit time ];
       homepage = "http://taylor.fausak.me/strive/";
       description = "A Haskell client for the Strava V3 API";
       license = stdenv.lib.licenses.mit;
     }) {};

  "strptime" = callPackage
    ({ mkDerivation, text, time }:
     mkDerivation {
       pname = "strptime";
       version = "1.0.10";
       sha256 = "1f42yf49fqr2fyjfakscmmlnmw3w5rg7wyy6gjyrf0gcgsh0h9fd";
       buildDepends = [ text time ];
       description = "Efficient parsing of LocalTime using a binding to C's strptime, with some extra features (i.e. fractional seconds)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "structural-induction" = callPackage
    ({ mkDerivation, genifunctors, geniplate, language-haskell-extract
     , mtl, QuickCheck, safe, testing-feat
     }:
     mkDerivation {
       pname = "structural-induction";
       version = "0.1.2";
       sha256 = "153w6p4xn3fv13kdq3cf4jwiikplnyiaczw30dy9mwyb2i8fp7r5";
       buildDepends = [ genifunctors mtl safe ];
       testDepends = [
         geniplate language-haskell-extract mtl QuickCheck safe testing-feat
       ];
       homepage = "http://www.github.com/danr/structural-induction";
       description = "Instantiate structural induction schemas for algebraic data types";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "structured-haskell-mode" = callPackage
    ({ mkDerivation, emacs, haskell-src-exts }:
     mkDerivation {
       pname = "structured-haskell-mode";
       version = "1.0.4";
       sha256 = "1402wx27py7292ad7whsb13ywv71k36501jpfrn2p0v7knzknj8z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskell-src-exts ];
       buildTools = [ emacs ];
       postInstall = ''
         emacs -L elisp --batch -f batch-byte-compile "elisp/"*.el
         install -d $out/share/emacs/site-lisp
         install "elisp/"*.el "elisp/"*.elc  $out/share/emacs/site-lisp
       '';
       homepage = "https://github.com/chrisdone/structured-haskell-mode";
       description = "Structured editing Emacs mode for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "structured-mongoDB" = callPackage
    ({ mkDerivation, bson, compact-string-fix, monad-control, mongoDB
     , mtl, transformers, transformers-base
     }:
     mkDerivation {
       pname = "structured-mongoDB";
       version = "0.3";
       sha256 = "0f4s4zi6h53jhcj3f43a2arra02fk1i2almdm6x2mjy1mzhdkjdx";
       buildDepends = [
         bson compact-string-fix monad-control mongoDB mtl transformers
         transformers-base
       ];
       description = "Structured MongoDB interface";
       license = "GPL";
     }) {};

  "structures" = callPackage
    ({ mkDerivation, contravariant, deepseq, doctest, filepath, free
     , hashable, hlint, hybrid-vectors, lens, monad-st, parallel
     , primitive, QuickCheck, semigroups, tasty, tasty-quickcheck
     , tasty-th, transformers, unordered-containers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "structures";
       version = "0.2";
       sha256 = "000misbp9fsnmzhqi7na9b56h45c18ac86j7gfaxv7fgqz82zis8";
       buildDepends = [
         contravariant deepseq free hashable hybrid-vectors lens monad-st
         parallel primitive semigroups transformers vector vector-algorithms
       ];
       testDepends = [
         deepseq doctest filepath hlint QuickCheck semigroups tasty
         tasty-quickcheck tasty-th unordered-containers
       ];
       homepage = "http://github.com/ekmett/structures";
       description = "\"Advanced\" Data Structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stunclient" = callPackage
    ({ mkDerivation, cereal, crypto-api, cryptohash
     , cryptohash-cryptoapi, digest, network, QuickCheck, random
     , stringprep, test-framework, test-framework-quickcheck2, text
     , transformers, unbounded-delays
     }:
     mkDerivation {
       pname = "stunclient";
       version = "0.1.0.1";
       sha256 = "0i9sbicwx6d3vsp2fxjr31msd1n5nqh1vxb2hn4in5n8y6d32qlx";
       buildDepends = [
         cereal crypto-api cryptohash cryptohash-cryptoapi digest network
         random stringprep text transformers unbounded-delays
       ];
       testDepends = [
         cereal digest network QuickCheck random test-framework
         test-framework-quickcheck2 text transformers unbounded-delays
       ];
       description = "RFC 5389: Session Traversal Utilities for NAT (STUN) client";
       license = stdenv.lib.licenses.mit;
     }) {};

  "stunts" = callPackage
    ({ mkDerivation, binary, bullet, elerea, GLFW-b, lambdacube-bullet
     , lambdacube-engine, mtl, random, vector
     }:
     mkDerivation {
       pname = "stunts";
       version = "0.1.2";
       sha256 = "075rbdhlrz88qkwx54jrmb4h4jq8q5wk4ncb858llaswcbsfgl8w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary bullet elerea GLFW-b lambdacube-bullet lambdacube-engine mtl
         random vector
       ];
       homepage = "http://www.haskell.org/haskellwiki/LambdaCubeEngine";
       description = "A revival of the classic game Stunts (LambdaCube tech demo)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stylish-haskell" = callPackage
    ({ mkDerivation, aeson, cmdargs, filepath, haskell-src-exts, HUnit
     , mtl, strict, syb, test-framework, test-framework-hunit, yaml
     }:
     mkDerivation {
       pname = "stylish-haskell";
       version = "0.5.11.0";
       sha256 = "1174gs5a2n6l2flyb2x93yiq7viwb52kbadw6jya6041xrpblckz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson cmdargs filepath haskell-src-exts mtl strict syb yaml
       ];
       testDepends = [
         aeson cmdargs filepath haskell-src-exts HUnit mtl syb
         test-framework test-framework-hunit yaml
       ];
       homepage = "https://github.com/jaspervdj/stylish-haskell";
       description = "Haskell code prettifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "stylized" = callPackage
    ({ mkDerivation, ansi-terminal }:
     mkDerivation {
       pname = "stylized";
       version = "0.1.3";
       sha256 = "09gacqlq3vlnsnbjjr44pjypw9v3amg8sqsxg0xwl8ricxpww774";
       buildDepends = [ ansi-terminal ];
       homepage = "http://patch-tag.com/r/lucid/Stylized";
       description = "Ways to output stylized text on ANSI consoles";
       license = "GPL";
     }) {};

  "subtitleParser" = callPackage
    ({ mkDerivation, attoparsec, text }:
     mkDerivation {
       pname = "subtitleParser";
       version = "0.5";
       sha256 = "1kkr6zbnv777gnv2lwq3pyxq3vv5r24f4avwv5g4dds3y8d8mv3q";
       buildDepends = [ attoparsec text ];
       homepage = "https://patch-tag.com/r/rubenAst/subtitleParser/home";
       description = "A parser for .srt and .sub files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "subtitles" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "subtitles";
       version = "0.0.1";
       sha256 = "0pvcwwz6i4mpmir0s2xnjy27j2cnbi4l9lxhlmxcsw4yz4spdgcl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ split ];
       description = "Modify SRT subtitle files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "suffixarray" = callPackage
    ({ mkDerivation, HUnit, vector }:
     mkDerivation {
       pname = "suffixarray";
       version = "0.0.3.1";
       sha256 = "0wa2yfz5y90dq9mf3xyl7126rvjldnaa32gmg253bfv6hjvk4hhp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HUnit vector ];
       homepage = "https://github.com/VictorDenisov/suffixarray";
       description = "n log n implementation of suffix array";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "suffixtree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "suffixtree";
       version = "0.2.2.1";
       sha256 = "1ddk2hp27al9jzcgkrhv7v1i7knci4l22flkgb2r94h96z5nhfq6";
       homepage = "https://github.com/bos/suffixtree";
       description = "Efficient, lazy suffix tree implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sugarhaskell" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "sugarhaskell";
       version = "0.1";
       sha256 = "1hlzckm5c1dih79nmwy2gk4fjnn4kxzp3pk0adfyhldapkq6wpmq";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://sugarj.org";
       description = "Library-based syntactic extensibility for Haskell";
       license = "GPL";
     }) {};

  "suitable" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "suitable";
       version = "0.1.1";
       sha256 = "1pvw7zgvfr0z2gjy224gd92ayh20j3v97rdlqmq6k6g4yabdpgci";
       description = "Abstract over the constraints on the parameters to type constructors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sundown" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "sundown";
       version = "0.6";
       sha256 = "09xh3pbyarflfjk17bn2isgpmsq49d6gmq7z918kf4c32fc7x6yb";
       buildDepends = [ text ];
       homepage = "https://github.com/bitonic/sundown";
       description = "Bindings to the sundown markdown library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "sunlight" = callPackage
    ({ mkDerivation, Cabal, random, time, tuple }:
     mkDerivation {
       pname = "sunlight";
       version = "0.6.0.0";
       sha256 = "1q90fxv40jz5ngh6xi1n6xjx6hh1as223wjjhchk6k0y0frdg55x";
       buildDepends = [ Cabal random time tuple ];
       homepage = "http://www.github.com/massysett/sunlight";
       description = "Test Cabalized package against multiple dependency versions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sunroof-compiler" = callPackage
    ({ mkDerivation, Boolean, data-default, data-reify, mtl
     , operational, semigroups, tagged, transformers, vector-space
     }:
     mkDerivation {
       pname = "sunroof-compiler";
       version = "0.2";
       sha256 = "1r03aw55s4vnpbfk0n39li0aai3wvm209pqdimfkkk3kkan648cz";
       buildDepends = [
         Boolean data-default data-reify mtl operational semigroups tagged
         transformers vector-space
       ];
       homepage = "https://github.com/ku-fpg/sunroof-compiler";
       description = "Monadic Javascript Compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sunroof-examples" = callPackage
    ({ mkDerivation, Boolean, data-default, filepath, parallel-io
     , QuickCheck, random, semigroups, shake, stm, sunroof-compiler
     , sunroof-server
     }:
     mkDerivation {
       pname = "sunroof-examples";
       version = "0.2.2";
       sha256 = "0bcxai3gq1akbcxqkkj0n52a43zqcnw865bnngy9b4z26b43kj5k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Boolean data-default filepath parallel-io QuickCheck random
         semigroups shake stm sunroof-compiler sunroof-server
       ];
       homepage = "https://github.com/ku-fpg/sunroof-examples";
       description = "Tests for Sunroof";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sunroof-server" = callPackage
    ({ mkDerivation, aeson, data-default, filepath, kansas-comet
     , scientific, scotty, semigroups, stm, sunroof-compiler, tagged
     , text, time, transformers, unordered-containers, vector
     , vector-space, wai-middleware-static, warp
     }:
     mkDerivation {
       pname = "sunroof-server";
       version = "0.2.1";
       sha256 = "11acyb846wga6g6zcvlaffh299qn0l8jic8syg76cchm3l3348d5";
       buildDepends = [
         aeson data-default filepath kansas-comet scientific scotty
         semigroups stm sunroof-compiler tagged text time transformers
         unordered-containers vector vector-space wai-middleware-static warp
       ];
       homepage = "https://github.com/ku-fpg/sunroof-server";
       description = "Monadic Javascript Compiler - Server Utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "supercollider-ht" = callPackage
    ({ mkDerivation, hosc, hsc3, opensoundcontrol-ht, random
     , transformers
     }:
     mkDerivation {
       pname = "supercollider-ht";
       version = "0.3";
       sha256 = "1v8nqcfdn2dasiv24lny73bc0xz2d26wvvybhxw6s7dz4bkb9kiw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         hosc hsc3 opensoundcontrol-ht random transformers
       ];
       homepage = "http://www.haskell.org/haskellwiki/SuperCollider";
       description = "Haskell SuperCollider utilities";
       license = "GPL";
     }) {};

  "supercollider-midi" = callPackage
    ({ mkDerivation, alsa-seq, data-accessor
     , data-accessor-transformers, event-list, hosc, hsc3, midi
     , midi-alsa, non-negative, opensoundcontrol-ht, random
     , supercollider-ht, transformers, utility-ht
     }:
     mkDerivation {
       pname = "supercollider-midi";
       version = "0.2.1";
       sha256 = "1m3h6d49bjwhldbf4khyp6p8k4vr05m5392nk3d33x3d9pfhl20k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         alsa-seq data-accessor data-accessor-transformers event-list hosc
         hsc3 midi midi-alsa non-negative opensoundcontrol-ht random
         supercollider-ht transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/SuperCollider";
       description = "Demonstrate how to control SuperCollider via ALSA-MIDI";
       license = "GPL";
     }) {};

  "superdoc" = callPackage
    ({ mkDerivation, Cabal, filepath }:
     mkDerivation {
       pname = "superdoc";
       version = "0.1.2.1";
       sha256 = "1fjy25fm7hz495dnxl9jw0asfhl23ykyax1w4q4yvkpmx8ars9wd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal filepath ];
       homepage = "http://www.mathstat.dal.ca/~selinger/superdoc/";
       description = "Additional documentation markup and Unicode support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "supero" = callPackage
    ({ mkDerivation, cpphs, filepath, haskell-src-exts, mtl, time
     , uniplate
     }:
     mkDerivation {
       pname = "supero";
       version = "3.0";
       sha256 = "0jnip7wahy4z1jiablqzvmbk40as1ala65m7da7gsp0xvf2q7hwf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cpphs filepath haskell-src-exts mtl time uniplate
       ];
       homepage = "http://community.haskell.org/~ndm/supero/";
       description = "A Supercompiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "supervisor" = callPackage
    ({ mkDerivation, exceptions, monadloc, mtl }:
     mkDerivation {
       pname = "supervisor";
       version = "0.1.1.0";
       sha256 = "1gdgqm89ig236hkrz8sjgy3shqnl961401qgavs4qpqw7r2xk8vx";
       buildDepends = [ exceptions monadloc mtl ];
       homepage = "http://github.com/agocorona/supervisor";
       description = "Control an internal monad execution for trace generation, backtrakcking, testing and other purposes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "suspend" = callPackage
    ({ mkDerivation, lifted-base, transformers-base }:
     mkDerivation {
       pname = "suspend";
       version = "0.2.0.0";
       sha256 = "0wphk3dabba6rgd9lkxbsmq5vivvyy6b4jfxfndqb53yhdj5nkrg";
       buildDepends = [ lifted-base transformers-base ];
       description = "Simple package that allows for long thread suspensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "svg2q" = callPackage
    ({ mkDerivation, language-c, svgutils, syb, xml }:
     mkDerivation {
       pname = "svg2q";
       version = "0.3.2";
       sha256 = "0bkhh1klwp3lgsx0s62bpdhsw9sa1cdw8gjijj9npnygznbi7jhj";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ language-c svgutils syb xml ];
       homepage = "http://www.informatik.uni-kiel.de/~jgr/svg2q";
       description = "Code generation tool for Quartz code from a SVG";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "svgcairo" = callPackage
    ({ mkDerivation, cairo, glib, gtk2hs-buildtools, libc, librsvg, mtl
     , text
     }:
     mkDerivation {
       pname = "svgcairo";
       version = "0.13.0.0";
       sha256 = "1i93dhg2fpnk38lgbfpsl97xpfgifrl7xs5nny5vj4hi8ln76ih0";
       buildDepends = [ cairo glib mtl text ];
       buildTools = [ gtk2hs-buildtools ];
       extraLibraries = [ libc ];
       pkgconfigDepends = [ librsvg ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the libsvg-cairo library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "svgutils" = callPackage
    ({ mkDerivation, filepath, xml }:
     mkDerivation {
       pname = "svgutils";
       version = "0.1";
       sha256 = "131mic1c09adcphry7153bviiib59avxrd7dgwny0vdmw23cgfs1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath xml ];
       homepage = "https://patch-tag.com/r/twistedsquare/svgutils/home";
       description = "Helper functions for dealing with SVG files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "svm" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "svm";
       version = "1.0.0.1";
       sha256 = "19fr1lzp8j0hmqqy1hyx85gmkgxc2hy8cz5zv6jlvni0qqibiksz";
       homepage = "http://github.com/andrewdougherty/svm";
       description = "A support vector machine written in Haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "svm-light-utils" = callPackage
    ({ mkDerivation, attoparsec }:
     mkDerivation {
       pname = "svm-light-utils";
       version = "0.1.0.0";
       sha256 = "1nphv98ch0s336rr9nm7bw7vagn4qa5fv6xk6fjkbr5fs19ddbs2";
       buildDepends = [ attoparsec ];
       homepage = "http://github.com/bgamari/svm-light-utils";
       description = "Parsers and formatters for the SVMlight input file format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "svm-simple" = callPackage
    ({ mkDerivation, binary, bindings-svm, deepseq, monad-par
     , mwc-random, vector
     }:
     mkDerivation {
       pname = "svm-simple";
       version = "0.2.7.1";
       sha256 = "07s9mly01ar6c3p4fdl7wsi5j4bziagjjlbssr7x6s3ab5r8k9vd";
       buildDepends = [
         binary bindings-svm deepseq monad-par mwc-random vector
       ];
       homepage = "http://github.com/aleator/Simple-SVM";
       description = "Medium level, simplified, bindings to libsvm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "svndump" = callPackage
    ({ mkDerivation, attoparsec, doctest, filepath, text, time, zlib }:
     mkDerivation {
       pname = "svndump";
       version = "0.4.5";
       sha256 = "0m6agn9riamsadf13w1g6i0nx59xl812112xdkqh0zl34rf5hkwp";
       buildDepends = [ attoparsec filepath text time ];
       testDepends = [ attoparsec doctest filepath zlib ];
       homepage = "http://github.com/jwiegley/svndump/";
       description = "Library for reading Subversion dump files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "swagger" = callPackage
    ({ mkDerivation, aeson, tasty, tasty-hunit, text, time
     , transformers
     }:
     mkDerivation {
       pname = "swagger";
       version = "0.2.1";
       sha256 = "0b3yj37l80nvk2qnd1hnvqr6xsh11v7sb6s75wnr5gm6v7q5fd47";
       buildDepends = [ aeson text time transformers ];
       testDepends = [ aeson tasty tasty-hunit ];
       description = "Implementation of swagger data model";
       license = "unknown";
     }) {};

  "swapper" = callPackage
    ({ mkDerivation, binary, deepseq, happstack-data, happstack-state
     , parallel, tokyocabinet
     }:
     mkDerivation {
       pname = "swapper";
       version = "0.1";
       sha256 = "0a9g6cv7pvwna11cz1xc274rs0dgyhb84hqqdg5zyga7kkx0i06l";
       buildDepends = [
         binary deepseq happstack-data happstack-state parallel
       ];
       extraLibraries = [ tokyocabinet ];
       homepage = "http://github.com/roman-smrz/swapper/";
       description = "Transparently swapping data from in-memory structures to disk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "swf" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "swf";
       version = "1.0.1";
       sha256 = "1jx5941kb97w4zpgz7m1r2x2lxllmi1i9a9nmwflinyj74xxg1rl";
       buildDepends = [ mtl ];
       homepage = "http://www.n-heptane.com/nhlab";
       description = "A library for creating Shockwave Flash (SWF) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "swift-lda" = callPackage
    ({ mkDerivation, mwc-random, primitive, vector }:
     mkDerivation {
       pname = "swift-lda";
       version = "0.7.0.0";
       sha256 = "0cjvj7v8kjabv6a146hwgyk8k6b4z7gz4yrhz3d0nxa86ilvjl9q";
       buildDepends = [ mwc-random primitive vector ];
       homepage = "https://bitbucket.org/gchrupala/colada";
       description = "Online sampler for Latent Dirichlet Allocation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "swish" = callPackage
    ({ mkDerivation, filepath, hashable, HUnit, intern, mtl
     , network-uri, polyparse, semigroups, test-framework
     , test-framework-hunit, text, time
     }:
     mkDerivation {
       pname = "swish";
       version = "0.9.1.0";
       sha256 = "1wjqgkpb0k25jsflvpfnpi58ahlblk2wjbj9w6br0sc2qp107zdr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         filepath hashable intern mtl network-uri polyparse semigroups text
         time
       ];
       testDepends = [
         hashable HUnit network-uri semigroups test-framework
         test-framework-hunit text time
       ];
       homepage = "https://bitbucket.org/doug_burke/swish/wiki/Home";
       description = "A semantic web toolkit";
       license = "LGPL";
     }) {};

  "sws" = callPackage
    ({ mkDerivation, filepath, http-types, resourcet, transformers, wai
     , wai-extra, wai-middleware-static, warp, warp-tls
     }:
     mkDerivation {
       pname = "sws";
       version = "0.2.0.0";
       sha256 = "1kbqs439fs72lyw9kr5n1z583rdx3lz7204i9ip11b79l04sc144";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath http-types resourcet transformers wai wai-extra
         wai-middleware-static warp warp-tls
       ];
       description = "A simple web server for serving directories, similar to weborf";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syb" = callPackage
    ({ mkDerivation, HUnit, mtl }:
     mkDerivation {
       pname = "syb";
       version = "0.4.2";
       sha256 = "1gvyw2gbccip24wpp9xi6qgwvg4m5cijhzz1v51wvyamqv4p2b8l";
       testDepends = [ HUnit mtl ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
       description = "Scrap Your Boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syb-extras" = callPackage
    ({ mkDerivation, eq, prelude-extras }:
     mkDerivation {
       pname = "syb-extras";
       version = "0.3";
       sha256 = "1l1637kf1f7n5nvcp2hv516qah7baykh5w2wmil2b909k75iq2x9";
       buildDepends = [ eq prelude-extras ];
       homepage = "http://github.com/ekmett/syb-extras/";
       description = "Higher order versions of the Scrap Your Boilerplate classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syb-with-class" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "syb-with-class";
       version = "0.6.1.5";
       sha256 = "1gn4p92jabgvbk7bg1nzjimyfzznl800bi9hw4ssvc7jqqnyw5zn";
       description = "Scrap Your Boilerplate With Class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syb-with-class-instances-text" = callPackage
    ({ mkDerivation, syb-with-class, text }:
     mkDerivation {
       pname = "syb-with-class-instances-text";
       version = "0.0.1";
       sha256 = "0vnpqk89nxs0anx62mzasl9wrcscw18vwc284y067ryb086aj2hf";
       buildDepends = [ syb-with-class text ];
       description = "Scrap Your Boilerplate With Class Text instance";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sylvia" = callPackage
    ({ mkDerivation, cairo, comonad-transformers, data-default
     , data-lens, data-lens-template, gtk, optparse-applicative, parsec
     , smallcheck, test-framework, test-framework-smallcheck
     , transformers, void
     }:
     mkDerivation {
       pname = "sylvia";
       version = "0.2.2";
       sha256 = "1yjvjfkg623kpnzpkknljfgcizyf3jsvkncz49yjsy9j2iklqg2k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cairo comonad-transformers data-default data-lens
         data-lens-template gtk optparse-applicative parsec transformers
         void
       ];
       testDepends = [
         parsec smallcheck test-framework test-framework-smallcheck void
       ];
       homepage = "https://github.com/lfairy/sylvia";
       description = "Lambda calculus visualization";
       license = "GPL";
     }) {};

  "sym" = callPackage
    ({ mkDerivation, hashable, QuickCheck }:
     mkDerivation {
       pname = "sym";
       version = "0.11.1";
       sha256 = "140wy1l2y71v70fhl1z4sa5dvasz5f98w2knayhd7lvw15cglmbj";
       buildDepends = [ hashable QuickCheck ];
       homepage = "https://github.com/akc/sym";
       description = "Permutations, patterns, and statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sym-plot" = callPackage
    ({ mkDerivation, diagrams-cairo, diagrams-lib, sym }:
     mkDerivation {
       pname = "sym-plot";
       version = "0.2.0";
       sha256 = "0186i6c3dyvs5pa4fh0b284wgpm10pgwax9prahirnq8whph94p2";
       buildDepends = [ diagrams-cairo diagrams-lib sym ];
       homepage = "http://github.com/akc/sym-plot";
       description = "Plot permutations; an addition to the sym package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "symbol" = callPackage
    ({ mkDerivation, deepseq }:
     mkDerivation {
       pname = "symbol";
       version = "0.2.4";
       sha256 = "0cc8kdm68pirb0s7n46v0yvw5b718qf7qip40jkg5q3c3xsafx6h";
       buildDepends = [ deepseq ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "A 'Symbol' type for fast symbol comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "sync" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "sync";
       version = "0.1";
       sha256 = "10c2divizmjij5w7x2ky6dzhq6y6wr6qq1pwl7wlhgv663y9yalk";
       buildDepends = [ stm ];
       description = "A fast implementation of synchronous channels with a CML-like API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "synchronous-channels" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "synchronous-channels";
       version = "0.1";
       sha256 = "0j9ikxd7mihy2ljb8s14lz50nj8x30siffpdznlzs7ps0s97cszh";
       description = "Synchronous communication channels";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "synt" = callPackage
    ({ mkDerivation, argparser, haskell-src-exts, hspec, regexpr, split
     , Synt
     }:
     mkDerivation {
       pname = "synt";
       version = "0.1.2";
       sha256 = "12d9ilb81vcm24s8whk2cbq1nxlrzdsr7049962q6b0vkrk64v5v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ argparser haskell-src-exts regexpr split ];
       testDepends = [
         argparser haskell-src-exts hspec regexpr split Synt
       ];
       homepage = "http://github.com/brentlintner/synt";
       description = "Similar code analysis";
       license = "unknown";
     }) {};

  "syntactic" = callPackage
    ({ mkDerivation, constraints, data-hash, mtl, QuickCheck, safe
     , tagged, tasty, tasty-golden, tasty-quickcheck, tasty-th
     , tree-view, utf8-string
     }:
     mkDerivation {
       pname = "syntactic";
       version = "2.0";
       sha256 = "0b90afdfymsbgllk8np3xfkgrn2b5ry3n2wbpkn660rknsayw94x";
       buildDepends = [ constraints data-hash mtl safe tagged tree-view ];
       testDepends = [
         QuickCheck tagged tasty tasty-golden tasty-quickcheck tasty-th
         utf8-string
       ];
       homepage = "https://github.com/emilaxelsson/syntactic";
       description = "Generic representation and manipulation of abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syntactical" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "syntactical";
       version = "0.1";
       sha256 = "1sqnmarmdm4mha28h8gbp3jddlig84v7zqn53a29047w3877g3gw";
       description = "Distfix expression parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syntax" = callPackage
    ({ mkDerivation, lens, mono-traversable, scientific, semi-iso, text
     , vector
     }:
     mkDerivation {
       pname = "syntax";
       version = "1.0.0.0";
       sha256 = "1dhbzbf1zlpfjhnacqfhzvjznwlzv39c12a3y8ivqhplnkmqsm7x";
       buildDepends = [
         lens mono-traversable scientific semi-iso text vector
       ];
       description = "Reversible parsing and pretty-printing";
       license = stdenv.lib.licenses.mit;
     }) {};

  "syntax-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, scientific, semi-iso, syntax, text
     , vector
     }:
     mkDerivation {
       pname = "syntax-attoparsec";
       version = "1.0.0.0";
       sha256 = "1ygikzc7s967bh9yz19r9zd2r1jychlf04cylbigaakrxnnkj4hi";
       buildDepends = [
         attoparsec scientific semi-iso syntax text vector
       ];
       description = "Syntax instances for Attoparsec";
       license = stdenv.lib.licenses.mit;
     }) {};

  "syntax-example" = callPackage
    ({ mkDerivation, attoparsec, lens, scientific, semi-iso, syntax
     , syntax-attoparsec, syntax-printer, text
     }:
     mkDerivation {
       pname = "syntax-example";
       version = "1.0.0.0";
       sha256 = "1szfapnlcgr19cipm4q68w7p52sw2hapks63vcnn9qfjnav17ljr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec lens scientific semi-iso syntax syntax-attoparsec
         syntax-printer text
       ];
       description = "Example application using syntax, a library for abstract syntax descriptions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "syntax-example-json" = callPackage
    ({ mkDerivation, attoparsec, lens, scientific, semi-iso, syntax
     , syntax-attoparsec, syntax-printer, text
     }:
     mkDerivation {
       pname = "syntax-example-json";
       version = "1.0.0.0";
       sha256 = "1bgv2y97rk5jr2gkl4d1pm19v3pl1gziz4sxnlv9w539dna0dwim";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec lens scientific semi-iso syntax syntax-attoparsec
         syntax-printer text
       ];
       description = "Example JSON parser/pretty-printer";
       license = stdenv.lib.licenses.mit;
     }) {};

  "syntax-pretty" = callPackage
    ({ mkDerivation, scientific, semi-iso, syntax, text }:
     mkDerivation {
       pname = "syntax-pretty";
       version = "0.2.0.0";
       sha256 = "1dyv0d998lbjndiw05hz9rmiazzz3rvw8hqdx5npb6yjmq237zmf";
       buildDepends = [ scientific semi-iso syntax text ];
       description = "Syntax instance for pretty, the pretty printing library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "syntax-printer" = callPackage
    ({ mkDerivation, bifunctors, scientific, semi-iso, semigroupoids
     , syntax, text, vector
     }:
     mkDerivation {
       pname = "syntax-printer";
       version = "1.0.0.0";
       sha256 = "051gkxj9qgrmjp8jl48nb7487y2hd6ymrzjl62k2faa0cfz6sbqz";
       buildDepends = [
         bifunctors scientific semi-iso semigroupoids syntax text vector
       ];
       description = "Text and ByteString printers for 'syntax'";
       license = stdenv.lib.licenses.mit;
     }) {};

  "syntax-trees" = callPackage
    ({ mkDerivation, haskell-src-exts, hint, mtl, uniplate }:
     mkDerivation {
       pname = "syntax-trees";
       version = "0.1.2";
       sha256 = "19lgaiql3d8v6w8dl0a7adrfw63ch5376dz6y4jzndrwzi43p9sb";
       buildDepends = [ haskell-src-exts hint mtl uniplate ];
       description = "Convert between different Haskell syntax trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syntax-trees-fork-bairyn" = callPackage
    ({ mkDerivation, haskell-src-exts, hint, mtl, uniplate }:
     mkDerivation {
       pname = "syntax-trees-fork-bairyn";
       version = "0.1.2.5";
       sha256 = "1n4k8m4zl5phxyrh6s46ijxcba9iljyh7zvhrrzzaw3d00nfvqg6";
       buildDepends = [ haskell-src-exts hint mtl uniplate ];
       description = "Convert between different Haskell syntax trees. Bairyn's fork.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "synthesizer" = callPackage
    ({ mkDerivation, binary, event-list, filepath, gnuplot
     , non-negative, numeric-prelude, numeric-quest, QuickCheck, random
     , sox, storable-record, storablevector, transformers, utility-ht
     }:
     mkDerivation {
       pname = "synthesizer";
       version = "0.2.0.1";
       sha256 = "1n5r7061x8212a8wfv0j9g28l79lxgbymr1f0m1qgzkhqf80gz3d";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary event-list filepath gnuplot non-negative numeric-prelude
         numeric-quest QuickCheck random sox storable-record storablevector
         transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Audio signal processing coded in Haskell";
       license = "GPL";
     }) {};

  "synthesizer-alsa" = callPackage
    ({ mkDerivation, alsa-core, alsa-pcm, alsa-seq, event-list, midi
     , midi-alsa, non-negative, numeric-prelude, random, sox
     , storablevector, synthesizer-core, synthesizer-dimensional
     , synthesizer-midi, transformers, utility-ht
     }:
     mkDerivation {
       pname = "synthesizer-alsa";
       version = "0.5.0.2";
       sha256 = "0k4hnhldrqjxz391p45rc125d2v8pbx23qxsvfs4hwra886imny3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         alsa-core alsa-pcm alsa-seq event-list midi midi-alsa non-negative
         numeric-prelude random sox storablevector synthesizer-core
         synthesizer-dimensional synthesizer-midi transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Control synthesizer effects via ALSA/MIDI";
       license = "GPL";
     }) {};

  "synthesizer-core" = callPackage
    ({ mkDerivation, binary, deepseq, event-list, explicit-exception
     , filepath, non-empty, non-negative, numeric-prelude, numeric-quest
     , QuickCheck, random, sample-frame-np, sox, storable-record
     , storable-tuple, storablevector, stream-fusion, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "synthesizer-core";
       version = "0.7.0.2";
       sha256 = "0r2www48svwvca6c0v1pgybhd0dmv2ajmc44iaz47wn5ia1vwcfn";
       buildDepends = [
         binary deepseq event-list explicit-exception filepath non-empty
         non-negative numeric-prelude numeric-quest QuickCheck random
         sample-frame-np sox storable-record storable-tuple storablevector
         stream-fusion transformers utility-ht
       ];
       testDepends = [
         event-list non-empty non-negative numeric-prelude QuickCheck random
         storable-tuple storablevector utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Audio signal processing coded in Haskell: Low level part";
       license = "GPL";
     }) {};

  "synthesizer-dimensional" = callPackage
    ({ mkDerivation, event-list, non-negative, numeric-prelude, random
     , sox, storable-record, storablevector, synthesizer-core
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "synthesizer-dimensional";
       version = "0.7.0.2";
       sha256 = "1y3jnlzpgs0n42vf5ami98c3nc1kz645spxirdaqn60f3ig4bvzb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         event-list non-negative numeric-prelude random sox storable-record
         storablevector synthesizer-core transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Audio signal processing with static physical dimensions";
       license = "GPL";
     }) {};

  "synthesizer-inference" = callPackage
    ({ mkDerivation, event-list, non-negative, numeric-prelude, random
     , synthesizer-core, transformers, UniqueLogicNP, utility-ht
     }:
     mkDerivation {
       pname = "synthesizer-inference";
       version = "0.2";
       sha256 = "07jhdd73vrhlvx6aq6rdd78qk8vfy2jcc9vrdrf8y6ikq6ir99rb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         event-list non-negative numeric-prelude random synthesizer-core
         transformers UniqueLogicNP utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Audio signal processing with dynamic physical dimensions";
       license = "GPL";
     }) {};

  "synthesizer-llvm" = callPackage
    ({ mkDerivation, event-list, filepath, llvm-extra, llvm-tf, midi
     , non-empty, non-negative, numeric-prelude, random, sox
     , storable-record, storable-tuple, storablevector, synthesizer-core
     , synthesizer-midi, tfp, transformers, unsafe, utility-ht, vault
     }:
     mkDerivation {
       pname = "synthesizer-llvm";
       version = "0.6";
       sha256 = "1cbqcabgxc358799l2ch9hzcgd1chwz226wbg79ndl0f17kf9hg8";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         event-list filepath llvm-extra llvm-tf midi non-empty non-negative
         numeric-prelude random sox storable-record storable-tuple
         storablevector synthesizer-core synthesizer-midi tfp transformers
         unsafe utility-ht vault
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Efficient signal processing using runtime compilation";
       license = "GPL";
     }) {};

  "synthesizer-midi" = callPackage
    ({ mkDerivation, data-accessor, data-accessor-transformers, deepseq
     , event-list, midi, non-negative, numeric-prelude, sox
     , storable-record, storablevector, synthesizer-core
     , synthesizer-dimensional, transformers, utility-ht
     }:
     mkDerivation {
       pname = "synthesizer-midi";
       version = "0.6.0.2";
       sha256 = "0xsfjgh82nxpwrhpllhjxxzaj42cxb5cbbpgwd1b1bsv67441h2x";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor data-accessor-transformers deepseq event-list midi
         non-negative numeric-prelude sox storable-record storablevector
         synthesizer-core synthesizer-dimensional transformers utility-ht
       ];
       homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
       description = "Render audio signals from MIDI files or realtime messages";
       license = "GPL";
     }) {};

  "sys-auth-smbclient" = callPackage
    ({ mkDerivation, doctest, text }:
     mkDerivation {
       pname = "sys-auth-smbclient";
       version = "2.0.0.0";
       sha256 = "00j1ss8xsnd8m0v0p9r9mampbczclzanzcli2qrxcl4j9vkp2mb7";
       buildDepends = [ text ];
       testDepends = [ doctest ];
       homepage = "https://github.com/kkazuo/sys-auth-smbclient";
       description = "Auth with smbclient command";
       license = stdenv.lib.licenses.mit;
     }) {};

  "system-argv0" = callPackage
    ({ mkDerivation, system-filepath, text }:
     mkDerivation {
       pname = "system-argv0";
       version = "0.1.1";
       sha256 = "1ijfry2r3cypp3zmws6dczk21m4n86fkxjld7yl19gjp46fxllbd";
       buildDepends = [ system-filepath text ];
       homepage = "https://john-millikin.com/software/haskell-filesystem/";
       description = "Get argv[0] as a FilePath";
       license = stdenv.lib.licenses.mit;
     }) {};

  "system-canonicalpath" = callPackage
    ({ mkDerivation, basic-prelude, system-filepath, text }:
     mkDerivation {
       pname = "system-canonicalpath";
       version = "0.2.0.0";
       sha256 = "130zfchx3clj26vhg54ilab0m4hnfn9vkga8vylcwdpfnglziyk9";
       buildDepends = [ basic-prelude system-filepath text ];
       homepage = "https://github.com/d12frosted/CanonicalPath";
       description = "Abstract data type for canonical paths with pretty operations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "system-command" = callPackage
    ({ mkDerivation, doctest, filepath, QuickCheck, transformers }:
     mkDerivation {
       pname = "system-command";
       version = "0.0.10";
       sha256 = "11lfr6xm5xpvq4244pc7a0psy2m1krz0b1jd9pdw6kzn5ammi1b2";
       buildDepends = [ filepath transformers ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/system-command";
       description = "A replacement for System.Exit and System.Process";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-fileio" = callPackage
    ({ mkDerivation, chell, system-filepath, temporary, text, time
     , transformers
     }:
     mkDerivation {
       pname = "system-fileio";
       version = "0.3.15";
       sha256 = "06cnr3hzw8xd75529nfqajgb5xy5i4ddqybgjw1v1nwpq04mhihi";
       buildDepends = [ system-filepath text time ];
       testDepends = [
         chell system-filepath temporary text time transformers
       ];
       homepage = "https://john-millikin.com/software/haskell-filesystem/";
       description = "Consistent filesystem interaction across GHC versions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "system-filepath" = callPackage
    ({ mkDerivation, chell, chell-quickcheck, deepseq, QuickCheck, text
     }:
     mkDerivation {
       pname = "system-filepath";
       version = "0.4.12";
       sha256 = "0sfralwgd5b9hfqmp20v31sq96s0v7j9g920qdj3n9i5mhslhwd2";
       buildDepends = [ deepseq text ];
       testDepends = [ chell chell-quickcheck QuickCheck text ];
       homepage = "https://john-millikin.com/software/haskell-filesystem/";
       description = "High-level, byte-based file and directory path manipulations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "system-gpio" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "system-gpio";
       version = "0.0.2";
       sha256 = "1i718k96xvsfl9rh1x4n5ra88838wd6rzmj3p70bfkxxrsvv1zi4";
       homepage = "https://github.com/luzhuomi/system-gpio/";
       description = "GPIO wrapper libary for Raspberry Pi";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-inotify" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "system-inotify";
       version = "0.1";
       sha256 = "0ndw4vcvvf7p6nb5vn91mhbj4w9lmgm4cl0jzsks4mxs625bv4lg";
       homepage = "http://darcs.imperialviolet.org/system-inotify";
       description = "Binding to Linux's inotify interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-lifted" = callPackage
    ({ mkDerivation, either, haskell-src-meta, text, time, transformers
     }:
     mkDerivation {
       pname = "system-lifted";
       version = "0.2.0.1";
       sha256 = "1c27y14867dd6706kp9n9y287vi7vqfzd2qr9365mk2854zvqifw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ either haskell-src-meta text time transformers ];
       homepage = "https://github.com/jcristovao/system-lifted";
       description = "Lifted versions of System functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-posix-redirect" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "system-posix-redirect";
       version = "1.1.0.1";
       sha256 = "1wkfz898d3607xnx779l1k1qc8i2k63ixg47542r45scwq8m0lsk";
       description = "A toy module to temporarily redirect a program's stdout";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-random-effect" = callPackage
    ({ mkDerivation, crypto-api, extensible-effects, HUnit
     , mersenne-random-pure64, primitive, QuickCheck, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-algorithms
     }:
     mkDerivation {
       pname = "system-random-effect";
       version = "0.4.1.3";
       sha256 = "1gfzyjap173brh0i4plgad0409hpah98wsf9w0n7mcr2ysrvjdmb";
       buildDepends = [
         crypto-api extensible-effects mersenne-random-pure64 primitive
         statistics vector vector-algorithms
       ];
       testDepends = [
         extensible-effects HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/wowus/system-random-effect";
       description = "Random number generation for extensible effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-time-monotonic" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "system-time-monotonic";
       version = "0.2";
       sha256 = "0f5grhh6x2fbawmdk0gq1nsjz47iz8f8r2592d1l69fqddwdhc3v";
       buildDepends = [ time ];
       homepage = "https://github.com/joeyadams/haskell-system-time-monotonic";
       description = "Simple library for using the system's monotonic clock";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-util" = callPackage
    ({ mkDerivation, easy-data, either, filepath, hspec
     , quickcheck-instances, semigroups, system-lifted, transformers
     }:
     mkDerivation {
       pname = "system-util";
       version = "0.2";
       sha256 = "0sjgsm4n3imnl45zgpvs1vd10wmgci2am03kpjphbqgi5bdywzqk";
       buildDepends = [
         either filepath semigroups system-lifted transformers
       ];
       testDepends = [
         easy-data either filepath hspec quickcheck-instances semigroups
         system-lifted transformers
       ];
       homepage = "https://github.com/jcristovao/system-util";
       description = "Various system utils lifted to EitherT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "system-uuid" = callPackage
    ({ mkDerivation, binary, murmur-hash, parsec, uuid }:
     mkDerivation {
       pname = "system-uuid";
       version = "2.1.1";
       sha256 = "12c05aqgxfqfsc5hbwlfwy6rhcx29ywz6ai86009y45hx9iii4cb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary murmur-hash parsec ];
       extraLibraries = [ uuid ];
       homepage = "http://github.com/solidsnack/system-uuid/";
       description = "Bindings to system UUID functions";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) uuid; };

  "systemd" = callPackage
    ({ mkDerivation, network, transformers }:
     mkDerivation {
       pname = "systemd";
       version = "1.0.0";
       sha256 = "10iyiw0m543bx9j9vdnz2lpnc3944i7ff9vbpdivvgv5z7gd17yn";
       buildDepends = [ network transformers ];
       homepage = "https://github.com/erebe/systemd";
       description = "Systemd facilities (Socket activation, Notify)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "syz" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "syz";
       version = "0.2.0.0";
       sha256 = "1m5395937yyxsa1bmlfn1dxa1jr15yjhlz9s15bpwapshcd8119y";
       buildDepends = [ syb ];
       homepage = "http://www.cs.indiana.edu/~adamsmd/papers/scrap_your_zippers/";
       description = "Scrap Your Zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ta" = callPackage
    ({ mkDerivation, mtl, Takusen, time }:
     mkDerivation {
       pname = "ta";
       version = "0.1";
       sha256 = "1i9d34gdxrc0gnny5zgp73m0si9583i8w0gw97mqpyha4pzz6hxx";
       buildDepends = [ mtl Takusen time ];
       homepage = "not available";
       description = "Transito Abierto: convenience library when using Takusen and Oracle";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tableaux" = callPackage
    ({ mkDerivation, cgi, html, mtl, parsec, QuickCheck }:
     mkDerivation {
       pname = "tableaux";
       version = "0.2";
       sha256 = "0dc1qdjlwxqjfb286knmbam6y9w9wlr6ah7l2ndq33yia4n2jp8b";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cgi html mtl parsec QuickCheck ];
       description = "An interactive theorem prover based on semantic tableaux";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tables" = callPackage
    ({ mkDerivation, binary, cereal, comonad, deepseq, doctest
     , filepath, hashable, lens, profunctors, safecopy, transformers
     , transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "tables";
       version = "0.4.1";
       sha256 = "131c97lgni0b9pmkdfd5y0lwrb9yh9qyahknhrim8dzpkkfynk49";
       buildDepends = [
         binary cereal comonad deepseq hashable lens profunctors safecopy
         transformers transformers-compat unordered-containers
       ];
       testDepends = [
         doctest filepath lens transformers unordered-containers
       ];
       homepage = "http://github.com/ekmett/tables/";
       description = "In-memory storage with multiple keys using lenses and traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tablestorage" = callPackage
    ({ mkDerivation, base64-bytestring, conduit, crypto-api, cryptohash
     , HTTP, http-conduit, http-types, mtl, network, resourcet, SHA
     , time, transformers, utf8-string, xml
     }:
     mkDerivation {
       pname = "tablestorage";
       version = "0.2.1.0";
       sha256 = "03j8cqq85i9wikw772swazbvyv1dcw0mnhmqq3slydl0axi12yr8";
       buildDepends = [
         base64-bytestring conduit crypto-api cryptohash HTTP http-conduit
         http-types mtl network resourcet SHA time transformers utf8-string
         xml
       ];
       homepage = "http://github.com/paf31/tablestorage";
       description = "Azure Table Storage REST API Wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tabloid" = callPackage
    ({ mkDerivation, gtk, hint, parallel, regex-base, regex-posix }:
     mkDerivation {
       pname = "tabloid";
       version = "0.47";
       sha256 = "1qcay15g6g2c9h6vfc7pi7rl4d8fsl09vrq33pdqvgg2fp2xclh3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk hint parallel regex-base regex-posix ];
       description = "View the output of shell commands in a table";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tabular" = callPackage
    ({ mkDerivation, csv, html, mtl }:
     mkDerivation {
       pname = "tabular";
       version = "0.2.2.5";
       sha256 = "00d1f8yr7kbg30ziv09pb8f4apcvrfb6izb26my1s97kw9ixa740";
       buildDepends = [ csv html mtl ];
       homepage = "http://hub.darcs.net/kowey/tabular";
       description = "Two-dimensional data tables with rendering functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "taffybar" = callPackage
    ({ mkDerivation, cairo, dbus, dyre, enclosed-exceptions, filepath
     , gtk, gtk-traymanager, HStringTemplate, HTTP, mtl, network
     , network-uri, parsec, safe, split, stm, text, time, transformers
     , utf8-string, X11, xdg-basedir, xmonad, xmonad-contrib
     }:
     mkDerivation {
       pname = "taffybar";
       version = "0.4.4";
       sha256 = "046nfp878mqj9acsid94mqp8q1yqnm1hsdkv88m5qpmn182xljwh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo dbus dyre enclosed-exceptions filepath gtk gtk-traymanager
         HStringTemplate HTTP mtl network network-uri parsec safe split stm
         text time transformers utf8-string X11 xdg-basedir xmonad
         xmonad-contrib
       ];
       pkgconfigDepends = [ gtk ];
       homepage = "http://github.com/travitch/taffybar";
       description = "A desktop bar similar to xmobar, but with more GUI";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) gtk; };

  "tag-bits" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tag-bits";
       version = "0.1.1.2";
       sha256 = "0crn1g3dh97s3b55z0pkvjm9h89kq99c2agk687vr0vij6r5di65";
       homepage = "http://github.com/ekmett/tag-bits";
       description = "Provides access to the dynamic pointer tagging bits used by GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tag-stream" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, enumerator }:
     mkDerivation {
       pname = "tag-stream";
       version = "0.2.1";
       sha256 = "160kyp1w3y3zg0hj198v5a3jvhpfdy0y0lfz4r2d8azay4f1pkmn";
       buildDepends = [ attoparsec blaze-builder enumerator ];
       homepage = "http://github.com/yihuang/tag-stream";
       description = "streamlined html tag parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagchup" = callPackage
    ({ mkDerivation, data-accessor, explicit-exception, transformers
     , utility-ht, xml-basic
     }:
     mkDerivation {
       pname = "tagchup";
       version = "0.4.0.3";
       sha256 = "1wjins7kmmmq9s8gawibnk7sr46jblclzxyj9xqxabj3vs8j6l76";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor explicit-exception transformers utility-ht xml-basic
       ];
       homepage = "http://code.haskell.org/~thielema/tagchup/";
       description = "alternative package for processing of tag soups";
       license = "GPL";
     }) {};

  "tagged" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tagged";
       version = "0.7.3";
       sha256 = "016bzws7w09xhyyqiz56ahlf7zhagihn370ga0083fgv172lym7b";
       homepage = "http://github.com/ekmett/tagged";
       description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagged-binary" = callPackage
    ({ mkDerivation, binary, data-default, pureMD5, spoon }:
     mkDerivation {
       pname = "tagged-binary";
       version = "0.1.2.0";
       sha256 = "1ci2dgqix1r9x4k77igv367r3z1qphd906cg1mxfw92mq61m7f0w";
       buildDepends = [ binary data-default pureMD5 spoon ];
       description = "Provides tools for serializing data tagged with type information";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tagged-exception-core" = callPackage
    ({ mkDerivation, exceptions, extensible-exceptions, mmorph
     , transformers
     }:
     mkDerivation {
       pname = "tagged-exception-core";
       version = "2.0.0.0";
       sha256 = "02ny4yz9afaazw2pxpkpalffx8i5nhi3x9561blrd0pdrqq8qnib";
       buildDepends = [
         exceptions extensible-exceptions mmorph transformers
       ];
       homepage = "https://github.com/trskop/tagged-exception";
       description = "Reflect exceptions using phantom types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagged-list" = callPackage
    ({ mkDerivation, AbortT-transformers, binary, natural-number
     , type-equality, type-level-natural-number
     , type-level-natural-number-induction
     , type-level-natural-number-operations
     }:
     mkDerivation {
       pname = "tagged-list";
       version = "1.1";
       sha256 = "1gdkq9d6hc25z9y8wcsjq10vz25fw40hz2hbp8jfwczhchdxy35s";
       buildDepends = [
         AbortT-transformers binary natural-number type-equality
         type-level-natural-number type-level-natural-number-induction
         type-level-natural-number-operations
       ];
       description = "Lists tagged with a type-level natural number representing their length";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagged-th" = callPackage
    ({ mkDerivation, tagged, type-spine }:
     mkDerivation {
       pname = "tagged-th";
       version = "0.1";
       sha256 = "1qqysn5zrkx2q3rv8ynf6nmy5rwdqk6niw0fphg5kyrg72h31s69";
       buildDepends = [ tagged type-spine ];
       description = "QuasiQuoter and Template Haskell splices for creating proxies at higher-kinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagged-transformer" = callPackage
    ({ mkDerivation, comonad, contravariant, distributive, exceptions
     , mtl, reflection, semigroupoids, tagged
     }:
     mkDerivation {
       pname = "tagged-transformer";
       version = "0.7.1";
       sha256 = "1qgfx546pj4aqdblb4gddfxp642snn5dx4kxj3sn5q7c9lsgdh8j";
       buildDepends = [
         comonad contravariant distributive exceptions mtl reflection
         semigroupoids tagged
       ];
       homepage = "http://github.com/ekmett/tagged-transformer";
       description = "Provides newtype wrappers for phantom types to avoid unsafely passing dummy arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagging" = callPackage
    ({ mkDerivation, pcre-light }:
     mkDerivation {
       pname = "tagging";
       version = "0.1";
       sha256 = "012lcbp2c9a38s4l2i9jaiqcxaidk93v7gxcnf9lplixrnzczy93";
       buildDepends = [ pcre-light ];
       homepage = "git://github.com/jre2/HaskellTagging.git";
       description = "Library for tagging data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "taggy" = callPackage
    ({ mkDerivation, attoparsec, blaze-html, blaze-markup, hspec
     , hspec-attoparsec, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "taggy";
       version = "0.1.2";
       sha256 = "0sj7da4yawfajyrd2gg2dxzgj5n99mdm5cz3bdhfipas4bb4216y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec blaze-html blaze-markup text unordered-containers vector
       ];
       testDepends = [
         attoparsec blaze-html blaze-markup hspec hspec-attoparsec text
         unordered-containers vector
       ];
       homepage = "http://github.com/alpmestan/taggy";
       description = "Efficient and simple HTML/XML parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "taggy-lens" = callPackage
    ({ mkDerivation, doctest, hspec, lens, taggy, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "taggy-lens";
       version = "0.1.2";
       sha256 = "05m2c9q0rz4y0zz6n3dqf0hhzfvk0mp1692jxykg86c802d7pkib";
       buildDepends = [ lens taggy text unordered-containers ];
       testDepends = [
         doctest hspec lens taggy text unordered-containers
       ];
       homepage = "http://github.com/alpmestan/taggy-lens";
       description = "Lenses for the taggy html/xml parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "taglib" = callPackage
    ({ mkDerivation, tag_c, taglib_c, utf8-string }:
     mkDerivation {
       pname = "taglib";
       version = "0.1.1";
       sha256 = "16qyfy8rxaab0q9j2v00h4j5d3la95acfhmp32x1hdxz1rwr6zfp";
       buildDepends = [ utf8-string ];
       extraLibraries = [ tag_c ];
       pkgconfigDepends = [ taglib_c ];
       description = "Binding to TagLib (ID3 tag library)";
       license = "LGPL";
     }) {};

  "taglib-api" = callPackage
    ({ mkDerivation, mtl, taglib_c, text, transformers }:
     mkDerivation {
       pname = "taglib-api";
       version = "0.1.1.3";
       sha256 = "1ahbwi28yjigbkgfv52iaaqalmmlc4d09fa65l0yczxrs7rzchmj";
       buildDepends = [ mtl text transformers ];
       pkgconfigDepends = [ taglib_c ];
       description = "An FFI layer over TagLib's C bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagset-positional" = callPackage
    ({ mkDerivation, binary, parsec, text, text-binary }:
     mkDerivation {
       pname = "tagset-positional";
       version = "0.3.0";
       sha256 = "0x1mwwlwhka12bzshy0j0w7iq9ka6kn1jgsifi26jmg7zf79zydf";
       buildDepends = [ binary parsec text text-binary ];
       homepage = "https://github.com/kawu/tagset-positional";
       description = "Positional tags and tagsets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagshare" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "tagshare";
       version = "0.0";
       sha256 = "1q3chp1rmwmxa8rxv7548wsvbqbng6grrnv1587p08385sp4ncfj";
       buildDepends = [ mtl ];
       description = "TagShare - explicit sharing with tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagsoup" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "tagsoup";
       version = "0.13.3";
       sha256 = "13b6zy6346r3cxhaivys84fnxarg8wbv7r2znazfjdkqil8n5a1j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ text ];
       homepage = "http://community.haskell.org/~ndm/tagsoup/";
       description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagsoup-ht" = callPackage
    ({ mkDerivation, data-accessor, explicit-exception, tagsoup
     , transformers, utility-ht, xml-basic
     }:
     mkDerivation {
       pname = "tagsoup-ht";
       version = "0.3";
       sha256 = "1yxb1lmayqqlnxx4jgcbvya8llfgdbbr8rvcxwicwjrq3xsjl8km";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor explicit-exception tagsoup transformers utility-ht
         xml-basic
       ];
       homepage = "http://code.haskell.org/~thielema/tagsoup-ht/";
       description = "alternative parser for the tagsoup package";
       license = "GPL";
     }) {};

  "tagsoup-parsec" = callPackage
    ({ mkDerivation, parsec, tagsoup }:
     mkDerivation {
       pname = "tagsoup-parsec";
       version = "0.0.8";
       sha256 = "0h62kqls8nrq5wqxbzvxav4kfn1lxc6qm5vg8dhkvqdp5z6xnkzk";
       buildDepends = [ parsec tagsoup ];
       homepage = "http://www.killersmurf.com";
       description = "Tokenizes Tag, so [ Tag ] can be used as parser input";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tagstream-conduit" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, case-insensitive
     , conduit, conduit-extra, data-default, hspec, HUnit, QuickCheck
     , resourcet, text, transformers, xml-conduit
     }:
     mkDerivation {
       pname = "tagstream-conduit";
       version = "0.5.5.3";
       sha256 = "1arlf7qil9bzcqykda8yyrnncm29jsfjvz5kbcdrbbhqpbqfi5mj";
       buildDepends = [
         attoparsec blaze-builder case-insensitive conduit conduit-extra
         data-default resourcet text transformers xml-conduit
       ];
       testDepends = [ conduit hspec HUnit QuickCheck resourcet text ];
       homepage = "http://github.com/yihuang/tagstream-conduit";
       description = "streamlined html tag parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "takusen-oracle" = callPackage
    ({ mkDerivation, clntsh, mtl, QuickCheck, random, sqlplus, time }:
     mkDerivation {
       pname = "takusen-oracle";
       version = "0.9.2";
       sha256 = "06mg3grz7dw8qh4xb3863n0f8pip1qn52dsx8qv7ki260lbyyj9y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl QuickCheck random time ];
       buildTools = [ sqlplus ];
       extraLibraries = [ clntsh ];
       homepage = "https://github.com/paulrzcz/takusen-oracle.git";
       description = "Database library with left-fold interface for Oracle";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tamarin-prover" = callPackage
    ({ mkDerivation, aeson, binary, blaze-builder, blaze-html, cmdargs
     , conduit, deepseq, derive, dlist, fclabels, filepath, hamlet
     , http-types, HUnit, lifted-base, monad-control, mtl, parallel
     , parsec, safe, shakespeare, syb, tamarin-prover-term
     , tamarin-prover-theory, tamarin-prover-utils, text, threads, time
     , transformers, uniplate, wai, warp, yesod-core, yesod-json
     , yesod-static
     }:
     mkDerivation {
       pname = "tamarin-prover";
       version = "0.8.6.1";
       sha256 = "0g7gwqaykvn2r7zbddcvcr4qjs78n0w0cvzk9sfm51i0xgmx3llg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson binary blaze-builder blaze-html cmdargs conduit deepseq
         derive dlist fclabels filepath hamlet http-types HUnit lifted-base
         monad-control mtl parallel parsec safe shakespeare syb
         tamarin-prover-term tamarin-prover-theory tamarin-prover-utils text
         threads time transformers uniplate wai warp yesod-core yesod-json
         yesod-static
       ];
       homepage = "http://www.infsec.ethz.ch/research/software/tamarin";
       description = "The Tamarin prover for security protocol analysis";
       license = "GPL";
     }) {};

  "tamarin-prover-term" = callPackage
    ({ mkDerivation, attoparsec, binary, deepseq, derive, dlist, HUnit
     , mtl, parsec, safe, split, syb, tamarin-prover-utils
     }:
     mkDerivation {
       pname = "tamarin-prover-term";
       version = "0.8.5.1";
       sha256 = "17wq4hr7wfxw5x52jzk8882197zq1lwdqk5yr9wagsbn7hldmaa5";
       buildDepends = [
         attoparsec binary deepseq derive dlist HUnit mtl parsec safe split
         syb tamarin-prover-utils
       ];
       homepage = "http://www.infsec.ethz.ch/research/software/tamarin";
       description = "Term manipulation library for the tamarin prover";
       license = "GPL";
     }) {};

  "tamarin-prover-theory" = callPackage
    ({ mkDerivation, binary, cmdargs, deepseq, derive, dlist, fclabels
     , filepath, HUnit, mtl, parallel, parsec, safe, syb
     , tamarin-prover-term, tamarin-prover-utils, time, transformers
     , uniplate
     }:
     mkDerivation {
       pname = "tamarin-prover-theory";
       version = "0.8.6.0";
       sha256 = "1xc11mrzfg1v8ilp7yb1zlg2359w14szhbdy86pbfzbjl31852l3";
       buildDepends = [
         binary cmdargs deepseq derive dlist fclabels filepath HUnit mtl
         parallel parsec safe syb tamarin-prover-term tamarin-prover-utils
         time transformers uniplate
       ];
       homepage = "http://www.infsec.ethz.ch/research/software/tamarin";
       description = "Term manipulation library for the tamarin prover";
       license = "GPL";
     }) {};

  "tamarin-prover-utils" = callPackage
    ({ mkDerivation, base64-bytestring, binary, blaze-builder, deepseq
     , dlist, fclabels, mtl, parsec, SHA, syb, time, transformers
     }:
     mkDerivation {
       pname = "tamarin-prover-utils";
       version = "0.8.5.1";
       sha256 = "11phn05fb8s80g6zk6sly8wi1rl8i3rnymkr99la8abr8yw12j3c";
       buildDepends = [
         base64-bytestring binary blaze-builder deepseq dlist fclabels mtl
         parsec SHA syb time transformers
       ];
       homepage = "http://www.infsec.ethz.ch/research/software/tamarin";
       description = "Utility library for the tamarin prover";
       license = "GPL";
     }) {};

  "tamper" = callPackage
    ({ mkDerivation, mtl, safe, text }:
     mkDerivation {
       pname = "tamper";
       version = "0.3.5.1";
       sha256 = "17aqzw9vjq5mwikx4kjw9l8h7a18aff02217kw9yfvk23acnxgkf";
       buildDepends = [ mtl safe text ];
       description = "An HTML templating system similar to Blaze, implemented as a monad transformer of sorts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tar" = callPackage
    ({ mkDerivation, filepath, time }:
     mkDerivation {
       pname = "tar";
       version = "0.4.0.1";
       sha256 = "0vbsv7h3zgp30mlgsw156jkv1rqy5zbm98as9haf7x15hd6jf254";
       buildDepends = [ filepath time ];
       description = "Reading, writing and manipulating \".tar\" archive files.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tardis" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "tardis";
       version = "0.3.0.0";
       sha256 = "15f88b5qg4v1ah60y0jxkww9n6z7gvnkslx4inckh6m6c7yvj8k6";
       buildDepends = [ mtl ];
       homepage = "https://github.com/DanBurton/tardis";
       description = "Bidirectional state monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "task" = callPackage
    ({ mkDerivation, aeson, attoparsec, csv-enumerator, filepath
     , random, text, time
     }:
     mkDerivation {
       pname = "task";
       version = "0.0.1";
       sha256 = "0z4f4hs2c7xl6c134bqhk81wzxhb6yf7fsar2fnqvahviaqqgzqn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec csv-enumerator filepath random text time
       ];
       description = "A command line tool for keeping track of tasks you worked on";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "taskpool" = callPackage
    ({ mkDerivation, async, fgl, hspec, stm, transformers }:
     mkDerivation {
       pname = "taskpool";
       version = "0.1.0";
       sha256 = "02r7y882sfj7m3yaj68v40f4065ajiig2b25v55svh13jars7c3n";
       buildDepends = [ async fgl stm transformers ];
       testDepends = [ async fgl hspec stm transformers ];
       description = "Manage pools of possibly interdependent tasks using STM and async";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tasty" = callPackage
    ({ mkDerivation, ansi-terminal, async, deepseq, mtl
     , optparse-applicative, regex-tdfa-rc, stm, tagged, time
     , unbounded-delays
     }:
     mkDerivation {
       pname = "tasty";
       version = "0.10.1";
       sha256 = "1l8ah7018f3m8css56h59fcly1jhanm5wd0hbgm8mg6pn7rrjml5";
       buildDepends = [
         ansi-terminal async deepseq mtl optparse-applicative regex-tdfa-rc
         stm tagged time unbounded-delays
       ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "Modern and extensible testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tasty-ant-xml" = callPackage
    ({ mkDerivation, generic-deriving, mtl, stm, tagged, tasty
     , transformers, xml
     }:
     mkDerivation {
       pname = "tasty-ant-xml";
       version = "1.0.1";
       sha256 = "1wb9lm9rbk46g9cm2lpcrzh59zpcy270p824agg61bj1xb9jymsc";
       buildDepends = [
         generic-deriving mtl stm tagged tasty transformers xml
       ];
       homepage = "http://github.com/ocharles/tasty-ant-xml";
       description = "Render tasty output to XML for Jenkins";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tasty-golden" = callPackage
    ({ mkDerivation, async, deepseq, filepath, mtl
     , optparse-applicative, tagged, tasty, tasty-hunit, temporary-rc
     }:
     mkDerivation {
       pname = "tasty-golden";
       version = "2.2.2.4";
       sha256 = "096c4h306r4z7wq8nm94mwmdndm0mwd6hhiqf77iilpdndasrl1c";
       buildDepends = [
         async deepseq filepath mtl optparse-applicative tagged tasty
         temporary-rc
       ];
       testDepends = [ filepath tasty tasty-hunit temporary-rc ];
       homepage = "https://github.com/feuerbach/tasty-golden";
       description = "Golden tests support for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tasty-hspec" = callPackage
    ({ mkDerivation, hspec, hspec-core, QuickCheck, random, tasty
     , tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "tasty-hspec";
       version = "1.1";
       sha256 = "15ly6jf4kgdc15k6b584d99j18xb41alas62gyakw5sf8y0y02i6";
       buildDepends = [
         hspec hspec-core QuickCheck random tasty tasty-quickcheck
         tasty-smallcheck
       ];
       homepage = "http://github.com/mitchellwrosen/tasty-hspec";
       description = "Hspec support for the Tasty test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tasty-html" = callPackage
    ({ mkDerivation, blaze-html, filepath, generic-deriving, mtl, stm
     , tagged, tasty, text, transformers
     }:
     mkDerivation {
       pname = "tasty-html";
       version = "0.4.1";
       sha256 = "0a4j8w4gm8wr9pgmkkahadl5k2sd19za9f6x323f01v4ff455hwg";
       buildDepends = [
         blaze-html filepath generic-deriving mtl stm tagged tasty text
         transformers
       ];
       homepage = "http://github.com/feuerbach/tasty-html";
       description = "Render tasty output to HTML";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tasty-hunit" = callPackage
    ({ mkDerivation, tasty }:
     mkDerivation {
       pname = "tasty-hunit";
       version = "0.9.0.1";
       sha256 = "0rhdjb4fakcbkz4cvmmf679zad9h5yr31i1g9xm1338p6xd4vwcb";
       buildDepends = [ tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "HUnit support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tasty-hunit-adapter" = callPackage
    ({ mkDerivation, HUnit, tasty, tasty-hunit }:
     mkDerivation {
       pname = "tasty-hunit-adapter";
       version = "1.0";
       sha256 = "0626islqqkncdma8790z2z47r8x90y9v7fj0p5nhkw6mpy6p0ifg";
       buildDepends = [ HUnit tasty tasty-hunit ];
       homepage = "https://github.com/jstolarek/tasty-hunit-adapter";
       description = "Use existing HUnit tests with tasty";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tasty-integrate" = callPackage
    ({ mkDerivation, aeson, cmdargs, deepseq, either, haskell-src-exts
     , language-haskell-extract, lens, mtl, parsec, QuickCheck
     , quickcheck-property-comb, regex-posix, split, stm, stringbuilder
     , system-filepath, tasty, tasty-quickcheck, text, transformers
     }:
     mkDerivation {
       pname = "tasty-integrate";
       version = "0.0.1";
       sha256 = "0zjbs7ax5nrxcg1njnrliavablda5rgjciq2h3nycvic8r1g9p7x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson cmdargs either haskell-src-exts language-haskell-extract lens
         mtl parsec regex-posix split system-filepath tasty tasty-quickcheck
         text transformers
       ];
       testDepends = [
         deepseq haskell-src-exts lens mtl QuickCheck
         quickcheck-property-comb regex-posix split stm stringbuilder
         system-filepath tasty tasty-quickcheck text transformers
       ];
       description = "automated integration of QuickCheck properties into tasty suites";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tasty-program" = callPackage
    ({ mkDerivation, filepath, tasty }:
     mkDerivation {
       pname = "tasty-program";
       version = "1.0.1";
       sha256 = "04q2pp7hwqiiry17dd3ng0i6ikqzpg7hfgf0ckcg33xw450kpx9n";
       buildDepends = [ filepath tasty ];
       homepage = "https://github.com/jstolarek/tasty-program";
       description = "Use tasty framework to test whether a program executes correctly";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tasty-quickcheck" = callPackage
    ({ mkDerivation, pcre-light, QuickCheck, tagged, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "tasty-quickcheck";
       version = "0.8.3.2";
       sha256 = "1q1fghmsjrdl6jkcnajmsvw4d893m6cyhzpai9vvrhxy9vdy0l1v";
       buildDepends = [ QuickCheck tagged tasty ];
       testDepends = [ pcre-light tasty tasty-hunit ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "QuickCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tasty-rerun" = callPackage
    ({ mkDerivation, mtl, optparse-applicative, reducers, split, stm
     , tagged, tasty, transformers
     }:
     mkDerivation {
       pname = "tasty-rerun";
       version = "1.1.3";
       sha256 = "1pgm3h7kyg7q8ydgqqj9sn65ckl6i7cz6a8g1cfighf4gy5y0cj3";
       buildDepends = [
         mtl optparse-applicative reducers split stm tagged tasty
         transformers
       ];
       homepage = "http://github.com/ocharles/tasty-rerun";
       description = "Run tests by filtering the test tree depending on the result of previous test runs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tasty-smallcheck" = callPackage
    ({ mkDerivation, async, smallcheck, tagged, tasty }:
     mkDerivation {
       pname = "tasty-smallcheck";
       version = "0.8.0.1";
       sha256 = "0yckfbz8na8ccyw2911i3a4hd3fdncclk3ng5343hs5cylw6y4sm";
       buildDepends = [ async smallcheck tagged tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "SmallCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tasty-th" = callPackage
    ({ mkDerivation, language-haskell-extract, tasty }:
     mkDerivation {
       pname = "tasty-th";
       version = "0.1.3";
       sha256 = "1fl5pagm9bdqvp7v54ilkr91m667rxw1jifwfdhrikr938aqrzx3";
       buildDepends = [ language-haskell-extract tasty ];
       homepage = "http://github.com/bennofs/tasty-th";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tau" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tau";
       version = "6.2831";
       sha256 = "10vw3y3vimqpb22amhk7n0d0jni46j60iva1gqa28ky8lhqq8ssz";
       description = "Tau, the ratio between any circle's circumference and radius";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tbox" = callPackage
    ({ mkDerivation, binary, cautious-file, filepath, IfElse
     , monad-loops, mtl, random, safe-failure, stm-io-hooks
     }:
     mkDerivation {
       pname = "tbox";
       version = "0.1.0";
       sha256 = "0qsc4mdiryrf3pqzzjvx57iz92xagp7692h312q2pm412zg6p1vy";
       buildDepends = [
         binary cautious-file filepath IfElse monad-loops mtl random
         safe-failure stm-io-hooks
       ];
       homepage = "http://darcs.monoid.at/tbox";
       description = "Transactional variables and data structures with IO hooks";
       license = "LGPL";
     }) {};

  "tcache-AWS" = callPackage
    ({ mkDerivation, aws, conduit, http-conduit, network, TCache, text
     }:
     mkDerivation {
       pname = "tcache-AWS";
       version = "0.0.1";
       sha256 = "18hi8jvc117pxjhpb891hqlsbi4wvmd6nr3vwnqqr7rcw2dsmnwv";
       buildDepends = [ aws conduit http-conduit network TCache text ];
       description = "tcache using Amazon Web Services as default persistence mechanism";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tccli" = callPackage
    ({ mkDerivation, tokyocabinet-haskell, utf8-string }:
     mkDerivation {
       pname = "tccli";
       version = "0.0.1";
       sha256 = "0ljfn9dvyncl205mrnpic5j0633gnzka03gjc4dmccsqq0c1wjm7";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ tokyocabinet-haskell utf8-string ];
       homepage = "http://bitcheese.net/wiki/code/tccli";
       description = "TokyoCabinet CLI interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tconfig" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tconfig";
       version = "0.5.2";
       sha256 = "05cnlbrdddbrdwlm8s7b76ydwrn49vaifdgaklfhv8rzz9dfpvbr";
       description = "Simple text configuration file parser library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tcp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tcp";
       version = "0.0.2";
       sha256 = "1wqkfnkd2di9a6h0br33fd7jaf1yqpaf7kjnpjwp52l4xv04ajlv";
       homepage = "http://www.cl.cam.ac.uk/~pes20/Netsem/";
       description = "A purely functional TCP implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tdd-util" = callPackage
    ({ mkDerivation, HUnit, lens, MonadCatchIO-transformers
     , parallel-io, QuickCheck, random, string-class
     , system-posix-redirect, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     , transformers
     }:
     mkDerivation {
       pname = "tdd-util";
       version = "0.3.0.1";
       sha256 = "1d9avxpj2d90agd2pvc905j7jfa4rssl7bnrp2fmky4hfcbqa8ly";
       buildDepends = [
         HUnit lens MonadCatchIO-transformers parallel-io QuickCheck random
         system-posix-redirect tagged test-framework test-framework-hunit
         test-framework-quickcheck2 time transformers
       ];
       testDepends = [
         HUnit lens MonadCatchIO-transformers parallel-io QuickCheck random
         string-class system-posix-redirect tagged test-framework
         test-framework-hunit test-framework-quickcheck2 time transformers
       ];
       description = "Test framework wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tdoc" = callPackage
    ({ mkDerivation, transformers, xhtml }:
     mkDerivation {
       pname = "tdoc";
       version = "0.4.6";
       sha256 = "0gslj3z3lnh2wl7ljg8rza6kmmgfmgv94hgla75nblirvyka8v48";
       buildDepends = [ transformers xhtml ];
       homepage = "https://github.com/np/tdoc";
       description = "TDoc is a typed document builder with support for (X)HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "teams" = callPackage
    ({ mkDerivation, fgl, graphviz }:
     mkDerivation {
       pname = "teams";
       version = "0.0.2.3";
       sha256 = "04jq7qdh0kr55a7a3gkjc8dgn130bp0kqh8qcmf284wz981vj9gd";
       buildDepends = [ fgl graphviz ];
       description = "Graphical modeling tools for sequential teams";
       license = "GPL";
     }) {};

  "tellbot" = callPackage
    ({ mkDerivation, bifunctors, errors, mtl, network, split, time
     , transformers
     }:
     mkDerivation {
       pname = "tellbot";
       version = "0.4.0.2";
       sha256 = "0fnc5rbwmyc7ikjvl95cwv1cfgswjr6vw7gdwar6zgfbdl352cgp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bifunctors errors mtl network split time transformers
       ];
       description = "IRC tellbot";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "template" = callPackage
    ({ mkDerivation, mtl, text }:
     mkDerivation {
       pname = "template";
       version = "0.2.0.10";
       sha256 = "10mcnhi2rdflmv79z0359nn5sylifvk9ih38xnjqqby6n4hs7mcg";
       buildDepends = [ mtl text ];
       description = "Simple string substitution";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "template-default" = callPackage
    ({ mkDerivation, data-default }:
     mkDerivation {
       pname = "template-default";
       version = "0.1.1";
       sha256 = "07b8j11v0247fwaf3mv72m7aaq3crbsyrxmxa352vn9h2g6l1jsd";
       buildDepends = [ data-default ];
       homepage = "https://github.com/haskell-pkg-janitors/template-default";
       description = "declaring Default instances just got even easier";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "template-haskell" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "template-haskell";
       version = "2.9.0.0";
       sha256 = "0mqphyd77jw87n648zpizh2cggm0958y47jjl84r55s1ndhm7j54";
       description = "Support library for Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "template-hsml" = callPackage
    ({ mkDerivation, blaze-markup, haskell-src-exts, haskell-src-meta
     , parsec, QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "template-hsml";
       version = "0.2.0.3";
       sha256 = "1lnw1rhxj66zn34p8ca2dx98326l40w8kj6nrxxhff0v30myxa1g";
       buildDepends = [
         blaze-markup haskell-src-exts haskell-src-meta parsec
       ];
       testDepends = [
         parsec QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Haskell's Simple Markup Language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "templatepg" = callPackage
    ({ mkDerivation, binary, haskell-src-meta, mtl, network, parsec
     , regex-compat, regex-posix, time, utf8-string
     }:
     mkDerivation {
       pname = "templatepg";
       version = "0.2.6";
       sha256 = "1i5ais5nlga3qv0w2fg5fdkfxikks9yg6fgwqx7agcrxp4wpqcb7";
       buildDepends = [
         binary haskell-src-meta mtl network parsec regex-compat regex-posix
         time utf8-string
       ];
       homepage = "https://github.com/jekor/templatepg";
       description = "A PostgreSQL access library with compile-time SQL type inference";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tempodb" = callPackage
    ({ mkDerivation, aeson, blaze-builder, HsOpenSSL, HTTP
     , http-streams, io-streams, mtl, text, time
     }:
     mkDerivation {
       pname = "tempodb";
       version = "0.2.2.5";
       sha256 = "00z02hl31ad497rvxjxx5khb20ql6irkgpdvsg5m7axq8bi3d5fl";
       buildDepends = [
         aeson blaze-builder HsOpenSSL HTTP http-streams io-streams mtl text
         time
       ];
       homepage = "https://github.com/ixmatus/hs-tempodb";
       description = "A small Haskell wrapper around the TempoDB api";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "temporal-csound" = callPackage
    ({ mkDerivation, csound-catalog, csound-expression, temporal-media
     , temporal-music-notation, temporal-music-notation-western
     }:
     mkDerivation {
       pname = "temporal-csound";
       version = "0.4.1";
       sha256 = "1r7v9g3qdp48j8y8g129jamz86fdksrm1amiy761s2nmmr51j6qb";
       buildDepends = [
         csound-catalog csound-expression temporal-media
         temporal-music-notation temporal-music-notation-western
       ];
       homepage = "https://github.com/anton-k/temporal-csound";
       description = "library to make electronic music, brings together temporal-music-notation and csound-expression packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "temporal-media" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "temporal-media";
       version = "0.4.0";
       sha256 = "0x421j06xqa3rrx3pavc720j6xhnajgp3x1m8hdafis2g93d4mb0";
       homepage = "https://github.com/anton-k/temporal-media";
       description = "data types for temporal media";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "temporal-music-notation" = callPackage
    ({ mkDerivation, data-default, temporal-media, vector }:
     mkDerivation {
       pname = "temporal-music-notation";
       version = "0.4.0";
       sha256 = "1flf4dfyj87yiyhqdrm2bph8vcsmhp5rwg3k4npbxxzdgr8z9g92";
       buildDepends = [ data-default temporal-media vector ];
       homepage = "https://github.com/anton-k/temporal-music-notation";
       description = "music notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "temporal-music-notation-demo" = callPackage
    ({ mkDerivation, binary, data-default, HCodecs
     , temporal-music-notation
     }:
     mkDerivation {
       pname = "temporal-music-notation-demo";
       version = "0.4.0";
       sha256 = "1jd9yd9ay9xmlmpm4wnkpd0ic69xlg8igqbagrycc6kv4zf1p20z";
       buildDepends = [
         binary data-default HCodecs temporal-music-notation
       ];
       homepage = "https://github.com/anton-k/temporal-music-notation-demo";
       description = "generates midi from score notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "temporal-music-notation-western" = callPackage
    ({ mkDerivation, temporal-music-notation }:
     mkDerivation {
       pname = "temporal-music-notation-western";
       version = "0.4.0";
       sha256 = "012pv4l5r3ijnyid7b8h1lpifjs7cf3k4a13f6773r93qfgvxpkc";
       buildDepends = [ temporal-music-notation ];
       homepage = "https://github.com/anton-k/temporal-music-notation-western";
       description = "western music notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "temporary" = callPackage
    ({ mkDerivation, exceptions, filepath, transformers }:
     mkDerivation {
       pname = "temporary";
       version = "1.2.0.3";
       sha256 = "0is67bmsjmbbw6wymhis8wyq9gax3sszm573p5719fx2c9z9r24a";
       buildDepends = [ exceptions filepath transformers ];
       homepage = "http://www.github.com/batterseapower/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "temporary-rc" = callPackage
    ({ mkDerivation, exceptions, filepath, transformers }:
     mkDerivation {
       pname = "temporary-rc";
       version = "1.2.0.3";
       sha256 = "1nqih0qks439k3pr5kmbbc8rjdw730slrxlflqb27fbxbzb8skqs";
       buildDepends = [ exceptions filepath transformers ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tempus" = callPackage
    ({ mkDerivation, executable-path, filepath, happy, haskeline, mtl
     , uniplate, utf8-string
     }:
     mkDerivation {
       pname = "tempus";
       version = "0.1.0";
       sha256 = "0hv5b09vly9zakjfgi4bnjx503ny334dhg13g5ma85rp3dbsjvsn";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         executable-path filepath haskeline mtl uniplate utf8-string
       ];
       buildTools = [ happy ];
       description = "Interpreter for the FRP language Tempus";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tensor" = callPackage
    ({ mkDerivation, QuickCheck, random, vector }:
     mkDerivation {
       pname = "tensor";
       version = "0.3.0.1";
       sha256 = "03m612xvx3p44za0g291xir89lcgm4pk885lpy3wshp0987ij1nf";
       buildDepends = [ random vector ];
       testDepends = [ QuickCheck random ];
       homepage = "http://noaxiom.org/tensor";
       description = "A completely type-safe library for linear algebra";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "term-rewriting" = callPackage
    ({ mkDerivation, ansi-wl-pprint, HUnit, mtl, multiset, parsec
     , QuickCheck, union-find-array
     }:
     mkDerivation {
       pname = "term-rewriting";
       version = "0.1.2.1";
       sha256 = "06lz89dhaq6pqp1zjx8bmgpx06fq3xgnqy1llipik5c9zyr4zrfv";
       buildDepends = [
         ansi-wl-pprint mtl multiset parsec union-find-array
       ];
       testDepends = [ HUnit QuickCheck ];
       homepage = "http://cl-informatik.uibk.ac.at/software/haskell-rewriting/";
       description = "Term Rewriting Library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "terminal-progress-bar" = callPackage
    ({ mkDerivation, base-unicode-symbols, HUnit, stm, stm-chans
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "terminal-progress-bar";
       version = "0.0.1.4";
       sha256 = "0ldvii23ks446xrd27aklh8s8pn1yi3dzhhzl05gipjqbhq3lsx3";
       buildDepends = [ base-unicode-symbols stm stm-chans ];
       testDepends = [
         base-unicode-symbols HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/roelvandijk/terminal-progress-bar";
       description = "A simple progress bar in the terminal";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "terminal-size" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "terminal-size";
       version = "0.3.0";
       sha256 = "0g8v08d20hlfsah9dlgv2v2pzj0m4dva0zp6zi4jrkxjhg6vi7bw";
       description = "Get terminal window height and width";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "termination-combinators" = callPackage
    ({ mkDerivation, contravariant }:
     mkDerivation {
       pname = "termination-combinators";
       version = "0.1";
       sha256 = "1k32s5vzkxnsawj8vdscyfc96hk0s97zpj1mgw1hk93hwcrxn9wh";
       buildDepends = [ contravariant ];
       homepage = "http://www.github.com/batterseapower/termination-combinators";
       description = "Termination combinators for forcing non-terminating algorithms to terminate";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "terminfo" = callPackage
    ({ mkDerivation, ncurses }:
     mkDerivation {
       pname = "terminfo";
       version = "0.4.0.0";
       sha256 = "10y8mhpazcpwwvg1avc0zxq534rwavg82q69l7wm5np24sb5lrv8";
       extraLibraries = [ ncurses ];
       homepage = "https://github.com/judah/terminfo";
       description = "Haskell bindings to the terminfo library";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) ncurses; };

  "terminfo-hs" = callPackage
    ({ mkDerivation, attoparsec, errors, filepath, QuickCheck }:
     mkDerivation {
       pname = "terminfo-hs";
       version = "0.1.0.1";
       sha256 = "1bbf37c34l8q12hy9yhw1jcjzcb1g87r850pxhwyzsikwhf75g81";
       buildDepends = [ attoparsec errors filepath ];
       testDepends = [ errors filepath QuickCheck ];
       description = "A pure-Haskell (no FFI) module for accessing terminfo databases";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "terrahs" = callPackage
    ({ mkDerivation, terralib4c, translib }:
     mkDerivation {
       pname = "terrahs";
       version = "0.9";
       sha256 = "0gciz8nvn7x1lclzihvwy8v1c53p6frb1q32ckpmsqw7xiasqlhb";
       extraLibraries = [ terralib4c translib ];
       homepage = "http://lucc.ess.inpe.br/doku.php?id=terrahs";
       description = "A Haskell GIS Programming Environment";
       license = "GPL";
     }) {};

  "tersmu" = callPackage
    ({ mkDerivation, mtl, syb, transformers }:
     mkDerivation {
       pname = "tersmu";
       version = "0.2";
       sha256 = "064s43a7iq2rr643x4ahibgjanyq3v5h6qcgvc68j1dycq56snnl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl syb transformers ];
       homepage = "http://mbays.freeshell.org/tersmu";
       description = "A semantic parser for lojban";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "test-framework" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, hostname, random
     , regex-posix, time, xml
     }:
     mkDerivation {
       pname = "test-framework";
       version = "0.8.0.3";
       sha256 = "136nw5dapsz3jrnw1pdfkjgplxigpr2mrf6i85154vx342zvw5ar";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal ansi-wl-pprint hostname random regex-posix time xml
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "Framework for running and organising tests, with HUnit and QuickCheck support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-doctest" = callPackage
    ({ mkDerivation, doctest, test-framework, test-framework-hunit }:
     mkDerivation {
       pname = "test-framework-doctest";
       version = "0.2.1.2";
       sha256 = "01k0kcsbc41zaric5zgnhfnrp9dd19brv4d3p22vly7a7bmn6n0q";
       buildDepends = [ doctest test-framework test-framework-hunit ];
       testDepends = [ test-framework ];
       description = "Test.Framework wrapper for DocTest";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-golden" = callPackage
    ({ mkDerivation, filepath, mtl, temporary, test-framework }:
     mkDerivation {
       pname = "test-framework-golden";
       version = "1.1.3.1";
       sha256 = "1vmkc16z3gzbq9aibfk3wv7ms7sq7yivaamld63qrzlqaffz1xrw";
       buildDepends = [ filepath mtl temporary test-framework ];
       homepage = "https://github.com/feuerbach/test-framework-golden";
       description = "Golden tests support for test-framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "test-framework-hunit" = callPackage
    ({ mkDerivation, extensible-exceptions, HUnit, test-framework }:
     mkDerivation {
       pname = "test-framework-hunit";
       version = "0.3.0.1";
       sha256 = "1h0h55kf6ff25nbfx1mhliwyknc0glwv3zi78wpzllbjbs7gvyfk";
       buildDepends = [ extensible-exceptions HUnit test-framework ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "HUnit support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-program" = callPackage
    ({ mkDerivation, test-framework }:
     mkDerivation {
       pname = "test-framework-program";
       version = "1.1";
       sha256 = "10p6xxxbfx3yr71wdbvk7qhm3xkxq3a1dv4hgcirzynsdfk36s3z";
       buildDepends = [ test-framework ];
       description = "Test framework support for running simple test programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-quickcheck" = callPackage
    ({ mkDerivation, deepseq, extensible-exceptions, QuickCheck, random
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-quickcheck";
       version = "0.3.0";
       sha256 = "0g8sh3x3mhns03svccgbdbw8crzpzmahp1hr1fs6ag66fqr8p9mv";
       buildDepends = [
         deepseq extensible-exceptions QuickCheck random test-framework
       ];
       homepage = "http://batterseapower.github.com/test-framework/";
       description = "QuickCheck support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-quickcheck2" = callPackage
    ({ mkDerivation, extensible-exceptions, QuickCheck, random
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-quickcheck2";
       version = "0.3.0.3";
       sha256 = "12p1zwrsz35r3j5gzbvixz9z1h5643rhihf5gqznmc991krwd5nc";
       buildDepends = [
         extensible-exceptions QuickCheck random test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "QuickCheck2 support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-sandbox" = callPackage
    ({ mkDerivation, ansi-terminal, HUnit, lifted-base, mtl, temporary
     , test-framework, test-sandbox, test-sandbox-hunit, transformers
     }:
     mkDerivation {
       pname = "test-framework-sandbox";
       version = "0.0.2.5";
       sha256 = "0vviw3byz3g1zjq2fjiyqbddx6s2j7ziwrqp5fshhaf118634056";
       buildDepends = [
         ansi-terminal lifted-base mtl temporary test-framework test-sandbox
         transformers
       ];
       testDepends = [
         HUnit test-framework test-sandbox test-sandbox-hunit
       ];
       homepage = "http://gree.github.io/haskell-test-sandbox/";
       description = "test-sandbox support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-skip" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, smallcheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-smallcheck
     }:
     mkDerivation {
       pname = "test-framework-skip";
       version = "1.0";
       sha256 = "1avs36j6a846a3qiy0f23qnld1swgpngidb3098dcib2rbw4p3n9";
       buildDepends = [ test-framework ];
       testDepends = [
         HUnit QuickCheck smallcheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-smallcheck
       ];
       description = "Functions for conveniently marking some of the tests in a suite as being skipped";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-smallcheck" = callPackage
    ({ mkDerivation, smallcheck, test-framework, transformers }:
     mkDerivation {
       pname = "test-framework-smallcheck";
       version = "0.2";
       sha256 = "1xpgpk1gp4w7w46b4rhj80fa0bcyz8asj2dcjb5x1c37b7rw90b0";
       buildDepends = [ smallcheck test-framework transformers ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "Support for SmallCheck tests in test-framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-testing-feat" = callPackage
    ({ mkDerivation, test-framework, testing-feat }:
     mkDerivation {
       pname = "test-framework-testing-feat";
       version = "0.1.0.1";
       sha256 = "0pf07psqc4ihg0wrqqm127hd9qjbllmqw9lzf1ridg6r3xs63994";
       buildDepends = [ test-framework testing-feat ];
       testDepends = [ test-framework testing-feat ];
       homepage = "http://github.com/jfischoff/test-framework-testing-feat";
       description = "A test framework provider for testing-feat";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-th" = callPackage
    ({ mkDerivation, haskell-src-exts, language-haskell-extract
     , regex-posix, test-framework
     }:
     mkDerivation {
       pname = "test-framework-th";
       version = "0.2.4";
       sha256 = "12lw7yj02jb9s0i7rb98jjam43j2h0gzmnbj9zi933fx7sg0sy4b";
       buildDepends = [
         haskell-src-exts language-haskell-extract regex-posix
         test-framework
       ];
       homepage = "http://github.com/finnsson/test-generator";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-framework-th-prime" = callPackage
    ({ mkDerivation, cpphs, haskell-src-exts, test-framework }:
     mkDerivation {
       pname = "test-framework-th-prime";
       version = "0.0.7";
       sha256 = "056d66jk7gn0ghsb75f2kpspws0gs1w9vnw0ywpq6kbskv992v0p";
       buildDepends = [ cpphs haskell-src-exts test-framework ];
       description = "Template Haskell for test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-pkg" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "test-pkg";
       version = "0.3.0.0";
       sha256 = "0fncybd3sxrbnrd4l1hri18rhfg9h0fm3k4305iwh4l65fbwg2n8";
       description = "Just tests Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-sandbox" = callPackage
    ({ mkDerivation, cereal, data-default, filepath, hastache, heredoc
     , hspec, lifted-base, monad-control, monad-loops, mtl, network
     , QuickCheck, random, random-shuffle, regex-posix, temporary, text
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "test-sandbox";
       version = "0.0.1.10";
       sha256 = "1ysym6dr5a4k0q8fzy358clj39mzwqjd4hz0swrhas85l8f7r9h8";
       buildDepends = [
         cereal data-default filepath lifted-base monad-control monad-loops
         mtl network random random-shuffle regex-posix temporary
         transformers transformers-base
       ];
       testDepends = [
         hastache heredoc hspec mtl QuickCheck regex-posix text transformers
       ];
       homepage = "http://gree.github.io/haskell-test-sandbox/";
       description = "Sandbox for system tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-sandbox-hunit" = callPackage
    ({ mkDerivation, HUnit, lifted-base, test-sandbox }:
     mkDerivation {
       pname = "test-sandbox-hunit";
       version = "0.0.1.6";
       sha256 = "0w5k240f249lgggzy2lldaw8661g0q4293hkfcz7d0hhl78zwg48";
       buildDepends = [ HUnit lifted-base test-sandbox ];
       homepage = "http://gree.github.io/haskell-test-sandbox/";
       description = "HUnit convenience functions for use with test-sandbox";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-sandbox-quickcheck" = callPackage
    ({ mkDerivation, mtl, QuickCheck, random, test-sandbox
     , transformers
     }:
     mkDerivation {
       pname = "test-sandbox-quickcheck";
       version = "0.0.1.6";
       sha256 = "1pp1la69ihzc4lcnc9vn7nan7qcq1fc3xvndi2j2118lv005fiha";
       buildDepends = [ mtl QuickCheck random test-sandbox transformers ];
       homepage = "http://gree.github.io/haskell-test-sandbox/";
       description = "QuickCheck convenience functions for use with test-sandbox";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "test-shouldbe" = callPackage
    ({ mkDerivation, hspec, hspec-discover, HUnit, silently }:
     mkDerivation {
       pname = "test-shouldbe";
       version = "0.2.1";
       sha256 = "0m8kb8ydj3s3agh45mzmn8icbik68fvh0fp2idkd1hs7km1qzaga";
       buildDepends = [ HUnit ];
       testDepends = [ hspec hspec-discover silently ];
       homepage = "https://github.com/sol/test-shouldbe#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};

  "test-simple" = callPackage
    ({ mkDerivation, executable-path, mtl, QuickCheck, state-plus }:
     mkDerivation {
       pname = "test-simple";
       version = "0.1.7";
       sha256 = "1p9y15vv23j1qn3shxl2wqb8skh0n53vrb39qv1nvff9bclxldka";
       buildDepends = [ mtl QuickCheck state-plus ];
       testDepends = [ executable-path mtl QuickCheck ];
       description = "Simple Perl inspired testing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "testPkg" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "testPkg";
       version = "0.0";
       sha256 = "0lppzyh0qxqry8a2d1yqrin51kizw2hl937pxg2a6pi34grlhdd0";
       isLibrary = false;
       isExecutable = true;
       description = "Small test package";
       license = "unknown";
     }) {};

  "testing-feat" = callPackage
    ({ mkDerivation, mtl, QuickCheck, tagshare }:
     mkDerivation {
       pname = "testing-feat";
       version = "0.4.0.2";
       sha256 = "15gi6w7p4alnih9grklhhr8338y1aal07admbz4n2f724hnhyb2j";
       buildDepends = [ mtl QuickCheck tagshare ];
       description = "Functional Enumeration of Algebraic Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "testloop" = callPackage
    ({ mkDerivation, Cabal, filepath, fsnotify, hint, mtl
     , system-filepath, time
     }:
     mkDerivation {
       pname = "testloop";
       version = "0.1.1.0";
       sha256 = "1bygfdcnd0y60jhyp34zkss2cxr3s2jq6ysxm0w9c4vhl361ib7z";
       buildDepends = [
         Cabal filepath fsnotify hint mtl system-filepath time
       ];
       homepage = "http://github.com/roman/testloop";
       description = "Quick feedback loop for test suites";
       license = stdenv.lib.licenses.mit;
     }) {};

  "testpack" = callPackage
    ({ mkDerivation, HUnit, mtl, QuickCheck, random }:
     mkDerivation {
       pname = "testpack";
       version = "2.1.3.0";
       sha256 = "1rq5d64d7j3gpgbfxmfr4xmzizjy0ricw5ghrakv8gzvxmi2bn4p";
       buildDepends = [ HUnit mtl QuickCheck random ];
       homepage = "https://github.com/jgoerzen/testpack";
       description = "Test Utililty Pack for HUnit and QuickCheck (unmaintained)";
       license = "LGPL";
     }) {};

  "testpattern" = callPackage
    ({ mkDerivation, filepath, gtk }:
     mkDerivation {
       pname = "testpattern";
       version = "0.1";
       sha256 = "0a0kw5546z5jydk6dq2p16p2kpwv7fnmy1m907m3x6n580i1vh3l";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath gtk ];
       homepage = "http://code.haskell.org/~dons/code/testpattern";
       description = "Display a monitor test pattern";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "testrunner" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, random, regex-compat, stm }:
     mkDerivation {
       pname = "testrunner";
       version = "0.9.1";
       sha256 = "1887g3wn5mnlbxj4vbzv0zm3gwaj9ycr9sk7hy27qbb2x7c30iaw";
       buildDepends = [ HUnit QuickCheck random regex-compat stm ];
       description = "Easy unit test driver framework";
       license = "GPL";
     }) {};

  "tetris" = callPackage
    ({ mkDerivation, GLUT, random }:
     mkDerivation {
       pname = "tetris";
       version = "0.27178";
       sha256 = "10wlw1frkaa3j8mb8lxgpvxcx87m8wdpca3mli9c5kirdm51vjgw";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT random ];
       homepage = "http://d.hatena.ne.jp/mokehehe/20080921/tetris";
       description = "A 2-D clone of Tetris";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "texmath" = callPackage
    ({ mkDerivation, filepath, mtl, pandoc-types, parsec, split, syb
     , temporary, text, utf8-string, xml
     }:
     mkDerivation {
       pname = "texmath";
       version = "0.8";
       sha256 = "1j0i9594fqhl2fzxyndyy6fvrpaqdarq817pxdar0hmccy55b7gb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl pandoc-types parsec syb xml ];
       testDepends = [ filepath split temporary text utf8-string xml ];
       homepage = "http://github.com/jgm/texmath";
       description = "Conversion between formats used to represent mathematics";
       license = "GPL";
     }) {};

  "text" = callPackage
    ({ mkDerivation, deepseq, HUnit, QuickCheck, quickcheck-unicode
     , random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "text";
       version = "1.2.0.3";
       sha256 = "11prz0vli6rclj04vpx5dnzfyznvsrq7i2jmh4sjy37nic5bqf0x";
       buildDepends = [ deepseq ];
       testDepends = [
         deepseq HUnit QuickCheck quickcheck-unicode random test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/text";
       description = "An efficient packed Unicode text type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-binary" = callPackage
    ({ mkDerivation, binary, text }:
     mkDerivation {
       pname = "text-binary";
       version = "0.1.0";
       sha256 = "0wc501j8hqspnhf4d1hyb18f1wgc4kl2qx1b5s4bkxv0dfbwrk6z";
       buildDepends = [ binary text ];
       homepage = "https://github.com/kawu/text-binary";
       description = "Binary instances for text types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-format" = callPackage
    ({ mkDerivation, double-conversion, text, time, transformers }:
     mkDerivation {
       pname = "text-format";
       version = "0.3.1.1";
       sha256 = "02zfgzfjvkaxbma1h2gr95h10c8q9gyaadag41q579j68iv15qbd";
       buildDepends = [ double-conversion text time transformers ];
       homepage = "https://github.com/bos/text-format";
       description = "Text formatting";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-format-simple" = callPackage
    ({ mkDerivation, MissingH }:
     mkDerivation {
       pname = "text-format-simple";
       version = "1.1.0";
       sha256 = "0iqs3v03kirjczlp7jpqdqzrfvqsbm260g110abkbpbxws3szqhk";
       buildDepends = [ MissingH ];
       description = "Simple text formatting library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-icu" = callPackage
    ({ mkDerivation, deepseq, HUnit, icu, QuickCheck, random
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text
     }:
     mkDerivation {
       pname = "text-icu";
       version = "0.7.0.0";
       sha256 = "1fvq6qi9kvw722v2m9d40vwwa2irswfapqfjcrym9c2swdagxnry";
       editedCabalFile = "07dqh8inkz7m0v65rl1npvg48g73vg5d192n6rwkgacczz54whqr";
       buildDepends = [ deepseq text ];
       testDepends = [
         deepseq HUnit QuickCheck random test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       extraLibraries = [ icu ];
       homepage = "https://github.com/bos/text-icu";
       description = "Bindings to the ICU library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-icu-translit" = callPackage
    ({ mkDerivation, icu, QuickCheck, test-framework
     , test-framework-quickcheck2, text, text-icu
     }:
     mkDerivation {
       pname = "text-icu-translit";
       version = "0.1.0.7";
       sha256 = "1qfmkydayqj1knlvfs1l6nq42a4y81k5z2g87lvzafrylyjjd002";
       buildDepends = [ text ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2 text text-icu
       ];
       extraLibraries = [ icu ];
       description = "ICU transliteration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-json-qq" = callPackage
    ({ mkDerivation, haskell-src-meta, json, json-qq, parsec }:
     mkDerivation {
       pname = "text-json-qq";
       version = "0.4.1";
       sha256 = "137m593yz5gl6jj7mi1f9kjsgi1np4n6707aqp94iw0qzxj8hdhg";
       buildDepends = [ haskell-src-meta json json-qq parsec ];
       homepage = "http://github.com/finnsson/text-json-qq";
       description = "Json Quasiquatation for Haskell";
       license = "unknown";
     }) {};

  "text-latin1" = callPackage
    ({ mkDerivation, case-insensitive, data-checked, hashable, text }:
     mkDerivation {
       pname = "text-latin1";
       version = "0.3";
       sha256 = "1cs09qwkcljbnckakzr1wnpclkzjb0in3nnz6fpjyl4mxp5bqaw9";
       buildDepends = [ case-insensitive data-checked hashable text ];
       homepage = "https://github.com/mvv/text-latin1";
       description = "Latin-1 (including ASCII) utility functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-ldap" = callPackage
    ({ mkDerivation, attoparsec, base64-bytestring, Cabal, dlist
     , QuickCheck, random, semigroups, transformers
     }:
     mkDerivation {
       pname = "text-ldap";
       version = "0.1.1.0";
       sha256 = "0vpcv6xv0h7f94qb3kh370nj5r29vjz6lxm1pqg4qisn72gjnj3n";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec base64-bytestring dlist semigroups transformers
       ];
       testDepends = [ Cabal QuickCheck random semigroups ];
       description = "Parser and Printer for LDAP text data stream";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-locale-encoding" = callPackage
    ({ mkDerivation, bytestring-handle, text }:
     mkDerivation {
       pname = "text-locale-encoding";
       version = "0.1.0.2";
       sha256 = "1ls41s45qwrmmac8k1gryvxbhhczqy2wanwanw48m7xnbv52p9fg";
       buildDepends = [ bytestring-handle text ];
       homepage = "https://github.com/exbb2/text-locale-encoding";
       description = "Encode and decode Text to/from ByteString using TextEncoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-manipulate" = callPackage
    ({ mkDerivation, tasty, tasty-hunit, text, text-format }:
     mkDerivation {
       pname = "text-manipulate";
       version = "0.1.2.1";
       sha256 = "1cr1f0d7xxj6nr5rlqhnijjrd5k7xpfamqdd8j9pbwx2qi91vimz";
       buildDepends = [ text text-format ];
       testDepends = [ tasty tasty-hunit text ];
       homepage = "https://github.com/brendanhay/text-manipulate";
       description = "Case conversion, word boundary manipulation, and textual subjugation";
       license = "unknown";
     }) {};

  "text-normal" = callPackage
    ({ mkDerivation, deepseq, hspec, QuickCheck, quickcheck-instances
     , text, text-icu
     }:
     mkDerivation {
       pname = "text-normal";
       version = "0.2.1.0";
       sha256 = "10cxvn450q2fdjxly72m20x2yikkvwx3dvyqs7b992c2dr1zc1iv";
       buildDepends = [ deepseq text text-icu ];
       testDepends = [ hspec QuickCheck quickcheck-instances ];
       homepage = "https://github.com/joelteon/text-normal.git";
       description = "Unicode-normalized text";
       license = stdenv.lib.licenses.mit;
     }) {};

  "text-printer" = callPackage
    ({ mkDerivation, QuickCheck, semigroups, test-framework
     , test-framework-quickcheck2, text, text-latin1
     }:
     mkDerivation {
       pname = "text-printer";
       version = "0.4";
       sha256 = "0jcixgxln4c12nzmj50g3mmslki6f083xjrm9hr6hqvqzffxny5q";
       buildDepends = [ semigroups text text-latin1 ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/mvv/text-printer";
       description = "Abstract interface for text builders/printers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-register-machine" = callPackage
    ({ mkDerivation, mtl, vector }:
     mkDerivation {
       pname = "text-register-machine";
       version = "0.4.0";
       sha256 = "0g0iihfin5vjfk69r7jjw4vs3l1k3f0kkg3bbc4xqm274vd72bph";
       buildDepends = [ mtl vector ];
       homepage = "https://github.com/acfoltzer/text-register-machine";
       description = "A Haskell implementation of the 1# Text Register Machine";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-show" = callPackage
    ({ mkDerivation, QuickCheck, quickcheck-instances, tasty
     , tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "text-show";
       version = "0.4.1";
       sha256 = "1npbi1d2grqqvyzw93vlwhp3vbk2wksxr1wq33lffgrhdx2iv5p7";
       buildDepends = [ text time ];
       testDepends = [
         QuickCheck quickcheck-instances tasty tasty-quickcheck text time
       ];
       homepage = "https://github.com/RyanGlScott/text-show";
       description = "Efficient conversion of values into Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-stream-decode" = callPackage
    ({ mkDerivation, deepseq, hspec, text }:
     mkDerivation {
       pname = "text-stream-decode";
       version = "0.1.0.5";
       sha256 = "1s2lncs5k8rswg1bpf4vz5p1maj46bsgf7ar4lzcla9bf3f4bppy";
       buildDepends = [ text ];
       testDepends = [ deepseq hspec text ];
       homepage = "http://github.com/fpco/text-stream-decode";
       description = "Streaming decoding functions for UTF encodings. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "text-utf7" = callPackage
    ({ mkDerivation, quickcheck-instances, tasty, tasty-hunit
     , tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "text-utf7";
       version = "0.1.0.0";
       sha256 = "0kcbw9gb8mwvc4p10m0g5gplgi38qlnnc0plaw22l1qdkx0k8ilv";
       buildDepends = [ text ];
       testDepends = [
         quickcheck-instances tasty tasty-hunit tasty-quickcheck text
       ];
       homepage = "https://github.com/dpwright/text-utf7";
       description = "UTF-7 encoding/decoding for Data.Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "text-xml-generic" = callPackage
    ({ mkDerivation, mtl, not-in-base, split, syb, xml }:
     mkDerivation {
       pname = "text-xml-generic";
       version = "0.1.1";
       sha256 = "1w3gqv94yj1j71qhs1s6sxnxax8ahxwsz7brv0w79sg3r9akl31h";
       buildDepends = [ mtl not-in-base split syb xml ];
       homepage = "http://github.com/finnsson/Text.XML.Generic";
       description = "Serialize Data to XML (strings)";
       license = "unknown";
     }) {};

  "text-xml-qq" = callPackage
    ({ mkDerivation, parsec, xml }:
     mkDerivation {
       pname = "text-xml-qq";
       version = "0.1";
       sha256 = "0311in43n89bk1fg4y9qglvbbl47ygvcvr0f7zpr8bpaqbb1ard5";
       buildDepends = [ parsec xml ];
       homepage = "http://www.github.com/finnsson/text-xml-qq";
       description = "Quasiquoter for xml. XML DSL in Haskell.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "textPlot" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "textPlot";
       version = "0.2";
       sha256 = "0sy5lf5aa3yl3wy199ifb14cnkq5xghcv8m9ny9vzhyyk00h0j6y";
       description = "Plot functions in text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "textmatetags" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "textmatetags";
       version = "0.0.1.2";
       sha256 = "1q47s8z6igi21m4gqbyizlgiq1z7frk9pi4jppckxmpcjs5xd0gk";
       isLibrary = false;
       isExecutable = true;
       homepage = "https://github.com/spockz/Haskell-Code-Completion-for-TextMate";
       description = "A simple Haskell program to provide tags for Haskell code completion in TextMate";
       license = stdenv.lib.licenses.mit;
     }) {};

  "texts" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "texts";
       version = "0.4.0";
       sha256 = "15r3lrd6qrhhsll6qlbvgd5g545mj2s6banahwlibcimqqdw8s9h";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tf-random" = callPackage
    ({ mkDerivation, primitive, random, time }:
     mkDerivation {
       pname = "tf-random";
       version = "0.5";
       sha256 = "0445r2nns6009fmq0xbfpyv7jpzwv0snccjdg7hwj4xk4z0cwc1f";
       buildDepends = [ primitive random time ];
       description = "High-quality splittable pseudorandom number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tfp" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tfp";
       version = "0.8";
       sha256 = "0rmq41xfrmnmvgqnp97ccbaik73n7b2h91784xin6fir56bf2ggp";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://www.haskell.org/haskellwiki/Type_arithmetic";
       description = "Type-level integers, booleans, lists using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tfp-th" = callPackage
    ({ mkDerivation, tfp }:
     mkDerivation {
       pname = "tfp-th";
       version = "0.8";
       sha256 = "139dcwvik8yfpl3i71ddjml1xn126qrx1mbxa4mcwfm6q81fvkzm";
       buildDepends = [ tfp ];
       homepage = "http://www.haskell.org/haskellwiki/Type_arithmetic";
       description = "Template-Haskell code for tfp";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tftp" = callPackage
    ({ mkDerivation, binary, hslogger, mtl, network, QuickCheck
     , transformers
     }:
     mkDerivation {
       pname = "tftp";
       version = "0.2";
       sha256 = "0d95nhz5z0zi665h3npcags71zgprgrh7rq86yzn3wamnavlvswn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary hslogger mtl network transformers ];
       testDepends = [ hslogger mtl network QuickCheck transformers ];
       homepage = "http://github.com/sheyll/tftp";
       description = "A library for building tftp servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tga" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tga";
       version = "0.2";
       sha256 = "0lpc5z575y7cq03ww2knr5qdkfb36qnim5y1gkh552r9k3pfdjhf";
       description = "Reading and writing of tga image files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-alpha" = callPackage
    ({ mkDerivation, derive, mmorph, mtl, tasty, tasty-hunit
     , tasty-quickcheck, th-desugar, transformers
     }:
     mkDerivation {
       pname = "th-alpha";
       version = "0.2.0.0";
       sha256 = "1v280dhy3yw6aw9vi3rb91vz9brdcg8j6pvqdirra98r0yz321q0";
       buildDepends = [ mmorph mtl th-desugar transformers ];
       testDepends = [ derive tasty tasty-hunit tasty-quickcheck ];
       homepage = "https://github.com/jkarni/th-alpha";
       description = "Alpha equivalence for TH Exp";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-build" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "th-build";
       version = "0.4.0.0";
       sha256 = "0f16cgwkmqhkm5nxyic0f56swzm96yqmagmbh7vjd203mn9zv9z6";
       homepage = "https://github.com/DanielSchuessler/th-build";
       description = "More convenient construction of TH ASTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-desugar" = callPackage
    ({ mkDerivation, hspec, HUnit, mtl, syb }:
     mkDerivation {
       pname = "th-desugar";
       version = "1.4.2";
       sha256 = "16l0khjx2wppnm9spp6mg659m95hxjkzfv3pjw5ays3z6clhx8b9";
       buildDepends = [ mtl syb ];
       testDepends = [ hspec HUnit mtl syb ];
       homepage = "http://www.cis.upenn.edu/~eir/packages/th-desugar";
       description = "Functions to desugar Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-expand-syns" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "th-expand-syns";
       version = "0.3.0.4";
       sha256 = "05qgfam7zq02848icvddds67ch5d8py7r30izg4lp0df0kzn08yq";
       buildDepends = [ syb ];
       description = "Expands type synonyms in Template Haskell ASTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-extras" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "th-extras";
       version = "0.0.0.2";
       sha256 = "15sqf2jjnqcssq8hp80fk0ysgwqykjjc31gvvmzg4sypskpjs8cl";
       buildDepends = [ syb ];
       homepage = "https://github.com/mokus0/th-extras";
       description = "A grab bag of functions for use with Template Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "th-fold" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "th-fold";
       version = "0.0.0.1";
       sha256 = "10n1aw74xi5gzs1847dhiv6yjxcz99idw91hvf34zhhs8hp8zf2z";
       homepage = "http://code.haskell.org/~mokus/th-fold";
       description = "TH fold generator";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "th-instance-reification" = callPackage
    ({ mkDerivation, HTF, HUnit, list-extras, loch-th, placeholders
     , QuickCheck, QuickCheck-GenT, quickcheck-instances, th-expand-syns
     }:
     mkDerivation {
       pname = "th-instance-reification";
       version = "0.1.2";
       sha256 = "0r16s7m0yy3siy9nbqvpv66gk7c6xzz8ccdf9abpqap15vkkz7sc";
       buildDepends = [ list-extras loch-th placeholders th-expand-syns ];
       testDepends = [
         HTF HUnit list-extras loch-th placeholders QuickCheck
         QuickCheck-GenT quickcheck-instances th-expand-syns
       ];
       homepage = "https://github.com/nikita-volkov/th-instance-reification";
       description = "Fixed versions of instances reification functions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "th-instances" = callPackage
    ({ mkDerivation, checkers, DebugTraceHelpers, derive, HUnit, mtl
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, th-kinds, th-lift
     }:
     mkDerivation {
       pname = "th-instances";
       version = "0.1.0.14";
       sha256 = "1izamc2j1zjyrvzns7kj1mcma4bbmyd3sagbzxsyi4ja8kszcy0v";
       buildDepends = [ checkers derive mtl QuickCheck th-kinds th-lift ];
       testDepends = [
         checkers DebugTraceHelpers derive HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         th-kinds th-lift
       ];
       description = "A place to collect orphan instances for Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-kinds" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "th-kinds";
       version = "0.1.1";
       sha256 = "0d8n0wnygdyi9qhkr7418f0227r3dcjwvmfhpw0kslryz0vqyf5b";
       buildDepends = [ mtl ];
       description = "Automated kind inference in Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-lift" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "th-lift";
       version = "0.7";
       sha256 = "1mh5k6ifmc3mjavlrpkcq55ng737yb3nqv1q67fv8irkv5m6qpza";
       editedCabalFile = "1mdf0zv65025fma8v6gxi3hf3ikjbkfydh74i0axw8cnwa6y29wc";
       homepage = "http://github.com/mboes/th-lift";
       description = "Derive Template Haskell's Lift class for datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-lift-instances" = callPackage
    ({ mkDerivation, doctest, filepath, QuickCheck, text, th-lift
     , vector
     }:
     mkDerivation {
       pname = "th-lift-instances";
       version = "0.1.4";
       sha256 = "02sf7qn1rs33cdf1dl7vpwkhqzhmj8h3naw0ngh2kz05ymk2qng4";
       buildDepends = [ text th-lift vector ];
       testDepends = [ doctest filepath QuickCheck text vector ];
       homepage = "http://github.com/bennofs/th-lift-instances/";
       description = "Lift instances for template-haskell for common data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-orphans" = callPackage
    ({ mkDerivation, th-lift, th-reify-many }:
     mkDerivation {
       pname = "th-orphans";
       version = "0.8.2";
       sha256 = "19d4ls2plxmn5n9c99503mvi99ffp6y6zxi564zf6cdfgw8v73fy";
       buildDepends = [ th-lift th-reify-many ];
       description = "Orphan instances for TH datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-printf" = callPackage
    ({ mkDerivation, attoparsec, hspec, HUnit, QuickCheck, text
     , transformers
     }:
     mkDerivation {
       pname = "th-printf";
       version = "0.3.0.0";
       sha256 = "10kq1x8klgny6k5aq8h23fnrja3wfmva58j5kpjwzkz0xzr83biq";
       buildDepends = [ attoparsec text transformers ];
       testDepends = [ hspec HUnit QuickCheck text ];
       homepage = "https://github.com/joelteon/th-printf";
       description = "Compile-time printf";
       license = stdenv.lib.licenses.mit;
     }) {};

  "th-reify-many" = callPackage
    ({ mkDerivation, mtl, safe, th-expand-syns }:
     mkDerivation {
       pname = "th-reify-many";
       version = "0.1.2";
       sha256 = "1r7ran4vi2mrhcr6qil89cni6ci3dgm775lfw5ciml3gz1948vz9";
       buildDepends = [ mtl safe th-expand-syns ];
       homepage = "http://github.com/mgsloan/th-reify-many";
       description = "Recurseively reify template haskell datatype info";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "th-sccs" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "th-sccs";
       version = "0.0.0.20110723";
       sha256 = "0vrjqwdjv2922kqmh57ypbslbv1m829wag78addqsr4vjd9b3zl6";
       description = "Binding group analysis in Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "themoviedb" = callPackage
    ({ mkDerivation, aeson, HTTP, HUnit, network, text, time }:
     mkDerivation {
       pname = "themoviedb";
       version = "0.1.0.1";
       sha256 = "1n0n57ah9nw9sb7gwyhvmqs7iiwaxrcpvjhgxqmiskhlwmjkpq85";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ aeson HTTP network text time ];
       testDepends = [ aeson HTTP HUnit network text time ];
       homepage = "http://github.com/pjones/themoviedb";
       description = "Haskell API bindings for http://themoviedb.org";
       license = stdenv.lib.licenses.mit;
     }) {};

  "themplate" = callPackage
    ({ mkDerivation, configurator, either, errors, filepath
     , optparse-applicative, text, transformers
     }:
     mkDerivation {
       pname = "themplate";
       version = "1.1";
       sha256 = "1bjiiwhbwq6am7269gzsaqq6hpvy45x4pkq0kq7qm2j4bzrmfr14";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         configurator either errors filepath optparse-applicative text
         transformers
       ];
       homepage = "http://github.com/bennofs/themplate/";
       description = "themplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "theoremquest" = callPackage
    ({ mkDerivation, HTTP, json, utf8-string }:
     mkDerivation {
       pname = "theoremquest";
       version = "0.0.0";
       sha256 = "05z0jppjbw70rlyh2qis27xp8vdx9fgn7i22ckxb0m2y75gffq61";
       buildDepends = [ HTTP json utf8-string ];
       description = "A common library for TheoremQuest, a theorem proving game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "theoremquest-client" = callPackage
    ({ mkDerivation, HTTP, network, theoremquest }:
     mkDerivation {
       pname = "theoremquest-client";
       version = "0.0.0";
       sha256 = "0kdfbz5sa2gcy9znz4c2hnyni01vpabixrclg2gs7awysw8hiy3a";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ HTTP network theoremquest ];
       description = "A simple client for the TheoremQuest theorem proving game";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "these" = callPackage
    ({ mkDerivation, bifunctors, mtl, profunctors, semigroupoids
     , semigroups, transformers, vector
     }:
     mkDerivation {
       pname = "these";
       version = "0.4.2";
       sha256 = "0hs59i07k1lkynvdpymjvl1va2frc3aq6wyrmbi7mz3vmz0bjcp7";
       editedCabalFile = "0abnlhd8ijjppmbzfil7qfm7qrprlq4iy67iji7wqj68v3z73sq2";
       buildDepends = [
         bifunctors mtl profunctors semigroupoids semigroups transformers
         vector
       ];
       homepage = "https://github.com/isomorphism/these";
       description = "An either-or-both data type, with corresponding hybrid error/writer monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "thespian" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "thespian";
       version = "0.999";
       sha256 = "0z3cqjcf6xr0z7g3s1jszcs39w43sl0793gl0qm3dklbginqbcnn";
       buildDepends = [ mtl ];
       homepage = "http://bitbucket.org/alinabi/thespian";
       description = "Lightweight Erlang-style actors for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "theta-functions" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "theta-functions";
       version = "1.0.1";
       sha256 = "0m9k1b75ja5a6vq7jdqzsbqjc4fh1kzy29rzss08ph6700bm6z8f";
       homepage = "https://github.com/hijarian/theta-functions";
       description = "Theta-functions implemented as trigonometric series";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "thih" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "thih";
       version = "1.0";
       sha256 = "0ir8z7al3fxjwq5nb05l136k7vp82ag6khcyf9bvjcymlra4cs0m";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://web.cecs.pdx.edu/~mpj/thih/";
       description = "Typing Haskell In Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "thimk" = callPackage
    ({ mkDerivation, edit-distance, parseargs, phonetic-code, sqlite }:
     mkDerivation {
       pname = "thimk";
       version = "0.3.1";
       sha256 = "1pjz6rnbm1llxgp47fasv40w2vg197z582vf9mm7rhm5qjp25zi0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ edit-distance parseargs phonetic-code sqlite ];
       homepage = "http://wiki.cs.pdx.edu/bartforge/thimk";
       description = "Command-line spelling word suggestion tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "thorn" = callPackage
    ({ mkDerivation, bifunctors, contravariant, mtl, profunctors
     , random
     }:
     mkDerivation {
       pname = "thorn";
       version = "0.2";
       sha256 = "1krxfsgj4ciifg76khsl4lw1nb40xx4gs07nwd84ail85s394h1h";
       editedCabalFile = "16hvf6vszsrgprdrsg8yhwf3ab0fk2y3q0ghykv7al7mjng9b7ni";
       buildDepends = [ bifunctors contravariant mtl profunctors random ];
       homepage = "https://github.com/Kinokkory/Thorn";
       description = "Datatype Manipulation with Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "thread-local-storage" = callPackage
    ({ mkDerivation, atomic-primops }:
     mkDerivation {
       pname = "thread-local-storage";
       version = "0.1.0.3";
       sha256 = "0ka6xrxzsw2z95qcc4v2hh4ldb22zkd5s62lns3v1853g4dw7k3l";
       testDepends = [ atomic-primops ];
       description = "Several options for thread-local-storage (TLS) in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "threadPool" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "threadPool";
       version = "0.3.1";
       sha256 = "18zr8k9sldbkvs5yw0ann92amri6dv2n8wws87lcqxgs52sw6pwi";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://bjaress.blogspot.com/";
       description = "Runs other programs in the manner of a thread pool";
       license = "GPL";
     }) {};

  "threadmanager" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "threadmanager";
       version = "0.1.7";
       sha256 = "17s26hlailbr8c9d3dv1pwiy81m3nzr3sw0v9y716rmhldf7k09f";
       description = "(deprecated in favor of 'threads') Simple thread management";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "threads" = callPackage
    ({ mkDerivation, base-unicode-symbols, concurrent-extra, HUnit, stm
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "threads";
       version = "0.5.1.2";
       sha256 = "1bq2aza6sam4zkgpgf8x4lhkk2na1i8annx9cwad3j68p5vdg929";
       buildDepends = [ base-unicode-symbols stm ];
       testDepends = [
         base-unicode-symbols concurrent-extra HUnit stm test-framework
         test-framework-hunit
       ];
       homepage = "https://github.com/basvandijk/threads";
       description = "Fork threads and wait for their result";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "threads-pool" = callPackage
    ({ mkDerivation, mtl, stm }:
     mkDerivation {
       pname = "threads-pool";
       version = "0.1";
       sha256 = "1x1yafxaaf8r02cqipqnm9shj74kja1bqdp0d1cq5kdhcnh22xkz";
       buildDepends = [ mtl stm ];
       description = "A library to operate with pool of haskell's IO threads";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "threadscope" = callPackage
    ({ mkDerivation, binary, cairo, deepseq, filepath, ghc-events, glib
     , gtk, mtl, pango, text, time
     }:
     mkDerivation {
       pname = "threadscope";
       version = "0.2.6";
       sha256 = "0pycxvf3gjx86yp948anczxidhi6ra95szkqyvvlfpriay7klfya";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary cairo deepseq filepath ghc-events glib gtk mtl pango text
         time
       ];
       configureFlags = "--ghc-options=-rtsopts";
       homepage = "http://www.haskell.org/haskellwiki/ThreadScope";
       description = "A graphical tool for profiling parallel Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "threefish" = callPackage
    ({ mkDerivation, cereal, crypto-api, data-default, entropy, random
     , tagged
     }:
     mkDerivation {
       pname = "threefish";
       version = "0.2.6";
       sha256 = "1v4vxm2yb7wmzkh9rsf5b6m04wjmy7yr7jq49b5msddjdzhfmf91";
       buildDepends = [
         cereal crypto-api data-default entropy random tagged
       ];
       homepage = "http://github.com/valderman/threefish";
       description = "The Threefish block cipher and the Skein hash function for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "threepenny-gui" = callPackage
    ({ mkDerivation, aeson, attoparsec-enumerator, data-default
     , deepseq, filepath, hashable, MonadCatchIO-transformers
     , network-uri, safe, snap-core, snap-server, stm, text, time
     , transformers, unordered-containers, utf8-string, vault
     , websockets, websockets-snap
     }:
     mkDerivation {
       pname = "threepenny-gui";
       version = "0.5.0.0";
       sha256 = "0rr826k6p2hbp66qr12sci6km40krbi7lbs293r11jxi0ivj5drd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec-enumerator data-default deepseq filepath hashable
         MonadCatchIO-transformers network-uri safe snap-core snap-server
         stm text time transformers unordered-containers utf8-string vault
         websockets websockets-snap
       ];
       homepage = "http://www.haskell.org/haskellwiki/Threepenny-gui";
       description = "GUI framework that uses the web browser as a display";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "thrift" = callPackage
    ({ mkDerivation, attoparsec, binary, hashable, HTTP, network
     , network-uri, QuickCheck, split, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "thrift";
       version = "0.9.2";
       sha256 = "1c8x66agbbrcsk08i9ha3h9kdq97lnz8sby7xsjx84v5f6kmd7a4";
       buildDepends = [
         attoparsec binary hashable HTTP network network-uri QuickCheck
         split text unordered-containers vector
       ];
       homepage = "http://thrift.apache.org";
       description = "Haskell bindings for the Apache Thrift RPC system";
       license = "unknown";
     }) {};

  "thrist" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "thrist";
       version = "0.3.0.2";
       sha256 = "01y4s5mpk7d0y878fr40j9k19dryj37am9g86v2s9lr5d0q2nnqp";
       homepage = "http://heisenbug.blogspot.com/search/label/thrist";
       description = "Type-threaded list";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "throttle" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "throttle";
       version = "3.0.0";
       sha256 = "1yxmq7244a8bcw1jg00dqcpwzf8h1333c51k9d0v39flpkzp5qlc";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "thumbnail" = callPackage
    ({ mkDerivation, gd }:
     mkDerivation {
       pname = "thumbnail";
       version = "0.8.0";
       sha256 = "1ms7pzw4lrpkpv6sb0l7jvw5a0n5j7fc9wyi28bq7ik22d4sc8kd";
       buildDepends = [ gd ];
       homepage = "https://github.com/cutsea110/thumbnail";
       description = "generate thumbnail image";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "thumbnail-plus" = callPackage
    ({ mkDerivation, conduit, conduit-extra, data-default, either, gd
     , hspec, imagesize-conduit, resourcet, temporary, transformers
     }:
     mkDerivation {
       pname = "thumbnail-plus";
       version = "1.0.4";
       sha256 = "110vfk5ri394awzmmq82r87gc9pmvy3500i836602syvd5zfa92x";
       buildDepends = [
         conduit conduit-extra data-default either gd imagesize-conduit
         resourcet temporary transformers
       ];
       testDepends = [
         conduit conduit-extra data-default hspec resourcet transformers
       ];
       homepage = "https://github.com/prowdsponsor/thumbnail-plus";
       description = "Generate thumbnails easily and safely";
       license = stdenv.lib.licenses.mit;
     }) {};

  "thyme" = callPackage
    ({ mkDerivation, aeson, attoparsec, Cabal, cpphs, deepseq, filepath
     , mtl, profunctors, QuickCheck, random, system-posix-redirect, text
     , time, vector, vector-space, vector-th-unbox
     }:
     mkDerivation {
       pname = "thyme";
       version = "0.3.5.5";
       sha256 = "0v3rbjl92bqggsdra72zdq6rxzb2qf1268424p94225lnwgp1il4";
       buildDepends = [
         aeson attoparsec deepseq mtl profunctors QuickCheck random text
         time vector vector-space vector-th-unbox
       ];
       testDepends = [
         attoparsec Cabal filepath mtl profunctors QuickCheck random
         system-posix-redirect text time vector-space
       ];
       buildTools = [ cpphs ];
       homepage = "https://github.com/liyang/thyme";
       description = "A faster time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tianbar" = callPackage
    ({ mkDerivation, aeson, blaze-html, blaze-markup, dbus, gtk
     , gtk-traymanager, happstack-server, network, random, split, text
     , transformers, utf8-string, webkit, xdg-basedir, xmonad
     , xmonad-contrib
     }:
     mkDerivation {
       pname = "tianbar";
       version = "0.4.6.0";
       sha256 = "1gnx57yk65m5mh8j652y2r3c26zbv157lhmlf11dlxchpgi6qh3y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson blaze-html blaze-markup dbus gtk gtk-traymanager
         happstack-server network random split text transformers utf8-string
         webkit xdg-basedir xmonad xmonad-contrib
       ];
       pkgconfigDepends = [ gtk ];
       homepage = "https://github.com/koterpillar/tianbar";
       description = "A desktop bar based on WebKit";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) gtk; };

  "tic-tac-toe" = callPackage
    ({ mkDerivation, glade, gtk }:
     mkDerivation {
       pname = "tic-tac-toe";
       version = "0.1";
       sha256 = "0bdls2xz281zdxq5z6vbkahmf6bpiqr0ra823j21783jwiyh8j01";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ glade gtk ];
       homepage = "http://ecks.homeunix.net";
       description = "Useful if reading \"Why FP matters\" by John Hughes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tickle" = callPackage
    ({ mkDerivation, bifunctors, doctest, filepath, lens, mtl
     , QuickCheck, semigroupoids, semigroups, transformers, validation
     }:
     mkDerivation {
       pname = "tickle";
       version = "0.0.4";
       sha256 = "11zm6fwnykp6hlfp9d4xcvcvmczj5x77sfkkx6v1gwz3qfkf2qcj";
       buildDepends = [
         bifunctors lens mtl semigroupoids semigroups transformers
         validation
       ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/nicta/tickle";
       description = "A port of @Data.Binary@";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tidal" = callPackage
    ({ mkDerivation, binary, colour, hashable, hmt, hosc
     , mersenne-random-pure64, mtl, parsec, text, time, transformers
     , websockets
     }:
     mkDerivation {
       pname = "tidal";
       version = "0.4.21";
       sha256 = "06789pk07x8rpgdkyvscqw4mr9bwj258jbpwm6wq715kymnln017";
       buildDepends = [
         binary colour hashable hmt hosc mersenne-random-pure64 mtl parsec
         text time transformers websockets
       ];
       homepage = "http://yaxu.org/tidal/";
       description = "Pattern language for improvised music";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "tidal-vis" = callPackage
    ({ mkDerivation, cairo, colour, tidal }:
     mkDerivation {
       pname = "tidal-vis";
       version = "0.1.8";
       sha256 = "1j9a4sgvji2wc9kq9xf0ja45b9md4v1xlanh6cfqk8p0b2qgmcrw";
       buildDepends = [ cairo colour tidal ];
       homepage = "http://yaxu.org/tidal/";
       description = "Visual rendering for Tidal patterns";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "tie-knot" = callPackage
    ({ mkDerivation, mtl, recursion-schemes }:
     mkDerivation {
       pname = "tie-knot";
       version = "0.2";
       sha256 = "1iksr5h6cyyl88z35fbaskriv4vhc1696d3i1i3c171c0vq0hwg4";
       buildDepends = [ mtl recursion-schemes ];
       homepage = "https://github.com/ppetr/tie-knot";
       description = "\"Ties the knot\" on a given set of structures that reference each other by keys";
       license = "LGPL";
     }) {};

  "tiempo" = callPackage
    ({ mkDerivation, deepseq, time }:
     mkDerivation {
       pname = "tiempo";
       version = "0.0.1.0";
       sha256 = "1gmaiiwcbn3z3zmhgii7q3922c2rwdgkjsc4104gyzjm2m08998r";
       buildDepends = [ deepseq time ];
       homepage = "http://github.com/HaskVan/tiempo";
       description = "Specify time intervals in different units (secs, mins, hours, etc.)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tiger" = callPackage
    ({ mkDerivation, uuagc, uuagc-cabal, uulib }:
     mkDerivation {
       pname = "tiger";
       version = "1.1.1";
       sha256 = "1llmizacz4sg77l5yi3f9m9xkckl1mpjh0ly20cbqf5747q354q1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ uuagc uuagc-cabal uulib ];
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       description = "Tiger Compiler of Universiteit Utrecht";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tightrope" = callPackage
    ({ mkDerivation, aeson, http-types, lens, mtl, text, wai, wai-extra
     , wreq
     }:
     mkDerivation {
       pname = "tightrope";
       version = "0.2.0.0";
       sha256 = "1vvzfsl166qhg0ykq71rzavllid216f6fg5xrk2454z9zskc9n60";
       buildDepends = [
         aeson http-types lens mtl text wai wai-extra wreq
       ];
       description = "Nice API for a Slackbot";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tighttp" = callPackage
    ({ mkDerivation, handle-like, monads-tf, papillon, simple-pipe
     , time
     }:
     mkDerivation {
       pname = "tighttp";
       version = "0.0.0.6";
       sha256 = "16n824qjnv3d1dlhgqm124ldqnps3cd332f4gl38dg948ldchzpn";
       buildDepends = [ handle-like monads-tf papillon simple-pipe time ];
       homepage = "https://github.com/YoshikuniJujo/tighttp/wiki";
       description = "Tiny and Incrementally-Growing HTTP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tilings" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tilings";
       version = "0.1";
       sha256 = "03a9bc4zbfb3c0dd75rxj7h9pj3sc23l9a9gmabcww5nsx8kpjys";
       homepage = "https://gitorious.org/tilings";
       description = "substitution tilings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timberc" = callPackage
    ({ mkDerivation, binary, bzlib, filepath, happy, mtl }:
     mkDerivation {
       pname = "timberc";
       version = "1.0.3";
       sha256 = "0x2yc57g9g5ii14l65xkly55rhx44nfjqnbl4bqf286mqsgz191j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary bzlib filepath mtl ];
       buildTools = [ happy ];
       homepage = "http://www.timber-lang.org";
       description = "The Timber Compiler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time" = callPackage
    ({ mkDerivation, deepseq, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "time";
       version = "1.5.0.1";
       sha256 = "0knixcmdsl2jhjw0x6is02yrw6dhjn4gr3fh06adc003gc3wr894";
       buildDepends = [ deepseq ];
       testDepends = [
         deepseq QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell/time";
       description = "A time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time-compat" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "time-compat";
       version = "0.1.0.3";
       sha256 = "0zqgzr8yjn36rn6gflwh5s0c92vl44xzxiw0jz8d5h0h8lhi21sr";
       buildDepends = [ time ];
       homepage = "http://hub.darcs.net/dag/time-compat";
       description = "Compatibility with old-time for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time-extras" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "time-extras";
       version = "1.1.4";
       sha256 = "1k9adm922l431gyk8figx5df1n2xk5awir2fpijnvvyphrwk5p3l";
       buildDepends = [ time ];
       homepage = "http://semantic.org/TimeLib/";
       description = "Data instances for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time-exts" = callPackage
    ({ mkDerivation, aeson, attoparsec, bindings-DSL, convertible
     , data-default, deepseq, fclabels, mtl, QuickCheck, random, text
     , time, timezone-olson
     }:
     mkDerivation {
       pname = "time-exts";
       version = "2.1.0";
       sha256 = "0y73axrlm6lh8150i4av0jza18zpd5fiiqv9y5m8a7xx11a386bm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec bindings-DSL convertible data-default deepseq
         fclabels mtl QuickCheck random text time timezone-olson
       ];
       homepage = "https://github.com/enzoh/time-exts";
       description = "Efficient Timestamps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time-http" = callPackage
    ({ mkDerivation, ascii, attempt, attoparsec, base-unicode-symbols
     , blaze-builder, blaze-textual, convertible-text, data-default
     , failure, QuickCheck, tagged, time
     }:
     mkDerivation {
       pname = "time-http";
       version = "0.5";
       sha256 = "0jbiawi14p8cgcxvr5b38kyjdmhq1lagr1dqnlpymlv7d7pcxljd";
       buildDepends = [
         ascii attempt attoparsec base-unicode-symbols blaze-builder
         blaze-textual convertible-text data-default failure tagged time
       ];
       testDepends = [
         ascii attempt attoparsec base-unicode-symbols blaze-builder
         blaze-textual convertible-text data-default failure QuickCheck
         tagged time
       ];
       homepage = "http://cielonegro.org/HTTPDateTime.html";
       description = "Parse and format HTTP/1.1 Date and Time strings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "time-io-access" = callPackage
    ({ mkDerivation, base-io-access, time }:
     mkDerivation {
       pname = "time-io-access";
       version = "0.1.0.0";
       sha256 = "0n05lw6zpcfr3lwy2qn7v0j3ym1la9x0mak8szaxc2nbkyc8drrb";
       buildDepends = [ base-io-access time ];
       description = "IO Access for time";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "time-lens" = callPackage
    ({ mkDerivation, data-lens-light, time }:
     mkDerivation {
       pname = "time-lens";
       version = "0.4.0.1";
       sha256 = "0916qfan93aq91icf87ifvskrq6s6s75rhkajvl8pxp74j28hlwz";
       buildDepends = [ data-lens-light time ];
       description = "Lens-based interface to Data.Time data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time-patterns" = callPackage
    ({ mkDerivation, intervals, lens, profunctors, thyme, vector-space
     }:
     mkDerivation {
       pname = "time-patterns";
       version = "0.1.2.0";
       sha256 = "1mjm40gwy3ddk844y7k8rjdb9zpw2rdz39d3n6mm8kbf36bh5fxq";
       buildDepends = [ intervals lens profunctors thyme vector-space ];
       homepage = "https://bitbucket.org/jfmueller/time-patterns";
       description = "Patterns for reccurring events";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time-recurrence" = callPackage
    ({ mkDerivation, data-ordlist, HUnit, mtl, test-framework
     , test-framework-hunit, time
     }:
     mkDerivation {
       pname = "time-recurrence";
       version = "0.9.2";
       sha256 = "1arqmkagmswimbh78qfz5bcilk9i14w29j4vf4i89d00vac3vrzm";
       buildDepends = [ data-ordlist mtl time ];
       testDepends = [
         data-ordlist HUnit mtl test-framework test-framework-hunit time
       ];
       homepage = "http://github.com/hellertime/time-recurrence";
       description = "Generate recurring dates";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "time-series" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "time-series";
       version = "0.1.0.0";
       sha256 = "1j6xrf45i4japgr35kzqcawlhdn13k3fbsjfmm2j3j92skwra095";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl ];
       description = "Time series analysis";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "time-units" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "time-units";
       version = "1.0.0";
       sha256 = "16g0i6r6vj9w4lbn12jqrhgbbjjca8wbzq6546dz08aks1yrk0g1";
       homepage = "http://github.com/acw/time-units";
       description = "A basic library for defining units of time as types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "time-w3c" = callPackage
    ({ mkDerivation, convertible, parsec, time }:
     mkDerivation {
       pname = "time-w3c";
       version = "0.1.0.1";
       sha256 = "12hnvhcv18kv1djqn5dqv8i1rrzsxlvnsjyjsy9m1ngmr9nvvfbg";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ convertible parsec time ];
       homepage = "http://cielonegro.org/W3CDateTime.html";
       description = "Parse, format and convert W3C Date and Time";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "timecalc" = callPackage
    ({ mkDerivation, haskeline, uu-parsinglib }:
     mkDerivation {
       pname = "timecalc";
       version = "0.1.1";
       sha256 = "05nzfydzn9nmjfmdnpf5jl238kdixbwwqkyrax89i4anmpxv1v9s";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ haskeline uu-parsinglib ];
       homepage = "https://github.com/chriseidhof/TimeCalc";
       license = stdenv.lib.licenses.mit;
     }) {};

  "timeit" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "timeit";
       version = "1.0.0.0";
       sha256 = "0dkjbp636dp882zlbwvvz76k4g7ga28wksd41w6mh0k8z45xjj5x";
       description = "Time a computation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timeout" = callPackage
    ({ mkDerivation, exceptions, mtl, QuickCheck, tasty
     , tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "timeout";
       version = "0.1.1";
       sha256 = "1jddkkmc3d8ysh8rnlpkzvlg67if8c71wqmjdsysddpwwm3wbgjn";
       buildDepends = [ exceptions mtl time ];
       testDepends = [
         exceptions mtl QuickCheck tasty tasty-quickcheck time
       ];
       homepage = "https://github.com/lambda-llama/timeout";
       description = "Generalized sleep and timeout functions";
       license = stdenv.lib.licenses.mit;
     }) {};

  "timeout-control" = callPackage
    ({ mkDerivation, lifted-base, monad-control, mtl, transformers-base
     }:
     mkDerivation {
       pname = "timeout-control";
       version = "0.1";
       sha256 = "1w2y39699zsxv43w53q8qbi1wfvg14kqvxqfp92pisvxnrwpcisp";
       buildDepends = [ lifted-base monad-control mtl transformers-base ];
       homepage = "http://github.com/alphaHeavy/timeout-control";
       description = "Updatable timeouts as a Monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timeout-with-results" = callPackage
    ({ mkDerivation, deepseq, mtl, parallel }:
     mkDerivation {
       pname = "timeout-with-results";
       version = "0.2";
       sha256 = "1y5mc1awahcp9xpmmwqc74cfn7g0zm1cyxi396xirll8nk335nd0";
       buildDepends = [ deepseq mtl parallel ];
       homepage = "https://github.com/ppetr/timeout-with-results";
       description = "Runs a time-limited computation alowing it to return intermediate results";
       license = "LGPL";
     }) {};

  "timeparsers" = callPackage
    ({ mkDerivation, attoparsec, convertible, mtl, time }:
     mkDerivation {
       pname = "timeparsers";
       version = "0.3.2";
       sha256 = "1dicp58f2amn5rgmnlfjpv4aj7ak6jrdlba2marglddvj4ycq1h7";
       buildDepends = [ attoparsec convertible mtl time ];
       description = "Attoparsec parsers for various Date/Time formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timeplot" = callPackage
    ({ mkDerivation, bytestring-lexing, cairo, Chart, Chart-cairo
     , colour, data-default, lens, regex-tdfa, strptime, time
     , transformers, vcs-revision
     }:
     mkDerivation {
       pname = "timeplot";
       version = "1.0.27";
       sha256 = "072bxa0pfxyia4xvj0w0h8v3yfk05bbq5j905sj6jf9apjr9h558";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         bytestring-lexing cairo Chart Chart-cairo colour data-default lens
         regex-tdfa strptime time transformers vcs-revision
       ];
       homepage = "http://haskell.org/haskellwiki/Timeplot";
       description = "A tool for visualizing time series from log files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timerep" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "timerep";
       version = "1.0.3";
       sha256 = "14lz8nzfy1j7snvifbwjkk1fjc8wy4jk67xk9n87r25v3cva3x0p";
       buildDepends = [ time ];
       description = "Parse and display time according to some RFCs (RFC3339, RFC2822)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timers" = callPackage
    ({ mkDerivation, lifted-base, monad-control, suspend
     , transformers-base
     }:
     mkDerivation {
       pname = "timers";
       version = "0.2.0.2";
       sha256 = "0ivlgpc45iss44pjmcxprwg98zh68fkpym0y19vx5ysacy6p04yh";
       buildDepends = [
         lifted-base monad-control suspend transformers-base
       ];
       description = "Simple package that implements timers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timers-updatable" = callPackage
    ({ mkDerivation, stm }:
     mkDerivation {
       pname = "timers-updatable";
       version = "0.2.0.2";
       sha256 = "1naw59xvbfhgz49qhvgzng4xjf4fzi59gl996pcp5l6s2sbpx4mw";
       buildDepends = [ stm ];
       homepage = "http://github.com/paolino/timers-updatable";
       description = "timers which are updatable in the remaining time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timestamp-subprocess-lines" = callPackage
    ({ mkDerivation, split, time, transformers }:
     mkDerivation {
       pname = "timestamp-subprocess-lines";
       version = "0.1.0.3";
       sha256 = "1vn947bbfh7awmz2rxzn2rya439ljjm83rggp6g9v178hxff5aim";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ split time transformers ];
       homepage = "https://github.com/Peaker/timestamp-subprocess-lines";
       description = "Run a command and timestamp its stdout/stderr lines";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timezone-olson" = callPackage
    ({ mkDerivation, binary, extensible-exceptions, time
     , timezone-series
     }:
     mkDerivation {
       pname = "timezone-olson";
       version = "0.1.6";
       sha256 = "0gg1fq85km5d48966a267q6z0wwl1dz88xq88v0l1jlkwd9jsb0z";
       buildDepends = [
         binary extensible-exceptions time timezone-series
       ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "A pure Haskell parser and renderer for binary Olson timezone files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timezone-series" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "timezone-series";
       version = "0.1.4";
       sha256 = "06p5v0dimhwmra100gwkhkz3ll492i2bvafw0qx2qzcxx4yxff40";
       buildDepends = [ time ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "Enhanced timezone handling for Data.Time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "timing-convenience" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "timing-convenience";
       version = "0.1";
       sha256 = "078p6gzzb7f9g68lm3q5806azhrs6li35ras9jnb9gs2r6i0w83j";
       buildDepends = [ time ];
       description = "Convenient functions for getting times";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tinyMesh" = callPackage
    ({ mkDerivation, attoparsec, hex, serialport }:
     mkDerivation {
       pname = "tinyMesh";
       version = "0.1.0.0";
       sha256 = "19jpwnk7hmi0mg46nqhyiipz085dkakqwgh17lv9ccvvcirpclm3";
       buildDepends = [ attoparsec hex serialport ];
       homepage = "http://github.com/mgajda/tinyMesh";
       description = "TinyMesh - communicating with auto-meshing sensor network";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "tinylog" = callPackage
    ({ mkDerivation, auto-update, double-conversion, fast-logger, text
     , transformers, unix-time
     }:
     mkDerivation {
       pname = "tinylog";
       version = "0.12.0";
       sha256 = "1khwwikdgy202b3gscnlw87da0s9mdxzmmflcqk9c9ybmn1mx2jn";
       buildDepends = [
         auto-update double-conversion fast-logger text transformers
         unix-time
       ];
       homepage = "https://github.com/twittner/tinylog/";
       description = "Simplistic logging using fast-logger";
       license = "unknown";
     }) {};

  "tkhs" = callPackage
    ({ mkDerivation, HUnit, mtl, parsec, test-framework
     , test-framework-hunit, utf8-string, vty
     }:
     mkDerivation {
       pname = "tkhs";
       version = "0.3.0";
       sha256 = "1svsdjb1ac5mb9zcx3wqmxdjfmf99ph94v616scya5f7lqkjcfgp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl parsec utf8-string vty ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "http://patch-tag.com/r/nonowarn/tkhs/snapshot/current/content/pretty/README";
       description = "Simple Presentation Utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tkyprof" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-conduit
     , blaze-builder, cmdargs, conduit, data-default, filepath, hamlet
     , http-types, mtl, resourcet, rosezipper, shakespeare-css
     , shakespeare-js, stm, text, time, transformers
     , unordered-containers, vector, wai, wai-extra, warp, web-routes
     , yesod, yesod-core, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "tkyprof";
       version = "0.2.2";
       sha256 = "0c3sdpjs22fqg5nkwig6smggf6snx1y5dg11y3s5cgm1ihy27h75";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec attoparsec-conduit blaze-builder cmdargs conduit
         data-default filepath hamlet http-types mtl resourcet rosezipper
         shakespeare-css shakespeare-js stm text time transformers
         unordered-containers vector wai wai-extra warp web-routes yesod
         yesod-core yesod-form yesod-static
       ];
       homepage = "https://github.com/maoe/tkyprof";
       description = "A web-based visualizer for GHC Profiling Reports";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tls" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, async, byteable, cereal
     , cipher-aes, cipher-des, cipher-rc4, cprng-aes
     , crypto-cipher-types, crypto-numbers, crypto-pubkey
     , crypto-pubkey-types, crypto-random, cryptohash
     , data-default-class, hourglass, mtl, network, QuickCheck, tasty
     , tasty-quickcheck, transformers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "tls";
       version = "1.2.13";
       sha256 = "1djjscmyn3wcnlzz1r0clz2nxa2y23rlyjk30xjsdp0m1sq0vdc3";
       buildDepends = [
         asn1-encoding asn1-types async byteable cereal cipher-aes
         cipher-des cipher-rc4 crypto-cipher-types crypto-numbers
         crypto-pubkey crypto-pubkey-types crypto-random cryptohash
         data-default-class mtl network transformers x509 x509-store
         x509-validation
       ];
       testDepends = [
         cereal cprng-aes crypto-pubkey crypto-random data-default-class
         hourglass mtl QuickCheck tasty tasty-quickcheck x509
         x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "TLS/SSL protocol native implementation (Server and Client)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tls-debug" = callPackage
    ({ mkDerivation, cprng-aes, crypto-pubkey, data-default-class
     , network, pem, time, tls, x509, x509-system, x509-validation
     }:
     mkDerivation {
       pname = "tls-debug";
       version = "0.3.4";
       sha256 = "08bxcl0lf07fx3xfajd99090glvgnpn5s4826g2hirr75b9a5b93";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cprng-aes crypto-pubkey data-default-class network pem time tls
         x509 x509-system x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "Set of programs for TLS testing and debugging";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tls-extra" = callPackage
    ({ mkDerivation, certificate, cipher-aes, cipher-rc4, crypto-pubkey
     , crypto-random, cryptohash, mtl, network, pem, time, tls, vector
     }:
     mkDerivation {
       pname = "tls-extra";
       version = "0.6.6";
       sha256 = "0k0sj3nq1lrvbmd582mjj8cxbxigivz1hm8hhij1ncl2pgnq5xyv";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         certificate cipher-aes cipher-rc4 crypto-pubkey crypto-random
         cryptohash mtl network pem time tls vector
       ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "TLS extra default values and helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tmpl" = callPackage
    ({ mkDerivation, template, text }:
     mkDerivation {
       pname = "tmpl";
       version = "0.0.0.1";
       sha256 = "101q4f51am8722b0b2d9hk84iqfg1z1shzrbikya63jpf3s6jrvg";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ template text ];
       homepage = "https://www.github.com/michelk/tmpl";
       description = "simple executable for templating";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "tn" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, optparse-applicative, text
     , time
     }:
     mkDerivation {
       pname = "tn";
       version = "0.2.0.0";
       sha256 = "0m402p4ik8z07dj08wm0jy6w82fzgmsrf1v4v2chg9qb505qigm4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson aeson-pretty optparse-applicative text time
       ];
       description = "A journaling program for Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tnet" = callPackage
    ({ mkDerivation, attoparsec, utf8-string }:
     mkDerivation {
       pname = "tnet";
       version = "0.0.1";
       sha256 = "1hxka8jfybq72isicvav81f4l9hjxhmzx4i4znkqbwzkarg2gsw9";
       buildDepends = [ attoparsec utf8-string ];
       description = "Library for encoding/decoding TNET strings for PGI";
       license = "unknown";
     }) {};

  "to-haskell" = callPackage
    ({ mkDerivation, haskell-src-exts, transformers }:
     mkDerivation {
       pname = "to-haskell";
       version = "0.3.0";
       sha256 = "0glf7m0r9gpab2pg1bq9qa37mrzpjwvqr3xsws6w53qqlcaw54qk";
       buildDepends = [ haskell-src-exts transformers ];
       homepage = "https://github.com/conal/to-haskell";
       description = "A type class and some utilities for generating Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "to-string-class" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "to-string-class";
       version = "0.1.2";
       sha256 = "0l2hj0cbc0dhd7m5bn6xqgzkdf2z4knirmv8c65hsjig9mpsvsxf";
       description = "Converting string-like types to Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "to-string-instances" = callPackage
    ({ mkDerivation, text, to-string-class }:
     mkDerivation {
       pname = "to-string-instances";
       version = "0.2";
       sha256 = "1h5aq3shagzgh1j8sbslvi2rrkqv1djm595d522ci8hpj6h8vxl9";
       buildDepends = [ text to-string-class ];
       description = "Instances for the ToString class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "todos" = callPackage
    ({ mkDerivation, ansi-terminal, base-unicode-symbols, data-hash
     , dates, dyre, filepath, Glob, mtl, parsec, regex-pcre, syb, time
     , utf8-string
     }:
     mkDerivation {
       pname = "todos";
       version = "0.5.3.2";
       sha256 = "1wgnxg9kndijm8faxsy48qznjzfcwqgjxgyff6x9c9h2fayvl719";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal base-unicode-symbols data-hash dates dyre filepath
         Glob mtl parsec regex-pcre syb time utf8-string
       ];
       homepage = "http://gitorious.org/todos";
       description = "Easy-to-use TODOs manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "toilet" = callPackage
    ({ mkDerivation, strict, time, transformers, utility-ht }:
     mkDerivation {
       pname = "toilet";
       version = "0.0.1";
       sha256 = "09j6h4rwb6i87223zhbzclns12iyrbdmv0kawd27any5r2hkz63x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ strict time transformers utility-ht ];
       homepage = "http://code.haskell.org/~thielema/toilet/";
       description = "Manage the toilet queue at the IMO";
       license = "GPL";
     }) {};

  "token-bucket" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "token-bucket";
       version = "0.1.0.1";
       sha256 = "1l3axqdkrjf28pxhrvdvlpf9wi79czsfvhi33w4v2wbj0g00j9ii";
       testDepends = [ time ];
       homepage = "https://github.com/hvr/token-bucket";
       description = "Rate limiter using lazy bucket algorithm";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "tokenize" = callPackage
    ({ mkDerivation, split, text }:
     mkDerivation {
       pname = "tokenize";
       version = "0.2.2";
       sha256 = "0pf4bbvd02jp8blfhyjhygsjgisqp61kw9n42zgnw08bnnqshln3";
       buildDepends = [ split text ];
       homepage = "https://bitbucket.org/gchrupala/lingo/overview";
       description = "Simple tokenizer for English text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "toktok" = callPackage
    ({ mkDerivation, criterion, filepath, gf, HUnit, iconv, progression
     , QuickCheck
     }:
     mkDerivation {
       pname = "toktok";
       version = "0.5";
       sha256 = "0y4s68gnp4xw0x22w3kdcr5wnkqygv6ajwkhb8apphja268np98v";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         criterion filepath gf HUnit iconv progression QuickCheck
       ];
       license = "GPL";
     }) {};

  "tokyocabinet-haskell" = callPackage
    ({ mkDerivation, mtl, tokyocabinet }:
     mkDerivation {
       pname = "tokyocabinet-haskell";
       version = "0.0.5";
       sha256 = "1v6s39q8a6cnc0ggpspz9i0xw6aih4ixn9bhn4hwf9kwgcspardg";
       buildDepends = [ mtl ];
       extraLibraries = [ tokyocabinet ];
       homepage = "http://tom-lpsd.github.com/tokyocabinet-haskell/";
       description = "Haskell binding of Tokyo Cabinet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tokyotyrant-haskell" = callPackage
    ({ mkDerivation, mtl, tokyocabinet, tokyotyrant }:
     mkDerivation {
       pname = "tokyotyrant-haskell";
       version = "1.0.1";
       sha256 = "1xz8n3hgkhrdabwc8hsqj3yf5x112palzz192f6pkl07vi8yz1ph";
       buildDepends = [ mtl ];
       extraLibraries = [ tokyocabinet tokyotyrant ];
       homepage = "http://www.polarmobile.com/";
       description = "FFI bindings to libtokyotyrant";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tomato-rubato-openal" = callPackage
    ({ mkDerivation, OpenAL, stm, vector }:
     mkDerivation {
       pname = "tomato-rubato-openal";
       version = "0.1.0.2";
       sha256 = "07c1pmiykdcwvljqzkmq4382ckdhdx853pahwksbdkxaiqvc8bjm";
       buildDepends = [ OpenAL stm vector ];
       homepage = "http://www.haskell.org/haskellwiki/tomato-rubato";
       description = "Easy to use library for audio programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "toml" = callPackage
    ({ mkDerivation, attoparsec, time }:
     mkDerivation {
       pname = "toml";
       version = "0.1.3";
       sha256 = "0wby1jas854niwyac95n39liqc874xcd1ahqpw6ksi2nhv2ld6f2";
       buildDepends = [ attoparsec time ];
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "toolshed" = callPackage
    ({ mkDerivation, Cabal, deepseq, filepath, QuickCheck, random }:
     mkDerivation {
       pname = "toolshed";
       version = "0.15.0.0";
       sha256 = "19cam8s8fcfsip2cr7gcr43plvxy2zhbczlygd6p5rcax4295ikd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal deepseq filepath QuickCheck random ];
       homepage = "http://functionalley.eu";
       description = "Utilities used by other packages";
       license = "GPL";
     }) {};

  "topkata" = callPackage
    ({ mkDerivation, ALUT, filepath, GLUT, OpenAL, OpenGL, random }:
     mkDerivation {
       pname = "topkata";
       version = "0.2.3";
       sha256 = "19lm9i65ywh3a8hsrqnihq8gkfxmz81zznyqlqgcf1914w826i3a";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ALUT filepath GLUT OpenAL OpenGL random ];
       homepage = "http://home.arcor.de/chr_bauer/topkata.html";
       description = "OpenGL Arcade Game";
       license = "GPL";
     }) {};

  "torch" = callPackage
    ({ mkDerivation, mtl, parallel, QuickCheck }:
     mkDerivation {
       pname = "torch";
       version = "0.1";
       sha256 = "1bai1vxd2vfxl9zn37dvrb05yh4knr5gw5syqpi6lxxd3lf0ngzc";
       buildDepends = [ mtl parallel QuickCheck ];
       homepage = "http://patch-tag.com/repo/torch/home";
       description = "Simple unit test library (or framework)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "torrent" = callPackage
    ({ mkDerivation, bencode, binary, filepath, network }:
     mkDerivation {
       pname = "torrent";
       version = "2007.10.27";
       sha256 = "0b0qkn46afzksvdnfy0sn809s927fjqy0gczlkzsc5vi6hlmb9iy";
       buildDepends = [ bencode binary filepath network ];
       description = "BitTorrent file parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tostring" = callPackage
    ({ mkDerivation, case-insensitive, text, utf8-string }:
     mkDerivation {
       pname = "tostring";
       version = "0.2.1";
       sha256 = "0lvfvjs1q6hndbchij3zn1xi6vb1v53r379jvyc2m92sqqcfnylw";
       buildDepends = [ case-insensitive text utf8-string ];
       description = "The ToString class";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "total-map" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "total-map";
       version = "0.0.4";
       sha256 = "1gjwviqhxm3zavmb9yd14rv66qhw9cf0r6n8mdg1lkmkqi1ycb98";
       homepage = "http://github.com/conal/total-map/";
       description = "Finitely represented /total/ maps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "toysolver" = callPackage
    ({ mkDerivation, data-interval, deepseq, exceptions, filepath
     , finite-field, hashable, heaps, HUnit, intern, loop, mtl, multiset
     , OptDir, parse-dimacs, parsec, prettyclass, primes, queue
     , QuickCheck, random, sign, stm, temporary, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, time, type-level-numbers, unbounded-delays
     , unordered-containers, vector-space
     }:
     mkDerivation {
       pname = "toysolver";
       version = "0.1.0";
       sha256 = "0rfaxgz0nax9jclh8jmhkanafwn3fjknsz7r7rpssrqzb4c1imwn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-interval deepseq exceptions filepath finite-field hashable
         heaps intern loop mtl multiset OptDir parse-dimacs parsec
         prettyclass primes queue random sign stm temporary time
         type-level-numbers unbounded-delays unordered-containers
         vector-space
       ];
       testDepends = [
         data-interval finite-field HUnit mtl OptDir prettyclass QuickCheck
         stm test-framework test-framework-hunit test-framework-quickcheck2
         test-framework-th vector-space
       ];
       description = "Assorted decision procedures for SAT, Max-SAT, PB, MIP, etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tpdb" = callPackage
    ({ mkDerivation, filepath, hashable, HaXml, hxt, mtl, parsec, time
     , wl-pprint-text
     }:
     mkDerivation {
       pname = "tpdb";
       version = "0.9.8";
       sha256 = "01fp42ahp85f6xlv69pwbpwlr5qzbbzr8rfmcvsndv2r6knrg6f0";
       buildDepends = [
         filepath hashable HaXml hxt mtl parsec time wl-pprint-text
       ];
       testDepends = [ hashable HaXml hxt parsec time wl-pprint-text ];
       homepage = "https://github.com/jwaldmann/haskell-tpdb";
       description = "Data Type for Rewriting Systems";
       license = "GPL";
     }) {};

  "trace" = callPackage
    ({ mkDerivation, either, kan-extensions, monad-control, mtl
     , profunctors, transformers, transformers-base
     }:
     mkDerivation {
       pname = "trace";
       version = "0.1.0.3";
       sha256 = "0aj83yx8y556kvax775bjbjscyj9fq0rk0rbqcki4ivxzv5x2wvh";
       buildDepends = [
         either kan-extensions monad-control mtl profunctors transformers
         transformers-base
       ];
       description = "A monad transformer for tracing provenience of errors";
       license = stdenv.lib.licenses.mit;
     }) {};

  "trace-call" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "trace-call";
       version = "0.1";
       sha256 = "1fiz1v9d4ck8na68cywha53vgbgdk6iqad1zv6pj3lq0pwvkx6aw";
       buildDepends = [ mtl ];
       description = "functions for logging the arguments and results of function calls";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "trace-function-call" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "trace-function-call";
       version = "0.1";
       sha256 = "0c5nsq9x59rmdkyvcrr1v94kjya48nhl9pnsad6xdmh77msf33xy";
       description = "Easy lightweight tracing of function arguments and results for ad hoc debugging";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "traced" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "traced";
       version = "2014.11.15";
       sha256 = "17yrlfn54il2xf8xnl1b06cwnmmyzkqxb0k7pqycrjmwsxzqkig2";
       buildDepends = [ mtl ];
       description = "Simple evaluation trace";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tracer" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "tracer";
       version = "0.1";
       sha256 = "1rgnls2zry29zrnvxv700bljdf7iqkkyzayr4lan0qvhv1bcs5jm";
       buildDepends = [ mtl transformers ];
       testDepends = [ mtl transformers ];
       homepage = "https://github.com/knz/hs-tracer";
       description = "Tracing utilities for Functor/Applicative/Monad types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tracker" = callPackage
    ({ mkDerivation, glib }:
     mkDerivation {
       pname = "tracker";
       version = "0.1";
       sha256 = "1jkcwkkzg3hkvffg6y2vz2c8y0iypij4ngryc4bca9q3g4zvxzs2";
       buildDepends = [ glib ];
       description = "Client library for Tracker metadata database, indexer and search tool";
       license = "LGPL";
     }) {};

  "trajectory" = callPackage
    ({ mkDerivation, aeson, attoparsec, cmdargs, http-enumerator
     , http-types, regexpr, text, unordered-containers, uri
     }:
     mkDerivation {
       pname = "trajectory";
       version = "0.1.0.0";
       sha256 = "1n7vl903p5yg2xcyfxbxj45yd7ayd7p63fr9qfahlb0pgfl32s7h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec cmdargs http-enumerator http-types regexpr text
         unordered-containers uri
       ];
       homepage = "https://github.com/mike-burns/trajectory";
       description = "Tools and a library for working with Trajectory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transactional-events" = callPackage
    ({ mkDerivation, ListZipper, MonadPrompt, stm }:
     mkDerivation {
       pname = "transactional-events";
       version = "0.1.0.0";
       sha256 = "0jb3cf4bn007x3by70piwcvcb216kvav4xzrqr1k5v483jaj2zml";
       buildDepends = [ ListZipper MonadPrompt stm ];
       description = "Transactional events, based on Concurrent ML semantics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transf" = callPackage
    ({ mkDerivation, async, data-default, filepath, hashable, hint
     , monadplus, mtl, semigroups
     }:
     mkDerivation {
       pname = "transf";
       version = "0.13.1";
       sha256 = "1p9nrs7a96n53cmmrv107kvwjm27gj45m9b4vj23dsvk5lsx7wil";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         async data-default filepath hashable hint monadplus mtl semigroups
       ];
       description = "Text transformer and interpreter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformations" = callPackage
    ({ mkDerivation, mtl, multirec, parsec, regular, rewriting, zipper
     }:
     mkDerivation {
       pname = "transformations";
       version = "0.1.1.0";
       sha256 = "19ba24n9ica53a77x9h32kc8vqm0y41bwh8ncn1n3kd7k0s5q49v";
       buildDepends = [ mtl multirec parsec regular rewriting zipper ];
       description = "Generic representation of tree transformations";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "transformers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "transformers";
       version = "0.4.2.0";
       sha256 = "0a364zfcm17mhpy0c4ms2j88sys4yvgd6071qsgk93la2wjm8mkr";
       description = "Concrete functor and monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-abort" = callPackage
    ({ mkDerivation, data-default-class, monad-control, pointed
     , semigroupoids, transformers, transformers-base
     }:
     mkDerivation {
       pname = "transformers-abort";
       version = "0.5";
       sha256 = "1l1aid4y77rnjgca41iaflimkd7h3028kgg2yw6pszv11g12cavc";
       buildDepends = [
         data-default-class monad-control pointed semigroupoids transformers
         transformers-base
       ];
       homepage = "https://github.com/mvv/transformers-abort";
       description = "A better error monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-base" = callPackage
    ({ mkDerivation, stm, transformers }:
     mkDerivation {
       pname = "transformers-base";
       version = "0.4.3";
       sha256 = "0bklr7piiipnh99jnqx262pdyb9hzk852d6hzk5sqppvz5ndcf4y";
       buildDepends = [ stm transformers ];
       homepage = "https://github.com/mvv/transformers-base";
       description = "Lift computations from the bottom of a transformer stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-compat" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "transformers-compat";
       version = "0.3.3.4";
       sha256 = "1hab41ggyaxr4xn2szv8y9fg9np8zi8ifhimr33fspid1jz14xr5";
       buildDepends = [ transformers ];
       homepage = "http://github.com/ekmett/transformers-compat/";
       description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-compose" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "transformers-compose";
       version = "0.1";
       sha256 = "0kvhl5s1js6i639hc6c4ib9jmgy4l1503ifs30a9ajrk97nagp6d";
       buildDepends = [ transformers ];
       homepage = "http://github.com/aristidb/transformers-compose";
       description = "Arrow-like / category-like composition for transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-convert" = callPackage
    ({ mkDerivation, data-easy, either, errors, haskell-src-exts, hlint
     , hspec, HUnit, QuickCheck, text, transformers
     }:
     mkDerivation {
       pname = "transformers-convert";
       version = "0.2.0.0";
       sha256 = "0nx99jygbg5jlvb1sbgb9kz84af9861nkjdcshvfhlq8w069z737";
       buildDepends = [ data-easy either transformers ];
       testDepends = [
         data-easy either errors haskell-src-exts hlint hspec HUnit
         QuickCheck text transformers
       ];
       homepage = "https://github.com/jcristovao/transformers-convert";
       description = "Sensible conversions between some of the monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-free" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "transformers-free";
       version = "1.0.1";
       sha256 = "0fbzkr7ifvqng8wqi3332vwvmx36f8z167angyskfdd0a5rik2z0";
       buildDepends = [ transformers ];
       description = "Free monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-runnable" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "transformers-runnable";
       version = "0.1.0.0";
       sha256 = "0m1vvdfi661mmxm5rghsfnwcjd2r0r7ryc3jk0nwlzs0kaw5xi1s";
       buildDepends = [ transformers ];
       homepage = "https://github.com/JanBessai/transformers-runnable";
       description = "A unified interface for the run operation of monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "transformers-supply" = callPackage
    ({ mkDerivation, mtl, transformers }:
     mkDerivation {
       pname = "transformers-supply";
       version = "0.1.0";
       sha256 = "09f9n3cxi3sjmd8yscvcyahvdsqa5db5bckj9ryaflswsdm0ximq";
       buildDepends = [ mtl transformers ];
       description = "Supply applicative, monad, applicative transformer and monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "translatable-intset" = callPackage
    ({ mkDerivation, fingertree }:
     mkDerivation {
       pname = "translatable-intset";
       version = "0.1";
       sha256 = "0pv81l5q46a4f2dxps7fdzvmnphydgw7xz3xsi5cjad2kw0dsmkm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ fingertree ];
       description = "Integer sets with a constant time translate operation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "translate" = callPackage
    ({ mkDerivation, curl, json, network, utf8-string }:
     mkDerivation {
       pname = "translate";
       version = "2010.1.24";
       sha256 = "0vcqw0x7c9nb8yigvk35x72rds50kvma02rwkb757y1sk80q0mzf";
       buildDepends = [ curl json network utf8-string ];
       homepage = "http://github.com/nfjinjing/translate";
       description = "Haskell binding to Google's AJAX Language API for Translation and Detection";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "traverse-with-class" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "traverse-with-class";
       version = "0.2.0.3";
       sha256 = "0snms19w3n9ni1wmf4ikwpp298nc6qk6phrjxi5g023ihqqdvr6g";
       buildDepends = [ transformers ];
       description = "Generic applicative traversals";
       license = stdenv.lib.licenses.mit;
     }) {};

  "traypoweroff" = callPackage
    ({ mkDerivation, gtk }:
     mkDerivation {
       pname = "traypoweroff";
       version = "1.0.0";
       sha256 = "0g7x1jj3x58jgbg6zcakyakc5jskcas03jakj7v5pfwdmk8kbc4m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gtk ];
       homepage = "http://projects.haskell.org/traypoweroff";
       description = "Tray Icon application to PowerOff / Reboot computer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tree-monad" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tree-monad";
       version = "0.3";
       sha256 = "1zs1qgp908d0y7dm9mhzwl529z2aw24zr8balsvn1lzl1aynzslm";
       homepage = "http://sebfisch.github.com/tree-monad";
       description = "Non-Determinism Monad for Tree Search";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tree-view" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "tree-view";
       version = "0.4";
       sha256 = "0mzywp6nipc6zs98dy4ny2s3r9d745lqpjazfnj5y4hx8swyckgn";
       buildDepends = [ mtl ];
       description = "Render trees as foldable HTML and Unicode art";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "treemap-html" = callPackage
    ({ mkDerivation, Cabal, filepath, html, parsec, regex-posix }:
     mkDerivation {
       pname = "treemap-html";
       version = "0.1";
       sha256 = "0jqjwg3z528z4wchpmi208lazd1nazqdai327lwxvznzjcq1m385";
       buildDepends = [ Cabal filepath html parsec regex-posix ];
       homepage = "http://rampa.sk/static/treemap-html.html";
       description = "Generates HTML for Data.Tree as TreeMap";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "treemap-html-tools" = callPackage
    ({ mkDerivation, Cabal, filepath, parsec, regex-posix, split
     , treemap-html, xml
     }:
     mkDerivation {
       pname = "treemap-html-tools";
       version = "0.2";
       sha256 = "0a7im8v118plxpi9dcgr1jhdlgj4f2a015dngyzfxqi7ij3cy6bf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath parsec regex-posix split treemap-html xml
       ];
       homepage = "http://rampa.sk/static/treemap-html.html";
       description = "Treemap related commands for producing foldable TreeMap HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "treeviz" = callPackage
    ({ mkDerivation, mtl, QuickCheck, random }:
     mkDerivation {
       pname = "treeviz";
       version = "1.0.0";
       sha256 = "0nz93fn5k5fc9748h60a12j9gsl4ldm11a8y431mrm45jf8hnzq2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl QuickCheck random ];
       testDepends = [ mtl QuickCheck random ];
       homepage = "http://www.haskell.org/haskellwiki/Treeviz";
       description = "Visualization of computation decomposition trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tremulous-query" = callPackage
    ({ mkDerivation, attoparsec, deepseq, mtl, network }:
     mkDerivation {
       pname = "tremulous-query";
       version = "1.0.7";
       sha256 = "0vf6fh0p9ng2f0qqac8bqp259hfmv0bg146idm2pv668l1pkr7bx";
       buildDepends = [ attoparsec deepseq mtl network ];
       description = "Library for polling Tremulous servers";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "trhsx" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "trhsx";
       version = "0.2.2";
       sha256 = "11jx2jf6vi7368ys39mz0ziy6xknbi0z87926n2y16am6k2h25k3";
       description = "Deprecated";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "triangulation" = callPackage
    ({ mkDerivation, collada-types, tuple, vector, vector-algorithms }:
     mkDerivation {
       pname = "triangulation";
       version = "0.3";
       sha256 = "0lx9y54n6p3xf3z6dzw0b2p87hwb1rrcgzilnl51fwvcs1m0fgdf";
       buildDepends = [ collada-types tuple vector vector-algorithms ];
       homepage = "http://www.dinkla.net/";
       description = "triangulation of polygons";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "trifecta" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, blaze-builder
     , blaze-html, blaze-markup, charset, comonad, deepseq, doctest
     , filepath, fingertree, hashable, lens, mtl, parsers, QuickCheck
     , reducers, semigroups, transformers, unordered-containers
     , utf8-string
     }:
     mkDerivation {
       pname = "trifecta";
       version = "1.5.1";
       sha256 = "1fayr6sd9m84rqpcygacafn9vr9zva7rmkpvyzz0bf1p1z7i6b2n";
       buildDepends = [
         ansi-terminal ansi-wl-pprint blaze-builder blaze-html blaze-markup
         charset comonad deepseq fingertree hashable lens mtl parsers
         reducers semigroups transformers unordered-containers utf8-string
       ];
       testDepends = [ doctest filepath parsers QuickCheck ];
       homepage = "http://github.com/ekmett/trifecta/";
       description = "A modern parser combinator library with convenient diagnostics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "trimpolya" = callPackage
    ({ mkDerivation, bio, simpleargs }:
     mkDerivation {
       pname = "trimpolya";
       version = "0";
       sha256 = "1y559q5p0pzlr468224c6m5859z72gg0sk2vrgl82ilwkjn08i9i";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio simpleargs ];
       description = "Search for, annotate and trim poly-A tail";
       license = "GPL";
     }) {};

  "trivia" = callPackage
    ({ mkDerivation, comonad, distributive }:
     mkDerivation {
       pname = "trivia";
       version = "0.0";
       sha256 = "03xmzjqwk6492jmmbq6066ymsxb0wk0pmyf0c5f018nfps0g3i78";
       buildDepends = [ comonad distributive ];
       homepage = "https://github.com/fumieval/trivia";
       description = "The trivial monad and comonad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "trivial-constraint" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "trivial-constraint";
       version = "0.3.0.0";
       sha256 = "0fl72wai6yj5wflhx3cbvi3ixcfrc73217skncyb9b1ai7vg3x3y";
       homepage = "https://github.com/leftaroundabout/trivial-constraint";
       description = "Constraints that any type, resp. no type fulfills";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "tropical" = callPackage
    ({ mkDerivation, semiring-simple }:
     mkDerivation {
       pname = "tropical";
       version = "0.0.0.2";
       sha256 = "1in9jjfzbqws4bk83082yra2gcb5b095948qyji63ckbz3igp0k2";
       buildDepends = [ semiring-simple ];
       description = "A library for tropical mathematics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "true-name" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "true-name";
       version = "0.0.0.0";
       sha256 = "1c3lfsc9yg88k08pn57nvddi2aqqpsgx5ksa2x4h1brksiybx1ah";
       testDepends = [ time ];
       homepage = "https://github.com/liyang/true-name";
       description = "Template Haskell hack to violate another module's abstractions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "truelevel" = callPackage
    ({ mkDerivation, parseargs, WAVE }:
     mkDerivation {
       pname = "truelevel";
       version = "0.1.3.1";
       sha256 = "0q5civsnjwwhdkb16h8jak7prkfwvhds1p3xzzhwqk2p8dxf6jij";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ parseargs WAVE ];
       homepage = "http://github.com/BartMassey/truelevel";
       description = "Audio file compressor-limiter";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tsession" = callPackage
    ({ mkDerivation, mtl, time, transformers }:
     mkDerivation {
       pname = "tsession";
       version = "0.1";
       sha256 = "1rj11vyd272h66cjx8pq6smcpi65n3vlfv4g7indcnpcz4w5l6rk";
       editedCabalFile = "0msyf0rkd6aj8y632ippnrz554r6r5l7j45dnlnqlf1kls29kn5g";
       buildDepends = [ mtl time transformers ];
       description = "A Transaction Framework for Web Applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tsession-happstack" = callPackage
    ({ mkDerivation, happstack-server, transformers, tsession }:
     mkDerivation {
       pname = "tsession-happstack";
       version = "0.1";
       sha256 = "1sv62iqrlvzx95g6nd307y8zknp2h3ir06zc6qw4y221wz21rfyz";
       buildDepends = [ happstack-server transformers tsession ];
       description = "A Transaction Framework for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tskiplist" = callPackage
    ({ mkDerivation, random, stm }:
     mkDerivation {
       pname = "tskiplist";
       version = "1.0.0";
       sha256 = "0bayh8fl3wb98mifdiss8crb17jfqxxj0f1va5c2h4l7qwizh85a";
       buildDepends = [ random stm ];
       homepage = "https://github.com/thaldyron/tskiplist";
       description = "A Skip List Implementation in Software Transactional Memory (STM)";
       license = "LGPL";
     }) {};

  "tsp-viz" = callPackage
    ({ mkDerivation, gloss, stm, vector }:
     mkDerivation {
       pname = "tsp-viz";
       version = "0.1.0.0";
       sha256 = "0wrnpmvds2amm85a5j1c1nqffy6vj4y6xq21w5ia1051wrxzrbjk";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ gloss stm vector ];
       homepage = "https://github.com/davnils/tsp-viz";
       description = "Real time TSP tour visualization";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tsparse" = callPackage
    ({ mkDerivation, Decimal, parsec, random, split, time }:
     mkDerivation {
       pname = "tsparse";
       version = "0.4.0.0";
       sha256 = "0s5vlpvi1w6q2zxv586plvhs9p6rlc7653x7jzygfir70754n6si";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Decimal parsec random split time ];
       homepage = "http://www.github.com/massysett/tsparse";
       description = "Parses U.S. federal Thrift Savings Plan PDF quarterly statements";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tst" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tst";
       version = "0.1.1";
       sha256 = "1vr1l4pm02pwr8238qd9j0drkildns8m79qyq0lbzll30gc12vhx";
       homepage = "https://github.com/bitonic/language-spelling";
       description = "BK-tree implementation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "tuntap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tuntap";
       version = "0.0.2";
       sha256 = "0q6g2wcjddb9r1l9fxpn2qcssw5gyfwsam15rc3q6xjqbwz7fm41";
       description = "Interface to TUN/TAP drivers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tup-functor" = callPackage
    ({ mkDerivation, cpphs, haskell-src-exts, parsec2 }:
     mkDerivation {
       pname = "tup-functor";
       version = "0.3.0.0";
       sha256 = "1kj68g5g9m46dpncbrisl19gah8pzac33iyr09ym1pqk3x6jh9ix";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cpphs haskell-src-exts parsec2 ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Homogeneous tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tuple" = callPackage
    ({ mkDerivation, OneTuple }:
     mkDerivation {
       pname = "tuple";
       version = "0.3.0.2";
       sha256 = "094nx29aahyrvbcn7yca9zs2a5rxz1is7510w1q43rpvza7hdjrg";
       buildDepends = [ OneTuple ];
       description = "Various functions on tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tuple-gen" = callPackage
    ({ mkDerivation, combinat }:
     mkDerivation {
       pname = "tuple-gen";
       version = "2.0";
       sha256 = "0bgwsxq8wrh76hhbwadv0rag4c7dx3644zrh2aflnsych0rncvd7";
       buildDepends = [ combinat ];
       description = "Enum instances for tuples where the digits increase with the same speed";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tuple-hlist" = callPackage
    ({ mkDerivation, HList, OneTuple }:
     mkDerivation {
       pname = "tuple-hlist";
       version = "0.2.0.0";
       sha256 = "0z1mmm6gnhv3c4hn60v1yasvr9j5rakvyma4c535s51hk5s7g7bl";
       buildDepends = [ HList OneTuple ];
       homepage = "http://github.com/dudebout/tuple-hlist";
       description = "Functions to convert between tuples and HLists";
       license = "unknown";
     }) {};

  "tuple-lenses" = callPackage
    ({ mkDerivation, lens }:
     mkDerivation {
       pname = "tuple-lenses";
       version = "0.1.0.2";
       sha256 = "1qq1sla89410wr9pnkmj100izkraad1gr163815p3dvh7qi04c7w";
       buildDepends = [ lens ];
       homepage = "http://github.com/jfischoff/tuple-lenses";
       description = "Stock FieldN combos and generators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tuple-morph" = callPackage
    ({ mkDerivation, HList }:
     mkDerivation {
       pname = "tuple-morph";
       version = "0.1.0.0";
       sha256 = "1zi6nh1z7z2jz5h0pvdm2czfy1rx7ixnnvp9akcpas19npgyfk94";
       editedCabalFile = "1npahk37am7x6n4lfdk6y1i1690drg39j63gzb2jx5ivzxhlcp43";
       buildDepends = [ HList ];
       description = "Morph between tuples, or convert them from and to HLists";
       license = stdenv.lib.licenses.mit;
     }) {};

  "tuple-th" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tuple-th";
       version = "0.2.4";
       sha256 = "1bhdg1yld8rbkc46fg04l32sk0pxwmbpvp9fmdp2b3snrg8hkvkn";
       description = "Generate (non-recursive) utility functions for tuples of statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tupleinstances" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tupleinstances";
       version = "0.0.1";
       sha256 = "0kcmcg1fxsslpzpg766r9hr8aysg0s5fyang2xc0aa77zi71qyi3";
       homepage = "http://github.com/diegoeche/tupleinstances";
       description = "Functor, Applicative and Monad for n-ary tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tuples-homogenous-h98" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "tuples-homogenous-h98";
       version = "0.1.1.0";
       sha256 = "0fhz246wh6x0s0sjkmd3qcylsx2gfrmgmvgb7js2zjg91y7zqnh2";
       homepage = "https://github.com/ppetr/tuples-homogenous-h98";
       description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "turing-music" = callPackage
    ({ mkDerivation, ALUT }:
     mkDerivation {
       pname = "turing-music";
       version = "0.1.1";
       sha256 = "163fggvjixs6m2rwc3gd3s9703r2mnz3bknii1aagwzvw5kczky3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ALUT ];
       description = "Plays music generated by Turing machines with 5 states and 2 symbols";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "turni" = callPackage
    ({ mkDerivation, MonadRandom, random }:
     mkDerivation {
       pname = "turni";
       version = "2011.1.15";
       sha256 = "0152xhvm0x1ncjdib0bckhywgpzm4f1qj1ghs0jn84cz562ddwnl";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ MonadRandom random ];
       homepage = "http://wiki.github.com/paolino/turni";
       description = "shifts scheduling tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tweak" = callPackage
    ({ mkDerivation, lens, stm, transformers }:
     mkDerivation {
       pname = "tweak";
       version = "0.1.0.1";
       sha256 = "1l5y94gac9s55wgn6w610pqb63c8l20vmlpsnmgbzw1f9vbnzgiw";
       buildDepends = [ lens stm transformers ];
       homepage = "http://github.com/jfischoff/tweak";
       description = "A library for incremental computing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twentefp" = callPackage
    ({ mkDerivation, gloss, parsec, time }:
     mkDerivation {
       pname = "twentefp";
       version = "0.4.2";
       sha256 = "1kmf907i6g6lfhw8g403b6701srrd298n4r53dvcqzy72c5qaixl";
       buildDepends = [ gloss parsec time ];
       description = "Lab Assignments Environment at Univeriteit Twente";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twentefp-eventloop-graphics" = callPackage
    ({ mkDerivation, network, text, twentefp-number
     , twentefp-websockets
     }:
     mkDerivation {
       pname = "twentefp-eventloop-graphics";
       version = "0.1.0.4";
       sha256 = "086vx0849c7kmsz5pa4jwzp24cwaf4482bq37dr7jrqx22hvk4lm";
       buildDepends = [
         network text twentefp-number twentefp-websockets
       ];
       description = "Used as Lab Assignments Environment at Univeriteit Twente";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twentefp-graphs" = callPackage
    ({ mkDerivation, twentefp-eventloop-graphics }:
     mkDerivation {
       pname = "twentefp-graphs";
       version = "0.1.0.3";
       sha256 = "1ran49yvbylf14hbr3ffmbxpkjwva785hgyvnmwzp2v2hwz1343m";
       buildDepends = [ twentefp-eventloop-graphics ];
       description = "Lab Assignments Environment at Univeriteit Twente";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twentefp-number" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "twentefp-number";
       version = "0.1.0.2";
       sha256 = "1kh0a6h4syx98ygwidw6cc24ci91v1blshpfcczx96z850x1h6xf";
       buildDepends = [ parsec ];
       description = "Lab Assignments Environment at Univeriteit Twente";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twentefp-rosetree" = callPackage
    ({ mkDerivation, twentefp-eventloop-graphics, twentefp-number }:
     mkDerivation {
       pname = "twentefp-rosetree";
       version = "0.1.0.1";
       sha256 = "1dy4hmwciaglz2kfdk9fxf6hik7pgr4a4xj9y9l7s7p4k35r5bd7";
       buildDepends = [ twentefp-eventloop-graphics twentefp-number ];
       description = "RoseTree type and show functions for lab assignment of University of Twente";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twentefp-trees" = callPackage
    ({ mkDerivation, twentefp-eventloop-graphics }:
     mkDerivation {
       pname = "twentefp-trees";
       version = "0.1.0.2";
       sha256 = "0mmj96xbqjzm4cylk39pib9jfwh6m350q1cwf6ij8pl0swab3b0g";
       buildDepends = [ twentefp-eventloop-graphics ];
       description = "Tree type and show functions for lab assignment of University of Twente. Contains RoseTree and ParseTree";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twentefp-websockets" = callPackage
    ({ mkDerivation, attoparsec, base64-bytestring, binary
     , blaze-builder, case-insensitive, concurrent-extra, entropy
     , io-streams, mtl, network, random, SHA, text
     }:
     mkDerivation {
       pname = "twentefp-websockets";
       version = "0.1.0.1";
       sha256 = "08227phlyvvg01n7zqyivx2f3dpfbipxaajqz4fc07zhkpmxy8h4";
       buildDepends = [
         attoparsec base64-bytestring binary blaze-builder case-insensitive
         concurrent-extra entropy io-streams mtl network random SHA text
       ];
       description = "A fork of the popular websockets package. It is used for the practical assignments of the University of Twente. A sensible and clean way to write WebSocket-capable servers in Haskell.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twhs" = callPackage
    ({ mkDerivation, ansi-terminal, authenticate-oauth
     , case-insensitive, conduit, data-default, hspec, http-conduit
     , lens, monad-control, monad-logger, network, QuickCheck, resourcet
     , text, transformers, transformers-base, twitter-conduit
     }:
     mkDerivation {
       pname = "twhs";
       version = "0.1.0.3";
       sha256 = "0d06bv26lvr4va431h2146v88bqcxvfr0wp36f7l4a6xqgghf2l1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         ansi-terminal authenticate-oauth case-insensitive conduit
         data-default http-conduit lens monad-control monad-logger network
         resourcet text transformers transformers-base twitter-conduit
       ];
       testDepends = [ hspec QuickCheck ];
       homepage = "https://github.com/suzuki-shin/twhs";
       description = "CLI twitter client";
       license = stdenv.lib.licenses.mit;
     }) {};

  "twidge" = callPackage
    ({ mkDerivation, aeson, binary, ConfigFile, curl, hoauth, HSH
     , hslogger, MissingH, mtl, network, parsec, regex-posix, text, time
     , utf8-string
     }:
     mkDerivation {
       pname = "twidge";
       version = "1.1.2";
       sha256 = "162n5w4z3a1qyasd39q7751z872v31njzyhrnjfjxhsni3kif8b1";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson binary ConfigFile curl hoauth HSH hslogger MissingH mtl
         network parsec regex-posix text time utf8-string
       ];
       homepage = "http://software.complete.org/twidge";
       description = "Unix Command-Line Twitter and Identica Client";
       license = "GPL";
     }) {};

  "twilight-stm" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "twilight-stm";
       version = "1.2";
       sha256 = "1hp9mkfasjyh1ji6gfmdpmx3nm9g22ag3y47nva7i30bjrs65cdr";
       buildDepends = [ mtl ];
       homepage = "http://proglang.informatik.uni-freiburg.de/projects/twilight/";
       description = "STM library with safe irrevocable I/O and inconsistency repair";
       license = "LGPL";
     }) {};

  "twill" = callPackage
    ({ mkDerivation, aeson, attoparsec, base16-bytestring
     , base64-bytestring, cryptohash, data-default, datetime, errors
     , QuickCheck, text, time
     }:
     mkDerivation {
       pname = "twill";
       version = "0.1.0.3";
       sha256 = "0wkcxjfpd5fz72hwg8spxjqk8b6axm51zppld00q9f3dzagsbwx6";
       buildDepends = [
         aeson attoparsec base16-bytestring base64-bytestring cryptohash
         data-default datetime errors QuickCheck text time
       ];
       description = "Twilio API interaction";
       license = stdenv.lib.licenses.mit;
     }) {};

  "twiml" = callPackage
    ({ mkDerivation, Cabal, lens, network, xml }:
     mkDerivation {
       pname = "twiml";
       version = "0.1.0.0";
       sha256 = "0ipc8i1hbsjdz6rp7ks25w0zbrcv4byp0791aw9rrdpyqzdir0zx";
       buildDepends = [ network xml ];
       testDepends = [ Cabal lens ];
       homepage = "https://github.com/markandrus/twiml-haskell";
       description = "TwiML library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twine" = callPackage
    ({ mkDerivation, convertible, filepath, mtl, parsec }:
     mkDerivation {
       pname = "twine";
       version = "0.1.2";
       sha256 = "0q4dsh6x1w1indsx070rqayvjlzdk2nznvh0cjxd5f3jn5ggwwb1";
       buildDepends = [ convertible filepath mtl parsec ];
       homepage = "http://twine.james-sanders.com";
       description = "very simple template language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twisty" = callPackage
    ({ mkDerivation, data-memocombinators, MonadRandom, parallel }:
     mkDerivation {
       pname = "twisty";
       version = "0.1.0";
       sha256 = "02w8763m6gm9wj035s62ydg63iv7wa2cbjq2g1jd283vf2djsjyj";
       buildDepends = [ data-memocombinators MonadRandom parallel ];
       description = "Simulator of twisty puzzles à la Rubik's Cube";
       license = "unknown";
     }) {};

  "twitch" = callPackage
    ({ mkDerivation, data-default, fsnotify, Glob, mtl
     , optparse-applicative, stm-chans, system-fileio, system-filepath
     , text, time
     }:
     mkDerivation {
       pname = "twitch";
       version = "0.1.4.0";
       sha256 = "1q9y28scch2mz3sz59gz5qr3avfc8adig8b3gwp5y1hi0hh67fn0";
       buildDepends = [
         data-default fsnotify Glob mtl optparse-applicative stm-chans
         system-fileio system-filepath text time
       ];
       homepage = "https://github.com/jfischoff/twitch";
       description = "A high level file watcher DSL";
       license = stdenv.lib.licenses.mit;
     }) {};

  "twitter" = callPackage
    ({ mkDerivation, curl, filepath, json, mtl, readline, time, xml }:
     mkDerivation {
       pname = "twitter";
       version = "0.1.1";
       sha256 = "12q5w9wfnrzh2gjmq66qhwy6i6wixfb805jg2cbphxrjjnc2v9gx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ curl filepath json mtl readline time xml ];
       description = "A Haskell-based CLI Twitter client";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twitter-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, authenticate-oauth
     , case-insensitive, conduit, conduit-extra, data-default, doctest
     , filepath, hlint, hspec, http-client, http-conduit, http-types
     , lens, lens-aeson, monad-control, network-uri, resourcet, text
     , time, transformers, transformers-base, twitter-types
     , twitter-types-lens
     }:
     mkDerivation {
       pname = "twitter-conduit";
       version = "0.1.0";
       sha256 = "1cymgp3wlswxn5qfdr442cqq2ak48b5w1zcsr67n2g5p1izadwji";
       editedCabalFile = "06z8dwvc17xhzpvb7cm0j6v63r5f3xirj36rr86bds3rw1zbnd0z";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec authenticate-oauth conduit conduit-extra
         data-default http-client http-conduit http-types lens lens-aeson
         network-uri resourcet text time transformers twitter-types
         twitter-types-lens
       ];
       testDepends = [
         aeson attoparsec authenticate-oauth case-insensitive conduit
         conduit-extra data-default doctest filepath hlint hspec http-client
         http-conduit http-types lens lens-aeson monad-control network-uri
         resourcet text time transformers transformers-base twitter-types
         twitter-types-lens
       ];
       homepage = "https://github.com/himura/twitter-conduit";
       description = "Twitter API package with conduit interface and Streaming API support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twitter-enumerator" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-enumerator
     , authenticate, enumerator, http-enumerator, http-types, text
     , tls-extra, transformers
     }:
     mkDerivation {
       pname = "twitter-enumerator";
       version = "0.0.3";
       sha256 = "1c8y7kq0x7lnq7x7ah8c78q6cy2963nz6y83klzh2jgmr8rma6q4";
       buildDepends = [
         aeson attoparsec attoparsec-enumerator authenticate enumerator
         http-enumerator http-types text tls-extra transformers
       ];
       homepage = "https://github.com/himura/twitter-enumerator";
       description = "Twitter API package with enumerator interface and Streaming API support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twitter-feed" = callPackage
    ({ mkDerivation, aeson, authenticate-oauth, http-conduit, HUnit
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "twitter-feed";
       version = "0.1.1.3";
       sha256 = "1c50rirj3wymbh1850c7dm79jyglcn34116vljh5f54f8sv17y96";
       buildDepends = [ aeson authenticate-oauth http-conduit ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "https://github.com/stackbuilders/twitter-feed";
       description = "Client for fetching Twitter timeline via Oauth";
       license = stdenv.lib.licenses.mit;
     }) {};

  "twitter-types" = callPackage
    ({ mkDerivation, aeson, attoparsec, filepath, HUnit, test-framework
     , test-framework-hunit, test-framework-th-prime, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "twitter-types";
       version = "0.6.0";
       sha256 = "0yvs57f3m0nq11qpxziazp9r95g1v231d2djmch9c5d8g22cjvdn";
       buildDepends = [ aeson text unordered-containers ];
       testDepends = [
         aeson attoparsec filepath HUnit test-framework test-framework-hunit
         test-framework-th-prime text unordered-containers
       ];
       homepage = "https://github.com/himura/twitter-types";
       description = "Twitter JSON parser and types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "twitter-types-lens" = callPackage
    ({ mkDerivation, lens, text, twitter-types }:
     mkDerivation {
       pname = "twitter-types-lens";
       version = "0.6.0";
       sha256 = "0n2z7v2mcvj2czkszkp87sf7cv4zj82yccygs9ah5ax28dw823v3";
       buildDepends = [ lens text twitter-types ];
       homepage = "https://github.com/himura/twitter-types-lens";
       description = "Twitter JSON types (lens powered)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "tx" = callPackage
    ({ mkDerivation, cereal, safecopy, stm, transformers }:
     mkDerivation {
       pname = "tx";
       version = "0.1.0.0";
       sha256 = "18fpkpri2g93vxw3qdk94nc4zlh5kqgfbvdmzkwqjadkck39alsy";
       buildDepends = [ cereal safecopy stm transformers ];
       homepage = "https://github.com/mcschroeder/tx";
       description = "Persistent transactions on top of STM";
       license = stdenv.lib.licenses.mit;
     }) {};

  "txt-sushi" = callPackage
    ({ mkDerivation, binary, parsec, regex-posix }:
     mkDerivation {
       pname = "txt-sushi";
       version = "0.6.0";
       sha256 = "0375q8qcirkalz6n48rkylkx1j8z5gvjhh8n2fdvvjqvn064q1s6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary parsec regex-posix ];
       homepage = "http://keithsheppard.name/txt-sushi";
       description = "The SQL link in your *NIX chain";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "txt2rtf" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "txt2rtf";
       version = "1.0.1";
       sha256 = "0vn01ppcmdfi9n9f8h62ll9f08nda2pcrxvck0lgkwzky54v19s4";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://github.com/jgoerzen/txt2rtf";
       description = "Filter to convert plain text files to RTF";
       license = "GPL";
     }) {};

  "txtblk" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "txtblk";
       version = "0.2.0.1";
       sha256 = "08qpdyb1dbkif4zwrap6478fsf7lha6hk18wm0r4803avrr5w2bb";
       description = "Deprecated in favor of eros";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ty";
       version = "0.1.6";
       sha256 = "0i18c293f6dz7qgr5z4x6rzndhqv5q7myw1wvs8i9ld23d87fjhy";
       homepage = "https://github.com/conal/ty";
       description = "Typed type representations and equality proofs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typalyze" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "typalyze";
       version = "0.1.1";
       sha256 = "1wc1z7ps1rcbws2snci64hxddjd3bi3kbi4iwvbfaac0dz52085m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       homepage = "http://www.decidable.org/haskell/typalyze";
       description = "Analyzes Haskell source files for easy reference";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type";
       version = "0.2.0";
       sha256 = "13xkbj1nimgs9cm5mdqx52m1qzjgkzcxxjibqb1g8rmjgy17yj5m";
       description = "Dynamic casting library with support for arbitrary rank type kinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-aligned" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-aligned";
       version = "0.9.3";
       sha256 = "1wkjbb6giq71j5j72w4018hifn58gpgwxppbhgi5a8xdcxp8afl0";
       homepage = "https://github.com/atzeus/type-aligned";
       description = "Various type-aligned sequence data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-booleans" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-booleans";
       version = "0.1";
       sha256 = "11kbnfbvclkdwirnnpdi4f20pibdar4l47anvnkaxxl330zi7yfh";
       description = "Type-level booleans via type-families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-cereal" = callPackage
    ({ mkDerivation, cereal, data-hash, type-digits, type-spine }:
     mkDerivation {
       pname = "type-cereal";
       version = "0.3";
       sha256 = "1w1s1c7f2q5zwc9fghbbd1nhavh0mzzndh0mdxr7sy88a523svcv";
       buildDepends = [ cereal data-hash type-digits type-spine ];
       description = "Type-level serialization of type constructors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-digits" = callPackage
    ({ mkDerivation, type-spine }:
     mkDerivation {
       pname = "type-digits";
       version = "0.3";
       sha256 = "0rmqy3wcypyq09gnfz0xvkr2ly9gnpsjnil2n981ajfxsk2shi58";
       buildDepends = [ type-spine ];
       description = "Arbitrary-base type-level digits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-eq" = callPackage
    ({ mkDerivation, cpphs }:
     mkDerivation {
       pname = "type-eq";
       version = "0.4.2";
       sha256 = "0nyx3lqgrnlz0l3p615ln2dglqd39jwlk91ybz7blzhq1gpgayar";
       buildTools = [ cpphs ];
       homepage = "http://github.com/glaebhoerl/type-eq";
       description = "Type equality evidence you can carry around";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-equality" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-equality";
       version = "0.1.2";
       sha256 = "06acqpkvyvalv5knjzzbgm40hzas6cdfsypvjxsbb0mhq4d80xwr";
       homepage = "http://github.com/hesselink/type-equality/";
       description = "Type equality, coercion/cast and other operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-equality-check" = callPackage
    ({ mkDerivation, type-level }:
     mkDerivation {
       pname = "type-equality-check";
       version = "0.0.0.3";
       sha256 = "0fsj2mbsbhiqlv6dlkkwh3af5kx8qcif9374wiy7zf62pz4bry67";
       buildDepends = [ type-level ];
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/type-equality-check";
       description = "Type equality check";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-functions" = callPackage
    ({ mkDerivation, kinds }:
     mkDerivation {
       pname = "type-functions";
       version = "0.2.0.3";
       sha256 = "1vs6wk1z3zp3s1fxbz6bnfjlkdrcs6v4ihdnr504z9qklwb91vam";
       buildDepends = [ kinds ];
       homepage = "http://darcs.wolfgang.jeltsch.info/haskell/type-functions";
       description = "Emulation of type-level functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-hint" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-hint";
       version = "0.1";
       sha256 = "1fcrma7m6y7i1y42rzhv7qch8xkk93lkh1767saw4hsb9fzwsq8i";
       homepage = "https://github.com/mvv/type-hint";
       description = "Guide type inference with proxy values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-int" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-int";
       version = "0.5.0.2";
       sha256 = "1lakw4mvkii32a570zain510n9x7b2ka2r3qj5rpil1j4bpc662w";
       homepage = "http://github.com/ekmett/type-int";
       description = "Type Level 2s- and 16s- Complement Integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "type-level";
       version = "0.2.4";
       sha256 = "1cgph4y6j7wnzglzz89zd60f1mv8v82vp0n1bmkp4yqq0w2wmg9v";
       buildDepends = [ syb ];
       homepage = "http://code.haskell.org/type-level";
       description = "Type-level programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level-bst" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-level-bst";
       version = "0.1";
       sha256 = "0c51p6dy84ddikj6jch5hljn1i37q38wbak3chbc3ds5r674y5hk";
       homepage = "https://github.com/Kinokkory/type-level-bst";
       description = "type-level binary search trees in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level-natural-number" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-level-natural-number";
       version = "2.0";
       sha256 = "17zgm5ys1z61kxxczz3bzi9m3c48py6pvyx3cqk3xlh1w7n58ryk";
       description = "Simple type level natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level-natural-number-induction" = callPackage
    ({ mkDerivation, transformers, type-level-natural-number }:
     mkDerivation {
       pname = "type-level-natural-number-induction";
       version = "1.0.0.1";
       sha256 = "1mwnsz5rbqnwskzf4cyv05zxha86afqh68b5ppwvizrvwf4jav2r";
       buildDepends = [ transformers type-level-natural-number ];
       description = "High-level combinators for performing inductive operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level-natural-number-operations" = callPackage
    ({ mkDerivation, type-level-natural-number }:
     mkDerivation {
       pname = "type-level-natural-number-operations";
       version = "1.0";
       sha256 = "0vql5q5zhbhmwv0wqqb0xi4ayqdsz149rymhs730c583pq0h9r3w";
       buildDepends = [ type-level-natural-number ];
       description = "Basic operations on type-level natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level-numbers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-level-numbers";
       version = "0.1.1.1";
       sha256 = "12iiyaqi60fpds7fv1qvphy84rwyj71maq54mfwpcr0bdrgyymjv";
       description = "Type level numbers implemented using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level-sets" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-level-sets";
       version = "0.5";
       sha256 = "1mrrwyvpjywnv2vd1nzzk0vnzsnjvbxiyxp03n9djsgwnfslzxbj";
       description = "Type-level sets (with value-level counterparts and various operations)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-level-tf" = callPackage
    ({ mkDerivation, syb }:
     mkDerivation {
       pname = "type-level-tf";
       version = "0.2.1";
       sha256 = "07q69219yvf7rpfwilp70hvx2fzsxklvld7j3gayj17l9wp23g2m";
       buildDepends = [ syb ];
       homepage = "https://github.com/coreyoconnor/type-level-tf";
       description = "Type-level programming library (type families)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-list" = callPackage
    ({ mkDerivation, singletons }:
     mkDerivation {
       pname = "type-list";
       version = "0.0.0.0";
       sha256 = "1m7zs629kqx3xzc2shdk92x4yxfj32an6dxnal6gjy8v26h005k5";
       buildDepends = [ singletons ];
       description = "Operations on type-level lists and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-natural" = callPackage
    ({ mkDerivation, constraints, equational-reasoning, monomorphic
     , singletons
     }:
     mkDerivation {
       pname = "type-natural";
       version = "0.2.3.1";
       sha256 = "0qi5b3d0vkm1b2kda3ifw6g7djx91wj7q36la02yadlvmb4jcp1g";
       buildDepends = [
         constraints equational-reasoning monomorphic singletons
       ];
       homepage = "https://github.com/konn/type-natural";
       description = "Type-level natural and proofs of their properties";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-ord" = callPackage
    ({ mkDerivation, type-digits, type-spine }:
     mkDerivation {
       pname = "type-ord";
       version = "0.3";
       sha256 = "16nfnxh0klxx1f2mj1hc5blcm259b664w3l4frx4bksdavhnkmg5";
       buildDepends = [ type-digits type-spine ];
       description = "Type-level comparison operator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-ord-spine-cereal" = callPackage
    ({ mkDerivation, type-cereal, type-ord, type-spine }:
     mkDerivation {
       pname = "type-ord-spine-cereal";
       version = "0.2";
       sha256 = "1gwchzi4l7a0jm11paxz959mv9a5pbga86fyyjyglypd1988rvrb";
       buildDepends = [ type-cereal type-ord type-spine ];
       description = "Generic type-level comparison of types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-prelude" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-prelude";
       version = "0.1";
       sha256 = "1ygg511j0av1g94mclrsf3p0qb2kc89jcz9nfr5fm073a2jlzlih";
       homepage = "http://code.atnnn.com/projects/type-prelude";
       description = "Partial port of prelude to the type level. Requires GHC 7.6.1.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-settheory" = callPackage
    ({ mkDerivation, syb, transformers, type-equality }:
     mkDerivation {
       pname = "type-settheory";
       version = "0.1.3.1";
       sha256 = "1b4p9f03diq2mlp2mb39qrm095731i35q8k783bkq2knzlq01dsi";
       buildDepends = [ syb transformers type-equality ];
       description = "Sets and functions-as-relations in the type system";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-spine" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "type-spine";
       version = "0.2.20120924";
       sha256 = "0vy9ixmz1xm3dd0376s0h66q7qi64jqc5kqsqjpcg7akxidl03hi";
       description = "A spine-view on types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-structure" = callPackage
    ({ mkDerivation, hashable, HTF, HUnit, loch-th, mtl, placeholders
     , QuickCheck, QuickCheck-GenT, quickcheck-instances, text
     , th-instance-reification, time, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "type-structure";
       version = "0.1.1";
       sha256 = "0y2360llc41772ybjj3dcsk1r81js3yqsxww1w0j62gsdp6g9wfv";
       buildDepends = [
         hashable loch-th mtl placeholders text th-instance-reification time
         transformers unordered-containers vector
       ];
       testDepends = [
         hashable HTF HUnit loch-th mtl placeholders QuickCheck
         QuickCheck-GenT quickcheck-instances text th-instance-reification
         time transformers unordered-containers vector
       ];
       homepage = "https://github.com/nikita-volkov/type-structure";
       description = "Type structure analysis";
       license = stdenv.lib.licenses.mit;
     }) {};

  "type-sub-th" = callPackage
    ({ mkDerivation, checkers, DebugTraceHelpers, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , th-instances, tuple, uniplate
     }:
     mkDerivation {
       pname = "type-sub-th";
       version = "0.1.0.6";
       sha256 = "11aycmbvqlrsd4kzm9m5smg7ghqz8kn3i62b19acnlpmrlr5v497";
       buildDepends = [
         DebugTraceHelpers HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 tuple uniplate
       ];
       testDepends = [
         checkers DebugTraceHelpers HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 th-instances tuple
         uniplate
       ];
       homepage = "http://github.com/jfischoff/type-sub-th";
       description = "Substitute types for other types with Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "type-unary" = callPackage
    ({ mkDerivation, applicative-numbers, newtype, ty, vector-space }:
     mkDerivation {
       pname = "type-unary";
       version = "0.2.16";
       sha256 = "1pn65smi07gwd4h46irjawh1dnjnizs9ag0cyv55i0mjg8plyzvj";
       buildDepends = [ applicative-numbers newtype ty vector-space ];
       homepage = "https://github.com/conal/type-unary";
       description = "Type-level and typed unary natural numbers, inequality proofs, vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typeable-th" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "typeable-th";
       version = "0.1.5";
       sha256 = "1ps9rkysx7zbcqkz51ahayg2jivlihiqdlb27iq7bf9aa7383k6v";
       buildDepends = [ transformers ];
       homepage = "http://github.com/bennofs/typeable-th";
       description = "Automatic deriving of TypeableN instances with Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typehash" = callPackage
    ({ mkDerivation, binary, mtl, pureMD5, syb }:
     mkDerivation {
       pname = "typehash";
       version = "1.4.0.4";
       sha256 = "11s10arrbri1f71jfpynhmwh53cgkrfxsrqch1f02j0aii7n0lpv";
       buildDepends = [ binary mtl pureMD5 syb ];
       description = "Create a unique hash value for a type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typelevel-tensor" = callPackage
    ({ mkDerivation, HUnit, numeric-prelude, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "typelevel-tensor";
       version = "0.2.1";
       sha256 = "174f6xh3znf45w94xkhqwnxnzw6crpb13zff57svnj2dqvpf00gd";
       buildDepends = [ numeric-prelude QuickCheck ];
       testDepends = [
         HUnit numeric-prelude QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/nushio3/typelevel-tensor";
       description = "Tensors whose ranks and dimensions type-inferred and type-checked";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typeof" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "typeof";
       version = "0.1.2";
       sha256 = "1mnzkj5dp4rc4anaqxc6ia88wgrjhxwacxpqw8vp6pjqxbhhq92n";
       isLibrary = false;
       isExecutable = true;
       description = "Small script for inferring types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typeparams" = callPackage
    ({ mkDerivation, constraints, deepseq, primitive, reflection
     , tagged, vector
     }:
     mkDerivation {
       pname = "typeparams";
       version = "0.0.5";
       sha256 = "1yfc9xpi851sd05nhjdsglsjimmjipfdfssc2w9mav6fa878xy2h";
       buildDepends = [
         constraints deepseq primitive reflection tagged vector
       ];
       homepage = "http://github.com/mikeizbicki/typeparams/";
       description = "Lens-like interface for type level parameters; allows unboxed unboxed vectors and supercompilation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typesafe-endian" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "typesafe-endian";
       version = "0.1.0.1";
       sha256 = "1kg4pvrnf7vwvrcb998l9w08dpdy9hg7x2d9h5s3lqpnvvxfgcfj";
       homepage = "https://github.com/Ericson2314/typesafe-endian";
       description = "Enforce endianness with types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "typescript-docs" = callPackage
    ({ mkDerivation, blaze-html, cmdtheline, filemanip, filepath
     , language-typescript, parsec, split, syb, utf8-string
     }:
     mkDerivation {
       pname = "typescript-docs";
       version = "0.0.3";
       sha256 = "12axp6y652zlv9c9m0n5m4allpy23x0bk274gy78csrqp26akq3k";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-html cmdtheline filemanip filepath language-typescript parsec
         split syb utf8-string
       ];
       homepage = "http://github.com/paf31/typescript-docs";
       description = "A documentation generator for TypeScript Definition files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "typical" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "typical";
       version = "0.0.1";
       sha256 = "0dw6mwppbhcblnr03qgavhx27l9dl6gd981afgg4spi8avfzgh4q";
       description = "Type level numbers, vectors, list. This lib needs to be extended.";
       license = "GPL";
     }) {};

  "typography-geometry" = callPackage
    ({ mkDerivation, parallel, polynomials-bernstein, vector }:
     mkDerivation {
       pname = "typography-geometry";
       version = "1.0.0";
       sha256 = "1vvqch3pdwymjbmir7b208qyzdzljsw1gf8icmzw5pi3vn6wkihf";
       buildDepends = [ parallel polynomials-bernstein vector ];
       description = "Drawings for printed text documents";
       license = "GPL";
     }) {};

  "tz" = callPackage
    ({ mkDerivation, binary, bindings-posix, deepseq, HUnit
     , pkgs_tzdata, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, time, tzdata
     , vector
     }:
     mkDerivation {
       pname = "tz";
       version = "0.0.0.8";
       sha256 = "0rabdqwdj8hx17817zsfsih01agx7n3kja8s0axmm0drq22vlflv";
       buildDepends = [ binary deepseq time tzdata vector ];
       testDepends = [
         bindings-posix HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th time tzdata vector
       ];
       preConfigure = "export TZDIR=${pkgs_tzdata}/share/zoneinfo";
       homepage = "https://github.com/nilcons/haskell-tz";
       description = "Efficient time zone handling";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "tzdata" = callPackage
    ({ mkDerivation, filemanip, filepath, HUnit, MissingH
     , test-framework, test-framework-hunit, test-framework-th, vector
     }:
     mkDerivation {
       pname = "tzdata";
       version = "0.1.20140612.0";
       sha256 = "03fd3jiw89c8zf2jdz0qps8sb8ipgmjqbbaq4y2aqczv36ha74gh";
       buildDepends = [ vector ];
       testDepends = [
         filemanip filepath HUnit MissingH test-framework
         test-framework-hunit test-framework-th
       ];
       homepage = "https://github.com/nilcons/haskell-tzdata";
       description = "Time zone database (as files and as a module)";
       license = stdenv.lib.licenses.asl20;
     }) {};

  "uAgda" = callPackage
    ({ mkDerivation, BNFC-meta, cmdargs, mtl, parsec, split
     , transformers
     }:
     mkDerivation {
       pname = "uAgda";
       version = "1.2.0.4";
       sha256 = "01a1h6pflvid5zcd8wy3px7cz4pxwy5pw354v9rp8k7sx4q82am8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ BNFC-meta cmdargs mtl parsec split transformers ];
       description = "A simplistic dependently-typed language with parametricity";
       license = "unknown";
     }) {};

  "ua-parser" = callPackage
    ({ mkDerivation, aeson, criterion, data-default, deepseq, derive
     , file-embed, filepath, HUnit, pcre-light, syb, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, yaml
     }:
     mkDerivation {
       pname = "ua-parser";
       version = "0.5";
       sha256 = "0fljfvs9gzqyn01sw57s738jazki839grff43n09bqf7nk1janbf";
       buildDepends = [
         aeson data-default file-embed pcre-light syb text yaml
       ];
       testDepends = [
         aeson criterion data-default deepseq derive file-embed filepath
         HUnit pcre-light syb test-framework test-framework-hunit
         test-framework-quickcheck2 text yaml
       ];
       description = "A library for parsing User-Agent strings, official Haskell port of ua-parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uacpid" = callPackage
    ({ mkDerivation, filepath, hslogger, mtl, network, regex-compat
     , time
     }:
     mkDerivation {
       pname = "uacpid";
       version = "1.0.3.0";
       sha256 = "02l88vpjs6qc0rwa4kn438i1gwc376sj8g2h5xqm3pz7adwfv24a";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath hslogger mtl network regex-compat time ];
       homepage = "http://ui3.info/d/proj/uacpid.html";
       description = "Userspace Advanced Configuration and Power Interface event daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uberlast" = callPackage
    ({ mkDerivation, lens, tagged }:
     mkDerivation {
       pname = "uberlast";
       version = "0.0";
       sha256 = "12p948706scjiazlwv0x1afl3v8fhv4a3l8yqn1x4y9xnr4pfmc9";
       buildDepends = [ lens tagged ];
       homepage = "https:/github.com/fumieval/uberlast";
       description = "Generate overloaded lenses from plain data declaration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uconv" = callPackage
    ({ mkDerivation, icu }:
     mkDerivation {
       pname = "uconv";
       version = "0.0.3";
       sha256 = "0v71qw494klyh3ar8qdp7wx7kn7629iy83xham9b7jpmvk2p76bv";
       extraLibraries = [ icu ];
       description = "String encoding conversion with ICU";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "udbus" = callPackage
    ({ mkDerivation, binary, cereal, mtl, network, utf8-string }:
     mkDerivation {
       pname = "udbus";
       version = "0.2.1";
       sha256 = "0a7kksh99nll91q41z4xgrcwc8pnfm0p71bxw6yymcd7yb0v09fk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary cereal mtl network utf8-string ];
       homepage = "http://github.com/vincenthz/hs-udbus";
       description = "Small DBus implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "udbus-model" = callPackage
    ({ mkDerivation, udbus, xml }:
     mkDerivation {
       pname = "udbus-model";
       version = "0.2.1";
       sha256 = "0xiz3z0x7p9agj14j9lm8njfqiqpyif0m2fn7lppi3w482ssfzji";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ udbus xml ];
       homepage = "http://github.com/vincenthz/hs-udbus";
       description = "Model API for udbus introspection and definitions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "udcode" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "udcode";
       version = "0.2.0.0";
       sha256 = "1namnm91divk1x8ki7wfbd79f4nrym58r4ki9yamj2giv4nxda36";
       buildDepends = [ mtl ];
       description = "Does a set of code words form a uniquely decodable code?";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "udev" = callPackage
    ({ mkDerivation, libudev, posix-paths, select }:
     mkDerivation {
       pname = "udev";
       version = "0.1.0.0";
       sha256 = "1a5i57f50scxbv5snn4xd953bx98qq3cgzhxjnqvxyazqz3h1fx2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ posix-paths select ];
       pkgconfigDepends = [ libudev ];
       homepage = "https://github.com/pxqr/udev";
       description = "libudev bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uglymemo" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "uglymemo";
       version = "0.1.0.1";
       sha256 = "0ixqg5d0ly1r18jbgaa89i6kjzgi6c5hanw1b1y8c5fbq14yz2gy";
       description = "A simple (but internally ugly) memoization function";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "uhc-light" = callPackage
    ({ mkDerivation, binary, fgl, hashable, mtl, network, primitive
     , syb, uhc-util, uulib, vector
     }:
     mkDerivation {
       pname = "uhc-light";
       version = "1.1.8.0";
       sha256 = "0062388v0gf6xjdggnsn0q85afcgdwfi3x8a93p21zdkghv2jdds";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary fgl hashable mtl network primitive syb uhc-util uulib vector
       ];
       homepage = "https://github.com/UU-ComputerScience/uhc";
       description = "Part of UHC packaged as cabal/hackage installable library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uhc-util" = callPackage
    ({ mkDerivation, binary, fgl, hashable, ListLike, mtl, syb, time
     , time-compat, uulib
     }:
     mkDerivation {
       pname = "uhc-util";
       version = "0.1.3.9";
       sha256 = "02kdr6y81ggflkfz4skmpq1vawc357z5irqk89965ablk4v1msxs";
       buildDepends = [
         binary fgl hashable ListLike mtl syb time time-compat uulib
       ];
       homepage = "https://github.com/UU-ComputerScience/uhc-utils";
       description = "UHC utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uhexdump" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "uhexdump";
       version = "0.3";
       sha256 = "064cm531yci41jf14k177w7j4zy8dfjwrpjcrwf7kpz2rhx1djyi";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ split ];
       description = "hex dumper for UTF-8 text";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uhttpc" = callPackage
    ({ mkDerivation, async, bytestring-lexing, cmdargs, deepseq
     , network
     }:
     mkDerivation {
       pname = "uhttpc";
       version = "0.1.0.0";
       sha256 = "116x62yq51xb5z0ndvf0q42plw442lf275b0z2wyvcyl3m5mpmhd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ async bytestring-lexing cmdargs deepseq network ];
       homepage = "https://github.com/hvr/uhttpc";
       description = "Minimal HTTP client library optimized for benchmarking";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "ui-command" = callPackage
    ({ mkDerivation, data-default, mtl, time }:
     mkDerivation {
       pname = "ui-command";
       version = "0.5.4";
       sha256 = "1qq902p5q6z1m0556bdc6brads7m2qrhrwnzd8k8c4jynzc829w7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-default mtl time ];
       description = "A framework for friendly commandline programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uid" = callPackage
    ({ mkDerivation, aeson, cereal, dataenc, text, uuid }:
     mkDerivation {
       pname = "uid";
       version = "0.1.0.1";
       sha256 = "11v67dbanw9gmy9rbfln3ma87a9hkwvc5bwzdx840ngij5gh559b";
       buildDepends = [ aeson cereal dataenc text uuid ];
       homepage = "http://github.com/hargettp/uid.git";
       description = "Simple unique identifier datatype, serializable and encodable as base32";
       license = stdenv.lib.licenses.mit;
     }) {};

  "una" = callPackage
    ({ mkDerivation, cmdargs, filepath, io-storage }:
     mkDerivation {
       pname = "una";
       version = "2.1.0";
       sha256 = "0gpycwd0dgnw7cdicpn19wv1xb4jq3j9dfzry2ilv85h02zkwfvh";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs filepath io-storage ];
       homepage = "https://github.com/jwiegley/una";
       description = "Universal un-archiver utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unagi-chan" = callPackage
    ({ mkDerivation, atomic-primops, primitive }:
     mkDerivation {
       pname = "unagi-chan";
       version = "0.2.0.1";
       sha256 = "03r8bvvhx8yibqxri045ypcwa7jxc1fa8ikjxl5wcfj110nab1cp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ atomic-primops primitive ];
       testDepends = [ atomic-primops primitive ];
       description = "Fast and scalable concurrent queues for x86, with a Chan-like API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unagi-streams" = callPackage
    ({ mkDerivation, io-streams, unagi-chan }:
     mkDerivation {
       pname = "unagi-streams";
       version = "0.1.0.0";
       sha256 = "1mvpccy44v03xa7zzs4k6n6d73i70764ggm53hpw7qv4xnczq2cr";
       buildDepends = [ io-streams unagi-chan ];
       description = "Unagi Chan IO-Streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unamb" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unamb";
       version = "0.2.5";
       sha256 = "12cbqlc7qf2sf2m4zmisx06bcc104bwivnzq2df0jqdf09bg0n9k";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://haskell.org/haskellwiki/unamb";
       description = "Unambiguous choice";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unamb-custom" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "unamb-custom";
       version = "0.13";
       sha256 = "0r694wi9xg8brgcwl2kyv5amp6v539l121s9bpmd5lhjdnrvqjwk";
       buildDepends = [ mtl ];
       homepage = "http://github.com/luqui/unamb-custom";
       description = "Functional concurrency with unamb using a custom scheduler";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unbound" = callPackage
    ({ mkDerivation, binary, mtl, RepLib, transformers }:
     mkDerivation {
       pname = "unbound";
       version = "0.4.3.1";
       sha256 = "1xkp47y7yg8dl95gf4w3iwddc3yivrhcxj184cfhrx6a9rbsflpz";
       buildDepends = [ binary mtl RepLib transformers ];
       homepage = "http://code.google.com/p/replib/";
       description = "Generic support for programming with names and binders";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unbound-generics" = callPackage
    ({ mkDerivation, contravariant, mtl, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck, transformers
     }:
     mkDerivation {
       pname = "unbound-generics";
       version = "0.0.2";
       sha256 = "0zgajq411bp16xwv31i2igsz62lad923rylhfprklsism13rk5ai";
       buildDepends = [ contravariant mtl transformers ];
       testDepends = [
         mtl QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://github.com/lambdageek/unbound-generics";
       description = "Reimplementation of Unbound using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unbounded-delays" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unbounded-delays";
       version = "0.1.0.8";
       sha256 = "1jdlpg82kndz6g97bw8fb6sjyyvylrcrg982xnhgi36717f0pv40";
       homepage = "https://github.com/basvandijk/unbounded-delays";
       description = "Unbounded thread delays and timeouts";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unbounded-delays-units" = callPackage
    ({ mkDerivation, unbounded-delays, units, units-defs }:
     mkDerivation {
       pname = "unbounded-delays-units";
       version = "0.4";
       sha256 = "02j4i2dms15vb87ar3m99hvpxrjdakljyql708zs716k1jdm7614";
       buildDepends = [ unbounded-delays units units-defs ];
       homepage = "https://github.com/jcristovao/unbouded-delays-units";
       description = "Thread delays and timeouts using proper time units";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unboxed-containers" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unboxed-containers";
       version = "0.0.2.4";
       sha256 = "0yahavqjjnlf4ps8kd41s9s64nbhx2hf7qzk2xxkmq0i3b91d123";
       homepage = "http://github.com/ekmett/unboxed-containers";
       description = "Self-optimizing unboxed sets using view patterns and data families";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unexceptionalio" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unexceptionalio";
       version = "0.2.0";
       sha256 = "1p1han6027n6d9cx0cqrfrpwqlhkainj7xi839swqj1k6d4n022n";
       homepage = "https://github.com/singpolyma/unexceptionalio";
       description = "IO without any non-error, synchronous exceptions";
       license = "unknown";
     }) {};

  "unfoldable" = callPackage
    ({ mkDerivation, QuickCheck, random, transformers }:
     mkDerivation {
       pname = "unfoldable";
       version = "0.8.1";
       sha256 = "0y3y8m271spkmzc3182v8j06kspkzv03yxiscaa1vvhm2sbqp2is";
       buildDepends = [ QuickCheck random transformers ];
       homepage = "https://github.com/sjoerdvisscher/unfoldable";
       description = "Class of data structures that can be unfolded";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ungadtagger" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "ungadtagger";
       version = "1.0.0";
       sha256 = "1hn30p9vpsvkph54grzwdrca5vh9grpa7d0w1zlvim1mnvqxmn4b";
       homepage = "http://github.com/andriyp/ungadtagger";
       description = "Abstract GADTs from typelevel tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uni-events" = callPackage
    ({ mkDerivation, uni-util }:
     mkDerivation {
       pname = "uni-events";
       version = "2.2.1.0";
       sha256 = "1kfvhkbwibbac2r980h982m0rd3xndzrgqngrvfcmy0bykpamkxh";
       buildDepends = [ uni-util ];
       homepage = "http://www.informatik.uni-bremen.de/uniform/wb/";
       description = "Event handling for the uniform workbench";
       license = "LGPL";
     }) {};

  "uni-graphs" = callPackage
    ({ mkDerivation, mtl, uni-events, uni-htk, uni-reactor, uni-util }:
     mkDerivation {
       pname = "uni-graphs";
       version = "2.2.1.0";
       sha256 = "1vwm0gmgj8c7qdildplr3jng5gj9q6b669vgmnxw4v514y529bz5";
       buildDepends = [ mtl uni-events uni-htk uni-reactor uni-util ];
       homepage = "http://www.informatik.uni-bremen.de/uniform/wb/";
       description = "Graphs";
       license = "LGPL";
     }) {};

  "uni-htk" = callPackage
    ({ mkDerivation, uni-events, uni-posixutil, uni-reactor, uni-util
     }:
     mkDerivation {
       pname = "uni-htk";
       version = "2.2.1.1";
       sha256 = "0npdlgq8zxz0b9rvlsml88k7alnm4wj2k4m94b4zp0r3ahhf630q";
       buildDepends = [ uni-events uni-posixutil uni-reactor uni-util ];
       homepage = "http://www.informatik.uni-bremen.de/htk/";
       description = "Graphical User Interface for Haskell Programs";
       license = "LGPL";
     }) {};

  "uni-posixutil" = callPackage
    ({ mkDerivation, uni-events, uni-util }:
     mkDerivation {
       pname = "uni-posixutil";
       version = "2.2.1.1";
       sha256 = "0wh3ni6l1x7rxn5yppva1xs0yb6z5hxfmzxxrnh6hbcq1pa62m5d";
       buildDepends = [ uni-events uni-util ];
       homepage = "http://www.informatik.uni-bremen.de/uniform/wb/";
       description = "Posix utilities for the uniform workbench";
       license = "LGPL";
     }) {};

  "uni-reactor" = callPackage
    ({ mkDerivation, uni-events, uni-util }:
     mkDerivation {
       pname = "uni-reactor";
       version = "2.2.1.0";
       sha256 = "147nizw920xbbj5b8kqrgri1r9wpx3qddspnryxhdxq10q1xlyh2";
       buildDepends = [ uni-events uni-util ];
       homepage = "http://www.informatik.uni-bremen.de/uniform/wb/";
       description = "Reactors for the uniform workbench";
       license = "LGPL";
     }) {};

  "uni-uDrawGraph" = callPackage
    ({ mkDerivation, uni-events, uni-graphs, uni-posixutil, uni-reactor
     , uni-util
     }:
     mkDerivation {
       pname = "uni-uDrawGraph";
       version = "2.2.0.2";
       sha256 = "16gykzzpijf5rynyac6p3nsgwq8w65bpx71jax52x8v33zdkin2d";
       buildDepends = [
         uni-events uni-graphs uni-posixutil uni-reactor uni-util
       ];
       homepage = "http://www.informatik.uni-bremen.de/uniform/wb";
       description = "Graphs binding";
       license = "LGPL";
     }) {};

  "uni-util" = callPackage
    ({ mkDerivation, mtl, network, parsec }:
     mkDerivation {
       pname = "uni-util";
       version = "2.3.0.1";
       sha256 = "0simxjsd0qi8yxnpiq88zy3bsrrw5rxfpfknr8yaf4xhc7vv39nh";
       buildDepends = [ mtl network parsec ];
       homepage = "http://www.informatik.uni-bremen.de/uniform/wb/";
       description = "Utilities for the uniform workbench";
       license = "LGPL";
     }) {};

  "unicode" = callPackage
    ({ mkDerivation, utility-ht }:
     mkDerivation {
       pname = "unicode";
       version = "0.0";
       sha256 = "0fy89j864dy5dzfj15aavm8bqpv2f51zf42dyjvs50qah3shh5yl";
       isLibrary = true;
       isExecutable = true;
       testDepends = [ utility-ht ];
       homepage = "http://code.haskell.org/~thielema/unicode/";
       description = "Construct and transform unicode characters";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unicode-names" = callPackage
    ({ mkDerivation, unicode-properties }:
     mkDerivation {
       pname = "unicode-names";
       version = "3.2.0.0";
       sha256 = "15088dbmhvw118p3w08wxpsx41gzi0wqinqyg143225pp07aa5gc";
       buildDepends = [ unicode-properties ];
       description = "Unicode 3.2.0 character names";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unicode-normalization" = callPackage
    ({ mkDerivation, compact-string, icu }:
     mkDerivation {
       pname = "unicode-normalization";
       version = "0.1";
       sha256 = "1smfc7a62xi6y4sc0vai2l0nljxl9dr9l5zkqi17n14cq36ppfwb";
       buildDepends = [ compact-string ];
       extraLibraries = [ icu ];
       homepage = "http://sloompie.reinier.de/unicode-normalization/";
       description = "Unicode normalization using the ICU library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unicode-prelude" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unicode-prelude";
       version = "0.1.1";
       sha256 = "05zakihlk06wckzgm43f3g26fjdn4gb3d1ypw4vcwqmipq2dbfsw";
       description = "Unicode notation for some definitions in Prelude";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unicode-properties" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unicode-properties";
       version = "3.2.0.0";
       sha256 = "06zrr2z9irbsxwf7fbnhp2sg36ykb2amfys2y78nzn0mw63xb3q1";
       description = "Unicode 3.2.0 character properties";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unicode-symbols" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unicode-symbols";
       version = "0.1.1.2";
       sha256 = "0y1awqrf1x2in158linszma69zyz3zp14h3rmdx3vmbmif9fvbyv";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unicoder" = callPackage
    ({ mkDerivation, attoparsec, text }:
     mkDerivation {
       pname = "unicoder";
       version = "0.4.1";
       sha256 = "17a2rxq5b4a66ia4jm1g0lmkvsanfc477567wygq9kz4w9q4xwc3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec text ];
       testDepends = [ attoparsec text ];
       homepage = "https://github.com/Zankoku-Okuno/unicoder";
       description = "Make writing in unicode easy";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unification-fd" = callPackage
    ({ mkDerivation, logict, mtl }:
     mkDerivation {
       pname = "unification-fd";
       version = "0.9.0";
       sha256 = "0fdnpcpcpjlxlwxpqlawwbgqhs1p9lrksy5ln5isyvr06hwqh7ki";
       buildDepends = [ logict mtl ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Simple generic unification algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uniform-pair" = callPackage
    ({ mkDerivation, ShowF }:
     mkDerivation {
       pname = "uniform-pair";
       version = "0.1.4";
       sha256 = "0m9x9ij45n63rls5j5d7bhhpkla9s4v21z1mvvzn01vgixs2aqfv";
       buildDepends = [ ShowF ];
       homepage = "https://github.com/conal/uniform-pair/";
       description = "Uniform pairs with class instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "union-find" = callPackage
    ({ mkDerivation, transformers }:
     mkDerivation {
       pname = "union-find";
       version = "0.2";
       sha256 = "1v7hj42j9w6jlzi56jg8rh4p58gfs1c5dx30wd1qqvn0p0mnihp6";
       buildDepends = [ transformers ];
       homepage = "http://github.com/nominolo/union-find";
       description = "Efficient union and equivalence testing of sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "union-find-array" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "union-find-array";
       version = "0.1.0.1";
       sha256 = "0p50w0kb1pz80nq0nm9l20wshsqjcaaagrrjfqx955awrvz2wmf7";
       buildDepends = [ mtl ];
       homepage = "https://github.com/haskell-rewriting/union-find-array";
       description = "union find data structure";
       license = stdenv.lib.licenses.mit;
     }) {};

  "union-map" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "union-map";
       version = "0.0";
       sha256 = "01h4n9yspjicii7b7mcg0a8yg8bwfy6hwb7dp82y08846kcb9fh5";
       homepage = "http://github.com/minpou/union-map";
       description = "Heterogeneous map by open unions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uniplate" = callPackage
    ({ mkDerivation, hashable, syb, unordered-containers }:
     mkDerivation {
       pname = "uniplate";
       version = "1.6.12";
       sha256 = "1dx8f9aw27fz8kw0ad1nm6355w5rdl7bjvb427v2bsgnng30pipw";
       buildDepends = [ hashable syb unordered-containers ];
       homepage = "http://community.haskell.org/~ndm/uniplate/";
       description = "Help writing simple, concise and fast generic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unique-logic" = callPackage
    ({ mkDerivation, non-empty, QuickCheck, transformers, utility-ht }:
     mkDerivation {
       pname = "unique-logic";
       version = "0.3";
       sha256 = "0pjkqvam73d6xy528r9zf75km2yr997in902174raj6kw3kgdl41";
       buildDepends = [ transformers utility-ht ];
       testDepends = [ non-empty QuickCheck transformers utility-ht ];
       homepage = "http://code.haskell.org/~thielema/unique-logic/";
       description = "Solve simple simultaneous equations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unique-logic-tf" = callPackage
    ({ mkDerivation, explicit-exception, non-empty, QuickCheck
     , transformers, utility-ht
     }:
     mkDerivation {
       pname = "unique-logic-tf";
       version = "0.4.1.1";
       sha256 = "0gc41whidll04fgzjydcxgxvq270ncvqcamsd3b3qd4hfn3v9qv8";
       buildDepends = [ explicit-exception transformers utility-ht ];
       testDepends = [ non-empty QuickCheck transformers utility-ht ];
       homepage = "http://code.haskell.org/~thielema/unique-logic-tf/";
       description = "Solve simple simultaneous equations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uniqueid" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "uniqueid";
       version = "0.1.1";
       sha256 = "0s1jw29g5s9ll8hbfkyalhdjpsv54w1n63mz4jph36dbq68zb7g6";
       homepage = "http://github.com/sebfisch/uniqueid/wikis";
       description = "Splittable Unique Identifier Supply";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "units" = callPackage
    ({ mkDerivation, HUnit-approx, mtl, multimap, parsec, singletons
     , syb, tasty, tasty-hunit, th-desugar, vector-space
     }:
     mkDerivation {
       pname = "units";
       version = "2.2";
       sha256 = "1hd7klv0h2rsq971rbghvgy2921bf0zxikdsl26qw08yb0zirvza";
       buildDepends = [
         mtl multimap parsec singletons syb th-desugar vector-space
       ];
       testDepends = [
         HUnit-approx mtl multimap parsec singletons syb tasty tasty-hunit
         th-desugar vector-space
       ];
       homepage = "https://github.com/goldfirere/units";
       description = "A domain-specific type system for dimensional analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "units-defs" = callPackage
    ({ mkDerivation, units }:
     mkDerivation {
       pname = "units-defs";
       version = "2.0";
       sha256 = "0jpm0rnnw3fl4hsmcwgyr738z9p4hjw6gcgr725zw35gm6lg3c3y";
       buildDepends = [ units ];
       homepage = "http://github.com/goldfirere/units-defs";
       description = "Definitions for use with the units package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "units-parser" = callPackage
    ({ mkDerivation, mtl, multimap, parsec, syb, tasty, tasty-hunit }:
     mkDerivation {
       pname = "units-parser";
       version = "0.1.0.0";
       sha256 = "0ha1saapphk15xk10a36k5qmn01nqpz10f8gi35ra9zqlhv8amfq";
       buildDepends = [ mtl multimap parsec ];
       testDepends = [ mtl multimap parsec syb tasty tasty-hunit ];
       description = "A parser for units of measure";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unittyped" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unittyped";
       version = "0.1";
       sha256 = "1ab27rwnp8ncfn5sm4llxjxx7fbp495sl1838g8z9hishr5dgddl";
       homepage = "https://bitbucket.org/xnyhps/haskell-unittyped/";
       description = "An extendable library for type-safe computations including units";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "universal-binary" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "universal-binary";
       version = "0.11";
       sha256 = "1gnrq6s7pipjqfyispkxib3xfzii1ss6a9iwv07mvb5a93hc45cw";
       buildDepends = [ binary ];
       description = "Parser for OS X Universal Binary format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "universe" = callPackage
    ({ mkDerivation, universe-instances-base
     , universe-instances-extended, universe-instances-trans
     , universe-reverse-instances
     }:
     mkDerivation {
       pname = "universe";
       version = "1.0";
       sha256 = "19zr9zcqc5sfp5qfn8slkk2732j1814m3j1jkbim739limwf900z";
       buildDepends = [
         universe-instances-base universe-instances-extended
         universe-instances-trans universe-reverse-instances
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Classes for types where we know all the values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "universe-base" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "universe-base";
       version = "1.0";
       sha256 = "1bhgmikh876bda37a79iapzp58ssgfx6n57gpblyd1fprxnwqxc4";
       homepage = "https://github.com/dmwit/universe";
       description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "universe-instances-base" = callPackage
    ({ mkDerivation, universe-base }:
     mkDerivation {
       pname = "universe-instances-base";
       version = "1.0";
       sha256 = "04njgl32lk5a0masjdjkm4l2wsyrr29g0fsp599864mp7gp504d2";
       buildDepends = [ universe-base ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the base package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "universe-instances-extended" = callPackage
    ({ mkDerivation, adjunctions, comonad, universe-instances-base
     , void
     }:
     mkDerivation {
       pname = "universe-instances-extended";
       version = "1.0";
       sha256 = "0cla7n6id0v2pphmzsc8cbghvhyjjx9720gmxdqch8ysrfknkbgi";
       buildDepends = [
         adjunctions comonad universe-instances-base void
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from select extra packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "universe-instances-trans" = callPackage
    ({ mkDerivation, mtl, transformers, universe-base
     , universe-instances-base
     }:
     mkDerivation {
       pname = "universe-instances-trans";
       version = "1.0.0.1";
       sha256 = "03iix0bdhfi4qlgwr8sl3gsqck6lsbkqgx245w2z5yaaxgqpq10d";
       buildDepends = [
         mtl transformers universe-base universe-instances-base
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the transformers and mtl packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "universe-reverse-instances" = callPackage
    ({ mkDerivation, universe-instances-base }:
     mkDerivation {
       pname = "universe-reverse-instances";
       version = "1.0";
       sha256 = "0jcd7qyvzq8xxv9d3hfi0f1h48xdsy9r9xnxgxc7ggga4szirm79";
       buildDepends = [ universe-instances-base ];
       homepage = "https://github.com/dmwit/universe";
       description = "instances of standard classes that are made possible by enumerations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "universe-th" = callPackage
    ({ mkDerivation, checkers, composition, DebugTraceHelpers, HUnit
     , mtl, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, th-instances, tuple, uniplate
     }:
     mkDerivation {
       pname = "universe-th";
       version = "0.0.0.6";
       sha256 = "143kcgv4lp9266d8za878l343j6g97mxc3z7gj348jjamvpyg9wx";
       buildDepends = [ composition mtl tuple uniplate ];
       testDepends = [
         checkers composition DebugTraceHelpers HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         th-instances tuple uniplate
       ];
       homepage = "http://github.com/jfishcoff/universe-th";
       description = "Construct a Dec's ancestor list";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "unix";
       version = "2.7.0.1";
       sha256 = "0bppfzwdrf7afjqw9kzkq8chxvh6g7nyjd81pgn5dfd5qv7rgzpb";
       editedCabalFile = "1pyg4ckdhsi2vlahzs99s6r87nsin782bq2v83jf3cc5p3yj629j";
       buildDepends = [ time ];
       homepage = "https://github.com/haskell/unix";
       description = "POSIX functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix-bytestring" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unix-bytestring";
       version = "0.3.7.2";
       sha256 = "0n1i7pcdwhs0wz6spf3pndr8i74qn0cdzr3p46w4r4mvvwr76i2s";
       homepage = "http://code.haskell.org/~wren/";
       description = "Unix/Posix-specific functions for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix-compat" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unix-compat";
       version = "0.4.1.3";
       sha256 = "1vfw3ffzdk9mshhgyp3dnbn8rihkz8qg6n5zqak8966dsdqhm4xb";
       homepage = "http://github.com/jystic/unix-compat";
       description = "Portable POSIX-compatibility layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix-handle" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unix-handle";
       version = "0.0.0";
       sha256 = "07ysmd9ks5lm2lg1dik75m509ryn5azw28j9hcisknf5bmrfy9li";
       description = "POSIX operations on Handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix-io-extra" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unix-io-extra";
       version = "0.1";
       sha256 = "1qy28y1apm2dxp47v0ngxj4ww3iyq4lj0n0i4z9phyr1122fglig";
       description = "Support for writev, pwrite and pread";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix-memory" = callPackage
    ({ mkDerivation, mtl, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "unix-memory";
       version = "0.1.2";
       sha256 = "1r8s7z39d31h1n7rcincy156lbsvamr6jicx52kv8simb9gvarpp";
       testDepends = [
         mtl QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hs-unix-memory";
       description = "Unix memory syscalls";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix-process-conduit" = callPackage
    ({ mkDerivation, conduit, filepath, hspec, stm, time, transformers
     }:
     mkDerivation {
       pname = "unix-process-conduit";
       version = "0.2.2.3";
       sha256 = "0ldgjwdvshggygxn9fpnxvb01dba0q0bn9f7iiw5xgqhli46nvcy";
       buildDepends = [ conduit filepath stm time transformers ];
       testDepends = [ conduit hspec transformers ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Run processes on Unix systems, with a conduit interface (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "unix-pty-light" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unix-pty-light";
       version = "0.1";
       sha256 = "1n21cd6chih86g6kfl6b0x4k533ykzz93anhf6wga3033rvy09wj";
       homepage = "http://code.haskell.org/~scook0/unix-pty-light";
       description = "POSIX pseudo-terminal support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unix-time" = callPackage
    ({ mkDerivation, binary, doctest, hspec, QuickCheck, time }:
     mkDerivation {
       pname = "unix-time";
       version = "0.3.4";
       sha256 = "1bni03bzayg3vwj6mwcl4z41zixv8nida8jc3vkv41fr7mzb24g5";
       buildDepends = [ binary ];
       testDepends = [ doctest hspec QuickCheck time ];
       description = "Unix time parser/formatter and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unlambda" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "unlambda";
       version = "0.1.3";
       sha256 = "0clcpkhg23a7ma72rjjpl2w8jpg2mdn4rgm3vf0vqr7lbyma1h89";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl ];
       description = "Unlambda interpreter";
       license = "GPL";
     }) {};

  "unlit" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "unlit";
       version = "0.3.0.3";
       sha256 = "0nwd4cm3licmdx06cmq42ig7r0iirw2s3ifnna4yzxpysj2aapnf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ text ];
       description = "Tool to convert literate code between styles or to code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unm-hip" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "unm-hip";
       version = "0.3.1.6";
       sha256 = "170ivv689jg2k9p8czp6miq3samjbdwanh3vh9csm8iq88yrzry5";
       buildDepends = [ vector ];
       description = "A Library for the manipulation of images";
       license = "GPL";
     }) {};

  "unordered-containers" = callPackage
    ({ mkDerivation, ChasingBottoms, deepseq, hashable, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unordered-containers";
       version = "0.2.5.1";
       sha256 = "06l1xv7vhpxly75saxdrbc6p2zlgz1az278arfkz4rgawfnphn3f";
       buildDepends = [ deepseq hashable ];
       testDepends = [
         ChasingBottoms hashable HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/tibbe/unordered-containers";
       description = "Efficient hashing-based container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unordered-containers-rematch" = callPackage
    ({ mkDerivation, hashable, hspec, HUnit, rematch
     , unordered-containers
     }:
     mkDerivation {
       pname = "unordered-containers-rematch";
       version = "0.1.0.0";
       sha256 = "13ld8whx1m5xglaj2adsn0qb1x00p6ir8l9kz7fv815n6ahgcii8";
       buildDepends = [ hashable rematch unordered-containers ];
       testDepends = [
         hashable hspec HUnit rematch unordered-containers
       ];
       homepage = "http://github.com/tcrayford/rematch";
       description = "Rematch support for unordered containers";
       license = stdenv.lib.licenses.mit;
     }) {};

  "unpack-funcs" = callPackage
    ({ mkDerivation, primitive, transformers, vector }:
     mkDerivation {
       pname = "unpack-funcs";
       version = "0.3.1";
       sha256 = "0ha8xbg1a560rd5grg6i2acg3nzq6f4d6qa7i6vrbnz7bqbg77q3";
       buildDepends = [ primitive transformers vector ];
       description = "Monad transformers that mirror worker-wrapper transformations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unroll-ghc-plugin" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unroll-ghc-plugin";
       version = "0.1.1";
       sha256 = "0n05777fqqpbgnh9jab04ayw1j1as4wkkbrjixi1288fhi44m87p";
       homepage = "http://thoughtpolice.github.com/unroll-ghc-plugin";
       description = "Compiler plugin for loop unrolling";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unsafe" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unsafe";
       version = "0.0";
       sha256 = "0hc6xr1i3hkz25gdgfx1jqgpsc9mwa05bkfynp0mcfdlyz6782nz";
       homepage = "http://code.haskell.org/~thielema/unsafe/";
       description = "Unified interface to unsafe functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unsafe-promises" = callPackage
    ({ mkDerivation, threads }:
     mkDerivation {
       pname = "unsafe-promises";
       version = "0.0.1.3";
       sha256 = "1018c3q0aq6l0011az661dvlibiv6jvwdv4c40bi8pwapri66k70";
       buildDepends = [ threads ];
       homepage = "https://github.com/kallisti-dev/unsafe-promises";
       description = "Create pure futures using lazy IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unsafely" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unsafely";
       version = "0.2.0.0";
       sha256 = "10v50bzd7ccjs0d1spvyl6awhwdhxmkcacm2lkillk9f7myild0r";
       isLibrary = true;
       isExecutable = true;
       homepage = "http://github.com/konn/unsafely";
       description = "Flexible access control for unsafe operations and instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "unscramble" = callPackage
    ({ mkDerivation, optparse-applicative, stream-fusion
     , unordered-containers
     }:
     mkDerivation {
       pname = "unscramble";
       version = "1.0";
       sha256 = "1zlf9dw3yid6s9p0q837h3qs2wnd9wr9kh282j4j4m0gpv9dcrrf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         optparse-applicative stream-fusion unordered-containers
       ];
       description = "Solve Boggle-like word games";
       license = stdenv.lib.licenses.mit;
     }) {};

  "unusable-pkg" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "unusable-pkg";
       version = "0.1";
       sha256 = "102dzsa64vnbhx2pnnh6q0vn7wag9bd8pmmag3i2yl68iqaqlvpm";
       isLibrary = false;
       isExecutable = true;
       description = "Utility construction of the graph depending unusable packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "up" = callPackage
    ({ mkDerivation, filepath, mtl, parsec, split, transformers }:
     mkDerivation {
       pname = "up";
       version = "0.1.0.2";
       sha256 = "1iawaqbn7lb87zv0bvjvvh8sgjn370insy2brvg2msnj9ba0937m";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl parsec split transformers ];
       description = "Generates pathnames to up directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uploadcare" = callPackage
    ({ mkDerivation, aeson, attoparsec, cryptohash, hex, http-conduit
     , http-types, time
     }:
     mkDerivation {
       pname = "uploadcare";
       version = "0.1";
       sha256 = "1lm7mp8djhxylavihaljqjfsgzpn747plkq6f7yd2dk32xlsb5bz";
       buildDepends = [
         aeson attoparsec cryptohash hex http-conduit http-types time
       ];
       description = "Haskell client for Uploadcare";
       license = stdenv.lib.licenses.mit;
     }) {};

  "upskirt" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "upskirt";
       version = "0.0.4";
       sha256 = "0528345xiq2xmi9fwzv0rvbjqfhcvyhkik8c453yr2nr03k0zs4c";
       description = "Binding to upskirt";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "ureader" = callPackage
    ({ mkDerivation, ansi-wl-pprint, async, curl, data-default, deepseq
     , download-curl, feed, filepath, implicit-params, network, opml
     , optparse-applicative, parallel-io, split, tagsoup, terminal-size
     , text, time, xml
     }:
     mkDerivation {
       pname = "ureader";
       version = "0.2.0.0";
       sha256 = "11zgs8mmmkvddyq6s0x98gdqbdaj6n3rxf6ab3xf1ap2cd4siwb8";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-wl-pprint async curl data-default deepseq download-curl feed
         filepath implicit-params network opml optparse-applicative
         parallel-io split tagsoup terminal-size text time xml
       ];
       homepage = "https://github.com/pxqr/ureader";
       description = "Minimalistic CLI RSS reader";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "urembed" = callPackage
    ({ mkDerivation, cake3, filepath, language-javascript, mime-types
     , mtl, optparse-applicative, syb, text
     }:
     mkDerivation {
       pname = "urembed";
       version = "0.5.0.1";
       sha256 = "0fnr3xskzwxxxk7iv5bmqa18zbr612pn27jjiac0l4wzv33lisik";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cake3 filepath language-javascript mime-types mtl
         optparse-applicative syb text
       ];
       homepage = "http://github.com/grwlf/urembed";
       description = "Ur/Web static content generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uri" = callPackage
    ({ mkDerivation, parsec, safe, utf8-string }:
     mkDerivation {
       pname = "uri";
       version = "0.1.6.3";
       sha256 = "1dhmrn4mq3ia0iv3y2k5pw71a6677q3vdqqf2w4b3aksi6wna49j";
       buildDepends = [ parsec safe utf8-string ];
       homepage = "http://gitorious.org/uri";
       description = "Library for working with URIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uri-conduit" = callPackage
    ({ mkDerivation, conduit, deepseq, failure, monad-control, network
     , system-fileio, system-filepath, text, transformers
     }:
     mkDerivation {
       pname = "uri-conduit";
       version = "1.1.1.2";
       sha256 = "0bmq241in1x0bjffp6nmbz8lf324q926mcddpvmzn2j1ipy7fvg6";
       buildDepends = [
         conduit deepseq failure monad-control network system-fileio
         system-filepath text transformers
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Read and write URIs (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uri-encode" = callPackage
    ({ mkDerivation, network-uri, text, utf8-string }:
     mkDerivation {
       pname = "uri-encode";
       version = "1.5.0.3";
       sha256 = "115wnc7x7gx57qza5az4c1wy0n2f40634529jk0vpxw6bb9b1mzn";
       editedCabalFile = "1gjkbxxwamv6vak2iqn1byxh3z98d13z2nr1y533dv78bjj72ps5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network-uri text utf8-string ];
       description = "Unicode aware uri-encoding";
       license = "unknown";
     }) {};

  "uri-enumerator" = callPackage
    ({ mkDerivation, enumerator, failure, network, text, transformers
     }:
     mkDerivation {
       pname = "uri-enumerator";
       version = "0.1.0.1";
       sha256 = "164yzmx18ykkf2vbl9zhqmbvb80dig8bx3pfadw23a6wyvigmhw5";
       buildDepends = [ enumerator failure network text transformers ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Read and write URIs (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uri-enumerator-file" = callPackage
    ({ mkDerivation, enumerator, lifted-base, monad-control, network
     , system-fileio, system-filepath, text, transformers
     , uri-enumerator
     }:
     mkDerivation {
       pname = "uri-enumerator-file";
       version = "0.1.1.1";
       sha256 = "15ycv01kmwnwq3qkjjcl8ayal0p4klhflzkykm2rlq1d8mi2vmd6";
       buildDepends = [
         enumerator lifted-base monad-control network system-fileio
         system-filepath text transformers uri-enumerator
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "uri-enumerator backend for the file scheme (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uri-template" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "uri-template";
       version = "0.2";
       sha256 = "1y1jqymjbawwdywk770j4rk8sy7p1plvfliwcmqr0h16y31kzlpl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ utf8-string ];
       description = "URI template library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uri-templater" = callPackage
    ({ mkDerivation, ansi-wl-pprint, charset, dlist, HTTP, HUnit, mtl
     , parsers, text, trifecta, unordered-containers, vector
     }:
     mkDerivation {
       pname = "uri-templater";
       version = "0.2.0.0";
       sha256 = "0ypyi5vz7fjgvw1xicjksjfbpvm472dif2jw6pn09jfgqkal075s";
       buildDepends = [
         ansi-wl-pprint charset dlist HTTP mtl parsers text trifecta
         unordered-containers vector
       ];
       testDepends = [ ansi-wl-pprint HUnit mtl ];
       homepage = "http://github.com/sanetracker/uri-templater";
       description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
       license = stdenv.lib.licenses.mit;
     }) {};

  "url" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "url";
       version = "2.1.3";
       sha256 = "0qag18wbrq9jjk1444mjigz1xl7xl03fz66b1lnya9qaihzpxwjs";
       buildDepends = [ utf8-string ];
       homepage = "http://www.haskell.org/haskellwiki/Url";
       description = "A library for working with URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "url-generic" = callPackage
    ({ mkDerivation, mtl, syb }:
     mkDerivation {
       pname = "url-generic";
       version = "0.1";
       sha256 = "0yfcy2nhc67kxb7n9mjxi4z5jcq4iz4kq80fb9lbi461vijhmw5m";
       editedCabalFile = "1fbgzz9yhqc5lx15n551r190g2a6f1plf3clpar76fj3wqn6x4nr";
       buildDepends = [ mtl syb ];
       description = "Parse/format generic key/value URLs from record data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "urlcheck" = callPackage
    ({ mkDerivation, mtl, network }:
     mkDerivation {
       pname = "urlcheck";
       version = "0.1.1";
       sha256 = "1mddlppdb0c9pxvjfm40i0bcrg7wbc61hzlrlv6kir0n1j9yb8ri";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ mtl network ];
       homepage = "http://code.haskell.org/~dons/code/urlcheck";
       description = "Parallel link checker";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "urldecode" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "urldecode";
       version = "1.0.0.2";
       sha256 = "13fip41s78qcnrg4zccd5lk3qbsaax7h5sspc0xjzlaca664hq3y";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network ];
       homepage = "https://github.com/beastaugh/urldecode";
       description = "Decode percent-encoded strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "urldisp-happstack" = callPackage
    ({ mkDerivation, happstack-server, mtl }:
     mkDerivation {
       pname = "urldisp-happstack";
       version = "0.1";
       sha256 = "1kg25w5pnmsnjwycnf0q6d65cqfw5d0xn9rwyn4ybhh3a8q2yaa8";
       buildDepends = [ happstack-server mtl ];
       description = "Simple, declarative, expressive URL routing -- on happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "urlencoded" = callPackage
    ({ mkDerivation, mtl, network, split }:
     mkDerivation {
       pname = "urlencoded";
       version = "0.4.0";
       sha256 = "0idh70apfxx8bkbsxda4xhb0b5xf4x237dwi4v55ildrhxx4b68k";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl network split ];
       homepage = "https://github.com/pheaver/urlencoded";
       description = "Generate or process x-www-urlencoded data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "urlpath" = callPackage
    ({ mkDerivation, mtl, text, transformers }:
     mkDerivation {
       pname = "urlpath";
       version = "0.0.6";
       sha256 = "12sxmybggbc2q842w42sbvcfzdk7azy1jgn804dyp20c6kpnfr6d";
       buildDepends = [ mtl text transformers ];
       description = "Painfully simple URL writing combinators";
       license = stdenv.lib.licenses.mit;
     }) {};

  "urn" = callPackage
    ({ mkDerivation, hspec, parsec }:
     mkDerivation {
       pname = "urn";
       version = "0.1.0.0";
       sha256 = "1wxgq445nzfly9773bjx3mr15l8ga4840d2q1zw50kk07fwxx6h7";
       buildDepends = [ parsec ];
       testDepends = [ hspec ];
       homepage = "https://github.com/pxqr/urn";
       description = "Universal Resource Names";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "urxml" = callPackage
    ({ mkDerivation, filepath, mtl, optparse-applicative, parsec, syb
     }:
     mkDerivation {
       pname = "urxml";
       version = "0.2.0.0";
       sha256 = "141b2dhqpbirqlv53rm3xsl14mq0vxw96r3qhygraw5gp5vlvgl9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl optparse-applicative parsec syb ];
       homepage = "http://github.com/grwlf/urxml";
       description = "XML parser-printer supporting Ur/Web syntax extensions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "usb" = callPackage
    ({ mkDerivation, bindings-libusb, text, vector }:
     mkDerivation {
       pname = "usb";
       version = "1.3.0.0";
       sha256 = "0h9lzjmppq2cbyma3rrk2xfayf4aq1xjz8zh18v53m1ky34rhjgp";
       buildDepends = [ bindings-libusb text vector ];
       homepage = "http://basvandijk.github.com/usb";
       description = "Communicate with USB devices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "usb-enumerator" = callPackage
    ({ mkDerivation, base-unicode-symbols, bindings-libusb, iteratee
     , monad-control, transformers, usb
     }:
     mkDerivation {
       pname = "usb-enumerator";
       version = "0.3";
       sha256 = "1gd132pshcqa8539g1dmx1hpzfdd33x7vpi9d3hrc6q6l6312nfs";
       buildDepends = [
         base-unicode-symbols bindings-libusb iteratee monad-control
         transformers usb
       ];
       description = "Iteratee enumerators for the usb package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "usb-id-database" = callPackage
    ({ mkDerivation, base-unicode-symbols, containers-unicode-symbols
     , parsimony
     }:
     mkDerivation {
       pname = "usb-id-database";
       version = "0.4.0.9";
       sha256 = "1ji6zrglmlkhv743w4d4lrqvhva4yl5kqxb420z44l1wymvgg1s1";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base-unicode-symbols containers-unicode-symbols parsimony
       ];
       homepage = "https://github.com/roelvandijk/usb-id-database";
       description = "A database of USB identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "usb-iteratee" = callPackage
    ({ mkDerivation, base-unicode-symbols, bindings-libusb, iteratee
     , monad-control, usb, vector
     }:
     mkDerivation {
       pname = "usb-iteratee";
       version = "0.5";
       sha256 = "04kv2pfw24d46b135p6mwgf40wb9q43lcy66cbczh4lz0630j771";
       buildDepends = [
         base-unicode-symbols bindings-libusb iteratee monad-control usb
         vector
       ];
       homepage = "https://github.com/basvandijk/usb-iteratee";
       description = "Iteratee enumerators for the usb package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "usb-safe" = callPackage
    ({ mkDerivation, base-unicode-symbols, bindings-libusb, iteratee
     , regions, text, transformers, usb
     }:
     mkDerivation {
       pname = "usb-safe";
       version = "0.14";
       sha256 = "1dhx7y74f2c04dmlsx0i80ar31d6k2qsgh7432c8k0y29iwhdzfm";
       buildDepends = [
         base-unicode-symbols bindings-libusb iteratee regions text
         transformers usb
       ];
       homepage = "https://github.com/basvandijk/usb-safe/";
       description = "Type-safe communication with USB devices";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "utf8-env" = callPackage
    ({ mkDerivation, mtl, utf8-string }:
     mkDerivation {
       pname = "utf8-env";
       version = "0.1";
       sha256 = "0ls2ls2n12igm1day730sp1gfcwxvkkqd2xdp2lmyp2ldp0d72zp";
       buildDepends = [ mtl utf8-string ];
       description = "UTF-8 aware substitutes for functions in System.Environment";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "utf8-light" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "utf8-light";
       version = "0.4.2";
       sha256 = "0rwyc5z331yfnm4hpx0sph6i1zvkd1z10vvglhnp0vc9wy644k0q";
       description = "Unicode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "utf8-prelude" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "utf8-prelude";
       version = "0.1.6";
       sha256 = "156kjn3da02z060srlsm8kqwbxzcscjzxdkp4lmv8zq5zscha5v6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ utf8-string ];
       description = "Variants of Prelude and System.IO with UTF8 text I/O operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "utf8-string" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "utf8-string";
       version = "0.3.8";
       sha256 = "1h29dn0scsfkhmkg14ywq9178lw40ah1r36w249zfzqr02y7qxc0";
       homepage = "http://github.com/glguy/utf8-string/";
       description = "Support for reading and writing UTF8 Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "utility-ht" = callPackage
    ({ mkDerivation, QuickCheck }:
     mkDerivation {
       pname = "utility-ht";
       version = "0.0.10";
       sha256 = "17ydzb0p8xhddvfvm4wjv5yjmy0v7nj6fsj11srnnpj91wc9k0xd";
       testDepends = [ QuickCheck ];
       description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uu-cco" = callPackage
    ({ mkDerivation, ansi-terminal }:
     mkDerivation {
       pname = "uu-cco";
       version = "0.1.0.1";
       sha256 = "1skg22cnsnjp5zzv1q6fk68xryynncx5l1xlcaf8jf76g183c5vi";
       buildDepends = [ ansi-terminal ];
       homepage = "https://github.com/UU-ComputerScience/uu-cco";
       description = "Utilities for compiler construction: core functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uu-cco-examples" = callPackage
    ({ mkDerivation, uu-cco, uuagc, uuagc-cabal }:
     mkDerivation {
       pname = "uu-cco-examples";
       version = "0.1.0.1";
       sha256 = "1i8idcbq602hl1il326lq9b5gcjm9qn00wpragr1kj676g615024";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ uu-cco uuagc uuagc-cabal ];
       homepage = "https://github.com/UU-ComputerScience/uu-cco";
       description = "Utilities for compiler construction: example programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uu-cco-hut-parsing" = callPackage
    ({ mkDerivation, uu-cco, uulib }:
     mkDerivation {
       pname = "uu-cco-hut-parsing";
       version = "0.1.0.1";
       sha256 = "06ddh2fcvy0zbzzdgpcx8kvlssrcmxx4swgkl8iy7223llanx0px";
       buildDepends = [ uu-cco uulib ];
       homepage = "https://github.com/UU-ComputerScience/uu-cco";
       description = "Utilities for compiler construction: Feedback wrapper around parser in uulib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uu-cco-uu-parsinglib" = callPackage
    ({ mkDerivation, ListLike, uu-cco, uu-parsinglib }:
     mkDerivation {
       pname = "uu-cco-uu-parsinglib";
       version = "0.1.0.1";
       sha256 = "1sshnlqb0ydxgrhm0i1c3mpnixfsqwrf3gl59yz4rhiw5hy33z71";
       buildDepends = [ ListLike uu-cco uu-parsinglib ];
       homepage = "https://github.com/UU-ComputerScience/uu-cco";
       description = "Utilities for compiler construction: Feedback wrapper around parser in uu-parsinglib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uu-interleaved" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "uu-interleaved";
       version = "0.1.0.0";
       sha256 = "00zq89fjz3r5pj6qbci017cm9y2rsvl265y9d95q0rv6ljhsayzs";
       homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
       description = "Providing an interleaving combinator for use with applicative/alternative style implementations";
       license = stdenv.lib.licenses.mit;
     }) {};

  "uu-options" = callPackage
    ({ mkDerivation, lenses, mtl, transformers, uu-interleaved
     , uu-parsinglib
     }:
     mkDerivation {
       pname = "uu-options";
       version = "0.1.0.1";
       sha256 = "0dygg4w3rlnf1pnmwq7i6vzz0v90b4g18ipfc5whn1ss1bixwxk4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         lenses mtl transformers uu-interleaved uu-parsinglib
       ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
       description = "Parse command line options using uu-interleave and uu-parsinglib";
       license = stdenv.lib.licenses.mit;
     }) {};

  "uu-parsinglib" = callPackage
    ({ mkDerivation, ListLike, time, uu-interleaved }:
     mkDerivation {
       pname = "uu-parsinglib";
       version = "2.8.1.1";
       sha256 = "1mz8sni7mj85b0ih0y1ld7lcj74iq5z2xi1lbwwndpqra9ahc5s6";
       buildDepends = [ ListLike time uu-interleaved ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
       description = "Fast, online, error-correcting, monadic, applicative, merging, permuting, idiomatic parser combinators";
       license = stdenv.lib.licenses.mit;
     }) {};

  "uu-tc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "uu-tc";
       version = "2009.2.2";
       sha256 = "0s7b23r7gnavwnvzpi25mc0hyg605ms249k5i4661nqpfiwn7zry";
       description = "Haskell 98 parser combintors for INFOB3TC at Utrecht University";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uuagc" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, mtl, uuagc-cabal
     , uulib
     }:
     mkDerivation {
       pname = "uuagc";
       version = "0.9.51";
       sha256 = "07nymg525x41y8pl94d0n990h1yz5km8v0fasiggqv94sd04j22w";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath haskell-src-exts mtl uuagc-cabal uulib ];
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       description = "Attribute Grammar System of Universiteit Utrecht";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uuagc-bootstrap" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, mtl, uulib }:
     mkDerivation {
       pname = "uuagc-bootstrap";
       version = "0.9.40.2";
       sha256 = "0zsb8pz2zx7y8sjp392hpdk30dzzmppjizcnlgd1wvq2csacnfxq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath haskell-src-exts mtl uulib ];
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       description = "Attribute Grammar System of Universiteit Utrecht";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uuagc-cabal" = callPackage
    ({ mkDerivation, Cabal, filepath, mtl, uulib }:
     mkDerivation {
       pname = "uuagc-cabal";
       version = "1.0.6.0";
       sha256 = "02xqj4vz7hir0llxl8n517qv22jlmilknhqzx4l55gccffg7zj6w";
       buildDepends = [ Cabal filepath mtl uulib ];
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       description = "Cabal plugin for the Universiteit Utrecht Attribute Grammar System";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uuagc-diagrams" = callPackage
    ({ mkDerivation, diagrams-lib, SVGFonts }:
     mkDerivation {
       pname = "uuagc-diagrams";
       version = "0.1.0.0";
       sha256 = "1ai61r0sdi900anwl767v3j1zykgh80m3xqzr05hp6k16d0j38ms";
       buildDepends = [ diagrams-lib SVGFonts ];
       description = "Utility for drawing attribute grammar pictures with the diagrams package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uuagd" = callPackage
    ({ mkDerivation, blaze-html }:
     mkDerivation {
       pname = "uuagd";
       version = "0.1.0.2";
       sha256 = "1gcznzb8hr2x5mr5pgfqhnvjjrll96g855g4niacw5bd52wdvsla";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ blaze-html ];
       homepage = "https://github.com/matthijssteen/uuagd";
       description = "A debugger for the UUAG system";
       license = "unknown";
     }) {};

  "uuid" = callPackage
    ({ mkDerivation, binary, cryptohash, deepseq, hashable, HUnit
     , network-info, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "uuid";
       version = "1.3.6";
       sha256 = "0llfpcx6jpsfk88m8b6p32w6f758glxq4v4mxphsa62bdvl31sgg";
       buildDepends = [
         binary cryptohash deepseq hashable network-info random time
       ];
       testDepends = [
         HUnit QuickCheck random test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/aslatter/uuid";
       description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uuid-aeson" = callPackage
    ({ mkDerivation, aeson, text, uuid }:
     mkDerivation {
       pname = "uuid-aeson";
       version = "0.1.0.0";
       sha256 = "0nd2xm908zycrbmrayi6d4c9p9rfplsjkwnz43nrq94xjn1dp2yg";
       buildDepends = [ aeson text uuid ];
       description = "Aeson types for UUID instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uuid-le" = callPackage
    ({ mkDerivation, uuid }:
     mkDerivation {
       pname = "uuid-le";
       version = "0.2014.1";
       sha256 = "1gfm7bxmr2b5hn4x3dr231ra0b1nwp36x2808w3l43yglz8zwp74";
       buildDepends = [ uuid ];
       description = "Universally Unique Identifiers with little-endian-ish encoding tools";
       license = stdenv.lib.licenses.mit;
     }) {};

  "uuid-quasi" = callPackage
    ({ mkDerivation, uuid }:
     mkDerivation {
       pname = "uuid-quasi";
       version = "0.1.0.1";
       sha256 = "09ijnbj2znaqanaxghql3yy1fqb0nsjhrwi6kfzg4h8nrw1ir2pj";
       buildDepends = [ uuid ];
       homepage = "http://github.com/lpeterse/uuid-quasi";
       description = "Supplemental package for 'uuid' allowing quasiquotation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uulib" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "uulib";
       version = "0.9.16";
       sha256 = "06d9i712flxj62j7rdxvy9b0ximhdfvdakwpmr886l6fi3xpajl3";
       homepage = "http://www.cs.uu.nl/wiki/HUT/WebHome";
       description = "Haskell Utrecht Tools Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uvector" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "uvector";
       version = "0.1.1.1";
       sha256 = "1psbdsq20nr28cr9ni2mwzwkpz3p20n1xqp0m0m9qafz66d2vi08";
       homepage = "http://code.haskell.org/~dons/code/uvector";
       description = "Fast unboxed arrays with a flexible interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uvector-algorithms" = callPackage
    ({ mkDerivation, uvector }:
     mkDerivation {
       pname = "uvector-algorithms";
       version = "0.2";
       sha256 = "0jzlirrar7grq3h02k22zxyvy1wmfrjw9lscnhpjqmsxjli1jh81";
       buildDepends = [ uvector ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "Efficient algorithms for uvector unboxed arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "uxadt" = callPackage
    ({ mkDerivation, json, MissingH, mtl }:
     mkDerivation {
       pname = "uxadt";
       version = "0.0.16.0";
       sha256 = "0qmp5k4wg5ja2382cwarf8fwjval2a5wdwvz32f965hvwgc9cd43";
       buildDepends = [ json MissingH mtl ];
       description = "Cross-language extensible representation for algebraic data type instances";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "uzbl-with-source" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "uzbl-with-source";
       version = "0.1.0.0";
       sha256 = "0q6n18kqga839gkdgdwsfbnbpfm4hh1qjln17qnmfxm3ylh2l9la";
       homepage = "http://github.com/Fuuzetsu/uzbl-with-source";
       description = "Utility function for reading a source of loaded uzbl pages";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "v4l2" = callPackage
    ({ mkDerivation, bindings-DSL, bindings-libv4l2
     , bindings-linux-videodev2, bindings-posix, ioctl
     }:
     mkDerivation {
       pname = "v4l2";
       version = "0.1.0.3";
       sha256 = "1hhdpljlic1kyz0pgnv9a04z6prv7rl3x5bam5j0yhm5vijrisgp";
       buildDepends = [
         bindings-DSL bindings-libv4l2 bindings-linux-videodev2
         bindings-posix ioctl
       ];
       homepage = "https://gitorious.org/hsv4l2";
       description = "interface to Video For Linux Two (V4L2)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "v4l2-examples" = callPackage
    ({ mkDerivation, GLUT, v4l2 }:
     mkDerivation {
       pname = "v4l2-examples";
       version = "0.1.0.2";
       sha256 = "1knn4cbvvk1vsn9if87hqfg761n4410p08g7vlav900svfm8i1l5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ GLUT v4l2 ];
       homepage = "https://gitorious.org/hsv4l2";
       description = "video for linux two examples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vacuum" = callPackage
    ({ mkDerivation, ghcPaths }:
     mkDerivation {
       pname = "vacuum";
       version = "2.2.0.0";
       sha256 = "157wjx2shzfh6dfl6h8x017cn9ji3ql1p0gpi79ginz4s81f2ny1";
       extraLibraries = [ ghcPaths ];
       homepage = "http://thoughtpolice.github.com/vacuum";
       description = "Graph representation of the GHC heap";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "vacuum-cairo" = callPackage
    ({ mkDerivation, cairo, deepseq, gtk, strict-concurrency, svgcairo
     , vacuum
     }:
     mkDerivation {
       pname = "vacuum-cairo";
       version = "0.5";
       sha256 = "0jp3xn1h28igcg3xb97ifawx11i7adnyi0ff264w0fril9b8ylwc";
       buildDepends = [
         cairo deepseq gtk strict-concurrency svgcairo vacuum
       ];
       homepage = "http://code.haskell.org/~dons/code/vacuum-cairo";
       description = "Visualize live Haskell data structures using vacuum, graphviz and cairo";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vacuum-graphviz" = callPackage
    ({ mkDerivation, filepath, graphviz, vacuum }:
     mkDerivation {
       pname = "vacuum-graphviz";
       version = "2.1.0.1";
       sha256 = "093ba6n30a6gyifnk3bd50rkx8qldjqq9vsk92pnq152ibs36b2m";
       buildDepends = [ filepath graphviz vacuum ];
       description = "A library for transforming vacuum graphs into GraphViz output";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "vacuum-opengl" = callPackage
    ({ mkDerivation, bitmap, bitmap-opengl, filepath, GLUT, network
     , OpenGL, stb-image, vacuum
     }:
     mkDerivation {
       pname = "vacuum-opengl";
       version = "0.0.3";
       sha256 = "1dxw3apbf59b7vi4a1gnp29ia1s2q9vx79ns7257cg9cazb01z7j";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         bitmap bitmap-opengl filepath GLUT network OpenGL stb-image vacuum
       ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Visualize live Haskell data structures using vacuum, graphviz and OpenGL";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "vacuum-ubigraph" = callPackage
    ({ mkDerivation, hubigraph, vacuum }:
     mkDerivation {
       pname = "vacuum-ubigraph";
       version = "0.2.0.2";
       sha256 = "0zpag42dr2763ddrwdy7744lqkd6207ljfw3bqm6db3a1128861z";
       buildDepends = [ hubigraph vacuum ];
       description = "Visualize Haskell data structures using vacuum and Ubigraph";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vado" = callPackage
    ({ mkDerivation, attoparsec, filepath, QuickCheck, text }:
     mkDerivation {
       pname = "vado";
       version = "0.0.3";
       sha256 = "1s6fb19p3lc6g13ryh7bmxciv62v8m0ihvzrymsj0nn6jghiys5f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec filepath text ];
       testDepends = [ attoparsec filepath QuickCheck text ];
       homepage = "https://github.com/hamishmack/vado";
       description = "Runs commands on remote machines using ssh";
       license = stdenv.lib.licenses.mit;
     }) {};

  "valid-names" = callPackage
    ({ mkDerivation, MonadRandom }:
     mkDerivation {
       pname = "valid-names";
       version = "0.1.0.1";
       sha256 = "14gpkb6pbkvmny17g2gpq6i6kq7ahmcnkgrcrwm72vda12wxsl78";
       buildDepends = [ MonadRandom ];
       homepage = "https://i.joelt.io/symbols.html";
       description = "Valid operator/module characters";
       license = stdenv.lib.licenses.mit;
     }) {};

  "validate" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "validate";
       version = "2.0.0";
       sha256 = "19d02sblyxg73prlrmlcs4vclzxzg2pzlrp67f2kx94nsw0v3l4p";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "validation" = callPackage
    ({ mkDerivation, bifunctors, doctest, filepath, lens, QuickCheck
     , semigroupoids, semigroups, transformers
     }:
     mkDerivation {
       pname = "validation";
       version = "0.4.2";
       sha256 = "0rsa3n3zawywbpi1gvhfrfglxf9mkmkidkc216ld3s02pmsdmclm";
       buildDepends = [
         bifunctors lens semigroupoids semigroups transformers
       ];
       testDepends = [ doctest filepath QuickCheck ];
       homepage = "https://github.com/tonymorris/validation";
       description = "A data-type like Either but with an accumulating Applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "validations" = callPackage
    ({ mkDerivation, digestive-functors, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, transformers
     }:
     mkDerivation {
       pname = "validations";
       version = "0.1.0.2";
       sha256 = "0nviyyp0nlpilp2byckrcmbd2n6wp40pq7m10da9b24hmwajkdwk";
       buildDepends = [ digestive-functors mtl text transformers ];
       testDepends = [
         digestive-functors HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text transformers
       ];
       homepage = "https://github.com/mavenraven/validations";
       description = "A nice way to define field validations in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "value-supply" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "value-supply";
       version = "0.6";
       sha256 = "0fd6rk46sgdbdmfdr9wy0f3qzwaymgd9hl9v735g2a4bqiqanmb5";
       description = "A library for generating values without having to thread state";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vampire" = callPackage
    ({ mkDerivation, deepseq, dlist, fgl, graphviz, haskell-src-exts
     , mtl, optparse-applicative, uniplate
     }:
     mkDerivation {
       pname = "vampire";
       version = "0.1.3.0";
       sha256 = "16f1mdsyyfdgjcp3rzf3p1qj3d6la01i9y1yyp97m5nmd2jxsn1q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         deepseq dlist fgl graphviz haskell-src-exts mtl
         optparse-applicative uniplate
       ];
       homepage = "https://github.com/benzrf/vampire";
       description = "Analyze and visualize expression trees";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "var" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "var";
       version = "0.2.0.0";
       sha256 = "1vc36yy8mvzy14jj8ly8ldc4d9vrcgyjfq3dpnzp6fhycg5kkv2i";
       buildDepends = [ transformers ];
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/sonyandy/var";
       description = "Mutable variables and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "varan" = callPackage
    ({ mkDerivation, ansi-terminal, cmdargs, mtl, parallel, random
     , statistics
     }:
     mkDerivation {
       pname = "varan";
       version = "0.5.1";
       sha256 = "1hvpx4jw0lwcnc4x8vwdqp7rv8779p7xaw57cphkax13f3rwm372";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         ansi-terminal cmdargs mtl parallel random statistics
       ];
       description = "Process mpileup output to identify significant differences";
       license = "GPL";
     }) {};

  "variable-precision" = callPackage
    ({ mkDerivation, complex-generic, floatshow
     , type-level-natural-number
     }:
     mkDerivation {
       pname = "variable-precision";
       version = "0.4";
       sha256 = "1qd6mnbg06fn31vp9d4yan8rqxyymjljrlr7m4yvn2ppw560p564";
       buildDepends = [
         complex-generic floatshow type-level-natural-number
       ];
       homepage = "https://gitorious.org/variable-precision";
       description = "variable-precision floating point";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "variables" = callPackage
    ({ mkDerivation, hspec, mtl, QuickCheck, stm }:
     mkDerivation {
       pname = "variables";
       version = "0.1.1";
       sha256 = "0garxmxm11qhp2wm7xib4nrlkfiqbyzf3glkdbqb582nip0sb1rp";
       buildDepends = [ mtl stm ];
       testDepends = [ hspec mtl QuickCheck stm ];
       homepage = "https://github.com/prophile/variables";
       description = "Monads with variables, without deep magic";
       license = stdenv.lib.licenses.mit;
     }) {};

  "vault" = callPackage
    ({ mkDerivation, hashable, unordered-containers }:
     mkDerivation {
       pname = "vault";
       version = "0.3.0.3";
       sha256 = "0wpj73jbwgcva1hfjc0bpf9l3lfc3iwdz70m29dh1785wvzxhsh5";
       buildDepends = [ hashable unordered-containers ];
       homepage = "https://github.com/HeinrichApfelmus/vault";
       description = "a persistent store for values of arbitrary types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vcard" = callPackage
    ({ mkDerivation, mime-directory }:
     mkDerivation {
       pname = "vcard";
       version = "0.1.4";
       sha256 = "1wa1pdfw7ykmq72af63fh999il5nighf7689265hn3i5awm1m16p";
       buildDepends = [ mime-directory ];
       homepage = "http://github.com/mboes/vCard";
       description = "A library for parsing/printing vCards from/to various formats";
       license = "LGPL";
     }) {};

  "vcd" = callPackage
    ({ mkDerivation, polyparse }:
     mkDerivation {
       pname = "vcd";
       version = "0.2.2";
       sha256 = "0x0smhllghzn0xjfk5cwxaf1vnd2yp3saxw92ylyws8a546mzhzm";
       buildDepends = [ polyparse ];
       homepage = "http://tomahawkins.org";
       description = "Reading and writing VCD files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vcs-revision" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "vcs-revision";
       version = "0.0.2";
       sha256 = "1lp1wf440n7kinmxz7la0gyfqfdlip6f0bn8pmwkxd1dqyrvg5cg";
       description = "Facilities for accessing the version control revision of the current directory";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vcsgui" = callPackage
    ({ mkDerivation, filepath, gtk3, mtl, text, vcswrapper }:
     mkDerivation {
       pname = "vcsgui";
       version = "0.1.1.0";
       sha256 = "1sjkg1ncmpymv9m5ag1f4ia4pdak05bgb03d28jd84p24qvshqyk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath gtk3 mtl text vcswrapper ];
       homepage = "https://github.com/forste/haskellVCSGUI";
       description = "GUI library for source code management systems";
       license = "GPL";
     }) {};

  "vcswrapper" = callPackage
    ({ mkDerivation, filepath, hxt, mtl, parsec, split, text }:
     mkDerivation {
       pname = "vcswrapper";
       version = "0.1.1";
       sha256 = "056gdgmyprvbz61gfffkpwfyh4m7f9fnglk69jp4xh4jfx1wr7ni";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath hxt mtl parsec split text ];
       homepage = "https://github.com/forste/haskellVCSWrapper";
       description = "Wrapper for source code management systems";
       license = "GPL";
     }) {};

  "vect" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "vect";
       version = "0.4.7";
       sha256 = "1049jh8rcxfnyckz5m5asdlyafqszlig96k387raldyfzbrf8f4d";
       buildDepends = [ random ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "A low-dimensional linear algebra library, tailored to computer graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vect-floating" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "vect-floating";
       version = "0.1.0.4";
       sha256 = "1kxsjsiqqpi7k0xz597z7r2fd45s38plgk6jplzxagg0i3bm0q4g";
       buildDepends = [ random ];
       homepage = "http://github.com/cpdurham/vect-floating";
       description = "A low-dimensional linear algebra library, operating on the Floating typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vect-floating-accelerate" = callPackage
    ({ mkDerivation, accelerate, vect-floating }:
     mkDerivation {
       pname = "vect-floating-accelerate";
       version = "0.1.0.4";
       sha256 = "10mn2gvpkp14j7rc7cc66x30k7xh56xpp04ak1aj8p46rsy75s4x";
       editedCabalFile = "05k20xd7rcf3hypbbw53bv8yl65sgpdawdfmskypk3mbl1w5fymg";
       buildDepends = [ accelerate vect-floating ];
       homepage = "http://github.com/cpdurham/vect-floating-accelerate";
       description = "Accelerate instances for vect-floating types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vect-opengl" = callPackage
    ({ mkDerivation, OpenGL, vect }:
     mkDerivation {
       pname = "vect-opengl";
       version = "0.4.6.1";
       sha256 = "1qp98j6bgldjcs71pd7iqc5sjf1ixb1jj0l267hw532j4yf81dig";
       buildDepends = [ OpenGL vect ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "OpenGL support for the `vect' low-dimensional linear algebra library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector" = callPackage
    ({ mkDerivation, deepseq, primitive, QuickCheck, random
     , test-framework, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "vector";
       version = "0.10.12.2";
       sha256 = "01hc71k1z9m0g0dv4zsvq5d2dvbgyc5p01hryw5c53792yi2fm25";
       buildDepends = [ deepseq primitive ];
       testDepends = [
         QuickCheck random test-framework test-framework-quickcheck2
         transformers
       ];
       configureFlags = "${stdenv.lib.optionalString stdenv.isi686 "--ghc-options=-msse2"}";
       homepage = "https://github.com/haskell/vector";
       description = "Efficient Arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-algorithms" = callPackage
    ({ mkDerivation, mtl, mwc-random, primitive, QuickCheck, vector }:
     mkDerivation {
       pname = "vector-algorithms";
       version = "0.6.0.3";
       sha256 = "1kz4b41y7swad6mbx0g3adc8lqma8pl3rnzah71cfdvb87gssbn4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl mwc-random primitive vector ];
       testDepends = [ QuickCheck vector ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "Efficient algorithms for vector arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-binary" = callPackage
    ({ mkDerivation, binary, vector }:
     mkDerivation {
       pname = "vector-binary";
       version = "0.1.1";
       sha256 = "1qdjibh3ywfa0lvawdahnr9qhh2qy6899lm5inbzmksjpykgbazz";
       buildDepends = [ binary vector ];
       homepage = "https://github.com/kawu/vector-binary";
       description = "Binary instances for vector types (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-binary-instances" = callPackage
    ({ mkDerivation, binary, cereal, vector }:
     mkDerivation {
       pname = "vector-binary-instances";
       version = "0.2.1.0";
       sha256 = "028rsf2w193rhs1gic5yvvrwidw9sblczcn10aw64npfc6502l4l";
       buildDepends = [ binary cereal vector ];
       homepage = "https://github.com/bos/vector-binary-instances";
       description = "Instances of Data.Binary and Data.Serialize for vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-buffer" = callPackage
    ({ mkDerivation, deepseq, vector }:
     mkDerivation {
       pname = "vector-buffer";
       version = "0.4";
       sha256 = "00dr9fm91q091jv19b0fpzjq297fhh7b5xmpyypm26pkzzb7vqz7";
       buildDepends = [ deepseq vector ];
       description = "A buffer compatible with Data.Vector.*";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-bytestring" = callPackage
    ({ mkDerivation, criterion, deepseq, primitive, QuickCheck, random
     , vector
     }:
     mkDerivation {
       pname = "vector-bytestring";
       version = "0.0.0.1";
       sha256 = "0xiksm1136azrcidcsi9g59i1nb9r8lhzsn1fhnp830sr63fy7k4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ criterion deepseq primitive vector ];
       testDepends = [ QuickCheck random ];
       homepage = "https://github.com/basvandijk/vector-bytestring";
       description = "ByteStrings as type synonyms of Storable Vectors of Word8s";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-clock" = callPackage
    ({ mkDerivation, binary, hashable, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "vector-clock";
       version = "0.2.2";
       sha256 = "0ndp25w61rcj4sadvhxlirrk1dhk7rmdzv9kha7kyqa41whr9629";
       buildDepends = [ binary hashable ];
       testDepends = [
         binary HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/scvalex/vector-clock";
       description = "Vector clocks for versioning message flows";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "vector-conduit" = callPackage
    ({ mkDerivation, conduit, HUnit, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector
     }:
     mkDerivation {
       pname = "vector-conduit";
       version = "0.5.0.0";
       sha256 = "10mqmxfqzqcgxf0isv611ailq03smdfybviamxpskncbf15sc6g1";
       buildDepends = [ conduit primitive vector ];
       testDepends = [
         conduit HUnit primitive QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       description = "Conduit utilities for vectors";
       license = stdenv.lib.licenses.mit;
     }) {};

  "vector-fftw" = callPackage
    ({ mkDerivation, fftw3, primitive, storable-complex, vector }:
     mkDerivation {
       pname = "vector-fftw";
       version = "0.1.3.2";
       sha256 = "0rfvr86yiwp4wb9qjggbbacmgkfj6xrk6h7xb4xmhmk88slvifm0";
       buildDepends = [ primitive storable-complex vector ];
       extraLibraries = [ fftw3 ];
       homepage = "http://hackage.haskell.org/package/vector-fftw";
       description = "A binding to the fftw library for one-dimensional vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-functorlazy" = callPackage
    ({ mkDerivation, primitive, vector, vector-th-unbox }:
     mkDerivation {
       pname = "vector-functorlazy";
       version = "0.0.1";
       sha256 = "0ysic3f5xw675bk095pby9ihbgcxpkj4pgp61dwr354w28l0yc03";
       buildDepends = [ primitive vector vector-th-unbox ];
       homepage = "http://github.com/mikeizbicki/vector-functorlazy/";
       description = "vectors that perform the fmap operation in constant time";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-heterogenous" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "vector-heterogenous";
       version = "0.2.0";
       sha256 = "14v0qj2r484pwbjhdymvdqjnsbqszl9wr71hv6wsvs2d8ja1bajl";
       buildDepends = [ vector ];
       homepage = "http://github.com/mikeizbicki/vector-heterogenous/";
       description = "A type-safe library for vectors whose elements can be of any type, or any type satisfying some constraints";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-instances" = callPackage
    ({ mkDerivation, comonad, keys, pointed, semigroupoids, semigroups
     , vector
     }:
     mkDerivation {
       pname = "vector-instances";
       version = "3.3";
       sha256 = "0iiw9p2ivcdfsh81vdy4yn6hbigdwclrkssd68hdsg9n6q3fmq5y";
       buildDepends = [
         comonad keys pointed semigroupoids semigroups vector
       ];
       homepage = "http://github.com/ekmett/vector-instances";
       description = "Orphan Instances for 'Data.Vector'";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-instances-collections" = callPackage
    ({ mkDerivation, collections-api, vector }:
     mkDerivation {
       pname = "vector-instances-collections";
       version = "0.1.0.1";
       sha256 = "13xk2iwdwrnmdm33z0fmj4sg3irih4ayl3q5pgz31qs9kcsbhi0s";
       buildDepends = [ collections-api vector ];
       homepage = "http://github.com/kreuzschlitzschraubenzieher/vector-instances-collections";
       description = "Instances of the Data.Collections classes for Data.Vector.*";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-mmap" = callPackage
    ({ mkDerivation, mmap, primitive, vector }:
     mkDerivation {
       pname = "vector-mmap";
       version = "0.0.2";
       sha256 = "03hczjc7j1hxnny912cblxdwn908gwm012w03zgj2v9avldp0gmr";
       buildDepends = [ mmap primitive vector ];
       homepage = "http://github.com/pumpkin/vector-mmap";
       description = "Memory map immutable and mutable vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-random" = callPackage
    ({ mkDerivation, mersenne-random-pure64, vector }:
     mkDerivation {
       pname = "vector-random";
       version = "0.2";
       sha256 = "1f74q4bs5mbcw8xg4sxb46ks5x121lbbr6cl09ssr09cpykkbdvb";
       buildDepends = [ mersenne-random-pure64 vector ];
       homepage = "http://code.haskell.org/~dons/code/vector-random";
       description = "Generate vectors filled with high quality pseudorandom numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-read-instances" = callPackage
    ({ mkDerivation, vector }:
     mkDerivation {
       pname = "vector-read-instances";
       version = "0.0.2.0";
       sha256 = "1k30n5qh16sdfxy77vp10bx52lb1ffmjn70vg87hx12j8wg9vbv6";
       buildDepends = [ vector ];
       homepage = "http://www.tbi.univie.ac.at/~choener/";
       description = "(deprecated) Read instances for 'Data.Vector'";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-space" = callPackage
    ({ mkDerivation, Boolean, MemoTrie, NumInstances }:
     mkDerivation {
       pname = "vector-space";
       version = "0.8.7";
       sha256 = "1i3c34b3ngksmw4blhldap8fiw1jddm2h1qyr92csn3cllj6j1vm";
       buildDepends = [ Boolean MemoTrie NumInstances ];
       description = "Vector & affine spaces, linear maps, and derivatives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-space-map" = callPackage
    ({ mkDerivation, vector-space }:
     mkDerivation {
       pname = "vector-space-map";
       version = "0.1.0.1";
       sha256 = "1s5hh7dlbw1ai3nqqcavrqgidddfj99mi0gmhf2x2zn6ag86xr8b";
       buildDepends = [ vector-space ];
       homepage = "https://github.com/conklech/vector-space-map";
       description = "vector-space operations for finite maps using Data.Map";
       license = stdenv.lib.licenses.mit;
     }) {};

  "vector-space-opengl" = callPackage
    ({ mkDerivation, ieee754, OpenGL, QuickCheck, test-framework
     , test-framework-quickcheck2, test-framework-th, vector-space
     }:
     mkDerivation {
       pname = "vector-space-opengl";
       version = "0.2";
       sha256 = "17rczadmjiblh96r7bfcxy53m7ig534qqcf35i7w6x90354dyiaw";
       buildDepends = [ OpenGL vector-space ];
       testDepends = [
         ieee754 OpenGL QuickCheck test-framework test-framework-quickcheck2
         test-framework-th vector-space
       ];
       description = "Instances of vector-space classes for OpenGL types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-space-points" = callPackage
    ({ mkDerivation, vector-space }:
     mkDerivation {
       pname = "vector-space-points";
       version = "0.2";
       sha256 = "05wczgvcqwqhcr4v0md4x5vybq6ns8rk6459yqyrc96kaig0sf2i";
       buildDepends = [ vector-space ];
       description = "A type for points, as distinct from vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-static" = callPackage
    ({ mkDerivation, primitive, vector }:
     mkDerivation {
       pname = "vector-static";
       version = "0.3.0.1";
       sha256 = "19spzrk64j2rgyi15dvs8gfbx3nc79ybssaxkv8dn9df4fwksv91";
       buildDepends = [ primitive vector ];
       homepage = "http://github.com/geezusfreeek/vector-static";
       description = "Statically checked sizes on Data.Vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-strategies" = callPackage
    ({ mkDerivation, deepseq, parallel, vector }:
     mkDerivation {
       pname = "vector-strategies";
       version = "0.4";
       sha256 = "04vaizcc78q94vpaly28iwhlwk6nwrsa6jmcq2afdl6yqp63njc6";
       buildDepends = [ deepseq parallel vector ];
       description = "A parallel evaluation strategy for boxed vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vector-th-unbox" = callPackage
    ({ mkDerivation, data-default, vector }:
     mkDerivation {
       pname = "vector-th-unbox";
       version = "0.2.1.0";
       sha256 = "0r8yxj63hvkm923y8mk1b5kv1b15lqadxhlncc02glvmy8zf1prh";
       buildDepends = [ vector ];
       testDepends = [ data-default vector ];
       description = "Deriver for Data.Vector.Unboxed using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "verbalexpressions" = callPackage
    ({ mkDerivation, regex-pcre }:
     mkDerivation {
       pname = "verbalexpressions";
       version = "1.0.0.0";
       sha256 = "0wai72bqb1vp4p7ml1yj2jdmkjglihai9vhmgj7ri6y2qgzkpwly";
       buildDepends = [ regex-pcre ];
       homepage = "https://github.com/VerbalExpressions/HaskellVerbalExpressions";
       description = "Regular expressions made easy";
       license = stdenv.lib.licenses.mit;
     }) {};

  "verilog" = callPackage
    ({ mkDerivation, alex, happy, monadLib }:
     mkDerivation {
       pname = "verilog";
       version = "0.0.9";
       sha256 = "0i7jc3lriy0ad4ixkf7lj7yis9lzs9j3wh5la7rlawvfq8hj0sag";
       buildDepends = [ monadLib ];
       buildTools = [ alex happy ];
       homepage = "http://github.com/tomahawkins/verilog";
       description = "Verilog parser and DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vhd" = callPackage
    ({ mkDerivation, byteable, cereal, cipher-aes, cryptohash, filepath
     , mmap, QuickCheck, random, storable-endian, test-framework
     , test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "vhd";
       version = "0.2.2";
       sha256 = "0z7a17j0rd06kvn3v4qr0fhxg0xw6n3579477y2lvx4mcc3qyrvw";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         byteable cereal cipher-aes cryptohash filepath mmap random
         storable-endian text time
       ];
       testDepends = [
         byteable cereal cryptohash filepath mmap QuickCheck random
         test-framework test-framework-quickcheck2 text time
       ];
       homepage = "https://github.com/vincenthz/hs-vhd";
       description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vhdl" = callPackage
    ({ mkDerivation, mtl, regex-posix }:
     mkDerivation {
       pname = "vhdl";
       version = "0.1.2.1";
       sha256 = "1bi8n8m9an1hcj4c6i2ifqyadg32nq4viffi1kiihaw3j7dh552b";
       buildDepends = [ mtl regex-posix ];
       description = "VHDL AST and pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "views" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "views";
       version = "1.0";
       sha256 = "0kzwp58lki3jvx09n6w8rc97idhy947xqik72p2fqjyigkymv04h";
       buildDepends = [ mtl ];
       description = "Views allow you to run a State monad on part of a state";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vigilance" = callPackage
    ({ mkDerivation, acid-state, aeson, async, attoparsec
     , blaze-builder, classy-prelude, configurator, data-store, derive
     , either, entropy, errors, fast-logger, hspec, hspec-expectations
     , http-streams, http-types, HUnit, interpolatedstring-perl6
     , io-streams, lens, mime-mail, monad-logger, monad-loops, mtl
     , optparse-applicative, QuickCheck, quickcheck-properties, safecopy
     , stm, text, time, transformers, unordered-containers, vector, wai
     , wai-extra, warp, yesod, yesod-core, yesod-platform
     }:
     mkDerivation {
       pname = "vigilance";
       version = "0.1.0.1";
       sha256 = "1qmwqc2cgrmcjcdfwz0hmfn1irzrwbb7mybrl7myf711sri9ng45";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         acid-state aeson async attoparsec blaze-builder classy-prelude
         configurator data-store either entropy errors fast-logger
         http-streams http-types interpolatedstring-perl6 io-streams lens
         mime-mail monad-logger monad-loops mtl optparse-applicative
         safecopy stm text time transformers unordered-containers vector wai
         wai-extra warp yesod yesod-core yesod-platform
       ];
       testDepends = [
         acid-state aeson async attoparsec blaze-builder classy-prelude
         configurator data-store derive entropy errors fast-logger hspec
         hspec-expectations http-streams http-types HUnit
         interpolatedstring-perl6 io-streams lens mime-mail monad-loops mtl
         QuickCheck quickcheck-properties safecopy stm text time
         transformers unordered-containers vector warp yesod yesod-core
         yesod-platform
       ];
       homepage = "http://github.com/michaelxavier/vigilance";
       description = "An extensible dead-man's switch system";
       license = stdenv.lib.licenses.mit;
     }) {};

  "vimus" = callPackage
    ({ mkDerivation, c2hs, data-default, deepseq, filepath, hspec
     , hspec-expectations, libmpd, mtl, ncurses, QuickCheck, time
     , transformers, utf8-string, wcwidth
     }:
     mkDerivation {
       pname = "vimus";
       version = "0.2.0";
       sha256 = "0s7hfyil9rnr9rmjb08g1l1sxybx3qdkw2f59p433fkdjp2m140h";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-default deepseq filepath libmpd mtl time utf8-string wcwidth
       ];
       testDepends = [
         data-default hspec hspec-expectations mtl QuickCheck transformers
         wcwidth
       ];
       buildTools = [ c2hs ];
       extraLibraries = [ ncurses ];
       description = "An MPD client with vim-like key bindings";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) ncurses; };

  "vintage-basic" = callPackage
    ({ mkDerivation, filepath, HUnit, mtl, parsec, random, regex-base
     , regex-posix, time
     }:
     mkDerivation {
       pname = "vintage-basic";
       version = "1.0.1";
       sha256 = "0hmnkmg6sz702nplh7indlzmv7bb36fmaglf9lw0fziabaj9kk25";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath HUnit mtl parsec random regex-base regex-posix time
       ];
       homepage = "http://www.vintage-basic.net";
       description = "Interpreter for microcomputer-era BASIC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vinyl" = callPackage
    ({ mkDerivation, doctest, lens, singletons }:
     mkDerivation {
       pname = "vinyl";
       version = "0.4.3";
       sha256 = "1npcpvr94l2gpk9z4y527raf2p3d6099m231vw0myci37ljnjgdf";
       testDepends = [ doctest lens singletons ];
       description = "Extensible Records";
       license = stdenv.lib.licenses.mit;
     }) {};

  "vinyl-gl" = callPackage
    ({ mkDerivation, GLUtil, HUnit, linear, OpenGL, tagged
     , test-framework, test-framework-hunit, transformers, vector, vinyl
     }:
     mkDerivation {
       pname = "vinyl-gl";
       version = "0.2.1";
       sha256 = "1i3hnsvk6zzrmsxmyzm0hyf5053czp85mc4ccy07kmz0wg4sd3w2";
       buildDepends = [
         GLUtil linear OpenGL tagged transformers vector vinyl
       ];
       testDepends = [
         HUnit linear OpenGL tagged test-framework test-framework-hunit
         vinyl
       ];
       description = "Utilities for working with OpenGL's GLSL shading language and vinyl records";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vinyl-json" = callPackage
    ({ mkDerivation, aeson, hlint, text, vinyl }:
     mkDerivation {
       pname = "vinyl-json";
       version = "0.1.0.0";
       sha256 = "07rjlwalpq67hc4pha6x02qbw5pxaz4yimx8sclps9dl7r76xi5c";
       buildDepends = [ aeson text vinyl ];
       testDepends = [ hlint ];
       description = "Provide json instances automagically to vinyl types";
       license = stdenv.lib.licenses.mit;
     }) {};

  "virthualenv" = callPackage
    ({ mkDerivation, Cabal, file-embed, filepath, mtl, safe, split }:
     mkDerivation {
       pname = "virthualenv";
       version = "0.2.2";
       sha256 = "08z6dvhv4k6a71dvqhvcfl8s5aq7qcg8aj5xbym3931yykl0gxc2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ Cabal file-embed filepath mtl safe split ];
       homepage = "https://github.com/Paczesiowa/virthualenv";
       description = "Virtual Haskell Environment builder";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vision" = callPackage
    ({ mkDerivation, filepath, glib, gtk, json
     , MonadCatchIO-transformers, mtl, parsec, PSQueue, stm, url
     , utf8-string, xmms2-client, xmms2-client-glib
     }:
     mkDerivation {
       pname = "vision";
       version = "0.0.5.0";
       sha256 = "1235zclhg4nkd387df4gg3q88hvsqwsdj1j20lnfnclxfah0qxa2";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath glib gtk json MonadCatchIO-transformers mtl parsec PSQueue
         stm url utf8-string xmms2-client xmms2-client-glib
       ];
       description = "An XMMS2 client";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "visual-graphrewrite" = callPackage
    ({ mkDerivation, cairo, fgl, glade, graphviz, gtk, haskell-src
     , ipprint, isevaluated, lazysmallcheck, parallel
     , strict-concurrency, svgcairo, value-supply
     }:
     mkDerivation {
       pname = "visual-graphrewrite";
       version = "0.4.0.1";
       sha256 = "0myppx9bd8bfhii91lqdp00ckp20bq82754mr01s87l1d01gb4wp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo fgl glade graphviz gtk haskell-src ipprint isevaluated
         lazysmallcheck parallel strict-concurrency svgcairo value-supply
       ];
       homepage = "http://github.com/zsol/visual-graphrewrite/";
       description = "Visualize the graph-rewrite steps of a Haskell program";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "visual-prof" = callPackage
    ({ mkDerivation, filepath, haskell-src-exts, mtl, regexpr, split
     , uniplate
     }:
     mkDerivation {
       pname = "visual-prof";
       version = "0.5";
       sha256 = "00wvxsq6yaidiv2izdxsvvfzj8ksrq8y3fky9y68k82ivh7r2y39";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         filepath haskell-src-exts mtl regexpr split uniplate
       ];
       homepage = "http://github.com/djv/VisualProf";
       description = "Create a visual profile of a program's source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vk-aws-route53" = callPackage
    ({ mkDerivation, aws, http-conduit, http-types, resourcet, text
     , time, xml-conduit, xml-hamlet
     }:
     mkDerivation {
       pname = "vk-aws-route53";
       version = "0.1.2";
       sha256 = "0sblvj89bb7vxgy09m88gcphqc9w2mpawg8kdz0r77y7db0vzb4x";
       buildDepends = [
         aws http-conduit http-types resourcet text time xml-conduit
         xml-hamlet
       ];
       description = "Amazon Route53 DNS service plugin for the aws package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vk-posix-pty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "vk-posix-pty";
       version = "0.2.1";
       sha256 = "1kj06niwcsb4lyhppv5bs67cf8frcs4g8fyyzv3cpipn0xdhsr97";
       isLibrary = true;
       isExecutable = true;
       homepage = "https://github.com/proger/posix-pty/tree/fork";
       description = "Pseudo terminal interaction with subprocesses";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "void" = callPackage
    ({ mkDerivation, hashable, semigroups }:
     mkDerivation {
       pname = "void";
       version = "0.7";
       sha256 = "0ivgr4minxb5v56v4kbd045iwqk1c2w89c830731l75mkg8qa6wq";
       buildDepends = [ hashable semigroups ];
       homepage = "http://github.com/ekmett/void";
       description = "A Haskell 98 logically uninhabited data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vorbiscomment" = callPackage
    ({ mkDerivation, binary-strict, mtl, utf8-string }:
     mkDerivation {
       pname = "vorbiscomment";
       version = "0.0.2";
       sha256 = "12kfih0marcrpw9y6wvxgqy6w73f62yhy02c05wcpwxww5cg9iwx";
       buildDepends = [ binary-strict mtl utf8-string ];
       description = "Reading of Vorbis comments from Ogg Vorbis files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "vowpal-utils" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "vowpal-utils";
       version = "0.1.2";
       sha256 = "09z6nbsj4rqzhksk75glrsrmcs21p8x0jmcpqs6rc9iizz79db8g";
       homepage = "https://github.com/cartazio/Vowpal-Utils";
       description = "Vowpal Wabbit utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "voyeur" = callPackage
    ({ mkDerivation, utf8-string }:
     mkDerivation {
       pname = "voyeur";
       version = "0.1.0.1";
       sha256 = "117xvh6llh3aw8nxrvvqyjaflq35l69b7s4j1sc79p8r972mdwff";
       buildDepends = [ utf8-string ];
       homepage = "https://github.com/sethfowler/hslibvoyeur";
       description = "Haskell bindings for libvoyeur";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vte" = callPackage
    ({ mkDerivation, glib, gtk, gtk2hs-buildtools, pango, vte }:
     mkDerivation {
       pname = "vte";
       version = "0.13.0.0";
       sha256 = "030q2q702nbcchzi7xnlyid3kw56dqmnjqilwlkz233w1hvwpblh";
       buildDepends = [ glib gtk pango ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ vte ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the VTE library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) vte; };

  "vtegtk3" = callPackage
    ({ mkDerivation, glib, gtk2hs-buildtools, gtk3, pango, vte }:
     mkDerivation {
       pname = "vtegtk3";
       version = "0.13.0.0";
       sha256 = "13z1ggfnmry68raaj2fa7ilm8h03nvz18jfjfhnbks4mjqksfvml";
       buildDepends = [ glib gtk3 pango ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ vte ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the VTE library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) vte; };

  "vty" = callPackage
    ({ mkDerivation, blaze-builder, Cabal, data-default, deepseq
     , filepath, hashable, HUnit, lens, mtl, parallel, parsec
     , QuickCheck, quickcheck-assertions, random, smallcheck, string-qq
     , terminfo, test-framework, test-framework-hunit
     , test-framework-smallcheck, text, transformers, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "vty";
       version = "5.2.6";
       sha256 = "05d5vczifyzg36w1d4wwa9h27fpwgxaxws5ilmg47gq4zr1a6yxi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder data-default deepseq filepath hashable lens mtl
         parallel parsec terminfo text transformers utf8-string vector
       ];
       testDepends = [
         blaze-builder Cabal data-default deepseq HUnit lens mtl QuickCheck
         quickcheck-assertions random smallcheck string-qq terminfo
         test-framework test-framework-hunit test-framework-smallcheck text
         utf8-string vector
       ];
       homepage = "https://github.com/coreyoconnor/vty";
       description = "A simple terminal UI library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vty-examples" = callPackage
    ({ mkDerivation, Cabal, data-default, deepseq, lens, mtl, parallel
     , parsec, QuickCheck, random, string-qq, terminfo, text
     , utf8-string, vector, vty
     }:
     mkDerivation {
       pname = "vty-examples";
       version = "5.2.0";
       sha256 = "1iyygg5sy59f586d31zxdaz1jnpwrir6bfissarb0ag55dhl1j8x";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         Cabal data-default deepseq lens mtl parallel parsec QuickCheck
         random string-qq terminfo text utf8-string vector vty
       ];
       homepage = "https://github.com/coreyoconnor/vty";
       description = "Examples programs using the vty library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vty-menu" = callPackage
    ({ mkDerivation, vty }:
     mkDerivation {
       pname = "vty-menu";
       version = "0.0.3";
       sha256 = "1ak6k43w381qg41mc5k5shbkwzg35kvh89yldimwk5a5sc08sqbi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ vty ];
       description = "A lib for displaying a menu and getting a selection using VTY";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "vty-ui" = callPackage
    ({ mkDerivation, data-default, filepath, mtl, QuickCheck, random
     , regex-base, stm, text, time, vector, vty
     }:
     mkDerivation {
       pname = "vty-ui";
       version = "1.8";
       sha256 = "08jrcwml5g74mp4wy7kqp9jd5mfbxl04517v5354jiwn4dc77azm";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-default filepath mtl QuickCheck random regex-base stm text
         time vector vty
       ];
       homepage = "http://jtdaugherty.github.com/vty-ui/";
       description = "An interactive terminal user interface library for Vty";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "vty-ui-extras" = callPackage
    ({ mkDerivation, regex-base, regex-pcre, vty, vty-ui }:
     mkDerivation {
       pname = "vty-ui-extras";
       version = "0.1";
       sha256 = "1c60bvhk1riilj7sl7x7nw4d9yg56f2k0ps1aivmjm0q4brhgnx7";
       buildDepends = [ regex-base regex-pcre vty vty-ui ];
       description = "Extra vty-ui functionality not included in the core library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai" = callPackage
    ({ mkDerivation, blaze-builder, hspec, http-types, network, text
     , vault
     }:
     mkDerivation {
       pname = "wai";
       version = "3.0.2";
       sha256 = "0k67yzr05d6vjwqamnzzggk1mlj9wabqrm26dqbrrc40jj3kddgw";
       buildDepends = [ blaze-builder http-types network text vault ];
       testDepends = [ blaze-builder hspec ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Web Application Interface";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-app-file-cgi" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, blaze-builder
     , blaze-html, case-insensitive, conduit, conduit-extra
     , data-default-class, doctest, filepath, hspec, HTTP, http-client
     , http-conduit, http-date, http-types, io-choice, lifted-base
     , mime-types, network, sockaddr, static-hash, text, transformers
     , wai, wai-conduit, warp, word8
     }:
     mkDerivation {
       pname = "wai-app-file-cgi";
       version = "3.0.3";
       sha256 = "17w5mapvn8vkwv9bcyw253qwz30rj19zw5qfxjy76j9hkffydwkv";
       buildDepends = [
         attoparsec attoparsec-conduit blaze-builder blaze-html
         case-insensitive conduit conduit-extra data-default-class filepath
         http-client http-conduit http-date http-types io-choice lifted-base
         mime-types network sockaddr static-hash text transformers wai
         wai-conduit word8
       ];
       testDepends = [
         conduit conduit-extra doctest filepath hspec HTTP http-types wai
         warp
       ];
       homepage = "http://www.mew.org/~kazu/proj/mighttpd/";
       description = "File/CGI/Rev Proxy App of WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-app-static" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, blaze-html
     , blaze-markup, byteable, cryptohash, cryptohash-conduit
     , file-embed, filepath, hspec, http-date, http-types, mime-types
     , network, optparse-applicative, system-fileio, system-filepath
     , text, time, transformers, unix-compat, unordered-containers, wai
     , wai-extra, warp, zlib
     }:
     mkDerivation {
       pname = "wai-app-static";
       version = "3.0.0.3";
       sha256 = "0krvjnysmfaqds715mp6lhh5am327swi2vja5insmn08da87zhnb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         base64-bytestring blaze-builder blaze-html blaze-markup byteable
         cryptohash cryptohash-conduit file-embed filepath http-date
         http-types mime-types optparse-applicative system-fileio
         system-filepath text time transformers unix-compat
         unordered-containers wai wai-extra warp zlib
       ];
       testDepends = [
         hspec http-date http-types mime-types network text time
         transformers unix-compat wai wai-extra zlib
       ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI application for static serving";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-conduit" = callPackage
    ({ mkDerivation, blaze-builder, conduit, http-types, transformers
     , wai
     }:
     mkDerivation {
       pname = "wai-conduit";
       version = "3.0.0.1";
       sha256 = "0m5mfr6plzb873by4pab9d4g4cwfcpxl6g5c5qyljb8sydfzhhym";
       buildDepends = [
         blaze-builder conduit http-types transformers wai
       ];
       homepage = "https://github.com/yesodweb/wai";
       description = "conduit wrappers for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-cors" = callPackage
    ({ mkDerivation, attoparsec, base-unicode-symbols, case-insensitive
     , charset, errors, http-types, parsers, resourcet, transformers
     , wai
     }:
     mkDerivation {
       pname = "wai-cors";
       version = "0.2";
       sha256 = "0ljggv4ylx9rjr595w8vfk744bv7x0b5argr7nlw61ywm8ck8djs";
       buildDepends = [
         attoparsec base-unicode-symbols case-insensitive charset errors
         http-types parsers resourcet transformers wai
       ];
       homepage = "https://github.com/alephcloud/wai-cors";
       description = "CORS for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-digestive-functors" = callPackage
    ({ mkDerivation, digestive-functors, http-types, resourcet, text
     , transformers, wai, wai-extra, wai-util
     }:
     mkDerivation {
       pname = "wai-digestive-functors";
       version = "0.3";
       sha256 = "04l9m43gm1zcgq32c70870kygy87p44zb4kvqcvi86zcspqdgpld";
       buildDepends = [
         digestive-functors http-types resourcet text transformers wai
         wai-extra wai-util
       ];
       homepage = "https://github.com/singpolyma/wai-digestive-functors";
       description = "Helpers to bind digestive-functors onto wai requests";
       license = "unknown";
     }) {};

  "wai-dispatch" = callPackage
    ({ mkDerivation, text, wai, yesod-routes }:
     mkDerivation {
       pname = "wai-dispatch";
       version = "0.1";
       sha256 = "1qyarjbpnngb2x272gkmvrhy3f8kqygxj4nvi6giz09rdx9pfrza";
       buildDepends = [ text wai yesod-routes ];
       homepage = "https://github.com/singpolyma/wai-dispatch";
       description = "Nice wrapper around yesod-routes for use with WAI";
       license = "unknown";
     }) {};

  "wai-eventsource" = callPackage
    ({ mkDerivation, wai }:
     mkDerivation {
       pname = "wai-eventsource";
       version = "3.0.0";
       sha256 = "1h5zlqky7ldqbmiaixizhk1s8ghf5i3ha1xfz8flxgzr7gr0al3q";
       buildDepends = [ wai ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI support for server-sent events (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-extra" = callPackage
    ({ mkDerivation, ansi-terminal, base64-bytestring, blaze-builder
     , case-insensitive, data-default-class, deepseq, fast-logger, hspec
     , http-types, HUnit, lifted-base, network, resourcet
     , streaming-commons, stringsearch, text, time, transformers, void
     , wai, wai-logger, word8, zlib
     }:
     mkDerivation {
       pname = "wai-extra";
       version = "3.0.3";
       sha256 = "1c4p3zbl01g98xm4k36mxjnywjlpb57schl8k6vv5vvmx1chb723";
       buildDepends = [
         ansi-terminal base64-bytestring blaze-builder case-insensitive
         data-default-class deepseq fast-logger http-types lifted-base
         network resourcet streaming-commons stringsearch text time
         transformers void wai wai-logger word8
       ];
       testDepends = [
         fast-logger hspec http-types HUnit resourcet text transformers wai
         zlib
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provides some basic WAI handlers and middleware";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-frontend-monadcgi" = callPackage
    ({ mkDerivation, case-insensitive, cgi, http-types, transformers
     , wai
     }:
     mkDerivation {
       pname = "wai-frontend-monadcgi";
       version = "3.0.0";
       sha256 = "09ccb36flmqx2xp76h1wlkwhpn7d531pn5bnbd8sadzwh0z46x6c";
       buildDepends = [
         case-insensitive cgi http-types transformers wai
       ];
       description = "Run CGI apps on WAI";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-graceful" = callPackage
    ({ mkDerivation, http-types, mtl, resourcet, wai }:
     mkDerivation {
       pname = "wai-graceful";
       version = "0.1.0.1";
       sha256 = "0a06yrakg9gwjjj4f9nr474j8i8xz642aj56m8vaq621i1kn7jaq";
       buildDepends = [ http-types mtl resourcet wai ];
       homepage = "https://bitbucket.org/dpwiz/wai-graceful";
       description = "Graceful shutdown for WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-handler-devel" = callPackage
    ({ mkDerivation, attoparsec, cmdargs, hint, http-types, network
     , text, time, transformers, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "wai-handler-devel";
       version = "2.0.0.2";
       sha256 = "13f3w31kr3zinll76i6y3walpyqz3i1rlbsh3d7c5p8hp2d88bzy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec cmdargs hint http-types network text time transformers
         wai wai-extra warp
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "WAI server that automatically reloads code after modification. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-handler-fastcgi" = callPackage
    ({ mkDerivation, fcgi, wai, wai-extra }:
     mkDerivation {
       pname = "wai-handler-fastcgi";
       version = "3.0.0";
       sha256 = "1cvy95qmbrhc1yjcral7f8y2929xp623abc9xasz7j28m4wwmynh";
       buildDepends = [ wai wai-extra ];
       extraLibraries = [ fcgi ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "Wai handler to fastcgi";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-handler-launch" = callPackage
    ({ mkDerivation, blaze-builder, http-types, streaming-commons
     , transformers, wai, warp
     }:
     mkDerivation {
       pname = "wai-handler-launch";
       version = "3.0.0";
       sha256 = "1dv7w151szjkg9968v870abz11a440pdzy50zwm0xl6blk392nmk";
       buildDepends = [
         blaze-builder http-types streaming-commons transformers wai warp
       ];
       description = "Launch a web app in the default browser";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-handler-scgi" = callPackage
    ({ mkDerivation, wai, wai-extra }:
     mkDerivation {
       pname = "wai-handler-scgi";
       version = "2.0.0.2";
       sha256 = "0h7d78d641bjsnmxsnz4b7s9pw4x0y0xi8bld51y4nqnbjl8gvac";
       buildDepends = [ wai wai-extra ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "Wai handler to SCGI (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-handler-snap" = callPackage
    ({ mkDerivation, enumerator, snap-core, snap-server, transformers
     , wai
     }:
     mkDerivation {
       pname = "wai-handler-snap";
       version = "0.1.1";
       sha256 = "0akk9h7m1hhdggbhj0grss94jzm13fmcmgj51nvh7mfj6f5kj31l";
       buildDepends = [
         enumerator snap-core snap-server transformers wai
       ];
       homepage = "http://github.com/snoyberg/wai-handler-snap";
       description = "Web Application Interface handler using snap-server. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-handler-webkit" = callPackage
    ({ mkDerivation, QtWebKit, wai, warp }:
     mkDerivation {
       pname = "wai-handler-webkit";
       version = "3.0.0";
       sha256 = "0ksinrg3h668wh4flz79isajvns9xnhlxq54qzwrkr9jp6bds04f";
       buildDepends = [ wai warp ];
       pkgconfigDepends = [ QtWebKit ];
       homepage = "https://github.com/yesodweb/wai/tree/master/wai-handler-webkit";
       description = "Turn WAI applications into standalone GUIs using QtWebkit";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-hastache" = callPackage
    ({ mkDerivation, hastache, http-types, transformers, wai }:
     mkDerivation {
       pname = "wai-hastache";
       version = "0.1";
       sha256 = "1kkn8n33cm5r7hw0xxf815nx1ixg09r7ckspq228j1syq5j1lzq8";
       buildDepends = [ hastache http-types transformers wai ];
       homepage = "https://github.com/singpolyma/wai-hastache";
       description = "Nice wrapper around hastache for use with WAI";
       license = "unknown";
     }) {};

  "wai-lite" = callPackage
    ({ mkDerivation, conduit, http-types, text, transformers, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "wai-lite";
       version = "0.2.0.0";
       sha256 = "1ghxna51m304x5yvgfdgpml0yf6jqhfkixlxxnflg7z34h6wjzz4";
       buildDepends = [
         conduit http-types text transformers wai wai-extra
       ];
       description = "DEPCRECATED (use package \"simple\" instead) A minimalist web framework for WAI web applications";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "wai-logger" = callPackage
    ({ mkDerivation, auto-update, blaze-builder, byteorder
     , case-insensitive, doctest, easy-file, fast-logger, http-types
     , network, unix-time, wai
     }:
     mkDerivation {
       pname = "wai-logger";
       version = "2.2.3";
       sha256 = "0ljpzq3yfiz3xfglvj69jdk46lmgsg6nqncv9mhij4ih6qq0cx0w";
       buildDepends = [
         auto-update blaze-builder byteorder case-insensitive easy-file
         fast-logger http-types network unix-time wai
       ];
       testDepends = [ doctest ];
       description = "A logging system for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-logger-prefork" = callPackage
    ({ mkDerivation, date-cache, fast-logger, http-types, wai
     , wai-logger
     }:
     mkDerivation {
       pname = "wai-logger-prefork";
       version = "0.3.0";
       sha256 = "0cfslqr2zdj0x83dbscafhdljrn2xswym7hpf23zlrsrnpz71qy4";
       buildDepends = [
         date-cache fast-logger http-types wai wai-logger
       ];
       description = "A logging system for preforked WAI apps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-middleware-cache" = callPackage
    ({ mkDerivation, binary, blaze-builder-conduit, conduit
     , crypto-conduit, http-types, HUnit, pureMD5, test-framework
     , test-framework-hunit, wai, wai-test
     }:
     mkDerivation {
       pname = "wai-middleware-cache";
       version = "0.3.6";
       sha256 = "1kqrqjsmnwwavcyhwx6m2x3qk7qbd0h60817ai61dz3aprwc8hdw";
       buildDepends = [
         binary blaze-builder-conduit conduit crypto-conduit http-types
         pureMD5 wai
       ];
       testDepends = [
         http-types HUnit test-framework test-framework-hunit wai wai-test
       ];
       homepage = "https://github.com/akaspin/wai-middleware-cache";
       description = "Caching middleware for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-middleware-cache-redis" = callPackage
    ({ mkDerivation, binary, blaze-builder-conduit, case-insensitive
     , conduit, hedis, hedis-pile, http-types, transformers, wai
     , wai-middleware-cache
     }:
     mkDerivation {
       pname = "wai-middleware-cache-redis";
       version = "0.4.3";
       sha256 = "1vd81jcisav6jyqzwa0qn35xarm21bjrw0qps9qbbq56svkh1lw9";
       buildDepends = [
         binary blaze-builder-conduit case-insensitive conduit hedis
         hedis-pile http-types transformers wai wai-middleware-cache
       ];
       homepage = "https://github.com/akaspin/wai-middleware-cache-redis";
       description = "Redis backend for wai-middleware-cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-middleware-catch" = callPackage
    ({ mkDerivation, http-types, lifted-base, wai }:
     mkDerivation {
       pname = "wai-middleware-catch";
       version = "0.3.6";
       sha256 = "1vh5sad3zhdwxqbmivmy9hkbnq9vrv4k6k17rjk4f79lv2xcq56h";
       buildDepends = [ http-types lifted-base wai ];
       homepage = "https://github.com/akaspin/wai-middleware-catch";
       description = "Wai error catching middleware";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-middleware-etag" = callPackage
    ({ mkDerivation, base64-bytestring, cryptohash, filepath, http-date
     , http-types, unix-compat, unordered-containers, wai
     }:
     mkDerivation {
       pname = "wai-middleware-etag";
       version = "0.1.0.0";
       sha256 = "0mcqnzvxx671awr2szyfpm6jskily9zxvmg61zz430km4i2q3wj8";
       buildDepends = [
         base64-bytestring cryptohash filepath http-date http-types
         unix-compat unordered-containers wai
       ];
       homepage = "https://github.com/ameingast/wai-middleware-etag";
       description = "WAI ETag middleware for static files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-middleware-headers" = callPackage
    ({ mkDerivation, http-types, wai }:
     mkDerivation {
       pname = "wai-middleware-headers";
       version = "0.1";
       sha256 = "10ap355j4dx42y7ycf1plpbg04wazv0q62mi3ibza8sb33hiiprh";
       buildDepends = [ http-types wai ];
       homepage = "http://github.com/seanhess/wai-middleware-headers";
       description = "cors and addHeaders for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-middleware-route" = callPackage
    ({ mkDerivation, http-types, HUnit, test-framework
     , test-framework-hunit, text, wai, wai-test, yesod-routes
     }:
     mkDerivation {
       pname = "wai-middleware-route";
       version = "0.7.3";
       sha256 = "0zgiaxc5rqjlkfwkb11a5zkmbybrfcqr74mq5vpj03mqz1q0lmx7";
       buildDepends = [ http-types text wai yesod-routes ];
       testDepends = [
         http-types HUnit test-framework test-framework-hunit text wai
         wai-test
       ];
       homepage = "https://github.com/akaspin/wai-middleware-route";
       description = "Wai dispatch middleware";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-middleware-static" = callPackage
    ({ mkDerivation, filepath, http-types, mtl, text, wai }:
     mkDerivation {
       pname = "wai-middleware-static";
       version = "0.6.0.1";
       sha256 = "1ylf2nm535d3dw0ksa9dfz1b4b78mqzkdrpdfd5pxswcqbgs266d";
       buildDepends = [ filepath http-types mtl text wai ];
       homepage = "https://github.com/scotty-web/wai-middleware-static";
       description = "WAI middleware that serves requests to static files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-predicates" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, bytestring-conversion
     , case-insensitive, cookie, http-types, singletons, tasty
     , tasty-hunit, tasty-quickcheck, transformers, vault, vector, wai
     }:
     mkDerivation {
       pname = "wai-predicates";
       version = "0.8.4";
       sha256 = "06ib359k8amh15qmmv6rdmicak1rrx758xfrf75nni03z9k9rby5";
       buildDepends = [
         attoparsec bytestring-conversion case-insensitive cookie http-types
         singletons transformers vault vector wai
       ];
       testDepends = [
         blaze-builder case-insensitive http-types tasty tasty-hunit
         tasty-quickcheck wai
       ];
       homepage = "https://github.com/twittner/wai-predicates/";
       description = "WAI request predicates";
       license = "unknown";
     }) {};

  "wai-responsible" = callPackage
    ({ mkDerivation, http-types, wai }:
     mkDerivation {
       pname = "wai-responsible";
       version = "0.0.0.0";
       sha256 = "0qf64g11113gl45bfn12j2ikdjwrdxg9r8cicfs4pmh0dq5vj0va";
       buildDepends = [ http-types wai ];
       homepage = "https://github.com/pharpend/wai-responsible";
       description = "Response interface for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wai-route" = callPackage
    ({ mkDerivation, http-types, mtl, QuickCheck, tasty
     , tasty-quickcheck, unordered-containers, wai
     }:
     mkDerivation {
       pname = "wai-route";
       version = "0.3";
       sha256 = "1gmadxdki64x2r7931vsgzzb1hkk03a1virkjmnfm3i7kz5dp4kp";
       buildDepends = [ http-types unordered-containers wai ];
       testDepends = [
         http-types mtl QuickCheck tasty tasty-quickcheck wai
       ];
       description = "Minimalistic, efficient routing for WAI";
       license = "unknown";
     }) {};

  "wai-router" = callPackage
    ({ mkDerivation, text, wai }:
     mkDerivation {
       pname = "wai-router";
       version = "1.0.0.1";
       sha256 = "1827mk64vyivdc12z4h230c4b993i6g8wl4sl0364jda586z58p7";
       buildDepends = [ text wai ];
       homepage = "http://github.com/mdmarek/wai-router";
       description = "Provides basic routing on URL paths for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-routes" = callPackage
    ({ mkDerivation, aeson, blaze-builder, http-types, mtl, text, wai
     , yesod-routes
     }:
     mkDerivation {
       pname = "wai-routes";
       version = "0.5.1";
       sha256 = "0xd4abccgnj793vbrf1a0m1ddcq8i4p8f7sxk6mz4d1lzb4y0sf0";
       buildDepends = [
         aeson blaze-builder http-types mtl text wai yesod-routes
       ];
       homepage = "https://github.com/ajnsit/wai-routes";
       description = "Typesafe URLs for Wai applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-routing" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, bytestring-conversion
     , case-insensitive, cookie, http-types, tasty, tasty-hunit
     , tasty-quickcheck, transformers, wai, wai-predicates, wai-route
     }:
     mkDerivation {
       pname = "wai-routing";
       version = "0.12.1";
       sha256 = "01bs5mmycn7dkvnp01mh226iy1b419amab83fmgk0asd2f3jsfn5";
       buildDepends = [
         attoparsec bytestring-conversion case-insensitive cookie http-types
         transformers wai wai-predicates wai-route
       ];
       testDepends = [
         blaze-builder bytestring-conversion case-insensitive http-types
         tasty tasty-hunit tasty-quickcheck wai wai-predicates
       ];
       homepage = "https://github.com/twittner/wai-routing/";
       description = "Declarative routing for WAI";
       license = "unknown";
     }) {};

  "wai-session" = callPackage
    ({ mkDerivation, blaze-builder, cookie, http-types, StateVar, time
     , transformers, vault, wai
     }:
     mkDerivation {
       pname = "wai-session";
       version = "0.2";
       sha256 = "1hlf88l1v52szlkb8ibdbx2dkj9r7hs7vszqpsy3dp0r5yyg8aqv";
       buildDepends = [
         blaze-builder cookie http-types StateVar time transformers vault
         wai
       ];
       homepage = "https://github.com/singpolyma/wai-session";
       description = "Flexible session middleware for WAI";
       license = "unknown";
     }) {};

  "wai-session-clientsession" = callPackage
    ({ mkDerivation, cereal, clientsession, errors, transformers
     , wai-session
     }:
     mkDerivation {
       pname = "wai-session-clientsession";
       version = "0.1";
       sha256 = "0kczhsmkv88g0x8mk4cfy5z9wv3fzv8v3r4z0q7jkyda0grx3gwf";
       buildDepends = [
         cereal clientsession errors transformers wai-session
       ];
       homepage = "https://github.com/singpolyma/wai-session-clientsession";
       description = "Session store based on clientsession";
       license = "unknown";
     }) {};

  "wai-session-tokyocabinet" = callPackage
    ({ mkDerivation, cereal, errors, tokyocabinet-haskell, transformers
     , wai-session
     }:
     mkDerivation {
       pname = "wai-session-tokyocabinet";
       version = "0.1";
       sha256 = "0cd4x3byc8kaarjpfczqaiv5y3ixrdcilnnypkhcavk3vj7w7pmr";
       buildDepends = [
         cereal errors tokyocabinet-haskell transformers wai-session
       ];
       homepage = "https://github.com/singpolyma/wai-session-tokyocabinet";
       description = "Session store based on Tokyo Cabinet";
       license = "unknown";
     }) {};

  "wai-static-cache" = callPackage
    ({ mkDerivation, cityhash, conduit, conduit-combinators, http-types
     , resourcet, system-filepath, text, transformers, vector
     , vector-algorithms, wai
     }:
     mkDerivation {
       pname = "wai-static-cache";
       version = "0.1.0.1";
       sha256 = "0vlkh9izxx1qsb61fak57kk9k35i3vph8qbyvlmgwcw7nplagq6l";
       buildDepends = [
         cityhash conduit conduit-combinators http-types resourcet
         system-filepath text transformers vector vector-algorithms wai
       ];
       description = "A simple cache for serving static files in a WAI middleware";
       license = stdenv.lib.licenses.agpl3;
     }) {};

  "wai-static-pages" = callPackage
    ({ mkDerivation, blaze-builder, conduit, http-types, text, wai
     , wai-test
     }:
     mkDerivation {
       pname = "wai-static-pages";
       version = "0.2.2.0";
       sha256 = "04lba03n66m30nn9y5mh3kkb5j868cincnh5rh5nwv6whsmxvxm5";
       buildDepends = [
         blaze-builder conduit http-types text wai wai-test
       ];
       homepage = "https://github.com/gregwebs/wai-static-pages";
       description = "generate static html pages from a WAI application";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-test" = callPackage
    ({ mkDerivation, wai }:
     mkDerivation {
       pname = "wai-test";
       version = "3.0.0";
       sha256 = "0xys01jniib0pnhadcm7s0v5z0wcxfgi0bf5ax808zm9qzvl3xfx";
       buildDepends = [ wai ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "Unit test framework (built on HUnit) for WAI applications. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-throttler" = callPackage
    ({ mkDerivation, http-types, time, wai }:
     mkDerivation {
       pname = "wai-throttler";
       version = "0.1.0.3";
       sha256 = "0wfbmjdw8k63fs4425fpnq24xssl9yf16dpy6cwkz68dn0vs0dkd";
       buildDepends = [ http-types time wai ];
       description = "Wai middleware for request throttling";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wai-util" = callPackage
    ({ mkDerivation, aeson, blaze-builder, case-insensitive, conduit
     , http-accept, http-types, mime-mail, network, resourcet, text
     , transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "wai-util";
       version = "0.7";
       sha256 = "1lmx4f7174hzy4a60r2hq9vm9xhbg8vnb9cyi77zyb5p59s53p73";
       buildDepends = [
         aeson blaze-builder case-insensitive conduit http-accept http-types
         mime-mail network resourcet text transformers wai wai-extra
       ];
       homepage = "https://github.com/singpolyma/wai-util";
       description = "Collection of utility functions for use with WAI";
       license = "unknown";
     }) {};

  "wai-websockets" = callPackage
    ({ mkDerivation, blaze-builder, case-insensitive, file-embed
     , http-types, network, text, transformers, wai, wai-app-static
     , warp, websockets
     }:
     mkDerivation {
       pname = "wai-websockets";
       version = "3.0.0.2";
       sha256 = "1p0ylwc19g63z4qijnis1x5wys5h2avim6s2fn7m2ihrlc3pkhsb";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder case-insensitive file-embed http-types network text
         transformers wai wai-app-static warp websockets
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provide a bridge betweeen WAI and the websockets package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wait-handle" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "wait-handle";
       version = "0.1.1";
       sha256 = "09080zx6m4lqli85867ilck82gvgnz4vkq9nxx5f1v5fli1i0n7m";
       homepage = "https://www.github.com/fmap/waithandle";
       description = "Wait handles are MVars which can only be written to once, and from which values can never be removed";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "waitfree" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "waitfree";
       version = "0.1.5";
       sha256 = "09hlqli7zpcxfa8w7vh937gc3rxp7s8q8v1zs8ciwnmh6ca4i8rq";
       description = "A wrapping library for waitfree computation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "warp" = callPackage
    ({ mkDerivation, async, auto-update, blaze-builder
     , case-insensitive, doctest, hashable, hspec, HTTP, http-date
     , http-types, HUnit, lifted-base, network, QuickCheck
     , simple-sendfile, streaming-commons, text, time, transformers
     , unix-compat, void, wai
     }:
     mkDerivation {
       pname = "warp";
       version = "3.0.4";
       sha256 = "0kykf3nki9a7mqr1z9jhk4z0cbzlmk9lyc7zw5y36285mx9id0dr";
       buildDepends = [
         auto-update blaze-builder case-insensitive hashable http-date
         http-types network simple-sendfile streaming-commons text
         unix-compat void wai
       ];
       testDepends = [
         async auto-update blaze-builder case-insensitive doctest hashable
         hspec HTTP http-date http-types HUnit lifted-base network
         QuickCheck simple-sendfile streaming-commons text time transformers
         unix-compat void wai
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "A fast, light-weight web server for WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "warp-dynamic" = callPackage
    ({ mkDerivation, data-default, dyre, http-types, wai, warp }:
     mkDerivation {
       pname = "warp-dynamic";
       version = "0.1.0";
       sha256 = "1kmmy2av0ikr6mb8g7ffqmf505ha4201qv7y48fyc9p8j0p6lk6g";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ data-default dyre http-types wai warp ];
       homepage = "http://tanakh.jp";
       description = "Dynamic configurable warp HTTP server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "warp-static" = callPackage
    ({ mkDerivation, cmdargs, mime-types, text, wai-app-static
     , wai-extra, warp
     }:
     mkDerivation {
       pname = "warp-static";
       version = "2.0.1.1";
       sha256 = "181z8cr55qngy6jyqzqz5wcgiyip4rn3q1am0hkcxvmdnif2w2km";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         cmdargs mime-types text wai-app-static wai-extra warp
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Static file server based on Warp and wai-app-static (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "warp-tls" = callPackage
    ({ mkDerivation, cprng-aes, data-default-class, network
     , streaming-commons, tls, wai, warp
     }:
     mkDerivation {
       pname = "warp-tls";
       version = "3.0.1";
       sha256 = "0s87ricslidyg6m17q5mllpl47v0d8mvvd6psq4izz5l27dg2xpy";
       buildDepends = [
         cprng-aes data-default-class network streaming-commons tls wai warp
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "HTTP over SSL/TLS support for Warp via the TLS package";
       license = stdenv.lib.licenses.mit;
     }) {};

  "warp-tls-uid" = callPackage
    ({ mkDerivation, certificate, conduit, crypto-random, http-types
     , network, network-conduit, pem, tls, tls-extra, wai, warp
     }:
     mkDerivation {
       pname = "warp-tls-uid";
       version = "0.1.0.4";
       sha256 = "11av9jkf8z2xcpwg3nyx018qwpdrm0cs79qj14z93ah1yxbavb5y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         certificate conduit crypto-random http-types network
         network-conduit pem tls tls-extra wai warp
       ];
       description = "set group and user id before running server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "watchdog" = callPackage
    ({ mkDerivation, mtl, time }:
     mkDerivation {
       pname = "watchdog";
       version = "0.2.2.1";
       sha256 = "06b93cqn6rbl6jbjyawzqmrx80h0dbcks7ia6l3wzdqpic8yjj6v";
       buildDepends = [ mtl time ];
       description = "Simple control structure to re-try an action with exponential backoff";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "watcher" = callPackage
    ({ mkDerivation, basic-prelude, hinotify, system-fileio
     , system-filepath
     }:
     mkDerivation {
       pname = "watcher";
       version = "0.0.3.0";
       sha256 = "1c6025zpghqvw5xlapnfk8nwf32iq6dkpnpzi65pm5l5f5npwwgs";
       buildDepends = [
         basic-prelude hinotify system-fileio system-filepath
       ];
       description = "Opinionated filesystem watcher";
       license = stdenv.lib.licenses.mit;
     }) {};

  "watchit" = callPackage
    ({ mkDerivation, async, fsnotify, HUnit, optparse-applicative
     , QuickCheck, resource-pool, smallcheck, streaming-commons
     , system-fileio, system-filepath, tasty, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck, text
     }:
     mkDerivation {
       pname = "watchit";
       version = "0.1.0.0";
       sha256 = "134b9nrl2lmcr80hxmf72la220plh48vdl0r2la3c3k6qimsd276";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         fsnotify optparse-applicative resource-pool streaming-commons
         system-filepath text
       ];
       testDepends = [
         async HUnit QuickCheck smallcheck system-fileio system-filepath
         tasty tasty-hunit tasty-quickcheck tasty-smallcheck
       ];
       description = "File change watching utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wavconvert" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "wavconvert";
       version = "0.1.1";
       sha256 = "028qx9b4z2gr4nc6hid0phdrysvhfqswj64s71pw2grqw4f8ddkx";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "Command-line tool for converting audio files and filling in ID3 tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wavesurfer" = callPackage
    ({ mkDerivation, binary, bytestring-lexing, bytestring-show
     , delimited-text
     }:
     mkDerivation {
       pname = "wavesurfer";
       version = "0.0.6";
       sha256 = "1f9hsmvwdgrib44sj1rnkm4hv92iad27xg75n2y2qdq1a8giazn5";
       buildDepends = [
         binary bytestring-lexing bytestring-show delimited-text
       ];
       homepage = "http://code.haskell.org/~StefanKersten/code/wavesurfer";
       description = "Parse WaveSurfer files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wavy" = callPackage
    ({ mkDerivation, binary, filepath, pretty-show, riff, split, vector
     }:
     mkDerivation {
       pname = "wavy";
       version = "0.1.0.0";
       sha256 = "0rvzsmd7lzimyphc2yscadwkanqpi8wnmdk5hrzwpcm6dcavyj9q";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary filepath pretty-show riff split vector ];
       homepage = "http://bitbucket.org/robertmassaioli/wavy";
       description = "Process WAVE files in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wcwidth" = callPackage
    ({ mkDerivation, attoparsec, setlocale, utf8-string }:
     mkDerivation {
       pname = "wcwidth";
       version = "0.0.2";
       sha256 = "1n1fq7v64b59ajf5g50iqj9sa34wm7s2j3viay0kxpmvlcv8gipz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ attoparsec setlocale utf8-string ];
       homepage = "http://github.com/solidsnack/wcwidth/";
       description = "Native wcwidth";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "weather-api" = callPackage
    ({ mkDerivation, aeson, attoparsec, HTTP, network, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "weather-api";
       version = "0.4.3";
       sha256 = "0wlh3p5z2vivhn9pgqzjhczrb7jyfzkz889fmwnvm7h87440jnyj";
       buildDepends = [
         aeson attoparsec HTTP network utf8-string vector
       ];
       homepage = "https://github.com/cvb/hs-weather-api.git";
       description = "Weather api implemented in haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "web-browser-in-haskell" = callPackage
    ({ mkDerivation, gtk, webkit }:
     mkDerivation {
       pname = "web-browser-in-haskell";
       version = "1.0";
       sha256 = "1y674dw8slz0m7i23j7p1qykdci2wssmx6x0yf23cf0nywz1py5k";
       buildDepends = [ gtk webkit ];
       description = "Web Browser In Haskell";
       license = "GPL";
     }) {};

  "web-css" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "web-css";
       version = "0.1.0";
       sha256 = "1havyvd6f0xagynxpar2jsmx5x1izwl7wgxia0wbwbzaj0fzn2k2";
       buildDepends = [ text ];
       description = "Simple functions for CSS";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-encodings" = callPackage
    ({ mkDerivation, failure, text, time }:
     mkDerivation {
       pname = "web-encodings";
       version = "0.3.0.9";
       sha256 = "0lg9vbsmg9nfs2440ab2srhhawg1xfi5lnhxzd9rj7kab460w2x3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ failure text time ];
       homepage = "http://github.com/snoyberg/web-encodings/tree/master";
       description = "Encapsulate multiple web encoding in a single package. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-fpco" = callPackage
    ({ mkDerivation, happstack-server, safe, snap, snap-core
     , snap-server
     }:
     mkDerivation {
       pname = "web-fpco";
       version = "0.1.1.0";
       sha256 = "1iizmg1syjywd5hs9swcqxxzmix04hwa86p8c246xybwcklf667n";
       buildDepends = [
         happstack-server safe snap snap-core snap-server
       ];
       homepage = "https://github.com/fpco/web-fpco";
       description = "Wrappers for web frameworks to ease usage with the FP Complete environment";
       license = stdenv.lib.licenses.mit;
     }) {};

  "web-mongrel2" = callPackage
    ({ mkDerivation, data-default, file-embed, HStringTemplate, json
     , mtl, parsec, system-uuid, text, zeromq-haskell
     }:
     mkDerivation {
       pname = "web-mongrel2";
       version = "0.0.3";
       sha256 = "1j2pq3kzmk2gibrr4jcm5gksz9pk9shjqqpwc85ygb2mpf5yc1gw";
       buildDepends = [
         data-default file-embed HStringTemplate json mtl parsec system-uuid
         text zeromq-haskell
       ];
       homepage = "http://github.com/cmoore/web-mongrel2";
       description = "Bindings for the Mongrel2 web server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-page" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, clay, jmacro, lens, mtl
     , Stream, text, vector, wl-pprint-text
     }:
     mkDerivation {
       pname = "web-page";
       version = "0.2.0";
       sha256 = "1hzqwp67pj1xvhmdaxmij08820ffxf559d7jgr8037zzm7j02cql";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-html clay jmacro lens mtl Stream text vector
         wl-pprint-text
       ];
       homepage = "http://hub.darcs.net/ertes/web-page";
       description = "Monoidally construct web pages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-plugins" = callPackage
    ({ mkDerivation, mtl, stm, text }:
     mkDerivation {
       pname = "web-plugins";
       version = "0.2.7";
       sha256 = "0pvwhr5mr960lramlnz7sffxrr7mxqskqk5pqbspck7cabzwzsxd";
       buildDepends = [ mtl stm text ];
       homepage = "http://www.happstack.com/";
       description = "dynamic plugin system for web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes" = callPackage
    ({ mkDerivation, blaze-builder, http-types, HUnit, mtl, parsec
     , QuickCheck, split, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, text, utf8-string
     }:
     mkDerivation {
       pname = "web-routes";
       version = "0.27.7";
       sha256 = "0q6rl8vasbkq24jdfdq6jrjivcqqmdy34w8zw5zczmscpyjqf0zb";
       buildDepends = [
         blaze-builder http-types mtl parsec split text utf8-string
       ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th
       ];
       description = "Library for maintaining correctness and composability of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-boomerang" = callPackage
    ({ mkDerivation, boomerang, mtl, parsec, text, web-routes }:
     mkDerivation {
       pname = "web-routes-boomerang";
       version = "0.28.3";
       sha256 = "0d3ccp4hbzjhqzqy901da8dpz23sylwg54xs5iyjhmqvw0v7ljpn";
       buildDepends = [ boomerang mtl parsec text web-routes ];
       description = "Library for maintaining correctness and composability of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-happstack" = callPackage
    ({ mkDerivation, happstack-server, text, web-routes }:
     mkDerivation {
       pname = "web-routes-happstack";
       version = "0.23.8";
       sha256 = "1mk3pmxf084wlrbnxgqnhhgh024k6mjvcavcgfgsln3xzd3580w5";
       buildDepends = [ happstack-server text web-routes ];
       description = "Adds support for using web-routes with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-hsp" = callPackage
    ({ mkDerivation, hsp, text, web-routes }:
     mkDerivation {
       pname = "web-routes-hsp";
       version = "0.24.5";
       sha256 = "1vnsdsipm764maqn43774vw5hn64vvaaih8gg9130fkvp6jj39nk";
       buildDepends = [ hsp text web-routes ];
       description = "Adds XMLGenerator instance for RouteT monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-mtl" = callPackage
    ({ mkDerivation, web-routes }:
     mkDerivation {
       pname = "web-routes-mtl";
       version = "0.20.1";
       sha256 = "1k35ch294p2pkf7mbip8wy9rin956y31sq68b4cdrj9sj9891rx5";
       buildDepends = [ web-routes ];
       description = "Extends web-routes with mtl-based MonadIO / MonadTrans RouteT instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-quasi" = callPackage
    ({ mkDerivation, path-pieces, text }:
     mkDerivation {
       pname = "web-routes-quasi";
       version = "0.7.1.1";
       sha256 = "1rqbymi0n7kdhl272qfjhx9s3gspd5k0bjrhclj9l8mjf033vdmf";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ path-pieces text ];
       homepage = "http://docs.yesodweb.com/web-routes-quasi/";
       description = "Define data types and parse/build functions for web-routes via a quasi-quoted DSL (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-regular" = callPackage
    ({ mkDerivation, parsec, regular, text, web-routes }:
     mkDerivation {
       pname = "web-routes-regular";
       version = "0.19.0";
       sha256 = "0qllws4mzmmc6fh4hcvj3zp7kk8pwap59yq6wy0zx7mx0ac7015r";
       buildDepends = [ parsec regular text web-routes ];
       description = "Library for maintaining correctness of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-th" = callPackage
    ({ mkDerivation, HUnit, parsec, QuickCheck, split, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, text, web-routes
     }:
     mkDerivation {
       pname = "web-routes-th";
       version = "0.22.2";
       sha256 = "1dk768m0bb4y3i1q9sxj2fbn6farlyyy52fxmk0ipbnbdq7if71f";
       buildDepends = [ parsec split text web-routes ];
       testDepends = [
         HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th web-routes
       ];
       description = "Support for deriving PathInfo using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-transformers" = callPackage
    ({ mkDerivation, transformers, web-routes }:
     mkDerivation {
       pname = "web-routes-transformers";
       version = "0.19.1";
       sha256 = "0pm1v9wqlzi6cg92lajbwbnhsdm509371i8mvyvvj6qa5m58cdib";
       buildDepends = [ transformers web-routes ];
       description = "Extends web-routes with some transformers instances for RouteT";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "web-routes-wai" = callPackage
    ({ mkDerivation, http-types, text, wai, web-routes }:
     mkDerivation {
       pname = "web-routes-wai";
       version = "0.24.1";
       sha256 = "13mwfyafpk29c8bbx48vhbxsgk28fmh579gjn6gjlhvkisc45q1b";
       buildDepends = [ http-types text wai web-routes ];
       description = "Library for maintaining correctness of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "webdriver" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, cond
     , data-default, directory-tree, exceptions, filepath, http-client
     , http-types, lifted-base, monad-control, mtl, network, network-uri
     , parallel, scientific, temporary, text, time, transformers
     , transformers-base, unordered-containers, vector, zip-archive
     }:
     mkDerivation {
       pname = "webdriver";
       version = "0.6.0.3";
       sha256 = "1q0l9rs5j4cxzyqsy6r40y425359s246spk3g3pks7s47yynjn4q";
       buildDepends = [
         aeson attoparsec base64-bytestring cond data-default directory-tree
         exceptions filepath http-client http-types lifted-base
         monad-control mtl network network-uri scientific temporary text
         time transformers transformers-base unordered-containers vector
         zip-archive
       ];
       testDepends = [ parallel text ];
       homepage = "https://github.com/kallisti-dev/hs-webdriver";
       description = "a Haskell client for the Selenium WebDriver protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "webdriver-angular" = callPackage
    ({ mkDerivation, aeson, hspec, hspec-webdriver, language-javascript
     , text, transformers, unordered-containers, wai-app-static, warp
     , webdriver
     }:
     mkDerivation {
       pname = "webdriver-angular";
       version = "0.1.6";
       sha256 = "10cvivmdadhvq8bsh1hij8dgw3d3f3a3ng54b00ia4gmna6996yq";
       buildDepends = [
         aeson language-javascript text transformers unordered-containers
         webdriver
       ];
       testDepends = [
         hspec hspec-webdriver transformers wai-app-static warp webdriver
       ];
       homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
       description = "Webdriver actions to assist with testing a webpage which uses Angular.Js";
       license = stdenv.lib.licenses.mit;
     }) {};

  "webdriver-snoy" = callPackage
    ({ mkDerivation, aeson, attoparsec, base64-bytestring, cond
     , data-default, directory-tree, exceptions, filepath, http-client
     , http-types, lifted-base, monad-control, mtl, network, parallel
     , scientific, temporary, text, time, transformers
     , transformers-base, unordered-containers, vector, zip-archive
     }:
     mkDerivation {
       pname = "webdriver-snoy";
       version = "0.6.0.4";
       sha256 = "02c2ihqk5gsgnv61rj14rdd76r2nhmxacml3z9krrgxgn326hrbk";
       buildDepends = [
         aeson attoparsec base64-bytestring cond data-default directory-tree
         exceptions filepath http-client http-types lifted-base
         monad-control mtl network scientific temporary text time
         transformers transformers-base unordered-containers vector
         zip-archive
       ];
       testDepends = [ parallel text ];
       homepage = "https://github.com/kallisti-dev/hs-webdriver";
       description = "a Haskell client for the Selenium WebDriver protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "webidl" = callPackage
    ({ mkDerivation, HSFFIG, LEXER, parsec, utf8-env, utf8-string }:
     mkDerivation {
       pname = "webidl";
       version = "0.1.1";
       sha256 = "05l4y7y171g41dlzfgd25ww59r4ajqbj9jpzrsmq5zpazx6p6gzy";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ HSFFIG LEXER parsec utf8-env utf8-string ];
       description = "Parser and Pretty Printer for the Web IDL Language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "webify" = callPackage
    ({ mkDerivation, binary, binary-strict, filepath, hopfli
     , optparse-applicative, text, vector, xmlgen, zlib
     }:
     mkDerivation {
       pname = "webify";
       version = "0.1.6.0";
       sha256 = "003br9hdammvqb2jil5ggnqm81rv3rny7rdhq6h4cb4jrdsdz60z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         binary binary-strict filepath hopfli optparse-applicative text
         vector xmlgen zlib
       ];
       homepage = "http://github.com/ananthakumaran/webify";
       description = "webfont generator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "webkit" = callPackage
    ({ mkDerivation, cairo, glib, gtk, gtk2hs-buildtools, mtl, pango
     , text, webkit
     }:
     mkDerivation {
       pname = "webkit";
       version = "0.13.1.0";
       sha256 = "0wakd6hjrljwipc39sy9iqah1z362djh6hp6gr9bg65dfji7bidw";
       buildDepends = [ cairo glib gtk mtl pango text ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ webkit ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Webkit library";
       license = stdenv.lib.licenses.lgpl21;
     }) { inherit (pkgs) webkit; };

  "webkit-javascriptcore" = callPackage
    ({ mkDerivation, glib, gtk, gtk2hs-buildtools, webkit }:
     mkDerivation {
       pname = "webkit-javascriptcore";
       version = "0.13.0.2";
       sha256 = "1hq811fpq73f5j095msan9w9230x6vh10b52rffp2691pr9974gz";
       buildDepends = [ glib gtk webkit ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ webkit ];
       description = "JavaScriptCore FFI from webkitgtk";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) webkit; };

  "webkitgtk3" = callPackage
    ({ mkDerivation, cairo, glib, gtk2hs-buildtools, gtk3, mtl, pango
     , text, webkitgtk
     }:
     mkDerivation {
       pname = "webkitgtk3";
       version = "0.13.1.0";
       sha256 = "1wdkxcfdbqchy7bv1b2cn6kjcwb16if4wcaq8d87g2295bkcwszd";
       buildDepends = [ cairo glib gtk3 mtl pango text ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ webkitgtk ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Webkit library";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "webkitgtk3-javascriptcore" = callPackage
    ({ mkDerivation, glib, gtk2hs-buildtools, gtk3, webkitgtk
     , webkitgtk3
     }:
     mkDerivation {
       pname = "webkitgtk3-javascriptcore";
       version = "0.13.0.2";
       sha256 = "1rgz1ydyrlhlk28wrwcg5s0akn5zsi1aikh8kn2xpbvmlmwh3zyg";
       buildDepends = [ glib gtk3 webkitgtk3 ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ webkitgtk ];
       description = "JavaScriptCore FFI from webkitgtk";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "webpage" = callPackage
    ({ mkDerivation, blaze-html, lucid, text }:
     mkDerivation {
       pname = "webpage";
       version = "0.0.1";
       sha256 = "12vl8kzly54dk5z8xfdk7290sq1im5d2n4srsq6b1v28fkla1fbp";
       buildDepends = [ blaze-html lucid text ];
       description = "Organized and simple web page scaffold for blaze and lucid";
       license = stdenv.lib.licenses.mit;
     }) {};

  "webserver" = callPackage
    ({ mkDerivation, c10k, filepath, network, parsec, stm, time, zlib
     }:
     mkDerivation {
       pname = "webserver";
       version = "0.7.1.1";
       sha256 = "0mjbw1v0xy3ji6y0wdiv77y7bc4r5z7jk67gzzgny2cx1vx3c973";
       buildDepends = [ c10k filepath network parsec stm time zlib ];
       description = "HTTP server library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "websockets" = callPackage
    ({ mkDerivation, attoparsec, base64-bytestring, binary
     , blaze-builder, case-insensitive, entropy, HUnit, mtl, network
     , QuickCheck, random, SHA, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "websockets";
       version = "0.9.2.1";
       sha256 = "11pdh5dc7r9svg789yx66lff5gcmzs6yg7m74ciz3ybb2i4p855s";
       buildDepends = [
         attoparsec base64-bytestring binary blaze-builder case-insensitive
         entropy mtl network random SHA text
       ];
       testDepends = [
         attoparsec base64-bytestring binary blaze-builder case-insensitive
         entropy HUnit mtl network QuickCheck random SHA test-framework
         test-framework-hunit test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/websockets";
       description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "websockets-snap" = callPackage
    ({ mkDerivation, enumerator, mtl, snap-core, snap-server
     , websockets
     }:
     mkDerivation {
       pname = "websockets-snap";
       version = "0.9.0.0";
       sha256 = "051y62xga7drrfllv10giyr49z1z9ql8681dgwynmdad5x6asf85";
       buildDepends = [ enumerator mtl snap-core snap-server websockets ];
       description = "Snap integration for the websockets library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "webwire" = callPackage
    ({ mkDerivation, base64-bytestring, blaze-builder, blaze-html
     , case-insensitive, cookie, cprng-aes, hamlet, http-types, netwire
     , shakespeare-css, shakespeare-js, text, time, transformers, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "webwire";
       version = "0.1.0";
       sha256 = "0m2wl7cfg67yyj2bbn811g6gsvzj7sw1sb3y2zanc0dxjd4cr4r2";
       buildDepends = [
         base64-bytestring blaze-builder blaze-html case-insensitive cookie
         cprng-aes hamlet http-types netwire shakespeare-css shakespeare-js
         text time transformers wai wai-extra
       ];
       description = "Functional reactive web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wedding-announcement" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "wedding-announcement";
       version = "1.1";
       sha256 = "0rwbckf5h68170jrs1m70kgqf9h43vypj65wcw390w0xc7kmyv49";
       isLibrary = false;
       isExecutable = true;
       homepage = "http://web.mornfall.net";
       description = "a wedding announcement";
       license = stdenv.lib.licenses.publicDomain;
     }) {};

  "weighted-regexp" = callPackage
    ({ mkDerivation, happy }:
     mkDerivation {
       pname = "weighted-regexp";
       version = "0.3.1.2";
       sha256 = "0r765ppzazdsm5i3prgf6a405f88xi8sx79jdz9mck4584w7fqzr";
       isLibrary = true;
       isExecutable = true;
       buildTools = [ happy ];
       homepage = "http://sebfisch.github.com/haskell-regexp";
       description = "Weighted Regular Expression Matcher";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "weighted-search" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "weighted-search";
       version = "0.1.0.1";
       sha256 = "1va2b10g3h2wfl9d7f27d55z5c93fvz41sb023l4c2ym1w9kw8zv";
       homepage = "http://github.com/luqui/weighted-search";
       description = "A weighted nondeterministic search monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "welshy" = callPackage
    ({ mkDerivation, aeson, blaze-builder, conduit, http-types
     , lifted-base, resourcet, text, transformers, unordered-containers
     , wai, warp
     }:
     mkDerivation {
       pname = "welshy";
       version = "0.1.0.0";
       sha256 = "08pgns5irmvh9c12lxq2x72ql8ggzd3npfqnrphba3l171380gki";
       buildDepends = [
         aeson blaze-builder conduit http-types lifted-base resourcet text
         transformers unordered-containers wai warp
       ];
       homepage = "https://github.com/mcschroeder/welshy";
       description = "Haskell web framework (because Scotty had trouble yodeling)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wheb-mongo" = callPackage
    ({ mkDerivation, bson, mongoDB, mtl, text, Wheb }:
     mkDerivation {
       pname = "wheb-mongo";
       version = "0.0.3.0";
       sha256 = "1xxks0jxjwph7372jqnscm6z0b28zz3dvb49b2aw37jmnvwrfdcy";
       buildDepends = [ bson mongoDB mtl text Wheb ];
       homepage = "https://github.com/hansonkd/Wheb-Framework";
       description = "MongoDB plugin for Wheb";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wheb-redis" = callPackage
    ({ mkDerivation, hedis, mtl, text, Wheb }:
     mkDerivation {
       pname = "wheb-redis";
       version = "0.0.1.0";
       sha256 = "025chjp41qbjr9m6c3pd9v510h4aac1rvbyrki3c7617sca8a45h";
       buildDepends = [ hedis mtl text Wheb ];
       homepage = "https://github.com/hansonkd/Wheb-Framework";
       description = "Redis connection for Wheb";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wheb-strapped" = callPackage
    ({ mkDerivation, mtl, StrappedTemplates, text, Wheb }:
     mkDerivation {
       pname = "wheb-strapped";
       version = "0.1.0.0";
       sha256 = "1wykpp325336kk7a1vnnjffankcw0kaw3jcfin53cp8hsx4bwfdp";
       buildDepends = [ mtl StrappedTemplates text Wheb ];
       homepage = "https://github.com/hansonkd/Wheb-Framework";
       description = "Strapped templates for Wheb";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "while-lang-parser" = callPackage
    ({ mkDerivation, indents, parsec }:
     mkDerivation {
       pname = "while-lang-parser";
       version = "0.1.0.0";
       sha256 = "0dlq2rldak4lb0w8hcx7aigdj7b59crp1k130p36cha7zpqdixll";
       buildDepends = [ indents parsec ];
       homepage = "https://github.com/davnils/while-lang-parser";
       description = "Parser for the While language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "whim" = callPackage
    ({ mkDerivation, GLUT, mtl, OpenGL, random, X11 }:
     mkDerivation {
       pname = "whim";
       version = "0.1.1";
       sha256 = "0fgasnviqmz8ifkb8ikvj721f9j1xzvix5va0jxi81gh6f400ij6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ GLUT mtl OpenGL random X11 ];
       homepage = "http://neugierig.org/software/darcs/whim/";
       description = "A Haskell window manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "whiskers" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "whiskers";
       version = "0.1.0.3";
       sha256 = "0kbyv0q6z2d2plblafqcmwcfiyhdbijqnqg2w7qxr7dklka8245v";
       buildDepends = [ parsec ];
       description = "Mustache templates with Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "whitespace" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "whitespace";
       version = "0.4";
       sha256 = "1y89bayaccz8qqzsfmpr917dczgbn5srskja6f2dab3ipxhk24z9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "https://github.com/haroldl/whitespace-nd";
       description = "Whitespace, an esoteric programming language";
       license = "GPL";
     }) {};

  "whois" = callPackage
    ({ mkDerivation, network, network-uri, split }:
     mkDerivation {
       pname = "whois";
       version = "1.2.2";
       sha256 = "199fd710zicx7ijyvipc7p0d3yg18f6nppcln2wz38hl9kfv0iv0";
       editedCabalFile = "07jpszzhzfygz920y09j4xrkw6pgwbpxqn79lavzz0w6jpd447y1";
       buildDepends = [ network network-uri split ];
       homepage = "http://github.com/relrod/whois-hs";
       description = "WHOIS client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wikipedia4epub" = callPackage
    ({ mkDerivation, epub, filepath, HTTP, network, regex-base
     , regex-posix, tagsoup, url, xml, zip-archive, zlib
     }:
     mkDerivation {
       pname = "wikipedia4epub";
       version = "0.0.12";
       sha256 = "089mmwrknghkliakni3wmwrd0hcngg3kqkijfmmky4bxni6w39bd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         epub filepath HTTP network regex-base regex-posix tagsoup url xml
         zip-archive zlib
       ];
       homepage = "http://rampa.sk/static/wikipedia4epub.html";
       description = "Wikipedia EPUB E-Book construction from Firefox history";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "win-hp-path" = callPackage
    ({ mkDerivation, split }:
     mkDerivation {
       pname = "win-hp-path";
       version = "0.1.2";
       sha256 = "131hr8c4q7fwqmwzyp1fwnz349h6103v5gjvzjpbhb7ngki38nfq";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ split ];
       homepage = "http://github.com/ygale/win-hp-path";
       description = "Work with multiple Haskell Platform versions on Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "windowslive" = callPackage
    ({ mkDerivation, Crypto, dataenc, mtl, network, parsec, split, time
     , urlencoded
     }:
     mkDerivation {
       pname = "windowslive";
       version = "0.3";
       sha256 = "15dk3wdv99ggxwypgnv8hs5ygn5bzqml9jhhz6l9kgnc0rrn3jbz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Crypto dataenc mtl network parsec split time urlencoded
       ];
       homepage = "http://patch-tag.com/repo/windowslive";
       description = "Implements Windows Live Web Authentication and Delegated Authentication";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "winerror" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "winerror";
       version = "1.0.1";
       sha256 = "0xamx4yhyv264mka4ypp0r1xh3xv7ba31sis3lbhjycn4i07wlhd";
       description = "Error handling for foreign calls to the Windows API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "winio" = callPackage
    ({ mkDerivation, extensible-exceptions, kernel32, network, winerror
     , ws2_32
     }:
     mkDerivation {
       pname = "winio";
       version = "0.1";
       sha256 = "0f13x6fcb7cb4rfza5vp1dfxx3rcggh5rgw05lkqx9jwvnqcnjwm";
       buildDepends = [ extensible-exceptions network winerror ];
       extraLibraries = [ kernel32 ws2_32 ];
       homepage = "http://github.com/felixmar/winio";
       description = "I/O library for Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "witherable" = callPackage
    ({ mkDerivation, hashable, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "witherable";
       version = "0.1.1.1";
       sha256 = "1i0jvxc1llcq5aayzgqhkz51mqh96pdadml6gi94h2z3yj20nicg";
       buildDepends = [
         hashable transformers unordered-containers vector
       ];
       homepage = "https://github.com/fumieval/witherable";
       description = "Generalization of catMaybes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "witness" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "witness";
       version = "0.2";
       sha256 = "0ibdwp4v49landvqxfy59qggjk3ww33rw87c3f30blyak79s2g7w";
       buildDepends = [ mtl ];
       description = "values that witness types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "witty" = callPackage
    ({ mkDerivation, network }:
     mkDerivation {
       pname = "witty";
       version = "0.0.2";
       sha256 = "0nzxz2716d4xpiz3p21bvg9klfadxnnkxd73311d62cgh3iayqlf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ network ];
       homepage = "https://github.com/kazu-yamamoto/witty/blob/master/README.md";
       description = "A network server to show bottlenecks of GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wizards" = callPackage
    ({ mkDerivation, control-monad-free, haskeline, mtl, transformers
     }:
     mkDerivation {
       pname = "wizards";
       version = "1.0.1";
       sha256 = "08dn24injfzvhs34yw39y336pyi6p98bdrafx3lhd6lcbp531sca";
       buildDepends = [ control-monad-free haskeline mtl transformers ];
       description = "High level, generic library for interrogative user interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wkt" = callPackage
    ({ mkDerivation, lens, linear, parsec, parsec-numbers }:
     mkDerivation {
       pname = "wkt";
       version = "0.2.3";
       sha256 = "1j41d8zxqyc7s6dq0zc4id0pcp0wlyzbx8f96q4r6fhhbngyj8z4";
       buildDepends = [ lens linear parsec parsec-numbers ];
       homepage = "http://github.com/bgamari/wkt";
       description = "Parsec parsers and types for geographic data in well-known text (WKT) format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wl-pprint" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "wl-pprint";
       version = "1.1";
       sha256 = "16kp3fkh0x9kgzk6fdqrm8m0v7b5cgbv0m3x63ybbp5vxbhand06";
       description = "The Wadler/Leijen Pretty Printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wl-pprint-extras" = callPackage
    ({ mkDerivation, HUnit, nats, semigroupoids, semigroups
     , test-framework, test-framework-hunit, text, utf8-string
     }:
     mkDerivation {
       pname = "wl-pprint-extras";
       version = "3.5.0.3";
       sha256 = "124wb4hqd97f3naha0589v18lvi9xbn39bmn8jwaylvyg6s5fyyp";
       buildDepends = [ nats semigroupoids semigroups text utf8-string ];
       testDepends = [ HUnit test-framework test-framework-hunit ];
       homepage = "http://github.com/ekmett/wl-pprint-extras/";
       description = "A free monad based on the Wadler/Leijen pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wl-pprint-terminfo" = callPackage
    ({ mkDerivation, nats, semigroups, terminfo, text, transformers
     , wl-pprint-extras
     }:
     mkDerivation {
       pname = "wl-pprint-terminfo";
       version = "3.7.1.3";
       sha256 = "19z5cr1wqc3xcy39dswx78b6fpxhb41798zkiwkmb97nnvzwbdmv";
       buildDepends = [
         nats semigroups terminfo text transformers wl-pprint-extras
       ];
       homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
       description = "A color pretty printer with terminfo support";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wl-pprint-text" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "wl-pprint-text";
       version = "1.1.0.2";
       sha256 = "0wbfqp38as2qpn66sq4hvl3hzvj66v301cz9rmgnx2i62r0a3s81";
       buildDepends = [ text ];
       description = "A Wadler/Leijen Pretty Printer for Text values";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wobsurv" = callPackage
    ({ mkDerivation, aeson, attoparsec, base-prelude, hastache, HTF
     , http-client, http-types, HUnit, lifted-async, monad-control
     , mwc-random, network, network-simple, pipes, pipes-bytestring
     , pipes-network, pipes-parse, pipes-safe, pipes-text, QuickCheck
     , quickcheck-instances, safe, stm, stm-containers, system-fileio
     , system-filepath, text, time, transformers, unordered-containers
     , yaml
     }:
     mkDerivation {
       pname = "wobsurv";
       version = "0.1.0";
       sha256 = "1w2j7xr4f0a63bwz96js8wrdpfw73qzdg6d607lx2526yrq8xlh2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base-prelude hastache http-types monad-control
         network network-simple pipes pipes-bytestring pipes-network
         pipes-parse pipes-safe pipes-text safe stm stm-containers
         system-fileio system-filepath text time transformers
         unordered-containers yaml
       ];
       testDepends = [
         base-prelude HTF http-client http-types HUnit lifted-async
         mwc-random network QuickCheck quickcheck-instances safe
         system-fileio system-filepath text transformers
       ];
       homepage = "https://github.com/nikita-volkov/wobsurv";
       description = "A simple and highly performant HTTP file server";
       license = stdenv.lib.licenses.mit;
     }) {};

  "woffex" = callPackage
    ({ mkDerivation, binary, filepath, zlib }:
     mkDerivation {
       pname = "woffex";
       version = "0.1";
       sha256 = "0b83s5q4i3f4l45dklp1xgrlcpzrsdbd16fvlpazlcglzxk81xmv";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ binary filepath zlib ];
       description = "Web Open Font Format (WOFF) unpacker";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wol" = callPackage
    ({ mkDerivation, network, split }:
     mkDerivation {
       pname = "wol";
       version = "0.1.2";
       sha256 = "0w0m91srvgbj3qcxw2djpb482qlinsi2dyyb76qksdd2gw0jm57i";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ network split ];
       homepage = "http://tom.lokhorst.eu/wol";
       description = "Send a Wake on LAN Magic Packet";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "word-trie" = callPackage
    ({ mkDerivation, binary, derive, hspec, QuickCheck }:
     mkDerivation {
       pname = "word-trie";
       version = "0.2.0.4";
       sha256 = "0qgljhl2pj54mhsan9w6gchf3l94rs2c5bi9f93q1nz55va1027f";
       buildDepends = [ binary derive ];
       testDepends = [ binary derive hspec QuickCheck ];
       homepage = "https://github.com/yi-editor/word-trie";
       description = "Implementation of a finite trie over words";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "word12" = callPackage
    ({ mkDerivation, hspec, QuickCheck }:
     mkDerivation {
       pname = "word12";
       version = "1.0.0";
       sha256 = "19a22vs314bps0fq7md9jv43xzrya28mmfxi39zd8a1d8h99yd5c";
       testDepends = [ hspec QuickCheck ];
       homepage = "http://github.com/minpou/word12";
       description = "Word12 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "word24" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "word24";
       version = "1.0.7";
       sha256 = "1rh766jrmfw1hy1p4xllfq2ygxpm3zyglw4vcjainajn2r7whnhi";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://www.tiresiaspress.us/haskell/word24";
       description = "24-bit word and int types for GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "word8" = callPackage
    ({ mkDerivation, hspec }:
     mkDerivation {
       pname = "word8";
       version = "0.1.1";
       sha256 = "1xpa0haacimrblxg3x3n5vdcnkg3ff5zqamppdarv0zvkcdj139r";
       testDepends = [ hspec ];
       description = "Word8 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wordcloud" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "wordcloud";
       version = "0.1";
       sha256 = "1jdcv5h41k5xckviyc0p0k0q68s371llcvmkdbg78vh4b3xw7cd5";
       description = "None";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wordexp" = callPackage
    ({ mkDerivation, c2hs, semigroups }:
     mkDerivation {
       pname = "wordexp";
       version = "0.2.0.0";
       sha256 = "1hfpvzbyyh47ai166xyrhmhvg2shrqcswsfalwa16wab6hcg32ki";
       buildDepends = [ semigroups ];
       buildTools = [ c2hs ];
       description = "wordexp(3) wrappers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wordpass" = callPackage
    ({ mkDerivation, deepseq, filepath, hflags, random-fu
     , random-source, text, unix-compat, vector
     }:
     mkDerivation {
       pname = "wordpass";
       version = "1.0.0.0";
       sha256 = "0y5d9dm45yhy54bg3qsy7kf6170m4p2azr0v2v7bnaix2gd82r2p";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         deepseq filepath hflags random-fu random-source text unix-compat
         vector
       ];
       homepage = "https://github.com/mgajda/wordpass";
       description = "Dictionary-based password generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "words" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "words";
       version = "0.1.2";
       sha256 = "0najaqi9fkqdkfks1c6w3fz4qf7dnr4h4brzgglg1h9ik8x5a910";
       buildDepends = [ text ];
       description = "Cross-platform access to a list of words";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wordsearch" = callPackage
    ({ mkDerivation, fclabels }:
     mkDerivation {
       pname = "wordsearch";
       version = "1.0.1";
       sha256 = "0jq1aiw35xiklc9asa1pgw2rn6i8q17fq780chqpqz0ryq0iv4x2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ fclabels ];
       description = "A word search solver library and executable";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wordsetdiff" = callPackage
    ({ mkDerivation, ansi-terminal, filepath, hashmap }:
     mkDerivation {
       pname = "wordsetdiff";
       version = "0.0.3.1";
       sha256 = "0kzbs1ps8fxdsjcpyvccgpw1y6i1q5gw6brgf6j1vv6r24wsh00w";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ansi-terminal filepath hashmap ];
       homepage = "http://people.csail.mit.edu/newton/wordsetdiff";
       description = "Compare two files as sets of N-tuples of words";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wp-archivebot" = callPackage
    ({ mkDerivation, feed, HTTP, network, parallel, tagsoup }:
     mkDerivation {
       pname = "wp-archivebot";
       version = "0.1";
       sha256 = "04aq760z5jn81z03yi9l0d0w034qjiqiwb702lkvk2002b61mk5z";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ feed HTTP network parallel tagsoup ];
       description = "Subscribe to a wiki's RSS feed and archive external links";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wraparound" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "wraparound";
       version = "0.0.2";
       sha256 = "161mz5bfmx13s9azh3dss64fw98vbaab8krysr9pbbp9dh79i1cf";
       homepage = "http://frigidcode.com";
       description = "Convenient handling of points on a seamless 2-dimensional plane";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wraxml" = callPackage
    ({ mkDerivation, data-accessor, explicit-exception, HaXml, hxt
     , hxt-filter, polyparse, tagchup, tagsoup, transformers, utility-ht
     , xml-basic
     }:
     mkDerivation {
       pname = "wraxml";
       version = "0.4.4";
       sha256 = "1h8lqav0q6vka8yr64032yh3ncjvz6fxp1j9q5jqhzm0ai34air3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         data-accessor explicit-exception HaXml hxt hxt-filter polyparse
         tagchup tagsoup transformers utility-ht xml-basic
       ];
       homepage = "http://code.haskell.org/~thielema/wraxml/";
       description = "Lazy wrapper to HaXML, HXT, TagSoup via custom XML tree structure";
       license = "GPL";
     }) {};

  "wreq" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec
     , base16-bytestring, base64-bytestring, byteable, case-insensitive
     , cryptohash, doctest, exceptions, filepath, hashable, http-client
     , http-client-tls, http-types, HUnit, lens, lens-aeson, mime-types
     , network-info, PSQueue, QuickCheck, snap-core, snap-server
     , temporary, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers, unix-compat
     , unordered-containers, uuid
     }:
     mkDerivation {
       pname = "wreq";
       version = "0.3.0.1";
       sha256 = "13apqr8sfx2vi794ldqprmgqch79sqli9scgyk3k41v7wcwqaal4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec base16-bytestring byteable case-insensitive
         cryptohash exceptions hashable http-client http-client-tls
         http-types lens lens-aeson mime-types PSQueue text time
         unordered-containers
       ];
       testDepends = [
         aeson aeson-pretty aeson-qq base64-bytestring case-insensitive
         doctest filepath hashable http-client http-types HUnit lens
         lens-aeson network-info QuickCheck snap-core snap-server temporary
         test-framework test-framework-hunit test-framework-quickcheck2 text
         transformers unix-compat uuid
       ];
       homepage = "http://www.serpentine.com/wreq";
       description = "An easy-to-use HTTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wright" = callPackage
    ({ mkDerivation, assertions, bed-and-breakfast, filepath, lens }:
     mkDerivation {
       pname = "wright";
       version = "0.1.0.2";
       sha256 = "180012vyslprj06npavh44fmii1813w22sws9zwxzlb4r4jdm4zi";
       buildDepends = [ bed-and-breakfast ];
       testDepends = [ assertions bed-and-breakfast filepath lens ];
       description = "Colour space transformations and metrics";
       license = stdenv.lib.licenses.mit;
     }) {};

  "wsedit" = callPackage
    ({ mkDerivation, bencode, safe, utf8-string }:
     mkDerivation {
       pname = "wsedit";
       version = "0.1.0.0";
       sha256 = "1035v9c22pngk2r3yisr2vvnfdjgynlgq8adj8z50xak998x22ri";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bencode safe utf8-string ];
       description = "A small tool to list, add and remove webseeds from a torrent file";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "wtk" = callPackage
    ({ mkDerivation, time, transformers }:
     mkDerivation {
       pname = "wtk";
       version = "0.2.1";
       sha256 = "080y0ks5q6bv7dvla08x4cvcmzd13b5v1c5p5336k0vkg2c3fq79";
       buildDepends = [ time transformers ];
       description = "Wojcik Tool Kit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wtk-gtk" = callPackage
    ({ mkDerivation, gtk, lenses, mtl, parsec, time, wtk }:
     mkDerivation {
       pname = "wtk-gtk";
       version = "0.2";
       sha256 = "0n9fvp83z71jvv67zjpz34r427s898shns00v84kfjjklhd61q5y";
       buildDepends = [ gtk lenses mtl parsec time wtk ];
       description = "GTK tools within Wojcik Tool Kit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wumpus-basic" = callPackage
    ({ mkDerivation, filepath, vector-space, wumpus-core }:
     mkDerivation {
       pname = "wumpus-basic";
       version = "0.24.0";
       sha256 = "1mahlvja39jc6zvm32n23p8ya2pfwwawbyawx8srds0bsfyqqmng";
       buildDepends = [ filepath vector-space wumpus-core ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Basic objects and system code built on Wumpus-Core";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wumpus-core" = callPackage
    ({ mkDerivation, time, vector-space }:
     mkDerivation {
       pname = "wumpus-core";
       version = "0.52.1";
       sha256 = "10q991xb9v2r3z7q53rwrqcqd4m6qazvdibrxsn2620l2zbjxnd8";
       buildDepends = [ time vector-space ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Pure Haskell PostScript and SVG generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wumpus-drawing" = callPackage
    ({ mkDerivation, vector-space, wumpus-basic, wumpus-core }:
     mkDerivation {
       pname = "wumpus-drawing";
       version = "0.9.0";
       sha256 = "1y9j2d3k862zi8681q3b2pl4nx4vyazdfwx5ji4mfgy73z62lbxw";
       buildDepends = [ vector-space wumpus-basic wumpus-core ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "High-level drawing objects built on Wumpus-Basic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wumpus-microprint" = callPackage
    ({ mkDerivation, vector-space, wumpus-basic, wumpus-core
     , wumpus-drawing
     }:
     mkDerivation {
       pname = "wumpus-microprint";
       version = "0.14.0";
       sha256 = "1rrw8hzns7qa9jyzhbal0x0xbi5wa99afixs0cxqk0kgm6sar9cz";
       buildDepends = [
         vector-space wumpus-basic wumpus-core wumpus-drawing
       ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Microprints - \"greek-text\" pictures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wumpus-tree" = callPackage
    ({ mkDerivation, vector-space, wumpus-basic, wumpus-core
     , wumpus-drawing
     }:
     mkDerivation {
       pname = "wumpus-tree";
       version = "0.20.0";
       sha256 = "1xndkri4ayxb12xhik77r59qlg05nhibc8b257csrw9br7xkk8ja";
       buildDepends = [
         vector-space wumpus-basic wumpus-core wumpus-drawing
       ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Drawing trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wx" = callPackage
    ({ mkDerivation, stm, wxcore }:
     mkDerivation {
       pname = "wx";
       version = "0.91.0.0";
       sha256 = "133cjc3vfqxyw71a5x99flzg23qa2k28p2zajw6vp0z7qhv8kfjy";
       buildDepends = [ stm wxcore ];
       homepage = "http://haskell.org/haskellwiki/WxHaskell";
       description = "wxHaskell";
       license = "unknown";
     }) {};

  "wxAsteroids" = callPackage
    ({ mkDerivation, random, wx, wxcore }:
     mkDerivation {
       pname = "wxAsteroids";
       version = "1.0";
       sha256 = "0mwsh9bhzhnf8la5khy17j2brbphvkicqg0yd0y9ymnn6bgnq4br";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random wx wxcore ];
       homepage = "http://www.haskell.org/haskellwiki/wxAsteroids";
       description = "Try to avoid the asteroids with your space ship";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wxFruit" = callPackage
    ({ mkDerivation, wx, wxcore, Yampa }:
     mkDerivation {
       pname = "wxFruit";
       version = "0.1.2.1";
       sha256 = "09n0b8znrwa65z1cjfizxkxj2rlsp56akagih5cycxpwivj1d7p9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ wx wxcore Yampa ];
       homepage = "http://www.haskell.org/haskellwiki/WxFruit";
       description = "An implementation of Fruit using wxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wxc" = callPackage
    ({ mkDerivation, libX11, mesa, wxdirect, wxGTK }:
     mkDerivation {
       pname = "wxc";
       version = "0.91.0.0";
       sha256 = "0siab2h28dlyliznydxll22l9hdgwbmgddj01k1xw8hj4g7b53sa";
       buildDepends = [ wxdirect ];
       extraLibraries = [ libX11 mesa wxGTK ];
       postInstall = ''
         cp -v dist/build/libwxc.so.0.91.0.0 $out/lib/libwxc.so
       '';
       homepage = "http://haskell.org/haskellwiki/WxHaskell";
       description = "wxHaskell C++ wrapper";
       license = "unknown";
     }) {};

  "wxcore" = callPackage
    ({ mkDerivation, filepath, libX11, mesa, parsec, stm, time, wxc
     , wxdirect, wxGTK
     }:
     mkDerivation {
       pname = "wxcore";
       version = "0.91.0.0";
       sha256 = "01pvaysihyijklyw129vcafjqyh8bpafjzvscxvzll1g86qbqlkz";
       buildDepends = [ filepath parsec stm time wxc wxdirect ];
       extraLibraries = [ libX11 mesa wxGTK ];
       homepage = "http://haskell.org/haskellwiki/WxHaskell";
       description = "wxHaskell core";
       license = "unknown";
     }) {};

  "wxdirect" = callPackage
    ({ mkDerivation, filepath, parsec, strict, time }:
     mkDerivation {
       pname = "wxdirect";
       version = "0.91.0.0";
       sha256 = "17xlviyyagcvmc7m1f4djnsw0wdakirarmv12j4fmwbnfnbryp27";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath parsec strict time ];
       homepage = "http://haskell.org/haskellwiki/WxHaskell";
       description = "helper tool for building wxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wxhnotepad" = callPackage
    ({ mkDerivation, wx, wxcore }:
     mkDerivation {
       pname = "wxhnotepad";
       version = "1.2.0";
       sha256 = "10897yb7mkc9hy2037r9yb4192n65lz997fd5apksra1rifrazyp";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ wx wxcore ];
       homepage = "http://github.com/elbrujohalcon/wxhnotepad";
       description = "An example of how to implement a basic notepad with wxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wxturtle" = callPackage
    ({ mkDerivation, convertible, Imlib, wx, yjsvg, yjtools }:
     mkDerivation {
       pname = "wxturtle";
       version = "0.0.1";
       sha256 = "0sdbi9dfja2ia0n3kggvqc3n3c5rgw096d767yvyzc52k5caakn7";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ convertible Imlib wx yjsvg yjtools ];
       description = "turtle like LOGO with wxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "wybor" = callPackage
    ({ mkDerivation, ansi-terminal, conduit, hspec, lens, resourcet
     , semigroups, terminal-size, text, transformers
     }:
     mkDerivation {
       pname = "wybor";
       version = "0.1.0";
       sha256 = "0cyfhjpb775891qbfc3y15y16mx2hraavgvsrvqkb701rh5vngf6";
       buildDepends = [
         ansi-terminal conduit lens resourcet semigroups terminal-size text
         transformers
       ];
       testDepends = [
         ansi-terminal conduit hspec lens resourcet semigroups terminal-size
         text transformers
       ];
       homepage = "https://github.com/supki/wybor";
       description = "Console line fuzzy search";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "wyvern" = callPackage
    ({ mkDerivation, ConfigFile, dgs, filepath, mtl, parsec, sgf, split
     }:
     mkDerivation {
       pname = "wyvern";
       version = "0.1";
       sha256 = "147v55c1ravnb769sjw2c8i4qw0gxh3scvx5cvb1fa6nng4x0hnq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ConfigFile dgs filepath mtl parsec sgf split ];
       homepage = "http://dmwit.com/wyvern";
       description = "An autoresponder for Dragon Go Server";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "x-dsp" = callPackage
    ({ mkDerivation, monads-tf, text, transformers, type-level }:
     mkDerivation {
       pname = "x-dsp";
       version = "0.2.3.1";
       sha256 = "12l3zy9lmg7sf4q8b3yz2cb9pj9n0sgjglnqhcfkzzdg6pb0g4hj";
       buildDepends = [ monads-tf text transformers type-level ];
       homepage = "http://jwlato.webfactional.com/haskell/x-dsp";
       description = "A embedded DSL for manipulating DSP languages in Haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "x11-xim" = callPackage
    ({ mkDerivation, utf8-string, X11 }:
     mkDerivation {
       pname = "x11-xim";
       version = "0.0.9.0";
       sha256 = "0sn789j0kz891l9p0srx6537yq44b5jlyph9vc3xdb3ygy20bjrw";
       editedCabalFile = "1c561z9xvfcd7ddbiw3r0frhjvsrklachd38s66fzwjdgw1sl124";
       buildDepends = [ utf8-string X11 ];
       homepage = "https://github.com/YoshikuniJujo/x11-xim_haskell/wiki/";
       description = "A binding to the xim of X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "x11-xinput" = callPackage
    ({ mkDerivation, c2hs, libXi, mtl, X11 }:
     mkDerivation {
       pname = "x11-xinput";
       version = "0.1.0.0";
       sha256 = "15ij6yfjjyqgzka1163a08ngrraxa4jpbwjq2izdl2l44k0mw29v";
       buildDepends = [ mtl X11 ];
       buildTools = [ c2hs ];
       extraLibraries = [ libXi ];
       homepage = "http://redmine.iportnov.ru/projects/x11-xinput";
       description = "Haskell FFI bindings for X11 XInput library (-lXi)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "x509" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types
     , crypto-pubkey-types, cryptohash, filepath, hourglass, mtl, pem
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "x509";
       version = "1.5.0.1";
       sha256 = "03gj4190f0ql1ghn2mri8901xdydhhnwijyfn8lmpjyn7pgpl3ba";
       buildDepends = [
         asn1-encoding asn1-parse asn1-types crypto-pubkey-types cryptohash
         filepath hourglass mtl pem
       ];
       testDepends = [
         asn1-types crypto-pubkey-types hourglass mtl tasty tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X509 reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "x509-store" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, crypto-pubkey-types
     , filepath, mtl, pem, x509
     }:
     mkDerivation {
       pname = "x509-store";
       version = "1.5.0";
       sha256 = "1w9sqb007s4avjzvrdwq13a4c528h7h2lg3m8cl31syrgznc9ny5";
       buildDepends = [
         asn1-encoding asn1-types crypto-pubkey-types filepath mtl pem x509
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 collection accessing and storing methods";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "x509-system" = callPackage
    ({ mkDerivation, filepath, mtl, pem, x509, x509-store }:
     mkDerivation {
       pname = "x509-system";
       version = "1.5.0";
       sha256 = "159zwg35nq42j1rl0p4x00hdf3iy48hd7kavz0rnpwd2p7ljamr3";
       buildDepends = [ filepath mtl pem x509 x509-store ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Handle per-operating-system X.509 accessors and storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "x509-util" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, crypto-pubkey
     , crypto-pubkey-types, cryptohash, pem, x509, x509-store
     , x509-system, x509-validation
     }:
     mkDerivation {
       pname = "x509-util";
       version = "1.5.2";
       sha256 = "12nhxi1lqr5arlj586ai6n86n226iz6k4gbnm0dq07dwgky4j0iy";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         asn1-encoding asn1-types crypto-pubkey crypto-pubkey-types
         cryptohash pem x509 x509-store x509-system x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Utility for X509 certificate and chain";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "x509-validation" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, byteable, crypto-pubkey
     , crypto-pubkey-types, cryptohash, data-default-class, filepath
     , hourglass, mtl, network, pem, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-validation";
       version = "1.5.1";
       sha256 = "19cp187id9hdlzkr7sbv2sdxqxnpjv0db09hwf3zdqqqxr30mn6x";
       buildDepends = [
         asn1-encoding asn1-types byteable crypto-pubkey crypto-pubkey-types
         cryptohash data-default-class filepath hourglass mtl network pem
         x509 x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 Certificate and CRL validation";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xattr" = callPackage
    ({ mkDerivation, attr, filepath, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "xattr";
       version = "0.6.2";
       sha256 = "02vbxxn0qvkxvfxv1zgr95bvdzx14fp9h7s27wbz6mjfkfgvc39q";
       testDepends = [
         filepath HUnit test-framework test-framework-hunit
       ];
       extraLibraries = [ attr ];
       description = "Haskell extended file attributes interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xbattbar" = callPackage
    ({ mkDerivation, select, X11 }:
     mkDerivation {
       pname = "xbattbar";
       version = "0.2";
       sha256 = "1hc3k3w5x1c027jj4lgpwl4cxvy01sx78sc560fdfj6bpsqlcln0";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ select X11 ];
       homepage = "https://github.com/polachok/xbattbar";
       description = "Simple battery indicator";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xcb-types" = callPackage
    ({ mkDerivation, mtl, xml }:
     mkDerivation {
       pname = "xcb-types";
       version = "0.7.0";
       sha256 = "1kzqsd85zp937yna2yfpc3jy0hba92h2fp6j0a6r8r7zz5l8yk3k";
       buildDepends = [ mtl xml ];
       homepage = "http://community.haskell.org/~aslatter/code/xcb-types";
       description = "Parses XML files used by the XCB project";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xcffib" = callPackage
    ({ mkDerivation, attoparsec, filemanip, filepath, HUnit
     , language-python, mtl, optparse-applicative, split, test-framework
     , test-framework-hunit, xcb-types
     }:
     mkDerivation {
       pname = "xcffib";
       version = "0.1.5";
       sha256 = "1awflg2z6ixxngdy393q892anwpdibximkz21y95n022hl0wzlbr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         attoparsec filemanip filepath language-python mtl
         optparse-applicative split xcb-types
       ];
       testDepends = [
         filepath HUnit language-python test-framework test-framework-hunit
         xcb-types
       ];
       homepage = "http://github.com/tych0/xcffib";
       description = "A cffi-based python binding for X";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xchat-plugin" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "xchat-plugin";
       version = "0.0.3";
       sha256 = "0rjpj6i4fn504m7s3hwqbydn0m0ryih0hw4xnc409338sval6xj6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath ];
       description = "XChat";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "xdg-basedir" = callPackage
    ({ mkDerivation, filepath }:
     mkDerivation {
       pname = "xdg-basedir";
       version = "0.2.2";
       sha256 = "0azlzaxp2dn4l1nr7shsxah2magk1szf6fx0mv75az00qsjw6qg4";
       buildDepends = [ filepath ];
       homepage = "http://github.com/willdonnelly/xdg-basedir";
       description = "A basic implementation of the XDG Base Directory specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xdg-userdirs" = callPackage
    ({ mkDerivation, filepath, xdg-basedir }:
     mkDerivation {
       pname = "xdg-userdirs";
       version = "0.1.0.2";
       sha256 = "0vh4m385a828qb61845bb7zfcqfm000g4fjkmmlvdrfyh35vpal8";
       buildDepends = [ filepath xdg-basedir ];
       homepage = "http://redmine.iportnov.ru/projects/xdg-userdirs";
       description = "Basic implementation of XDG user directories specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xdot" = callPackage
    ({ mkDerivation, cairo, graphviz, gtk, mtl, polyparse, text }:
     mkDerivation {
       pname = "xdot";
       version = "0.2.4.6";
       sha256 = "123vygzkqlycc298zh3321y7w85xnynbavzqms6cb8zgzya42wrs";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cairo graphviz gtk mtl polyparse text ];
       description = "Parse Graphviz xdot files and interactively view them using GTK and Cairo";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xenstore" = callPackage
    ({ mkDerivation, cereal, mtl, network }:
     mkDerivation {
       pname = "xenstore";
       version = "0.1.1";
       sha256 = "0x788lpkkxg7ds1bgnw0kvkf6pkfbknn7jy0njhz85k7rv4kidf2";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cereal mtl network ];
       description = "Xenstore client access";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xfconf" = callPackage
    ({ mkDerivation, glib, gtk2hs-buildtools, libxfconf-0 }:
     mkDerivation {
       pname = "xfconf";
       version = "4.8.0.0";
       sha256 = "0q63zavh3fz03dmky42gafypd0gpn8fs0nb9qn2a2zzj961vzswz";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ glib ];
       buildTools = [ gtk2hs-buildtools ];
       pkgconfigDepends = [ libxfconf-0 ];
       homepage = "http://patch-tag.com/r/obbele/xfconf/home";
       description = "FFI bindings to xfconf";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "xformat" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "xformat";
       version = "0.1.2.1";
       sha256 = "1q2wm0wffvppbv5rd16z367yfkx2sq7j0i5dkfwpawf859c9pz7x";
       homepage = "http://github.com/spl/xformat";
       description = "Extensible, type-safe formatting with scanf- and printf-like functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xhaskell-library" = callPackage
    ({ mkDerivation, mtl, parsec, regex-base }:
     mkDerivation {
       pname = "xhaskell-library";
       version = "0.0.6";
       sha256 = "13nnlaw56izwy0m7k4kh4g75sa5pvxn0pf9h3w8l9hnjcpv4l2ya";
       buildDepends = [ mtl parsec regex-base ];
       homepage = "http://code.google.com/p/xhaskell-library/";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xhb" = callPackage
    ({ mkDerivation, binary, byteorder, network, parsec, stm, Xauth }:
     mkDerivation {
       pname = "xhb";
       version = "0.5.2014.4.10";
       sha256 = "1r5z92p98jn8pdcqmdiv0hriq7y8743q4sxfjfds602rr4qf97gz";
       buildDepends = [ binary byteorder network parsec stm Xauth ];
       homepage = "https://github.com/aslatter/xhb";
       description = "X Haskell Bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xhtml" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "xhtml";
       version = "3000.2.1";
       sha256 = "1n6wgzxbj8xf0wf1il827qidphnffb5vzhwzqlxhh70c2y10f0ik";
       homepage = "https://github.com/haskell/xhtml";
       description = "An XHTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xhtml-combinators" = callPackage
    ({ mkDerivation, random, text, transformers, xml }:
     mkDerivation {
       pname = "xhtml-combinators";
       version = "0.3";
       sha256 = "06bmdl34kly965qj7phw1hm7p7siwjprflr72n7ck32lrknmy2hk";
       buildDepends = [ random text transformers xml ];
       homepage = "http://www.dcs.shef.ac.uk/~aca08aa/xhtmlc.html";
       description = "Fast and easy to use XHTML combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xilinx-lava" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "xilinx-lava";
       version = "5.0.1.9";
       sha256 = "13g44483bcgbfi3366m7l49z40prvr2abml6h6vcjbjnc575cs37";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ mtl ];
       description = "The Lava system for Xilinx FPGA design with layout combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xine" = callPackage
    ({ mkDerivation, c2hs, libxine, xine }:
     mkDerivation {
       pname = "xine";
       version = "0.0.0.4";
       sha256 = "1mvi486vjf4brg6iks24wvb7gr5n7gdcqzdvv9xnncmxrscr6x36";
       buildTools = [ c2hs ];
       extraLibraries = [ xine ];
       pkgconfigDepends = [ libxine ];
       homepage = "http://github.com/joachifm/hxine";
       description = "Bindings to xine-lib";
       license = "LGPL";
     }) { inherit (pkgs) xine; };

  "xing-api" = callPackage
    ({ mkDerivation, aeson, authenticate-oauth, HTF, http-conduit
     , http-types, lifted-base, monad-control, resourcet, text, time
     , transformers
     }:
     mkDerivation {
       pname = "xing-api";
       version = "0.1.3";
       sha256 = "1z135lcyyq7as166k3vhkqa75a555wbmfhpsdr4rsvpliq4ipqmk";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson authenticate-oauth http-conduit http-types lifted-base
         monad-control resourcet text time transformers
       ];
       testDepends = [ aeson HTF text time ];
       homepage = "http://github.com/JanAhrens/xing-api-haskell";
       description = "Wrapper for the XING API, v1";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xkbcommon" = callPackage
    ({ mkDerivation, cpphs, data-flags, filepath, storable-record, text
     , transformers, xkbcommon
     }:
     mkDerivation {
       pname = "xkbcommon";
       version = "0.0.1";
       sha256 = "1chv156z6208jypl2grjjgbyja4ai3acx65rfyfpqb30987yf0r5";
       buildDepends = [
         cpphs data-flags filepath storable-record text transformers
       ];
       extraLibraries = [ xkbcommon ];
       description = "Haskell bindings for libxkbcommon";
       license = stdenv.lib.licenses.mit;
     }) { inherit (pkgs) xkbcommon; };

  "xkcd" = callPackage
    ({ mkDerivation, filepath, HTTP, network, tagsoup }:
     mkDerivation {
       pname = "xkcd";
       version = "0.1.1";
       sha256 = "15zwx7rkxm52pnxjhx3p979h48cls1ipb7hmryxll5rcxz9aga29";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath HTTP network tagsoup ];
       homepage = "http://github.com/sellweek/xkcd";
       description = "Downloads the most recent xkcd comic";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xlsx" = callPackage
    ({ mkDerivation, conduit, data-default, digest, HUnit, lens
     , smallcheck, tasty, tasty-hunit, tasty-smallcheck, text, time
     , transformers, utf8-string, xml-conduit, xml-types, zip-archive
     , zlib
     }:
     mkDerivation {
       pname = "xlsx";
       version = "0.1.0.3";
       sha256 = "1i1dfb6gv4h3nc9ja7yxjzb8g207vzp58dnk4rgfcfglyvadn8kp";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         conduit data-default digest lens text time transformers utf8-string
         xml-conduit xml-types zip-archive zlib
       ];
       testDepends = [
         HUnit smallcheck tasty tasty-hunit tasty-smallcheck time
       ];
       homepage = "https://github.com/qrilka/xlsx";
       description = "Simple and incomplete Excel file parser/writer";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xlsx-templater" = callPackage
    ({ mkDerivation, conduit, data-default, parsec, text, time
     , transformers, xlsx
     }:
     mkDerivation {
       pname = "xlsx-templater";
       version = "0.0.1";
       sha256 = "00m5x9vhl0rf8azwgin6a75xpj74gybn757021z9dkn1qy35zjwr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         conduit data-default parsec text time transformers xlsx
       ];
       homepage = "https://github.com/qrilka/xlsx-templater";
       description = "Simple and incomplete Excel file templater";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xml" = callPackage
    ({ mkDerivation, text }:
     mkDerivation {
       pname = "xml";
       version = "1.3.13";
       sha256 = "04xq2ma2if5gqz16bjrxwigh4vzw6m8i2zk11s5qg3d4z370fdn3";
       buildDepends = [ text ];
       homepage = "http://code.galois.com";
       description = "A simple XML library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-basic" = callPackage
    ({ mkDerivation, data-accessor, explicit-exception, utility-ht }:
     mkDerivation {
       pname = "xml-basic";
       version = "0.1.1.3";
       sha256 = "0m3pwg8b9pvqh9559p7nq39vnkklmf9gcay8vpvrkh17p8n14z6c";
       buildDepends = [ data-accessor explicit-exception utility-ht ];
       homepage = "http://www.haskell.org/haskellwiki/XML-Basic";
       description = "Basics for XML/HTML representation and processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-catalog" = callPackage
    ({ mkDerivation, conduit, text, transformers, uri-conduit
     , xml-conduit
     }:
     mkDerivation {
       pname = "xml-catalog";
       version = "1.1.0.2";
       sha256 = "0jzi63v8v2ksrqrk13pcl10awx57i2vm0k8xgi01rr1ncmlrnyfc";
       buildDepends = [
         conduit text transformers uri-conduit xml-conduit
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Parse XML catalog files (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-conduit" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, blaze-html
     , blaze-markup, conduit, conduit-extra, data-default, deepseq
     , hspec, HUnit, monad-control, resourcet, system-filepath, text
     , transformers, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit";
       version = "1.2.3";
       sha256 = "1knwmvs9hczlknyi27hciy1xkn219s6niv3w7q0wkw6rxz2q555v";
       buildDepends = [
         attoparsec blaze-builder blaze-html blaze-markup conduit
         conduit-extra data-default deepseq monad-control resourcet
         system-filepath text transformers xml-types
       ];
       testDepends = [
         blaze-markup conduit hspec HUnit resourcet text transformers
         xml-types
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Pure-Haskell utilities for dealing with XML with the conduit package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-conduit-writer" = callPackage
    ({ mkDerivation, dlist, mtl, text, xml-conduit, xml-types }:
     mkDerivation {
       pname = "xml-conduit-writer";
       version = "0.1.1.1";
       sha256 = "1ibiqxjr63gb3v0h9fdfzm205sqjixb5vm5y6413yn4scbf7qm2b";
       buildDepends = [ dlist mtl text xml-conduit xml-types ];
       testDepends = [ text ];
       homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
       description = "Warm and fuzzy creation of XML documents";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xml-enumerator" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, blaze-builder
     , blaze-builder-enumerator, data-default, enumerator, failure
     , hspec, HUnit, text, transformers, xml-types
     }:
     mkDerivation {
       pname = "xml-enumerator";
       version = "0.4.4.1";
       sha256 = "0vwn6s7x626970b8lgyhmngkqv5n5kvv0qikrvi9sjzq5rjyx1zj";
       buildDepends = [
         attoparsec attoparsec-enumerator blaze-builder
         blaze-builder-enumerator data-default enumerator failure text
         transformers xml-types
       ];
       testDepends = [
         enumerator hspec HUnit text transformers xml-types
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Pure-Haskell utilities for dealing with XML with the enumerator package. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-enumerator-combinators" = callPackage
    ({ mkDerivation, enumerator, xml-enumerator, xml-types }:
     mkDerivation {
       pname = "xml-enumerator-combinators";
       version = "0.1";
       sha256 = "1n2lywzbbjkpccpgwlj8ycf4p5wlhjs60hgqzwb33j7qiraf5jb3";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ enumerator xml-enumerator xml-types ];
       description = "Parser combinators for xml-enumerator and compatible XML parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-hamlet" = callPackage
    ({ mkDerivation, hspec, HUnit, parsec, shakespeare, text
     , xml-conduit
     }:
     mkDerivation {
       pname = "xml-hamlet";
       version = "0.4.0.9";
       sha256 = "0vm4jhvjf53a33sisnhghg0m9pcv2fx676rl90vbm2xcd9rqlj82";
       buildDepends = [ parsec shakespeare text xml-conduit ];
       testDepends = [ hspec HUnit parsec shakespeare text xml-conduit ];
       homepage = "http://www.yesodweb.com/";
       description = "Hamlet-style quasiquoter for XML content";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-helpers" = callPackage
    ({ mkDerivation, xml }:
     mkDerivation {
       pname = "xml-helpers";
       version = "1.0.0";
       sha256 = "0rrk0j7m8ws86hbjw0l4ryq4m9i8llhsag2sfisy5r1iv2zwa0lv";
       buildDepends = [ xml ];
       homepage = "http://github.com/acw/xml-helpers";
       description = "Some useful helper functions for the xml library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-html-conduit-lens" = callPackage
    ({ mkDerivation, doctest, hspec, hspec-expectations-lens
     , html-conduit, lens, text, xml-conduit
     }:
     mkDerivation {
       pname = "xml-html-conduit-lens";
       version = "0.3.2.1";
       sha256 = "0iy58nq5b6ixdky2xr4r8xxk3c8wqp1y3jbpsk3dr1qawzjbzp12";
       editedCabalFile = "0iq6m3wyaj8xxhrass9lylddj993ksl9ngxbdzf0dqv4p67dc9dm";
       buildDepends = [ html-conduit lens text xml-conduit ];
       testDepends = [
         doctest hspec hspec-expectations-lens lens xml-conduit
       ];
       homepage = "https://github.com/supki/xml-html-conduit-lens#readme";
       description = "Optics for xml-conduit and html-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-lens" = callPackage
    ({ mkDerivation, lens, text, xml-conduit }:
     mkDerivation {
       pname = "xml-lens";
       version = "0.1.6.2";
       sha256 = "14x3xz4rydl8x7ddznz90n3z5csy12c7l0r7bms8s7yqv4qzf6hz";
       buildDepends = [ lens text xml-conduit ];
       homepage = "https://github.com/fumieval/xml-lens";
       description = "Lenses, traversals, prisms for xml-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-monad" = callPackage
    ({ mkDerivation, mtl, transformers, transformers-compose, xml }:
     mkDerivation {
       pname = "xml-monad";
       version = "0.5";
       sha256 = "17axppy0xzshmvw8y23hxcj2ixm2fqw3hqrjk90qmpkjcv4nk44r";
       buildDepends = [ mtl transformers transformers-compose xml ];
       homepage = "http://github.com/aristidb/xml-monad";
       description = "Monadic extensions to the xml package";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-parsec" = callPackage
    ({ mkDerivation, HaXml, parsec }:
     mkDerivation {
       pname = "xml-parsec";
       version = "1.0.3";
       sha256 = "1zcmiqyw6bs50kl2417ygvnpsk9wy025ls5ck8cd863x47bqpdn2";
       buildDepends = [ HaXml parsec ];
       homepage = "http://sep07.mroot.net/";
       description = "Parsing XML with Parsec";
       license = "GPL";
     }) {};

  "xml-picklers" = callPackage
    ({ mkDerivation, Cabal, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck, text, xml-types
     }:
     mkDerivation {
       pname = "xml-picklers";
       version = "0.3.5";
       sha256 = "1h0m6in8w3m8d987yzs4m8s86dsa6fb0i0l7xddk7csmhsyflk2a";
       buildDepends = [ text xml-types ];
       testDepends = [
         Cabal QuickCheck tasty tasty-hunit tasty-quickcheck text xml-types
       ];
       description = "XML picklers based on xml-types, ported from hexpat-pickle";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-pipe" = callPackage
    ({ mkDerivation, papillon, simple-pipe }:
     mkDerivation {
       pname = "xml-pipe";
       version = "0.0.0.11";
       sha256 = "0j5fjnf6r7cagcl1ni5idwj1k5q6vjp6c59ajwsx39iqx1kdmly4";
       buildDepends = [ papillon simple-pipe ];
       homepage = "https://github.com/YoshikuniJujo/xml-pipe/wiki";
       description = "XML parser which uses simple-pipe";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-prettify" = callPackage
    ({ mkDerivation, cmdargs }:
     mkDerivation {
       pname = "xml-prettify";
       version = "0.1.0.1";
       sha256 = "1abjmxihh0ldlh8k4mp922s0h39303farmdbm08qn909pbrzm0f0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ cmdargs ];
       homepage = "http://github.com/rosenbergdm/xml-prettify";
       description = "Pretty print XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-push" = callPackage
    ({ mkDerivation, crypto-random, handle-like, monad-control
     , monads-tf, peyotls, random, sasl, simple-pipe, stm, tighttp
     , transformers-base, uuid, x509, x509-store, x509-validation
     , xml-pipe, xmpipe
     }:
     mkDerivation {
       pname = "xml-push";
       version = "0.0.0.18";
       sha256 = "1i8qmz7mr8rfspkn4wwyq7f7fi1grpggmqmfsmx6l7bjsjv15n3y";
       buildDepends = [
         crypto-random handle-like monad-control monads-tf peyotls random
         sasl simple-pipe stm tighttp transformers-base uuid x509 x509-store
         x509-validation xml-pipe xmpipe
       ];
       homepage = "https://github.com/YoshikuniJujo/xml-push/wiki";
       description = "Push XML from/to client to/from server over XMPP or HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml-to-json" = callPackage
    ({ mkDerivation, aeson, curl, hashable, hxt, hxt-curl, hxt-expat
     , hxt-tagsoup, regex-posix, tagsoup, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "xml-to-json";
       version = "1.0.1";
       sha256 = "098crnwdq96rzb0ixy1s5krbabfgc36dnxr1ygav3fpqr16ndrng";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson curl hashable hxt hxt-curl hxt-expat hxt-tagsoup regex-posix
         tagsoup text unordered-containers vector
       ];
       homepage = "https://github.com/sinelaw/xml-to-json";
       description = "Library and command line tool for converting XML files to json";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xml-to-json-fast" = callPackage
    ({ mkDerivation, tagsoup, text }:
     mkDerivation {
       pname = "xml-to-json-fast";
       version = "1.0.0";
       sha256 = "0kd5civ3rv2b1c1xfb985fri2q5arnj80qydazcp4h3vvf301gmh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ tagsoup text ];
       homepage = "https://github.com/sinelaw/xml-to-json-fast";
       description = "Fast, light converter of xml to json capable of handling huge xml files";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xml-types" = callPackage
    ({ mkDerivation, deepseq, text }:
     mkDerivation {
       pname = "xml-types";
       version = "0.3.4";
       sha256 = "1689ijr4xxh4shxxvd51wdkpc535kzv6liqg4m1prag96aq05r8y";
       buildDepends = [ deepseq text ];
       homepage = "https://john-millikin.com/software/haskell-xml/";
       description = "Basic types for representing XML";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xml2html" = callPackage
    ({ mkDerivation, xml-conduit }:
     mkDerivation {
       pname = "xml2html";
       version = "0.2.0";
       sha256 = "1kf4vjg4cfkd4vx8jpikbb0ib4pglmyf5vqrg3j0yllmycj22ska";
       buildDepends = [ xml-conduit ];
       homepage = "http://github.com/snoyberg/xml";
       description = "blaze-html instances for xml-conduit types (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml2json" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-conduit
     , blaze-builder, blaze-builder-conduit, case-insensitive, conduit
     , hspec, resourcet, tagstream-conduit, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "xml2json";
       version = "0.2.0.0";
       sha256 = "15x3339qqy75qyj97dc7qbw7fs5dw4xvcslfrjpi36yd2596hamx";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec attoparsec-conduit blaze-builder
         blaze-builder-conduit case-insensitive conduit tagstream-conduit
         text transformers unordered-containers vector
       ];
       testDepends = [ aeson hspec resourcet text transformers ];
       homepage = "http://github.com/yihuang/xml2json";
       description = "translate xml to json";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xml2x" = callPackage
    ({ mkDerivation, bio, xhtml }:
     mkDerivation {
       pname = "xml2x";
       version = "0.4.2";
       sha256 = "0cp21xzzqczb49mpnsxlgc4fyhmmgyy4mfczqnz85h383js5sbia";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ bio xhtml ];
       description = "Convert BLAST output in XML format to CSV or HTML";
       license = "GPL";
     }) {};

  "xmlgen" = callPackage
    ({ mkDerivation, blaze-builder, filepath, HUnit, hxt, mtl
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "xmlgen";
       version = "0.6.2.1";
       sha256 = "1rmsg9wxs0bsj0xpagxrm3fmlqd63b0dfyc21rx9jj76g9za29wh";
       buildDepends = [ blaze-builder mtl text ];
       testDepends = [ filepath HUnit hxt QuickCheck text ];
       description = "Fast XML generation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmlhtml" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, blaze-markup, parsec
     , text, unordered-containers
     }:
     mkDerivation {
       pname = "xmlhtml";
       version = "0.2.3.3";
       sha256 = "0n95284z24ddgw7v8zjqzanyrshxydcxs4ivchpj88gh5r3ryv5j";
       buildDepends = [
         blaze-builder blaze-html blaze-markup parsec text
         unordered-containers
       ];
       description = "XML parser and renderer with HTML 5 quirks mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmltv" = callPackage
    ({ mkDerivation, configurator, filepath, http-client, network-uri
     , split, terminfo, time, wl-pprint-extras, wl-pprint-terminfo
     , xdg-basedir, xml
     }:
     mkDerivation {
       pname = "xmltv";
       version = "0.0.1";
       sha256 = "15i0a28svafjsziz1h3px0qys81xw0bs5bpq66hcwzxdv3s15lv9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         configurator filepath http-client network-uri split terminfo time
         wl-pprint-extras wl-pprint-terminfo xdg-basedir xml
       ];
       homepage = "http://github.com/dagle/hs-xmltv";
       description = "Show tv channels in the terminal";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xmms2-client" = callPackage
    ({ mkDerivation, c2hs, mtl, utf8-string }:
     mkDerivation {
       pname = "xmms2-client";
       version = "0.0.7.0";
       sha256 = "0ahsxah1irfsbgkkr4vnvasb7shk4b5iyjhgpj2dc9vi26p6y5dz";
       buildDepends = [ mtl utf8-string ];
       buildTools = [ c2hs ];
       description = "An XMMS2 client library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "xmms2-client-glib" = callPackage
    ({ mkDerivation, c2hs, xmms2-client }:
     mkDerivation {
       pname = "xmms2-client-glib";
       version = "0.0.7.0";
       sha256 = "1rrc8w9nrmxl8kzjkbmdxh0j1krvai396mx50wsnlqn1cxgb54h3";
       buildDepends = [ xmms2-client ];
       buildTools = [ c2hs ];
       description = "An XMMS2 client library — GLib integration";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "xmobar" = callPackage
    ({ mkDerivation, alsa-core, alsa-mixer, dbus, filepath, hinotify
     , HTTP, libmpd, libXpm, libXrandr, mtl, parsec, regex-compat, stm
     , time, timezone-olson, timezone-series, transformers, utf8-string
     , wirelesstools, X11, X11-xft
     }:
     mkDerivation {
       pname = "xmobar";
       version = "0.22.1";
       sha256 = "0mnwwcfk0xf4fi3cnw19s6lxcg8sbsdlvg7zwvf5xf0y9q365swz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         alsa-core alsa-mixer dbus filepath hinotify HTTP libmpd mtl parsec
         regex-compat stm time timezone-olson timezone-series transformers
         utf8-string X11 X11-xft
       ];
       extraLibraries = [ libXpm libXrandr wirelesstools ];
       configureFlags = "-fall_extensions";
       homepage = "http://xmobar.org";
       description = "A Minimalistic Text Based Status Bar";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmonad" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, mtl, utf8-string
     , X11
     }:
     mkDerivation {
       pname = "xmonad";
       version = "0.11";
       sha256 = "1nsv88y2b206n3s5hrsp5ginvz1bj818ns7jmikavb2g33akdgg5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         extensible-exceptions filepath mtl utf8-string X11
       ];
       postInstall = ''
         shopt -s globstar
         mkdir -p $out/share/man/man1
         mv "$out/"**"/man/"*.1 $out/share/man/man1/
       '';
       patches = [
         # Patch to make xmonad use XMONAD_{GHC,XMESSAGE} (if available).
         ./xmonad_ghc_var_0.11.patch
       ];
       homepage = "http://xmonad.org";
       description = "A tiling window manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmonad-bluetilebranch" = callPackage
    ({ mkDerivation, extensible-exceptions, filepath, mtl, X11 }:
     mkDerivation {
       pname = "xmonad-bluetilebranch";
       version = "0.9.1.4";
       sha256 = "1ymn56rc9kkzvdla9bpj3aq2z6rnz669xbj7n87z1b42aj74s8gn";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ extensible-exceptions filepath mtl X11 ];
       homepage = "http://xmonad.org";
       description = "A tiling window manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmonad-contrib" = callPackage
    ({ mkDerivation, extensible-exceptions, mtl, random, utf8-string
     , X11, X11-xft, xmonad
     }:
     mkDerivation {
       pname = "xmonad-contrib";
       version = "0.11.3";
       sha256 = "14h9vr33yljymswj50wbimav263y9abdcgi07mvfis0zd08rxqxa";
       buildDepends = [
         extensible-exceptions mtl random utf8-string X11 X11-xft xmonad
       ];
       homepage = "http://xmonad.org/";
       description = "Third party extensions for xmonad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmonad-contrib-bluetilebranch" = callPackage
    ({ mkDerivation, extensible-exceptions, mtl, random, utf8-string
     , X11, X11-xft, xmonad-bluetilebranch
     }:
     mkDerivation {
       pname = "xmonad-contrib-bluetilebranch";
       version = "0.9.1.4";
       sha256 = "1ysf8yp8jwf7a1am83w5q66ys3j6kn7ss0i86n9dmfmkc3rms6l7";
       buildDepends = [
         extensible-exceptions mtl random utf8-string X11 X11-xft
         xmonad-bluetilebranch
       ];
       homepage = "http://xmonad.org/";
       description = "Third party extensions for xmonad";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmonad-contrib-gpl" = callPackage
    ({ mkDerivation, mtl, xmonad, xmonad-contrib }:
     mkDerivation {
       pname = "xmonad-contrib-gpl";
       version = "0.12.1";
       sha256 = "1xs9qwzq9x552jw9wxdaddk2w1m5kc060mqahhk2f2q3zs9nk2n9";
       buildDepends = [ mtl xmonad xmonad-contrib ];
       homepage = "http://xmonad.org/";
       description = "Third party extensions for xmonad";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "xmonad-eval" = callPackage
    ({ mkDerivation, hint, mtl, random, X11, xmonad, xmonad-contrib }:
     mkDerivation {
       pname = "xmonad-eval";
       version = "0.1";
       sha256 = "0k0lb4z50kj4q3dzmii4pd8lbdnlxh5l91fx4f90a35hl3v9zggk";
       buildDepends = [ hint mtl random X11 xmonad xmonad-contrib ];
       homepage = "http://xmonad.org/";
       description = "Module for evaluation Haskell expressions in the running xmonad instance";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmonad-extras" = callPackage
    ({ mkDerivation, hint, libmpd, mtl, network, parsec, random
     , regex-posix, split, X11, xmonad, xmonad-contrib
     }:
     mkDerivation {
       pname = "xmonad-extras";
       version = "0.12";
       sha256 = "1gyj9j6x21rvs6kg6g74wr0jdd36c5ml63a670456fhjr96s8y0g";
       buildDepends = [
         hint libmpd mtl network parsec random regex-posix split X11 xmonad
         xmonad-contrib
       ];
       configureFlags = "-f-with_hlist -fwith_split -fwith_parsec";
       homepage = "http://projects.haskell.org/xmonad-extras";
       description = "Third party extensions for xmonad with wacky dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmonad-screenshot" = callPackage
    ({ mkDerivation, gtk, xmonad }:
     mkDerivation {
       pname = "xmonad-screenshot";
       version = "0.1.0.0";
       sha256 = "0hw289czj9zm657ynl3v074knjpr30zpd66rx3wyvwgp8v1chccv";
       buildDepends = [ gtk xmonad ];
       homepage = "http://github.com/supki/xmonad-screenshot";
       description = "Workspaces screenshooting utility for XMonad";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xmonad-utils" = callPackage
    ({ mkDerivation, random, X11 }:
     mkDerivation {
       pname = "xmonad-utils";
       version = "0.1.3.3";
       sha256 = "1y72f8dnjbpf4kmg0fp8rfbvhwshkp10g4cj3yhy9z78w84dp9a5";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random X11 ];
       homepage = "https://github.com/LeifW/xmonad-utils";
       description = "A small collection of X utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xmpipe" = callPackage
    ({ mkDerivation, base64-bytestring, handle-like, monads-tf, sasl
     , simple-pipe, uuid, xml-pipe
     }:
     mkDerivation {
       pname = "xmpipe";
       version = "0.0.0.4";
       sha256 = "09g11mfq93w3097rzydva8qwq1sjq0hwi11lg1x1yshwcb1if2iw";
       buildDepends = [
         base64-bytestring handle-like monads-tf sasl simple-pipe uuid
         xml-pipe
       ];
       homepage = "https://github.com/YoshikuniJujo/xmpipe/wiki";
       description = "XMPP implementation using simple-PIPE";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xorshift" = callPackage
    ({ mkDerivation, random, time }:
     mkDerivation {
       pname = "xorshift";
       version = "2.0.1";
       sha256 = "1pgkcnsgir8ci3hm3s5w3lk5dy7219242g9njx9cxb1m1cz5v5rf";
       buildDepends = [ random time ];
       description = "Haskell implementation of the xorshift random generator";
       license = "LGPL";
     }) {};

  "xosd" = callPackage
    ({ mkDerivation, xosd }:
     mkDerivation {
       pname = "xosd";
       version = "0.2.1";
       sha256 = "1j0j64668vi0jxrzxrwyp8gwcz5zpaiai2r5k5rfsfrglhrhvhrv";
       extraLibraries = [ xosd ];
       homepage = "http://code.haskell.org/~dons/code/xosd";
       description = "A binding to the X on-screen display";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) xosd; };

  "xournal-builder" = callPackage
    ({ mkDerivation, blaze-builder, double-conversion, strict
     , xournal-types
     }:
     mkDerivation {
       pname = "xournal-builder";
       version = "0.1.1.1";
       sha256 = "0v7lfhyr28gmsbzizhbw4lddhhhv74y3vb8kb9z06b32lg5wm591";
       buildDepends = [
         blaze-builder double-conversion strict xournal-types
       ];
       description = "text builder for xournal file format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xournal-convert" = callPackage
    ({ mkDerivation, cairo, cmdargs, filepath, HStringTemplate, mtl
     , xournal-parser, xournal-render, xournal-types
     }:
     mkDerivation {
       pname = "xournal-convert";
       version = "0.1.1";
       sha256 = "1vyykx5kbq8jja6cxy38j905b23ndj73xsg0hirz0sq4pw36shmi";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         cairo cmdargs filepath HStringTemplate mtl xournal-parser
         xournal-render xournal-types
       ];
       homepage = "http://ianwookim.org/hxournal";
       description = "convert utility for xoj files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xournal-parser" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-conduit, conduit
     , conduit-extra, exceptions, lens, mtl, strict, text, transformers
     , xml-conduit, xml-types, xournal-types, zlib-conduit
     }:
     mkDerivation {
       pname = "xournal-parser";
       version = "0.5.0.3";
       sha256 = "1r99xv7w2gxms1ff5qpj36dcb3gb5lpccr1mjjdnkcij81i748ly";
       buildDepends = [
         attoparsec attoparsec-conduit conduit conduit-extra exceptions lens
         mtl strict text transformers xml-conduit xml-types xournal-types
         zlib-conduit
       ];
       homepage = "http://ianwookim.org/hoodle";
       description = "Xournal file parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xournal-render" = callPackage
    ({ mkDerivation, cairo, fclabels, mtl, poppler, strict, TypeCompose
     , xournal-types
     }:
     mkDerivation {
       pname = "xournal-render";
       version = "0.6.0";
       sha256 = "0fsijjzxizhb7dx1pc83rsini8xzqj21mmkqj1x0ysyzh78siaf3";
       buildDepends = [
         cairo fclabels mtl poppler strict TypeCompose xournal-types
       ];
       description = "Xournal file renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xournal-types" = callPackage
    ({ mkDerivation, cereal, lens, strict, TypeCompose }:
     mkDerivation {
       pname = "xournal-types";
       version = "0.5.0.2";
       sha256 = "1z1zxgwnd2bpgmiimil2jnz4xdcvvi59y2qdvqgy42b10db8rvkm";
       buildDepends = [ cereal lens strict TypeCompose ];
       description = "Data types for programs for xournal file format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xsact" = callPackage
    ({ mkDerivation, random }:
     mkDerivation {
       pname = "xsact";
       version = "1.7.3";
       sha256 = "180svhrkj3fp69abg0ichgc9l6iv760j302bb612qzxkpyjsyz0h";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ random ];
       homepage = "http://malde.org/~ketil/";
       description = "Cluster EST sequences";
       license = "GPL";
     }) {};

  "xsd" = callPackage
    ({ mkDerivation, attoparsec, doctest, filepath, lens, QuickCheck
     , quickcheck-instances, text, time
     }:
     mkDerivation {
       pname = "xsd";
       version = "0.5.0.1";
       sha256 = "1a5i2idpkm5i70jpp2kjglpylja4b9cd0nklgvl6lm8cpjn2j0k0";
       buildDepends = [ attoparsec lens text time ];
       testDepends = [ doctest filepath QuickCheck quickcheck-instances ];
       homepage = "https://github.com/tonymorris/xsd";
       description = "XML Schema data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xsha1" = callPackage
    ({ mkDerivation, HUnit, QuickCheck, uniplate, vector }:
     mkDerivation {
       pname = "xsha1";
       version = "0.0.0";
       sha256 = "0xljcmc8rsvkpchrdam3lpp4igq1gmym9v3drp15a9k8rfa8irmi";
       buildDepends = [ HUnit QuickCheck uniplate vector ];
       description = "cryptanalysis of Blizzard's broken SHA-1 implementation";
       license = stdenv.lib.licenses.mit;
     }) {};

  "xslt" = callPackage
    ({ mkDerivation, libxml, xslt }:
     mkDerivation {
       pname = "xslt";
       version = "0.1";
       sha256 = "0i03ihk0rjj6vk2blqdhqqqk6qqrrkxx2ckigwd5mgvp3jp64648";
       buildDepends = [ libxml ];
       extraLibraries = [ xslt ];
       description = "Binding to libxslt";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) xslt; };

  "xss-sanitize" = callPackage
    ({ mkDerivation, attoparsec, css-text, hspec, HUnit, network-uri
     , tagsoup, text, utf8-string
     }:
     mkDerivation {
       pname = "xss-sanitize";
       version = "0.3.5.4";
       sha256 = "1h9dj234sj216g676la0h73nwm0fw4snik31qi0s754vyy6bcygf";
       buildDepends = [
         attoparsec css-text network-uri tagsoup text utf8-string
       ];
       testDepends = [
         attoparsec css-text hspec HUnit network-uri tagsoup text
         utf8-string
       ];
       homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
       description = "sanitize untrusted HTML to prevent XSS attacks";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xtc" = callPackage
    ({ mkDerivation, wx, wxcore }:
     mkDerivation {
       pname = "xtc";
       version = "1.0.1";
       sha256 = "0jfs3qbcx5h26irkq73dyc2m84qyrlj5dvy6d1s6p6520vhnqfal";
       buildDepends = [ wx wxcore ];
       homepage = "http://github.com/alanz/xtc";
       description = "eXtended & Typed Controls for wxHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xtest" = callPackage
    ({ mkDerivation, libXtst, X11 }:
     mkDerivation {
       pname = "xtest";
       version = "0.2";
       sha256 = "118xxx7sydpsvdqz0x107ngb85fggn630ysw6d2ckky75fmhmxk7";
       buildDepends = [ X11 ];
       extraLibraries = [ libXtst ];
       description = "Thin FFI bindings to X11 XTest library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xturtle" = callPackage
    ({ mkDerivation, convertible, Imlib, setlocale, X11, X11-xft
     , x11-xim, yjsvg, yjtools
     }:
     mkDerivation {
       pname = "xturtle";
       version = "0.1.25";
       sha256 = "161fpfvzbz2kks5pxmq3wrkgfkrfjvqrl4izlq0v7sicqphfkgmd";
       buildDepends = [
         convertible Imlib setlocale X11 X11-xft x11-xim yjsvg yjtools
       ];
       description = "turtle like LOGO";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "xxhash" = callPackage
    ({ mkDerivation, crypto-api, hspec, QuickCheck, tagged }:
     mkDerivation {
       pname = "xxhash";
       version = "0.0.1";
       sha256 = "0crmvkvk2604a06jjsn613bxx0n1lv59picl2656rx2pc7wbyidn";
       editedCabalFile = "0x6jcj3p3fdjwfjx6rc2xhfgkchvamrbw7645lawccg4x6bifr0x";
       buildDepends = [ crypto-api tagged ];
       testDepends = [ hspec QuickCheck ];
       description = "A Haskell implementation of the xxHash algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yabi" = callPackage
    ({ mkDerivation, word8 }:
     mkDerivation {
       pname = "yabi";
       version = "0.1.1.0";
       sha256 = "05avn1m1mmgvzx9vkjy0fyyy38vmz39km0b190lz7lhy9qrwa2bb";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ word8 ];
       homepage = "https://github.com/fgaz/yabi";
       description = "Yet Another Brainfuck Interpreter";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yackage" = callPackage
    ({ mkDerivation, blaze-builder, blaze-html, Cabal, cmdargs, conduit
     , hamlet, http-conduit, http-types, shakespeare, tar, text
     , transformers, unordered-containers, vector, wai, warp, yaml
     , yesod-core, yesod-form, zlib
     }:
     mkDerivation {
       pname = "yackage";
       version = "0.7.0.5";
       sha256 = "17bn9i3l8bgh7h641bix2faskx91gbl5clnz7xv8h64zj1bdqzy9";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-builder blaze-html Cabal cmdargs conduit hamlet http-conduit
         http-types shakespeare tar text transformers unordered-containers
         vector wai warp yaml yesod-core yesod-form zlib
       ];
       homepage = "http://github.com/snoyberg/yackage";
       description = "Personal Hackage replacement for testing new packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yahoo-finance-conduit" = callPackage
    ({ mkDerivation, attoparsec, cassava, conduit, lens, mtl, text
     , vector, wreq
     }:
     mkDerivation {
       pname = "yahoo-finance-conduit";
       version = "0.1.0.0";
       sha256 = "1kvs12l84lgs26knrqv5f354a3bql3fg54wgnmsfcjli1vvnn1di";
       buildDepends = [
         attoparsec cassava conduit lens mtl text vector wreq
       ];
       description = "Streaming aproach to the yahoo finance api";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yahoo-web-search" = callPackage
    ({ mkDerivation, HTTP, network, xml }:
     mkDerivation {
       pname = "yahoo-web-search";
       version = "0.2";
       sha256 = "064qakx4khzz9ih9isw46c8pm8wpg662fwnis4d64nszy6y9yfck";
       buildDepends = [ HTTP network xml ];
       homepage = "http://www.people.fas.harvard.edu/~stewart5/code/yahoo-web-search";
       description = "Yahoo Web Search Services";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yajl" = callPackage
    ({ mkDerivation, c2hs, text, yajl }:
     mkDerivation {
       pname = "yajl";
       version = "0.3.2";
       sha256 = "07186ilac22zym1jlgl915k2a82k418xa5z9h40ss62dgmaz2xkk";
       buildDepends = [ text ];
       buildTools = [ c2hs ];
       extraLibraries = [ yajl ];
       homepage = "https://john-millikin.com/software/haskell-yajl/";
       description = "Bindings for YAJL, an event-based JSON implementation";
       license = stdenv.lib.licenses.gpl3;
     }) { inherit (pkgs) yajl; };

  "yajl-enumerator" = callPackage
    ({ mkDerivation, enumerator, json-types, text, transformers, yajl
     }:
     mkDerivation {
       pname = "yajl-enumerator";
       version = "0.4.1";
       sha256 = "0dz81l58qpm3gk7zmvb702qwgq79j7d0dnyimqi6k3fp0byb5wdj";
       buildDepends = [ enumerator json-types text transformers yajl ];
       homepage = "https://john-millikin.com/software/haskell-yajl/";
       description = "Enumerator-based interface to YAJL, an event-based JSON implementation";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "yall" = callPackage
    ({ mkDerivation, categories, transformers }:
     mkDerivation {
       pname = "yall";
       version = "0.2.1";
       sha256 = "131x7hl309zpwl31k6mwqd4fdrhkcwxvn4dvlky9bh3prc8kdm2s";
       buildDepends = [ categories transformers ];
       homepage = "http://brandon.si/code/yall/";
       description = "Lenses with a southern twang";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yamemo" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "yamemo";
       version = "0.6.0";
       sha256 = "12qh9fi5dj4i5lprm24gc2b66qzc3mf59m22sxf93sx3dsf7rygn";
       buildDepends = [ mtl ];
       description = "Simple memoisation function";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yaml" = callPackage
    ({ mkDerivation, aeson, aeson-qq, attoparsec, conduit
     , enclosed-exceptions, filepath, hspec, hspec-expectations, HUnit
     , resourcet, scientific, text, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "yaml";
       version = "0.8.10.1";
       sha256 = "1a8v8digg6mcc4gx4kgfg8wzgj18wdf40wv1b7n72dg1c8kr2xz9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson attoparsec conduit enclosed-exceptions filepath resourcet
         scientific text transformers unordered-containers vector
       ];
       testDepends = [
         aeson aeson-qq conduit hspec hspec-expectations HUnit resourcet
         text transformers unordered-containers vector
       ];
       homepage = "http://github.com/snoyberg/yaml/";
       description = "Support for parsing and rendering YAML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yaml-config" = callPackage
    ({ mkDerivation, deepseq, failure, hashable, QuickCheck, tasty
     , tasty-quickcheck, text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "yaml-config";
       version = "0.2.2";
       sha256 = "1a6n18q6sy5sfw4r8j42d4vhcmvjggi2ax4i89ap2gmnah53jm50";
       buildDepends = [ deepseq failure text unordered-containers yaml ];
       testDepends = [
         deepseq failure hashable QuickCheck tasty tasty-quickcheck text
         unordered-containers yaml
       ];
       description = "Configuration management";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yaml-light" = callPackage
    ({ mkDerivation, HsSyck }:
     mkDerivation {
       pname = "yaml-light";
       version = "0.1.4";
       sha256 = "05pxkqp91l275n48p1aqijzh34vvzi7cx2nls879b95fz2dr8lhk";
       buildDepends = [ HsSyck ];
       description = "A light-weight wrapper with utility functions around HsSyck";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yaml-light-lens" = callPackage
    ({ mkDerivation, bytestring-lexing, doctest, lens, yaml-light }:
     mkDerivation {
       pname = "yaml-light-lens";
       version = "0.3.1.5";
       sha256 = "1hw1rv9za2sxszw9lh776jz53my2zpyfgvhvcdjnb8wjbir01s2m";
       buildDepends = [ bytestring-lexing lens yaml-light ];
       testDepends = [ doctest ];
       description = "Lens interface to yaml-light";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yaml-rpc" = callPackage
    ({ mkDerivation, aeson, http-client, http-types, lens, text
     , th-lift, transformers, unordered-containers, vector, wreq, yaml
     }:
     mkDerivation {
       pname = "yaml-rpc";
       version = "1.0.3";
       sha256 = "01ir8yh7g3xvybg2nyfnzci0xlqpizkdkyhd8jfhyk8yka6jbr9g";
       buildDepends = [
         aeson http-client http-types lens text th-lift transformers
         unordered-containers vector wreq yaml
       ];
       homepage = "http://redmine.iportnov.ru/projects/yaml-rpc";
       description = "Simple library for network (HTTP REST-like) YAML RPC";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yaml-rpc-scotty" = callPackage
    ({ mkDerivation, aeson, http-types, mmorph, scotty, text
     , transformers, yaml, yaml-rpc
     }:
     mkDerivation {
       pname = "yaml-rpc-scotty";
       version = "1.0.2";
       sha256 = "1kbvziqd78fr47m3w86hc6pxa6jy3ljjwc0s2ga0d8zrh0irf3b3";
       buildDepends = [
         aeson http-types mmorph scotty text transformers yaml yaml-rpc
       ];
       homepage = "http://redmine.iportnov.ru/projects/yaml-rpc";
       description = "Scotty server backend for yaml-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yaml-rpc-snap" = callPackage
    ({ mkDerivation, aeson, http-types, snap, text, transformers, yaml
     , yaml-rpc
     }:
     mkDerivation {
       pname = "yaml-rpc-snap";
       version = "1.0.3";
       sha256 = "17csdfr4g0vb46yi2jhf6phin17rcn9arc71kmgdgx0xh2hrfin9";
       buildDepends = [
         aeson http-types snap text transformers yaml yaml-rpc
       ];
       homepage = "http://redmine.iportnov.ru/projects/yaml-rpc";
       description = "Snap server backend for yaml-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yaml2owl" = callPackage
    ({ mkDerivation, filepath, network, swish, text, xml, yaml }:
     mkDerivation {
       pname = "yaml2owl";
       version = "0.0.1";
       sha256 = "1yz7cq6xbxjh3j5hljrzla7dpgsa2ag4ywbvc6ynf7bpikdymq65";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath network swish text xml yaml ];
       homepage = "http://github.com/leifw/yaml2owl";
       description = "Generate OWL schema from YAML syntax, and an RDFa template";
       license = "LGPL";
     }) {};

  "yampa-canvas" = callPackage
    ({ mkDerivation, blank-canvas, stm, text, time, Yampa }:
     mkDerivation {
       pname = "yampa-canvas";
       version = "0.2";
       sha256 = "16plby17rnr4c25sdacqx4vlyx338gbmadp1c6mr4c67zx76bi4a";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ blank-canvas stm text time Yampa ];
       description = "blank-canvas frontend for yampa";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yampa-glfw" = callPackage
    ({ mkDerivation, GLFW-b, newtype, OpenGL, vector-space, Yampa }:
     mkDerivation {
       pname = "yampa-glfw";
       version = "0.1.0.0";
       sha256 = "133nz8916c99bby6ikkh4kplx4hbwmqhdg0h2g5vsp25w67ndmjr";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ GLFW-b newtype OpenGL vector-space Yampa ];
       homepage = "https://github.com/deepfire/yampa-glfw";
       description = "Connects GLFW-b (GLFW 3+) with the Yampa FRP library";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "yampa-glut" = callPackage
    ({ mkDerivation, GLUT, newtype, OpenGL, vector-space, Yampa }:
     mkDerivation {
       pname = "yampa-glut";
       version = "0.1.1";
       sha256 = "0sp4fwi3ibmd32vs7kdak7vrk3i2bayk2flcc617x2ax9250iyhv";
       buildDepends = [ GLUT newtype OpenGL vector-space Yampa ];
       homepage = "https://github.com/ony/yampa-glut";
       description = "Connects Yampa and GLUT";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "yaop" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "yaop";
       version = "0.1.2.1";
       sha256 = "0z66ffxb89bksgqfji9x8msch9yk7nmbzm2qrcn5j3w4ylg7dpdr";
       editedCabalFile = "0p55j9q5idzw5bmpg0i4vkifaadzvf3fdhjd02bh2ym2y15g0csk";
       buildDepends = [ mtl ];
       homepage = "https://github.com/esmolanka/yaop";
       description = "Yet another option parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yap" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "yap";
       version = "0.2";
       sha256 = "14lq549jhgnf51pgy1jv31ik8qx71yl7d53w8dpq1f9mlsn1g16i";
       description = "yet another prelude - a simplistic refactoring with algebraic classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yarr" = callPackage
    ({ mkDerivation, deepseq, fixed-vector, missing-foreign, primitive
     }:
     mkDerivation {
       pname = "yarr";
       version = "1.3.2";
       sha256 = "037xb9h8d2lrf019d63v60npxkllqrmsz5c3vakil5bpvvd3p5nv";
       buildDepends = [ deepseq fixed-vector missing-foreign primitive ];
       description = "Yet another array library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yarr-image-io" = callPackage
    ({ mkDerivation, libdevil, yarr }:
     mkDerivation {
       pname = "yarr-image-io";
       version = "1.3.0";
       sha256 = "0nxzn0apj75jv5zyv3qrnbrabfrw3159yfzw1qmd4mjli75zjc8l";
       buildDepends = [ yarr ];
       extraLibraries = [ libdevil ];
       description = "Image IO for Yarr library";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yavie" = callPackage
    ({ mkDerivation, Cabal, event-driven, filepath, monads-tf, regexpr
     }:
     mkDerivation {
       pname = "yavie";
       version = "0.0.1";
       sha256 = "0h2gd0k8vbz8rl34j42ayvcqp0ksz6642k9pznrd28h145wk8gz5";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal event-driven filepath monads-tf regexpr ];
       description = "yet another visual editor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ycextra" = callPackage
    ({ mkDerivation, csv, mtl, uniplate, yhccore }:
     mkDerivation {
       pname = "ycextra";
       version = "0.1";
       sha256 = "0aa0g2r7ck052wqkqqxzvkdqv9d7x3v7rqqd8iajwys9cvqny4m5";
       buildDepends = [ csv mtl uniplate yhccore ];
       homepage = "http://www.haskell.org/haskellwiki/Yhc";
       description = "Additional utilities to work with Yhc Core";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yeganesh" = callPackage
    ({ mkDerivation, filepath, strict, time, xdg-basedir }:
     mkDerivation {
       pname = "yeganesh";
       version = "2.5";
       sha256 = "1bgw5v1g5n06jj0lyxpf48mdpaa2s49g0lbagf3jf9q01rb92bvf";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath strict time xdg-basedir ];
       homepage = "http://dmwit.com/yeganesh";
       description = "small dmenu wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yes-precure5-command" = callPackage
    ({ mkDerivation, Cabal, hspec, mtl, parsec, QuickCheck, random }:
     mkDerivation {
       pname = "yes-precure5-command";
       version = "5.5.1";
       sha256 = "0a5qiz0sx8kbi1ijq8lqjfszp5cvqnq1jpxx18wqndfkscjfsjbd";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ Cabal mtl parsec random ];
       testDepends = [ hspec QuickCheck ];
       homepage = "https://github.com/igrep/yes-precure5-command/";
       description = "Extended yes command to reproduce phrases in Yes! Precure 5";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod" = callPackage
    ({ mkDerivation, aeson, blaze-html, blaze-markup, conduit-extra
     , data-default, fast-logger, monad-control, monad-logger, safe
     , semigroups, shakespeare, streaming-commons, text, transformers
     , unordered-containers, wai, wai-extra, wai-logger, warp, yaml
     , yesod-auth, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod";
       version = "1.4.1.1";
       sha256 = "0p95f6gjpcl28ysl82hbyxh7fjql6lr5csndmnrd264h2pd88pxx";
       buildDepends = [
         aeson blaze-html blaze-markup conduit-extra data-default
         fast-logger monad-control monad-logger safe semigroups shakespeare
         streaming-commons text transformers unordered-containers wai
         wai-extra wai-logger warp yaml yesod-auth yesod-core yesod-form
         yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-angular" = callPackage
    ({ mkDerivation, aeson, shakespeare, text, transformers, yesod }:
     mkDerivation {
       pname = "yesod-angular";
       version = "0.1.0.1";
       sha256 = "1f2aghs78jc3v2raq2f07mrcpmkc4jjp2vvpal4bh4qq6jnyigzd";
       buildDepends = [ aeson shakespeare text transformers yesod ];
       description = "Yesod Angular JS integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-auth" = callPackage
    ({ mkDerivation, aeson, authenticate, base16-bytestring
     , base64-bytestring, binary, blaze-builder, blaze-html
     , blaze-markup, byteable, conduit, conduit-extra, cryptohash
     , data-default, email-validate, file-embed, http-client
     , http-conduit, http-types, lifted-base, mime-mail, network-uri
     , persistent, persistent-template, random, resourcet, safe
     , shakespeare, text, time, transformers, unordered-containers, wai
     , yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth";
       version = "1.4.1";
       sha256 = "1nvc5ni4bwhb10ayr75s3z44ynv9kq3lp6kgd536xyagbi054gdp";
       buildDepends = [
         aeson authenticate base16-bytestring base64-bytestring binary
         blaze-builder blaze-html blaze-markup byteable conduit
         conduit-extra cryptohash data-default email-validate file-embed
         http-client http-conduit http-types lifted-base mime-mail
         network-uri persistent persistent-template random resourcet safe
         shakespeare text time transformers unordered-containers wai
         yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Authentication for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-auth-account" = callPackage
    ({ mkDerivation, blaze-html, hspec, monad-logger, mtl, nonce
     , persistent, persistent-sqlite, pwstore-fast, resourcet, text
     , xml-conduit, yesod, yesod-auth, yesod-core, yesod-form
     , yesod-persistent, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-account";
       version = "1.4.0";
       sha256 = "15b9pwxgh73wa7bmydkh4wdndfkn85v0f7q4mfi582vk272n3ra0";
       buildDepends = [
         blaze-html mtl nonce persistent pwstore-fast text yesod-auth
         yesod-core yesod-form yesod-persistent
       ];
       testDepends = [
         hspec monad-logger mtl persistent-sqlite resourcet text xml-conduit
         yesod yesod-auth yesod-test
       ];
       homepage = "https://bitbucket.org/wuzzeb/yesod-auth-account";
       description = "An account authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-auth-bcrypt" = callPackage
    ({ mkDerivation, bcrypt, text, yesod-auth, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth-bcrypt";
       version = "0.1.1";
       sha256 = "04v7d88m58rgkgld2rcmi160afmn4zbbplwwfldcck3dy6i9rzhp";
       buildDepends = [
         bcrypt text yesod-auth yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "BCrypt salted and hashed passwords in a database as auth for yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-auth-deskcom" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, byteable, cipher-aes
     , cprng-aes, crypto-api, crypto-random, cryptohash, data-default
     , http-conduit, http-types, text, time, transformers, yesod-auth
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-auth-deskcom";
       version = "1.4.0";
       sha256 = "17lpkwrfc10rdmvkjg6qmbi7gysjjhqyh7n5d1mxgxhzxzqbi06w";
       buildDepends = [
         aeson base64-bytestring byteable cipher-aes cprng-aes crypto-api
         crypto-random cryptohash data-default http-conduit http-types text
         time transformers yesod-auth yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-auth-deskcom";
       description = "Desk.com remote authentication support for Yesod apps.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-auth-fb" = callPackage
    ({ mkDerivation, aeson, conduit, fb, http-conduit, lifted-base
     , shakespeare, text, time, transformers, wai, yesod-auth
     , yesod-core, yesod-fb
     }:
     mkDerivation {
       pname = "yesod-auth-fb";
       version = "1.6.6";
       sha256 = "00pk5vridic77laydkfhrixfv50ps7f15dxvcd44cn0z8s2d3y74";
       buildDepends = [
         aeson conduit fb http-conduit lifted-base shakespeare text time
         transformers wai yesod-auth yesod-core yesod-fb
       ];
       homepage = "https://github.com/prowdsponsor/yesod-auth-fb";
       description = "Authentication backend for Yesod using Facebook";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-auth-hashdb" = callPackage
    ({ mkDerivation, cryptohash, hspec, persistent, pwstore-fast, text
     , yesod-auth, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth-hashdb";
       version = "1.4.1.1";
       sha256 = "0bb37iawsdq3m5p1sjdnz954f3nfdmvvhm0hxap1z2hf9dk516ci";
       buildDepends = [
         cryptohash persistent pwstore-fast text yesod-auth yesod-core
         yesod-form yesod-persistent
       ];
       testDepends = [ hspec text ];
       homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
       description = "Authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-auth-kerberos" = callPackage
    ({ mkDerivation, authenticate-kerberos, shakespeare, text
     , transformers, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-kerberos";
       version = "1.4.2";
       sha256 = "1q25p6kzk4xksi64gl2k4vdnfiw2pmqmca1w5zwzvdr4zzgkmx18";
       buildDepends = [
         authenticate-kerberos shakespeare text transformers yesod-auth
         yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Kerberos Authentication for Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-auth-ldap" = callPackage
    ({ mkDerivation, authenticate-ldap, hamlet, LDAP, text
     , transformers, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-ldap";
       version = "0.0.3";
       sha256 = "1ps2vk2pvni3h4pk4v2siqb3a714r09ahgr5d1l89hspb9fbzfyk";
       buildDepends = [
         authenticate-ldap hamlet LDAP text transformers yesod-auth
         yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com/";
       description = "LDAP Authentication for Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-auth-oauth" = callPackage
    ({ mkDerivation, authenticate-oauth, lifted-base, text
     , transformers, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-oauth";
       version = "1.4.0";
       sha256 = "090n88q4r1fs8vkwp4287m7w66k5lq4ijzr5l4blw0hzqgkgb8xx";
       buildDepends = [
         authenticate-oauth lifted-base text transformers yesod-auth
         yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com/";
       description = "OAuth Authentication for Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-auth-oauth2" = callPackage
    ({ mkDerivation, aeson, authenticate, hoauth2, http-conduit
     , http-types, lifted-base, network-uri, text, transformers, uuid
     , yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-oauth2";
       version = "0.0.11";
       sha256 = "0338821bj1sg5mvwcrfaidlj964vxrihnd9jbgnziv5kldb459rc";
       buildDepends = [
         aeson authenticate hoauth2 http-conduit http-types lifted-base
         network-uri text transformers uuid yesod-auth yesod-core yesod-form
       ];
       homepage = "http://github.com/scan/yesod-auth-oauth2";
       description = "Library to authenticate with OAuth 2.0 for Yesod web applications.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-auth-pam" = callPackage
    ({ mkDerivation, hamlet, pam, text, yesod-auth, yesod-core
     , yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-pam";
       version = "1.0.0.0";
       sha256 = "02cpg67ldjvv9sb6jr7liq3ac20rqc6lq1wjybii5vsah8hmvkhy";
       buildDepends = [
         hamlet pam text yesod-auth yesod-core yesod-form
       ];
       description = "Provides PAM authentication module";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-auth-smbclient" = callPackage
    ({ mkDerivation, hamlet, sys-auth-smbclient, text, yesod-auth
     , yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-smbclient";
       version = "2.0.0.0";
       sha256 = "108bmfb68rvmx3q21hz55jbic331fnplcx062vlbk6sx3jyjqgaa";
       buildDepends = [
         hamlet sys-auth-smbclient text yesod-auth yesod-core yesod-form
       ];
       homepage = "https://github.com/kkazuo/yesod-auth-smbclient.git";
       description = "Authentication plugin for Yesod using smbclient";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-auth-zendesk" = callPackage
    ({ mkDerivation, base16-bytestring, cryptohash, data-default
     , http-conduit, http-types, text, time, transformers, wai
     , yesod-auth, yesod-core
     }:
     mkDerivation {
       pname = "yesod-auth-zendesk";
       version = "1.2.1";
       sha256 = "0jjfydbgjcymd9x47g0acjdml55f3n40193lvl4l9l02q54g9qnb";
       buildDepends = [
         base16-bytestring cryptohash data-default http-conduit http-types
         text time transformers wai yesod-auth yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-auth-zendesk";
       description = "Zendesk remote authentication support for Yesod apps";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-bin" = callPackage
    ({ mkDerivation, attoparsec, base64-bytestring, blaze-builder
     , Cabal, conduit, conduit-extra, data-default-class, file-embed
     , filepath, fsnotify, ghc-paths, http-conduit, http-reverse-proxy
     , http-types, lifted-base, network, optparse-applicative, parsec
     , project-template, resourcet, shakespeare, split
     , streaming-commons, system-fileio, system-filepath, tar, text
     , time, transformers, transformers-compat, unix-compat
     , unordered-containers, wai, wai-extra, warp, yaml, zlib
     }:
     mkDerivation {
       pname = "yesod-bin";
       version = "1.4.1.1";
       sha256 = "1m60lbach4j2qi4pk9ly3f8grm9zacqc4cgk8kc87wfknfy1rb5v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         attoparsec base64-bytestring blaze-builder Cabal conduit
         conduit-extra data-default-class file-embed filepath fsnotify
         ghc-paths http-conduit http-reverse-proxy http-types lifted-base
         network optparse-applicative parsec project-template resourcet
         shakespeare split streaming-commons system-fileio system-filepath
         tar text time transformers transformers-compat unix-compat
         unordered-containers wai wai-extra warp yaml zlib
       ];
       homepage = "http://www.yesodweb.com/";
       description = "The yesod helper executable";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-comments" = callPackage
    ({ mkDerivation, friendly-time, gravatar, persistent, text, time
     , wai, yesod, yesod-auth, yesod-form, yesod-markdown
     }:
     mkDerivation {
       pname = "yesod-comments";
       version = "0.9.2";
       sha256 = "1isw8cwzwwsm7p3hqj0ynwncsdfg7x0ihphyv02awchqbgc2c87i";
       buildDepends = [
         friendly-time gravatar persistent text time wai yesod yesod-auth
         yesod-form yesod-markdown
       ];
       homepage = "http://github.com/pbrisbin/yesod-comments";
       description = "A generic comments interface for a Yesod application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-continuations" = callPackage
    ({ mkDerivation, datetime, hashable, hashmap, stm, system-uuid
     , yesod
     }:
     mkDerivation {
       pname = "yesod-continuations";
       version = "0.1";
       sha256 = "1pzc0v18fapfbwd4pn4nchmsp4nvnrkm33av83zqfb5gyzhlk1in";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ datetime hashable hashmap stm system-uuid yesod ];
       homepage = "https://github.com/softmechanics/yesod-continuations/";
       description = "Continuations for Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-core" = callPackage
    ({ mkDerivation, aeson, async, auto-update, blaze-builder
     , blaze-html, blaze-markup, case-insensitive, cereal, clientsession
     , conduit, conduit-extra, cookie, data-default, deepseq, exceptions
     , fast-logger, hspec, http-types, HUnit, lifted-base, monad-control
     , monad-logger, mtl, mwc-random, network, parsec, path-pieces
     , primitive, QuickCheck, random, resourcet, safe, shakespeare
     , streaming-commons, text, time, transformers, transformers-base
     , unix-compat, unordered-containers, vector, wai, wai-extra
     , wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "yesod-core";
       version = "1.4.6";
       sha256 = "1xlqqiyn2p0c1qxrkx0mlkp4cra0adhlpw27y03icvj0c93xi27g";
       buildDepends = [
         aeson auto-update blaze-builder blaze-html blaze-markup
         case-insensitive cereal clientsession conduit conduit-extra cookie
         data-default deepseq exceptions fast-logger http-types lifted-base
         monad-control monad-logger mtl mwc-random parsec path-pieces
         primitive random resourcet safe shakespeare text time transformers
         transformers-base unix-compat unordered-containers vector wai
         wai-extra wai-logger warp word8
       ];
       testDepends = [
         async blaze-builder conduit conduit-extra hspec http-types HUnit
         lifted-base mwc-random network path-pieces QuickCheck random
         resourcet shakespeare streaming-commons text transformers wai
         wai-extra
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-datatables" = callPackage
    ({ mkDerivation, aeson, attoparsec, data-default, HUnit
     , monad-control, persistent, persistent-sqlite, persistent-template
     , QuickCheck, resourcet, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, transformers, yesod, yesod-auth
     , yesod-core, yesod-default, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "yesod-datatables";
       version = "0.1.1";
       sha256 = "0yn6fky83069pp4i13dlx9dlk4ck2k4c6sizgnrwqcjhm39m1bz6";
       buildDepends = [
         aeson attoparsec data-default persistent text yesod yesod-auth
         yesod-core yesod-default yesod-form yesod-static
       ];
       testDepends = [
         aeson attoparsec HUnit monad-control persistent persistent-sqlite
         persistent-template QuickCheck resourcet test-framework
         test-framework-hunit test-framework-quickcheck2 text transformers
       ];
       homepage = "http://github.com/tlaitinen/yesod-datatables";
       description = "Yesod plugin for DataTables (jQuery grid plugin)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-default" = callPackage
    ({ mkDerivation, yesod-core }:
     mkDerivation {
       pname = "yesod-default";
       version = "1.2.0";
       sha256 = "15nsknnxnfbkpg4pswxcpgfb2y0hz0xxj56jknd93hcm7aay36pk";
       buildDepends = [ yesod-core ];
       homepage = "http://www.yesodweb.com/";
       description = "Default config and main functions for your yesod application (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-dsl" = callPackage
    ({ mkDerivation, alex, Cabal, filepath, happy, MissingH, mtl
     , shakespeare-text, strict, syb, text, transformers
     }:
     mkDerivation {
       pname = "yesod-dsl";
       version = "0.1.1.21";
       sha256 = "0602sl31rc8fyf8dy745f6siifdz7qq9yvicnyffb5b1a5gdrhaa";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal filepath MissingH mtl shakespeare-text strict syb text
         transformers
       ];
       buildTools = [ alex happy ];
       homepage = "https://github.com/tlaitinen/yesod-dsl";
       description = "DSL for generating Yesod subsite to manage an RDBMS;";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-eventsource" = callPackage
    ({ mkDerivation, blaze-builder, conduit, transformers, wai
     , wai-eventsource, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-eventsource";
       version = "1.4.0";
       sha256 = "0j2r05cryzn1ncgx2ylr39dg72zhr4n09166ps0dkcbdfva48ps9";
       buildDepends = [
         blaze-builder conduit transformers wai wai-eventsource wai-extra
         yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Server-sent events support for Yesod apps";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-examples" = callPackage
    ({ mkDerivation, blaze-html, data-object, data-object-yaml, hamlet
     , persistent-sqlite, persistent-template, sqlite, stm, text
     , transformers, yesod, yesod-core, yesod-static
     }:
     mkDerivation {
       pname = "yesod-examples";
       version = "0.9.0.1";
       sha256 = "1ikrx9ys8civmf1m12fbms258xa7aj55rr02x3rjwchykmzianp4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         blaze-html data-object data-object-yaml hamlet persistent-sqlite
         persistent-template stm text transformers yesod yesod-core
         yesod-static
       ];
       extraLibraries = [ sqlite ];
       homepage = "http://www.yesodweb.com/";
       description = "Example programs using the Yesod Web Framework. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) sqlite; };

  "yesod-fay" = callPackage
    ({ mkDerivation, aeson, data-default, fay, fay-dom, monad-loops
     , pureMD5, shakespeare, system-fileio, system-filepath, text
     , transformers, utf8-string, yesod-core, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "yesod-fay";
       version = "0.7.0";
       sha256 = "1q02r7gd0fbhasc10h8my6j3vcc50pagpz8gvrbsc7x928gp42p4";
       buildDepends = [
         aeson data-default fay fay-dom monad-loops pureMD5 shakespeare
         system-fileio system-filepath text transformers utf8-string
         yesod-core yesod-form yesod-static
       ];
       homepage = "https://github.com/fpco/yesod-fay";
       description = "Utilities for using the Fay Haskell-to-JS compiler with Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-fb" = callPackage
    ({ mkDerivation, aeson, conduit, crypto-api, fb, http-conduit, text
     , wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-fb";
       version = "0.3.4";
       sha256 = "09cymp9y21vawbgr6gcj41s5xkq6j22mvk0vgl3pnyq382j33rmp";
       buildDepends = [
         aeson conduit crypto-api fb http-conduit text wai yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-fb";
       description = "Useful glue functions between the fb library and Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-form" = callPackage
    ({ mkDerivation, aeson, attoparsec, blaze-builder, blaze-html
     , blaze-markup, byteable, data-default, email-validate, hspec
     , network-uri, persistent, resourcet, shakespeare, text, time
     , transformers, wai, xss-sanitize, yesod-core, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-form";
       version = "1.4.3";
       sha256 = "08ivcqq4glyyvjm60fsmd4linqr6kkh6wn4bbcpzinvpv6asr6mr";
       buildDepends = [
         aeson attoparsec blaze-builder blaze-html blaze-markup byteable
         data-default email-validate network-uri persistent resourcet
         shakespeare text time transformers wai xss-sanitize yesod-core
         yesod-persistent
       ];
       testDepends = [ hspec text time ];
       homepage = "http://www.yesodweb.com/";
       description = "Form handling support for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-form-json" = callPackage
    ({ mkDerivation, aeson, text, unordered-containers, yesod-core
     , yesod-form
     }:
     mkDerivation {
       pname = "yesod-form-json";
       version = "0.0.1";
       sha256 = "1hr53p4sp0zm7l1ap07kv2q6hi1xli74k13h0df4cmf9y2xn7bxz";
       buildDepends = [
         aeson text unordered-containers yesod-core yesod-form
       ];
       description = "Extension for Yesod web framework to handle JSON requests as applicative forms";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-gitrepo" = callPackage
    ({ mkDerivation, enclosed-exceptions, http-types, lifted-base
     , system-filepath, temporary, text, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrepo";
       version = "0.1.1.0";
       sha256 = "1bf4rhf6i4cciyllkh6zil29i7yi5ph0nkpcqmhbihk4i7xm05zj";
       buildDepends = [
         enclosed-exceptions http-types lifted-base system-filepath
         temporary text wai yesod-core
       ];
       homepage = "https://github.com/snoyberg/yesod-gitrepo";
       description = "Host content provided by a Git repo";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-goodies" = callPackage
    ({ mkDerivation, blaze-html, HTTP, pandoc, pureMD5, text, time
     , yesod, yesod-form
     }:
     mkDerivation {
       pname = "yesod-goodies";
       version = "0.0.5";
       sha256 = "0wxdwyb5dg00ycb09kbl1m12w2bzi6kxbjr4dqgrwfd3dgypcjdz";
       buildDepends = [
         blaze-html HTTP pandoc pureMD5 text time yesod yesod-form
       ];
       homepage = "http://github.com/pbrisbin/yesod-goodies";
       description = "A collection of various small helpers useful in any yesod application";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-json" = callPackage
    ({ mkDerivation, yesod-core }:
     mkDerivation {
       pname = "yesod-json";
       version = "1.2.0";
       sha256 = "0d035k1ls5iq1c12yxknyc33qd22ayyhl69y62zmcw7arwx35sgw";
       buildDepends = [ yesod-core ];
       homepage = "http://www.yesodweb.com/";
       description = "Generate content for Yesod using the aeson package. (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-links" = callPackage
    ({ mkDerivation, text, yesod-core }:
     mkDerivation {
       pname = "yesod-links";
       version = "0.3.0";
       sha256 = "0i1b4lgwv98pp7251fm3h4cdb1d868fqwm6175rk7zg699g2v61y";
       buildDepends = [ text yesod-core ];
       homepage = "http://github.com/pbrisbin/yesod-goodies/yesod-links";
       description = "A typeclass which simplifies creating link widgets throughout your site";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-mangopay" = callPackage
    ({ mkDerivation, aeson, conduit, conduit-extra, country-codes
     , data-default, fast-logger, hamlet, hjsmin, http-conduit
     , http-types, lifted-base, mangopay, monad-control, monad-logger
     , persistent, persistent-postgresql, persistent-template, resourcet
     , shakespeare, shakespeare-css, shakespeare-js, shakespeare-text
     , text, time, wai, wai-extra, wai-logger, warp, yaml, yesod
     , yesod-auth, yesod-core, yesod-form, yesod-persistent
     , yesod-static
     }:
     mkDerivation {
       pname = "yesod-mangopay";
       version = "1.10";
       sha256 = "18vph90izbf3fyipn0ja2mig8akdic96sjsmvv7d6pqbmz2m5qhh";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson conduit conduit-extra country-codes data-default fast-logger
         hamlet hjsmin http-conduit http-types lifted-base mangopay
         monad-control monad-logger persistent persistent-postgresql
         persistent-template resourcet shakespeare shakespeare-css
         shakespeare-js shakespeare-text text time wai wai-extra wai-logger
         warp yaml yesod yesod-auth yesod-core yesod-form yesod-persistent
         yesod-static
       ];
       homepage = "https://github.com/prowdsponsor/mangopay";
       description = "Yesod library for MangoPay API access";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-markdown" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, pandoc, persistent
     , shakespeare, texmath, text, xss-sanitize, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-markdown";
       version = "0.9.2";
       sha256 = "0as8zvpka5bwv7yzrrbccnygkgwzjnvkzfbinwg7jwvk1ymw8cad";
       buildDepends = [
         blaze-html blaze-markup pandoc persistent shakespeare texmath text
         xss-sanitize yesod-core yesod-form
       ];
       homepage = "http://github.com/pbrisbin/yesod-markdown";
       description = "Tools for using markdown in a yesod application";
       license = "GPL";
     }) {};

  "yesod-newsfeed" = callPackage
    ({ mkDerivation, blaze-html, blaze-markup, shakespeare, text, time
     , xml-conduit, yesod-core
     }:
     mkDerivation {
       pname = "yesod-newsfeed";
       version = "1.4.0";
       sha256 = "0gp9xsfvzylkj8k3cqldi6804maz95iq9bl8yc1mcmhsakq3jfxw";
       buildDepends = [
         blaze-html blaze-markup shakespeare text time xml-conduit
         yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Helper functions and data types for producing News feeds";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-paginate" = callPackage
    ({ mkDerivation, yesod }:
     mkDerivation {
       pname = "yesod-paginate";
       version = "0.1";
       sha256 = "088m7prg774wdh8fp7zljxj65zj5krl4pggl63anv2wk7nlw27py";
       buildDepends = [ yesod ];
       description = "Pagination for Yesod sites";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-pagination" = callPackage
    ({ mkDerivation, esqueleto, hspec, monad-logger, persistent
     , persistent-sqlite, resource-pool, resourcet, shakespeare
     , utf8-string, wai-test, yesod, yesod-test
     }:
     mkDerivation {
       pname = "yesod-pagination";
       version = "2.0.0";
       sha256 = "0d42b8y7zpl624d7wa2caarni9g10hg14xsbamlkykki3bl197m1";
       buildDepends = [ esqueleto yesod ];
       testDepends = [
         hspec monad-logger persistent persistent-sqlite resource-pool
         resourcet shakespeare utf8-string wai-test yesod yesod-test
       ];
       homepage = "https://github.com/joelteon/yesod-pagination";
       description = "Pagination in Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-paginator" = callPackage
    ({ mkDerivation, persistent, resourcet, text, transformers, yesod
     }:
     mkDerivation {
       pname = "yesod-paginator";
       version = "0.9.1";
       sha256 = "0xi19gf6vdna3nwwmciypqgaprzb7gdjpwvfrpj82gr6yar1va5m";
       buildDepends = [ persistent resourcet text transformers yesod ];
       homepage = "http://github.com/pbrisbin/yesod-paginator";
       description = "A pagination approach for yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-persistent" = callPackage
    ({ mkDerivation, blaze-builder, conduit, hspec, persistent
     , persistent-sqlite, persistent-template, resource-pool, resourcet
     , text, transformers, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-persistent";
       version = "1.4.0.1";
       sha256 = "08648n6b4xhsqbvqh8vpsf3481hvzhrkyqbzs303s6fz683mn0zw";
       buildDepends = [
         blaze-builder conduit persistent persistent-template resource-pool
         resourcet transformers yesod-core
       ];
       testDepends = [
         blaze-builder conduit hspec persistent persistent-sqlite text
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Some helpers for using Persistent from Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-platform" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, asn1-encoding
     , asn1-parse, asn1-types, attoparsec-conduit, authenticate
     , auto-update, base16-bytestring, base64-bytestring, blaze-builder
     , blaze-builder-conduit, blaze-html, blaze-markup, byteable
     , byteorder, cereal, cipher-aes, cipher-des, cipher-rc4
     , clientsession, conduit, conduit-extra, connection, cookie
     , cprng-aes, crypto-api, crypto-cipher-types, crypto-numbers
     , crypto-pubkey, crypto-pubkey-types, crypto-random, cryptohash
     , cryptohash-conduit, css-text, data-default, data-default-class
     , data-default-instances-base, data-default-instances-containers
     , data-default-instances-dlist, data-default-instances-old-locale
     , dlist, email-validate, entropy, esqueleto, exceptions
     , fast-logger, file-embed, hamlet, hjsmin, hspec
     , hspec-expectations, html-conduit, http-client, http-client-tls
     , http-conduit, http-date, http-reverse-proxy, http-types
     , language-javascript, lifted-base, mime-mail, mime-types, mmorph
     , monad-control, monad-logger, monad-loops, nats, network-conduit
     , optparse-applicative, path-pieces, pem, persistent
     , persistent-template, publicsuffixlist, pwstore-fast
     , quickcheck-io, resource-pool, resourcet, safe, securemem
     , semigroups, setenv, SHA, shakespeare, shakespeare-css
     , shakespeare-i18n, shakespeare-js, shakespeare-text, silently
     , simple-sendfile, skein, socks, stm-chans, streaming-commons
     , stringsearch, system-fileio, system-filepath, tagged, tagsoup
     , tagstream-conduit, tf-random, tls, transformers-base, utf8-string
     , void, wai, wai-app-static, wai-extra, wai-logger, wai-test, warp
     , warp-tls, word8, x509, x509-store, x509-system, x509-validation
     , xml-conduit, xml-types, xss-sanitize, yaml, yesod, yesod-auth
     , yesod-auth-hashdb, yesod-core, yesod-form, yesod-persistent
     , yesod-routes, yesod-static, yesod-test
     }:
     mkDerivation {
       pname = "yesod-platform";
       version = "1.2.13.3";
       sha256 = "1j71m9bqam7dl1ghhwvkw5ispp8z06hbkvdxslx5sca998vx9awv";
       buildDepends = [
         ansi-terminal ansi-wl-pprint asn1-encoding asn1-parse asn1-types
         attoparsec-conduit authenticate auto-update base16-bytestring
         base64-bytestring blaze-builder blaze-builder-conduit blaze-html
         blaze-markup byteable byteorder cereal cipher-aes cipher-des
         cipher-rc4 clientsession conduit conduit-extra connection cookie
         cprng-aes crypto-api crypto-cipher-types crypto-numbers
         crypto-pubkey crypto-pubkey-types crypto-random cryptohash
         cryptohash-conduit css-text data-default data-default-class
         data-default-instances-base data-default-instances-containers
         data-default-instances-dlist data-default-instances-old-locale
         dlist email-validate entropy esqueleto exceptions fast-logger
         file-embed hamlet hjsmin hspec hspec-expectations html-conduit
         http-client http-client-tls http-conduit http-date
         http-reverse-proxy http-types language-javascript lifted-base
         mime-mail mime-types mmorph monad-control monad-logger monad-loops
         nats network-conduit optparse-applicative path-pieces pem
         persistent persistent-template publicsuffixlist pwstore-fast
         quickcheck-io resource-pool resourcet safe securemem semigroups
         setenv SHA shakespeare shakespeare-css shakespeare-i18n
         shakespeare-js shakespeare-text silently simple-sendfile skein
         socks stm-chans streaming-commons stringsearch system-fileio
         system-filepath tagged tagsoup tagstream-conduit tf-random tls
         transformers-base utf8-string void wai wai-app-static wai-extra
         wai-logger wai-test warp warp-tls word8 x509 x509-store x509-system
         x509-validation xml-conduit xml-types xss-sanitize yaml yesod
         yesod-auth yesod-auth-hashdb yesod-core yesod-form yesod-persistent
         yesod-routes yesod-static yesod-test
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Meta package for Yesod (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-pnotify" = callPackage
    ({ mkDerivation, shakespeare, text, transformers, yesod, yesod-form
     }:
     mkDerivation {
       pname = "yesod-pnotify";
       version = "0.5.0";
       sha256 = "05ic4n6g8jp575qj8mq9lbnhvmdm5zwxn3wf8f1blgigqimamsps";
       buildDepends = [ shakespeare text transformers yesod yesod-form ];
       homepage = "https://github.com/cutsea110/yesod-pnotify";
       description = "Yet another getMessage/setMessage using pnotify jquery plugins";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-pure" = callPackage
    ({ mkDerivation, fast-logger, text, yesod, yesod-core }:
     mkDerivation {
       pname = "yesod-pure";
       version = "0.1.0.2";
       sha256 = "0v3xvhk5nxc2y3c21y6h7w6lg5vm1s2vzf9f02qw8gj928vsidzg";
       buildDepends = [ fast-logger text yesod yesod-core ];
       homepage = "https://github.com/snoyberg/yesod-pure";
       description = "Yesod in pure Haskell: no Template Haskell or QuasiQuotes (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-recaptcha" = callPackage
    ({ mkDerivation, data-default, http-conduit, http-types
     , lifted-base, network, network-info, resourcet, text, wai
     , yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-recaptcha";
       version = "1.4";
       sha256 = "1dvbpzcfwmjv836i8g0gv80dj1iwb9gnvgwg3m5h2hi95249m471";
       buildDepends = [
         data-default http-conduit http-types lifted-base network
         network-info resourcet text wai yesod-auth yesod-core yesod-form
       ];
       homepage = "https://github.com/prowdsponsor/yesod-recaptcha";
       description = "Dead simple support for reCAPTCHA on Yesod applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-routes" = callPackage
    ({ mkDerivation, hspec, HUnit, path-pieces, text, vector }:
     mkDerivation {
       pname = "yesod-routes";
       version = "1.2.0.7";
       sha256 = "00i2nysbhmxnq0dvfdjx6nhxy680ya38nx8gcgm13fv2xwdd2p6j";
       buildDepends = [ path-pieces text vector ];
       testDepends = [ hspec HUnit path-pieces text ];
       homepage = "http://www.yesodweb.com/";
       description = "Efficient routing for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-routes-typescript" = callPackage
    ({ mkDerivation, attoparsec, classy-prelude, system-fileio, text
     , yesod-core, yesod-routes
     }:
     mkDerivation {
       pname = "yesod-routes-typescript";
       version = "0.3.0.0";
       sha256 = "1gn0fvspgwhzpg7pfaj029vdhlm8ypx9kyn2wdz2wzm5jkl7bnn9";
       buildDepends = [
         attoparsec classy-prelude system-fileio text yesod-core
         yesod-routes
       ];
       homepage = "https://github.com/docmunch/yesod-routes-typescript";
       description = "generate TypeScript routes for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-rst" = callPackage
    ({ mkDerivation, blaze-html, hamlet, pandoc, persistent, text
     , xss-sanitize, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-rst";
       version = "0.2.3";
       sha256 = "1dv8xq7hndpk3d86dxwjjplv0la8fn32pwzb5l00db9cg420jp71";
       buildDepends = [
         blaze-html hamlet pandoc persistent text xss-sanitize yesod-core
         yesod-form
       ];
       homepage = "http://github.com/pSub/yesod-rst";
       description = "Tools for using reStructuredText (RST) in a yesod application";
       license = "GPL";
     }) {};

  "yesod-s3" = callPackage
    ({ mkDerivation, conduit, conduit-extra, gd, hS3, mtl, network
     , resourcet, text, yesod-core
     }:
     mkDerivation {
       pname = "yesod-s3";
       version = "0.1.1";
       sha256 = "0vl24qa2aidrr7a082yhnscava06x6jf5y5x9fi9jdry3rnkhzbv";
       buildDepends = [
         conduit conduit-extra gd hS3 mtl network resourcet text yesod-core
       ];
       homepage = "https://github.com/tvh/yesod-s3";
       description = "Simple Helper Library for using Amazon's Simple Storage Service (S3) with Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-session-redis" = callPackage
    ({ mkDerivation, binary, cookie, hedis, mtl, network, pool-conduit
     , random, text, time, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-session-redis";
       version = "0.1.0";
       sha256 = "06ilc1xjic66xj46nib8y6cq7n8hyc27kzz9zd001d12qh342brv";
       buildDepends = [
         binary cookie hedis mtl network pool-conduit random text time wai
         yesod-core
       ];
       homepage = "https://github.com/ollieh/yesod-session-redis";
       description = "Redis-Powered Sessions for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-sitemap" = callPackage
    ({ mkDerivation, conduit, data-default, text, time, xml-conduit
     , xml-types, yesod-core
     }:
     mkDerivation {
       pname = "yesod-sitemap";
       version = "1.4.0";
       sha256 = "0v2ksy6vvn43ll3gf0fy0n46xzn3j59b5667in4lq4dwxllmn1fk";
       buildDepends = [
         conduit data-default text time xml-conduit xml-types yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Generate XML sitemaps";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-static" = callPackage
    ({ mkDerivation, async, attoparsec, base64-bytestring
     , blaze-builder, byteable, conduit, conduit-extra, cryptohash
     , cryptohash-conduit, css-text, data-default, file-embed, filepath
     , hashable, hjsmin, hspec, http-types, HUnit, mime-types, resourcet
     , system-fileio, system-filepath, text, transformers, unix-compat
     , unordered-containers, wai, wai-app-static, wai-extra, yesod-core
     , yesod-test
     }:
     mkDerivation {
       pname = "yesod-static";
       version = "1.4.0.3";
       sha256 = "15rwlw76rfh18l3ap73aqmwz4bafmxbr5pchyarll14ps0rjs74g";
       buildDepends = [
         async attoparsec base64-bytestring blaze-builder byteable conduit
         conduit-extra cryptohash cryptohash-conduit css-text data-default
         file-embed filepath hashable hjsmin http-types mime-types resourcet
         system-fileio system-filepath text transformers unix-compat
         unordered-containers wai wai-app-static yesod-core
       ];
       testDepends = [
         async base64-bytestring byteable conduit conduit-extra cryptohash
         cryptohash-conduit data-default file-embed filepath hjsmin hspec
         http-types HUnit mime-types resourcet system-fileio system-filepath
         text transformers unix-compat unordered-containers wai
         wai-app-static wai-extra yesod-core yesod-test
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Static file serving subsite for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-static-angular" = callPackage
    ({ mkDerivation, aeson, blaze-builder, blaze-markup, data-default
     , filepath, hamlet, hspec, HUnit, language-javascript, mime-types
     , shakespeare, shakespeare-css, shakespeare-js, text, yesod
     , yesod-core, yesod-static, yesod-test
     }:
     mkDerivation {
       pname = "yesod-static-angular";
       version = "0.1.3";
       sha256 = "115lrq6mga31qhdwa3f3hrnxcn8ifgas97hy8mg4wv6ijbzw680y";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson blaze-builder blaze-markup data-default filepath hamlet
         language-javascript mime-types shakespeare shakespeare-css
         shakespeare-js text yesod yesod-core yesod-static
       ];
       testDepends = [
         hamlet hspec HUnit shakespeare text yesod-core yesod-static
         yesod-test
       ];
       homepage = "https://bitbucket.org/wuzzeb/yesod-static-generators";
       description = "Yesod generators for embedding AngularJs code into yesod-static at compile time";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-tableview" = callPackage
    ({ mkDerivation, hamlet, persistent, yesod }:
     mkDerivation {
       pname = "yesod-tableview";
       version = "0.2.1";
       sha256 = "1qf7439c31a8xi0qs8fn2xdlrldi42n1k25lj6vn061lm8wg35yy";
       buildDepends = [ hamlet persistent yesod ];
       description = "Table view for Yesod applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-test" = callPackage
    ({ mkDerivation, attoparsec, blaze-builder, blaze-html
     , blaze-markup, case-insensitive, cookie, hspec, hspec-core
     , html-conduit, http-types, HUnit, monad-control, network
     , persistent, text, time, transformers, wai, wai-extra, xml-conduit
     , xml-types, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-test";
       version = "1.4.2";
       sha256 = "09iia8vligw41ayhp1fp797n783avb0sf89z8midindrhb5plfbl";
       buildDepends = [
         attoparsec blaze-builder blaze-html blaze-markup case-insensitive
         cookie hspec-core html-conduit http-types HUnit monad-control
         network persistent text time transformers wai wai-extra xml-conduit
         xml-types yesod-core
       ];
       testDepends = [
         hspec html-conduit HUnit text wai xml-conduit yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com";
       description = "integration testing for WAI/Yesod Applications";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-test-json" = callPackage
    ({ mkDerivation, aeson, conduit, hspec, http-types, HUnit, text
     , transformers, wai, wai-test, yesod-default
     }:
     mkDerivation {
       pname = "yesod-test-json";
       version = "0.2.0.0";
       sha256 = "1z6cps85fypgymfmq0z67f1z5cr2x9l9hf4wrkncvkivbcb330bh";
       buildDepends = [
         aeson conduit hspec http-types HUnit text transformers wai wai-test
         yesod-default
       ];
       homepage = "https://github.com/bogiebro/yesod-test-json";
       description = "Utility functions for testing JSON web services written in Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-text-markdown" = callPackage
    ({ mkDerivation, aeson, markdown, persistent, shakespeare, text
     , yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-text-markdown";
       version = "0.1.7";
       sha256 = "133zv2f8240qbygpza39m28k4hfy2aiqmr6ds8ihwbb8dz98d5rr";
       buildDepends = [
         aeson markdown persistent shakespeare text yesod-core yesod-form
         yesod-persistent
       ];
       description = "Yesod support for Text.Markdown.";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-tls" = callPackage
    ({ mkDerivation, fast-logger, monad-logger, wai, wai-extra, warp
     , warp-tls, yesod
     }:
     mkDerivation {
       pname = "yesod-tls";
       version = "1.4.1";
       sha256 = "0zvhchiky51pwhbcj4c86xsa98nwfw86188jxhnk2jwdgpdb9j68";
       buildDepends = [
         fast-logger monad-logger wai wai-extra warp warp-tls yesod
       ];
       homepage = "http://github.com/netom/yesod-tls";
       description = "Provides main functions using warp-tls for yesod projects";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-vend" = callPackage
    ({ mkDerivation, blaze-html, hamlet, monad-logger, persistent
     , persistent-sqlite, resourcet, text, yesod, yesod-form
     }:
     mkDerivation {
       pname = "yesod-vend";
       version = "0.3.0.0";
       sha256 = "163ah4g6k62hypm2kj1aiwnzfjx1ngss6iqfg467vjhg71s5l1j9";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-html hamlet monad-logger persistent persistent-sqlite
         resourcet text yesod yesod-form
       ];
       homepage = "https://github.com/Tener/yesod-vend";
       description = "Simple CRUD classes for easy view creation for Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yesod-websockets" = callPackage
    ({ mkDerivation, async, conduit, monad-control, transformers, wai
     , wai-websockets, websockets, yesod-core
     }:
     mkDerivation {
       pname = "yesod-websockets";
       version = "0.2.1";
       sha256 = "0jw7hv86nd1ab7c2scj25qkq7h2fcf7k5ajm8fc7q9gqdxlyj6ya";
       buildDepends = [
         async conduit monad-control transformers wai wai-websockets
         websockets yesod-core
       ];
       homepage = "https://github.com/yesodweb/yesod";
       description = "WebSockets support for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yesod-worker" = callPackage
    ({ mkDerivation, fast-logger, monad-control, monad-logger
     , persistent, resourcet, stm, transformers, transformers-base
     , yesod, yesod-core
     }:
     mkDerivation {
       pname = "yesod-worker";
       version = "0.0.1";
       sha256 = "1rwmw1hhx2mm6ikmqcfjg9vgi95mjhv2w5r4dwn8796jkkw8zpkd";
       buildDepends = [
         fast-logger monad-control monad-logger persistent resourcet stm
         transformers transformers-base yesod yesod-core
       ];
       homepage = "https://github.com/jamesdabbs/yesod-worker";
       description = "Drop-in(ish) background worker system for Yesod apps";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "yhccore" = callPackage
    ({ mkDerivation, mtl, uniplate }:
     mkDerivation {
       pname = "yhccore";
       version = "0.9.1";
       sha256 = "18gjzlpxn0hp723ybjgq1zdbpl35iqphs7b8r5x9ddbkm435sw93";
       buildDepends = [ mtl uniplate ];
       homepage = "http://www.haskell.org/haskellwiki/Yhc";
       description = "Yhc's Internal Core language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yi" = callPackage
    ({ mkDerivation, binary, Cabal, cautious-file, data-default, dlist
     , dynamic-state, dyre, exceptions, filepath, glib, gtk, hashable
     , hint, HUnit, lens, mtl, oo-prototypes, pango, parsec, pointedlist
     , QuickCheck, random, regex-base, regex-tdfa, safe, semigroups
     , split, tasty, tasty-hunit, tasty-quickcheck, text, time
     , transformers-base, unix-compat, unordered-containers, utf8-string
     , vty, word-trie, xdg-basedir, yi-language, yi-rope
     }:
     mkDerivation {
       pname = "yi";
       version = "0.11.1";
       sha256 = "15m1wwrxmszl930az79lpgyz5rxg72gy8vi17ibpac1cszfdx192";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         binary Cabal cautious-file data-default dlist dynamic-state dyre
         exceptions filepath glib gtk hashable hint lens mtl oo-prototypes
         pango parsec pointedlist QuickCheck random regex-base regex-tdfa
         safe semigroups split text time transformers-base unix-compat
         unordered-containers utf8-string vty word-trie xdg-basedir
         yi-language yi-rope
       ];
       testDepends = [
         filepath HUnit lens QuickCheck semigroups tasty tasty-hunit
         tasty-quickcheck text yi-language yi-rope
       ];
       configureFlags = "-fpango -fvty";
       homepage = "http://haskell.org/haskellwiki/Yi";
       description = "The Haskell-Scriptable Editor";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "yi-contrib" = callPackage
    ({ mkDerivation, filepath, lens, mtl, oo-prototypes, split, text
     , time, transformers-base, yi, yi-language, yi-rope
     }:
     mkDerivation {
       pname = "yi-contrib";
       version = "0.10.1";
       sha256 = "053hsahkxwg2mnf3h4j95gj18x5791dqqji43l310i4l7mliw91k";
       buildDepends = [
         filepath lens mtl oo-prototypes split text time transformers-base
         yi yi-language yi-rope
       ];
       homepage = "http://haskell.org/haskellwiki/Yi";
       description = "Add-ons to Yi, the Haskell-Scriptable Editor";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "yi-emacs-colours" = callPackage
    ({ mkDerivation, split, yi-language }:
     mkDerivation {
       pname = "yi-emacs-colours";
       version = "0.1.0.1";
       sha256 = "1kbds9s0r67bdvigjk0c58slbifnddp6ppv4jrgv6493pylp78qv";
       buildDepends = [ split yi-language ];
       homepage = "https://github.com/Fuuzetsu/yi-emacs-colours";
       description = "Simple mapping from colour names used in emacs to Color";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "yi-fuzzy-open" = callPackage
    ({ mkDerivation, binary, data-default, filepath, mtl, text
     , transformers-base, vector, yi, yi-language, yi-rope
     }:
     mkDerivation {
       pname = "yi-fuzzy-open";
       version = "0.1.0";
       sha256 = "03y7ddas8w380asx4ldafp1r3h4nlyjky7n4n5sdyvwbi0rix1gc";
       buildDepends = [
         binary data-default filepath mtl text transformers-base vector yi
         yi-language yi-rope
       ];
       homepage = "https://github.com/yi-editor/yi-fuzzy-open";
       description = "Fuzzy open plugin for Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "yi-gtk" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "yi-gtk";
       version = "0.3";
       sha256 = "1lgdzrxq3g24wy658ydknb98isyksdknn2bfdzsfi68rnij6z6nz";
       homepage = "http://haskell.org/haskellwiki/Yi";
       description = "The Haskell-Scriptable Editor, helper package";
       license = "GPL";
     }) {};

  "yi-language" = callPackage
    ({ mkDerivation, alex, binary, data-default, derive, filepath
     , hashable, hspec, lens, oo-prototypes, pointedlist, QuickCheck
     , regex-base, regex-tdfa, transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "yi-language";
       version = "0.1.0.8";
       sha256 = "1lzn1yswrh72lqvc5xcna2xjv5zs3x1mzc1ijkqjl84nvqcabj60";
       buildDepends = [
         binary data-default derive hashable lens oo-prototypes pointedlist
         regex-base regex-tdfa transformers-base unordered-containers
       ];
       testDepends = [
         binary data-default derive filepath hashable hspec lens pointedlist
         QuickCheck regex-base regex-tdfa transformers-base
         unordered-containers
       ];
       buildTools = [ alex ];
       homepage = "https://github.com/yi-editor/yi-language";
       description = "Collection of language-related Yi libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "yi-monokai" = callPackage
    ({ mkDerivation, yi }:
     mkDerivation {
       pname = "yi-monokai";
       version = "0.1.1.2";
       sha256 = "1nghfyiy8jdz144nbw0c2cdy8n6xyjmk31g6z24jk8dij7iwb60l";
       buildDepends = [ yi ];
       homepage = "https://github.com/Fuuzetsu/yi-monokai";
       description = "Monokai colour theme for the Yi text editor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yi-rope" = callPackage
    ({ mkDerivation, binary, charsetdetect-ae, data-default, deepseq
     , fingertree, hspec, QuickCheck, quickcheck-instances, text
     , text-icu
     }:
     mkDerivation {
       pname = "yi-rope";
       version = "0.7.0.0";
       sha256 = "123p0m31h8qa53jl2sd646s1hrs5qnb7y82y7bzgg2zny4qqw9a2";
       buildDepends = [
         binary charsetdetect-ae data-default deepseq fingertree text
         text-icu
       ];
       testDepends = [ hspec QuickCheck quickcheck-instances text ];
       description = "A rope data structure used by Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "yi-snippet" = callPackage
    ({ mkDerivation, yi, yi-rope }:
     mkDerivation {
       pname = "yi-snippet";
       version = "0.1.0.0";
       sha256 = "0qbn5x7lbvb9h6gdqgvldzyy7z5y5aa9a02ss48zkccss5p6939d";
       buildDepends = [ yi yi-rope ];
       homepage = "https://github.com/yi-editor/yi-snippet";
       description = "Snippet support for Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};

  "yi-spolsky" = callPackage
    ({ mkDerivation, yi }:
     mkDerivation {
       pname = "yi-spolsky";
       version = "0.1";
       sha256 = "152ys2x416322c13nxmi25wpilq0ddd6hj36mr25jaacf1qszv6q";
       buildDepends = [ yi ];
       homepage = "https://github.com/melrief/yi-spolsky";
       description = "Spolsky colour theme for the Yi text editor";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yi-vty" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "yi-vty";
       version = "0.3";
       sha256 = "01jp8xcxq9a1s6fp4yivnvr5a48svjir70yl0dhhwil0l3m9v9c9";
       homepage = "http://haskell.org/haskellwiki/Yi";
       description = "The Haskell-Scriptable Editor, helper package";
       license = "GPL";
     }) {};

  "yices" = callPackage
    ({ mkDerivation, parsec }:
     mkDerivation {
       pname = "yices";
       version = "0.0.0.12";
       sha256 = "1k3q789dapk0c311x72w4r008rnbfz3cvajahxq208gy8iyjx9iz";
       buildDepends = [ parsec ];
       description = "Haskell programming interface to Yices SMT solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yices-easy" = callPackage
    ({ mkDerivation, bindings-yices, transformers }:
     mkDerivation {
       pname = "yices-easy";
       version = "0.1";
       sha256 = "13nl3isf8npqmgsa7mc7713g7y0nk33a654rm1qnn1s6zyz41v70";
       buildDepends = [ bindings-yices transformers ];
       homepage = "http://www.ugcs.caltech.edu/~keegan/haskell/yices-easy/";
       description = "Simple interface to the Yices SMT (SAT modulo theories) solver";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yices-painless" = callPackage
    ({ mkDerivation, gmp, strict-concurrency, vector, yices }:
     mkDerivation {
       pname = "yices-painless";
       version = "0.1.2";
       sha256 = "1q0hxzvhd9p0qb0fyps6hn06nhqcwldxyfljk8880il17ky92p3h";
       buildDepends = [ strict-concurrency vector ];
       extraLibraries = [ gmp yices ];
       homepage = "http://code.haskell.org/~dons/code/yices-painless";
       description = "An embedded language for programming the Yices SMT solver";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) yices; };

  "yjftp" = callPackage
    ({ mkDerivation, ftphs, haskeline, hsConfigure, mtl }:
     mkDerivation {
       pname = "yjftp";
       version = "0.3.6.5";
       sha256 = "11iwz7mrx3f72i3d4l9zvqb8g0722aj00s7h7wa06y4l69rfnj6m";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ftphs haskeline hsConfigure mtl ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/yjftp/index.xhtml";
       description = "CUI FTP client like 'ftp', 'ncftp'";
       license = "GPL";
     }) {};

  "yjftp-libs" = callPackage
    ({ mkDerivation, ftphs, mtl }:
     mkDerivation {
       pname = "yjftp-libs";
       version = "0.0.2";
       sha256 = "1rlw9i1a034lg7gc60fkxjh6kc5yrbapc745gwl1ddi2wisy3h24";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ ftphs mtl ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/yjftp/index.xhtml";
       description = "CUI FTP client like 'ftp', 'ncftp'";
       license = "GPL";
     }) {};

  "yjsvg" = callPackage
    ({ mkDerivation, HaXml }:
     mkDerivation {
       pname = "yjsvg";
       version = "0.1.18";
       sha256 = "1k9shfj53vqg1wgm06k2729md0q5y252sypjkx245sn3x0a7ffji";
       buildDepends = [ HaXml ];
       description = "make SVG string from Haskell data";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yjtools" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "yjtools";
       version = "0.9.18";
       sha256 = "13zbq37p2prbyxq1wply7qqpc2wwsic78wzcgbc430nfrrpiq4lv";
       homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
       description = "some tools for Monad, List, Tuple and so on";
       license = "LGPL";
     }) {};

  "yocto" = callPackage
    ({ mkDerivation, parsec, QuickCheck, quickcheck-instances }:
     mkDerivation {
       pname = "yocto";
       version = "1.0.1";
       sha256 = "0i92yraawhn6qkw23wm5vmgwcjgy9pis684jyq8mkawbw0nv3q9a";
       buildDepends = [ parsec ];
       testDepends = [ parsec QuickCheck quickcheck-instances ];
       homepage = "https://github.com/ajg/yocto";
       description = "A Minimal JSON Parser & Printer for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};

  "yoko" = callPackage
    ({ mkDerivation, bifunctors, invariant, kinds, mtl, records
     , semigroups, th-sccs, type-cereal, type-digits, type-equality
     , type-functions, type-ord, type-ord-spine-cereal, type-spine
     }:
     mkDerivation {
       pname = "yoko";
       version = "2.0";
       sha256 = "07ivcx6xbmjpyj7053fp151k47y7pllwjddxxrwayrlx2qx456z6";
       buildDepends = [
         bifunctors invariant kinds mtl records semigroups th-sccs
         type-cereal type-digits type-equality type-functions type-ord
         type-ord-spine-cereal type-spine
       ];
       description = "Generic Programming with Disbanded Data Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "york-lava" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "york-lava";
       version = "0.2";
       sha256 = "1rpkxlfvk84zl965ik5bpplzcskd96wsnicp66ixnfs9bkqfj7qb";
       homepage = "http://www.cs.york.ac.uk/fp/reduceron/";
       description = "A library for digital circuit description";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "youtube" = callPackage
    ({ mkDerivation, utility-ht }:
     mkDerivation {
       pname = "youtube";
       version = "0.2.0.1";
       sha256 = "0n33778aflcdzdkc6p0qaxdqvmyzdyg0r6rg4q2wh0g74m6pl2m4";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ utility-ht ];
       description = "Upload video to YouTube via YouTube API";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "yql" = callPackage
    ({ mkDerivation, aeson, base64-bytestring, cryptohash, data-default
     , ecma262, exceptions, hslogger, http-conduit, http-types, hxt
     , lens, opendatatable, parsec, SHA, text, transformers
     , unordered-containers, uri-template, utf8-string, uuid, vector
     , zlib
     }:
     mkDerivation {
       pname = "yql";
       version = "0.0.0";
       sha256 = "1qwk78adndk2m48inxklqj1rc58wx4jrdim60gwy7ax2d3w92pg6";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         aeson base64-bytestring cryptohash data-default ecma262 exceptions
         hslogger http-conduit http-types hxt lens opendatatable parsec SHA
         text transformers unordered-containers uri-template utf8-string
         uuid vector zlib
       ];
       homepage = "https://github.com/fabianbergmark/YQL";
       description = "A YQL engine to execute Open Data Tables";
       license = stdenv.lib.licenses.bsd2;
     }) {};

  "yst" = callPackage
    ({ mkDerivation, aeson, csv, filepath, HDBC, HDBC-sqlite3
     , HStringTemplate, pandoc, parsec, scientific, split, text, time
     , unordered-containers, xhtml, yaml
     }:
     mkDerivation {
       pname = "yst";
       version = "0.4.1.1";
       sha256 = "0i69pjzrxc330kfy3nvhzf59640h4p9w5lxpjlr31xbl7w1qqx12";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         aeson csv filepath HDBC HDBC-sqlite3 HStringTemplate pandoc parsec
         scientific split text time unordered-containers xhtml yaml
       ];
       homepage = "http://github.com/jgm/yst";
       description = "Builds a static website from templates and data in YAML or CSV files";
       license = "GPL";
     }) {};

  "yuiGrid" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "yuiGrid";
       version = "0.1";
       sha256 = "005l0rr9l0l81706drq57nww4h0j4rw8n0ncpnkdb139941gywzq";
       description = "Grids defined by layout hints and implemented on top of Yahoo grids";
       license = "unknown";
     }) {};

  "yuuko" = callPackage
    ({ mkDerivation, curl, deepseq, filepath, mtl, network, parsec }:
     mkDerivation {
       pname = "yuuko";
       version = "2010.11.28";
       sha256 = "01pf0mg6lgm34src1mfz3qj41vyhmvi50yjyv72zwamd0g7sx374";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ curl deepseq filepath mtl network parsec ];
       homepage = "http://github.com/nfjinjing/yuuko";
       description = "A transcendental HTML parser gently wrapping the HXT library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "z3" = callPackage
    ({ mkDerivation, gomp, mtl, z3 }:
     mkDerivation {
       pname = "z3";
       version = "0.3.2";
       sha256 = "1qlklpzpjfbqjgzzkyv2j06ps42brria4px2ir2fvwgdjfzxha4n";
       buildDepends = [ mtl ];
       extraLibraries = [ gomp z3 ];
       homepage = "http://bitbucket.org/iago/z3-haskell";
       description = "Bindings for the Z3 Theorem Prover";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) z3; };

  "zampolit" = callPackage
    ({ mkDerivation, cmdargs, filepath, HSH, MissingH, parsec, time }:
     mkDerivation {
       pname = "zampolit";
       version = "0.3";
       sha256 = "1bhp98bn41lqxdl48xxcb4b4fknva2aigq5gxffcha535igdmdy3";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ cmdargs filepath HSH MissingH parsec time ];
       homepage = "https://github.com/briansniffen/zampolit";
       description = "A tool for checking how much work is done on group projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zasni-gerna" = callPackage
    ({ mkDerivation, papillon }:
     mkDerivation {
       pname = "zasni-gerna";
       version = "0.0.7";
       sha256 = "1zl2kcd0hr021xl6pjvvxwxvmpb02cq04ck39qkwil56vannnksw";
       buildDepends = [ papillon ];
       homepage = "https://skami.iocikun.jp/haskell/packages/zasni-gerna";
       description = "lojban parser (zasni gerna)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zcache" = callPackage
    ({ mkDerivation, mersenne-random-pure64 }:
     mkDerivation {
       pname = "zcache";
       version = "0.0.0";
       sha256 = "10j0fwf58ig0j44f7p57zr8by6i9j1agnjzk6cs65iimm79m9avb";
       buildDepends = [ mersenne-random-pure64 ];
       homepage = "https://patch-tag.com/r/salazar/zcache/";
       description = "Zobrist keys for game state tracking";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zenc" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "zenc";
       version = "0.1.1";
       sha256 = "0p0h7vz14k9v8gsnpkb9ca61i1k67vvsjg0bzy0ag4m20k94zlb2";
       description = "GHC style name Z-encoding and Z-decoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zendesk-api" = callPackage
    ({ mkDerivation, aeson, case-insensitive, conduit, connection
     , data-default, failure, http-client, http-client-tls, http-conduit
     , http-types, monad-logger, mtl, pem, text, time, tls, transformers
     , unordered-containers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "zendesk-api";
       version = "0.1.0.0";
       sha256 = "1x6801i5rw6a0nfdihi04bmka8qww9c77r7ygbhp3zx1hqdpdmmc";
       buildDepends = [
         aeson case-insensitive conduit connection data-default failure
         http-client http-client-tls http-conduit http-types monad-logger
         mtl pem text time tls transformers unordered-containers x509
         x509-store x509-validation
       ];
       homepage = "https://github.com/VictorDenisov/zendesk-api";
       description = "Zendesk API for Haskell programming language";
       license = stdenv.lib.licenses.mit;
     }) {};

  "zeno" = callPackage
    ({ mkDerivation, ghc-paths, mtl, parallel, random, text
     , transformers
     }:
     mkDerivation {
       pname = "zeno";
       version = "0.2.0.1";
       sha256 = "03jwhgi9n9iv7zpn8nwkdyvsybsksnhsji8k2ma9rzayk36aba6v";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ ghc-paths mtl parallel random text transformers ];
       description = "An automated proof system for Haskell programs";
       license = stdenv.lib.licenses.mit;
     }) {};

  "zeromq-haskell" = callPackage
    ({ mkDerivation, QuickCheck, test-framework
     , test-framework-quickcheck2, zeromq
     }:
     mkDerivation {
       pname = "zeromq-haskell";
       version = "0.8.4";
       sha256 = "0lvjszi08r5wm5ch03153y7lir6cdgqr2gnhq45j4b0kid6gkpv3";
       testDepends = [
         QuickCheck test-framework test-framework-quickcheck2
       ];
       extraLibraries = [ zeromq ];
       homepage = "http://github.com/twittner/zeromq-haskell/";
       description = "Bindings to ZeroMQ 2.1.x";
       license = stdenv.lib.licenses.mit;
     }) {};

  "zeromq3-conduit" = callPackage
    ({ mkDerivation, conduit, lifted-base, monad-control, mtl
     , resourcet, transformers, zeromq3-haskell
     }:
     mkDerivation {
       pname = "zeromq3-conduit";
       version = "0.1.0.0";
       sha256 = "1n6xl5izdkbl2mb4msryrcasg08prjbgzwilz4b7yi1g79y1yf77";
       buildDepends = [
         conduit lifted-base monad-control mtl resourcet transformers
         zeromq3-haskell
       ];
       homepage = "https://github.com/NicolasT/zeromq3-conduit";
       description = "Conduit bindings for zeromq3-haskell";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "zeromq3-haskell" = callPackage
    ({ mkDerivation, ansi-terminal, async, checkers
     , MonadCatchIO-transformers, QuickCheck, semigroups, transformers
     , zeromq
     }:
     mkDerivation {
       pname = "zeromq3-haskell";
       version = "0.5.2";
       sha256 = "1ky92qwyk27qsxnvaj0mc9yyhk7g19ry2nq55666ayahc899z213";
       buildDepends = [
         async MonadCatchIO-transformers semigroups transformers
       ];
       testDepends = [
         ansi-terminal async checkers MonadCatchIO-transformers QuickCheck
         transformers
       ];
       pkgconfigDepends = [ zeromq ];
       homepage = "http://github.com/twittner/zeromq-haskell/";
       description = "Bindings to ZeroMQ 3.x";
       license = stdenv.lib.licenses.mit;
     }) {};

  "zeromq4-haskell" = callPackage
    ({ mkDerivation, async, exceptions, QuickCheck, semigroups, tasty
     , tasty-hunit, tasty-quickcheck, transformers, zeromq
     }:
     mkDerivation {
       pname = "zeromq4-haskell";
       version = "0.6.2";
       sha256 = "07dbsapzc4hqq9sg63v4wyjad13sqh9zsx3ckwc5hg5z6vknpafb";
       buildDepends = [ async exceptions semigroups transformers ];
       testDepends = [
         async QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       pkgconfigDepends = [ zeromq ];
       homepage = "http://github.com/twittner/zeromq-haskell/";
       description = "Bindings to ZeroMQ 4.x";
       license = stdenv.lib.licenses.mit;
     }) {};

  "zeroth" = callPackage
    ({ mkDerivation, Cabal, derive, filepath, haskell-src-exts
     , hskeleton, monoid-record, syb
     }:
     mkDerivation {
       pname = "zeroth";
       version = "2009.6.23.3";
       sha256 = "10ilsxlha4l7c4z3jl6lykcjns6igyk2qma2a03yzpvgz7ijy4c0";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         Cabal derive filepath haskell-src-exts hskeleton monoid-record syb
       ];
       description = "ZeroTH - remove unnecessary TH dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zigbee-znet25" = callPackage
    ({ mkDerivation, cereal, MissingH, mtl, QuickCheck, random
     , transformers
     }:
     mkDerivation {
       pname = "zigbee-znet25";
       version = "0.1.1.0";
       sha256 = "0kv52f7zhgd2x44a2dg89jrsxiis73m8884f4zmxdbznhq1prqf5";
       buildDepends = [ cereal MissingH mtl transformers ];
       testDepends = [ mtl QuickCheck random ];
       homepage = "https://github.com/djoyner/zigbee-znet25";
       description = "XBee ZNet 2.5 (ZigBee) wireless modem communications";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zip-archive" = callPackage
    ({ mkDerivation, binary, digest, filepath, HUnit, mtl, text, time
     , zlib
     }:
     mkDerivation {
       pname = "zip-archive";
       version = "0.2.3.5";
       sha256 = "0qa3qvaj0xkh4qw7s96rkbdmkyhnql6g92yplm7m6n7z7nxrcs18";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ binary digest filepath mtl text time zlib ];
       testDepends = [ HUnit time ];
       homepage = "http://github.com/jgm/zip-archive";
       description = "Library for creating and modifying zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zip-conduit" = callPackage
    ({ mkDerivation, cereal, conduit, digest, filepath, HUnit, mtl
     , temporary, test-framework, test-framework-hunit, time
     , transformers, utf8-string, zlib-conduit
     }:
     mkDerivation {
       pname = "zip-conduit";
       version = "0.2.2.1";
       sha256 = "19d1z4pynlfilhyna4c9jl1j21l624b97s3p1xqwjll2z8v3ymzi";
       buildDepends = [
         cereal conduit digest filepath mtl time transformers utf8-string
         zlib-conduit
       ];
       testDepends = [
         conduit filepath HUnit mtl temporary test-framework
         test-framework-hunit time
       ];
       homepage = "https://github.com/tymmym/zip-conduit";
       description = "Working with zip archives via conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zipedit" = callPackage
    ({ mkDerivation, mtl }:
     mkDerivation {
       pname = "zipedit";
       version = "0.2.3";
       sha256 = "17msh3gwylmsiabyz5x05ir2xh8h904kbp5isnvbf0z4kzfv33cr";
       buildDepends = [ mtl ];
       homepage = "http://code.haskell.org/~byorgey/code/zipedit";
       description = "Create simple list editor interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zipper" = callPackage
    ({ mkDerivation, multirec }:
     mkDerivation {
       pname = "zipper";
       version = "0.4.2";
       sha256 = "1r8092amq5w9gl5szycl1r7wx87xnmkcapdzcwfa4c3pvxrhjy44";
       buildDepends = [ multirec ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/Multirec";
       description = "Generic zipper for families of recursive datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zippers" = callPackage
    ({ mkDerivation, doctest, filepath, lens, profunctors
     , semigroupoids
     }:
     mkDerivation {
       pname = "zippers";
       version = "0.2";
       sha256 = "1rlf01dc6dcy9sx89npsisdz1yg9v4h2byd6ms602bxnmjllm1ls";
       buildDepends = [ lens profunctors semigroupoids ];
       testDepends = [ doctest filepath ];
       homepage = "http://github.com/ekmett/zippers/";
       description = "Traversal based zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zippo" = callPackage
    ({ mkDerivation, mtl, yall }:
     mkDerivation {
       pname = "zippo";
       version = "0.3";
       sha256 = "1ihdird5yryfb2ki9bwwchj8bxjcmmgjkp3hl605zzhi2lz3awx2";
       buildDepends = [ mtl yall ];
       homepage = "http://brandon.si/code/zippo/";
       description = "A simple lens-based, generic, heterogenous, type-checked zipper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zlib" = callPackage
    ({ mkDerivation, zlib }:
     mkDerivation {
       pname = "zlib";
       version = "0.5.4.2";
       sha256 = "15hhsk7z3gvm7sz2ic2z1ca5c6rpsln2rr391mdbm1bxlzc1gmkm";
       extraLibraries = [ zlib ];
       description = "Compression and decompression in the gzip and zlib formats";
       license = stdenv.lib.licenses.bsd3;
     }) { inherit (pkgs) zlib; };

  "zlib-bindings" = callPackage
    ({ mkDerivation, hspec, QuickCheck, zlib }:
     mkDerivation {
       pname = "zlib-bindings";
       version = "0.1.1.5";
       sha256 = "02ciywlz4wdlymgc3jsnicz9kzvymjw1www2163gxidnz4wb8fy8";
       buildDepends = [ zlib ];
       testDepends = [ hspec QuickCheck zlib ];
       homepage = "http://github.com/snoyberg/zlib-bindings";
       description = "Low-level bindings to the zlib package. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zlib-conduit" = callPackage
    ({ mkDerivation, conduit }:
     mkDerivation {
       pname = "zlib-conduit";
       version = "1.1.0";
       sha256 = "1b22mca8bbg7f84h8y0qsb5ckzg2dw1b26y27x7b7xdxqbwpz93a";
       buildDepends = [ conduit ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Streaming compression/decompression via conduits. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zlib-enum" = callPackage
    ({ mkDerivation, enumerator, transformers, zlib-bindings }:
     mkDerivation {
       pname = "zlib-enum";
       version = "0.2.3.1";
       sha256 = "1nfczminxafzk69ry1sqkj1ha0jlv3l9ak10yk205snfhpmcjgg4";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ enumerator transformers zlib-bindings ];
       homepage = "http://github.com/maltem/zlib-enum";
       description = "Enumerator interface for zlib compression";
       license = stdenv.lib.licenses.mit;
     }) {};

  "zlib-lens" = callPackage
    ({ mkDerivation, lens, zlib }:
     mkDerivation {
       pname = "zlib-lens";
       version = "0.1";
       sha256 = "1sdvdfw2kimi7pxmv4xdha9q19sglfhaxacypfz3za1rajk0bfzx";
       buildDepends = [ lens zlib ];
       homepage = "lens.github.io";
       description = "Lenses for zlib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zmcat" = callPackage
    ({ mkDerivation, zeromq3-haskell }:
     mkDerivation {
       pname = "zmcat";
       version = "0.3";
       sha256 = "0lg5fn89wj5blbp2gh760ibxb2zz9f11jnwicfsmsayra51micip";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ zeromq3-haskell ];
       homepage = "https://github.com/lucasdicioccio/zmcat";
       description = "Command-line tool for ZeroMQ";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zmidi-core" = callPackage
    ({ mkDerivation, binary }:
     mkDerivation {
       pname = "zmidi-core";
       version = "0.7.0";
       sha256 = "0v8zcybr46rcdpvsji0dzr78skj79jp8l9sd49z6c7s5sddzjm9l";
       buildDepends = [ binary ];
       homepage = "http://code.google.com/p/copperbox/";
       description = "Read and write MIDI files";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zmidi-score" = callPackage
    ({ mkDerivation, aeson, binary, data-ordlist, deepseq
     , deepseq-generics, filepath, mtl, parallel-io, text, zmidi-core
     }:
     mkDerivation {
       pname = "zmidi-score";
       version = "0.3.0.0";
       sha256 = "0zhh6bdpbng69sajxdvj2mnd385gc8yyli3jzyjfxp0wr0hv3biv";
       buildDepends = [
         aeson binary data-ordlist deepseq deepseq-generics filepath mtl
         parallel-io text zmidi-core
       ];
       homepage = "https://bitbucket.org/bash/zmidi-score";
       description = "Representing MIDI a simple score";
       license = stdenv.lib.licenses.gpl3;
     }) {};

  "zmqat" = callPackage
    ({ mkDerivation, utf8-string, zeromq-haskell }:
     mkDerivation {
       pname = "zmqat";
       version = "0.1.0";
       sha256 = "1p3bxx2svib27klag6ri2964gqn4alk6jsw8fydrg72b72kl1ji6";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ utf8-string zeromq-haskell ];
       description = "A socat-like tool for zeromq socket library";
       license = "unknown";
     }) {};

  "zoneinfo" = callPackage
    ({ mkDerivation, time }:
     mkDerivation {
       pname = "zoneinfo";
       version = "0.5";
       sha256 = "1n27j8ca79a1ijn7k7dp61kjz62i6zfzlns8n0kwgyvpx413ws8y";
       buildDepends = [ time ];
       description = "ZoneInfo library";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zoom" = callPackage
    ({ mkDerivation, filepath, hamlet, hint, mtl, text }:
     mkDerivation {
       pname = "zoom";
       version = "0.1.0.1";
       sha256 = "0zsr3k4c6da1l5cw3laj2snfszm4g0bz76hj2bjj61yrwmc99vnl";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [ filepath hamlet hint mtl text ];
       homepage = "http://github.com/iand675/Zoom";
       description = "A rake/thor-like task runner written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zoom-cache" = callPackage
    ({ mkDerivation, blaze-builder, data-default, iteratee
     , iteratee-compress, ListLike, MonadCatchIO-transformers, mtl
     , QuickCheck, random, test-framework, test-framework-quickcheck2
     , time, transformers, type-level, ui-command, zlib
     }:
     mkDerivation {
       pname = "zoom-cache";
       version = "1.2.1.6";
       sha256 = "0761xpfmmm309r6r44ax7x2zs49dskygl2c09x2kpxpfr7rr3k5f";
       isLibrary = true;
       isExecutable = true;
       buildDepends = [
         blaze-builder data-default iteratee iteratee-compress ListLike
         MonadCatchIO-transformers mtl QuickCheck time transformers
         type-level ui-command zlib
       ];
       testDepends = [
         blaze-builder iteratee QuickCheck random test-framework
         test-framework-quickcheck2 transformers type-level
       ];
       description = "A streamable, seekable, zoomable cache file format";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zoom-cache-pcm" = callPackage
    ({ mkDerivation, blaze-builder, iteratee, ListLike, mtl, type-level
     , zoom-cache
     }:
     mkDerivation {
       pname = "zoom-cache-pcm";
       version = "0.3.0.1";
       sha256 = "0r676wb4q7wmin3liqh525w43pgdf0gmcfx2ccpbvc4ahain9vyq";
       buildDepends = [
         blaze-builder iteratee ListLike mtl type-level zoom-cache
       ];
       description = "Library for zoom-cache PCM audio codecs";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zoom-cache-sndfile" = callPackage
    ({ mkDerivation, data-default, hsndfile, hsndfile-vector, mtl
     , ui-command, vector, zoom-cache, zoom-cache-pcm
     }:
     mkDerivation {
       pname = "zoom-cache-sndfile";
       version = "1.1.0.1";
       sha256 = "0722wy6rqbx4gajn3sp946scganr2arhinxrqyq5fvvsbdxacwhz";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [
         data-default hsndfile hsndfile-vector mtl ui-command vector
         zoom-cache zoom-cache-pcm
       ];
       description = "Tools for generating zoom-cache-pcm files";
       license = stdenv.lib.licenses.lgpl21;
     }) {};

  "zot" = callPackage
    ({ mkDerivation, monads-tf }:
     mkDerivation {
       pname = "zot";
       version = "0.0.2";
       sha256 = "12wgkrlvhby0gy6kngjwyx468yarpgkiwy51v6zb8jhx79mhidq3";
       editedCabalFile = "0h1sb5bmdv2bh1n0vf5254kvf569bz8g6f7qar55p4r66kdwwp1j";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ monads-tf ];
       description = "Zot language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "zsh-battery" = callPackage
    ({ mkDerivation, filepath, mtl }:
     mkDerivation {
       pname = "zsh-battery";
       version = "0.2";
       sha256 = "04d812dcvkbjg2y0q4q855r6g9nr2k54k2jhnbksbpnxkz0cmaxr";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath mtl ];
       homepage = "https://github.com/MasseR/zsh-battery";
       description = "Ascii bars representing battery status";
       license = stdenv.lib.licenses.bsd3;
     }) {};

  "ztail" = callPackage
    ({ mkDerivation, filepath, hinotify, regex-compat, time }:
     mkDerivation {
       pname = "ztail";
       version = "1.1";
       sha256 = "11x6whwyfgdgda5bhdck0k12inzix8cjfm42hh09p703nalk07nq";
       isLibrary = false;
       isExecutable = true;
       buildDepends = [ filepath hinotify regex-compat time ];
       description = "Multi-file, colored, filtered log tailer";
       license = stdenv.lib.licenses.bsd3;
     }) {};

}
